#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 16
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

.L_402da0:

            lea RSI,QWORD PTR [RIP+.L_4381ef]
            sub RSP,8
            mov EDI,1
            call .L_43f6e0
.L_402db5:

            lea RSI,QWORD PTR [RIP+.L_450f60-101672]
            sub RSP,8
            mov EDI,1
            call .L_43f6e0
.L_402dca:

            push R12
            push RBP
            or RBP,-1
            push RBX
.L_402dd2:

            xor EAX,EAX
            mov RCX,RBP
            mov R12,RDI

            repne scasb AL,BYTE PTR [RDI]

            mov RAX,RCX
            not RAX
            lea RBX,QWORD PTR [RAX+RBP*1]
.L_402de6:

            test RBX,RBX
            je .L_402e19

            xor EAX,EAX
            mov RDI,R12
            mov RCX,RBP

            repne scasb AL,BYTE PTR [RDI]

            mov RSI,R12
            mov EDI,2
            mov RAX,RCX
            not RAX
            lea RDX,QWORD PTR [RAX-1]
            call write@PLT

            test RAX,RAX
            jle .L_402e19

            add R12,RAX
            sub RBX,RAX
            jmp .L_402de6
.L_402e19:

            pop RBX
.L_402e1a:

            pop RBP
            pop R12
            ret 
.L_402e1e:

            nop
            nop
#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_402e24:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_450f64]
            call fopen@PLT

            test RAX,RAX
            je .L_402ea8

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_402ecf

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_402eb2

            mov RSI,RBP
            mov RDI,R12
            call .L_403000

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_402ea2:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_402ea8:

            mov EDI,1
            call exit@PLT
.L_402eb2:

            lea RSI,QWORD PTR [RIP+.L_450f76]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,3
            call exit@PLT
.L_402ecf:

            lea RSI,QWORD PTR [RIP+.L_450f67]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,2
            call exit@PLT
.L_402eec:

            nop
            nop
            nop
            nop
.L_402f20:

            ret 
.L_402f22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402f30:

            push RBP
            mov EAX,OFFSET 373392
            cmp RAX,OFFSET 373392
            mov RBP,RSP
            je .L_402f58

            mov EAX,0
            test RAX,RAX
            je .L_402f58

            pop RBP
            mov EDI,OFFSET 373392
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402f58:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402f60:

            mov ESI,OFFSET 373392
            push RBP
            sub RSI,OFFSET 373392
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_402f98

            mov EAX,0
            test RAX,RAX
            je .L_402f98

            pop RBP
            mov EDI,OFFSET 373392
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402f98:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402fd0:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_402f60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402fe0:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RSI+8],0
            ret 
.L_402ff3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403000:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,56
.L_403010:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
.L_403020:

            call .L_403b90

            mov RBX,RAX
            mov RDI,RAX
            call .L_405820

            mov RDI,RBX
            call .L_40aae0

            lea RSI,QWORD PTR [RSP+16]
            lea RCX,QWORD PTR [RIP+.L_402fe0]
            xor R8D,R8D
            xor EDX,EDX
            mov RDI,RBX
            mov QWORD PTR [RSP+16],R12
            mov QWORD PTR [RSP+24],RBP
            xor R12D,R12D
            xor EBP,EBP
            call .L_405220

            call getpagesize@PLT

            movsxd R13,EAX
            test R13,R13
            je .L_403089

            mov RDI,R13
            call _Znwm@PLT
.L_403075:

            mov RDX,R13
            xor ESI,ESI
            mov RDI,RAX
            mov RBP,RAX
            lea R12,QWORD PTR [RAX+R13*1]
            call memset@PLT
.L_403089:

            lea R13,QWORD PTR [RSP+8]
            sub R12,RBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403098:

            mov RSI,R13
            mov RDI,RBX
.L_40309e:

            call .L_43fa50

            test EAX,EAX
            jne .L_4030c9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4030b0:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_404160

            test RAX,RAX
            jg .L_4030b0

            cmp RAX,-30
            jne .L_403098
.L_4030c9:

            mov RDI,RBX
            call .L_43f980
.L_4030d1:

            test RBP,RBP
            je .L_4030de

            mov RDI,RBP
            call _ZdlPv@PLT
.L_4030de:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_403113

            add RSP,56
.L_4030f4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4030fb:

            test RBP,RBP
            mov RBX,RAX
            je .L_40310b

            mov RDI,RBP
            call _ZdlPv@PLT
.L_40310b:

            mov RDI,RBX
.L_40310e:

            call _Unwind_Resume@PLT
.L_403113:

            call __stack_chk_fail@PLT
.L_403118:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403120:

            mov RAX,QWORD PTR [RDI+24]
            mov RDX,RSI
            mov RSI,QWORD PTR [RDI+80]
            mov RCX,QWORD PTR [RAX+200]
            mov RDI,RAX
            jmp RCX
.L_403137:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403140:

            mov RDX,QWORD PTR [RDI+24]
            mov RAX,QWORD PTR [RDX+192]
            test RAX,RAX
            je .L_403160

            mov RSI,QWORD PTR [RDI+80]
            mov RDI,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403160:

            xor EAX,EAX
            ret 
.L_403163:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403170:

            mov RCX,QWORD PTR [RDI+24]
            cmp DWORD PTR [RCX+244],ESI
            je .L_4031d0

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov DWORD PTR [RCX+244],ESI
            mov ESI,ESI
            mov RDX,QWORD PTR [RCX+256]
            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RAX,QWORD PTR [RDX+RAX*8]
            mov R12,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RCX+232]
            test RAX,RAX
            je .L_4031d8

            mov RSI,QWORD PTR [RDI+80]
            mov RDX,R12
            mov RDI,RCX
            call RAX

            mov QWORD PTR [RBP+80],R12
            mov EBX,EAX
.L_4031bc:

            cmp EBX,EAX
            cmovle EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4031d0:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4031d8:

            mov RAX,QWORD PTR [RCX+224]
            test RAX,RAX
            je .L_40320d

            mov RSI,QWORD PTR [RDI+80]
            mov RDI,RCX
            call RAX

            mov RCX,QWORD PTR [RBP+24]
            mov EBX,EAX
.L_4031f3:

            mov RAX,QWORD PTR [RCX+192]
            mov QWORD PTR [RBP+80],R12
            test RAX,RAX
            je .L_403211

            mov RSI,R12
            mov RDI,RCX
            call RAX

            jmp .L_4031bc
.L_40320d:

            xor EBX,EBX
            jmp .L_4031f3
.L_403211:

            xor EAX,EAX
            jmp .L_4031bc
.L_403215:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403220:

            mov RDX,QWORD PTR [RDI+1032]
            xor EAX,EAX
            test RDX,RDX
            je .L_403240

            nop
            nop
.L_403230:

            mov RDX,QWORD PTR [RDX+16]
            add EAX,1
            test RDX,RDX
            jne .L_403230

            ret 
          .byte 0x66
          .byte 0x90
.L_403240:

            ret 
.L_403242:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403250:

            mov RDX,QWORD PTR [RDI+1032]
            test RDX,RDX
            setne AL
            cmp ESI,-1
            jne .L_403290

            test AL,AL
            je .L_403290

            mov RAX,QWORD PTR [RDX+16]
            test RAX,RAX
            jne .L_40327b
.L_40326f:

            mov RAX,RDX
.L_403272:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403278:

            mov RAX,RDX
.L_40327b:

            mov RDX,QWORD PTR [RAX+16]
            test RDX,RDX
            jne .L_403278

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403290:

            cmp ESI,0
            jl .L_4032ba

            jle .L_40326f

            test AL,AL
            je .L_40326f

            mov RAX,RDX
            jmp .L_4032a5
.L_4032a0:

            test RAX,RAX
            je .L_4032b8
.L_4032a5:

            sub ESI,1
            mov RAX,QWORD PTR [RAX+16]
            test ESI,ESI
            jg .L_4032a0

            jmp .L_403272
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4032b8:

            ret 
.L_4032ba:

            xor EAX,EAX
            ret 
.L_4032bd:

            nop
            nop
            nop
.L_4032c0:

            call .L_403250

            test RAX,RAX
            je .L_4032ce

            mov EAX,DWORD PTR [RAX+96]
            ret 
.L_4032ce:

            mov EAX,4294967295
            ret 
.L_4032d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4032e0:

            call .L_403250

            test RAX,RAX
            je .L_4032f0

            mov RAX,QWORD PTR [RAX+88]
            ret 
          .byte 0x90
.L_4032f0:

            xor EAX,EAX
            ret 
.L_4032f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403300:

            call .L_403250

            test RAX,RAX
            je .L_40330e

            mov RAX,QWORD PTR [RAX]
            ret 
.L_40330e:

            mov RAX,-1
            ret 
.L_403316:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403320:

            mov RAX,QWORD PTR [RDI+24]
            mov R8,QWORD PTR [RAX+216]
            test R8,R8
            je .L_403342

            mov R9,RSI
            mov ECX,EDX
            mov RSI,QWORD PTR [RDI+80]
            mov RDX,R9
            mov RDI,RAX
            jmp R8
.L_403342:

            lea RDX,QWORD PTR [RIP+.L_405388]
            sub RSP,8
            mov RDI,RAX
            or ESI,4294967295
            xor EAX,EAX
            call .L_43f5d0

            mov RAX,-25
            pop RDX
            ret 
.L_403363:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403370:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_403377:

            mov RDI,QWORD PTR [RDI+24]
            xor R12D,R12D
            mov RDX,QWORD PTR [RDI+224]
            test RDX,RDX
            je .L_4033d4

            mov ESI,DWORD PTR [RDI+240]
            test ESI,ESI
            je .L_4033d4

            xor EBX,EBX
            jmp .L_4033a7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4033a0:

            mov RDX,QWORD PTR [RDI+224]
.L_4033a7:

            mov RCX,QWORD PTR [RDI+256]
            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RCX+RAX*8]
            mov RSI,QWORD PTR [RAX+16]
            call RDX

            mov RDI,QWORD PTR [RBP+24]
            cmp R12D,EAX
            cmovg R12D,EAX
            add EBX,1
            cmp EBX,DWORD PTR [RDI+240]
            jb .L_4033a0
.L_4033d4:

            mov EAX,R12D
            pop RBX
.L_4033d8:

            pop RBP
            pop R12
            ret 
.L_4033dc:

            nop
            nop
            nop
            nop
.L_4033e0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_4033e7:

            je .L_403440

            mov RBX,RDI
            xor R12D,R12D
            nop
.L_4033f0:

            cmp BYTE PTR [RBX+169],0
            mov RBP,QWORD PTR [RBX+16]
            jne .L_403419

            mov RAX,QWORD PTR [RBX+64]
            test RAX,RAX
            je .L_403419

            mov RDI,RBX
            call RAX

            cmp R12D,EAX
            mov BYTE PTR [RBX+169],1
            cmovg R12D,EAX
.L_403419:

            mov RDI,QWORD PTR [RBX+104]
            call free@PLT

            test RBP,RBP
            mov QWORD PTR [RBX+104],0
            mov RBX,RBP
            jne .L_4033f0

            mov EAX,R12D
            pop RBX
.L_403436:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403440:

            xor R12D,R12D
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
.L_40344b:

            nop
            nop
            nop
            nop
            nop
.L_403450:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4056dd]
            mov EDX,65535
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
            call .L_443f50

            cmp EAX,-30
            mov EBX,EAX
            je .L_40349e

            xor EBX,EBX
            cmp DWORD PTR [RBP+4],32
            je .L_40349e

            mov RDI,RBP
            call .L_43f5b0

            mov RDI,QWORD PTR [RBP+1032]
            mov DWORD PTR [RBP+4],32
            call .L_4033e0

            test EAX,EAX
            cmovle EBX,EAX
.L_40349e:

            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_4034a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4034b0:

            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4056f0]
            mov RBP,RSI
            mov R12,RDX
            mov ESI,14594245
            sub RSP,8
            mov EDX,4
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_403522

            mov RAX,QWORD PTR [RBX+2472]
            mov RAX,QWORD PTR [RAX+40]
            test RAX,RAX
            je .L_403509

            add RSP,8
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp RAX
.L_403509:

            lea RDX,QWORD PTR [RIP+.L_4053c0]
            mov ESI,22
            mov RDI,RBX
            call .L_43f5d0

            mov EAX,4294967266
.L_403522:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40352d:

            nop
            nop
            nop
.L_403530:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40353a:

            test RSI,RSI
            js .L_40361c

            mov RBX,RSI
            je .L_4035ab

            mov RBP,RDI
            mov RDI,QWORD PTR [RDI+24]
            mov RAX,QWORD PTR [RDI+208]
            test RAX,RAX
            je .L_4035c0

            xor R12D,R12D
            mov R13D,1073741824
            jmp .L_40357e
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403570:

            mov RDI,QWORD PTR [RBP+24]
            sub RBX,RAX
            mov RAX,QWORD PTR [RDI+208]
.L_40357e:

            cmp RBX,1073741824
            mov RDX,R13
            mov RSI,QWORD PTR [RBP+80]
            cmovle RDX,RBX
            call RAX

            add R12,RAX
            test RAX,RAX
            je .L_403600

            cmp RBX,RAX
            je .L_403600

            cmp RBX,RAX
            jge .L_403570
.L_4035a4:

            mov RBX,-30
.L_4035ab:

            add RSP,8
.L_4035af:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4035c0:

            mov RAX,QWORD PTR [RDI+216]
            test RAX,RAX
            je .L_403618

            cmp RSI,65536
            jle .L_403618

            mov R12,QWORD PTR [RBP]
            mov RSI,QWORD PTR [RBP+80]
            mov ECX,1
            mov RDX,RBX
            call RAX

            add R12,RBX
            cmp R12,RAX
            jne .L_4035a4

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403600:

            add RSP,8
            mov RBX,R12
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403618:

            xor EBX,EBX
            jmp .L_4035ab
.L_40361c:

            lea RSI,QWORD PTR [RIP+.L_405708]
            mov EDI,1
            call .L_43f6e0
.L_40362d:

            nop
            nop
            nop
.L_403630:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_403647:

            mov RDX,QWORD PTR [RDI+128]
.L_40364e:

            test RDX,RDX
            je .L_40365c

            cmp R14,RDX
            jbe .L_4038f0
.L_40365c:

            mov RBP,QWORD PTR [RBX+160]
            mov R12,QWORD PTR [RBX+104]
            lea RCX,QWORD PTR [RBP+RDX*1]
            cmp QWORD PTR [RBX+144],RCX
            jb .L_40367e

            cmp R14,RCX
            jbe .L_403902
.L_40367e:

            mov RSI,QWORD PTR [RBX+120]
            cmp RSI,R12
            jbe .L_4036a4

            mov RAX,QWORD PTR [RBX+112]
            lea RCX,QWORD PTR [RSI+R14*1]
            add RAX,R12
            cmp RCX,RAX
            jbe .L_4036a4

            test RDX,RDX
            jne .L_4038b0
.L_4036a0:

            mov QWORD PTR [RBX+120],R12
.L_4036a4:

            test RBP,RBP
            jne .L_4037c8

            cmp BYTE PTR [RBX+168],0
            jne .L_40393b

            lea RSI,QWORD PTR [RBX+136]
            mov RDI,RBX
            call QWORD PTR [RBX+40]

            test RAX,RAX
            js .L_403953

            jne .L_403838

            mov RAX,QWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RAX+244]
            mov EAX,DWORD PTR [RAX+240]
            sub EAX,1
            cmp ESI,EAX
            je .L_403700

            add ESI,1
            mov RDI,RBX
            call .L_403170

            test EAX,EAX
            je .L_4038d0
.L_403700:

            test R13,R13
            mov QWORD PTR [RBX+160],0
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+152],0
            mov BYTE PTR [RBX+168],1
            je .L_4037b0

            mov RAX,QWORD PTR [RBX+128]
            mov QWORD PTR [R13],RAX
            add RSP,8
.L_403747:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403758:

            test R15,R15
            je .L_403860

            lea RAX,QWORD PTR [R15+R15*1]
            cmp R15,RAX
            jb .L_403773

            jmp .L_403785
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403770:

            mov RAX,RDX
.L_403773:

            cmp R14,RAX
            jbe .L_403994

            lea RDX,QWORD PTR [RAX+RAX*1]
            cmp RAX,RDX
            jb .L_403770
.L_403785:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_405400]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            test R13,R13
            mov BYTE PTR [RBX+170],1
            je .L_4037b0
.L_4037a8:

            mov QWORD PTR [R13],-30
.L_4037b0:

            xor EAX,EAX
.L_4037b2:

            add RSP,8
.L_4037b6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4037c8:

            mov R15,QWORD PTR [RBX+112]
            cmp R14,R15
            ja .L_403758

            mov RDI,QWORD PTR [RBX+120]
.L_4037d5:

            mov RAX,QWORD PTR [RBX+128]
            lea RDX,QWORD PTR [R12+R15*1]
            mov RSI,R14
            add RDI,RAX
            sub RSI,RAX
            sub RDX,RDI
            lea RCX,QWORD PTR [RAX+RDX*1]
            cmp R14,RCX
            cmovb RDX,RSI
            mov RSI,QWORD PTR [RBX+152]
            cmp RDX,RBP
            cmovbe RBP,RDX
            mov RDX,RBP
            call memcpy@PLT

            mov RDX,QWORD PTR [RBX+128]
            add QWORD PTR [RBX+152],RBP
            sub QWORD PTR [RBX+160],RBP
            add RDX,RBP
            mov QWORD PTR [RBX+128],RDX
            jmp .L_40364e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403838:

            mov QWORD PTR [RBX+144],RAX
            mov QWORD PTR [RBX+160],RAX
            mov RAX,QWORD PTR [RBX+136]
            mov RDX,QWORD PTR [RBX+128]
            mov QWORD PTR [RBX+152],RAX
            jmp .L_40364e
.L_403860:

            mov R15,R14
.L_403863:

            mov RDI,R15
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_403785

            mov RDX,QWORD PTR [RBX+128]
            test RDX,RDX
            jne .L_4038e0
.L_403883:

            mov RDI,QWORD PTR [RBX+104]
            call free@PLT

            mov QWORD PTR [RBX+104],R12
            mov QWORD PTR [RBX+120],R12
            mov RDI,R12
            mov QWORD PTR [RBX+112],R15
            mov RBP,QWORD PTR [RBX+160]
            jmp .L_4037d5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4038b0:

            mov RDI,R12
            call memmove@PLT

            mov R12,QWORD PTR [RBX+104]
            mov RBP,QWORD PTR [RBX+160]
            jmp .L_4036a0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4038d0:

            mov RDX,QWORD PTR [RBX+128]
            jmp .L_40364e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4038e0:

            mov RSI,QWORD PTR [RBX+120]
            mov RDI,RAX
            call memmove@PLT

            jmp .L_403883
          .byte 0x66
          .byte 0x90
.L_4038f0:

            test R13,R13
            je .L_4038f9

            mov QWORD PTR [R13],RDX
.L_4038f9:

            mov RAX,QWORD PTR [RBX+120]
            jmp .L_4037b2
.L_403902:

            mov RAX,QWORD PTR [RBX+152]
            mov QWORD PTR [RBX+160],RCX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+120],R12
            sub RAX,RDX
            test R13,R13
            mov QWORD PTR [RBX+152],RAX
            je .L_4037b2

            mov QWORD PTR [R13],RCX
            jmp .L_4037b2
.L_40393b:

            test R13,R13
            je .L_4037b0

            mov QWORD PTR [R13],0
            xor EAX,EAX
            jmp .L_4037b2
.L_403953:

            test R13,R13
            mov QWORD PTR [RBX+160],0
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+152],0
            mov BYTE PTR [RBX+170],1
            jne .L_4037a8

            jmp .L_4037b0
.L_403994:

            mov R15,RAX
            jmp .L_403863
.L_40399c:

            nop
            nop
            nop
            nop
.L_4039a0:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            push RBX
.L_4039ab:

            cmp BYTE PTR [RDI+170],0
            mov RBX,RDI
            jne .L_403b40

            mov RAX,QWORD PTR [RDI+128]
            test RAX,RAX
            jne .L_403a98

            mov R12,RSI
            xor EBP,EBP
.L_4039d0:

            mov RAX,QWORD PTR [RBX+160]
            test RAX,RAX
            je .L_403a00

            cmp RAX,R12
            mov RDX,R12
            cmovle RDX,RAX
            add QWORD PTR [RBX+152],RDX
            add QWORD PTR [RBX],RDX
            sub RAX,RDX
            sub R12,RDX
            add RBP,RDX
            mov QWORD PTR [RBX+160],RAX
.L_403a00:

            test R12,R12
            je .L_403a7d

            mov RAX,QWORD PTR [RBX+48]
            test RAX,RAX
            je .L_403a2a

            mov RSI,R12
            mov RDI,RBX
            call RAX

            test RAX,RAX
            js .L_403af0

            add QWORD PTR [RBX],RAX
            add RBP,RAX
            sub R12,RAX
            je .L_403a7d
.L_403a2a:

            lea R14,QWORD PTR [RBX+136]
.L_403a31:

            mov RSI,R14
            mov RDI,RBX
            call QWORD PTR [RBX+40]

            test RAX,RAX
            js .L_403ae0

            jne .L_403ac0

            mov RAX,QWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RAX+244]
            mov EAX,DWORD PTR [RAX+240]
            sub EAX,1
            cmp ESI,EAX
            je .L_403a6b

            add ESI,1
            mov RDI,RBX
            call .L_403170

            test EAX,EAX
            je .L_403a31
.L_403a6b:

            mov QWORD PTR [RBX+136],0
            mov BYTE PTR [RBX+168],1
.L_403a7d:

            cmp R13,RBP
            jne .L_403b30
.L_403a86:

            pop RBX
.L_403a87:

            mov RAX,RBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403a98:

            cmp RAX,RSI
            mov RBP,RSI
            mov R12,RSI
            cmovle RBP,RAX
            add QWORD PTR [RDI+120],RBP
            add QWORD PTR [RDI],RBP
            sub RAX,RBP
            sub R12,RBP
            mov QWORD PTR [RDI+128],RAX
            jmp .L_4039d0
          .byte 0x66
          .byte 0x90
.L_403ac0:

            cmp RAX,R12
            mov RDX,QWORD PTR [RBX]
            jge .L_403b50

            add RDX,RAX
            add RBP,RAX
            sub R12,RAX
            mov QWORD PTR [RBX],RDX
            jmp .L_403a31
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403ae0:

            mov QWORD PTR [RBX+136],0
            nop
            nop
            nop
            nop
            nop
.L_403af0:

            mov BYTE PTR [RBX+170],1
            mov RBP,RAX
.L_403afa:

            xor R8D,R8D
            cmp R13,RBP
            je .L_403a86
.L_403b02:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_405420]
            mov RCX,R13
            mov ESI,4294967295
            xor EAX,EAX
            mov RBP,-30
            call .L_43f5d0

            jmp .L_403a86
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b30:

            test RBP,RBP
            mov R8D,0
            cmovns R8,RBP
            jmp .L_403b02
          .byte 0x90
.L_403b40:

            mov RBP,-1
            jmp .L_403afa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b50:

            mov RCX,QWORD PTR [RBX+136]
            add RBP,R12
            mov QWORD PTR [RBX+144],RAX
            add RCX,R12
            mov QWORD PTR [RBX+152],RCX
            mov RCX,RAX
            sub RCX,R12
            add R12,RDX
            mov QWORD PTR [RBX+160],RCX
            mov QWORD PTR [RBX],R12
            jmp .L_403a7d
.L_403b83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403b90:

            push RBP
            push RBX
            mov ESI,2536
            mov EDI,1
            sub RSP,8
.L_403ba0:

            call calloc@PLT

            test RAX,RAX
            je .L_403c90

            mov RBX,RAX
            movabs RAX,4309561541
            mov QWORD PTR [RBX],RAX
            mov RDI,RBX
            mov RBP,RBX
            call .L_444cd0

            mov QWORD PTR [RBX+160],RAX
            mov EAX,DWORD PTR [RIP+.L_65b788]
            test EAX,EAX
            je .L_403c00
.L_403bda:

            lea RAX,QWORD PTR [RIP+.L_65b720]
            mov QWORD PTR [RBX+8],RAX
            lea RAX,QWORD PTR [RBX+2496]
            mov QWORD PTR [RBX+2504],RAX
.L_403bf3:

            add RSP,8
.L_403bf7:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403c00:

            lea RAX,QWORD PTR [RIP+.L_403300]
            mov DWORD PTR [RIP+.L_65b788],1
            mov QWORD PTR [RIP+.L_65b770],RAX
            lea RAX,QWORD PTR [RIP+.L_4032c0]
            mov QWORD PTR [RIP+.L_65b778],RAX
            lea RAX,QWORD PTR [RIP+.L_4032e0]
            mov QWORD PTR [RIP+.L_65b780],RAX
            lea RAX,QWORD PTR [RIP+.L_403220]
            mov QWORD PTR [RIP+.L_65b768],RAX
            lea RAX,QWORD PTR [RIP+.L_4034b0]
            mov QWORD PTR [RIP+.L_65b760],RAX
            lea RAX,QWORD PTR [RIP+.L_4045a0]
            mov QWORD PTR [RIP+.L_65b750],RAX
            lea RAX,QWORD PTR [RIP+.L_404400]
            mov QWORD PTR [RIP+.L_65b758],RAX
            lea RAX,QWORD PTR [RIP+.L_4046b0]
            mov QWORD PTR [RIP+.L_65b728],RAX
            lea RAX,QWORD PTR [RIP+.L_403450]
            mov QWORD PTR [RIP+.L_65b720],RAX
            jmp .L_403bda
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403c90:

            xor EBP,EBP
            jmp .L_403bf3
.L_403c97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403ca0:

            push R12
            lea RCX,QWORD PTR [RIP+.L_405460]
            push RBP
            push RBX
            mov R12,RSI
            mov RBP,RDX
            mov ESI,14594245
            mov EDX,32767
            mov RBX,RDI
            call .L_443f50

            test EAX,EAX
            jne .L_403cdf

            mov DWORD PTR [RBX+168],1
            mov QWORD PTR [RBX+176],R12
            mov QWORD PTR [RBX+184],RBP
.L_403cdf:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_403ce4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403cf0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_405488]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_403d20

            mov QWORD PTR [RBX+192],RBP
            xor EAX,EAX
.L_403d20:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403d27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d30:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4054a8]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_403d60

            mov QWORD PTR [RBX+200],RBP
            xor EAX,EAX
.L_403d60:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403d67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403d70:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4054c8]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_403da0

            mov QWORD PTR [RBX+208],RBP
            xor EAX,EAX
.L_403da0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403da7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403db0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4054e8]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_403de0

            mov QWORD PTR [RBX+216],RBP
            xor EAX,EAX
.L_403de0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403de7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403df0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_405508]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_403e20

            mov QWORD PTR [RBX+224],RBP
            xor EAX,EAX
.L_403e20:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403e27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e30:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_405528]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_403e60

            mov QWORD PTR [RBX+232],RBP
            xor EAX,EAX
.L_403e60:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_403e67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e70:

            push R13
            push R12
            lea RCX,QWORD PTR [RIP+.L_405550]
            push RBP
            push RBX
            mov R13,RSI
            mov EBX,EDX
            mov ESI,14594245
            mov EDX,1
            sub RSP,8
.L_403e90:

            mov RBP,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_403ed5

            mov R12D,DWORD PTR [RBP+240]
            test R12D,R12D
            je .L_403ee0

            sub R12D,1
.L_403ead:

            cmp EBX,R12D
            ja .L_403f07

            mov RAX,QWORD PTR [RBP+256]
            lea RDX,QWORD PTR [RBX+RBX*2]
            lea RAX,QWORD PTR [RAX+RDX*8]
            mov RDX,-1
            mov QWORD PTR [RAX+16],R13
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            xor EAX,EAX
.L_403ed5:

            add RSP,8
.L_403ed9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_403ee0:

            mov ESI,24
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+256],RAX
            je .L_403f24

            mov DWORD PTR [RBP+240],1
            jmp .L_403ead
.L_403f07:

            lea RDX,QWORD PTR [RIP+.L_40572c]
            xor EAX,EAX
            mov ESI,22
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_403ed5
.L_403f24:

            lea RDX,QWORD PTR [RIP+.L_405721]
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_403ed5
.L_403f3f:

            nop
.L_403f40:

            xor EDX,EDX
            jmp .L_403e70
.L_403f47:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403f50:

            push R12
            lea RCX,QWORD PTR [RIP+.L_405570]
            push RBP
            push RBX
.L_403f5b:

            mov EBP,EDX
            mov RBX,RSI
            mov EDX,1
            mov ESI,14594245
            mov R12,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_404029

            mov EAX,DWORD PTR [R12+240]
            cmp EAX,EBP
            jb .L_40402e

            add EAX,1
            mov RDI,QWORD PTR [R12+256]
            lea RSI,QWORD PTR [RAX+RAX*2]
            mov DWORD PTR [R12+240],EAX
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            je .L_40404b

            mov ECX,DWORD PTR [R12+240]
            mov QWORD PTR [R12+256],RAX
            cmp ECX,1
            lea EDX,DWORD PTR [RCX-1]
            je .L_40400c

            cmp EBP,EDX
            jae .L_40400c

            mov RDI,-1
            jmp .L_403fe4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403fe0:

            test EDX,EDX
            je .L_40400c
.L_403fe4:

            lea ESI,DWORD PTR [RDX-1]
            lea RDX,QWORD PTR [RDX+RDX*2]
            mov RCX,RSI
            lea RSI,QWORD PTR [RSI+RSI*2]
            lea RDX,QWORD PTR [RAX+RDX*8]
            mov RSI,QWORD PTR [RAX+RSI*8+16]
            mov QWORD PTR [RDX],RDI
            mov QWORD PTR [RDX+8],RDI
            mov QWORD PTR [RDX+16],RSI
            mov EDX,ECX
            cmp EDX,EBP
            ja .L_403fe0
.L_40400c:

            lea RDX,QWORD PTR [RBP+RBP*2]
            lea RAX,QWORD PTR [RAX+RDX*8]
            mov RDX,-1
            mov QWORD PTR [RAX+16],RBX
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            xor EAX,EAX
.L_404029:

            pop RBX
.L_40402a:

            pop RBP
            pop R12
            ret 
.L_40402e:

            lea RDX,QWORD PTR [RIP+.L_40572c]
            xor EAX,EAX
            mov ESI,22
            mov RDI,R12
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_404029
.L_40404b:

            lea RDX,QWORD PTR [RIP+.L_405721]
            mov ESI,12
            mov RDI,R12
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_404029
.L_404066:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404070:

            mov EDX,DWORD PTR [RDI+240]
            jmp .L_403f50
.L_40407b:

            nop
            nop
            nop
            nop
            nop
.L_404080:

            xor EDX,EDX
            jmp .L_403f50
.L_404087:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404090:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_405745]
            mov EDX,32767
            mov ESI,14594245
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_4040c0

            mov RAX,QWORD PTR [RBX+1048]
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4040c0:

            mov RAX,-30
            pop RBX
            ret 
.L_4040c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4040d0:

            test RDI,RDI
            je .L_404120

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_404120

            mov RAX,QWORD PTR [RAX+72]
            test RAX,RAX
            je .L_404120

            push RBX
            mov RBX,RDI
            call RAX

            test AL,3
            je .L_40410f

            mov RAX,QWORD PTR [RBX+2472]
            test RAX,RAX
            je .L_404126

            mov RAX,QWORD PTR [RAX+80]
            test RAX,RAX
            je .L_404126

            mov RDI,RBX
            pop RBX
            jmp RAX
.L_40410f:

            mov EAX,4294967294
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404120:

            mov EAX,4294967294
            ret 
.L_404126:

            mov EAX,4294967295
            pop RBX
            ret 
.L_40412d:

            nop
            nop
            nop
.L_404130:

            test RDI,RDI
            je .L_404150

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_404150

            mov RAX,QWORD PTR [RAX+72]
            test RAX,RAX
            je .L_404150

            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404150:

            xor EAX,EAX
            ret 
.L_404153:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404160:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_404171:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_404302

            mov RAX,QWORD PTR [RDI+136]
            mov R15,RSI
            mov R12,RDX
            xor R13D,R13D
            mov R14,RSP
            nop
            nop
            nop
.L_4041a0:

            test RAX,RAX
            je .L_404290
.L_4041a9:

            mov RDX,QWORD PTR [RBX+120]
            mov RAX,QWORD PTR [RBX+128]
            cmp RDX,RAX
            jl .L_4042d8

            lea RCX,QWORD PTR [R12+RAX*1]
            cmp RDX,RCX
            jg .L_404240

            cmp RDX,RAX
            jle .L_4041ed

            sub RDX,RAX
            xor ESI,ESI
            mov RDI,R15
            mov RBP,RDX
            add R15,RBP
            add R13,RBP
            call memset@PLT

            add QWORD PTR [RBX+128],RBP
            sub R12,RBP
            je .L_404239
.L_4041ed:

            mov RBP,QWORD PTR [RBX+136]
            mov RSI,QWORD PTR [RBX+112]
            mov RDI,R15
            cmp RBP,R12
            cmova RBP,R12
            mov RDX,RBP
            add R15,RBP
            add R13,RBP
            call memcpy@PLT

            mov RAX,QWORD PTR [RBX+136]
            add QWORD PTR [RBX+112],RBP
            add QWORD PTR [RBX+128],RBP
            add QWORD PTR [RBX+120],RBP
            sub RAX,RBP
            sub R12,RBP
            mov QWORD PTR [RBX+136],RAX
            jne .L_4041a0
.L_404239:

            mov RAX,R13
            jmp .L_404258
          .byte 0x66
          .byte 0x90
.L_404240:

            mov RDX,R12
            xor ESI,ESI
            mov RDI,R15
            call memset@PLT

            add QWORD PTR [RBX+128],R12
            lea RAX,QWORD PTR [R12+R13*1]
.L_404258:

            mov BYTE PTR [RBX+144],0
            mov QWORD PTR [RBX+152],0
.L_40426a:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_404309

            add RSP,24
.L_404282:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404290:

            mov RAX,QWORD PTR [RBX+112]
            lea RDX,QWORD PTR [RBX+136]
            lea RCX,QWORD PTR [RBX+120]
            mov BYTE PTR [RBX+144],1
            mov QWORD PTR [RBX+152],R12
            mov RSI,R14
            mov RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_43fa70

            mov RDX,QWORD PTR [RSP]
            cmp EAX,1
            mov QWORD PTR [RBX+112],RDX
            je .L_4042fa

            test EAX,EAX
            jns .L_4041a9

            cdqe 
            jmp .L_40426a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4042d8:

            lea RDX,QWORD PTR [RIP+.L_405590]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBX
            call .L_43f5d0

            mov RAX,-10
            jmp .L_40426a
.L_4042fa:

            mov RAX,R13
            jmp .L_40426a
.L_404302:

            xor EAX,EAX
            jmp .L_404258
.L_404309:

            call __stack_chk_fail@PLT
.L_40430e:

            nop
            nop
.L_404310:

            mov QWORD PTR [RDI+128],0
            mov QWORD PTR [RDI+136],0
            mov BYTE PTR [RDI+144],0
            mov QWORD PTR [RDI+152],0
            mov QWORD PTR [RDI+112],0
            mov QWORD PTR [RDI+120],0
            ret 
.L_404349:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404350:

            push R13
            push R12
            lea RCX,QWORD PTR [RIP+.L_405762]
            push RBP
            push RBX
            mov EDX,4
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,40
.L_40436e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_4043af

            mov RAX,QWORD PTR [RBX+2472]
            mov RAX,QWORD PTR [RAX+48]
            test RAX,RAX
            je .L_4043d0

            mov RDI,RBX
            call RAX
.L_40439d:

            cmp EAX,1
            mov EDX,0
            mov DWORD PTR [RBX+4],2
            cmove EAX,EDX
.L_4043af:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4043f7

            add RSP,40
.L_4043c3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4043d0:

            lea R13,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+8]
            mov RBP,RSP
            nop
            nop
            nop
.L_4043e0:

            mov RCX,R13
            mov RDX,R12
            mov RSI,RBP
            mov RDI,RBX
            call .L_43fa70

            test EAX,EAX
            je .L_4043e0

            jmp .L_40439d
.L_4043f7:

            call __stack_chk_fail@PLT
.L_4043fc:

            nop
            nop
            nop
            nop
.L_404400:

            push R12
            lea RCX,QWORD PTR [RIP+.L_405779]
            push RBP
            push RBX
.L_40440b:

            mov R12,RSI
            mov EDX,6
            mov ESI,14594245
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            mov EBP,EAX
            je .L_4044d8

            mov RDI,R12
            xor EBP,EBP
            call .L_444ba0

            mov RDI,RBX
            call .L_43f5b0

            cmp DWORD PTR [RBX+4],4
            je .L_404558
.L_404447:

            mov RAX,QWORD PTR [RBX+1032]
            mov RSI,R12
            mov RDI,RBX
            mov RAX,QWORD PTR [RAX]
            add DWORD PTR [RBX+48],1
            mov QWORD PTR [RBX+1048],RAX
            mov RAX,QWORD PTR [RBX+2472]
            call QWORD PTR [RAX+32]

            cmp EAX,-20
            je .L_404548

            jle .L_4044e0

            test EAX,EAX
            je .L_404548

            cmp EAX,1
            jne .L_4044ec

            mov EAX,DWORD PTR [RBX+244]
            sub DWORD PTR [RBX+48],1
            mov EBP,1
            mov DWORD PTR [RBX+4],16
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+136],0
            mov BYTE PTR [RBX+144],0
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov DWORD PTR [RBX+1056],EAX
.L_4044d8:

            mov EAX,EBP
            pop RBX
.L_4044db:

            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_4044e0:

            cmp EAX,-30
            jne .L_4044ec

            mov DWORD PTR [RBX+4],32768
.L_4044ec:

            mov EDX,DWORD PTR [RBX+244]
            cmp EBP,EAX
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+136],0
            mov BYTE PTR [RBX+144],0
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov DWORD PTR [RBX+1056],EDX
            jg .L_404539

            cmp EAX,1
            jne .L_4044d8
.L_404539:

            mov EBP,EAX
            mov EAX,EBP
            pop RBX
.L_40453e:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404548:

            mov DWORD PTR [RBX+4],4
            jmp .L_4044ec
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404558:

            mov RDI,RBX
            call .L_404350

            cmp EAX,1
            mov EBP,EAX
            je .L_404581

            cmp EAX,-30
            jne .L_404447
.L_404570:

            mov DWORD PTR [RBX+4],32768
            mov EBP,4294967266
            jmp .L_4044d8
.L_404581:

            lea RDX,QWORD PTR [RIP+.L_405792]
            mov ESI,5
            mov RDI,RBX
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_404570
.L_404599:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4045a0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov QWORD PTR [RSI],0
            mov RSI,QWORD PTR [RDI+160]
            call .L_404400

            mov RDX,QWORD PTR [RBX+160]
            mov QWORD PTR [RBP],RDX
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4045d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4045e0:

            push R12
            lea RCX,QWORD PTR [RIP+.L_4057a9]
            push RBP
            push RBX
            mov RBP,RSI
            mov R12D,EDX
            mov ESI,14594245
            mov EDX,4
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_404630

            mov RAX,QWORD PTR [RBX+2472]
            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_40463c

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404630:

            mov RAX,-30
.L_404637:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_40463c:

            lea RDX,QWORD PTR [RIP+.L_4055b8]
            mov ESI,22
            mov RDI,RBX
            call .L_43f5d0

            mov RAX,-30
            jmp .L_404637
.L_404659:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404660:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+1032]
            call .L_4033e0

            mov RDI,QWORD PTR [RBP+1032]
            test RDI,RDI
            je .L_4046a0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404688:

            mov RBX,QWORD PTR [RDI+16]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RBP+1032],RBX
            mov RDI,RBX
            jne .L_404688
.L_4046a0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4046a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4046b0:

            push R14
            push R13
            push R12
            xor R12D,R12D
            test RDI,RDI
            push RBP
            push RBX
.L_4046be:

            je .L_4047fc

            lea RCX,QWORD PTR [RIP+.L_4057c1]
            mov EDX,65535
            mov ESI,14594245
            mov RBP,RDI
            call .L_443f50

            cmp EAX,-30
            mov R12D,EAX
            je .L_4047fc

            mov EAX,DWORD PTR [RBP+4]
            cmp EAX,32
            je .L_4046fc

            cmp EAX,32768
            jne .L_404810
.L_4046fc:

            xor R12D,R12D
.L_4046ff:

            mov RAX,QWORD PTR [RBP+2488]
            test RAX,RAX
            je .L_404713

            mov RDI,RBP
            call RAX

            mov R12D,EAX
.L_404713:

            lea RBX,QWORD PTR [RBP+1064]
            lea R13,QWORD PTR [RBP+2472]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404728:

            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RBP+2472],RBX
            test RAX,RAX
            je .L_40473d

            mov RDI,RBP
            call RAX
.L_40473d:

            add RBX,88
            cmp RBX,R13
            jne .L_404728

            lea RBX,QWORD PTR [RBP+264]
            lea R13,QWORD PTR [RBP+1032]
            mov RDI,RBP
            call .L_404660

            nop
            nop
            nop
            nop
.L_404760:

            mov RAX,QWORD PTR [RBX+40]
            test RAX,RAX
            je .L_404775

            mov RDI,RBX
            call RAX

            cmp R12D,EAX
            cmovg R12D,EAX
.L_404775:

            add RBX,48
            cmp R13,RBX
            jne .L_404760

            mov RBX,QWORD PTR [RBP+2496]
            test RBX,RBX
            je .L_4047c4

            nop
            nop
            nop
            nop
            nop
            nop
.L_404790:

            mov R13,QWORD PTR [RBX]
            mov R14,QWORD PTR [RBX+8]
            mov RDI,R13
            call strlen@PLT

            xor ESI,ESI
            mov RDX,RAX
            mov RDI,R13
            call memset@PLT

            mov RDI,QWORD PTR [RBX]
            call free@PLT

            mov RDI,RBX
            mov RBX,R14
            call free@PLT

            test R14,R14
            jne .L_404790
.L_4047c4:

            lea RDI,QWORD PTR [RBP+64]
            call .L_434290

            mov RDI,QWORD PTR [RBP+160]
            call .L_444c80

            mov RDI,RBP
            mov DWORD PTR [RBP],0
            call .L_43f3b0

            mov RDI,QWORD PTR [RBP+256]
            call free@PLT

            mov RDI,RBP
            call free@PLT
.L_4047fc:

            pop RBX
.L_4047fd:

            mov EAX,R12D
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404810:

            mov RDI,RBP
            call .L_43f950

            mov R12D,EAX
            jmp .L_4046ff
.L_404820:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RCX
            lea RCX,QWORD PTR [RIP+.L_4055f8]
            mov RBP,RDX
            mov ESI,14594245
            sub RSP,8
.L_404846:

            mov EDX,1
            mov R14,R8
            mov R13,R9
            call .L_443f50

            cmp EAX,-30
            je .L_40489c

            lea RDX,QWORD PTR [R15+1080]
            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_404868:

            mov RCX,QWORD PTR [RDX]
            cmp RCX,RBX
            je .L_4048b0

            test RCX,RCX
            je .L_4048c8

            add EAX,1
            add RDX,88
            cmp EAX,16
            jne .L_404868

            lea RDX,QWORD PTR [RIP+.L_405618]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R15
            call .L_43f5d0

            mov EAX,4294967266
.L_40489c:

            add RSP,8
.L_4048a0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4048b0:

            add RSP,8
            mov EAX,4294967276
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4048c8:

            cdqe 
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RAX+RDX*2]
            mov RDX,QWORD PTR [RSP+64]
            lea RAX,QWORD PTR [R15+RAX*8]
            mov QWORD PTR [RAX+1104],RDX
            mov RDX,QWORD PTR [RSP+72]
            mov QWORD PTR [RAX+1080],RBX
            mov QWORD PTR [RAX+1088],R14
            mov QWORD PTR [RAX+1096],R13
            mov QWORD PTR [RAX+1064],R12
            mov QWORD PTR [RAX+1112],RDX
            mov RDX,QWORD PTR [RSP+80]
            mov QWORD PTR [RAX+1072],RBP
            mov QWORD PTR [RAX+1120],RDX
            mov RDX,QWORD PTR [RSP+88]
            mov QWORD PTR [RAX+1128],RDX
            mov RDX,QWORD PTR [RSP+96]
            mov QWORD PTR [RAX+1136],RDX
            mov RDX,QWORD PTR [RSP+104]
            mov QWORD PTR [RAX+1144],RDX
            add RSP,8
.L_404945:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_404952:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404960:

            lea RDX,QWORD PTR [RDI+280]
            xor EAX,EAX
            jmp .L_40497c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404970:

            add EAX,1
            add RDX,48
            cmp EAX,16
            je .L_4049b0
.L_40497c:

            cmp QWORD PTR [RDX],0
            jne .L_404970

            cdqe 
            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RAX+RAX*2]
            shl RAX,4
            lea RAX,QWORD PTR [RDI+RAX*1+264]
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            movups XMMWORD PTR [RAX+32],XMM0
            mov QWORD PTR [RSI],RAX
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4049b0:

            lea RDX,QWORD PTR [RIP+.L_405648]
            sub RSP,8

            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            mov EAX,4294967266
            add RSP,8
            ret 
.L_4049d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4049e0:

            mov RDI,QWORD PTR [RDI+1032]
            cmp BYTE PTR [RDI+170],0
            je .L_404a00

            test RDX,RDX
            je .L_4049fc

            mov QWORD PTR [RDX],-30
.L_4049fc:

            xor EAX,EAX
            ret 
          .byte 0x90
.L_404a00:

            jmp .L_403630
.L_404a05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a10:

            cmp BYTE PTR [RDI+170],0
            jne .L_404a20

            jmp .L_403630
          .byte 0x66
          .byte 0x90
.L_404a20:

            test RDX,RDX
            je .L_404a2c

            mov QWORD PTR [RDX],-30
.L_404a2c:

            xor EAX,EAX
            ret 
.L_404a2f:

            nop
.L_404a30:

            test RSI,RSI
            js .L_404a50

            jne .L_404a40
.L_404a37:

            mov RAX,RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404a40:

            mov RDI,QWORD PTR [RDI+1032]
            jmp .L_4039a0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404a50:

            mov RSI,-30
            jmp .L_404a37
.L_404a59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a60:

            test RSI,RSI
            js .L_404a78

            jne .L_404a70
.L_404a67:

            mov RAX,RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404a70:

            jmp .L_4039a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404a78:

            mov RSI,-30
            jmp .L_404a67
.L_404a81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_404a9e:

            mov EBX,DWORD PTR [RDI+168]
            and EBX,16776960
            jne .L_404ad7

            cmp QWORD PTR [RDI+56],0
            mov R12,RDI
            je .L_404dbd

            cmp EDX,1
            mov R14,RSI
            mov R13,QWORD PTR [RDI+24]
            je .L_404ca0

            cmp EDX,2
            je .L_404af0

            test EDX,EDX
            je .L_404ca3
.L_404ad7:

            mov RAX,-30
.L_404ade:

            add RSP,8
.L_404ae2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404af0:

            mov RAX,QWORD PTR [R13+256]
            mov RCX,QWORD PTR [RAX]
            test RCX,RCX
            js .L_404b5c

            mov RSI,QWORD PTR [RAX+8]
            test RSI,RSI
            js .L_404b5c

            mov EDX,DWORD PTR [R13+240]
            cmp EDX,1
            jbe .L_404b5c

            lea EDI,DWORD PTR [RDX-2]
            add RAX,24
            mov EDX,1
            add RDI,2
            jmp .L_404b3d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404b30:

            add RDX,1
            add RAX,24
            cmp RDX,RDI
            je .L_404b5c
.L_404b3d:

            add RCX,RSI
            mov RSI,QWORD PTR [RAX+8]
            mov EBX,EDX
            mov QWORD PTR [RAX],RCX
            test RSI,RSI
            jns .L_404b30

            jmp .L_404b5c
.L_404b50:

            mov EAX,EDX
            mov EBX,EDX
            lea RAX,QWORD PTR [RAX+RAX*2]
            mov QWORD PTR [RCX+RAX*8],RDI
.L_404b5c:

            mov ESI,EBX
            mov RDI,R12
            call .L_403170

            cdqe 
            test RAX,RAX
            jne .L_404ade

            xor ESI,ESI
            mov EDX,2
            mov RDI,R12
            call .L_403320

            test RAX,RAX
            js .L_404ade

            mov RCX,QWORD PTR [R13+256]
            mov EDX,EBX
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RCX+RDX*8]
            mov RBP,QWORD PTR [RDX]
            mov QWORD PTR [RDX+8],RAX
            lea EDX,DWORD PTR [RBX+1]
            cmp EDX,DWORD PTR [R13+240]
            lea RDI,QWORD PTR [RBP+RAX*1]
            jb .L_404b50

            lea R15,QWORD PTR [R14+RDI*1]
            cmp RBP,R15
            jle .L_404c09

            add RAX,R14
            test EBX,EBX
            lea R15,QWORD PTR [RDI+RAX*1]
            je .L_404c09

            lea EDX,DWORD PTR [RBX-1]
            mov RDI,RDX
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RCX+RDX*8]
            jmp .L_404bf2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404be0:

            add RAX,RCX
            sub RDX,24
            test EBX,EBX
            je .L_404db4

            sub EDI,1
.L_404bf2:

            mov RBP,QWORD PTR [RDX]
            mov RCX,QWORD PTR [RDX+8]
            mov EBX,EDI
            lea RSI,QWORD PTR [RBP+RCX*1]
            lea R15,QWORD PTR [RSI+RAX*1]
            cmp R15,RBP
            jl .L_404be0
.L_404c09:

            mov ESI,EBX
            mov RDI,R12
            call .L_403170

            cdqe 
            test RAX,RAX
            jne .L_404ade

            mov RSI,R15
            xor EDX,EDX
            mov RDI,R12
            sub RSI,RBP
            call .L_403320

            test RAX,RAX
            js .L_404ade

            mov EBX,EBX
            lea RBP,QWORD PTR [RBX+RBX*2]
            shl RBP,3
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404c48:

            mov RDX,QWORD PTR [R13+256]
            add RAX,QWORD PTR [RDX+RBP*1]
            js .L_404ade

            mov RDX,QWORD PTR [R12+104]
            mov QWORD PTR [R12+160],0
            mov QWORD PTR [R12+128],0
            mov QWORD PTR [R12],RAX
            mov BYTE PTR [R12+168],0
            mov QWORD PTR [R12+120],RDX
            add RSP,8
.L_404c8c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404ca0:

            add R14,QWORD PTR [RDI]
.L_404ca3:

            mov RAX,QWORD PTR [R13+256]
            mov RCX,QWORD PTR [RAX]
            test RCX,RCX
            js .L_404d2e

            mov RDX,QWORD PTR [RAX+8]
            test RDX,RDX
            js .L_404d2e

            add RDX,RCX
            lea RCX,QWORD PTR [RDX-1]
            cmp R14,RCX
            jl .L_404d2e

            mov ECX,DWORD PTR [R13+240]
            cmp ECX,1
            jbe .L_404d2e

            lea EDI,DWORD PTR [RCX-2]
            add RAX,24
            mov ECX,1
            add RDI,2
            jmp .L_404d01
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404ce8:

            add RDX,RSI
            lea RSI,QWORD PTR [RDX-1]
            cmp RSI,R14
            jg .L_404d2e

            add RCX,1
            add RAX,24
            cmp RDI,RCX
            je .L_404d2e
.L_404d01:

            mov RSI,QWORD PTR [RAX+8]
            mov EBX,ECX
            mov QWORD PTR [RAX],RDX
            test RSI,RSI
            jns .L_404ce8

            jmp .L_404d2e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404d18:

            add EBX,1
            cmp EBX,DWORD PTR [R13+240]
            jae .L_404d84

            mov EAX,EBX
            lea RAX,QWORD PTR [RAX+RAX*2]
            mov QWORD PTR [RCX+RAX*8],RDX
.L_404d2e:

            mov ESI,EBX
            mov RDI,R12
            call .L_403170

            cdqe 
            test RAX,RAX
            jne .L_404ade

            xor ESI,ESI
            mov EDX,2
            mov RDI,R12
            call .L_403320

            test RAX,RAX
            js .L_404ade

            mov EDX,EBX
            mov RCX,QWORD PTR [R13+256]
            lea RBP,QWORD PTR [RDX+RDX*2]
            shl RBP,3
            lea RDX,QWORD PTR [RCX+RBP*1]
            mov RSI,QWORD PTR [RDX]
            mov QWORD PTR [RDX+8],RAX
            lea RDX,QWORD PTR [RSI+RAX*1]
            lea RDI,QWORD PTR [RDX-1]
            cmp RDI,R14
            jle .L_404d18
.L_404d84:

            sub R14,RSI
            cmp RAX,R14
            mov RSI,R14
            jl .L_404ad7

            test R14,R14
            js .L_404ad7

            xor EDX,EDX
            mov RDI,R12
            call .L_403320

            test RAX,RAX
            jns .L_404c48

            jmp .L_404ade
.L_404db4:

            lea R15,QWORD PTR [RAX+RSI*1]
            jmp .L_404c09
.L_404dbd:

            mov RAX,-25
            jmp .L_404ade
.L_404dc9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404dd0:

            mov RDI,QWORD PTR [RDI+1032]
            jmp .L_404a90
.L_404ddc:

            nop
            nop
            nop
            nop
.L_404de0:

            push R15
            push R14
            lea RCX,QWORD PTR [RIP+.L_4057d3]
            push R13
            push R12
            mov EDX,1
            push RBP
            push RBX
            mov ESI,14594245
            mov R15,RDI
            sub RSP,40
.L_404e02:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_405053

            mov RDI,R15
            call .L_43f5b0

            cmp QWORD PTR [R15+200],0
            je .L_4051a9

            mov RAX,QWORD PTR [R15+192]
            test RAX,RAX
            je .L_404ed8

            mov RDX,QWORD PTR [R15+256]
            mov RDI,R15
            mov RSI,QWORD PTR [RDX+16]
            call RAX

            test EAX,EAX
            mov EBP,EAX
            je .L_404ed8

            mov RDX,QWORD PTR [R15+224]
            test RDX,RDX
            je .L_404ead

            mov ESI,DWORD PTR [R15+240]
            test ESI,ESI
            je .L_404ead

            xor EBX,EBX
            jmp .L_404e87
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404e80:

            mov RDX,QWORD PTR [R15+224]
.L_404e87:

            mov EAX,EBX
            mov RCX,QWORD PTR [R15+256]
            mov RDI,R15
            lea RAX,QWORD PTR [RAX+RAX*2]
            add EBX,1
            lea RAX,QWORD PTR [RCX+RAX*8]
            mov RSI,QWORD PTR [RAX+16]
            call RDX

            cmp DWORD PTR [R15+240],EBX
            ja .L_404e80
.L_404ead:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_4051f8

            add RSP,40
.L_404ec7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404ed8:

            mov ESI,176
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_405053

            mov RDX,QWORD PTR [R15+256]
            mov RDI,QWORD PTR [R15+1032]
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],R15
            mov RCX,QWORD PTR [RDX+16]
            test RDI,RDI
            mov DWORD PTR [RAX+96],0
            mov QWORD PTR [RAX+80],RCX
            lea RCX,QWORD PTR [RIP+.L_403140]
            mov QWORD PTR [RAX+32],RCX
            lea RCX,QWORD PTR [RIP+.L_403120]
            mov QWORD PTR [RAX+40],RCX
            lea RCX,QWORD PTR [RIP+.L_403530]
            mov QWORD PTR [RAX+48],RCX
            lea RCX,QWORD PTR [RIP+.L_403320]
            mov QWORD PTR [RAX+56],RCX
            lea RCX,QWORD PTR [RIP+.L_403370]
            mov QWORD PTR [RAX+64],RCX
            lea RCX,QWORD PTR [RIP+.L_403170]
            mov QWORD PTR [RAX+72],RCX
            lea RCX,QWORD PTR [RIP+.L_4057e5]
            mov QWORD PTR [RAX+88],RCX
            mov QWORD PTR [RDX],0
            mov RCX,RDI
            je .L_404f8c

            mov EDX,DWORD PTR [R15+1040]
            test EDX,EDX
            jne .L_405063
.L_404f8c:

            mov QWORD PTR [R15+1032],RAX
            lea RAX,QWORD PTR [R15+264]
            lea R12,QWORD PTR [R15+1032]
            mov R14D,25
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
.L_404fb0:

            mov RBX,QWORD PTR [RSP+8]
            xor R13D,R13D
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_404fc0:

            mov RAX,QWORD PTR [RBX+16]
            test RAX,RAX
            je .L_404fde

            mov RSI,QWORD PTR [R15+1032]
            mov RDI,RBX
            call RAX

            cmp EAX,EBP
            jle .L_404fde

            mov R13,RBX
            mov EBP,EAX
.L_404fde:

            add RBX,48
            cmp RBX,R12
            jne .L_404fc0

            test R13,R13
            je .L_405120

            mov ESI,176
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_40504b

            mov RDX,QWORD PTR [R15+1032]
            mov QWORD PTR [RAX+8],R13
            mov RDI,RAX
            mov QWORD PTR [RAX+24],R15
            mov QWORD PTR [R15+1032],RAX
            mov QWORD PTR [RAX+16],RDX
            call QWORD PTR [R13+24]

            test EAX,EAX
            jne .L_405139

            sub R14D,1
            jne .L_404fb0

            lea RDX,QWORD PTR [RIP+.L_4056b0]
            mov ESI,84
            mov RDI,R15
            call .L_43f5d0
.L_40504b:

            mov DWORD PTR [R15+4],32768
.L_405053:

            mov EBP,4294967266
            jmp .L_404ead
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405060:

            mov RCX,RDX
.L_405063:

            mov RDX,QWORD PTR [RCX+16]
            test RDX,RDX
            jne .L_405060

            mov QWORD PTR [RCX+16],RAX
.L_405070:

            cmp QWORD PTR [R15+2472],0
            je .L_405090
.L_40507a:

            mov DWORD PTR [R15+4],2
            xor ESI,ESI
            xor EBP,EBP
            call .L_403170

            jmp .L_404ead
.L_405090:

            lea RAX,QWORD PTR [R15+1064]
            mov R12,-1
            xor EBX,EBX
            mov EBP,R12D
            mov QWORD PTR [R15+2472],RAX
            jmp .L_4050d4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4050b0:

            cmp R13D,EBP
            mov RAX,QWORD PTR [R15+2472]
            jg .L_405118
.L_4050bc:

            test R12D,R12D
            js .L_405118
.L_4050c1:

            add EBX,1
            add RAX,88
            cmp EBX,16
            mov QWORD PTR [R15+2472],RAX
            je .L_405146
.L_4050d4:

            mov RDX,QWORD PTR [RAX+16]
            test RDX,RDX
            je .L_4050c1

            mov ESI,EBP
            mov RDI,R15
            call RDX

            cmp EAX,-30
            mov R13D,EAX
            je .L_4051e7

            mov RDI,QWORD PTR [R15+1032]
            cmp QWORD PTR [RDI],0
            je .L_4050b0

            xor EDX,EDX
            xor ESI,ESI
            call .L_404a90

            cmp R13D,EBP
            mov RAX,QWORD PTR [R15+2472]
            jle .L_4050bc

            nop
            nop
            nop
            nop
            nop
            nop
.L_405118:

            movsxd R12,EBX
            mov EBP,R13D
            jmp .L_4050c1
.L_405120:

            mov RDI,QWORD PTR [R15+1032]
            cmp BYTE PTR [RDI+170],0
            je .L_405177

            mov QWORD PTR [RSP+16],-30
.L_405139:

            mov RDI,R15
            call .L_404660

            jmp .L_40504b
.L_405146:

            cmp R12D,-1
            je .L_4051fd

            test EBP,EBP
            jle .L_4051d1

            lea RAX,QWORD PTR [R12+R12*4]
            mov RDI,QWORD PTR [R15+1032]
            lea RAX,QWORD PTR [R12+RAX*2]
            lea RAX,QWORD PTR [R15+RAX*8+1064]
            mov QWORD PTR [R15+2472],RAX
            jmp .L_40507a
.L_405177:

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,1
            call .L_403630

            cmp QWORD PTR [RSP+16],0
            js .L_405139

            mov RDI,QWORD PTR [R15+1032]
            mov RAX,QWORD PTR [RDI+88]
            mov QWORD PTR [R15+40],RAX
            mov EAX,DWORD PTR [RDI+96]
            mov DWORD PTR [R15+32],EAX
            jmp .L_405070
.L_4051a9:

            lea RDX,QWORD PTR [RIP+.L_405678]
            mov ESI,22
            mov RDI,R15
            xor EAX,EAX
            mov EBP,4294967266
            call .L_43f5d0

            mov DWORD PTR [R15+4],32768
            jmp .L_404ead
.L_4051d1:

            lea RDX,QWORD PTR [RIP+.L_450f60-309088]
            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            call .L_43f5d0
.L_4051e7:

            mov RDI,QWORD PTR [R15+1032]
            call .L_4033e0

            jmp .L_40504b
.L_4051f8:

            call __stack_chk_fail@PLT
.L_4051fd:

            lea RDX,QWORD PTR [RIP+.L_450f60-309110]
            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_4051e7
.L_405215:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405220:

            push R14
            push R13
            mov R13,RCX
            push R12
            lea RCX,QWORD PTR [RIP+.L_405488]
            push RBP
            push RBX
.L_405232:

            mov RBP,RSI
            mov R14,RDX
            mov ESI,14594245
            mov EDX,1
            mov RBX,RDI
            mov R12,R8
            call .L_443f50

            cmp EAX,-30
            je .L_405259

            mov QWORD PTR [RBX+192],R14
.L_405259:

            lea RCX,QWORD PTR [RIP+.L_4054a8]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_443f50

            cmp EAX,-30
            je .L_40527e

            mov QWORD PTR [RBX+200],R13
.L_40527e:

            lea RCX,QWORD PTR [RIP+.L_405508]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_443f50

            cmp EAX,-30
            je .L_4052a3

            mov QWORD PTR [RBX+224],R12
.L_4052a3:

            mov RDI,RBX
            mov RSI,RBP
            xor EDX,EDX
            call .L_403e70

            mov RDI,RBX
            pop RBX
.L_4052b4:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_404de0
.L_4052c0:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            xor EDX,EDX
            push RBX
.L_4052cd:

            mov R13,RCX
            mov RBX,RDI
            mov R12,R8
            mov RBP,R9
            call .L_403e70

            lea RCX,QWORD PTR [RIP+.L_405488]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_443f50

            cmp EAX,-30
            je .L_405303

            mov QWORD PTR [RBX+192],R14
.L_405303:

            lea RCX,QWORD PTR [RIP+.L_4054a8]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_443f50

            cmp EAX,-30
            je .L_405328

            mov QWORD PTR [RBX+200],R13
.L_405328:

            lea RCX,QWORD PTR [RIP+.L_4054c8]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_443f50

            cmp EAX,-30
            je .L_40534d

            mov QWORD PTR [RBX+208],R12
.L_40534d:

            lea RCX,QWORD PTR [RIP+.L_405508]
            mov EDX,1
            mov ESI,14594245
            mov RDI,RBX
            call .L_443f50

            cmp EAX,-30
            je .L_405372

            mov QWORD PTR [RBX+224],RBP
.L_405372:

            mov RDI,RBX
            pop RBX
.L_405376:

            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_404de0
.L_405382:
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405388:
          .string "Current client reader does not support seeking a device"
.L_4053c0:
          .string "Internal error: No format->read_data function registered"
          .zero 7
.L_405400:
          .string "Unable to allocate copy buffer"
          .zero 1
.L_405420:
          .string "Truncated input file (needed %jd bytes, only %jd available)"
          .zero 4
.L_405460:
          .string "archive_read_extract_set_skip_file"
          .zero 5
.L_405488:
          .string "archive_read_set_open_callback"
          .zero 1
.L_4054a8:
          .string "archive_read_set_read_callback"
          .zero 1
.L_4054c8:
          .string "archive_read_set_skip_callback"
          .zero 1
.L_4054e8:
          .string "archive_read_set_seek_callback"
          .zero 1
.L_405508:
          .string "archive_read_set_close_callback"
.L_405528:
          .string "archive_read_set_switch_callback"
          .zero 7
.L_405550:
          .string "archive_read_set_callback_data2"
.L_405570:
          .string "archive_read_add_callback_data"
          .zero 1
.L_405590:
          .string "Encountered out-of-order sparse blocks"
          .zero 1
.L_4055b8:
          .string "Internal error: No format_seek_data_block function registered"
          .zero 2
.L_4055f8:
          .string "__archive_read_register_format"
          .zero 1
.L_405618:
          .string "Not enough slots for format registration"
          .zero 7
.L_405648:
          .string "Not enough slots for filter registration"
          .zero 7
.L_405678:
          .string "No reader function provided to archive_read_open"
          .zero 7
.L_4056b0:
          .string "Input requires too many filters for decoding"
.L_4056dd:
          .string "archive_read_close"
.L_4056f0:
          .string "archive_read_data_block"
.L_405708:
          .string "Negative skip requested."
.L_405721:
          .string "No memory."
.L_40572c:
          .string "Invalid index specified."
.L_405745:
          .string "archive_read_header_position"
.L_405762:
          .string "archive_read_data_skip"
.L_405779:
          .string "archive_read_next_header"
.L_405792:

            push RAX
            jb .L_4057fa
          .byte 0x6d
          .byte 0x61
          .byte 0x74
          .byte 0x75
          .byte 0x72
          .byte 0x65
          .byte 0x20
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x2d
          .byte 0x6f
          .byte 0x66
          .byte 0x2d
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x2e
          .byte 0x0
.L_4057a9:
          .string "archive_seek_data_block"
.L_4057c1:
          .string "archive_read_free"
.L_4057d3:
          .string "archive_read_open"
.L_4057e5:

            outsb DX,BYTE PTR [RSI]
            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
            add BYTE PTR GS:[RSI+111],CL
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x6d
          .byte 0x61
          .byte 0x74
          .byte 0x73
          .byte 0x20
          .byte 0x72
          .byte 0x65
          .byte 0x67
          .byte 0x69
          .byte 0x73
.L_4057fa:

            je .L_405861

            jb .L_405863

            add BYTE PTR FS:[RBP+110],DL
          .byte 0x72
          .byte 0x65
          .byte 0x63
          .byte 0x6f
          .byte 0x67
          .byte 0x6e
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x6d
          .byte 0x61
          .byte 0x74
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405820:

            push RBX

            lea RCX,QWORD PTR [RIP+.L_4058b8]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_4058a9

            mov RDI,RBX
            call .L_405d30

            mov RDI,RBX
            call .L_406560

            mov RDI,RBX
            call .L_406ee0

            mov RDI,RBX
            call .L_40a780
          .byte 0x48
          .byte 0x89
.L_405861:

            fucompi ST(0)
.L_405863:

            pop RCX
            add BYTE PTR [RAX],R8B
            mov RDI,RBX
            call .L_40a600

            mov RDI,RBX
            call .L_4095e0

            mov RDI,RBX
            call .L_4084f0

            mov RDI,RBX
            call .L_407260

            mov RDI,RBX
            call .L_407640

            mov RDI,RBX
            call .L_4067b0

            mov RDI,RBX
            call .L_407480

            mov RDI,RBX
            call .L_43f5b0

            xor EAX,EAX
.L_4058a9:

            pop RBX

            ret 
.L_4058ab:

            nop
            nop
            nop
            nop
            nop
.L_4058b0:

            jmp .L_405820
.L_4058b5:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4058b8:
          .string "archive_read_support_filter_all"
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4058e0:

            xor EAX,EAX
            ret 
.L_4058e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4058f0:

            lea RAX,QWORD PTR [RIP+.L_405de5]
            push R12
            push RBP
            push RBX
.L_4058fb:

            mov ESI,1
            mov DWORD PTR [RDI+96],2
            mov QWORD PTR [RDI+88],RAX
            mov RBX,RDI
            mov EDI,104
            call calloc@PLT

            mov EDI,65536
            mov RBP,RAX
            call malloc@PLT

            test RBP,RBP
            mov R12,RAX
            je .L_405967

            test RAX,RAX
            je .L_405967

            mov QWORD PTR [RBP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_405ab0]
            mov QWORD PTR [RBX+80],RBP
            mov QWORD PTR [RBP+88],65536
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4059a0]
            mov QWORD PTR [RBX+64],RAX
            xor EAX,EAX
.L_405962:

            pop RBX
.L_405963:

            pop RBP
            pop R12
            ret 
.L_405967:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_405e70]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            mov RDI,R12
            call free@PLT

            mov RDI,RBP
            call free@PLT

            mov EAX,4294967266
            jmp .L_405962
.L_405995:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4059a0:

            push R12
            push RBP
            xor EBP,EBP
            push RBX
            mov RBX,QWORD PTR [RDI+80]
            cmp BYTE PTR [RBX+96],0
            jne .L_4059d0
.L_4059b0:

            mov RDI,QWORD PTR [RBX+80]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4059d0:

            mov R12,RDI
            mov RDI,RBX
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            mov EBP,EAX
            je .L_4059b0

            mov RDI,QWORD PTR [R12+24]
            lea RDX,QWORD PTR [RIP+.L_405ea0]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBP,4294967266
            call .L_43f5d0

            jmp .L_4059b0
.L_405a00:

            sub RSP,24
.L_405a04:

            mov RDI,RSI
            mov ESI,14
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_405a37

            cmp WORD PTR [RDX],23106
            je .L_405a50
.L_405a35:

            xor EAX,EAX
.L_405a37:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_405a9f

            add RSP,24
.L_405a4b:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405a50:

            cmp BYTE PTR [RDX+2],104
            jne .L_405a35

            movzx ECX,BYTE PTR [RDX+3]
            sub ECX,49
            cmp CL,8
            ja .L_405a37

            cmp DWORD PTR [RDX+4],643383601
            lea RCX,QWORD PTR [RDX+4]
            je .L_405a90
.L_405a6f:

            cmp DWORD PTR [RDX+4],944075287
            jne .L_405a37

            cmp WORD PTR [RCX+4],36944
            mov EDX,77
            cmove EAX,EDX
            jmp .L_405a37
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405a90:

            cmp WORD PTR [RCX+4],22867
            jne .L_405a6f

            mov EAX,77
            jmp .L_405a37
.L_405a9f:

            call __stack_chk_fail@PLT
.L_405aa4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405ab0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            push RBX
            sub RSP,16
.L_405abf:

            mov RBX,QWORD PTR [RDI+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp BYTE PTR [RBX+97],0
            jne .L_405c10

            mov RAX,QWORD PTR [RBX+80]
            mov RBP,RDI
            mov R13,RSP
            mov QWORD PTR [RBX+24],RAX
            mov RAX,QWORD PTR [RBX+88]
            mov DWORD PTR [RBX+32],EAX
.L_405af2:

            cmp BYTE PTR [RBX+96],0
            mov RDI,QWORD PTR [RBP+16]
            jne .L_405b3d

            mov RSI,RDI
            mov RDI,QWORD PTR [RBP+8]
            call .L_405a00

            test EAX,EAX
            je .L_405c40

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBX
            call BZ2_bzDecompressInit@PLT

            cdqe 
            cmp RAX,-3
            mov QWORD PTR [RSP],RAX
            je .L_405c20
.L_405b2c:

            test RAX,RAX
            jne .L_405c88

            mov BYTE PTR [RBX+96],1
            mov RDI,QWORD PTR [RBP+16]
.L_405b3d:

            mov RDX,R13
            mov ESI,1
            call .L_404a10

            test RAX,RAX
            mov R12,RAX
            je .L_405c60

            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            mov DWORD PTR [RBX+8],EAX
            je .L_405c40

            mov RDI,RBX
            call BZ2_bzDecompress@PLT

            mov RSI,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RBP+16]
            cdqe 
            mov QWORD PTR [RSP],RAX
            sub RSI,R12
            call .L_404a60

            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            je .L_405bec

            cmp RAX,4
            je .L_405bd8

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_450f60-307470]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov RAX,-30
.L_405bb3:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_405d29

            add RSP,16
.L_405bcb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405bd8:

            mov RDI,RBX
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            jne .L_405ce1

            mov BYTE PTR [RBX+96],0
.L_405bec:

            mov EAX,DWORD PTR [RBX+32]
            test EAX,EAX
            jne .L_405af2

            mov RAX,QWORD PTR [RBX+80]
            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RBX+24]
            sub RAX,QWORD PTR [RBX+80]
            jmp .L_405bb3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405c10:

            mov QWORD PTR [RSI],0
            jmp .L_405bb3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405c20:

            mov EDX,1
            xor ESI,ESI
            mov RDI,RBX
            call BZ2_bzDecompressInit@PLT

            cdqe 
            mov QWORD PTR [RSP],RAX
            jmp .L_405b2c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405c40:

            mov RAX,QWORD PTR [RBX+80]
            mov BYTE PTR [RBX+97],1
            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RBX+24]
            sub RAX,QWORD PTR [RBX+80]
            jmp .L_405bb3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405c60:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_405e3c]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov RAX,-30
            jmp .L_405bb3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405c88:

            cmp RAX,-3
            je .L_405d14

            cmp RAX,-2
            mov ESI,4294967295
            je .L_405d04

            cmp RAX,-9
            lea R8,QWORD PTR [RIP+.L_450f60-307527]
            lea RCX,QWORD PTR [RIP+.L_405e16]
            lea RAX,QWORD PTR [RIP+.L_405dfd]
            mov EDX,0
            cmovne R8,RDX
            cmovne RCX,RAX
.L_405cc3:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_405ec0]
            xor EAX,EAX
            call .L_43f5d0

            mov RAX,-30
            jmp .L_405bb3
.L_405ce1:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_405ea0]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov RAX,-30
            jmp .L_405bb3
.L_405d04:

            lea R8,QWORD PTR [RIP+.L_405dfe]
            lea RCX,QWORD PTR [RIP+.L_405e16]
            jmp .L_405cc3
.L_405d14:

            mov ESI,12
            lea R8,QWORD PTR [RIP+.L_405e2e]
            lea RCX,QWORD PTR [RIP+.L_405e16]
            jmp .L_405cc3
.L_405d29:

            call __stack_chk_fail@PLT
.L_405d2e:

            nop
            nop
.L_405d30:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_405ef0]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_405d49:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_405dd0

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            jne .L_405dd0

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_405de5]
            lea RDI,QWORD PTR [RIP+.L_4058f0]
            lea RBX,QWORD PTR [RIP+.L_4058e0]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_405a00]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],RBX
.L_405db1:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_405dd7

            add RSP,16
.L_405dc5:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405dd0:

            mov EAX,4294967266
            jmp .L_405db1
.L_405dd7:

            call __stack_chk_fail@PLT
.L_405ddc:

            nop
            nop
            nop
            nop
.L_405de0:

            jmp .L_405d30
.L_405de5:
          .string "bzip2"
          .byte 0x42
          .byte 0x5a
          .byte 0x68
          .byte 0x0
          .byte 0x31
          .byte 0x41
          .byte 0x59
          .byte 0x26
          .byte 0x53
          .byte 0x59
          .byte 0x0
          .byte 0x17
          .byte 0x72
          .byte 0x45
          .byte 0x38
          .byte 0x50
          .byte 0x90
          .byte 0x0
.L_405dfd:
          .zero 1
.L_405dfe:
          .string "invalid setup parameter"
.L_405e16:

            cmp AH,BYTE PTR [RAX]
            add BYTE PTR [RBP+105],CH
            jae .L_405e4a
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x72
          .byte 0x61
          .byte 0x72
          .byte 0x79
          .byte 0x0
.L_405e2e:
          .string "out of memory"
.L_405e3c:
          .byte 0x74
          .byte 0x72
          .byte 0x75
          .byte 0x6e
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x62
          .byte 0x7a
          .byte 0x69
          .byte 0x70
.L_405e4a:

            xor AH,BYTE PTR [RAX]
            imul EBP,DWORD PTR [RSI+112],1644196981
            jp .L_405ebe
          .byte 0x70
          .byte 0x20
          .byte 0x64
          .byte 0x65
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x66
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405e70:
          .string "Can\'t allocate data for bzip2 decompression"
          .zero 4
.L_405ea0:
          .byte 0x46
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x74
          .byte 0x6f
          .byte 0x20
          .byte 0x63
          .byte 0x6c
          .byte 0x65
          .byte 0x61
          .byte 0x6e
          .byte 0x20
          .byte 0x75
          .byte 0x70
          .byte 0x20
          .byte 0x64
          .byte 0x65
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x6f
.L_405ebe:

            jb .L_405ec0
.L_405ec0:

            outsb DX,BYTE PTR [RSI]
            je .L_405f29
          .byte 0x72
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x74
          .byte 0x69
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x7a
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x64
          .byte 0x65
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x6f
          .byte 0x72
          .byte 0x25
          .byte 0x73
          .byte 0x25
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405ef0:
          .string "archive_read_support_filter_bzip2"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405f20:

            mov QWORD PTR [RDI],0
            xor EAX,EAX
.L_405f29:

            ret 
.L_405f2a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405f30:

            push RBX
            mov RBX,QWORD PTR [RDI+80]
            mov RDI,QWORD PTR [RBX+48]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
            ret 
.L_405f4a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_405f50:

            sub RSP,24
.L_405f54:

            mov RDI,RSI
            mov ESI,3
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_405f83

            cmp BYTE PTR [RDX],31
            je .L_405fa0
.L_405f83:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_405fb6

            add RSP,24
.L_405f97:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405fa0:

            cmp BYTE PTR [RDX+1],157
            jne .L_405f83

            movzx EAX,BYTE PTR [RDX+2]
            and EAX,96
            cmp AL,1
            sbb EAX,EAX
            and EAX,18
            jmp .L_405f83
.L_405fb6:

            call __stack_chk_fail@PLT
.L_405fbb:

            nop
            nop
            nop
            nop
            nop
.L_405fc0:

            push R13
            push R12
            push RBP
            push RBX
            movsxd RBP,EDX
            mov RBX,RSI
            sub RSP,24
.L_405fd0:

            mov ECX,DWORD PTR [RSI+28]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp EBP,ECX
            jle .L_406083

            mov R12,RDI
            mov RDX,QWORD PTR [RSI+8]
            mov R13,RSP
            jmp .L_40602e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406000:

            mov RAX,QWORD PTR [RBX]
.L_406003:

            lea RSI,QWORD PTR [RAX+1]
            sub RDX,1
            mov QWORD PTR [RBX],RSI
            movzx EAX,BYTE PTR [RAX]
            lea ESI,DWORD PTR [RCX+8]
            add QWORD PTR [RBX+32],1
            mov QWORD PTR [RBX+8],RDX
            mov DWORD PTR [RBX+28],ESI
            shl EAX,CL
            or EAX,DWORD PTR [RBX+24]
            cmp ESI,EBP
            mov ECX,ESI
            mov DWORD PTR [RBX+24],EAX
            jge .L_406090
.L_40602e:

            test RDX,RDX
            jne .L_406000

            mov RSI,QWORD PTR [RBX+16]
            mov RDI,QWORD PTR [R12]
            test RSI,RSI
            jne .L_406070
.L_406040:

            mov RDX,R13
            mov ESI,1
            call .L_404a10

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBX],RAX
            test RDX,RDX
            je .L_4060d0

            test RAX,RAX
            je .L_4060c8

            test RDX,RDX
            js .L_4060c8

            mov QWORD PTR [RBX+8],RDX
            mov QWORD PTR [RBX+16],RDX
            mov ECX,DWORD PTR [RBX+28]
            jmp .L_406003
.L_406070:

            call .L_404a60

            mov QWORD PTR [RBX+16],0
            mov RDI,QWORD PTR [R12]
            jmp .L_406040
.L_406083:

            mov EAX,DWORD PTR [RBX+24]
            mov ESI,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406090:

            mov EDX,EAX
            mov ECX,EBP
            sub ESI,EBP
            sar EDX,CL
            mov DWORD PTR [RBX+28],ESI
            mov DWORD PTR [RBX+24],EDX
            lea RDX,QWORD PTR [RIP+.L_4066a0]
            and EAX,DWORD PTR [RDX+RBP*4]
.L_4060a8:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4060d7

            add RSP,24
.L_4060bc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4060c8:

            mov EAX,4294967266
            jmp .L_4060a8
          .byte 0x90
.L_4060d0:

            mov EAX,4294967295
            jmp .L_4060a8
.L_4060d7:

            call __stack_chk_fail@PLT
.L_4060dc:

            nop
            nop
            nop
            nop
.L_4060e0:

            push R14
            push R13
            movabs R13,38654706175
            push R12
            push RBP
            lea R12,QWORD PTR [RDI+16]
            push RBX
.L_4060f6:

            mov R14,QWORD PTR [RDI+80]
            mov RBP,RDI
.L_4060fd:

            mov EDX,DWORD PTR [R14+76]
            mov RSI,R14
            mov RDI,R12
            call .L_405fc0

            test EAX,EAX
            js .L_4061d8

            mov ECX,DWORD PTR [RIP+.L_65b78c]
            lea EDX,DWORD PTR [RCX+1]
            mov ECX,0
            cmp EDX,1023
            cmova EDX,ECX
            cmp EAX,256
            mov DWORD PTR [RIP+.L_65b78c],EDX
            jne .L_4061e8

            mov ECX,DWORD PTR [R14+56]
            test ECX,ECX
            je .L_4061e8

            movsxd RSI,DWORD PTR [R14+76]
            mov RAX,QWORD PTR [R14+32]
            xor EDX,EDX
            mov DWORD PTR [R14+28],0
            div RSI
            mov EAX,ESI
            sub EAX,EDX
            cdq 
            idiv ESI
            mov EBX,EDX
            jmp .L_406184
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406170:

            mov EDX,8
            mov RDI,R12
            sub EBX,1
            call .L_405fc0

            test EAX,EAX
            js .L_4061d8
.L_406184:

            test EBX,EBX
            mov RSI,QWORD PTR [RBP+80]
            jg .L_406170

            mov QWORD PTR [R14+32],0
            mov DWORD PTR [R14+88],257
            mov QWORD PTR [R14+72],R13
            mov DWORD PTR [R14+80],4294967295
            mov R14,RSI
            jmp .L_4060fd
.L_4061b0:

            mov EDX,DWORD PTR [R14+80]
            test EDX,EDX
            jns .L_4062b0
.L_4061bc:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_406615]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov EAX,4294967266
.L_4061d8:

            pop RBX
.L_4061d9:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4061e8:

            cmp DWORD PTR [R14+88],EAX
            jl .L_4061bc

            je .L_4061b0

            movsxd RDX,EAX
            jg .L_406224

            jmp .L_4062b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406200:

            mov RCX,QWORD PTR [R14+196704]
            lea RSI,QWORD PTR [RCX+1]
            mov QWORD PTR [R14+196704],RSI
            movzx ESI,BYTE PTR [R14+RDX*1+92]
            mov BYTE PTR [RCX],SIL
            movzx EDX,WORD PTR [R14+RDX*2+65628]
.L_406224:

            cmp EDX,255
            jg .L_406200

            mov RCX,QWORD PTR [R14+196704]
            mov DWORD PTR [R14+84],EDX
            lea RSI,QWORD PTR [RCX+1]
            mov QWORD PTR [R14+196704],RSI
            mov BYTE PTR [RCX],DL
            mov EDX,DWORD PTR [R14+88]
            mov ESI,DWORD PTR [R14+64]
            cmp ESI,EDX
            jle .L_406274

            mov ECX,DWORD PTR [R14+80]
            test ECX,ECX
            js .L_406274

            movsxd RDI,EDX
            add EDX,1
            mov WORD PTR [R14+RDI*2+65628],CX
            mov ECX,DWORD PTR [R14+84]
            mov BYTE PTR [R14+RDI*1+92],CL
            mov DWORD PTR [R14+88],EDX
.L_406274:

            cmp DWORD PTR [R14+72],EDX
            jge .L_4062a1

            mov EDI,DWORD PTR [R14+76]
            mov QWORD PTR [R14+32],0
            lea ECX,DWORD PTR [RDI+1]
            cmp ECX,DWORD PTR [R14+68]
            mov DWORD PTR [R14+76],ECX
            je .L_4062d1

            mov EDX,1
            shl EDX,CL
            sub EDX,1
            mov DWORD PTR [R14+72],EDX
.L_4062a1:

            mov DWORD PTR [R14+80],EAX
            xor EAX,EAX
            pop RBX
.L_4062a8:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4062b0:

            mov RDX,QWORD PTR [R14+196704]
            mov ECX,DWORD PTR [R14+84]
            lea RSI,QWORD PTR [RDX+1]
            mov QWORD PTR [R14+196704],RSI
            mov BYTE PTR [RDX],CL
            movsxd RDX,DWORD PTR [R14+80]
            jmp .L_406224
.L_4062d1:

            mov DWORD PTR [R14+72],ESI
            jmp .L_4062a1
.L_4062d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4062e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4062ee:

            mov RBP,QWORD PTR [RDI+80]
            mov EDX,DWORD PTR [RBP+60]
            test EDX,EDX
            jne .L_4063a0

            mov R12,QWORD PTR [RBP+48]
            mov R15,QWORD PTR [RBP+40]
            mov R14,RDI
            mov QWORD PTR [RSP+8],RSI
            add R15,R12
            cmp R12,R15
            jae .L_4063b8

            lea R13,QWORD PTR [RBP+196712]
            mov RBX,R12
            jmp .L_40634a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406328:

            lea RDX,QWORD PTR [RAX-1]
            add RBX,1
            mov QWORD PTR [RBP+196704],RDX
            movzx EAX,BYTE PTR [RAX-1]
            mov BYTE PTR [RBX-1],AL
.L_40633e:

            cmp RBX,R15
            jae .L_4063bc

            mov EAX,DWORD PTR [RBP+60]
            test EAX,EAX
            jne .L_4063bc
.L_40634a:

            mov RAX,QWORD PTR [RBP+196704]
            cmp RAX,R13
            ja .L_406328

            mov RDI,R14
            call .L_4060e0

            cmp EAX,-1
            je .L_406380

            test EAX,EAX
            je .L_40633e

            add RSP,24
.L_40636b:

            cdqe 
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406380:

            mov DWORD PTR [RBP+60],EAX
            mov RAX,RBX
            sub RAX,R12
.L_406389:

            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RCX],R12
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4063a0:

            mov QWORD PTR [RSI],0
            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4063b8:

            xor EAX,EAX
            jmp .L_406389
.L_4063bc:

            mov RAX,RBX
            sub RAX,R12
            jmp .L_406389
.L_4063c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4063d0:

            lea RAX,QWORD PTR [RIP+.L_40662d]
            push R12
            push RBP
            push RBX
.L_4063db:

            mov ESI,1
            mov DWORD PTR [RDI+96],3
            mov QWORD PTR [RDI+88],RAX
            mov RBP,RDI
            mov EDI,262016
            call calloc@PLT

            mov EDI,65536
            mov RBX,RAX
            call malloc@PLT

            test RBX,RBX
            je .L_406508

            test RAX,RAX
            je .L_406508

            mov QWORD PTR [RBX+48],RAX
            lea RAX,QWORD PTR [RIP+.L_4062e0]
            lea R12,QWORD PTR [RBP+16]
            mov EDX,8
            mov RSI,RBX
            mov QWORD PTR [RBP+80],RBX
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_405f30]
            mov RDI,R12
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBX+40],65536
            mov QWORD PTR [RBP+64],RAX
            call .L_405fc0

            mov RSI,QWORD PTR [RBP+80]
            mov EDX,8
            mov RDI,R12
            call .L_405fc0

            mov RSI,QWORD PTR [RBP+80]
            mov EDX,8
            mov RDI,R12
            call .L_405fc0

            mov ECX,EAX
            and ECX,31
            cmp ECX,16
            jg .L_40653d

            mov EDX,1
            and EAX,128
            mov DWORD PTR [RBX+68],ECX
            shl EDX,CL
            test EAX,EAX
            mov DWORD PTR [RBX+56],EAX
            mov DWORD PTR [RBX+64],EDX
            lea RDX,QWORD PTR [RBX+196712]
            mov DWORD PTR [RBX+88],256
            mov QWORD PTR [RBX+196704],RDX
            jne .L_4064ff
.L_4064b7:

            movabs RAX,38654706175
            mov DWORD PTR [RBX+80],4294967295
            mov QWORD PTR [RBX+72],RAX
            mov EAX,255
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4064d8:

            xor EDX,EDX
            mov WORD PTR [RBX+RAX*2+65628],DX
            mov BYTE PTR [RBX+RAX*1+92],AL
            sub RAX,1
            cmp RAX,-1
            jne .L_4064d8

            mov RDI,RBP
            call .L_4060e0

            xor EAX,EAX
.L_4064fa:

            pop RBX
.L_4064fb:

            pop RBP
            pop R12
            ret 
.L_4064ff:

            mov DWORD PTR [RBX+88],257
            jmp .L_4064b7
.L_406508:

            mov RDI,RAX
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RDI,QWORD PTR [RBP+24]
            lea RCX,QWORD PTR [RIP+.L_40662d]
            lea RDX,QWORD PTR [RIP+.L_406640]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4064fa
.L_40653d:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_406615]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4064fa
.L_40655b:

            nop
            nop
            nop
            nop
            nop
.L_406560:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_406670]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_406579:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_406600

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            jne .L_406600

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_40662d]
            lea RDI,QWORD PTR [RIP+.L_4063d0]
            lea RBX,QWORD PTR [RIP+.L_405f20]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_405f50]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],RBX
.L_4065e1:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_406607

            add RSP,16
.L_4065f5:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406600:

            mov EAX,4294967266
            jmp .L_4065e1
.L_406607:

            call __stack_chk_fail@PLT
.L_40660c:

            nop
            nop
            nop
            nop
.L_406610:

            jmp .L_406560
.L_406615:
          .string "Invalid compressed data"
.L_40662d:
          .string "compress (.Z)"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406640:
          .string "Can\'t allocate data for %s decompression"
          .zero 7
.L_406670:
          .string "archive_read_support_filter_compress"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_4066a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_4066f0:

            xor EAX,EAX
            ret 
.L_4066f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406700:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_406866]
            mov RBX,RDI
            call .L_407db0

            lea RDX,QWORD PTR [RIP+.L_40686f]
            mov DWORD PTR [RBX+96],12
            mov QWORD PTR [RBX+88],RDX
            pop RBX
            ret 
.L_406724:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406730:

            sub RSP,24
.L_406734:

            mov RDI,RSI
            mov ESI,12
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_406773

            cmp QWORD PTR [RSP],0
            je .L_406773

            mov RAX,QWORD PTR [RIP+.L_4068d8]
            cmp QWORD PTR [RDX],RAX
            je .L_406790
.L_406771:

            xor EAX,EAX
.L_406773:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4067a2

            add RSP,24
.L_406787:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406790:

            mov EAX,DWORD PTR [RIP+.L_450f60-304768]
            cmp DWORD PTR [RDX+8],EAX
            jne .L_406771

            mov EAX,96
            jmp .L_406773
.L_4067a2:

            call __stack_chk_fail@PLT
.L_4067a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4067b0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_450f60-304872]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_4067c9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_4067f2

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            je .L_406810
.L_4067f2:

            mov EAX,4294967266
.L_4067f7:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_406861

            add RSP,16
.L_40680b:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406810:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_406730]
            mov ESI,4294967295
            mov RDI,RBX
            mov QWORD PTR [RAX+16],RDX
            lea RDX,QWORD PTR [RIP+.L_406700]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+24],RDX
            lea RDX,QWORD PTR [RIP+.L_4066f0]
            mov QWORD PTR [RAX+40],RDX
            lea RDX,QWORD PTR [RIP+.L_4068a0]
            xor EAX,EAX
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_4067f7
.L_406861:

            call __stack_chk_fail@PLT
.L_406866:

            jb .L_4068e3
          .byte 0x69
          .byte 0x70
          .byte 0x20
          .byte 0x2d
          .byte 0x64
          .byte 0x0
.L_40686f:
          .string "grzip"
# WARNING: found overlapping blocks at address 6632

            nop
            nop
            nop
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x5f
          .byte 0x72
          .byte 0x65
          .byte 0x61
          .byte 0x64
          .byte 0x5f
          .byte 0x73
          .byte 0x75
          .byte 0x70
          .byte 0x70
          .byte 0x6f
          .byte 0x72
          .byte 0x74
          .byte 0x5f
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x5f
          .byte 0x67
          .byte 0x72
          .byte 0x7a
          .byte 0x69
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4068a0:

            push RBP
            jae .L_40690c
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x65

            jb .L_40691a
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x67
          .byte 0x72
          .byte 0x7a
          .byte 0x69
          .byte 0x70
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x67
          .byte 0x72
          .byte 0x61
          .byte 0x6d
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x67
          .byte 0x72
          .byte 0x7a
          .byte 0x69
          .byte 0x70
          .byte 0x20
          .byte 0x64
          .byte 0x65
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4068d8:
          .byte 0x47
          .byte 0x52
          .byte 0x5a
          .byte 0x69
          .byte 0x70
          .byte 0x49
.L_4068de:

            add BYTE PTR [R10],AL
            add AL,58
.L_4068e3:

            sub DWORD PTR [RSI+46],ESP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4068f0:

            push RBP
            lea RAX,QWORD PTR [RIP+.L_406f95]
            push RBX
            mov ESI,1
            mov RBX,RDI
            sub RSP,8
.L_406905:

            mov DWORD PTR [RDI+96],1
.L_40690c:

            mov QWORD PTR [RDI+88],RAX
            mov EDI,160
            call calloc@PLT
.L_40691a:

            mov EDI,65536
            mov RBP,RAX
            call malloc@PLT

            test RBP,RBP
            je .L_40696f

            test RAX,RAX
            je .L_40696f

            mov QWORD PTR [RBP+120],RAX
            lea RAX,QWORD PTR [RIP+.L_406b70]
            mov QWORD PTR [RBX+80],RBP
            mov QWORD PTR [RBP+128],65536
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4069a0]
            mov BYTE PTR [RBP+112],0
            mov QWORD PTR [RBX+64],RAX
            xor EAX,EAX
.L_406968:

            add RSP,8
.L_40696c:

            pop RBX
            pop RBP
            ret 
.L_40696f:

            mov RDI,RAX
            call free@PLT

            mov RDI,RBP
            call free@PLT

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_406fd8]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_406968
.L_40699d:

            nop
            nop
            nop
.L_4069a0:

            push R12
            push RBP
            xor EBP,EBP
            push RBX
            mov RBX,QWORD PTR [RDI+80]
            cmp BYTE PTR [RBX+112],0
            jne .L_4069d0
.L_4069b0:

            mov RDI,QWORD PTR [RBX+120]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4069d0:

            mov R12,RDI
            mov RDI,RBX
            call inflateEnd@PLT

            test EAX,EAX
            mov EBP,EAX
            je .L_4069b0

            mov RDI,QWORD PTR [R12+24]
            lea RDX,QWORD PTR [RIP+.L_407008]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBP,4294967266
            call .L_43f5d0

            jmp .L_4069b0
.L_406a00:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            mov ESI,10
            push RBX
            mov RBP,RDI
            sub RSP,16
.L_406a17:

            mov R12,RSP
            mov RDX,R12
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            test RAX,RAX
            je .L_406a45

            cmp QWORD PTR [RSP],0
            je .L_406a45

            cmp WORD PTR [RAX],35615
            je .L_406a70
.L_406a45:

            xor EBX,EBX
.L_406a47:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_406b60

            add RSP,16
.L_406a62:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406a70:

            cmp BYTE PTR [RAX+2],8
            jne .L_406a45

            movzx R14D,BYTE PTR [RAX+3]
            test R14B,224
            jne .L_406a45

            test R14B,4
            mov EBX,10
            jne .L_406b18
.L_406a90:

            test R14B,8
            jne .L_406ad6
.L_406a96:

            test R14B,16
            jne .L_406b06
.L_406a9c:

            and R14D,2
            jne .L_406b40
.L_406aa6:

            test R13,R13
            je .L_406a47

            mov DWORD PTR [R13],27
            jmp .L_406a47
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406ab8:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBP
            call .L_404a10

            test RAX,RAX
            je .L_406a45
.L_406acf:

            cmp BYTE PTR [RAX+RBX*1-1],0
            je .L_406a96
.L_406ad6:

            add RBX,1
            cmp QWORD PTR [RSP],RBX
            jge .L_406acf

            jmp .L_406ab8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406ae8:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBP
            call .L_404a10

            test RAX,RAX
            je .L_406a45
.L_406aff:

            cmp BYTE PTR [RAX+RBX*1-1],0
            je .L_406a9c
.L_406b06:

            add RBX,1
            cmp QWORD PTR [RSP],RBX
            jge .L_406aff

            jmp .L_406ae8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406b18:

            mov RDX,R12
            mov ESI,12
            mov RDI,RBP
            call .L_404a10

            test RAX,RAX
            je .L_406a45

            movzx EBX,WORD PTR [RAX+10]
            add RBX,12
            jmp .L_406a90
          .byte 0x66
          .byte 0x90
.L_406b40:

            add RBX,2
            mov RDX,R12
            mov RDI,RBP
            mov RSI,RBX
            call .L_404a10

            test RAX,RAX
            jne .L_406aa6

            jmp .L_406a45
.L_406b60:

            call __stack_chk_fail@PLT
.L_406b65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406b70:

            push R15
            push R14
            lea R14,QWORD PTR [RIP+.L_406f9e]
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_406b88:

            mov R15,QWORD PTR [RDI+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea R13,QWORD PTR [RSP+32]
            lea RBP,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+8],RSI
            mov RAX,QWORD PTR [R15+120]
            mov RDX,QWORD PTR [R15+128]
            mov QWORD PTR [R15+24],RAX
            mov DWORD PTR [R15+32],EDX
            mov EAX,EDX
.L_406bc0:

            test EAX,EAX
            je .L_406bf5

            cmp BYTE PTR [R15+152],0
            jne .L_406bf5

            cmp BYTE PTR [R15+112],0
            mov RDI,QWORD PTR [RBX+16]
            jne .L_406cc8

            xor ESI,ESI
            mov R12,QWORD PTR [RBX+80]
            call .L_406a00

            test RAX,RAX
            jne .L_406c48

            mov BYTE PTR [R15+152],1
.L_406bf5:

            mov RDX,QWORD PTR [R15+120]
            mov RAX,QWORD PTR [R15+24]
            mov ECX,0
            sub RAX,RDX
            add QWORD PTR [R15+136],RAX
            test RAX,RAX
            cmove RDX,RCX
            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RCX],RDX
            nop
            nop
            nop
            nop
            nop
.L_406c20:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_406e84

            add RSP,56
.L_406c38:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
.L_406c48:

            mov RDI,QWORD PTR [RBX+16]
            mov RSI,RAX
            call .L_404a60

            xor EDX,EDX
            xor ESI,ESI
            xor EDI,EDI
            call crc32@PLT

            mov RDI,QWORD PTR [RBX+16]
            mov RDX,R13
            mov ESI,1
            mov QWORD PTR [R12+144],RAX
            call .L_404a10

            mov QWORD PTR [R12],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov ECX,112
            mov RDX,R14
            mov ESI,4294967281
            mov RDI,R12
            mov DWORD PTR [R12+8],EAX
            call inflateInit2_@PLT

            cmp EAX,-4
            je .L_406e18

            jle .L_406dc8

            cmp EAX,-2
            je .L_406da0

            test EAX,EAX
            jne .L_406df0

            mov BYTE PTR [R12+112],1
            mov RDI,QWORD PTR [RBX+16]
            nop
            nop
            nop
.L_406cc8:

            mov RDX,RBP
            mov ESI,1
            call .L_404a10

            test RAX,RAX
            mov QWORD PTR [R15],RAX
            je .L_406e40

            mov RAX,QWORD PTR [RSP+24]
            xor ESI,ESI
            mov RDI,R15
            mov DWORD PTR [R15+8],EAX
            call inflate@PLT

            test EAX,EAX
            je .L_406d88

            cmp EAX,1
            jne .L_406d60

            mov EAX,DWORD PTR [R15+8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX+16]
            sub RSI,RAX
            call .L_404a60

            mov RDI,QWORD PTR [RBX+80]
            mov BYTE PTR [RDI+112],0
            call inflateEnd@PLT

            test EAX,EAX
            jne .L_406e61

            mov RDI,QWORD PTR [RBX+16]
            mov RDX,R13
            mov ESI,8
            call .L_404a10

            test RAX,RAX
            je .L_406d77

            cmp QWORD PTR [RSP+32],0
            je .L_406d77

            mov RDI,QWORD PTR [RBX+16]
            mov ESI,8
            call .L_404a60
.L_406d57:

            mov EAX,DWORD PTR [R15+32]
            jmp .L_406bc0
.L_406d60:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_406fba]
            mov ESI,4294967295
            xor EAX,EAX
            call .L_43f5d0
.L_406d77:

            mov RAX,-30
            jmp .L_406c20
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406d88:

            mov EAX,DWORD PTR [R15+8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBX+16]
            sub RSI,RAX
            call .L_404a60

            jmp .L_406d57
          .byte 0x90
.L_406da0:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_450f60-302896]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov RAX,-30
            jmp .L_406c20
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406dc8:

            cmp EAX,-6
            jne .L_406df0

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_4070c0]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov RAX,-30
            jmp .L_406c20
.L_406df0:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_407110]
            mov ECX,EAX
            mov ESI,4294967295
            xor EAX,EAX
            call .L_43f5d0

            mov RAX,-30
            jmp .L_406c20
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406e18:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_407080]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            mov RAX,-30
            jmp .L_406c20
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406e40:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_406fa5]
            mov ESI,4294967295
            call .L_43f5d0

            mov RAX,-30
            jmp .L_406c20
.L_406e61:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_407150]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov RAX,-30
            jmp .L_406c20
.L_406e84:

            call __stack_chk_fail@PLT
.L_406e89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406e90:

            sub RSP,24
            mov RDI,RSI
            lea RSI,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_406a00

            xor EDX,EDX
            test RAX,RAX
            je .L_406ebc

            mov EDX,DWORD PTR [RSP+4]
.L_406ebc:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_406ed3

            add RSP,24
            ret 
.L_406ed3:

            call __stack_chk_fail@PLT
.L_406ed8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ee0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_407178]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_406ef9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_406f78

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            jne .L_406f78

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_406f95]
            lea RDI,QWORD PTR [RIP+.L_4068f0]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_406e90]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_406f5e:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_406f7f

            add RSP,16
.L_406f72:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406f78:

            mov EAX,4294967266
            jmp .L_406f5e
.L_406f7f:

            call __stack_chk_fail@PLT
.L_406f84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406f90:

            jmp .L_406ee0
.L_406f95:
          .string "gzip"
          .byte 0x1f
          .byte 0x8b
          .byte 0x8
          .byte 0x0
.L_406f9e:
          .string "1.2.11"
.L_406fa5:
          .string "truncated gzip input"
.L_406fba:
          .string "gzip decompression failed"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406fd8:
          .string "Can\'t allocate data for gzip decompression"
          .zero 5
.L_407008:
          .string "Failed to clean up gzip compressor"
# WARNING: found overlapping blocks at address 6de8

.L_40702b:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX+110],CL
            je .L_407099

            jb .L_4070a4
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x74
          .byte 0x69
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x7a
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x72
          .byte 0x61
          .byte 0x72
          .byte 0x79
          .byte 0x3a
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x73
          .byte 0x65
          .byte 0x74
          .byte 0x75
          .byte 0x70
          .byte 0x20
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407080:
          .byte 0x49
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x74
          .byte 0x69
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x7a
          .byte 0x69
.L_407099:

            outsb DX,BYTE PTR [RSI]
            and BYTE PTR [EBX+111],AH
          .byte 0x6d
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
.L_4070a4:

            imul EBP,DWORD PTR [RDI+110],1651076128
            jb .L_40710e

            jb .L_407128

            cmp AH,BYTE PTR [RAX]
            outsd DX,DWORD PTR [RSI]
            jne .L_407128

            and BYTE PTR [RDI+102],CH
          .byte 0x20
          .byte 0x6d
          .byte 0x65
          .byte 0x6d
          .byte 0x6f
          .byte 0x72
          .byte 0x79

            add BYTE PTR [RAX],AL
.L_4070c0:
          .string "Internal error initializing compression library: invalid library version"
# WARNING: found overlapping blocks at address 6e84
# WARNING: found overlapping blocks at address 6e86
          .zero 5
.L_40710e:

            add BYTE PTR [RAX],AL
.L_407110:

            outsb DX,BYTE PTR [RSI]
            je .L_407179
          .byte 0x72
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x74
          .byte 0x69
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x7a
.L_407128:

            imul EBP,DWORD PTR [RSI+103],1836016416
            jo .L_4071a3
          .byte 0x65
          .byte 0x73
          .byte 0x73
.L_407134:

            imul EBP,DWORD PTR [RDI+110],1651076128
            jb .L_40719e

            jb .L_4071b8
          .byte 0x3a
          .byte 0x20
          .byte 0x20
          .byte 0x5a
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x25
          .byte 0x64
          .byte 0x0
.L_407150:
          .string "Failed to clean up gzip decompressor"
          .zero 3
.L_407178:
          .byte 0x61
.L_407179:

            jb .L_4071de

            push 1600484969
            jb .L_4071e7
          .byte 0x61
          .byte 0x64
          .byte 0x5f
          .byte 0x73
          .byte 0x75
          .byte 0x70
          .byte 0x70
          .byte 0x6f
          .byte 0x72
          .byte 0x74
          .byte 0x5f
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x5f
          .byte 0x67
          .byte 0x7a
          .byte 0x69
          .byte 0x70
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
.L_40719e:

            add BYTE PTR [RAX],AL
.L_4071a0:

            xor EAX,EAX
            ret 
.L_4071a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4071b0:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_407321]
.L_4071b8:

            mov RBX,RDI
            call .L_407db0

            lea RDX,QWORD PTR [RIP+.L_40732d]
            mov DWORD PTR [RBX+96],10
            mov QWORD PTR [RBX+88],RDX
            pop RBX
            ret 
.L_4071d4:
          .byte 0x66
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4071de:

            add BYTE PTR [RAX],AL
.L_4071e0:

            sub RSP,24
.L_4071e4:

            mov RDI,RSI
.L_4071e7:

            mov ESI,6
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_407238

            cmp QWORD PTR [RSP],0
            je .L_407238

            cmp DWORD PTR [RDX],1230656076
            jne .L_407238

            cmp BYTE PTR [RDX+4],0
            jne .L_407238

            movzx EAX,BYTE PTR [RDX+5]
            sub EAX,6
            cmp EAX,5
            sbb EAX,EAX
            and EAX,6
            nop
            nop
            nop
            nop
            nop
            nop
.L_407238:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40724d

            add RSP,24
.L_40724c:

            ret 
.L_40724d:

            call __stack_chk_fail@PLT
.L_407252:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407260:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_407338]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_407279:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_4072a2

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            je .L_4072c0
.L_4072a2:

            mov EAX,4294967266
.L_4072a7:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40731c

            add RSP,16
.L_4072bb:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4072c0:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_40732d]
            lea RCX,QWORD PTR [RIP+.L_4071a0]
            mov ESI,4294967295
            mov RDI,RBX
            mov QWORD PTR [RAX+8],RDX
            lea RDX,QWORD PTR [RIP+.L_4071e0]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],RCX
            mov QWORD PTR [RAX+16],RDX
            lea RDX,QWORD PTR [RIP+.L_4071b0]
            mov QWORD PTR [RAX+24],RDX
            lea RDX,QWORD PTR [RIP+.L_407360]
            xor EAX,EAX
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_4072a7
.L_40731c:

            call __stack_chk_fail@PLT
.L_407321:
          .string "lrzip -d -q"
.L_40732d:

            insb BYTE PTR [RDI],DX
            jb .L_4073aa
          .byte 0x69
          .byte 0x70
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407338:
          .string "archive_read_support_filter_lrzip"
          .zero 6
.L_407360:
          .string "Using external lrzip program for lrzip decompression"
# WARNING: found overlapping blocks at address 712a
# WARNING: found overlapping blocks at address 712c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_4073a0:

            xor EAX,EAX
            ret 
.L_4073a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
# WARNING: found overlapping blocks at address 716a
.set .L_4073aa, . - 6

.L_4073b0:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_407541]
            mov RBX,RDI
            call .L_407db0

            lea RDX,QWORD PTR [RIP+.L_450f60-301589]
            mov DWORD PTR [RBX+96],13
            mov QWORD PTR [RBX+88],RDX
            pop RBX
            ret 
.L_4073d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
# WARNING: found overlapping blocks at address 719a
.set .L_4073da, . - 6

.L_4073e0:

            sub RSP,24
.L_4073e4:

            mov RDI,RSI
            mov ESI,11
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            xor EDX,EDX
            test RAX,RAX
            je .L_407423

            mov ECX,DWORD PTR [RAX]
            cmp ECX,407708164
            je .L_407440

            xor EDX,EDX
            cmp ECX,407642370
            sete DL
            shl EDX,5
.L_407423:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_407473

            add RSP,24
.L_407439:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407440:

            movzx ECX,BYTE PTR [RAX+4]
            mov ESI,ECX
            shr SIL,6
            cmp SIL,1
            jne .L_407423

            and ECX,2
            jne .L_407423

            movzx ECX,BYTE PTR [RAX+5]
            mov EAX,ECX
            sar EAX,4
            and EAX,7
            cmp EAX,3
            jle .L_407423

            and ECX,4294967183
            cmp ECX,1
            sbb EDX,EDX
            and EDX,48
            jmp .L_407423
.L_407473:

            call __stack_chk_fail@PLT
.L_407478:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407480:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_407570]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_407499:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_4074c2

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            je .L_4074e0
.L_4074c2:

            mov EAX,4294967266
.L_4074c7:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40753c

            add RSP,16
.L_4074db:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4074e0:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_450f60-301589]
            lea RCX,QWORD PTR [RIP+.L_4073a0]
            mov ESI,4294967295
            mov RDI,RBX
            mov QWORD PTR [RAX+8],RDX
            lea RDX,QWORD PTR [RIP+.L_4073e0]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],RCX
            mov QWORD PTR [RAX+16],RDX
            lea RDX,QWORD PTR [RIP+.L_4073b0]
            mov QWORD PTR [RAX+24],RDX
            lea RDX,QWORD PTR [RIP+.L_40754f]
            xor EAX,EAX
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_4074c7
.L_40753c:

            call __stack_chk_fail@PLT
.L_407541:

            insb BYTE PTR [RDI],DX
            jp .L_407578

            and BYTE PTR [RIP+_end+1896339726],CH
            add BYTE PTR [RDX+RDI*2+52],CH
          .zero 1
.L_40754f:
          .string "Using external lz4 program"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407570:
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x5f
.L_407578:

            jb .L_4075df
          .byte 0x61
          .byte 0x64
          .byte 0x5f
          .byte 0x73
          .byte 0x75
          .byte 0x70
          .byte 0x70
          .byte 0x6f
          .byte 0x72
          .byte 0x74
          .byte 0x5f
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x5f
          .byte 0x6c
          .byte 0x7a
          .byte 0x34
          .byte 0x0
.L_407590:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_4076f3]
            mov RBX,RDI
            call .L_407db0

            lea RDX,QWORD PTR [RIP+.L_4076fb]
            mov DWORD PTR [RBX+96],11
            mov QWORD PTR [RBX+88],RDX
            pop RBX
            ret 
.L_4075b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4075c0:

            sub RSP,24
.L_4075c4:

            mov RDI,RSI
            mov ESI,9
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
.L_4075df:

            call .L_404a10

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_407603

            cmp QWORD PTR [RSP],0
            je .L_407603

            mov RAX,QWORD PTR [RIP+.L_407700]
            cmp QWORD PTR [RDX],RAX
            je .L_407620
.L_407601:

            xor EAX,EAX
.L_407603:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_407633

            add RSP,24
.L_407617:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407620:

            movzx EAX,BYTE PTR [RIP+.L_407708]
            cmp BYTE PTR [RDX+8],AL
            jne .L_407601

            mov EAX,72
            jmp .L_407603
.L_407633:

            call __stack_chk_fail@PLT
.L_407638:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407640:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_407710]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_407659:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_407682

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            je .L_4076a0
.L_407682:

            mov EAX,4294967266
.L_407687:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4076ee

            add RSP,16
.L_40769b:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4076a0:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4075c0]
            mov ESI,4294967295
            mov RDI,RBX
            mov QWORD PTR [RAX+16],RDX
            lea RDX,QWORD PTR [RIP+.L_407590]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+24],RDX
            lea RDX,QWORD PTR [RIP+.L_407738]
            xor EAX,EAX
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_407687
.L_4076ee:

            call __stack_chk_fail@PLT
.L_4076f3:
          .string "lzop -d"
.L_4076fb:
          .string "lzop"
.L_407700:
          .byte 0x89
          .byte 0x4c
          .byte 0x5a
          .byte 0x4f
          .byte 0x0
          .byte 0xd
          .byte 0xa
          .byte 0x1a
.L_407708:
          .byte 0xa
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407710:
          .string "archive_read_support_filter_lzop"
          .zero 7
.L_407738:
          .string "Using external lzop program for lzop decompression"
# WARNING: found overlapping blocks at address 7527

            nop
            nop
            nop
            nop
            nop
.L_407770:

            push RBP
            push RBX
            sub RSP,8
            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RBX+24]
            test RAX,RAX
            jne .L_4077b0

            mov EAX,DWORD PTR [RBX+32]
            test EAX,EAX
            je .L_407798
.L_407789:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407798:

            mov DWORD PTR [RBX+32],1
            add RSP,8
            mov EAX,2147483647
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4077b0:

            mov RDI,RSI
            xor EDX,EDX
            mov RSI,RAX
            call .L_404a10

            test RAX,RAX
            je .L_407789

            mov RBP,QWORD PTR [RBX+24]
            mov RSI,QWORD PTR [RBX+16]
            mov RDI,RAX
            mov RDX,RBP
            call memcmp@PLT

            test EAX,EAX
            jne .L_407789

            add RSP,8
            lea EAX,DWORD PTR [RBP*8]
            pop RBX
            pop RBP
            ret 
.L_4077e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4077f0:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_4077f7:

            mov EDI,DWORD PTR [RSI+36]
            mov RBX,RSI
            cmp EDI,-1
            je .L_40780e

            call close@PLT

            mov DWORD PTR [RBX+36],4294967295
.L_40780e:

            mov EDI,DWORD PTR [RBX+40]
            cmp EDI,-1
            je .L_407822

            call close@PLT

            mov DWORD PTR [RBX+40],4294967295
.L_407822:

            mov EDI,DWORD PTR [RBX+24]
            test EDI,EDI
            jne .L_407858

            mov EAX,DWORD PTR [RBX+32]
.L_40782c:

            test EAX,EAX
            js .L_4078c7

            mov EAX,DWORD PTR [RBX+28]
            mov ECX,EAX
            and ECX,127
            lea EDX,DWORD PTR [RCX+1]
            cmp DL,1
            jle .L_407890

            cmp ECX,13
            jne .L_4078e8

            xor EAX,EAX
.L_40784f:

            pop RBX
.L_407850:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407858:

            lea R12,QWORD PTR [RBX+28]
            jmp .L_40786d
          .byte 0x66
          .byte 0x90
.L_407860:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],4
            jne .L_4078c0

            mov EDI,DWORD PTR [RBX+24]
.L_40786d:

            xor EDX,EDX
            mov RSI,R12
            call waitpid@PLT

            cmp EAX,-1
            mov DWORD PTR [RBX+32],EAX
            je .L_407860

            mov DWORD PTR [RBX+24],0
            jmp .L_40782c
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407890:

            test ECX,ECX
            jne .L_4078f1

            movzx EAX,AH
            test EAX,EAX
            je .L_40784f

            lea RDX,QWORD PTR [RIP+.L_450f60-298912]
            mov ECX,EAX
.L_4078a4:

            mov RDI,QWORD PTR [RBP]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_40784f

            nop
            nop
            nop
            nop
            nop
.L_4078c0:

            mov DWORD PTR [RBX+24],0
.L_4078c7:

            mov RDI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_407f40]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_40784f
.L_4078e8:

            lea RDX,QWORD PTR [RIP+.L_407f98]
            jmp .L_4078a4
.L_4078f1:

            mov EAX,4294967276
            jmp .L_40784f
.L_4078fb:

            nop
            nop
            nop
            nop
            nop
.L_407900:

            push RBP
            push RBX
            add RDI,24
            sub RSP,8
            mov RBX,QWORD PTR [RDI+56]
            mov RSI,RBX
            call .L_4077f0

            mov RDI,QWORD PTR [RBX+48]
            mov EBP,EAX
            call free@PLT

            mov RDI,RBX
            call .L_434290

            mov RDI,RBX
            call free@PLT

            add RSP,8
            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
.L_40793a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_407940:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_407951:

            mov RBX,QWORD PTR [RDI+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+40],RSI
            mov EDI,DWORD PTR [RBX+40]
            mov QWORD PTR [RSP+16],RBX
            mov R13,QWORD PTR [RBX+48]
            cmp EDI,-1
            je .L_407bf8

            mov R12,QWORD PTR [RBX+56]
            test R12,R12
            je .L_407bf8

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [R14+24]
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4079b0:

            sub R12,QWORD PTR [RSP+8]
            movabs RAX,9223372036854775807
            cmovs R12,RAX
            nop
            nop
            nop
            nop
            nop
.L_4079c8:

            mov RDX,R12
            mov RSI,R13
            call read@PLT

            cmp RAX,-1
            je .L_407a70

            cmp RAX,0
            jg .L_407b20

            je .L_407b02
.L_4079ed:

            cmp DWORD PTR [RBX+36],-1
            je .L_407af0

            mov RDI,QWORD PTR [R14+16]
            mov RDX,QWORD PTR [RSP]
            mov ESI,1
            call .L_404a10

            test RAX,RAX
            mov RBP,RAX
            jne .L_407a33

            jmp .L_407ac0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407a20:

            call __errno_location@PLT

            mov RCX,RAX
            mov EAX,DWORD PTR [RAX]
            cmp EAX,4
            jne .L_407b60
.L_407a33:

            mov EDI,DWORD PTR [RBX+36]
            mov RDX,QWORD PTR [RSP+48]
            mov RSI,RBP
            call write@PLT

            cmp RAX,-1
            mov R15,RAX
            je .L_407a20

            test RAX,RAX
            jle .L_407ba0

            mov RDI,QWORD PTR [R14+16]
            mov RSI,R15
            call .L_404a60
.L_407a61:

            mov EDI,DWORD PTR [RBX+40]
            jmp .L_4079c8

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407a70:

            call __errno_location@PLT

            mov EAX,DWORD PTR [RAX]
            cmp EAX,4
            je .L_407a61

            cmp EAX,32
            je .L_407b02

            cmp EAX,11
            je .L_4079ed

            nop
            nop
.L_407a90:

            mov RAX,-30
.L_407a97:

            mov RDX,QWORD PTR [RSP+56]
            xor RDX,QWORD PTR FS:[40]
            jne .L_407bfc

            add RSP,72
.L_407aaf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407ac0:

            mov EDI,DWORD PTR [RBX+36]
            call close@PLT

            mov EDI,DWORD PTR [RBX+40]
            xor EDX,EDX
            xor EAX,EAX
            mov DWORD PTR [RBX+36],4294967295
            mov ESI,4
            call fcntl@PLT

            cmp QWORD PTR [RSP+48],0
            jns .L_407a61

            jmp .L_407a90
          .byte 0x66
          .byte 0x90
.L_407af0:

            mov ESI,DWORD PTR [RBX+40]
            mov EDI,4294967295
            call .L_43fd20

            jmp .L_407a61
.L_407b02:

            mov RDI,QWORD PTR [RSP+32]
            mov RSI,RBX
            call .L_4077f0

            cdqe 
            test RAX,RAX
            js .L_407a90

            je .L_407bd2
.L_407b20:

            add QWORD PTR [RSP+8],RAX
            add R13,RAX
            mov RAX,QWORD PTR [RSP+16]
            cmp DWORD PTR [RAX+40],-1
            je .L_407bed

            mov RAX,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RAX+56]
            cmp R12,QWORD PTR [RSP+8]
            jbe .L_407bed

            mov RBX,QWORD PTR [R14+80]
            mov EDI,DWORD PTR [RBX+40]
            jmp .L_4079b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407b60:

            cmp EAX,11
            mov EDI,DWORD PTR [RBX+36]
            je .L_407bc5

            mov QWORD PTR [RSP+24],RCX
            call close@PLT

            mov EDI,DWORD PTR [RBX+40]
            xor EDX,EDX
            xor EAX,EAX
            mov DWORD PTR [RBX+36],R15D
            mov ESI,4
            call fcntl@PLT

            mov RCX,QWORD PTR [RSP+24]
            cmp DWORD PTR [RCX],32
            je .L_407a61

            jmp .L_407a90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407ba0:

            mov EDI,DWORD PTR [RBX+36]
            call close@PLT

            mov EDI,DWORD PTR [RBX+40]
            mov DWORD PTR [RBX+36],4294967295
            xor EDX,EDX
            mov ESI,4
            xor EAX,EAX
            call fcntl@PLT

            jmp .L_407a61
.L_407bc5:

            mov ESI,DWORD PTR [RBX+40]
            call .L_43fd20

            jmp .L_407a61
.L_407bd2:

            mov RAX,QWORD PTR [RSP+16]
            mov R13,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RSP+8]
.L_407be0:

            mov RDX,QWORD PTR [RSP+40]
            mov QWORD PTR [RDX],R13
            jmp .L_407a97
.L_407bed:

            mov R13,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RSP+8]
            jmp .L_407be0
.L_407bf8:

            xor EAX,EAX
            jmp .L_407be0
.L_407bfc:

            call __stack_chk_fail@PLT
.L_407c01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c10:

            push RBX
            mov RBX,QWORD PTR [RDI]
            test RBX,RBX
            je .L_407c33

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            mov RDI,QWORD PTR [RBX+16]
            call free@PLT

            mov RDI,RBX
            call free@PLT
.L_407c33:

            xor EAX,EAX
            pop RBX
            ret 
.L_407c37:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c40:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14,RDX
            push RBP
            push RBX
            mov R13,RCX
            mov RBX,RDI
            sub RSP,24
.L_407c5a:

            mov RSI,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404960

            test EAX,EAX
            jne .L_407d30

            mov ESI,40
            mov EDI,1
            mov R12D,EAX
            call calloc@PLT

            test RAX,RAX
            mov RBP,RAX
            je .L_407d51

            mov RDI,R15
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_407d40

            test R14,R14
            mov RBX,QWORD PTR [RSP]
            je .L_407cd9

            test R13,R13
            je .L_407cd9

            mov RDI,R13
            mov QWORD PTR [RBP+24],R13
            call malloc@PLT

            mov RDX,R13
            mov QWORD PTR [RBP+16],RAX
            mov RSI,R14
            mov RDI,RAX
            call memcpy@PLT
.L_407cd9:

            lea RAX,QWORD PTR [RIP+.L_407770]
            mov QWORD PTR [RBX],RBP
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+16],RAX
            lea RAX,QWORD PTR [RIP+.L_407f30]
            mov QWORD PTR [RBX+24],RAX
            lea RAX,QWORD PTR [RIP+.L_407c10]
            mov QWORD PTR [RBX+40],RAX
.L_407d05:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_407d6f

            add RSP,24
.L_407d1c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407d30:

            mov R12D,4294967266
            jmp .L_407d05
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407d40:

            mov RDI,QWORD PTR [RBP+16]
            call free@PLT

            mov RDI,RBP
            call free@PLT
.L_407d51:

            lea RDX,QWORD PTR [RIP+.L_407f5b]
            mov ESI,12
            mov RDI,RBX
            xor EAX,EAX
            mov R12D,4294967266
            call .L_43f5d0

            jmp .L_407d05
.L_407d6f:

            call __stack_chk_fail@PLT
.L_407d74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407d80:

            jmp .L_407c40
.L_407d85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407d90:

            xor ECX,ECX
            xor EDX,EDX
            jmp .L_407c40
.L_407d99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407da0:

            jmp .L_407d90
.L_407da2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407db0:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_407dbe:

            mov RDI,RSI
            call strlen@PLT

            mov ESI,64
            mov EDI,1
            lea R12,QWORD PTR [RAX+10]
            call calloc@PLT

            mov EDI,65536
            mov RBX,RAX
            call malloc@PLT

            test RBX,RBX
            mov R14,RAX
            je .L_407ea0

            test RAX,RAX
            je .L_407ea0

            mov RSI,R12
            mov RDI,RBX
            call .L_4342f0

            test RAX,RAX
            je .L_407ed0

            lea RSI,QWORD PTR [RIP+.L_407f8b]
            mov EDX,9
            mov RDI,RBX
            mov QWORD PTR [RBX+8],0
            call .L_437290

            mov RSI,R13
            mov RDI,RBX
            call .L_437310

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RBX+40]
            lea RSI,QWORD PTR [RBX+36]
            mov DWORD PTR [RBP+96],4
            mov RDI,R13
            mov QWORD PTR [RBX+48],R14
            mov QWORD PTR [RBX+56],65536
            mov QWORD PTR [RBP+88],RAX
            call .L_43faa0

            cmp EAX,-1
            je .L_407ef9

            mov DWORD PTR [RBX+24],EAX
            lea RAX,QWORD PTR [RIP+.L_407940]
            mov QWORD PTR [RBP+80],RBX
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_407900]
            mov QWORD PTR [RBP+64],RAX
            xor EAX,EAX
.L_407e90:

            pop RBX
.L_407e91:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ea0:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_407f71]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            test RBX,RBX
            jne .L_407ee7
.L_407ebc:

            mov RDI,R14
            call free@PLT

            mov EAX,4294967266
            jmp .L_407e90
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407ed0:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_407f71]
            mov ESI,12
            xor EAX,EAX
            call .L_43f5d0
.L_407ee7:

            mov RDI,RBX
            call .L_434290

            mov RDI,RBX
            call free@PLT

            jmp .L_407ebc
.L_407ef9:

            mov RDI,QWORD PTR [RBX+48]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_407fe8]
            xor EAX,EAX
            mov RCX,R13
            mov ESI,22
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_407e90
.L_407f2e:

            nop
            nop
.L_407f30:

            mov RAX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RAX+8]
            jmp .L_407db0
.L_407f40:

            push 543452265
            jo .L_407fba
          .byte 0x6f
          .byte 0x63
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x20
          .byte 0x65
          .byte 0x78
          .byte 0x69
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x62
          .byte 0x61
          .byte 0x64
          .byte 0x6c
          .byte 0x79
          .byte 0x0
.L_407f5b:
          .string "Can\'t allocate memory"
.L_407f71:
          .string "Can\'t allocate input data"
.L_407f8b:

            push RAX
            jb .L_407ffd
          .byte 0x67
          .byte 0x72
          .byte 0x61
          .byte 0x6d
          .byte 0x3a
          .byte 0x20
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407f98:
          .byte 0x43
          .byte 0x68
          .byte 0x69
          .byte 0x6c
          .byte 0x64
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x63
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x20
          .byte 0x65
          .byte 0x78
          .byte 0x69
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x77
          .byte 0x69
          .byte 0x74
          .byte 0x68
          .byte 0x20
          .byte 0x73
          .byte 0x69
          .byte 0x67
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x25
.L_407fba:

            add BYTE PTR FS:[RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RBX+104],AL
            imul EBP,DWORD PTR [RSP+32],1668248176
            jae .L_408040

            and BYTE PTR [RBP+120],AH
            imul ESI,DWORD PTR [RBP+100],1953068832
            push 1635021600
            je .L_408054
          .byte 0x73
          .byte 0x20
          .byte 0x25
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407fe8:
          .byte 0x43
          .byte 0x61
          .byte 0x6e
          .byte 0x27
          .byte 0x74
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x69
          .byte 0x74
          .byte 0x69
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x74
.L_407ffd:

            jb .L_40803b
          .byte 0x20
          .byte 0x75
          .byte 0x6e
          .byte 0x61
          .byte 0x62
          .byte 0x6c
          .byte 0x65
          .byte 0x20
          .byte 0x74
          .byte 0x6f
          .byte 0x20
          .byte 0x72
          .byte 0x75
          .byte 0x6e
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x67
          .byte 0x72
          .byte 0x61
          .byte 0x6d
          .byte 0x20
          .byte 0x22
          .byte 0x25
          .byte 0x73
          .byte 0x22
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408020:

            sub RSP,8
            mov RDI,QWORD PTR [RDI+80]
            call free@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_408034:
          .byte 0x66
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
.L_40803b:

            add BYTE PTR [RAX],AL
          .zero 3
.L_408040:

            push R15
            push R14
            xor R8D,R8D
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_4085e0]
            push RBP
            push RBX
.L_408054:

            mov RBP,RDI
            xor R14D,R14D
            sub RSP,56
.L_40805e:

            mov R13,QWORD PTR [RDI+80]
            mov QWORD PTR [RSI],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RSI
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [R13+24]
            mov QWORD PTR [RSP+16],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4080a0:

            test R8,R8
            je .L_408149
.L_4080a9:

            cmp DWORD PTR [R13+40],4
            mov RBX,QWORD PTR [RSP+32]
            mov R15,RBX
            ja .L_408280

            mov EAX,DWORD PTR [R13+40]
            movsxd RAX,DWORD PTR [R12+RAX*4]
            add RAX,R12
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4080d0:

            mov RDI,QWORD PTR [R13+8]
            mov EAX,16
            sub RBX,R14
            mov RSI,R8
            mov QWORD PTR [RSP],R8
            sub RAX,RDI
            cmp RBX,RAX
            cmova RBX,RAX
            add RDI,QWORD PTR [RSP+16]
            mov RDX,RBX
            add R14,RBX
            call memcpy@PLT

            mov R8,QWORD PTR [RSP]
            add R8,RBX
            add RBX,QWORD PTR [R13+8]
            cmp RBX,16
            mov QWORD PTR [R13+8],RBX
            je .L_4082f0

            mov R15,QWORD PTR [RSP+32]
            cmp R14,R15
            jne .L_4081be
.L_408124:

            mov RBX,R14
.L_408127:

            mov RAX,QWORD PTR [R13]
            add RAX,RBX
.L_40812e:

            mov RDI,QWORD PTR [RBP+16]
            mov QWORD PTR [R13],RAX
            mov RSI,RBX
            call .L_404a60
.L_40813e:

            xor R14D,R14D
            cmp QWORD PTR [RSP+32],0
            jle .L_408174
.L_408149:

            mov RDI,QWORD PTR [RBP+16]
            mov RDX,QWORD PTR [RSP+24]
            mov ESI,1
            call .L_404a10

            test RAX,RAX
            mov R8,RAX
            jne .L_4080a9

            cmp QWORD PTR [RSP+32],0
            js .L_4083b6
.L_408174:

            xor R15D,R15D
            jmp .L_4081f1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408180:

            mov RSI,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [R13+8]
            mov RAX,RBX
            sub RAX,R14
            mov R11,RSI
            sub R11,RDI
            cmp RAX,R11
            cmova RAX,R11
            add R8,RAX
            add R14,RAX
            add RAX,RDI
            cmp RSI,RAX
            mov QWORD PTR [R13+8],RAX
            jne .L_4081b5

            mov DWORD PTR [R13+40],3
.L_4081b5:

            cmp RBX,R14
            je .L_408127
.L_4081be:

            test R15,R15
            jg .L_4080a0

            xor R15D,R15D
            jmp .L_408328
          .byte 0x90
.L_4081d0:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,RBX
            mov QWORD PTR [RAX],R8
            add QWORD PTR [R13],RBX
            mov RDI,QWORD PTR [RBP+16]
            call .L_404a60

            test RBX,RBX
            je .L_40813e
.L_4081f1:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_4083eb

            add RSP,56
.L_40820c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408220:

            mov RDI,QWORD PTR [R13]
            lea RAX,QWORD PTR [RDI+RBX*1]
            cmp RAX,95
            jg .L_408298

            add R14,RBX
            cmp RBX,R14
            jne .L_4081be

            jmp .L_40812e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408240:

            cmp RBX,R14
            ja .L_40825d

            jmp .L_408390
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408250:

            add R14,1
            add R8,1
            cmp RBX,R14
            je .L_4082d8
.L_40825d:

            cmp BYTE PTR [R8],0
            je .L_408250

            mov DWORD PTR [R13+40],1
            mov QWORD PTR [R13+8],0
            mov QWORD PTR [R13+16],0
            jmp .L_4081be
.L_408280:

            cmp RBX,R14
            jne .L_4081be

            mov RAX,QWORD PTR [R13]
            add RAX,R14
            jmp .L_40812e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408298:

            mov ESI,96
            mov DWORD PTR [R13+40],1
            mov QWORD PTR [R13+8],0
            sub RSI,RDI
            mov QWORD PTR [R13+16],0
            mov DWORD PTR [R13+44],1
            add R14,RSI
            add R8,RSI
            cmp RBX,R14
            jne .L_4081be

            jmp .L_40812e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4082d8:

            add QWORD PTR [R13],RBX
            mov RDI,QWORD PTR [RBP+16]
            mov RSI,RBX
            call .L_404a60

            jmp .L_40813e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4082f0:

            cmp DWORD PTR [R13+24],32025998
            je .L_408350

            mov EAX,DWORD PTR [R13+44]
            test EAX,EAX
            jne .L_4083c8

            cmp R14,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+16]
            mov DWORD PTR [R13+40],4
            mov QWORD PTR [RAX],RCX
            je .L_40839b

            mov R15D,16
.L_408328:

            test R14,R14
            je .L_4081f1

            test R8,R8
            je .L_4081f1

            add QWORD PTR [R13],R14
            mov RDI,QWORD PTR [RBP+16]
            mov RSI,R14
            call .L_404a60

            jmp .L_4081f1
          .byte 0x90
.L_408350:

            mov EAX,DWORD PTR [R13+32]
            mov EDX,DWORD PTR [R13+36]
            mov R15,QWORD PTR [RSP+32]
            mov DWORD PTR [R13+40],2
            mov DWORD PTR [R13+44],0
            bswap EAX
            bswap EDX
            add EAX,1
            shl EAX,4
            add EAX,EDX
            cmp R14,R15
            mov QWORD PTR [R13+16],RAX
            jne .L_4081be

            jmp .L_408124
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408390:

            jne .L_4081be

            jmp .L_408127
.L_40839b:

            add QWORD PTR [R13],R14
            mov RDI,QWORD PTR [RBP+16]
            mov RSI,R14
            mov R15D,16
            call .L_404a60

            jmp .L_4081f1
.L_4083b6:

            mov R15,-30
            jmp .L_4081f1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4083c8:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_4085a5]
            mov ESI,84
            xor EAX,EAX
            mov R15,-30
            call .L_43f5d0

            jmp .L_4081f1
.L_4083eb:

            call __stack_chk_fail@PLT
.L_4083f0:

            sub RSP,24
.L_4083f4:

            mov RDI,RSI
            mov ESI,8
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_408432

            cmp DWORD PTR [RDX],3689851885
            jne .L_408432

            movzx ECX,BYTE PTR [RDX+4]
            sub ECX,3
            cmp CL,1
            jbe .L_408450
.L_408432:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_408461

            add RSP,24
.L_408446:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408450:

            cmp BYTE PTR [RDX+6],0
            jne .L_408432

            cmp BYTE PTR [RDX+7],2
            sbb EAX,EAX
            and EAX,56
            jmp .L_408432
.L_408461:

            call __stack_chk_fail@PLT
.L_408466:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408470:

            lea RAX,QWORD PTR [RIP+.L_4085be]
            push RBX
.L_408478:

            mov ESI,1
            mov DWORD PTR [RDI+96],8
            mov QWORD PTR [RDI+48],0
            mov RBX,RDI
            mov QWORD PTR [RDI+88],RAX
            lea RAX,QWORD PTR [RIP+.L_408040]
            mov QWORD PTR [RDI+40],RAX
            lea RAX,QWORD PTR [RIP+.L_408020]
            mov QWORD PTR [RDI+64],RAX
            mov EDI,48
            call calloc@PLT

            test RAX,RAX
            je .L_4084c7

            mov QWORD PTR [RBX+80],RAX
            mov DWORD PTR [RAX+40],0
            xor EAX,EAX
            pop RBX
.L_4084c6:

            ret 
.L_4084c7:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_4085c2]
            mov ESI,12
            call .L_43f5d0

            mov EAX,4294967266
            pop RBX
            ret 
.L_4084e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4084f0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_4085f8]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_408509:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_408588

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            jne .L_408588

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_4085be]
            lea RDI,QWORD PTR [RIP+.L_408470]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_4083f0]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_40856e:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40858f

            add RSP,16
.L_408582:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408588:

            mov EAX,4294967266
            jmp .L_40856e
.L_40858f:

            call __stack_chk_fail@PLT
.L_408594:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4085a0:

            jmp .L_4084f0
.L_4085a5:
          .string "Unrecoginized rpm header"
.L_4085be:
          .string "rpm"
.L_4085c2:
          .string "Can\'t allocate data for rpm"
          .byte 0x66
          .byte 0x90
.L_4085e0:
          .long .L_408220-.L_4085e0
          .long .L_4080d0-.L_4085e0
          .long .L_408180-.L_4085e0
          .long .L_408240-.L_4085e0
          .long .L_4081d0-.L_4085e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4085f8:
          .string "archive_read_support_filter_rpm"
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408620:

            lea R8,QWORD PTR [RIP+.L_409b60]
            xor EAX,EAX
.L_408629:

            cmp RAX,RSI
            jge .L_4086a0

            movzx ECX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [R8+RCX*1]
.L_408636:

            cmp CL,1
            je .L_408668

            jb .L_408678

            cmp CL,10
            je .L_408656

            cmp CL,13
            jne .L_408636

            sub RSI,RAX
            cmp RSI,1
            je .L_408656

            cmp BYTE PTR [RDI+1],10
            je .L_408690
.L_408656:

            mov QWORD PTR [RDX],1
            add RAX,1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408668:

            add RDI,1
            add RAX,1
            jmp .L_408629
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408678:

            mov QWORD PTR [RDX],0
            mov RAX,-1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408690:

            mov QWORD PTR [RDX],2
            add RAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4086a0:

            mov QWORD PTR [RDX],0
            mov RAX,RSI
            ret 
.L_4086ab:

            nop
            nop
            nop
            nop
            nop
.L_4086b0:

            push R13
            lea RAX,QWORD PTR [RIP+.L_409695]
            push R12
            push RBP
            push RBX
            mov ESI,1
            mov RBP,RDI
            sub RSP,8
.L_4086c9:

            mov QWORD PTR [RDI+88],RAX
            lea RAX,QWORD PTR [RIP+.L_408da0]
            mov DWORD PTR [RDI+96],7
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+40],RAX
            lea RAX,QWORD PTR [RIP+.L_4087a0]
            mov QWORD PTR [RDI+64],RAX
            mov EDI,48
            call calloc@PLT

            mov EDI,65536
            mov RBX,RAX
            call malloc@PLT

            mov EDI,1024
            mov R12,RAX
            call malloc@PLT

            test RBX,RBX
            mov R13,RAX
            sete DL
            test R12,R12
            sete AL
            or DL,AL
            jne .L_408760

            test R13,R13
            je .L_408760

            mov QWORD PTR [RBP+80],RBX
            mov QWORD PTR [RBX+8],R13
            xor EAX,EAX
            mov DWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+24],1024
            mov QWORD PTR [RBX+32],R12
            mov DWORD PTR [RBX+40],0
.L_408752:

            add RSP,8
.L_408756:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408760:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_409708]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            mov RDI,RBX
            call free@PLT

            mov RDI,R12
            call free@PLT

            mov RDI,R13
            call free@PLT

            mov EAX,4294967266
            jmp .L_408752
.L_408796:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4087a0:

            push RBX
            mov RBX,QWORD PTR [RDI+80]
            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            mov RDI,QWORD PTR [RBX+32]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
            ret 
.L_4087c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4087d0:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R14,RSI
            push RBP
            push RBX
            mov R13,RDX
            mov R12,RCX
            sub RSP,24
.L_4087ea:

            mov RBX,QWORD PTR [RDX]
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+8],R8
            test RBX,RBX
            jne .L_4088f0

            mov QWORD PTR [R8],0
            xor EAX,EAX
.L_408808:

            xor R9D,R9D
            jmp .L_408851
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408810:

            mov RDX,QWORD PTR [R13]
            mov R10,QWORD PTR [RSP+8]
            add RAX,RBP
            lea RDI,QWORD PTR [RAX+RBX*1]
            mov QWORD PTR [R15],RDX
            mov RDX,QWORD PTR [R13]
            mov QWORD PTR [R12],RDX
            mov RSI,QWORD PTR [R13]
            mov RDX,R10
            mov QWORD PTR [R14],RAX
            sub RSI,RBP
            mov QWORD PTR [R13],RSI
            sub RSI,RBX
            call .L_408620

            add RBX,RAX
            test RAX,RAX
            cmovs RBX,RAX
            mov RAX,QWORD PTR [R10]
.L_408851:

            test RAX,RAX
            jne .L_4088da

            test R9D,R9D
            mov RDX,QWORD PTR [R13]
            jne .L_4088da

            cmp RDX,RBX
            jne .L_4088da

            cmp QWORD PTR [R15],131071
            ja .L_4088da

            mov RAX,QWORD PTR [R12]
            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RAX+1023]
            mov RBP,RAX
            add RAX,160
            sub RBP,RDX
            and ESI,4294966272
            lea RDX,QWORD PTR [RSI+RSI*1]
            cmp RAX,RSI
            cmova RSI,RDX
            mov RDX,R13
            call .L_404a10

            xor R9D,R9D
            test RAX,RAX
            mov QWORD PTR [R14],RAX
            jne .L_408810

            mov RSI,QWORD PTR [R13]
            cmp QWORD PTR [R12],RSI
            jge .L_4088d8

            mov RDI,QWORD PTR [RSP]
            mov RDX,R13
            call .L_404a10

            mov R9D,1
            jmp .L_408810
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4088d8:

            xor EBX,EBX
.L_4088da:

            add RSP,24
.L_4088de:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4088f0:

            mov R11,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R14]
            mov RSI,RBX
            mov RDX,R11
            call .L_408620

            mov RBX,RAX
            mov RAX,QWORD PTR [R11]
            jmp .L_408808
.L_40890e:

            nop
            nop
.L_408910:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RDI,RBP
            mov ESI,1
            sub RSP,72
.L_408929:

            lea R12,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RDX,R12
            call .L_404a10

            test RAX,RAX
            mov QWORD PTR [RSP+16],RAX
            je .L_408ba8

            mov RAX,QWORD PTR [RSP+24]
            mov EBX,20
            lea R15,QWORD PTR [RSP+48]
            lea R14,QWORD PTR [RSP+40]
            lea R13,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RAX
            jmp .L_4089c3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408988:

            cmp RCX,17
            jle .L_4089a8

            movabs RDI,7017221121634690402
            cmp QWORD PTR [RDX],RDI
            je .L_408bd0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4089a8:

            xor EBX,EBX
            cmp QWORD PTR [RSP+48],131071
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RAX
            ja .L_408ba8
.L_4089c3:

            mov RSI,QWORD PTR [RSP]
            mov R9,R15
            mov R8,R14
            mov RCX,R13
            mov RDX,R12
            mov RDI,RBP
            call .L_4087d0

            test RAX,RAX
            js .L_408ba8

            mov RDX,QWORD PTR [RSP+40]
            test RDX,RDX
            je .L_408ba8

            mov RCX,RAX
            mov RDI,QWORD PTR [RSP+24]
            sub RCX,RDX
            mov RDX,QWORD PTR [RSP+16]
            sub RDI,RAX
            cmp RCX,10
            lea RSI,QWORD PTR [RDX+RAX*1]
            mov RAX,RDI
            jle .L_4089a8

            cmp DWORD PTR [RDX],1768383842
            jne .L_408988

            cmp WORD PTR [RDX+4],8302
            mov EDI,6
            mov R10D,6
            jne .L_408988
.L_408a35:

            movzx ECX,BYTE PTR [RDX+RDI*1]
            sub ECX,48
            cmp CL,7
            ja .L_4089a8

            movzx ECX,BYTE PTR [RDX+RDI*1+1]
            sub ECX,48
            cmp CL,7
            ja .L_4089a8

            movzx ECX,BYTE PTR [RDX+RDI*1+2]
            sub ECX,48
            cmp CL,7
            ja .L_4089a8

            cmp BYTE PTR [RDX+RDI*1+3],32
            jne .L_4089a8

            test RAX,RAX
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+24],RAX
            je .L_408ba8

            mov RSI,QWORD PTR [RSP]
            mov R9,R15
            mov R8,R14
            mov RCX,R13
            mov RDX,R12
            mov RDI,RBP
            mov DWORD PTR [RSP+12],R10D
            call .L_4087d0

            test RAX,RAX
            js .L_408ba8

            mov RCX,QWORD PTR [RSP+40]
            test RCX,RCX
            je .L_408ba8

            mov RSI,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+12]
            sub RSI,RAX
            cmp R10D,6
            mov QWORD PTR [RSP+24],RSI
            je .L_408bf7

            cmp R10D,13
            jne .L_408ba8

            mov RDX,RAX
            mov RDI,QWORD PTR [RSP+16]
            sub RDX,RCX
            test RDX,RDX
            jle .L_408c9d

            lea RDX,QWORD PTR [RDI+1]
            lea R8,QWORD PTR [RIP+.L_409960]
            mov QWORD PTR [RSP+16],RDX
            movzx EDI,BYTE PTR [RDI]
            cmp BYTE PTR [R8+RDI*1],0
            je .L_408ba8

            sub RAX,1
            sub RAX,RCX
            jmp .L_408b32
.L_408b1a:

            add RDX,1
            sub RAX,1
            mov QWORD PTR [RSP+16],RDX
            movzx EDI,BYTE PTR [RDX-1]
            cmp BYTE PTR [R8+RDI*1],0
            je .L_408ba8
.L_408b32:

            test RAX,RAX
            jg .L_408b1a
.L_408b37:

            add RDX,RCX
            cmp RSI,4
            mov QWORD PTR [RSP+16],RDX
            jle .L_408c8a

            cmp DWORD PTR [RDX],1027423549
            je .L_408cb9
.L_408b55:

            cmp RSI,5
            je .L_408b67

            cmp DWORD PTR [RDX],1027423549
            je .L_408ca5
.L_408b67:

            movzx EAX,BYTE PTR [RDX]
            lea RDX,QWORD PTR [RIP+.L_409960]
            cmp BYTE PTR [RDX+RAX*1],0
            je .L_408ba8
.L_408b77:

            lea EAX,DWORD PTR [RBX+30]
            jmp .L_408baa
.L_408b7c:

            sub RAX,RCX
            sub RAX,1
            mov RAX,QWORD PTR [RSP+16]
            je .L_408cc5
.L_408b8e:

            add RAX,RCX
            test RSI,RSI
            mov QWORD PTR [RSP+16],RAX
            je .L_408ba8

            movzx EAX,BYTE PTR [RAX]
            cmp BYTE PTR [R8+RAX*1],0
            jne .L_408b77

            nop
            nop
            nop
.L_408ba8:

            xor EAX,EAX
.L_408baa:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_408c98

            add RSP,72
.L_408bc2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408bd0:

            cmp DWORD PTR [RDX+8],875980147
            jne .L_4089a8

            cmp BYTE PTR [RDX+12],32
            jne .L_4089a8

            mov EDI,13
            mov R10D,13
            jmp .L_408a35
.L_408bf7:

            mov R9,QWORD PTR [RSP+16]
            lea R8,QWORD PTR [RIP+.L_409a60]
            movzx EDX,BYTE PTR [R9]
            cmp BYTE PTR [R8+RDX*1],0
            je .L_408ba8

            lea RDX,QWORD PTR [R9+1]
            mov QWORD PTR [RSP+16],RDX
            movzx EDX,BYTE PTR [R9]
            sub EDX,32
            and EDX,63
            cmp EDX,45
            jg .L_408ba8

            sub RAX,1
            movsxd RDI,EDX
            mov R10,RAX
            sub R10,RCX
            cmp RDI,R10
            jg .L_408ba8

            test EDX,EDX
            je .L_408b7c

            lea RDI,QWORD PTR [R9+2]
            mov QWORD PTR [RSP+16],RDI
            movzx R9D,BYTE PTR [R9+1]
            cmp BYTE PTR [R8+R9*1],0
            je .L_408ba8

            sub EDX,1
            add RDX,RDI
.L_408c63:

            sub RAX,1
            cmp RDI,RDX
            je .L_408b7c

            add RDI,1
            mov QWORD PTR [RSP+16],RDI
            movzx R9D,BYTE PTR [RDI-1]
            cmp BYTE PTR [R8+R9*1],0
            jne .L_408c63

            jmp .L_408ba8
.L_408c8a:

            test RSI,RSI
            jg .L_408b67

            jmp .L_408ba8
.L_408c98:

            call __stack_chk_fail@PLT
.L_408c9d:

            mov RDX,RDI
            jmp .L_408b37
.L_408ca5:

            cmp WORD PTR [RDX+4],2573
            jne .L_408b67
.L_408cb1:

            lea EAX,DWORD PTR [RBX+40]
            jmp .L_408baa
.L_408cb9:

            cmp BYTE PTR [RDX+4],10
            jne .L_408b55

            jmp .L_408cb1
.L_408cc5:

            movzx EDI,BYTE PTR [RAX]
            cmp BYTE PTR [R8+RDI*1],0
            mov RDX,RDI
            jne .L_408cde

            sub EDX,97
            cmp DL,25
            ja .L_408b8e
.L_408cde:

            add RAX,1
            jmp .L_408b8e
.L_408ce7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408cf0:

            push R13
            push R12
            xor EAX,EAX
            push RBP
            push RBX
            sub RSP,8
.L_408cfc:

            mov RBX,QWORD PTR [RSI+24]
            cmp RBX,RDX
            jae .L_408d5a

            nop
            nop
            nop
.L_408d08:

            lea RAX,QWORD PTR [RBX+RBX*1]
            lea RCX,QWORD PTR [RBX+1024]
            cmp RBX,32767
            cmova RAX,RCX
            cmp RDX,RAX
            mov RBX,RAX
            ja .L_408d08

            mov R12,RDI
            mov RDI,RAX
            mov RBP,RSI
            call malloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_408d75

            movsxd RDX,DWORD PTR [RBP+16]
            mov R12,QWORD PTR [RBP+8]
            test EDX,EDX
            jne .L_408d68
.L_408d48:

            mov RDI,R12
            call free@PLT

            mov QWORD PTR [RBP+8],R13
            mov QWORD PTR [RBP+24],RBX
            xor EAX,EAX
.L_408d5a:

            add RSP,8
.L_408d5e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408d68:

            mov RSI,R12
            mov RDI,RAX
            call memmove@PLT

            jmp .L_408d48
.L_408d75:

            mov RDI,QWORD PTR [R12]
            lea RDX,QWORD PTR [RIP+.L_409708]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_408d5a
.L_408d93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408da0:

            push R15
            push R14
            lea R15,QWORD PTR [RIP+.L_409960]
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_409760]
            push RBP
            push RBX
            sub RSP,104
.L_408dbc:

            mov RAX,QWORD PTR [RDI+80]
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+56],RSI
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+48],RAX
.L_408de9:

            mov RAX,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+48]
            mov ESI,1
            mov RDI,QWORD PTR [RAX+16]
            call .L_404a10

            test RAX,RAX
            mov RCX,RAX
            je .L_409400

            mov RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+40],RAX
.L_408e17:

            mov RAX,QWORD PTR [RSP+24]
            cmp DWORD PTR [RAX+40],4
            mov R14,QWORD PTR [RAX+32]
            je .L_40953b

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+40]
            movsxd RAX,DWORD PTR [RAX+16]
            test EAX,EAX
            jne .L_409370
.L_408e40:

            test RSI,RSI
            jle .L_409550

            lea R10,QWORD PTR [RSP+80]
            xor EBP,EBP
            xor EBX,EBX
            mov R9,RCX
            mov QWORD PTR [RSP+16],R10
            mov R10,QWORD PTR [RSP+24]
            nop
.L_408e60:

            mov RDX,QWORD PTR [RSP+16]
            sub RSI,RBX
            mov RDI,R9
            call .L_408620

            test RAX,RAX
            js .L_409428

            mov RDX,QWORD PTR [RSP+80]
            mov ECX,DWORD PTR [R10+40]
            test RDX,RDX
            jne .L_408ef8

            cmp ECX,2
            jne .L_409469
.L_408e90:

            mov RDI,RAX
            sub RDI,RDX
            cmp RDI,3
            jne .L_408ea8

            cmp WORD PTR [R9],28261
            je .L_409260
.L_408ea8:

            mov RAX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4096ba]
            mov ESI,4294967295
            mov RDI,QWORD PTR [RAX+24]
            xor EAX,EAX
            call .L_43f5d0
.L_408ec4:

            mov RBP,-30
.L_408ecb:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_4095ab

            add RSP,104
.L_408ee6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408ef8:

            cmp ECX,2
            je .L_408e90

            cmp ECX,3
            je .L_409028

            cmp ECX,1
            je .L_408fc0

            lea RCX,QWORD PTR [RBP+RAX*1]
            cmp RCX,131071
            jg .L_409509

            mov RDI,RAX
            sub RDI,RDX
            cmp RDI,10
            mov RDX,RDI
            jle .L_408f60

            cmp DWORD PTR [R9],1768383842
            je .L_4092f0
.L_408f3d:

            cmp RDX,17
            jle .L_408f60

            movabs RDI,7017221121634690402
            cmp QWORD PTR [R9],RDI
            je .L_4093d0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408f60:

            mov RSI,QWORD PTR [RSP+72]
            add RBX,RAX
            add R9,RAX
            cmp RSI,RBX
            jg .L_408e60

            mov RAX,QWORD PTR [RSP+32]
            mov R10,RBX
            mov RDI,QWORD PTR [RAX+16]
.L_408f80:

            mov RBX,QWORD PTR [RSP+40]
            mov RAX,RSI
            mov RCX,R10
            sub RAX,RBX
            sub RCX,RAX
            cmp RBX,RSI
            cmovl R10,RCX
.L_408f98:

            mov RSI,R10
            call .L_404a60

            mov RBX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RBX+32]
            mov QWORD PTR [RDI],RAX
            add QWORD PTR [RBX],RBP
            jmp .L_408ecb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408fc0:

            lea RCX,QWORD PTR [RBP+RAX*2]
            cmp RCX,65536
            jg .L_4094e9

            movzx ECX,BYTE PTR [R9]
            mov RDI,RAX
            sub RDI,RDX
            mov RDX,RDI
            lea RDI,QWORD PTR [RIP+.L_409a60]
            cmp BYTE PTR [RDI+RCX*1],0
            mov R11,RCX
            je .L_408ea8

            test RDX,RDX
            jle .L_408ea8

            sub R11D,32
            and R11D,63
            cmp RDX,R11
            jle .L_408ea8

            test R11,R11
            jne .L_409140

            mov DWORD PTR [R10+40],2
            jmp .L_408f60
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409028:

            lea RCX,QWORD PTR [RBP+RAX*2]
            cmp RCX,65536
            jg .L_4094e9

            mov RDI,RAX
            sub RDI,RDX
            cmp RDI,2
            jle .L_409060

            cmp BYTE PTR [R9],61
            jne .L_409060

            cmp BYTE PTR [R9+1],61
            je .L_4092d0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409060:

            mov RCX,R9
            mov QWORD PTR [RSP+8],RAX
.L_409068:

            test RDI,RDI
            lea RSI,QWORD PTR [RDI-2]
            jle .L_4094ff

            movzx R8D,BYTE PTR [RCX]
            cmp BYTE PTR [R15+R8*1],0
            mov RDX,R8
            je .L_409280

            movzx R11D,BYTE PTR [RCX+1]
            cmp BYTE PTR [R15+R11*1],0
            je .L_409280

            mov EDX,DWORD PTR [R13+R8*4]
            lea R12,QWORD PTR [RCX+2]
            shl EDX,18
            mov R8D,EDX
            mov EDX,DWORD PTR [R13+R11*4]
            shl EDX,12
            or EDX,R8D
            lea R8,QWORD PTR [R14+1]
            mov R11D,EDX
            sar R11D,16
            test RSI,RSI
            mov BYTE PTR [R14],R11B
            lea R11,QWORD PTR [RBP+1]
            jle .L_409138

            movzx ESI,BYTE PTR [RCX+2]
            cmp SIL,61
            je .L_409360

            cmp BYTE PTR [R15+RSI*1],0
            je .L_408ea8

            mov ESI,DWORD PTR [R13+RSI*4]
            lea R8,QWORD PTR [RBP+2]
            lea R11,QWORD PTR [RCX+3]
            shl ESI,6
            or EDX,ESI
            lea RSI,QWORD PTR [R14+2]
            cmp RDI,3
            mov BYTE PTR [RSI-1],DH
            jne .L_409298

            mov RAX,QWORD PTR [RSP+8]
            xor EDI,EDI
            mov RBP,R8
            mov R14,RSI
            mov RCX,R11
.L_409114:

            mov RSI,RDI
            mov R11,RBP
            mov R8,R14
            mov R12,RCX
.L_409120:

            test RSI,RSI
            jne .L_4095c2

            mov RBP,R11
            mov R14,R8
            jmp .L_408f60
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409138:

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_409120
          .byte 0x90
.L_409140:

            movzx EDX,BYTE PTR [R9+1]
            cmp BYTE PTR [RDI+RDX*1],0
            mov RSI,RDX
            je .L_408ea8

            movzx ECX,BYTE PTR [R9+2]
            cmp BYTE PTR [RDI+RCX*1],0
            mov RDX,RCX
            je .L_408ea8

            lea RDI,QWORD PTR [R14+R11*1-1]
            lea R8,QWORD PTR [R14+R11*1]
            lea RCX,QWORD PTR [R9+1]
            lea R11,QWORD PTR [R14+R11*1-2]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40921d
.L_409180:

            movzx R12D,BYTE PTR [RCX+2]
            lea RAX,QWORD PTR [RIP+.L_409a60]
            cmp BYTE PTR [RAX+R12*1],0
            mov RSI,R12
            je .L_408ea8

            sub ESI,32
            shl ESI,6
            and ESI,4032
            or EDX,ESI
            cmp R11,R14
            movzx EAX,DH
            mov BYTE PTR [R14+1],AL
            je .L_4095b0

            movzx R12D,BYTE PTR [RCX+3]
            lea RAX,QWORD PTR [RIP+.L_409a60]
            cmp BYTE PTR [RAX+R12*1],0
            mov RSI,R12
            je .L_408ea8

            sub ESI,32
            add R14,3
            add RCX,4
            and ESI,63
            add RBP,3
            or EDX,ESI
            cmp R14,R8
            mov BYTE PTR [R14-1],DL
            je .L_409531

            movzx EDX,BYTE PTR [RCX]
            lea RAX,QWORD PTR [RIP+.L_409a60]
            cmp BYTE PTR [RAX+RDX*1],0
            mov RSI,RDX
            je .L_408ea8

            movzx R12D,BYTE PTR [RCX+1]
            cmp BYTE PTR [RAX+R12*1],0
            mov RDX,R12
            je .L_408ea8
.L_40921d:

            sub ESI,32
            sub EDX,32
            shl ESI,18
            shl EDX,12
            and ESI,16515072
            and EDX,258048
            or EDX,ESI
            mov ESI,EDX
            sar ESI,16
            cmp R14,RDI
            mov BYTE PTR [R14],SIL
            jne .L_409180

            mov RAX,QWORD PTR [RSP+8]
            add R14,1
            add RBP,1
            jmp .L_408f60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409260:

            cmp BYTE PTR [R9+2],100
            jne .L_408ea8

            mov DWORD PTR [R10+40],0
            jmp .L_408f60
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409280:

            mov RAX,QWORD PTR [RSP+8]
.L_409285:

            cmp DL,61
            je .L_408f60

            jmp .L_408ea8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409298:

            movzx R11D,BYTE PTR [RCX+3]
            cmp R11B,61
            je .L_409563

            cmp BYTE PTR [R15+R11*1],0
            je .L_408ea8

            or EDX,DWORD PTR [R13+R11*4]
            add RCX,4
            add RBP,3
            sub RDI,4
            add R14,3
            mov BYTE PTR [R14-1],DL
            jmp .L_409068
.L_4092d0:

            cmp BYTE PTR [R9+2],61
            jne .L_409060

            mov DWORD PTR [R10+40],0
            jmp .L_408f60
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4092f0:

            cmp WORD PTR [R9+4],8302
            mov ECX,6
            mov ESI,6
            jne .L_408f3d
.L_409307:

            movzx EDI,BYTE PTR [R9+RCX*1]
            lea EDX,DWORD PTR [RDI-48]
            cmp DL,7
            ja .L_408f60

            movzx EDI,BYTE PTR [R9+RCX*1+1]
            lea EDX,DWORD PTR [RDI-48]
            cmp DL,7
            ja .L_408f60

            movzx EDI,BYTE PTR [R9+RCX*1+2]
            lea EDX,DWORD PTR [RDI-48]
            cmp DL,7
            ja .L_408f60

            cmp BYTE PTR [R9+RCX*1+3],32
            jne .L_408f60

            xor EDX,EDX
            cmp RSI,6
            setne DL
            lea EDX,DWORD PTR [RDX+RDX*1+1]
            mov DWORD PTR [R10+40],EDX
            jmp .L_408f60
          .byte 0x66
          .byte 0x90
.L_409360:

            mov RAX,QWORD PTR [RSP+8]
            mov RBP,R11
            mov R14,R8
            jmp .L_408f60
.L_409370:

            lea RDX,QWORD PTR [RAX+RSI*1]
            mov RAX,QWORD PTR [RSP+32]
            mov RBX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+8],RCX
            lea RDI,QWORD PTR [RAX+24]
            mov RSI,RBX
            call .L_408cf0

            test EAX,EAX
            jne .L_408ec4

            movsxd RDI,DWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RSP+8]
            add RDI,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RSP+72]
            mov RSI,RCX
            call memcpy@PLT

            movsxd RSI,DWORD PTR [RBX+16]
            mov RCX,QWORD PTR [RBX+8]
            add RSI,QWORD PTR [RSP+72]
            mov DWORD PTR [RBX+16],0
            mov QWORD PTR [RSP+72],RSI
            jmp .L_408e40
          .byte 0x90
.L_4093d0:

            cmp DWORD PTR [R9+8],875980147
            jne .L_408f60

            cmp BYTE PTR [R9+12],32
            jne .L_408f60

            mov ECX,13
            mov ESI,13
            jmp .L_409307
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409400:

            cmp QWORD PTR [RSP+72],0
            js .L_408ec4

            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+40],0
            jmp .L_408e17
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409428:

            mov RAX,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RAX+40]
            test EDX,EDX
            jne .L_408ea8

            cmp QWORD PTR [RAX],0
            jg .L_409447

            test RBP,RBP
            je .L_408ea8
.L_409447:

            mov RAX,QWORD PTR [RSP+24]
            mov R10,QWORD PTR [RSP+72]
            mov DWORD PTR [RAX+40],4
            mov RAX,QWORD PTR [RSP+32]
            mov RSI,R10
            mov RDI,QWORD PTR [RAX+16]
            jmp .L_408f80
.L_409469:

            test RBP,RBP
            mov R12,RAX
            mov RCX,R9
            jne .L_409480

            cmp QWORD PTR [RSP+40],0
            jle .L_409573
.L_409480:

            mov RAX,QWORD PTR [RSP+32]
            mov R14,QWORD PTR [RSP+24]
            mov RDX,R12
            mov QWORD PTR [RSP+8],RCX
            lea RDI,QWORD PTR [RAX+24]
            mov RSI,R14
            call .L_408cf0

            test EAX,EAX
            jne .L_408ec4

            mov RDI,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [RSP+8]
            cmp RDI,RCX
            je .L_4094bf

            mov RDX,R12
            mov RSI,RCX
            call memmove@PLT
.L_4094bf:

            mov RAX,QWORD PTR [RSP+24]
            test RBP,RBP
            mov DWORD PTR [RAX+16],R12D
            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RAX+16]
            jne .L_40959b

            mov RSI,QWORD PTR [RSP+40]
            call .L_404a60

            jmp .L_408de9
.L_4094e9:

            mov RAX,QWORD PTR [RSP+32]
            mov R10,RBX
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RAX+16]
            jmp .L_408f80
.L_4094ff:

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_409114
.L_409509:

            mov RAX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4096eb]
            mov ESI,84
            mov RBP,-30
            mov RDI,QWORD PTR [RAX+24]
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_408ecb
.L_409531:

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_408f60
.L_40953b:

            mov RAX,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+40]
            xor EBP,EBP
            mov RDI,QWORD PTR [RAX+16]
            jmp .L_408f98
.L_409550:

            mov RAX,QWORD PTR [RSP+32]
            xor EBP,EBP
            xor R10D,R10D
            mov RDI,QWORD PTR [RAX+16]
            jmp .L_408f80
.L_409563:

            mov RAX,QWORD PTR [RSP+8]
            mov RBP,R8
            mov R14,RSI
            jmp .L_408f60
.L_409573:

            mov RAX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_4096d7]
            mov ESI,84
            mov RBP,-30
            mov RDI,QWORD PTR [RAX+24]
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_408ecb
.L_40959b:

            mov R10,RBX
            mov RSI,QWORD PTR [RSP+72]
            add R10,R12
            jmp .L_408f80
.L_4095ab:

            call __stack_chk_fail@PLT
.L_4095b0:

            mov RAX,QWORD PTR [RSP+8]
            add R14,2
            add RBP,2
            jmp .L_408f60
.L_4095c2:

            movzx EDX,BYTE PTR [R12]
            mov RBP,R11
            mov R14,R8
            jmp .L_409285
.L_4095d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4095e0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_409730]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_4095f9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_409678

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            jne .L_409678

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_409695]
            lea RDI,QWORD PTR [RIP+.L_4086b0]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_408910]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_40965e:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40967f

            add RSP,16
.L_409672:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409678:

            mov EAX,4294967266
            jmp .L_40965e
.L_40967f:

            call __stack_chk_fail@PLT
.L_409684:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409690:

            jmp .L_4095e0
.L_409695:
          .string "uu"
          .byte 0x62
          .byte 0x65
          .byte 0x67
          .byte 0x69
          .byte 0x6e
          .byte 0x20
          .byte 0x0
          .byte 0x62
          .byte 0x65
          .byte 0x67
          .byte 0x69
          .byte 0x6e
          .byte 0x2d
          .byte 0x62
          .byte 0x61
          .byte 0x73
          .byte 0x65
          .byte 0x36
          .byte 0x34
          .byte 0x20
          .byte 0x0
          .byte 0x3d
          .byte 0x3d
          .byte 0x3d
          .byte 0x3d
          .byte 0xa
          .byte 0x0
          .byte 0x3d
          .byte 0x3d
          .byte 0x3d
          .byte 0x3d
          .byte 0xd
          .byte 0xa
          .byte 0x0
.L_4096ba:

            outsb DX,BYTE PTR [RSI]
            jae .L_409733
          .byte 0x66
          .byte 0x66
          .byte 0x69
          .byte 0x63
          .byte 0x69
          .byte 0x65
          .byte 0x6e
          .byte 0x74
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x0
.L_4096d7:

            imul R14,QWORD PTR [R11+115],543649385
            outsw DX,WORD PTR [RSI]
            jb .L_409750
          .byte 0x61
          .byte 0x74
          .byte 0x20
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x0
.L_4096eb:

            outsb DX,BYTE PTR [RSI]
            jbe .L_409750
          .byte 0x6c
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x6d
          .byte 0x61
          .byte 0x74
          .byte 0x20
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x0
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x20
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409708:
          .string "Can\'t allocate data for uudecode"
          .zero 7
.L_409730:
          .byte 0x61
          .byte 0x72
          .byte 0x63
.L_409733:

            push 1600484969
          .byte 0x72
          .byte 0x65
          .byte 0x61

            pop RDI
          .byte 0x73
          .byte 0x75
          .byte 0x70
          .byte 0x70

            outsd DX,DWORD PTR [RSI]
          .byte 0x72
          .byte 0x74

            pop RDI
            imul BP,WORD PTR [RSP+RSI*2+101],24434
          .byte 0x75
          .byte 0x75
          .byte 0x0
          .byte 0x66
.L_409750:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409760:

            add BYTE PTR [RAX],AL
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409960:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409a60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409b60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_409c60:

            push RBX
            mov RBX,QWORD PTR [RDI+80]
            mov RDI,RBX
            call lzma_end@PLT

            mov RDI,QWORD PTR [RBX+136]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
            pop RBX
            ret 
.L_409c85:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409c90:

            sub RSP,24
.L_409c94:

            mov RDI,RSI
            mov ESI,14
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_409d28

            movzx ECX,BYTE PTR [RDX]
            cmp CL,224
            ja .L_409d28

            sub ECX,93
            cmp CL,2
            setb CL
            movzx ECX,CL
            shl ECX,3
            cmp QWORD PTR [RDX+5],-1
            jne .L_409cdf

            add ECX,64
.L_409cdf:

            mov EDX,DWORD PTR [RDX+1]
            cmp EDX,524288
            je .L_409d20

            jbe .L_409d48

            cmp EDX,8388608
            je .L_409d20

            jbe .L_409db0

            cmp EDX,33554432
            je .L_409d20

            jbe .L_409dd8

            cmp EDX,67108864
            je .L_409d20

            cmp EDX,134217728
            jne .L_409d6a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409d20:

            lea EAX,DWORD PTR [RCX+32]
            nop
            nop
            nop
            nop
            nop
.L_409d28:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_409de5

            add RSP,24
.L_409d40:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409d48:

            cmp EDX,32768
            je .L_409d20

            ja .L_409d90

            cmp EDX,8192
            je .L_409d20

            cmp EDX,16384
            je .L_409d20

            cmp EDX,4096
            je .L_409d20
.L_409d6a:

            lea ESI,DWORD PTR [RDX-3145728]
            xor EAX,EAX
            cmp ESI,62914560
            ja .L_409d28

            and EDX,1048575
            jne .L_409d8c

            cmp ECX,72
            mov EAX,104
            je .L_409d28
.L_409d8c:

            xor EAX,EAX
            jmp .L_409d28
.L_409d90:

            cmp EDX,131072
            je .L_409d20

            cmp EDX,262144
            je .L_409d20

            cmp EDX,65536
            jne .L_409d6a

            jmp .L_409d20
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409db0:

            cmp EDX,2097152
            je .L_409d20

            cmp EDX,4194304
            je .L_409d20

            cmp EDX,1048576
            jne .L_409d6a

            jmp .L_409d20
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409dd8:

            cmp EDX,16777216
            jne .L_409d6a

            jmp .L_409d20
.L_409de5:

            call __stack_chk_fail@PLT
.L_409dea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_409df0:

            sub RSP,24
.L_409df4:

            mov ESI,6
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_409e29

            cmp DWORD PTR [RDX],1346984524
            jne .L_409e29

            cmp BYTE PTR [RDX+4],1
            jbe .L_409e40
.L_409e29:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_409e54

            add RSP,24
.L_409e3d:

            ret 
          .byte 0x66
          .byte 0x90
.L_409e40:

            movzx EAX,BYTE PTR [RDX+5]
            and EAX,31
            sub EAX,12
            cmp EAX,16
            sbb EAX,EAX
            and EAX,48
            jmp .L_409e29
.L_409e54:

            call __stack_chk_fail@PLT
.L_409e59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409e60:

            mov RDI,RSI
            jmp .L_409df0
.L_409e65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409e70:

            sub RSP,24
.L_409e74:

            mov RDI,RSI
            mov ESI,6
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_404a10

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_409ea8

            cmp DWORD PTR [RDX],1484404733
            je .L_409ec0
.L_409ea6:

            xor EAX,EAX
.L_409ea8:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_409ece

            add RSP,24
.L_409ebc:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409ec0:

            cmp WORD PTR [RDX+4],90
            mov EAX,48
            jne .L_409ea6

            jmp .L_409ea8
.L_409ece:

            call __stack_chk_fail@PLT
.L_409ed3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409ee0:

            cmp ESI,10
            ja .L_409fc0

            lea RDX,QWORD PTR [RIP+.L_40a840]
            mov ESI,ESI
            movsxd RAX,DWORD PTR [RDX+RSI*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409f00:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_40a950]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409f20:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409f28:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_40a870]
            mov ESI,12
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0x66
          .byte 0x90
.L_409f40:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_40a8a0]
            mov ESI,12
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409f60:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_40a8c8]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409f80:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_40a8f8]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409fa0:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_40a920]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409fc0:

            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RIP+.L_40a980]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
.L_409fd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409fe0:

            push R12
            push RBP
            mov ESI,1
            push RBX
.L_409fe9:

            mov RBP,RDI
            mov EDI,184
            call calloc@PLT

            mov EDI,65536
            mov RBX,RAX
            call malloc@PLT

            test RBX,RBX
            mov R12,RAX
            je .L_40a0ce

            test RAX,RAX
            je .L_40a0ce

            mov QWORD PTR [RBX+136],RAX
            lea RAX,QWORD PTR [RIP+.L_40a190]
            mov QWORD PTR [RBP+80],RBX
            mov QWORD PTR [RBX+144],65536
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+40],RAX
            lea RAX,QWORD PTR [RIP+.L_409c60]
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+24],R12
            mov QWORD PTR [RBX+32],65536
            mov QWORD PTR [RBP+64],RAX
            mov EAX,DWORD PTR [RBP+96]
            mov DWORD PTR [RBX+164],0
            cmp EAX,9
            je .L_40a0c0

            cmp EAX,6
            mov BYTE PTR [RBX+161],1
            je .L_40a0a0

            mov RSI,-1
            mov RDI,RBX
            call lzma_alone_decoder@PLT
.L_40a08d:

            test EAX,EAX
            jne .L_40a0fc
.L_40a091:

            pop RBX
.L_40a092:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a0a0:

            mov EDX,8
            mov RSI,-1
            mov RDI,RBX
            call lzma_stream_decoder@PLT

            jmp .L_40a08d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a0c0:

            mov BYTE PTR [RBX+161],0
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_40a0ce:

            mov RDI,QWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_40a9b0]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov EAX,4294967266
            jmp .L_40a091
.L_40a0fc:

            lea RDI,QWORD PTR [RBP+24]
            mov ESI,EAX
            call .L_409ee0

            mov RDI,QWORD PTR [RBX+136]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov QWORD PTR [RBP+80],0
            mov EAX,4294967266
            jmp .L_40a091
.L_40a12d:

            nop
            nop
            nop
.L_40a130:

            lea RAX,QWORD PTR [RIP+.L_40aa71]
            mov DWORD PTR [RDI+96],6
            mov QWORD PTR [RDI+88],RAX
            jmp .L_409fe0
.L_40a147:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a150:

            lea RAX,QWORD PTR [RIP+.L_40aa74]
            mov DWORD PTR [RDI+96],5
            mov QWORD PTR [RDI+88],RAX
            jmp .L_409fe0
.L_40a167:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a170:

            lea RAX,QWORD PTR [RIP+.L_40aa79]
            mov DWORD PTR [RDI+96],9
            mov QWORD PTR [RDI+88],RAX
            jmp .L_409fe0
.L_40a187:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a190:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
.L_40a19e:

            mov R13,QWORD PTR [RDI+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov RAX,QWORD PTR [R13+136]
            mov QWORD PTR [R13+24],RAX
            mov RAX,QWORD PTR [R13+144]
            test RAX,RAX
            mov QWORD PTR [R13+32],RAX
            je .L_40a540

            cmp BYTE PTR [R13+160],0
            jne .L_40a540

            lea RAX,QWORD PTR [RSP+40]
            mov RBX,RDI
            movabs R15,4611686018427387905
            mov R14,-1
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+83]
            mov QWORD PTR [RSP+16],RAX
.L_40a20c:

            cmp BYTE PTR [R13+161],0
            mov RDI,QWORD PTR [RBX+16]
            jne .L_40a316

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,6
            mov RBP,QWORD PTR [RBX+80]
            call .L_404a10

            test RAX,RAX
            je .L_40a4e3

            movzx EDX,BYTE PTR [RAX+4]
            mov BYTE PTR [RSP+83],93
            mov BYTE PTR [RBP+162],DL
            movzx EDX,BYTE PTR [RAX+5]
            mov ECX,EDX
            and ECX,31
            movzx EAX,CL
            sub EAX,12
            cmp EAX,15
            ja .L_40a4e3

            mov EAX,1
            shl EAX,CL
            cmp CL,12
            jbe .L_40a27d

            mov ECX,EAX
            shr DL,5
            shr ECX,4
            movzx EDX,DL
            imul EDX,ECX
            sub EAX,EDX
.L_40a27d:

            mov RDI,QWORD PTR [RBX+16]
            mov EDX,EAX
            mov BYTE PTR [RSP+84],AL
            shr EDX,16
            mov BYTE PTR [RSP+85],AH
            mov ESI,6
            shr EAX,24
            mov BYTE PTR [RSP+86],DL
            lea R12,QWORD PTR [RSP+48]
            mov BYTE PTR [RSP+87],AL
            call .L_404a60

            mov RDX,QWORD PTR [RSP+16]
            xor ESI,ESI
            mov QWORD PTR [RBP+168],6
            mov ECX,5
            mov RDI,R12
            mov QWORD PTR [RSP+48],R15
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],R14
            mov QWORD PTR [RSP+72],0
            call lzma_properties_decode@PLT

            test EAX,EAX
            jne .L_40a4d8

            mov RDI,RBP
            mov RSI,R12
            call lzma_raw_decoder@PLT

            mov RDI,QWORD PTR [RSP+56]
            mov EBP,EAX
            call free@PLT

            test EBP,EBP
            jne .L_40a550

            mov BYTE PTR [R13+161],1
            mov RDI,QWORD PTR [RBX+16]
.L_40a316:

            lea RDX,QWORD PTR [RSP+32]
            mov ESI,1
            call .L_404a10

            test RAX,RAX
            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RSP+32]
            je .L_40a510
.L_40a337:

            cmp RAX,1
            mov QWORD PTR [R13+8],RAX
            mov RDI,R13
            sbb ESI,ESI
            and ESI,3
            call lzma_code@PLT

            test EAX,EAX
            je .L_40a361

            cmp EAX,1
            jne .L_40a4d8

            mov BYTE PTR [R13+160],1
.L_40a361:

            mov RSI,QWORD PTR [RSP+32]
            sub RSI,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [RBX+16]
            call .L_404a60

            mov RAX,QWORD PTR [R13+168]
            sub RAX,QWORD PTR [R13+8]
            add RAX,QWORD PTR [RSP+32]
            cmp QWORD PTR [R13+32],0
            mov QWORD PTR [R13+168],RAX
            je .L_40a39f

            cmp BYTE PTR [R13+160],0
            je .L_40a20c
.L_40a39f:

            mov RAX,QWORD PTR [R13+136]
            mov RBP,QWORD PTR [R13+24]
            sub RBP,RAX
            add QWORD PTR [R13+152],RBP
            add QWORD PTR [R13+176],RBP
            test RBP,RBP
            je .L_40a542

            cmp DWORD PTR [RBX+96],9
            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RCX],RAX
            jne .L_40a4ea

            mov EDX,DWORD PTR [R13+164]
            mov RDI,QWORD PTR [R13+136]
            mov RSI,RBP
            call lzma_crc32@PLT

            cmp BYTE PTR [R13+160],0
            mov DWORD PTR [R13+164],EAX
            je .L_40a4ea

            mov R13,QWORD PTR [RBX+80]
            mov RDI,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RSP+40]
            cmp BYTE PTR [R13+162],1
            sbb R14,R14
            and R14,-8
            add R14,20
            cmp BYTE PTR [R13+162],1
            mov RSI,R14
            sbb R12D,R12D
            and R12D,4294967288
            add R12D,20
            call .L_404a10

            test RAX,RAX
            je .L_40a564

            movsxd RSI,R12D
            cmp RSI,QWORD PTR [RSP+40]
            jg .L_40a570

            mov ECX,DWORD PTR [RAX]
            cmp DWORD PTR [R13+164],ECX
            jne .L_40a5b7

            mov RCX,QWORD PTR [RAX+4]
            cmp QWORD PTR [R13+176],RCX
            jne .L_40a596

            cmp BYTE PTR [R13+162],1
            jne .L_40a48e

            add R14,QWORD PTR [R13+168]
            cmp R14,QWORD PTR [RAX+12]
            jne .L_40a5d8
.L_40a48e:

            mov RDI,QWORD PTR [RBX+16]
            call .L_404a60

            mov RDI,QWORD PTR [RBX+16]
            call .L_409df0

            test EAX,EAX
            je .L_40a4ea

            xor EAX,EAX
            mov DWORD PTR [R13+164],0
            mov QWORD PTR [R13+176],0
            mov QWORD PTR [R13+168],0
            mov WORD PTR [R13+160],AX
            jmp .L_40a4ea
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a4d8:

            lea RDI,QWORD PTR [RBX+24]
            mov ESI,EAX
            call .L_409ee0
.L_40a4e3:

            mov RBP,-30
.L_40a4ea:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_40a591

            add RSP,104
.L_40a505:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40a510:

            test RAX,RAX
            jns .L_40a337

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_40aa7e]
            mov ESI,4294967295
            xor EAX,EAX
            mov RBP,-30
            call .L_43f5d0

            jmp .L_40a4ea
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a540:

            xor EBP,EBP
.L_40a542:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],0
            jmp .L_40a4ea
.L_40a550:

            lea RDI,QWORD PTR [RBX+24]
            mov ESI,EBP
            mov RBP,-30
            call .L_409ee0

            jmp .L_40a4ea
.L_40a564:

            cmp QWORD PTR [RSP+40],0
            js .L_40a4e3
.L_40a570:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_40a9e0]
            or ESI,4294967295
            xor EAX,EAX
            mov RBP,-25
            call .L_43f5d0

            jmp .L_40a4ea
.L_40a591:

            call __stack_chk_fail@PLT
.L_40a596:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_40aaa0]
            or ESI,4294967295
            xor EAX,EAX
            mov RBP,-25
            call .L_43f5d0

            jmp .L_40a4ea
.L_40a5b7:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_40aa8e]
            or ESI,4294967295
            xor EAX,EAX
            mov RBP,-25
            call .L_43f5d0

            jmp .L_40a4ea
.L_40a5d8:

            mov RDI,QWORD PTR [RBX+24]
            lea RDX,QWORD PTR [RIP+.L_40aabe]
            or ESI,4294967295
            xor EAX,EAX
            mov RBP,-25
            call .L_43f5d0

            jmp .L_40a4ea
.L_40a5f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a600:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_40aa08]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_40a619:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_40a698

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            jne .L_40a698

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_40aa71]
            lea RDI,QWORD PTR [RIP+.L_40a130]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_409e70]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_40a67e:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40a69f

            add RSP,16
.L_40a692:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a698:

            mov EAX,4294967266
            jmp .L_40a67e
.L_40a69f:

            call __stack_chk_fail@PLT
.L_40a6a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a6b0:

            jmp .L_40a600
.L_40a6b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a6c0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_40aa28]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_40a6d9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_40a758

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            jne .L_40a758

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_40aa74]
            lea RDI,QWORD PTR [RIP+.L_40a150]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_409c90]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_40a73e:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40a75f

            add RSP,16
.L_40a752:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a758:

            mov EAX,4294967266
            jmp .L_40a73e
.L_40a75f:

            call __stack_chk_fail@PLT
.L_40a764:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a770:

            jmp .L_40a6c0
.L_40a775:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a780:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_40aa50]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            sub RSP,16
.L_40a799:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_443f50

            cmp EAX,-30
            je .L_40a818

            mov RSI,RSP
            mov RDI,RBX
            call .L_404960

            test EAX,EAX
            jne .L_40a818

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RIP+.L_40aa79]
            lea RDI,QWORD PTR [RIP+.L_40a170]
            mov QWORD PTR [RDX+8],RCX
            lea RCX,QWORD PTR [RIP+.L_409e60]
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RDX+24],RDI
            mov QWORD PTR [RDX+32],0
            mov QWORD PTR [RDX+16],RCX
            mov QWORD PTR [RDX+40],0
.L_40a7fe:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40a81f

            add RSP,16
.L_40a812:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a818:

            mov EAX,4294967266
            jmp .L_40a7fe
.L_40a81f:

            call __stack_chk_fail@PLT
.L_40a824:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a830:

            jmp .L_40a780
.L_40a835:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0xfd
          .byte 0x37
          .byte 0x7a
          .byte 0x58
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a840:
          .long .L_409f20-.L_40a840
          .long .L_409f20-.L_40a840
          .long .L_409fc0-.L_40a840
          .long .L_409fc0-.L_40a840
          .long .L_409fc0-.L_40a840
          .long .L_409f28-.L_40a840
          .long .L_409f40-.L_40a840
          .long .L_409f60-.L_40a840
          .long .L_409f80-.L_40a840
          .long .L_409fa0-.L_40a840
          .long .L_409f00-.L_40a840
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a870:
          .string "Lzma library error: Cannot allocate memory"
          .zero 5
.L_40a8a0:

            jp .L_40a910
          .byte 0x61
          .byte 0x20
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x72
          .byte 0x61
          .byte 0x72
          .byte 0x79
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x20
          .byte 0x4f
          .byte 0x75
          .byte 0x74
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x6d
          .byte 0x65
          .byte 0x6d
          .byte 0x6f
          .byte 0x72
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a8c8:
          .string "Lzma library error: format not recognized"
          .zero 6
.L_40a8f8:
          .byte 0x4c
          .byte 0x7a
          .byte 0x6d
          .byte 0x61
          .byte 0x20
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x72
          .byte 0x61
          .byte 0x72
          .byte 0x79
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x20
          .byte 0x49
          .byte 0x6e
          .byte 0x76
          .byte 0x61
.L_40a910:

            insb BYTE PTR [RDI],DX
            imul ESP,DWORD PTR [RAX+111],1869182064
            outsb DX,BYTE PTR [RSI]
            jae .L_40a91c
.L_40a91c:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_40a920:

            jp .L_40a990
          .byte 0x61
          .byte 0x20
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x72
          .byte 0x61
          .byte 0x72
          .byte 0x79
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x20
          .byte 0x43
          .byte 0x6f
          .byte 0x72
          .byte 0x72
          .byte 0x75
          .byte 0x70
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x70
          .byte 0x75
          .byte 0x74
          .byte 0x20
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a950:
          .string "Lzma library error:  No progress is possible"
          .zero 3
.L_40a980:
          .byte 0x4c
          .byte 0x7a
          .byte 0x6d
          .byte 0x61
          .byte 0x20
          .byte 0x64
          .byte 0x65
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x69
.L_40a990:

            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
            and BYTE PTR [RSI+97],AH
            imul EBP,DWORD PTR [RBP+100],1428168762
            outsb DX,BYTE PTR [RSI]
            imul EBP,DWORD PTR [RSI+111],119
          .byte 0x6e
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a9b0:
          .string "Can\'t allocate data for xz decompression"
          .zero 7
.L_40a9e0:
          .string "Lzip: Remaining data is less bytes"
          .zero 5
.L_40aa08:
          .string "archive_read_support_filter_xz"
# WARNING: found overlapping blocks at address a7dc
# WARNING: found overlapping blocks at address a7e4
          .zero 1
.L_40aa28:
          .string "archive_read_support_filter_lzma"
          .zero 7
.L_40aa50:
          .string "archive_read_support_filter_lzip"
.L_40aa71:

            js .L_40aaed
          .zero 1
.L_40aa74:
          .string "lzma"
.L_40aa79:
          .string "lzip"
# WARNING: found overlapping blocks at address a83c

.L_40aa7e:

            je .L_40aaf2
          .byte 0x75
          .byte 0x6e
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x70
          .byte 0x75

            je .L_40aa8e
.L_40aa8e:

            jp .L_40aafa
          .byte 0x70
          .byte 0x3a

            and BYTE PTR [RBX+82],AL
            xor ESI,DWORD PTR [R10]
            and BYTE PTR [RBP+114],AH
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x0
.L_40aaa0:
          .string "Lzip: Uncompressed size error"
.L_40aabe:

            jp .L_40ab2a

            jo .L_40aafd
          .byte 0x20
          .byte 0x4d
          .byte 0x65
          .byte 0x6d
          .byte 0x62
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f

            jb .L_40aad6
.L_40aad6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40aae0:

            push RBX
.L_40aae1:

            lea RCX,QWORD PTR [RIP+.L_40ab78]
            mov EDX,1
.L_40aaed:

            mov ESI,14594245
.L_40aaf2:

            mov RBX,RDI
            call .L_443f50
.L_40aafa:

            cmp EAX,-30
.L_40aafd:

            je .L_40ab71

            mov RDI,RBX
            call .L_40b6b0

            mov RDI,RBX
            call .L_412160

            mov RDI,RBX
            call .L_412580

            mov RDI,RBX
            call .L_41a6a0

            mov RDI,RBX
            call .L_41dec0

            mov RDI,RBX
.L_40ab2a:

            call .L_426f20

            mov RDI,RBX
            call .L_42d7d0

            mov RDI,RBX
            call .L_428660

            mov RDI,RBX
            call .L_450660

            mov RDI,RBX
            call .L_410420

            mov RDI,RBX
            call .L_4226c0

            mov RDI,RBX
            call .L_416330

            mov RDI,RBX
            call .L_432960

            mov RDI,RBX
            call .L_43f5b0

            xor EAX,EAX
.L_40ab71:

            pop RBX
.L_40ab72:

            ret 
.L_40ab73:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ab78:
          .string "archive_read_support_format_all"
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40aba0:

            movzx EAX,BYTE PTR [RDI]
            cmp AL,32
            je .L_40abaf

            cmp AL,9
            jne .L_40ac40
.L_40abaf:

            sub ESI,1
            jmp .L_40abc4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40abb8:

            sub ESI,1
            cmp ESI,-1
            je .L_40ac68
.L_40abc4:

            add RDI,1
            movzx EAX,BYTE PTR [RDI]
            cmp AL,32
            je .L_40abb8

            cmp AL,9
            je .L_40abb8

            movsx EDX,AL
            sub EDX,48
            cmp AL,47
            jle .L_40ac60

            cmp EDX,9
            ja .L_40ac60

            test ESI,ESI
            lea EAX,DWORD PTR [RSI-1]
            je .L_40ac60
.L_40abed:

            mov ESI,EAX
            xor EAX,EAX
            lea R8,QWORD PTR [RDI+RSI*1+1]
            movabs RSI,1844674407370955161
.L_40ac00:

            lea RAX,QWORD PTR [RAX+RAX*4]
            add RDI,1
            lea RAX,QWORD PTR [RDX+RAX*2]
            movsx EDX,BYTE PTR [RDI]
            mov ECX,EDX
            sub EDX,48
            sub ECX,48
            cmp CL,9
            ja .L_40ac62

            cmp RDI,R8
            je .L_40ac88

            cmp RAX,RSI
            ja .L_40ac30

            cmp EDX,5
            jbe .L_40ac00

            cmp RAX,RSI
            jne .L_40ac00
.L_40ac30:

            mov RAX,-1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ac40:

            movsx EDX,AL
            sub EDX,48
            cmp AL,47
            jle .L_40ac60

            cmp EDX,9
            lea EAX,DWORD PTR [RSI-1]
            setbe CL
            test CL,CL
            jne .L_40abed

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ac60:

            xor EAX,EAX
.L_40ac62:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ac68:

            movsx EDX,AL
            sub EDX,48
            cmp AL,47
            jle .L_40ac60

            cmp EDX,9
            mov EAX,4294967294
            jbe .L_40abed

            xor EAX,EAX
            jmp .L_40ac62
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ac88:

            ret 
.L_40ac8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_40ac90:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RDI,QWORD PTR [RBP+32]
            test RDI,RDI
            je .L_40acb1

            call free@PLT
.L_40acb1:

            mov RDI,RBP
            call free@PLT

            mov RAX,QWORD PTR [RBX+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_40acd0:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+24]
            add RSI,QWORD PTR [RBX]
            add RSI,QWORD PTR [RBX+8]
            call .L_404a30

            test RAX,RAX
            js .L_40ad10

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            xor EAX,EAX
            mov QWORD PTR [RBX+24],0
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ad10:

            mov EAX,4294967266
            pop RBX
            ret 
.L_40ad17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ad20:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RDI
            mov R13,RCX
            sub RSP,16
.L_40ad38:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+8]
            test RSI,RSI
            jne .L_40ae10
.L_40ad5f:

            cmp QWORD PTR [RBX],0
            jle .L_40add0

            mov RDX,RSP
            mov ESI,1
            mov RDI,RBP
            call .L_4049e0

            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            je .L_40ae59

            js .L_40ae3e

            cmp QWORD PTR [RBX],RAX
            cmovle RAX,QWORD PTR [RBX]
            mov QWORD PTR [R12],RAX
            mov RDX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            mov QWORD PTR [R13],RDX
            add QWORD PTR [RBX+16],RAX
            sub QWORD PTR [RBX],RAX
            xor EAX,EAX
.L_40adab:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40ae77

            add RSP,16
.L_40adc3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40add0:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,RBP
            call .L_404a30

            test RAX,RAX
            js .L_40ae50

            mov RCX,QWORD PTR [RBX+24]
            sub RCX,RAX
            test RCX,RCX
            mov QWORD PTR [RBX+24],RCX
            jne .L_40ae28
.L_40adf1:

            mov QWORD PTR [R14],0
            mov QWORD PTR [R12],0
            mov RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [R13],RAX
            mov EAX,1
            jmp .L_40adab
          .byte 0x90
.L_40ae10:

            call .L_404a30

            mov QWORD PTR [RBX+8],0
            jmp .L_40ad5f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ae28:

            lea RDX,QWORD PTR [RIP+.L_40b840]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0
.L_40ae3e:

            mov EAX,4294967266
            jmp .L_40adab
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ae50:

            cmp QWORD PTR [RBX+24],0
            jne .L_40ae3e

            jmp .L_40adf1
.L_40ae59:

            lea RDX,QWORD PTR [RIP+.L_40b770]
            mov ESI,4294967295
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_40adab
.L_40ae77:

            call __stack_chk_fail@PLT
.L_40ae7c:

            nop
            nop
            nop
            nop
.L_40ae80:

            sub RSP,8
            xor EDX,EDX
            mov ESI,8
            call .L_4049e0

            test RAX,RAX
            je .L_40aeb4

            movabs RDX,738142165265366049
            cmp QWORD PTR [RAX],RDX
            mov EAX,4294967295
            mov EDX,64
            cmove EAX,EDX
.L_40aeaf:

            add RSP,8
            ret 
.L_40aeb4:

            mov EAX,4294967295
            jmp .L_40aeaf
.L_40aebb:

            nop
            nop
            nop
            nop
            nop
.L_40aec0:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_40aec7:

            lea RDI,QWORD PTR [RDX+16]
            mov RBX,RSI
            mov ESI,12
            mov R12,RDX
            call .L_40aba0

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,RBX
            call .L_4465a0

            lea RDI,QWORD PTR [R12+28]
            mov ESI,6
            call .L_40aba0

            mov RDI,RBX
            mov ESI,EAX
            call .L_446950

            lea RDI,QWORD PTR [R12+34]
            mov ESI,6
            call .L_40aba0

            mov RDI,RBX
            mov ESI,EAX
            call .L_445fa0

            movzx R8D,BYTE PTR [R12+40]
            lea RAX,QWORD PTR [R12+40]
            cmp R8B,32
            je .L_40af35

            cmp R8B,9
            jne .L_40b040
.L_40af35:

            add R12,48
            mov ESI,7
            mov RDI,R12
            jmp .L_40af54
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40af48:

            sub ESI,1
            cmp RAX,R12
            je .L_40b008
.L_40af54:

            add RAX,1
            movzx R8D,BYTE PTR [RAX]
            cmp R8B,32
            je .L_40af48

            cmp R8B,9
            je .L_40af48

            movsx ECX,R8B
            sub R8D,48
            sub ECX,48
            cmp R8B,7
            ja .L_40b030

            test ESI,ESI
            lea EDX,DWORD PTR [RSI-1]
            je .L_40afc7
.L_40af84:

            lea RDX,QWORD PTR [RAX+RDX*1+1]
            xor ESI,ESI
            movabs R8,2305843009213693951
            jmp .L_40afae
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40afa0:

            cmp RAX,RDX
            je .L_40afc7

            cmp RSI,R8
            ja .L_40b038
.L_40afae:

            add RAX,1
            lea RSI,QWORD PTR [RCX+RSI*8]
            movsx ECX,BYTE PTR [RAX]
            mov EDI,ECX
            sub ECX,48
            sub EDI,48
            cmp DIL,7
            jbe .L_40afa0
.L_40afc7:

            mov RDI,RBX
            call .L_446590

            mov RDI,R12
            mov ESI,10
            call .L_40aba0

            mov R12,RAX
            and EAX,1
            mov QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+24],RAX
            mov RSI,R12
            mov RDI,RBX
            call .L_446770

            mov QWORD PTR [RBP],R12
            xor EAX,EAX
            pop RBX
.L_40b000:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b008:

            mov EDX,4294967295
.L_40b00d:

            movsx ECX,R8B
            sub ECX,48
            cmp R8B,47
            jle .L_40b030

            cmp ECX,7
            mov RAX,RDI
            setbe SIL
            sub EDX,1
            test SIL,SIL
            jne .L_40af84
.L_40b030:

            xor ESI,ESI
            jmp .L_40afc7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b038:

            mov ESI,4294967295
            jmp .L_40afc7
          .byte 0x90
.L_40b040:

            mov RDI,RAX
            mov EDX,8
            add R12,48
            jmp .L_40b00d
.L_40b04e:

            nop
            nop
.L_40b050:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,40
.L_40b064:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R13,QWORD PTR [RAX]
            cmp BYTE PTR [R13+48],0
            je .L_40b238
.L_40b089:

            xor EDX,EDX
            mov ESI,60
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            mov R15,RAX
            mov EBX,1
            je .L_40b210

            lea RSI,QWORD PTR [RAX+58]
            lea RDI,QWORD PTR [RIP+.L_40b785]
            mov ECX,2

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40b5f2

            mov RBP,RSP
            mov EDX,16
            mov RSI,R15
            mov RDI,RBP
            call strncpy@PLT

            mov EAX,DWORD PTR [R12+16]
            mov BYTE PTR [RSP+16],0
            cmp EAX,458752
            je .L_40b310

            cmp EAX,458753
            je .L_40b34d

            cmp EAX,458754
            je .L_40b5d9
.L_40b106:

            lea RAX,QWORD PTR [RIP+.L_40b7a4]
            mov QWORD PTR [R12+24],RAX
.L_40b112:

            lea RAX,QWORD PTR [RBP+15]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b120:

            cmp BYTE PTR [RAX],32
            jne .L_40b258

            mov BYTE PTR [RAX],0
            sub RAX,1
            cmp RAX,RBP
            jae .L_40b120
.L_40b135:

            lea RDX,QWORD PTR [RIP+.L_40b890]
.L_40b13c:

            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            mov EBX,4294967266
            jmp .L_40b2f5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b158:

            mov RDX,R15
            mov RSI,R14
            mov RDI,R13
            call .L_40aec0

            lea RDI,QWORD PTR [R15+3]
            mov ESI,13
            call .L_40aba0

            cmp RAX,1048576
            mov RBP,RAX
            ja .L_40b61b

            mov RSI,QWORD PTR [R13]
            cmp RSI,RAX
            jl .L_40b61b

            sub RSI,RAX
            mov RDI,R14
            mov QWORD PTR [R13],RSI
            call .L_446770

            mov ESI,60
            mov RDI,R12
            call .L_404a30

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            mov R15,RAX
            je .L_40b666

            lea RDI,QWORD PTR [RBP+1]
            call malloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_40b646

            mov RDX,RBP
            mov RSI,R15
            mov RDI,RAX
            call strncpy@PLT

            mov RSI,RBP
            mov RDI,R12
            mov BYTE PTR [R13+RBP*1],0
            call .L_404a30

            mov RDI,R14
            mov RSI,R13
            call .L_446660

            mov RDI,R13
            call free@PLT

            nop
            nop
            nop
            nop
.L_40b210:

            mov EAX,EBX
            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40b6a4

            add RSP,40
.L_40b22a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b238:

            mov ESI,8
            call .L_404a30

            mov BYTE PTR [R13+48],1
            mov DWORD PTR [R12+16],458752
            jmp .L_40b089
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b258:

            cmp BYTE PTR [RSP],47
            jne .L_40b360
.L_40b262:

            cmp RAX,RBP
            jb .L_40b135

            lea RDI,QWORD PTR [RIP+.L_40b7a7]
            mov ECX,3
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_40b3b0

            cmp BYTE PTR [RSP],47
            je .L_40b530
.L_40b297:

            lea RDI,QWORD PTR [RIP+.L_40b788]
            mov ECX,3
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_40b158

            lea RDX,QWORD PTR [RIP+.L_40b81d]
            mov RSI,RBP
            mov ECX,2
            mov RDI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov RSI,RBP
            mov RDI,R14
            seta AL
            sbb AL,0
            test AL,AL
            je .L_40b380
.L_40b2e0:

            call .L_446660

            mov RDX,R15
            mov RSI,R14
            mov RDI,R13
            call .L_40aec0

            mov EBX,EAX
.L_40b2f5:

            mov ESI,60
            mov RDI,R12
            call .L_404a30

            jmp .L_40b210
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b310:

            lea RDI,QWORD PTR [RIP+.L_40b788]
            mov ECX,3
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_40b5d0

            mov ESI,47
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            je .L_40b5a8

            mov DWORD PTR [R12+16],458753
.L_40b34d:

            lea RAX,QWORD PTR [RIP+.L_40b796]
            mov QWORD PTR [R12+24],RAX
            jmp .L_40b112
          .byte 0x66
          .byte 0x90
.L_40b360:

            cmp RAX,RBP
            jbe .L_40b262

            cmp BYTE PTR [RAX],47
            jne .L_40b262

            mov BYTE PTR [RAX],0
            jmp .L_40b262
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b380:

            mov RSI,RDX
            call .L_446660

            mov RSI,R14
            mov RDI,R13
            mov RDX,R15
            call .L_40aec0

            mov ESI,32768
            mov RDI,R14
            mov EBX,EAX
            call .L_445ae0

            jmp .L_40b2f5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b3b0:

            mov RDX,R15
            mov RSI,R14
            mov RDI,R13
            call .L_40aec0

            mov RSI,RBP
            mov RDI,R14
            call .L_446660

            mov ESI,32768
            mov RDI,R14
            call .L_445ae0

            lea RDI,QWORD PTR [R15+48]
            mov ESI,10
            call .L_40aba0

            cmp RAX,1073741824
            mov RBP,RAX
            ja .L_40b63a

            test RAX,RAX
            je .L_40b631

            cmp QWORD PTR [R13+32],0
            jne .L_40b612

            mov RDI,RAX
            call malloc@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_40b684

            mov ESI,60
            mov RDI,R12
            mov QWORD PTR [R13+32],RAX
            mov QWORD PTR [R13+40],RBP
            call .L_404a30

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            je .L_40b627

            mov RDX,RBP
            mov RSI,RAX
            mov RDI,R15
            call memcpy@PLT

            mov RSI,RBP
            mov RDI,R12
            call .L_404a30

            xor ESI,ESI
            mov RDI,R14
            mov QWORD PTR [R13],0
            call .L_446770

            mov RAX,QWORD PTR [R12+2472]
            mov RBP,QWORD PTR [RAX]
            mov R8,QWORD PTR [RBP+40]
            mov RSI,QWORD PTR [RBP+32]
            lea RDI,QWORD PTR [R8-1]
            mov RAX,RSI
            lea RCX,QWORD PTR [RSI+RDI*1]
            cmp RSI,RCX
            jb .L_40b4ac

            jmp .L_40b5ea
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b4a0:

            lea RCX,QWORD PTR [RSI+RDI*1]
            mov RAX,RDX
            cmp RCX,RDX
            jbe .L_40b4d6
.L_40b4ac:

            cmp BYTE PTR [RAX],47
            lea RDX,QWORD PTR [RAX+1]
            jne .L_40b4a0

            cmp BYTE PTR [RAX+1],10
            mov BYTE PTR [RAX],0
            jne .L_40b4f0

            mov BYTE PTR [RAX+1],0
            mov RSI,QWORD PTR [RBP+32]
            lea RDX,QWORD PTR [RAX+2]
            mov RAX,RDX
            lea RCX,QWORD PTR [RSI+RDI*1]
            cmp RCX,RDX
            ja .L_40b4ac
.L_40b4d6:

            add RSI,R8
            cmp RDX,RSI
            je .L_40b528

            movzx EAX,BYTE PTR [RDX]
            cmp AL,96
            je .L_40b528

            cmp AL,10
            je .L_40b528

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b4f0:

            lea RDX,QWORD PTR [RIP+.L_40b7c3]
            mov ESI,22
            mov RDI,R12
            xor EAX,EAX
            mov EBX,4294967266
            call .L_43f5d0

            mov RDI,QWORD PTR [RBP+32]
            call free@PLT

            mov QWORD PTR [RBP+32],0
            jmp .L_40b210
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b528:

            mov BYTE PTR [RCX],0
            jmp .L_40b210
.L_40b530:

            movzx EAX,BYTE PTR [RSP+1]
            sub EAX,48
            cmp AL,9
            ja .L_40b297

            lea RDI,QWORD PTR [R15+1]
            mov ESI,15
            call .L_40aba0

            mov RDX,QWORD PTR [R13+32]
            test RDX,RDX
            je .L_40b568

            cmp RAX,QWORD PTR [R13+40]
            lea RSI,QWORD PTR [RDX+RAX*1]
            mov RDI,R14
            jb .L_40b2e0
.L_40b568:

            lea RDX,QWORD PTR [RIP+.L_40b900]
            xor EAX,EAX
            mov ESI,22
            mov RDI,R12
            mov EBX,4294967266
            call .L_43f5d0

            mov RSI,RBP
            mov RDI,R14
            call .L_446660

            mov RDX,R15
            mov RSI,R14
            mov RDI,R13
            call .L_40aec0

            jmp .L_40b2f5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b5a8:

            lea RDI,QWORD PTR [RIP+.L_40b78c]
            mov ECX,9
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_40b106

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b5d0:

            mov DWORD PTR [R12+16],458754
.L_40b5d9:

            lea RAX,QWORD PTR [RIP+.L_40b81f]
            mov QWORD PTR [R12+24],RAX
            jmp .L_40b112
.L_40b5ea:

            mov RDX,RSI
            jmp .L_40b4d6
.L_40b5f2:

            lea RDX,QWORD PTR [RIP+.L_40b870]
.L_40b5f9:

            mov ESI,22
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            mov EBX,4294967266
            jmp .L_40b2f5
.L_40b612:

            lea RDX,QWORD PTR [RIP+.L_40b8b0]
            jmp .L_40b5f9
.L_40b61b:

            lea RDX,QWORD PTR [RIP+.L_40b7d8]
            jmp .L_40b13c
.L_40b627:

            mov EBX,4294967266
            jmp .L_40b210
.L_40b631:

            lea RDX,QWORD PTR [RIP+.L_40b7c3]
            jmp .L_40b5f9
.L_40b63a:

            lea RDX,QWORD PTR [RIP+.L_40b7aa]
            jmp .L_40b13c
.L_40b646:

            lea RDX,QWORD PTR [RIP+.L_40b801]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            mov EBX,4294967266
            call .L_43f5d0

            jmp .L_40b210
.L_40b666:

            lea RDX,QWORD PTR [RIP+.L_40b7ec]
            or ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov EBX,4294967266
            call .L_43f5d0

            jmp .L_40b210
.L_40b684:

            lea RDX,QWORD PTR [RIP+.L_40b8d8]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            mov EBX,4294967266
            call .L_43f5d0

            jmp .L_40b2f5
.L_40b6a4:

            call __stack_chk_fail@PLT
.L_40b6a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b6b0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_40b938]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
            call .L_443f50

            cmp EAX,-30
            je .L_40b74c

            mov ESI,56
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_40b753

            mov QWORD PTR [RAX+32],0
            lea RAX,QWORD PTR [RIP+.L_40ac90]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_40b050]
            lea RCX,QWORD PTR [RIP+.L_40ae80]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_40acd0]
            push 0
            lea RDX,QWORD PTR [RIP+.L_40b7a4]
            xor R8D,R8D
            mov RSI,RBX
            push RAX
            lea RAX,QWORD PTR [RIP+.L_40ad20]
            mov RDI,RBP
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_40b74c

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_40b74c:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_40b753:

            lea RDX,QWORD PTR [RIP+.L_40b828]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_40b74c
.L_40b770:
          .string "Truncated ar archive"
.L_40b785:
          .byte 0x60
          .byte 0xa
          .byte 0x0
.L_40b788:
          .byte 0x23
          .byte 0x31
          .byte 0x2f
          .byte 0x0
.L_40b78c:
          .string "__.SYMDEF"
.L_40b796:
          .string "ar (GNU/SVR4)"
.L_40b7a4:
          .string "ar"
.L_40b7a7:
          .byte 0x2f
          .byte 0x2f
          .byte 0x0
.L_40b7aa:
          .string "Filename table too large"
.L_40b7c3:
          .string "Invalid string table"
.L_40b7d8:
          .string "Bad input file size"
.L_40b7ec:
          .string "Truncated input file"
.L_40b801:
          .string "Can\'t allocate fname buffer"
.L_40b81d:
          .byte 0x2f
          .byte 0x0
.L_40b81f:
          .string "ar (BSD)"
.L_40b828:
          .string "Can\'t allocate ar data"
          .byte 0x90
.L_40b840:

            push RSP
            jb .L_40b8b8
          .byte 0x6e
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x61
          .byte 0x72
          .byte 0x20
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x2d
          .byte 0x20
          .byte 0x66
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x73
          .byte 0x75
          .byte 0x6d
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x70
          .byte 0x61
          .byte 0x64
          .byte 0x64
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x0
          .byte 0x0
.L_40b870:
          .string "Incorrect file header signature"
.L_40b890:
          .string "Found entry with empty filename"
.L_40b8b0:

            outsd DX,DWORD PTR [RSI]
            jb .L_40b919

            and BYTE PTR [RAX+RBP*2+97],DH
.L_40b8b8:

            outsb DX,BYTE PTR [RSI]
            and BYTE PTR [RDI+110],CH
          .byte 0x65
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x74
          .byte 0x61
          .byte 0x62
          .byte 0x6c
          .byte 0x65
          .byte 0x73
          .byte 0x20
          .byte 0x65
          .byte 0x78
          .byte 0x69
          .byte 0x73
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b8d8:
          .string "Can\'t allocate filename table buffer"
          .zero 3
.L_40b900:
          .byte 0x43
          .byte 0x61
          .byte 0x6e
          .byte 0x27
          .byte 0x74
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6e
          .byte 0x64
          .byte 0x20
          .byte 0x6c
          .byte 0x6f
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x6e
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x20
.L_40b919:

            outsw DX,WORD PTR [RSI]
            jb .L_40b93d
          .byte 0x47
          .byte 0x4e
          .byte 0x55
          .byte 0x2f
          .byte 0x53
          .byte 0x56
          .byte 0x52
          .byte 0x34
          .byte 0x20
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65

            and BYTE PTR [RBP+110],AH
            je .L_40b9a4
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b938:
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
.L_40b93d:

            jbe .L_40b9a4
          .byte 0x5f
          .byte 0x72
          .byte 0x65
          .byte 0x61
          .byte 0x64
          .byte 0x5f
          .byte 0x73
          .byte 0x75
          .byte 0x70
          .byte 0x70
          .byte 0x6f
          .byte 0x72
          .byte 0x74
          .byte 0x5f
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x6d
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x61
          .byte 0x72
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b960:

            mov EAX,ESI
            shr EAX,2
            test EAX,EAX
            je .L_40b983

            sub EAX,1
            mov RCX,RDI
            lea RAX,QWORD PTR [RDI+RAX*4+4]
            nop
            nop
            nop
            nop
.L_40b978:

            xor EDX,DWORD PTR [RCX]
            add RCX,4
            cmp RAX,RCX
            jne .L_40b978
.L_40b983:

            mov RAX,RSI
            and ESI,3
            and RAX,-4
            add RDI,RAX
            cmp RSI,2
            je .L_40b9e0

            cmp RSI,3
            je .L_40b9b8

            cmp RSI,1
            je .L_40b9a8

            mov EAX,EDX
.L_40b9a4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b9a8:

            movzx EAX,BYTE PTR [RDI]
            xor ECX,ECX
            or EAX,ECX
            xor EAX,EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40b9b8:

            movzx ECX,BYTE PTR [RDI]
            lea RSI,QWORD PTR [RDI+1]
            shl ECX,16
.L_40b9c2:

            movzx EAX,BYTE PTR [RSI]
            lea RDI,QWORD PTR [RSI+1]
            shl EAX,8
            or ECX,EAX
            movzx EAX,BYTE PTR [RDI]
            or EAX,ECX
            xor EAX,EDX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b9e0:

            mov RSI,RDI
            xor ECX,ECX
            jmp .L_40b9c2
.L_40b9e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40b9f0:

            push R15
            push R14
            mov EDX,1
            push R13
            push R12
            mov ECX,32768
            push RBP
            push RBX
            xor R10D,R10D
            sub RSP,184
.L_40ba0e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            lea R8,QWORD PTR [RSP+16]
            lea R9,QWORD PTR [RSP+96]
            nop
            nop
            nop
            nop
            nop
.L_40ba30:

            mov ESI,DWORD PTR [RDI+RDX*4+4]
            mov DWORD PTR [R8+RDX*4],EAX
            mov DWORD PTR [R9+RDX*4],ECX
            test ESI,ESI
            je .L_40ba48

            imul ESI,ECX
            mov R10D,EDX
            add EAX,ESI
.L_40ba48:

            add RDX,1
            sar ECX,1
            cmp RDX,17
            jne .L_40ba30

            and EAX,65535
            jne .L_40bb70

            cmp DWORD PTR [RDI+88],R10D
            jl .L_40bb70

            cmp R10D,15
            mov DWORD PTR [RDI+80],R10D
            jg .L_40baa9

            mov ECX,16
            sub ECX,R10D
            test R10D,R10D
            je .L_40baa9

            lea EDX,DWORD PTR [R10-1]
            lea RSI,QWORD PTR [RDX*4+8]
            mov EDX,4
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ba98:

            sar DWORD PTR [R8+RDX*1],CL
            sar DWORD PTR [R9+RDX*1],CL
            add RDX,4
            cmp RDX,RSI
            jne .L_40ba98
.L_40baa9:

            cmp R10D,10
            mov RBX,QWORD PTR [RDI+104]
            jg .L_40bc68
.L_40bab7:

            mov R8D,DWORD PTR [RDI]
            mov DWORD PTR [RDI+84],EAX
            mov R12,QWORD PTR [RDI+72]
            mov DWORD PTR [RDI+92],0
            test R8D,R8D
            jle .L_40bbca

            lea ECX,DWORD PTR [RAX-1]
            mov EBP,1
            lea EDX,DWORD PTR [R8-1]
            mov R11,R12
            shl EBP,CL
            lea RCX,QWORD PTR [RBX-2]
            lea R13,QWORD PTR [R12+RDX*1+1]
            mov QWORD PTR [RSP+8],RCX
            mov ECX,EAX
.L_40baf2:

            movzx EDX,BYTE PTR [R11]
            test DL,DL
            je .L_40bbbd

            movsxd RAX,EDX
            cmp EDX,10
            mov R14D,DWORD PTR [RSP+RAX*4+16]
            mov R9D,DWORD PTR [RSP+RAX*4+96]
            lea ESI,DWORD PTR [R14+R9*1]
            mov DWORD PTR [RSP+RAX*4+16],ESI
            jle .L_40bb60

            mov EAX,R14D
            sar EAX,CL
            cdqe 
            lea R9,QWORD PTR [RBX+RAX*2]
            movzx EAX,WORD PTR [R9]
            test AX,AX
            jne .L_40bbd8

            movsxd RSI,DWORD PTR [RDI+92]
            lea EAX,DWORD PTR [RSI+R8*1]
            lea R10D,DWORD PTR [RSI+1]
            cmp R10D,DWORD PTR [RDI+96]
            mov WORD PTR [R9],AX
            mov RAX,QWORD PTR [RDI+112]
            mov DWORD PTR [RDI+92],R10D
            lea R9,QWORD PTR [RAX+RSI*4]
            jg .L_40bb70

            mov DWORD PTR [R9],0
            jmp .L_40bbf5
          .byte 0x66
          .byte 0x90
.L_40bb60:

            cmp ESI,1024
            jle .L_40bccc

            nop
            nop
            nop
            nop
.L_40bb70:

            xor EAX,EAX
.L_40bb72:

            mov RBX,QWORD PTR [RSP+168]
            xor RBX,QWORD PTR FS:[40]
            jne .L_40bd50

            add RSP,184
.L_40bb90:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bba0:

            movzx ESI,SI
            test ESI,R14D
            je .L_40bd27

            cmp WORD PTR [R9],0
            jne .L_40bb70

            mov EAX,R11D
            sub EAX,R12D
            mov WORD PTR [R9],AX
.L_40bbbd:

            add R11,1
            cmp R13,R11
            jne .L_40baf2
.L_40bbca:

            mov EAX,1
            jmp .L_40bb72
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bbd8:

            cmp EAX,R8D
            jl .L_40bb70

            mov ESI,DWORD PTR [RDI+92]
            add ESI,R8D
            cmp EAX,ESI
            jge .L_40bb70

            sub EAX,R8D
            movsxd RSI,EAX
            mov RAX,QWORD PTR [RDI+112]
            lea R9,QWORD PTR [RAX+RSI*4]
.L_40bbf5:

            sub EDX,11
            mov ESI,EBP
            jne .L_40bc42

            jmp .L_40bba0
          .byte 0x66
          .byte 0x90
.L_40bc00:

            movzx R10D,WORD PTR [R9]
            cmp R10D,R8D
            jge .L_40bd18

            movsxd R10,DWORD PTR [RDI+92]
            lea R15D,DWORD PTR [R10+R8*1]
            mov WORD PTR [R9],R15W
.L_40bc19:

            lea R15D,DWORD PTR [R10+1]
            cmp R15D,DWORD PTR [RDI+96]
            lea R9,QWORD PTR [RAX+R10*4]
            mov DWORD PTR [RDI+92],R15D
            jg .L_40bb70

            mov DWORD PTR [R9],0
.L_40bc36:

            shr SI,1
            sub EDX,1
            je .L_40bba0
.L_40bc42:

            movzx R10D,SI
            test R10D,R14D
            jne .L_40bc00

            movzx R10D,WORD PTR [R9+2]
            cmp R10D,R8D
            jge .L_40bd18

            movsxd R10,DWORD PTR [RDI+92]
            lea R15D,DWORD PTR [R10+R8*1]
            mov WORD PTR [R9+2],R15W
            jmp .L_40bc19
.L_40bc68:

            lea EAX,DWORD PTR [R10-10]
            mov EDX,4
            mov ECX,EAX
            nop
            nop
            nop
            nop
            nop
.L_40bc78:

            sar DWORD PTR [R8+RDX*1],CL
            sar DWORD PTR [R9+RDX*1],CL
            add RDX,4
            cmp RDX,44
            jne .L_40bc78

            mov EAX,ECX
            lea RCX,QWORD PTR [RBX+2048]
            mov EDX,DWORD PTR [RSP+136]
            imul EDX,DWORD PTR [RDI+44]
            add EDX,DWORD PTR [RSP+56]
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RBX+RDX*2]
            cmp RDX,RCX
            jae .L_40bab7

            nop
            nop
            nop
            nop
            nop
            nop
.L_40bcb8:

            add RDX,2
            xor ESI,ESI
            cmp RDX,RCX
            mov WORD PTR [RDX-2],SI
            jb .L_40bcb8

            jmp .L_40bab7
.L_40bccc:

            movsxd RDX,R14D
            add RDX,RDX
            sub R9D,1
            js .L_40bbbd

            movsxd R10,R9D
            mov R9D,R9D
            mov ESI,R11D
            add R10,R10
            add R9,R9
            sub ESI,R12D
            lea RAX,QWORD PTR [RDX+R10*1]
            add RDX,QWORD PTR [RSP+8]
            add RAX,RBX
            add RDX,R10
            sub RDX,R9
.L_40bd00:

            mov WORD PTR [RAX],SI
            sub RAX,2
            cmp RDX,RAX
            jne .L_40bd00

            jmp .L_40bbbd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bd18:

            sub R10D,R8D
            movsxd R10,R10D
            lea R9,QWORD PTR [RAX+R10*4]
            jmp .L_40bc36
.L_40bd27:

            cmp WORD PTR [R9+2],0
            jne .L_40bb70

            mov EAX,R11D
            add R11,1
            sub EAX,R12D
            cmp R13,R11
            mov WORD PTR [R9+2],AX
            jne .L_40baf2

            jmp .L_40bbca
.L_40bd50:

            call __stack_chk_fail@PLT
.L_40bd55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bd60:

            mov R9,QWORD PTR [RDI+112]
            mov EAX,DWORD PTR [RDI+84]
            mov ECX,DWORD PTR [RDI]
.L_40bd69:

            cmp ECX,EDX
            jg .L_40bd93
.L_40bd6d:

            sub EAX,1
            sub EDX,ECX
            lea R8D,DWORD PTR [RAX+1]
            test R8D,R8D
            jle .L_40bdb0

            cmp DWORD PTR [RDI+92],EDX
            jle .L_40bdb0

            movsxd RDX,EDX
            bt ESI,EAX
            lea RDX,QWORD PTR [R9+RDX*4]
            jae .L_40bda0

            movzx EDX,WORD PTR [RDX]
            cmp ECX,EDX
            jle .L_40bd6d
.L_40bd93:

            mov EAX,EDX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bda0:

            movzx EDX,WORD PTR [RDX+2]
            jmp .L_40bd69
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bdb0:

            xor EAX,EAX
            ret 
.L_40bdb3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40bdc0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+72]
            call free@PLT

            mov RDI,QWORD PTR [RBX+104]
            call free@PLT

            mov RDI,QWORD PTR [RBX+112]
            pop RBX
            jmp free@PLT
.L_40bde0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40bdf1:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov R12,QWORD PTR [RBP+56]
            test R12,R12
            je .L_40bfa8

            xor EAX,EAX
            cmp WORD PTR [R12+10],0
            jne .L_40bf6d

            mov RBX,QWORD PTR [RBP+40]
            mov EAX,DWORD PTR [RBX+88]
.L_40be1e:

            movzx ECX,WORD PTR [RBX+4]
            cmp ECX,EAX
            jle .L_40bf80

            add EAX,1
            test BYTE PTR [RBP+84],4
            mov DWORD PTR [RBX+88],EAX
            lea RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBP+56],RAX
            mov DWORD PTR [RBX+64],0
            mov DWORD PTR [RBX+72],0
            mov QWORD PTR [RBX+80],0
            jne .L_40bff8

            mov R12D,8
            mov R13D,8
.L_40be64:

            xor EDX,EDX
            mov RSI,R12
            mov RDI,R14
            call .L_4049e0

            test RAX,RAX
            mov R15,RAX
            je .L_40c099

            mov EAX,DWORD PTR [RAX]
            mov DWORD PTR [RBX+24],EAX
            movzx EDX,WORD PTR [R15+4]
            mov WORD PTR [RBX+28],DX
            mov WORD PTR [RBX+30],DX
            lea ECX,DWORD PTR [RDX-1]
            movzx EAX,WORD PTR [R15+6]
            mov QWORD PTR [RBX+36],0
            cmp CX,38911
            mov DWORD PTR [RBX+44],0
            mov WORD PTR [RBX+32],AX
            mov WORD PTR [RBX+34],AX
            ja .L_40c040

            cmp AX,32768
            ja .L_40c040

            test AX,AX
            jne .L_40bed7

            mov RCX,QWORD PTR [RBP+48]
            cmp WORD PTR [RCX+16],-2
            jb .L_40c040
.L_40bed7:

            mov RCX,QWORD PTR [RBP+40]
            movzx ESI,WORD PTR [RCX+4]
            cmp DWORD PTR [RCX+88],ESI
            jge .L_40beee

            cmp AX,32768
            jne .L_40c040
.L_40beee:

            cmp WORD PTR [RCX+6],0
            jne .L_40befe

            cmp AX,DX
            jne .L_40c040
.L_40befe:

            cmp QWORD PTR [RBX+48],R12
            mov RAX,QWORD PTR [RBX+56]
            jae .L_40bf29

            mov RDI,RAX
            call free@PLT

            mov RDI,R12
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+56],RAX
            je .L_40c0b9

            mov QWORD PTR [RBX+48],R12
.L_40bf29:

            mov RDX,QWORD PTR [R15]
            lea RDI,QWORD PTR [RAX+8]
            mov RSI,R15
            movsxd R13,R13D
            and RDI,-8
            mov QWORD PTR [RAX],RDX
            mov EDX,R12D
            mov RCX,QWORD PTR [R15+RDX*1-8]
            mov QWORD PTR [RAX+RDX*1-8],RCX
            sub RAX,RDI
            lea ECX,DWORD PTR [R12+RAX*1]
            sub RSI,RAX
            shr ECX,3
            mov ECX,ECX

            rep movsq 

            mov RSI,R13
            mov RDI,R14
            call .L_404a30

            add QWORD PTR [RBP+64],R13
            xor EAX,EAX
.L_40bf6d:

            add RSP,8
.L_40bf71:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40bf80:

            test CX,CX
            je .L_40c010

            mov QWORD PTR [R12+4],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bfa8:

            mov RBX,QWORD PTR [RBP+40]
            mov R9,QWORD PTR [RBP+64]
            mov R8D,DWORD PTR [RBX]
            mov DWORD PTR [RBX+88],0
            mov RSI,R8
            sub RSI,R9
            js .L_40c060

            mov EAX,0
            je .L_40be1e

            call .L_404a30

            test RAX,RAX
            js .L_40c0a2

            mov RBX,QWORD PTR [RBP+40]
            mov EAX,DWORD PTR [RBX]
            mov QWORD PTR [RBP+64],RAX
            mov EAX,DWORD PTR [RBX+88]
            jmp .L_40be1e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bff8:

            movzx R13D,BYTE PTR [RBP+93]
            add R13D,8
            movsxd R12,R13D
            jmp .L_40be64
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c010:

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [RBP+56],RAX
            xor EAX,EAX
            movups XMMWORD PTR [RBX+24],XMM0
            movups XMMWORD PTR [RBX+40],XMM0
            movups XMMWORD PTR [RBX+56],XMM0
            movups XMMWORD PTR [RBX+72],XMM0
            add RSP,8
.L_40c032:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c040:

            lea RDX,QWORD PTR [RIP+.L_410805]
.L_40c047:

            xor EAX,EAX
            mov ESI,84
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_40bf6d
.L_40c060:

            mov RAX,QWORD PTR [RBP+48]
            movzx EAX,WORD PTR [RAX+16]
            cmp AX,-2
            je .L_40c0b0

            ja .L_40c0ac

            cmp AX,-3
            je .L_40c0ac

            movzx ECX,AX
.L_40c079:

            lea RDX,QWORD PTR [RIP+.L_410510]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_40bf6d
.L_40c099:

            lea RDX,QWORD PTR [RIP+.L_4107f0]
            jmp .L_40c047
.L_40c0a2:

            mov EAX,4294967266
            jmp .L_40bf6d
.L_40c0ac:

            xor ECX,ECX
            jmp .L_40c079
.L_40c0b0:

            movzx EAX,WORD PTR [RBP+80]
            lea ECX,DWORD PTR [RAX-1]
            jmp .L_40c079
.L_40c0b9:

            lea RDX,QWORD PTR [RIP+.L_410548]
            mov ESI,12
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_40bf6d
.L_40c0d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c0e0:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
.L_40c0e7:

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+72]
            mov RBP,RSI
            test RDI,RDI
            je .L_40c0fe

            cmp DWORD PTR [RBX],ESI
            je .L_40c1a0
.L_40c0fe:

            call free@PLT

            mov ESI,1
            mov RDI,RBP
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+72],RAX
            je .L_40c198

            mov DWORD PTR [RBX],EBP
.L_40c11b:

            cmp QWORD PTR [RBX+104],0
            je .L_40c140
.L_40c122:

            cmp QWORD PTR [RBX+112],0
            jne .L_40c12f

            cmp R12D,10
            jg .L_40c170
.L_40c12f:

            xor EAX,EAX
.L_40c131:

            pop RBX
.L_40c132:

            pop RBP
            pop R12
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c140:

            mov ECX,R12D
            mov EDI,2
            mov EAX,2048
            shl RDI,CL
            cmp R12D,10
            cmovge RDI,RAX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+104],RAX
            je .L_40c198

            mov DWORD PTR [RBX+88],R12D
            jmp .L_40c122
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c170:

            lea ECX,DWORD PTR [R12-6]
            mov EDI,1
            shl EDI,CL
            mov DWORD PTR [RBX+96],EDI
            movsxd RDI,EDI
            shl RDI,2
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+112],RAX
            jne .L_40c12f

            nop
            nop
            nop
            nop
.L_40c198:

            mov EAX,4294967266
            jmp .L_40c131
          .byte 0x90
.L_40c1a0:

            mov RDX,RSI
            xor ESI,ESI
            call memset@PLT

            jmp .L_40c11b
.L_40c1af:

            nop
.L_40c1b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40c1be:

            mov RAX,QWORD PTR [RDI+2472]
            mov R13,QWORD PTR [RAX]
            mov RAX,QWORD PTR [R13+40]
            mov RBX,QWORD PTR [R13+56]
            cmp WORD PTR [RAX+6],0
            movzx EDX,WORD PTR [RBX+14]
            mov R12,QWORD PTR [RBX+16]
            jne .L_40c220

            cmp RSI,R12
            mov RAX,R12
            cmovle RAX,RSI
            sub WORD PTR [RBX+10],AX
            sub RSI,RAX
            add EDX,EAX
            sub R12,RAX
            test RAX,RAX
            mov RBP,RSI
            mov R14D,EAX
            mov WORD PTR [RBX+14],DX
            mov QWORD PTR [RBX+16],R12
            jne .L_40c410
.L_40c20c:

            add RSP,8
.L_40c210:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40c220:

            movzx EAX,WORD PTR [RBX+12]
            movzx ECX,DX
            mov RBP,RSI
            sub EAX,ECX
            test EAX,EAX
            jle .L_40c246

            cdqe 
            cmp RSI,RAX
            cmovle RAX,RSI
            sub WORD PTR [RBX+10],AX
            add EDX,EAX
            sub RBP,RAX
            mov WORD PTR [RBX+14],DX
.L_40c246:

            test R12,R12
            je .L_40c20c

            mov QWORD PTR [RBX+16],0
            mov R14D,R12D
.L_40c256:

            mov ECX,DWORD PTR [RBX]
            test ECX,ECX
            je .L_40c2cb

            mov RDX,QWORD PTR [RBX+56]
            test RDX,RDX
            je .L_40c2cb

            mov EAX,DWORD PTR [RBX+48]
            mov RCX,R12
            test EAX,EAX
            je .L_40c398

            movsxd RSI,EAX
            add RSI,RBX
            cmp EAX,3
            jle .L_40c291

            jmp .L_40c38c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c288:

            add RSI,1
            test RCX,RCX
            je .L_40c2c3
.L_40c291:

            add RDX,1
            add EAX,1
            sub RCX,1
            mov DWORD PTR [RBX+48],EAX
            movzx R8D,BYTE PTR [RDX-1]
            cmp EAX,4
            mov BYTE PTR [RSI+44],R8B
            jne .L_40c288
.L_40c2ad:

            mov EAX,DWORD PTR [RBX+44]
            xor DWORD PTR [RBX+40],EAX
            test RCX,RCX
            mov DWORD PTR [RBX+48],0
            jne .L_40c398
.L_40c2c3:

            mov QWORD PTR [RBX+56],0
.L_40c2cb:

            mov RSI,R12
            mov R15,RDI
            call .L_404a30

            add QWORD PTR [R13+64],R12
            sub WORD PTR [RBX+6],R14W
            jne .L_40c20c

            mov RAX,QWORD PTR [R15+2472]
            mov R11,QWORD PTR [RAX]
            mov R10,QWORD PTR [R11+56]
            mov R8D,DWORD PTR [R10]
            test R8D,R8D
            je .L_40c20c

            movsxd RSI,DWORD PTR [R10+48]
            mov EDX,DWORD PTR [R10+40]
            test ESI,ESI
            je .L_40c322

            lea RDI,QWORD PTR [R10+44]
            call .L_40b960

            mov EDX,EAX
            mov DWORD PTR [R10+40],EAX
            mov DWORD PTR [R10+48],0
.L_40c322:

            test BYTE PTR [R11+84],4
            mov ESI,4
            je .L_40c337

            movzx EAX,BYTE PTR [R11+93]
            lea RSI,QWORD PTR [RAX+4]
.L_40c337:

            mov RAX,QWORD PTR [R10+32]
            lea RDI,QWORD PTR [RAX+4]
            call .L_40b960

            cmp R8D,EAX
            mov DWORD PTR [R10+40],EAX
            je .L_40c20c

            mov RDX,QWORD PTR [R11+40]
            sub RSP,8
.L_40c359:

            mov R9D,EAX
            mov ESI,84
            xor EAX,EAX
            mov RDI,R15
            mov RBP,-25
            mov ECX,DWORD PTR [RDX+88]
            movzx EDX,WORD PTR [R10+4]
            sub ECX,1
            push RDX
            lea RDX,QWORD PTR [RIP+.L_410570]
            call .L_43f5d0

            pop RAX
            pop RDX
            jmp .L_40c20c
.L_40c38c:

            cmp EAX,4
            je .L_40c2ad

            nop
            nop
            nop
.L_40c398:

            mov R9D,ECX
            and R9D,3
            movsxd R10,R9D
            cmp R10,RCX
            je .L_40c3d6

            mov RAX,RCX
            mov ESI,DWORD PTR [RBX+40]
            sub RAX,R10
            shr EAX,2
            test EAX,EAX
            je .L_40c3d3

            sub EAX,1
            lea R8,QWORD PTR [RDX+RAX*4+4]
            mov RAX,RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c3c8:

            xor ESI,DWORD PTR [RAX]
            add RAX,4
            cmp RAX,R8
            jne .L_40c3c8
.L_40c3d3:

            mov DWORD PTR [RBX+40],ESI
.L_40c3d6:

            test R9D,R9D
            jne .L_40c3e8
.L_40c3db:

            mov DWORD PTR [RBX+48],R9D
            jmp .L_40c2c3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c3e8:

            sub RCX,R10
            lea RSI,QWORD PTR [RBX+44]
            xor EAX,EAX
            add RDX,RCX
.L_40c3f4:

            mov ECX,EAX
            add EAX,1
            movzx R8D,BYTE PTR [RDX+RCX*1]
            cmp EAX,R9D
            mov BYTE PTR [RSI+RCX*1],R8B
            jb .L_40c3f4

            jmp .L_40c3db
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c410:

            mov R12,RAX
            jmp .L_40c256
.L_40c418:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c420:

            mov R9D,64
            sub R9D,DWORD PTR [RDX+8]
            mov EAX,R9D
            sar EAX,4
            cmp EAX,3
            je .L_40c488
.L_40c435:

            cmp EAX,4
            je .L_40c510

            test EAX,EAX
            je .L_40c500

            mov RCX,QWORD PTR [RSI]
.L_40c449:

            cmp RCX,1
            jle .L_40c598

            mov R8,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDX]
            sub R9D,16
            sub RCX,2
            movzx R10D,WORD PTR [R8]
            shl RAX,16
            add R8,2
            or RAX,R10
            mov QWORD PTR [RDX],RAX
            mov EAX,R9D
            mov QWORD PTR [RDI],R8
            sar EAX,4
            mov QWORD PTR [RSI],RCX
            add DWORD PTR [RDX+8],16
            cmp EAX,3
            jne .L_40c435
.L_40c488:

            mov RCX,QWORD PTR [RSI]
            cmp RCX,5
            jle .L_40c449

            mov R8,QWORD PTR [RDI]
            sub RCX,6
            movzx EAX,BYTE PTR [R8+1]
            movzx R9D,BYTE PTR [R8]
            add R8,6
            shl R9,32
            shl RAX,40
            or RAX,R9
            movzx R9D,BYTE PTR [R8-2]
            or RAX,R9
            movzx R9D,BYTE PTR [R8-3]
            shl R9D,24
            or RAX,R9
            movzx R9D,BYTE PTR [R8-4]
            shl R9D,16
            or RAX,R9
            movzx R9D,BYTE PTR [R8-1]
            shl R9D,8
            or RAX,R9
            mov R9,QWORD PTR [RDX]
            shl R9,48
            or RAX,R9
            mov QWORD PTR [RDX],RAX
            mov QWORD PTR [RDI],R8
            mov EAX,1
            mov QWORD PTR [RSI],RCX
            add DWORD PTR [RDX+8],48
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c500:

            mov EAX,1
.L_40c505:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c510:

            mov RCX,QWORD PTR [RSI]
            cmp RCX,7
            jle .L_40c449

            mov R8,QWORD PTR [RDI]
            sub RCX,8
            movzx EAX,BYTE PTR [R8+1]
            movzx R9D,BYTE PTR [R8]
            add R8,8
            shl R9,48
            shl RAX,56
            or RAX,R9
            movzx R9D,BYTE PTR [R8-2]
            or RAX,R9
            movzx R9D,BYTE PTR [R8-5]
            shl R9,40
            or RAX,R9
            movzx R9D,BYTE PTR [R8-6]
            shl R9,32
            or RAX,R9
            movzx R9D,BYTE PTR [R8-3]
            shl R9D,24
            or RAX,R9
            movzx R9D,BYTE PTR [R8-4]
            shl R9D,16
            or RAX,R9
            movzx R9D,BYTE PTR [R8-1]
            shl R9D,8
            or RAX,R9
            mov QWORD PTR [RDX],RAX
            mov QWORD PTR [RDI],R8
            mov EAX,1
            mov QWORD PTR [RSI],RCX
            add DWORD PTR [RDX+8],64
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c598:

            mov EAX,0
            jne .L_40c505

            mov RCX,QWORD PTR [RDI]
            lea R8,QWORD PTR [RCX+1]
            mov QWORD PTR [RDI],R8
            movzx ECX,BYTE PTR [RCX]
            mov BYTE PTR [RDX+12],CL
            mov QWORD PTR [RSI],0
            mov BYTE PTR [RDX+13],1
            ret 
.L_40c5bf:

            nop
.L_40c5c0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_40c5c8:

            mov R11,QWORD PTR [RDI+48]
            mov R14D,DWORD PTR [R11+600]
            lea RBP,QWORD PTR [R11+104]
            test R14D,R14D
            je .L_40c698
.L_40c5e0:

            cmp R14D,DWORD PTR [R11+480]
            jge .L_40c680

            mov RBX,RDI
            mov ECX,DWORD PTR [R11+112]
            movsxd R13,R14D
            lea R12,QWORD PTR [RDI+8]
            jmp .L_40c649
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c600:

            mov RAX,QWORD PTR [R11+104]
            sub ECX,4
            mov RDX,QWORD PTR [R11+552]
            add R14D,1
            shr RAX,CL
            and EAX,15
            mov BYTE PTR [RDX+R13*1],AL
            mov RAX,QWORD PTR [R11+552]
            movzx EAX,BYTE PTR [RAX+R13*1]
            add R13,1
            add DWORD PTR [R11+RAX*4+484],1
            mov EAX,DWORD PTR [R11+112]
            cmp DWORD PTR [R11+480],R14D
            lea ECX,DWORD PTR [RAX-4]
            mov DWORD PTR [R11+112],ECX
            jle .L_40c680
.L_40c649:

            cmp ECX,3
            jg .L_40c600

            mov RDX,RBP
            mov RSI,R12
            mov RDI,RBX
            call .L_40c420

            test EAX,EAX
            mov ECX,DWORD PTR [R11+112]
            jne .L_40c600

            cmp ECX,3
            jg .L_40c600

            mov DWORD PTR [R11+600],R14D
            pop RBX
.L_40c671:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c680:

            mov DWORD PTR [R11+600],R14D
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c698:

            pxor XMM0,XMM0
            mov DWORD PTR [R11+548],0
            movups XMMWORD PTR [R11+484],XMM0
            movups XMMWORD PTR [R11+500],XMM0
            movups XMMWORD PTR [R11+516],XMM0
            movups XMMWORD PTR [R11+532],XMM0
            jmp .L_40c5e0
.L_40c6cc:

            nop
            nop
            nop
            nop
.L_40c6d0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_40c6dd:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RDI,QWORD PTR [RBX+96]
            test RDI,RDI
            je .L_40c722

            cmp WORD PTR [RBX+80],0
            je .L_40c71d

            xor R12D,R12D
            xor EBP,EBP
            nop
            nop
            nop
            nop
.L_40c700:

            mov RDI,QWORD PTR [RDI+R12*1+56]
            add EBP,1
            add R12,96
            call free@PLT

            movzx EAX,WORD PTR [RBX+80]
            mov RDI,QWORD PTR [RBX+96]
            cmp EAX,EBP
            jg .L_40c700
.L_40c71d:

            call free@PLT
.L_40c722:

            mov RDI,QWORD PTR [RBX+104]
            test RDI,RDI
            je .L_40c762

            cmp WORD PTR [RBX+82],0
            je .L_40c75d

            xor R12D,R12D
            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c740:

            lea RDI,QWORD PTR [RDI+R12*1+24]
            add EBP,1
            add R12,48
            call .L_434290

            movzx EAX,WORD PTR [RBX+82]
            mov RDI,QWORD PTR [RBX+104]
            cmp EAX,EBP
            jg .L_40c740
.L_40c75d:

            call free@PLT
.L_40c762:

            cmp BYTE PTR [RBX+384],0
            je .L_40c777

            lea RDI,QWORD PTR [RBX+272]
            call inflateEnd@PLT
.L_40c777:

            mov RAX,QWORD PTR [RBX+440]
            test RAX,RAX
            je .L_40c7fc

            mov RDI,QWORD PTR [RAX+16]
            call free@PLT

            mov RAX,QWORD PTR [RBX+440]
            mov RDI,QWORD PTR [RAX+96]
            call free@PLT

            mov RAX,QWORD PTR [RBX+440]
            lea RDI,QWORD PTR [RAX+120]
            call .L_40bdc0

            mov RAX,QWORD PTR [RBX+440]
            lea RDI,QWORD PTR [RAX+480]
            call .L_40bdc0

            mov RAX,QWORD PTR [RBX+440]
            lea RDI,QWORD PTR [RAX+360]
            call .L_40bdc0

            mov RAX,QWORD PTR [RBX+440]
            lea RDI,QWORD PTR [RAX+240]
            call .L_40bdc0

            mov RDI,QWORD PTR [RBX+440]
            call free@PLT

            mov QWORD PTR [RBX+440],0
.L_40c7fc:

            lea RDI,QWORD PTR [RBX+120]
            call .L_4342c0

            mov RDI,QWORD PTR [RBX+160]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [R13+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_40c82b:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40c834:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c840:

            movzx EDX,BYTE PTR [RDI+4]
            cmp DL,70
            je .L_40c890

            jg .L_40c860

            test DL,DL
            je .L_40c880

            cmp DL,67
            mov EAX,2
            jne .L_40c874
.L_40c859:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c860:

            cmp DL,77
            mov EAX,4
            je .L_40c859

            cmp DL,83
            mov EAX,3
            je .L_40c859
.L_40c874:

            mov EAX,5
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c880:

            xor EAX,EAX
            cmp QWORD PTR [RDI],1178817357
            setne AL
            lea EAX,DWORD PTR [RAX+RAX*4]
            ret 
.L_40c890:

            mov EAX,1
            ret 
.L_40c896:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c8a0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_40c8aa:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,64
            jg .L_40c990

            xor EDX,EDX
            mov ESI,8
            mov RBP,RDI
            call .L_4049e0

            test RAX,RAX
            mov RDX,RAX
            je .L_40c990

            cmp QWORD PTR [RDX],1178817357
            mov EAX,64
            je .L_40c8f3

            xor EAX,EAX
            cmp BYTE PTR [RDX],77
            je .L_40c918
.L_40c8f3:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_40c9b7

            add RSP,24
.L_40c90b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c918:

            cmp BYTE PTR [RDX+1],90
            jne .L_40c8f3

            mov R12D,4096
            xor EBX,EBX
            mov R13,RSP
.L_40c929:

            lea RSI,QWORD PTR [RBX+R12*1]
            mov RDX,R13
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            mov R8,RAX
            je .L_40c980

            mov RSI,QWORD PTR [RSP]
            add RBX,RAX
            add RSI,RAX
            lea RAX,QWORD PTR [RBX+8]
            cmp RSI,RAX
            ja .L_40c966

            jmp .L_40c9a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40c958:

            cdqe 
            add RBX,RAX
            lea RAX,QWORD PTR [RBX+8]
            cmp RSI,RAX
            jbe .L_40c9a0
.L_40c966:

            mov RDI,RBX
            call .L_40c840

            test EAX,EAX
            jne .L_40c958

            mov EAX,64
            jmp .L_40c8f3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c980:

            sar R12,1
            cmp R12,127
            jg .L_40c929

            xor EAX,EAX
            jmp .L_40c8f3
.L_40c990:

            mov EAX,4294967295
            jmp .L_40c8f3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c9a0:

            sub RBX,R8
            cmp RBX,131071
            jle .L_40c929

            xor EAX,EAX
            jmp .L_40c8f3
.L_40c9b7:

            call __stack_chk_fail@PLT
.L_40c9bc:

            nop
            nop
            nop
            nop
.L_40c9c0:

            push R15
            push R14
            push R13
            push R12
            xor R12D,R12D
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,120
.L_40c9d4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+16],RSI
            mov RBX,QWORD PTR [RAX]
            cmp BYTE PTR [RBX+144],0
            je .L_40cb80
.L_40ca00:

            movsxd RAX,DWORD PTR [RBX+112]
            movzx EDX,WORD PTR [RBX+82]
            cmp EAX,EDX
            jge .L_40cb48

            lea R13,QWORD PTR [RAX+RAX*2]
            lea EDX,DWORD PTR [RAX+1]
            xor EDI,EDI
            mov WORD PTR [RBX+146],DI
            mov QWORD PTR [RBX+24],0
            shl R13,4
            add R13,QWORD PTR [RBX+104]
            mov DWORD PTR [RBX+112],EDX
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+16],0
            mov RCX,QWORD PTR [RBX+40]
            mov RAX,QWORD PTR [RBX+96]
            movzx EDX,WORD PTR [R13+16]
            mov QWORD PTR [RBX+48],R13
            cmp DX,-2
            je .L_40d1d8

            ja .L_40ca71

            cmp DX,-3
            je .L_40ca71

            lea RDX,QWORD PTR [RDX+RDX*2]
            shl RDX,5
            add RAX,RDX
.L_40ca71:

            mov QWORD PTR [RBX+40],RAX
.L_40ca75:

            cmp RCX,RAX
            je .L_40ca82

            mov QWORD PTR [RBX+56],0
.L_40ca82:

            movsx R9D,BYTE PTR [R13+18]
            test R9B,R9B
            js .L_40d0c8

            mov R14,QWORD PTR [RBX+184]
            test R14,R14
            je .L_40d4a0
.L_40caa0:

            mov RDX,QWORD PTR [R13+32]
            mov RSI,QWORD PTR [R13+24]
            test RDX,RDX
            je .L_40d110

            not R9D
            xor EDI,EDI
            xor EAX,EAX
            shr R9D,31
            jmp .L_40cad4
          .byte 0x66
          .byte 0x90
.L_40cac0:

            test CL,CL
            mov EDI,0
            cmovs EDI,R9D
            add RAX,1
            cmp RAX,RDX
            jae .L_40cafa
.L_40cad4:

            lea R8,QWORD PTR [RSI+RAX*1]
            movzx ECX,BYTE PTR [R8]
            cmp CL,92
            jne .L_40cac0

            test EDI,EDI
            jne .L_40cafa

            mov BYTE PTR [R8],47
            mov RDX,QWORD PTR [R13+32]
            add RAX,1
            mov RSI,QWORD PTR [R13+24]
            cmp RAX,RDX
            jb .L_40cad4
.L_40cafa:

            cmp RAX,RDX
            je .L_40d110

            mov RDI,QWORD PTR [RSP+16]
            mov RCX,R14
            call .L_4466d0

            test EAX,EAX
            je .L_40d360

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            jne .L_40d32f
.L_40cb26:

            lea RDX,QWORD PTR [RIP+.L_4105f0]
.L_40cb2d:

            mov ESI,12
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            mov R12D,4294967266
            jmp .L_40cb55
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40cb48:

            mov BYTE PTR [RBX+145],1
            mov R12D,1
.L_40cb55:

            mov RBX,QWORD PTR [RSP+104]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_40d5d9

            add RSP,120
.L_40cb70:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cb80:

            cmp QWORD PTR [RDI+24],0
            mov DWORD PTR [RDI+16],786432
            je .L_40d3d8
.L_40cb92:

            xor EDX,EDX
            mov ESI,42
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_40d088

            mov RDX,QWORD PTR [RBP+2472]
            mov R12,QWORD PTR [RDX]
            cmp BYTE PTR [R12+144],0
            je .L_40cfe8
.L_40cbc3:

            mov QWORD PTR [R12+64],0
            cmp BYTE PTR [RAX],77
            jne .L_40d503

            cmp BYTE PTR [RAX+1],83
            jne .L_40d503

            cmp BYTE PTR [RAX+2],67
            jne .L_40d503

            cmp BYTE PTR [RAX+3],70
            jne .L_40d503

            mov EDX,DWORD PTR [RAX+8]
            mov DWORD PTR [R12+72],EDX
            mov EDX,DWORD PTR [RAX+16]
            mov DWORD PTR [R12+76],EDX
            movzx EDX,BYTE PTR [RAX+24]
            mov BYTE PTR [R12+91],DL
            movzx EDX,BYTE PTR [RAX+25]
            mov BYTE PTR [R12+90],DL
            movzx EDX,WORD PTR [RAX+26]
            test DX,DX
            mov WORD PTR [R12+80],DX
            je .L_40cfc3

            movzx EDX,WORD PTR [RAX+28]
            test DX,DX
            mov WORD PTR [R12+82],DX
            je .L_40cfc3

            movzx EDX,WORD PTR [RAX+30]
            mov WORD PTR [R12+84],DX
            movzx ECX,WORD PTR [RAX+32]
            test DL,4
            mov WORD PTR [R12+86],CX
            movzx ECX,WORD PTR [RAX+34]
            mov WORD PTR [R12+88],CX
            jne .L_40d098

            mov BYTE PTR [R12+92],0
            mov R13D,36
.L_40cc6e:

            test DL,1
            jne .L_40d3f0
.L_40cc77:

            and EDX,2
            je .L_40cd21

            lea RSI,QWORD PTR [R13+256]
            xor EDX,EDX
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_40d088

            xor EDX,EDX
            add RAX,R13
            jmp .L_40ccb9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cca8:

            add RDX,1
            cmp RDX,256
            je .L_40cfc3
.L_40ccb9:

            cmp BYTE PTR [RAX+RDX*1],0
            lea R14,QWORD PTR [R13+RDX*1]
            jne .L_40cca8

            test RDX,RDX
            je .L_40cfc3

            lea RSI,QWORD PTR [R14+257]
            xor EDX,EDX
            mov RDI,RBP
            lea R15,QWORD PTR [R14+1]
            call .L_4049e0

            test RAX,RAX
            je .L_40d088

            xor EDX,EDX
            add RAX,R14
            jmp .L_40cd09
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ccf8:

            add RDX,1
            cmp RDX,256
            je .L_40cfc3
.L_40cd09:

            cmp BYTE PTR [RAX+RDX*1+1],0
            lea R13,QWORD PTR [R15+RDX*1]
            jne .L_40ccf8

            test RDX,RDX
            je .L_40cfc3

            add R13,1
.L_40cd21:

            mov RSI,R13
            mov RDI,RBP
            call .L_404a30

            add QWORD PTR [R12+64],R13
            movzx R13D,WORD PTR [R12+80]
            mov ESI,96
            mov RDI,R13
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+96],RAX
            je .L_40d5a7

            test BYTE PTR [R12+84],4
            mov ESI,8
            je .L_40cd69

            movzx ESI,BYTE PTR [R12+92]
            add RSI,8
.L_40cd69:

            imul RSI,R13
            xor EDX,EDX
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_40d088

            movzx ECX,WORD PTR [R12+80]
            test CX,CX
            je .L_40d56a

            movzx EDI,WORD PTR [R12+84]
            sub ECX,1
            mov RDX,QWORD PTR [R12+96]
            lea RCX,QWORD PTR [RCX+RCX*2]
            xor ESI,ESI
            xor R14D,R14D
            lea R10,QWORD PTR [RIP+.L_410835]
            lea R9,QWORD PTR [RIP+.L_65aa80]
            shl RCX,5
            and EDI,4
            lea R8,QWORD PTR [RDX+RCX*1+96]
            jmp .L_40ce05
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cdc8:

            and ECX,15
            mov RCX,QWORD PTR [R9+RCX*8]
            mov QWORD PTR [RDX+16],RCX
.L_40cdd3:

            add RAX,8
            add R14,8
            test DI,DI
            je .L_40cdec

            movzx ECX,BYTE PTR [R12+92]
            add RAX,RCX
            add R14,RCX
.L_40cdec:

            cmp ESI,R13D
            jae .L_40cfc3

            mov BYTE PTR [RDX+92],0
            add RDX,96
            mov ESI,R13D
            cmp RDX,R8
            je .L_40ce38
.L_40ce05:

            mov R13D,DWORD PTR [RAX]
            mov DWORD PTR [RDX],R13D
            movzx ECX,WORD PTR [RAX+4]
            mov WORD PTR [RDX+4],CX
            movzx ECX,WORD PTR [RAX+6]
            and ECX,15
            mov WORD PTR [RDX+6],CX
            movzx R11D,BYTE PTR [RAX+7]
            cmp CX,3
            mov WORD PTR [RDX+8],R11W
            jbe .L_40cdc8

            mov QWORD PTR [RDX+16],R10
            jmp .L_40cdd3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ce38:

            mov RSI,R14
.L_40ce3b:

            mov RDI,RBP
            call .L_404a30

            mov ECX,DWORD PTR [R12+76]
            add R14,QWORD PTR [R12+64]
            mov R15,RCX
            mov QWORD PTR [R12+64],R14
            sub R15,R14
            js .L_40d5b7

            jne .L_40d4e1
.L_40ce64:

            movzx EDI,WORD PTR [R12+82]
            mov ESI,48
            mov R14,RDI
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+104],RAX
            je .L_40d5a7

            test R14W,R14W
            je .L_40d587

            lea RSI,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+24],0
            mov DWORD PTR [RSP+44],4294967295
            mov DWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+8],RSI
.L_40ceb2:

            mov RSI,QWORD PTR [RSP+24]
            xor EDX,EDX
            mov RDI,RBP
            lea R14,QWORD PTR [RAX+RSI*1]
            mov ESI,16
            call .L_4049e0

            test RAX,RAX
            mov R15,RAX
            je .L_40d088

            mov EAX,DWORD PTR [RAX]
            mov RDX,QWORD PTR [RSP+8]
            pxor XMM0,XMM0
            mov DWORD PTR [R14],EAX
            mov EAX,DWORD PTR [R15+4]
            mov DWORD PTR [R14+4],EAX
            movzx EAX,WORD PTR [R15+8]
            mov WORD PTR [R14+16],AX
            movzx EAX,WORD PTR [R15+10]
            movzx ECX,WORD PTR [R15+12]
            movups XMMWORD PTR [RDX+24],XMM0
            mov ESI,EAX
            mov EDI,EAX
            sar EAX,5
            and EAX,15
            sar EDI,9
            and ESI,31
            sub EAX,1
            add EDI,80
            movups XMMWORD PTR [RDX+40],XMM0
            mov DWORD PTR [RSP+64],EAX
            mov EAX,ECX
            mov DWORD PTR [RSP+68],EDI
            sar EAX,11
            mov RDI,RDX
            mov DWORD PTR [RSP+56],EAX
            mov EAX,ECX
            add ECX,ECX
            sar EAX,5
            and ECX,62
            mov DWORD PTR [RSP+60],ESI
            and EAX,63
            mov DWORD PTR [RSP+48],ECX
            mov DWORD PTR [RSP+80],4294967295
            mov DWORD PTR [RSP+52],EAX
            call mktime@PLT

            mov QWORD PTR [R14+8],RAX
            movzx EAX,WORD PTR [R15+14]
            mov ESI,16
            mov RDI,RBP
            mov R15D,256
            mov BYTE PTR [R14+18],AL
            call .L_404a30

            add QWORD PTR [R12+64],16
            jmp .L_40cf8a
.L_40cf80:

            sub R15,1
            je .L_40d088
.L_40cf8a:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,R15
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_40cf80

            mov RSI,QWORD PTR [RSP+48]
            xor ECX,ECX
            lea RDX,QWORD PTR [RSI-1]
            nop
            nop
            nop
            nop
            nop
            nop
.L_40cfb0:

            cmp BYTE PTR [RAX+RCX*1],0
            je .L_40d1f8

            add RCX,1
            cmp RDX,RCX
            jae .L_40cfb0
.L_40cfc3:

            lea RDX,QWORD PTR [RIP+.L_41083d]
.L_40cfca:

            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0
.L_40cfd9:

            mov R12D,4294967266
            jmp .L_40cb55
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40cfe8:

            cmp BYTE PTR [RAX],77
            jne .L_40cbc3

            cmp BYTE PTR [RAX+1],90
            jne .L_40cbc3

            lea R14,QWORD PTR [RSP+48]
            mov R13D,4096
.L_40d006:

            mov RSI,R13
            mov RDX,R14
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            mov RSI,RAX
            je .L_40d4f6

            mov RCX,QWORD PTR [RSP+48]
            mov R8,RAX
            add RCX,RAX
            lea RAX,QWORD PTR [RAX+8]
            cmp RCX,RAX
            ja .L_40d052

            jmp .L_40d5b3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d040:

            cdqe 
            add RSI,RAX
            lea RAX,QWORD PTR [RSI+8]
            cmp RCX,RAX
            jbe .L_40d577
.L_40d052:

            mov RDI,RSI
            call .L_40c840

            test EAX,EAX
            jne .L_40d040

            sub RSI,R8
            mov RDI,RBP
            call .L_404a30

            xor EDX,EDX
            mov ESI,42
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            jne .L_40cbc3

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d088:

            lea RDX,QWORD PTR [RIP+.L_4107f0]
            jmp .L_40cfca
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d098:

            movzx R13D,WORD PTR [RAX+36]
            cmp R13W,60000
            ja .L_40cfc3

            movzx ECX,BYTE PTR [RAX+38]
            add R13,40
            mov BYTE PTR [R12+92],CL
            movzx EAX,BYTE PTR [RAX+39]
            mov BYTE PTR [R12+93],AL
            jmp .L_40cc6e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d0c8:

            mov R14,QWORD PTR [RBX+200]
            test R14,R14
            jne .L_40caa0

            lea RSI,QWORD PTR [RIP+.L_410850]
            mov EDX,1
            mov RDI,RBP
            call .L_437870

            test RAX,RAX
            mov R14,RAX
            mov QWORD PTR [RBX+200],RAX
            je .L_40cfd9
.L_40d0ff:

            movsx R9D,BYTE PTR [R13+18]
            jmp .L_40caa0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d110:

            mov RDI,QWORD PTR [RSP+16]
            mov RCX,R14
            call .L_4466d0

            test EAX,EAX
            jne .L_40d530
.L_40d125:

            mov R14,QWORD PTR [RSP+16]
            mov ESI,DWORD PTR [R13]
            mov RDI,R14
            call .L_446770

            test BYTE PTR [R13+18],1
            je .L_40d1c0

            mov ESI,33133
            mov RDI,R14
            call .L_446590
.L_40d14e:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R13+8]
            xor EDX,EDX
            call .L_4465a0

            mov EDI,DWORD PTR [R13]
            mov QWORD PTR [RBX],0
            test EDI,EDI
            mov QWORD PTR [RBX+8],RDI
            jne .L_40d17d

            mov ECX,257
            mov WORD PTR [RBX+146],CX
.L_40d17d:

            mov RAX,QWORD PTR [RBX+40]
            sub RSP,8
.L_40d185:

            lea R13,QWORD PTR [RBX+208]
            lea RCX,QWORD PTR [RIP+.L_410856]
            mov EDX,64
            mov ESI,1
            mov RDI,R13
            push QWORD PTR [RAX+16]
            movzx R9D,BYTE PTR [RBX+91]
            xor EAX,EAX
            movzx R8D,BYTE PTR [RBX+90]
            call __sprintf_chk@PLT

            mov QWORD PTR [RBP+24],R13
            pop RAX
            pop RDX
            jmp .L_40cb55
          .byte 0x90
.L_40d1c0:

            mov RDI,QWORD PTR [RSP+16]
            mov ESI,33206
            call .L_446590

            jmp .L_40d14e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d1d8:

            movzx EDX,WORD PTR [RBX+80]
            lea RDX,QWORD PTR [RDX+RDX*2]
            shl RDX,5
            lea RAX,QWORD PTR [RAX+RDX*1-96]
            mov QWORD PTR [RBX+40],RAX
            jmp .L_40ca75
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d1f8:

            test RCX,RCX
            jle .L_40cfc3

            lea RDI,QWORD PTR [R14+24]
            mov RDX,RCX
            mov RSI,RAX
            mov QWORD PTR [R14+24],0
            mov QWORD PTR [R14+32],0
            mov QWORD PTR [R14+40],0
            mov QWORD PTR [RSP+32],RCX
            call .L_437290

            mov RCX,QWORD PTR [RSP+32]
            mov RDI,RBP
            add RCX,1
            mov RSI,RCX
            mov QWORD PTR [RSP+32],RCX
            call .L_404a30

            mov RCX,QWORD PTR [RSP+32]
            add QWORD PTR [R12+64],RCX
            mov ECX,DWORD PTR [R14]
            cmp ECX,2147450880
            ja .L_40cfc3

            mov EAX,DWORD PTR [R14+4]
            mov EDX,ECX
            mov RSI,RAX
            add RAX,RDX
            cmp RAX,2147450880
            jg .L_40cfc3

            movzx EAX,WORD PTR [R14+16]
            cmp AX,-2
            je .L_40d4c0

            ja .L_40d310

            cmp AX,-3
            je .L_40d31d

            cmp AX,WORD PTR [R12+80]
            jae .L_40cfc3

            movzx EDX,AX
.L_40d2a5:

            cmp EDX,DWORD PTR [RSP+44]
            jl .L_40cfc3

            mov EAX,0
            cmovne R13D,EAX
            cmp ESI,R13D
            jne .L_40cfc3
.L_40d2c1:

            test ECX,ECX
            lea R13D,DWORD PTR [RCX+RSI*1]
            je .L_40d2e4

            movsxd RAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*2]
            shl RAX,5
            add RAX,QWORD PTR [R12+96]
            cmp WORD PTR [RAX+4],0
            je .L_40cfc3
.L_40d2e4:

            add DWORD PTR [RSP+40],1
            movzx EAX,WORD PTR [R12+82]
            mov EDI,DWORD PTR [RSP+40]
            add QWORD PTR [RSP+24],48
            cmp EDI,EAX
            jge .L_40d587

            mov RAX,QWORD PTR [R12+104]
            mov DWORD PTR [RSP+44],EDX
            jmp .L_40ceb2
          .byte 0x90
.L_40d310:

            cmp WORD PTR [R12+82],1
            jne .L_40cfc3
.L_40d31d:

            mov R8D,DWORD PTR [RSP+40]
            test R8D,R8D
            jne .L_40cfc3

            xor EDX,EDX
            jmp .L_40d2c1
.L_40d32f:

            mov RDI,R14
            mov R12D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_410618]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d360:

            mov RDI,QWORD PTR [RSP+16]
            call .L_445530

            test RAX,RAX
            mov R14,RAX
            je .L_40d125

            mov RDI,RAX
            mov QWORD PTR [RBX+128],0
            call wcslen@PLT

            lea RDI,QWORD PTR [RBX+120]
            mov RDX,RAX
            mov RSI,R14
            call .L_4372d0

            mov RDX,QWORD PTR [RBX+128]
            mov RSI,QWORD PTR [RBX+120]
            test RDX,RDX
            je .L_40d3c4

            lea RDX,QWORD PTR [RSI+RDX*4]
            mov RAX,RSI
            nop
.L_40d3b0:

            cmp DWORD PTR [RAX],92
            jne .L_40d3bb

            mov DWORD PTR [RAX],47
.L_40d3bb:

            add RAX,4
            cmp RAX,RDX
            jne .L_40d3b0
.L_40d3c4:

            mov RDI,QWORD PTR [RSP+16]
            call .L_446670

            jmp .L_40d125
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d3d8:

            lea RAX,QWORD PTR [RIP+.L_410814]
            mov QWORD PTR [RDI+24],RAX
            jmp .L_40cb92
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d3f0:

            lea RSI,QWORD PTR [R13+256]
            xor EDX,EDX
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_40d088

            xor EDX,EDX
            add RAX,R13
            jmp .L_40d429
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d418:

            add RDX,1
            cmp RDX,256
            je .L_40cfc3
.L_40d429:

            cmp BYTE PTR [RAX+RDX*1],0
            lea R14,QWORD PTR [R13+RDX*1]
            jne .L_40d418

            test RDX,RDX
            je .L_40cfc3

            lea RSI,QWORD PTR [R14+257]
            xor EDX,EDX
            mov RDI,RBP
            lea R15,QWORD PTR [R14+1]
            call .L_4049e0

            test RAX,RAX
            je .L_40d088

            xor EDX,EDX
            add RAX,R14
            jmp .L_40d479
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d468:

            add RDX,1
            cmp RDX,256
            je .L_40cfc3
.L_40d479:

            cmp BYTE PTR [RAX+RDX*1+1],0
            lea R13,QWORD PTR [R15+RDX*1]
            jne .L_40d468

            test RDX,RDX
            je .L_40cfc3

            add R13,1
            movzx EDX,WORD PTR [R12+84]
            jmp .L_40cc77
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d4a0:

            mov ESI,DWORD PTR [RBX+176]
            test ESI,ESI
            je .L_40d50f

            mov R14,QWORD PTR [RBX+192]
            jmp .L_40caa0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d4c0:

            movzx EAX,WORD PTR [R12+82]
            sub EAX,1
            cmp EAX,DWORD PTR [RSP+40]
            jne .L_40cfc3

            movzx EAX,WORD PTR [R12+80]
            lea EDX,DWORD PTR [RAX-1]
            jmp .L_40d2a5
.L_40d4e1:

            mov RSI,R15
            mov RDI,RBP
            call .L_404a30

            add QWORD PTR [R12+64],R15
            jmp .L_40ce64
.L_40d4f6:

            sar R13,1
            cmp R13,127
            jg .L_40d006
.L_40d503:

            lea RDX,QWORD PTR [RIP+.L_410818]
            jmp .L_40cfca
.L_40d50f:

            mov RDI,RBP
            call .L_4378a0

            mov DWORD PTR [RBX+176],1
            mov R14,RAX
            mov QWORD PTR [RBX+192],RAX
            jmp .L_40d0ff
.L_40d530:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_40cb26

            mov RDI,R14
            mov R12D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_410618]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_40d125
.L_40d56a:

            xor ESI,ESI
            xor R13D,R13D
            xor R14D,R14D
            jmp .L_40ce3b
.L_40d577:

            sub RSI,R8
.L_40d57a:

            mov RDI,RBP
            call .L_404a30

            jmp .L_40d006
.L_40d587:

            cmp WORD PTR [R12+88],0
            jne .L_40d5de

            test BYTE PTR [R12+84],3
            jne .L_40d5de

            xor R12D,R12D
.L_40d59b:

            mov BYTE PTR [RBX+144],1
            jmp .L_40ca00
.L_40d5a7:

            lea RDX,QWORD PTR [RIP+.L_410548]
            jmp .L_40cb2d
.L_40d5b3:

            xor ESI,ESI
            jmp .L_40d57a
.L_40d5b7:

            lea RDX,QWORD PTR [RIP+.L_4105a0]
            mov R8,R14
            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967266
            call .L_43f5d0

            jmp .L_40cb55
.L_40d5d9:

            call __stack_chk_fail@PLT
.L_40d5de:

            lea RDX,QWORD PTR [RIP+.L_4105c8]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967276
            call .L_43f5d0

            jmp .L_40d59b
.L_40d5fc:

            nop
            nop
            nop
            nop
.L_40d600:

            push RBP
            push RBX
            mov RAX,RDI
            sub RSP,8
.L_40d609:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_410865]
            mov RBP,QWORD PTR [RCX]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_40d680

            test RDX,RDX
            mov RSI,RDX
            mov RDI,RAX
            je .L_40d660

            cmp BYTE PTR [RDX],0
            je .L_40d660

            xor EDX,EDX
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [RBP+184],RAX
            mov EAX,4294967266
            cmove EBX,EAX
.L_40d657:

            add RSP,8
.L_40d65b:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_40d660:

            lea RDX,QWORD PTR [RIP+.L_410650]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_43f5d0

            jmp .L_40d657
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d680:

            mov EBX,4294967276
            jmp .L_40d657
.L_40d687:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d690:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            sub RSP,40
.L_40d6a4:

            mov RBX,QWORD PTR [RDI+48]
            mov QWORD PTR [RSP+16],RDI
            mov R11D,DWORD PTR [RBX+600]
            lea RAX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP+8],RAX
            test R11D,R11D
            je .L_40dac8
.L_40d6c6:

            cmp R13D,-1
            jne .L_40d6d0

            mov R13D,DWORD PTR [R15]
            nop
.L_40d6d0:

            cmp R11D,R13D
            jge .L_40d7b6
.L_40d6d9:

            mov EBP,DWORD PTR [RBX+112]
            mov R12D,DWORD PTR [RBX+560]
            mov DWORD PTR [RBX+600],R11D
            cmp EBP,R12D
            jl .L_40d7d8
.L_40d6f3:

            mov R10,QWORD PTR [RBX+104]
            mov ECX,EBP
            lea RDI,QWORD PTR [RIP+.L_410960]
            sub ECX,R12D
            movsxd RAX,R12D
            mov RDX,QWORD PTR [RBX+584]
            lea R14,QWORD PTR [RBX+480]
            mov RSI,R10
            shr RSI,CL
            and ESI,DWORD PTR [RDI+RAX*4]
            mov ECX,DWORD PTR [RBX+564]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [RBX+480]
            jl .L_40d73d

            mov EDX,EAX
            mov RDI,R14
            call .L_40bd60
.L_40d73d:

            cmp EAX,18
            mov R8,QWORD PTR [RBX+552]
            je .L_40d9c0

            cmp EAX,19
            je .L_40d890

            cmp EAX,17
            je .L_40d810

            movsxd RDX,EAX
            movsxd RCX,R11D
            add RCX,QWORD PTR [R15+72]
            movzx EDX,BYTE PTR [R8+RDX*1]
            sub EBP,EDX
            mov EDX,2021161081
            mov DWORD PTR [RBX+112],EBP
            movzx ESI,BYTE PTR [RCX]
            sub ESI,EAX
            add ESI,17
            mov EAX,ESI
            imul EDX
            mov EAX,ESI
            sar EAX,31
            sar EDX,3
            sub EDX,EAX
            mov EAX,EDX
            shl EAX,4
            add EDX,EAX
            sub ESI,EDX
            js .L_40daad

            movsxd RAX,ESI
            add R11D,1
            add DWORD PTR [R15+RAX*4+4],1
            cmp R11D,R13D
            mov BYTE PTR [RCX],SIL
            jl .L_40d6d9
.L_40d7b6:

            mov EAX,1
.L_40d7bb:

            mov DWORD PTR [RBX+600],R11D
            add RSP,40
.L_40d7c6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d7d8:

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RDI+8]
            call .L_40c420

            test EAX,EAX
            mov EBP,DWORD PTR [RBX+112]
            mov R12D,DWORD PTR [RBX+560]
            jne .L_40d6f3

            cmp EBP,R12D
            jge .L_40d6f3

            jmp .L_40d7bb
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d810:

            movzx EDX,BYTE PTR [R8+17]
            lea EAX,DWORD PTR [RDX+3]
            cmp EAX,EBP
            jl .L_40d849

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RDI+8]
            call .L_40c420

            test EAX,EAX
            je .L_40da60

            mov RAX,QWORD PTR [RBX+552]
            mov EBP,DWORD PTR [RBX+112]
            mov R10,QWORD PTR [RBX+104]
            movzx EDX,BYTE PTR [RAX+17]
.L_40d849:

            sub EBP,EDX
            lea ECX,DWORD PTR [RBP-4]
            shr R10,CL
            and R10D,15
            add R10D,4
            lea EAX,DWORD PTR [R10+R11*1]
            cmp EAX,R13D
            jg .L_40daaa

            mov DWORD PTR [RBX+112],ECX
            xor EAX,EAX
            movsxd RCX,R11D
            nop
            nop
.L_40d870:

            mov RDX,QWORD PTR [R15+72]
            add R11D,1
            add RDX,RAX
            add RAX,1
            cmp R10D,EAX
            mov BYTE PTR [RDX+RCX*1],0
            jg .L_40d870

            jmp .L_40d6d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d890:

            movzx EDX,BYTE PTR [R8+19]
            lea EAX,DWORD PTR [R12+RDX*1+1]
            cmp EAX,EBP
            jle .L_40d8da

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RDI+8]
            call .L_40c420

            mov R8,QWORD PTR [RBX+552]
            test EAX,EAX
            mov EBP,DWORD PTR [RBX+112]
            movzx EDX,BYTE PTR [R8+19]
            jne .L_40d8d6

            mov ECX,DWORD PTR [RBX+560]
            lea ECX,DWORD PTR [RDX+RCX*1+1]
            cmp EBP,ECX
            jl .L_40d7bb
.L_40d8d6:

            mov R10,QWORD PTR [RBX+104]
.L_40d8da:

            mov EAX,EBP
            mov R12,R10
            sub EAX,EDX
            lea EBP,DWORD PTR [RAX-1]
            mov ECX,EBP
            shr R12,CL
            and R12D,1
            add R12D,4
            lea EDX,DWORD PTR [R12+R11*1]
            cmp EDX,R13D
            jg .L_40dae8

            movsxd RAX,DWORD PTR [RBX+560]
            mov ECX,EBP
            lea RDI,QWORD PTR [RIP+.L_410960]
            mov RSI,R10
            mov RDX,QWORD PTR [RBX+584]
            mov DWORD PTR [RBX+112],EBP
            sub ECX,EAX
            shr RSI,CL
            and ESI,DWORD PTR [RDI+RAX*4]
            mov ECX,DWORD PTR [RBX+564]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [RBX+480]
            jl .L_40d94d

            mov EDX,EAX
            mov RDI,R14
            mov QWORD PTR [RSP+24],R8
            call .L_40bd60

            mov R8,QWORD PTR [RSP+24]
.L_40d94d:

            movsxd RDX,EAX
            mov RCX,QWORD PTR [R15+72]
            movsxd RSI,R11D
            movzx EDX,BYTE PTR [R8+RDX*1]
            sub EBP,EDX
            mov EDX,2021161081
            mov DWORD PTR [RBX+112],EBP
            movzx EDI,BYTE PTR [RCX+RSI*1]
            sub EDI,EAX
            add EDI,17
            mov EAX,EDI
            imul EDX
            mov EAX,EDI
            sar EAX,31
            sar EDX,3
            sub EDX,EAX
            mov EAX,EDX
            shl EAX,4
            add EDX,EAX
            sub EDI,EDX
            movsxd RDX,EDI
            js .L_40daad

            mov EDI,EDX
            xor EAX,EAX
            jmp .L_40d99c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40d998:

            mov RCX,QWORD PTR [R15+72]
.L_40d99c:

            add RCX,RSI
            add R11D,1
            mov BYTE PTR [RCX+RAX*1],DIL
            add RAX,1
            cmp R12D,EAX
            jg .L_40d998

            add DWORD PTR [R15+RDX*4+4],R12D
            jmp .L_40d6d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d9c0:

            movzx EDX,BYTE PTR [R8+18]
            lea EAX,DWORD PTR [RDX+4]
            cmp EAX,EBP
            jge .L_40da30
.L_40d9cc:

            sub EBP,EDX
            lea ECX,DWORD PTR [RBP-5]
            shr R10,CL
            and R10D,31
            add R10D,20
            lea EDX,DWORD PTR [R10+R11*1]
            cmp EDX,R13D
            jg .L_40daaa

            mov DWORD PTR [RBX+112],ECX
            movsxd RCX,R11D
            add RCX,QWORD PTR [R15+72]
            mov EAX,R10D
            mov R11D,EDX
            lea RDI,QWORD PTR [RCX+8]
            mov QWORD PTR [RCX],0
            mov QWORD PTR [RCX+RAX*1-8],0
            xor EAX,EAX
            and RDI,-8
            sub RCX,RDI
            add ECX,R10D
            shr ECX,3
            mov ECX,ECX

            rep stosq QWORD PTR [RDI]

            jmp .L_40d6d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40da30:

            mov RDI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RDI+8]
            call .L_40c420

            test EAX,EAX
            je .L_40da88

            mov RAX,QWORD PTR [RBX+552]
            mov EBP,DWORD PTR [RBX+112]
            mov R10,QWORD PTR [RBX+104]
            movzx EDX,BYTE PTR [RAX+18]
            jmp .L_40d9cc
          .byte 0x66
          .byte 0x90
.L_40da60:

            mov RDX,QWORD PTR [RBX+552]
            mov EBP,DWORD PTR [RBX+112]
            movzx EDX,BYTE PTR [RDX+17]
            lea ECX,DWORD PTR [RDX+3]
            cmp ECX,EBP
            jge .L_40d7bb

            mov R10,QWORD PTR [RBX+104]
            jmp .L_40d849
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40da88:

            mov RDX,QWORD PTR [RBX+552]
            mov EBP,DWORD PTR [RBX+112]
            movzx EDX,BYTE PTR [RDX+18]
            lea ECX,DWORD PTR [RDX+4]
            cmp ECX,EBP
            jge .L_40d7bb

            mov R10,QWORD PTR [RBX+104]
            jmp .L_40d9cc
.L_40daaa:

            mov DWORD PTR [RBX+112],EBP
.L_40daad:

            mov EAX,4294967295
.L_40dab2:

            add RSP,40
.L_40dab6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40dac8:

            pxor XMM0,XMM0
            mov DWORD PTR [RSI+68],0
            movups XMMWORD PTR [RSI+4],XMM0
            movups XMMWORD PTR [RSI+20],XMM0
            movups XMMWORD PTR [RSI+36],XMM0
            movups XMMWORD PTR [RSI+52],XMM0
            jmp .L_40d6c6
.L_40dae8:

            mov DWORD PTR [RBX+112],EAX
            mov EAX,4294967295
            jmp .L_40dab2
.L_40daf2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40db00:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,408
.L_40db11:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+392],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+88],RDI
            mov QWORD PTR [RSP+192],RSI
            mov RBX,QWORD PTR [RAX]
            call .L_40bde0

            test EAX,EAX
            js .L_40f6e5

            mov RDX,QWORD PTR [RBX+40]
            movzx EAX,WORD PTR [RDX+6]
            cmp AX,1
            je .L_40de53

            jb .L_40ddaa

            cmp AX,3
            jne .L_40de24

            mov RAX,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RAX+2472]
            mov RAX,QWORD PTR [RAX]
            cmp QWORD PTR [RAX+160],0
            mov RDX,QWORD PTR [RAX+56]
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+144],RDX
            je .L_40f889
.L_40db98:

            mov RAX,QWORD PTR [RSP+144]
            movzx EBX,WORD PTR [RAX+12]
            movzx EAX,WORD PTR [RAX+8]
            cmp BX,AX
            je .L_40e800

            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RCX+40]
            mov R12,QWORD PTR [RCX+440]
            cmp BYTE PTR [RDX+92],0
            je .L_40f6f9
.L_40dbcb:

            mov RSI,QWORD PTR [RSP+24]
            movzx EDX,BX
            mov DWORD PTR [R12+112],0
            cmp RDX,RAX
            mov BYTE PTR [R12+117],0
            mov QWORD PTR [RSI+432],RDX
            jge .L_40fb19

            lea RCX,QWORD PTR [RSP+296]
            mov QWORD PTR [RSP+280],RCX
            jmp .L_40dc6e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40dc08:

            cmp DWORD PTR [RSP+212],1
            ja .L_40f959

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+408]
.L_40dc22:

            mov RAX,QWORD PTR [RSP+144]
            mov RCX,QWORD PTR [RSP+160]
            mov RDI,QWORD PTR [RSP+88]
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX+56],RCX
            call .L_40c1b0

            test RAX,RAX
            js .L_40f21e

            mov RAX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX+432]
            mov RAX,QWORD PTR [RSP+144]
            movzx EAX,WORD PTR [RAX+8]
            cmp RDX,RAX
            jge .L_40fb19
.L_40dc6e:

            mov RSI,QWORD PTR [RSP+24]
            sub RAX,RDX
            mov RDI,QWORD PTR [RSP+88]
            mov RCX,QWORD PTR [RSI+160]
            mov QWORD PTR [RSI+424],RAX
            add RCX,RDX
            mov RDX,QWORD PTR [RSP+280]
            mov QWORD PTR [RSI+416],RCX
            mov ESI,1
            call .L_4049e0

            mov QWORD PTR [RSP+160],RAX
            mov RAX,QWORD PTR [RSP+296]
            test RAX,RAX
            mov QWORD PTR [RSP+80],RAX
            jle .L_40fb08

            mov RAX,QWORD PTR [RSP+144]
            movzx EAX,WORD PTR [RAX+6]
            cmp QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+176],RAX
            jle .L_40dceb

            mov QWORD PTR [RSP+296],RAX
            mov QWORD PTR [RSP+80],RAX
.L_40dceb:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+160]
            mov RDX,QWORD PTR [RSP+80]
            mov RBP,QWORD PTR [RAX+440]
            mov QWORD PTR [RAX+392],RSI
            mov QWORD PTR [RAX+400],RDX
            mov QWORD PTR [RAX+408],0
            mov EAX,DWORD PTR [RBP+604]
            test EAX,EAX
            mov DWORD PTR [RSP+212],EAX
            jne .L_40dc08

            mov RAX,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RBP+112]
            add RAX,400
            cmp BYTE PTR [RBP+117],0
            mov QWORD PTR [RSP+168],RAX
            mov EAX,64
            setne CL
            sub EAX,EDX
            cmp EAX,15
            setg AL
            test CL,AL
            je .L_40dd6c

            cmp QWORD PTR [RSP+80],0
            jg .L_40f681
.L_40dd6c:

            mov EBX,DWORD PTR [RBP]
            mov RAX,QWORD PTR [RSP+24]
            mov R12,RBP
            add RAX,392
            cmp EBX,17
            mov QWORD PTR [RSP+120],RAX
            jg .L_40e88d

            nop
            nop
            nop
            nop
            nop
.L_40dd90:

            lea R11,QWORD PTR [R12+104]
.L_40dd95:

            cmp EBX,17
            ja .L_40dd95
.L_40dd9a:

            lea RCX,QWORD PTR [RIP+.L_410900]
            movsxd RAX,DWORD PTR [RCX+RBX*4]
            add RAX,RCX
            jmp RAX
.L_40ddaa:

            mov RDI,QWORD PTR [RSP+88]
            mov R15,QWORD PTR [RSP+192]
            mov ESI,1
            mov RAX,QWORD PTR [RDI+2472]
            mov RDX,R15
            mov RAX,QWORD PTR [RAX]
            mov RBX,QWORD PTR [RAX+56]
            call .L_4049e0

            mov RDX,QWORD PTR [R15]
            test RDX,RDX
            jle .L_40fcc0

            movzx ECX,WORD PTR [RBX+10]
            cmp RDX,RCX
            jg .L_40e048
.L_40ddeb:

            movzx ECX,WORD PTR [RBX+8]
            mov QWORD PTR [RBX+16],RDX
            mov QWORD PTR [RBX+56],RAX
            mov WORD PTR [RBX+12],CX
.L_40ddfb:

            mov RDX,QWORD PTR [RSP+392]
            xor RDX,QWORD PTR FS:[40]
            jne .L_40fe7d

            add RSP,408
.L_40de19:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40de24:

            mov RCX,QWORD PTR [RDX+16]
            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_410778]
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            mov RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RAX],-25
            xor EAX,EAX
            jmp .L_40ddfb
.L_40de53:

            mov RAX,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RAX+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+160],0
            mov R12,QWORD PTR [RBX+56]
            je .L_40f8c8
.L_40de74:

            movzx EBP,WORD PTR [R12+12]
            movzx R8D,WORD PTR [R12+8]
            cmp BP,R8W
            je .L_40e833

            mov RAX,QWORD PTR [RBX+40]
            cmp BYTE PTR [RAX+92],0
            jne .L_40df2b

            cmp BYTE PTR [RBX+384],0
            mov QWORD PTR [RBX+272],0
            lea RDI,QWORD PTR [RBX+272]
            mov DWORD PTR [RBX+280],0
            mov QWORD PTR [RBX+288],0
            mov QWORD PTR [RBX+296],0
            mov DWORD PTR [RBX+304],0
            mov QWORD PTR [RBX+312],0
            jne .L_40f87f

            lea RDX,QWORD PTR [RIP+.L_410889]
            mov ECX,112
            mov ESI,4294967281
            call inflateInit2_@PLT
.L_40df02:

            test EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_410688]
            mov ESI,4294967295
            jne .L_40f212

            mov RAX,QWORD PTR [RBX+40]
            mov BYTE PTR [RBX+384],1
            mov BYTE PTR [RAX+92],1
            movzx R8D,WORD PTR [R12+8]
.L_40df2b:

            movzx EAX,WORD PTR [R12+4]
            xor R13D,R13D
            movzx EDX,R8W
            cmp WORD PTR [R12+6],AX
            movzx EAX,BP
            mov R15,QWORD PTR [RSP+88]
            mov QWORD PTR [RBX+312],RAX
            lea RBP,QWORD PTR [RSP+304]
            sete R13B
            add R13D,R13D
            cmp RDX,RAX
            jbe .L_40f3c0
.L_40df65:

            mov RDX,QWORD PTR [RBX+160]
            sub R8D,EAX
            mov ESI,1
            mov DWORD PTR [RBX+304],R8D
            mov RDI,R15
            add RDX,RAX
            mov QWORD PTR [RBX+296],RDX
            mov RDX,RBP
            call .L_4049e0

            mov RSI,QWORD PTR [RSP+304]
            mov R14,RAX
            test RSI,RSI
            jle .L_40fcc0

            movzx EAX,WORD PTR [R12+6]
            cmp RSI,RAX
            jle .L_40dfba

            mov QWORD PTR [RSP+304],RAX
            mov RSI,RAX
.L_40dfba:

            test R13D,R13D
            mov QWORD PTR [RBX+272],R14
            mov EDX,ESI
            mov DWORD PTR [RBX+280],ESI
            mov QWORD PTR [RBX+288],0
            jle .L_40f370

            movsxd RAX,R13D
            movzx ECX,BYTE PTR [R14]
            cmp RAX,RSI
            jl .L_40f334

            cmp R13D,2
            je .L_40f1ec

            cmp CL,75
            jne .L_40f206
.L_40e000:

            mov QWORD PTR [R12+16],RSI
            mov QWORD PTR [R12+56],R14
            mov RDI,R15
            call .L_40c1b0

            test RAX,RAX
            js .L_40f21e

            sub R13D,DWORD PTR [RSP+304]
.L_40e023:

            movzx R8D,WORD PTR [R12+8]
            mov RAX,QWORD PTR [RBX+312]
            movzx EDX,R8W
            cmp RDX,RAX
            ja .L_40df65

            jmp .L_40f3c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e048:

            mov RSI,QWORD PTR [RSP+192]
            mov RDX,RCX
            mov QWORD PTR [RSI],RCX
            jmp .L_40ddeb
.L_40e05b:

            mov EAX,DWORD PTR [R12+120]
            lea EAX,DWORD PTR [RAX+RAX*2]
            cmp DWORD PTR [R12+112],EAX
            jge .L_40e087

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40c420

            test EAX,EAX
            je .L_40f8f0
.L_40e087:

            mov EAX,DWORD PTR [R12+120]
            pxor XMM0,XMM0
            mov DWORD PTR [R12+188],0
            test EAX,EAX
            movups XMMWORD PTR [R12+124],XMM0
            movups XMMWORD PTR [R12+140],XMM0
            movups XMMWORD PTR [R12+156],XMM0
            movups XMMWORD PTR [R12+172],XMM0
            jle .L_40e10e

            xor EDX,EDX
            mov EAX,DWORD PTR [R12+112]
            mov RSI,QWORD PTR [R12+192]
.L_40e0d0:

            lea ECX,DWORD PTR [RAX-3]
            mov RAX,QWORD PTR [R12+104]
            shr RAX,CL
            lea ECX,DWORD PTR [RDX+1]
            and EAX,7
            mov BYTE PTR [RSI+RDX*1],AL
            mov RSI,QWORD PTR [R12+192]
            movzx EAX,BYTE PTR [RSI+RDX*1]
            add RDX,1
            add DWORD PTR [R12+RAX*4+124],1
            mov EAX,DWORD PTR [R12+112]
            sub EAX,3
            cmp DWORD PTR [R12+120],ECX
            mov DWORD PTR [R12+112],EAX
            jg .L_40e0d0
.L_40e10e:

            lea RDI,QWORD PTR [R12+120]
            call .L_40b9f0

            test EAX,EAX
            je .L_40f9fe
.L_40e120:

            mov DWORD PTR [R12+600],0
.L_40e12c:

            mov RDI,QWORD PTR [RSP+120]
            call .L_40c5c0

            test EAX,EAX
            jne .L_40e180

            mov DWORD PTR [R12],12
.L_40e142:

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+80]
            mov RSI,RAX
            sub RSI,QWORD PTR [RDX+400]
            add RSI,QWORD PTR [RDX+408]
            cmp QWORD PTR [RSP+176],RAX
            je .L_40f934

            mov QWORD PTR [RDX+408],RSI
            jmp .L_40dc22
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e180:

            lea RDI,QWORD PTR [R12+480]
            call .L_40b9f0

            test EAX,EAX
            je .L_40f9fe

            mov DWORD PTR [R12+600],0
.L_40e1a1:

            mov RDI,QWORD PTR [RSP+120]
            lea RSI,QWORD PTR [R12+360]
            mov EDX,256
            call .L_40d690

            test EAX,EAX
            js .L_40f9fe

            jne .L_40e1cf

            mov DWORD PTR [R12],13
            jmp .L_40e142
.L_40e1cf:

            mov DWORD PTR [R12+600],0
.L_40e1db:

            mov RDI,QWORD PTR [RSP+120]
            call .L_40c5c0

            test EAX,EAX
            jne .L_40e226

            mov RCX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+80]
            mov DWORD PTR [R12],14
            mov RSI,RAX
            sub RSI,QWORD PTR [RCX+400]
            add RSI,QWORD PTR [RCX+408]
            cmp QWORD PTR [RSP+176],RAX
            je .L_40f934

            mov QWORD PTR [RCX+408],RSI
            jmp .L_40dc22
.L_40e226:

            lea RDI,QWORD PTR [R12+480]
            call .L_40b9f0

            test EAX,EAX
            je .L_40f9fe

            mov DWORD PTR [R12+600],256
.L_40e247:

            lea RBX,QWORD PTR [R12+360]
            mov RDI,QWORD PTR [RSP+120]
            mov EDX,4294967295
            mov RSI,RBX
            call .L_40d690

            test EAX,EAX
            js .L_40f9fe

            jne .L_40e2a8

            mov DWORD PTR [R12],15
.L_40e273:

            mov RAX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+80]
            mov RSI,RDX
            sub RSI,QWORD PTR [RAX+400]
            add RSI,QWORD PTR [RAX+408]
            cmp QWORD PTR [RSP+176],RDX
            je .L_40f934
.L_40e29c:

            mov QWORD PTR [RAX+408],RSI
            jmp .L_40dc22
.L_40e2a8:

            mov RDI,RBX
            call .L_40b9f0

            test EAX,EAX
            je .L_40f9fe

            mov DWORD PTR [R12+600],0
.L_40e2c4:

            mov RDI,QWORD PTR [RSP+120]
            call .L_40c5c0

            test EAX,EAX
            jne .L_40e2dc

            mov DWORD PTR [R12],16
            jmp .L_40e273
.L_40e2dc:

            lea RDI,QWORD PTR [R12+480]
            call .L_40b9f0

            test EAX,EAX
            je .L_40f9fe

            mov DWORD PTR [R12+600],0
.L_40e2fd:

            lea RBX,QWORD PTR [R12+240]
            mov RDI,QWORD PTR [RSP+120]
            mov EDX,4294967295
            mov RSI,RBX
            call .L_40d690

            test EAX,EAX
            js .L_40f9fe

            jne .L_40e85b

            mov DWORD PTR [R12],17
            jmp .L_40e273
.L_40e332:

            mov EAX,DWORD PTR [R12+76]
            test EAX,EAX
            mov DWORD PTR [R12+72],EAX
            js .L_40f9fe

            mov DWORD PTR [R12],8
.L_40e34c:

            mov RCX,QWORD PTR [R12+56]
            mov RDI,QWORD PTR [RSP+24]
            test RCX,RCX
            mov RAX,QWORD PTR [RDI+400]
            je .L_40e5e4

            mov RDX,QWORD PTR [RDI+424]
            test RDX,RDX
            jle .L_40fdc8

            test RAX,RAX
            jle .L_40e5a9

            mov RBP,QWORD PTR [RSP+24]
            mov EBX,DWORD PTR [R12+24]
            mov RSI,QWORD PTR [RBP+392]
            mov RDI,QWORD PTR [RBP+416]
            jmp .L_40e3b2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e3a0:

            test RDX,RDX
            jle .L_40f035

            test RAX,RAX
            jle .L_40e5a9
.L_40e3b2:

            mov R9D,DWORD PTR [R12+4]
            sub R9D,EBX
            cmp R9D,ECX
            mov EBX,R9D
            cmovg EBX,ECX
            movsxd R13,EBX
            cmp R13,RDX
            jle .L_40e3d0

            mov EBX,EDX
            mov R13,RDX
.L_40e3d0:

            cmp RAX,R13
            jge .L_40e3da

            mov EBX,EAX
            mov R13,RAX
.L_40e3da:

            movsxd R14,EBX
            mov RDX,R14
            call memcpy@PLT

            movsxd RDI,DWORD PTR [R12+24]
            mov RSI,QWORD PTR [RBP+392]
            mov RDX,R14
            add RDI,QWORD PTR [R12+16]
            call memcpy@PLT

            add EBX,DWORD PTR [R12+24]
            mov RCX,QWORD PTR [R12+56]
            mov RSI,QWORD PTR [RBP+392]
            mov RAX,QWORD PTR [RBP+400]
            mov RDI,QWORD PTR [RBP+416]
            mov RDX,QWORD PTR [RBP+424]
            and EBX,DWORD PTR [R12+8]
            sub RCX,R14
            add QWORD PTR [RBP+432],R13
            add RSI,R14
            sub RAX,R13
            add RDI,R14
            sub RDX,R13
            test RCX,RCX
            mov QWORD PTR [RBP+392],RSI
            mov QWORD PTR [RBP+400],RAX
            mov QWORD PTR [RBP+416],RDI
            mov QWORD PTR [RBP+424],RDX
            mov DWORD PTR [R12+24],EBX
            mov QWORD PTR [R12+56],RCX
            jne .L_40e3a0

            jmp .L_40e5e4
.L_40e473:

            mov ESI,DWORD PTR [R12+112]
            mov RDI,QWORD PTR [RSP+24]
.L_40e47d:

            cmp ESI,31
            jle .L_40e4f2
.L_40e482:

            mov RAX,QWORD PTR [R12+104]
            lea ECX,DWORD PTR [RSI-16]
            mov RDX,RAX
            shr RDX,CL
            lea ECX,DWORD PTR [RSI-32]
            mov BYTE PTR [R12+76],DL
            shr DX,8
            shr RAX,CL
            mov BYTE PTR [R12+77],DL
            mov DWORD PTR [R12+112],ECX
            mov BYTE PTR [R12+78],AL
            shr AX,8
            mov BYTE PTR [R12+79],AL
.L_40e4b7:

            mov EAX,DWORD PTR [R12]
            mov DWORD PTR [R12+80],0
            cmp EAX,5
            je .L_40f662

            cmp EAX,6
            je .L_40f841

            cmp EAX,7
            je .L_40e332

            cmp EAX,8
            je .L_40e34c
.L_40e4e8:

            mov ESI,DWORD PTR [R12+112]
            cmp ESI,31
            jg .L_40e482
.L_40e4f2:

            cmp ESI,15
            jle .L_40f49f

            mov RAX,QWORD PTR [R12+104]
            lea ECX,DWORD PTR [RSI-16]
            mov DWORD PTR [R12+80],2
            mov DWORD PTR [R12+112],ECX
            shr RAX,CL
            mov BYTE PTR [R12+76],AL
            shr AX,8
            cmp BYTE PTR [R12+117],0
            mov BYTE PTR [R12+77],AL
            mov EAX,2
            je .L_40f498

            movzx EAX,BYTE PTR [R12+116]
            mov DWORD PTR [R12+80],3
            mov EDX,3
            mov BYTE PTR [R12+117],0
            mov BYTE PTR [R12+78],AL
.L_40e552:

            mov RAX,QWORD PTR [RDI+400]
            test RAX,RAX
            jle .L_40e5a9

            mov RCX,QWORD PTR [RDI+392]
            movsxd RSI,EDX
            add RSI,R12
            nop
            nop
            nop
            nop
            nop
.L_40e570:

            add RCX,1
            add EDX,1
            sub RAX,1
            mov QWORD PTR [RDI+392],RCX
            mov DWORD PTR [R12+80],EDX
            cmp EDX,4
            movzx R8D,BYTE PTR [RCX-1]
            mov BYTE PTR [RSI+76],R8B
            mov QWORD PTR [RDI+400],RAX
            je .L_40e4b7

            add RSI,1
            test RAX,RAX
            jne .L_40e570
.L_40e5a9:

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,RDX
            sub RSI,RAX
            mov RAX,QWORD PTR [RSP+24]
            add RSI,QWORD PTR [RAX+408]
            cmp QWORD PTR [RSP+176],RDX
            jne .L_40e29c

            jmp .L_40f934
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e5d8:

            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX+400]
.L_40e5e4:

            test BYTE PTR [R12+48],1
            mov RCX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RCX+408]
            je .L_40e619

            test RAX,RAX
            jle .L_40fc10

            mov RDX,QWORD PTR [RSP+24]
            sub RAX,1
            add QWORD PTR [RDX+392],1
            mov QWORD PTR [RDX+400],RAX
.L_40e619:

            mov RCX,QWORD PTR [RSP+80]
            mov DWORD PTR [R12],2
            sub RCX,RAX
            add RSI,RCX
.L_40e62c:

            mov RAX,QWORD PTR [RSP+24]
            jmp .L_40e29c
.L_40e636:

            movzx EDX,BYTE PTR [R12+40]
            mov EAX,DWORD PTR [R12+112]
.L_40e641:

            test DL,DL
            je .L_40e676

            cmp EAX,31
            jle .L_40fbd5
.L_40e64e:

            mov RDX,QWORD PTR [R12+104]
            lea ECX,DWORD PTR [RAX-16]
            sub EAX,32
            mov DWORD PTR [R12+112],EAX
            mov RSI,RDX
            shr RSI,CL
            mov ECX,EAX
            shr RDX,CL
            shl ESI,16
            movzx EDX,DX
            or EDX,ESI
            mov DWORD PTR [R12+36],EDX
.L_40e676:

            cmp EAX,2
            jle .L_40e7c0
.L_40e67f:

            lea ECX,DWORD PTR [RAX-3]
            mov RAX,QWORD PTR [R12+104]
            mov DWORD PTR [R12+112],ECX
            shr RAX,CL
            and EAX,7
            mov BYTE PTR [R12+41],AL
            sub EAX,1
            cmp AL,2
            ja .L_40f9fe

            cmp ECX,23
            jle .L_40e748
.L_40e6ab:

            mov RDX,QWORD PTR [R12+104]
            lea ESI,DWORD PTR [RCX-24]
            sub ECX,8
            mov DWORD PTR [R12+112],ESI
            mov RAX,RDX
            shr RAX,CL
            mov ECX,ESI
            shr RDX,CL
            movzx EAX,AL
            shl RAX,16
            movzx EDX,DX
            or RAX,RDX
            test RAX,RAX
            mov QWORD PTR [R12+48],RAX
            je .L_40f9fe

            mov QWORD PTR [R12+56],RAX
            movzx EAX,BYTE PTR [R12+41]
            cmp AL,3
            je .L_40e785

            cmp AL,1
            je .L_40f41a

            mov DWORD PTR [R12],10
            mov EBX,10
            jmp .L_40dd9a
.L_40e70e:

            mov EAX,DWORD PTR [R12+112]
            test EAX,EAX
            jle .L_40fc49
.L_40e71b:

            mov RDX,QWORD PTR [R12+104]
            sub EAX,1
            mov ECX,EAX
            mov DWORD PTR [R12+112],EAX
            shr RDX,CL
            and EDX,1
            mov BYTE PTR [R12+40],DL
            jmp .L_40e641
.L_40e73a:

            mov ECX,DWORD PTR [R12+112]
            cmp ECX,23
            jg .L_40e6ab
.L_40e748:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40c420

            test EAX,EAX
            mov ECX,DWORD PTR [R12+112]
            jne .L_40e6ab

            cmp ECX,23
            jg .L_40e6ab

            mov DWORD PTR [R12],3
            jmp .L_40e273
.L_40e780:

            mov ESI,DWORD PTR [R12+112]
.L_40e785:

            test SIL,15
            je .L_40f6cf

            and ESI,4294967280
            mov DWORD PTR [R12+112],ESI
.L_40e797:

            mov DWORD PTR [R12+80],0
            mov DWORD PTR [R12],5
            mov RDI,QWORD PTR [RSP+24]
            jmp .L_40e47d
.L_40e7b2:

            mov EAX,DWORD PTR [R12+112]
            cmp EAX,2
            jg .L_40e67f
.L_40e7c0:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40c420

            test EAX,EAX
            mov EAX,DWORD PTR [R12+112]
            jne .L_40e67f

            cmp EAX,2
            jg .L_40e67f

            mov DWORD PTR [R12],2
            jmp .L_40f90b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e800:

            mov RAX,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+192]
            movzx EAX,WORD PTR [RAX+14]
            mov RCX,RAX
            add RAX,QWORD PTR [RDX+160]
            movzx EDX,BX
            sub EDX,ECX
            movsxd RDX,EDX
            mov QWORD PTR [RDI],RDX
            jmp .L_40ddfb
.L_40e833:

            movzx EAX,WORD PTR [R12+14]
            movzx EDX,BP
            mov RCX,RAX
            add RAX,QWORD PTR [RBX+160]
            sub EDX,ECX
            mov RCX,QWORD PTR [RSP+192]
            movsxd RDX,EDX
            mov QWORD PTR [RCX],RDX
            jmp .L_40ddfb
.L_40e85b:

            mov RDI,RBX
            call .L_40b9f0

            test EAX,EAX
            je .L_40f9fe

            mov DWORD PTR [R12],18
            cmp DWORD PTR [RBP],17
            mov RAX,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RAX+440]
            jle .L_40f838

            mov EBX,DWORD PTR [R12]
.L_40e88d:

            mov RAX,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [R12+240]
            lea RDX,QWORD PTR [R12+120]
            movdqu XMM0,XMMWORD PTR [R12+104]
            mov R9,R12
            mov QWORD PTR [RSP+272],RSI
            mov RSI,QWORD PTR [R12+96]
            mov RCX,QWORD PTR [RAX+424]
            mov RBP,QWORD PTR [RAX+416]
            movaps XMMWORD PTR [RSP+304],XMM0
            mov QWORD PTR [RSP+264],RDX
            lea RDX,QWORD PTR [R12+360]
            mov QWORD PTR [RSP+200],RSI
            lea RAX,QWORD PTR [RBP+RCX*1]
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+184],RCX
            mov ECX,DWORD PTR [R12+8]
            mov QWORD PTR [RSP+104],RDX
            mov R8D,DWORD PTR [R12+32]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [R12+192]
            mov R15D,DWORD PTR [R12+28]
            mov R11D,DWORD PTR [R12+24]
            mov QWORD PTR [RSP+248],RAX
            mov RAX,QWORD PTR [R12+312]
            mov QWORD PTR [RSP+256],RAX
            mov RAX,QWORD PTR [R12+432]
            mov QWORD PTR [RSP+224],RAX
            mov RAX,QWORD PTR [R12+56]
            mov QWORD PTR [RSP+8],RAX
            mov EAX,DWORD PTR [R12+200]
            mov DWORD PTR [RSP+220],EAX
            mov EAX,DWORD PTR [R12+320]
            mov DWORD PTR [RSP+244],EAX
            movsxd RAX,DWORD PTR [R12+440]
            mov DWORD PTR [RSP+240],EAX
            mov DWORD PTR [RSP+96],ECX
            mov ESI,DWORD PTR [R12+84]
            mov EDX,DWORD PTR [R12+4]
            mov ECX,DWORD PTR [R12+92]
            mov QWORD PTR [RSP+232],RAX
            mov DWORD PTR [RSP+128],ESI
            mov ESI,DWORD PTR [R12+64]
            mov DWORD PTR [RSP+20],EDX
            mov EDX,DWORD PTR [R12+88]
            mov DWORD PTR [RSP+132],ECX
            mov ECX,DWORD PTR [R12+68]
            mov DWORD PTR [RSP+100],ESI
            movzx ESI,BYTE PTR [R12+41]
            mov DWORD PTR [RSP+112],EDX
            mov EDX,DWORD PTR [R12+72]
            mov DWORD PTR [RSP+116],ECX
            lea RCX,QWORD PTR [RSP+304]
            mov DWORD PTR [RSP+208],EDX
            mov BYTE PTR [RSP+219],SIL
            mov QWORD PTR [RSP+152],RCX
.L_40e9f2:

            lea EAX,DWORD PTR [RBX-18]
.L_40e9f5:

            cmp EAX,4
            ja .L_40e9f5

            lea RCX,QWORD PTR [RIP+.L_410948]
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
.L_40ea0a:

            sub EAX,256
            mov R9,R15
            mov R8D,DWORD PTR [RSP+40]
            mov ECX,EAX
            mov R15D,DWORD PTR [RSP+32]
            sar EAX,3
            and ECX,7
            mov QWORD PTR [RSP+8],RBX
            mov DWORD PTR [RSP+112],EAX
            mov DWORD PTR [RSP+128],ECX
.L_40ea34:

            cmp DWORD PTR [RSP+128],7
            je .L_40f159

            mov EAX,DWORD PTR [RSP+128]
            lea R8D,DWORD PTR [RAX+2]
.L_40ea4d:

            movsxd RAX,R8D
            cmp RAX,QWORD PTR [RSP+8]
            ja .L_40f637

            mov EAX,DWORD PTR [RSP+112]
            cmp EAX,1
            je .L_40f265

            cmp EAX,2
            je .L_40f243

            test EAX,EAX
            je .L_40f234

            movsxd RAX,DWORD PTR [RSP+112]
            mov RDX,QWORD PTR [RSP+200]
            mov EAX,DWORD PTR [RDX+RAX*8+4]
            mov DWORD PTR [RSP+132],EAX
.L_40ea91:

            cmp BYTE PTR [RSP+219],2
            mov EAX,DWORD PTR [RSP+312]
            jne .L_40f050

            mov ESI,DWORD PTR [RSP+132]
            cmp ESI,2
            jle .L_40f050

            lea EBX,DWORD PTR [RSI-3]
            cmp EBX,EAX
            jg .L_40f42c
.L_40eac1:

            mov RDX,QWORD PTR [RSP+304]
            mov R10D,EAX
            lea RSI,QWORD PTR [RIP+.L_410960]
            sub R10D,EBX
            mov ECX,R10D
            mov R15,RDX
            shr R15,CL
            movsxd RCX,EBX
            and R15D,DWORD PTR [RSI+RCX*4]
            mov ECX,DWORD PTR [RSP+220]
            lea R12D,DWORD PTR [RCX+RBX*1]
            shl R15D,3
            cmp R12D,EAX
            jle .L_40f0d7

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40c420

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+312]
            mov R8D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            jne .L_40f0cc

            cmp R12D,R10D
            jle .L_40f0cc

            mov RDX,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RDX
            jne .L_40fe5a

            movsxd RAX,DWORD PTR [RSP+220]
            mov RSI,QWORD PTR [RSP+304]
            sub R10D,EBX
            mov RDX,QWORD PTR [R9+224]
            mov DWORD PTR [RSP+312],R10D
            mov ECX,EAX
            sub ECX,R10D
            shl RSI,CL
            lea RCX,QWORD PTR [RIP+.L_410960]
            and ESI,DWORD PTR [RCX+RAX*4]
            mov ECX,DWORD PTR [R9+204]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R9+120]
            jl .L_40ebc4

            mov RDI,QWORD PTR [RSP+264]
            mov EDX,EAX
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40bd60

            mov R9,QWORD PTR [RSP+40]
            mov R8D,DWORD PTR [RSP+32]
.L_40ebc4:

            mov RDI,QWORD PTR [RSP+248]
            movsxd RDX,EAX
            movzx EDX,BYTE PTR [RDI+RDX*1]
            sub R10D,EDX
            test R10D,R10D
            mov DWORD PTR [RSP+312],R10D
            js .L_40f637

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ebf0:

            add EAX,R15D
.L_40ebf3:

            movsxd RDX,DWORD PTR [RSP+112]
            mov RCX,QWORD PTR [RSP+200]
            mov R12,RBP
            mov EDX,DWORD PTR [RCX+RDX*8]
            lea R15D,DWORD PTR [RAX+RDX*1-2]
            mov EAX,DWORD PTR [RSP+116]
            mov DWORD PTR [RSP+208],EAX
            mov EAX,DWORD PTR [RSP+100]
            mov DWORD PTR [RSP+100],R15D
            mov DWORD PTR [RSP+116],EAX
            jmp .L_40ed43
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ec30:

            mov R10D,DWORD PTR [RSP+96]
            mov R12,RBP
.L_40ec38:

            mov EAX,R15D
            mov EDI,R11D
            mov QWORD PTR [RSP+136],R9
            mov R11,QWORD PTR [RSP+72]
            mov R15D,R8D
            mov R9,QWORD PTR [RSP+64]
            jmp .L_40ed1e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ec60:

            sub EBX,EAX
            cmp EBX,R15D
            cmovg EBX,R15D
.L_40ec69:

            movsxd R14,EBX
            add RBP,R14
            cmp R9,RBP
            ja .L_40ec84

            mov R14,R9
            sub R14,R12
            mov EBX,R14D
            movsxd R14,R14D
            lea RBP,QWORD PTR [R12+R14*1]
.L_40ec84:

            movsxd R13,EAX
            lea ECX,DWORD PTR [RAX+RBX*1]
            lea R8D,DWORD PTR [RDI+RBX*1]
            add R13,R11
            cmp EBX,7
            jle .L_40ef10

            cmp EDI,ECX
            jg .L_40eca7

            cmp EAX,R8D
            jle .L_40ef50
.L_40eca7:

            movsxd RDI,EDI
            mov RDX,R14
            mov RSI,R13
            add RDI,R11
            mov DWORD PTR [RSP+60],R10D
            mov QWORD PTR [RSP+48],R9
            mov DWORD PTR [RSP+56],R8D
            mov DWORD PTR [RSP+40],ECX
            mov QWORD PTR [RSP+32],R11
            call memcpy@PLT

            mov RDX,R14
            mov RSI,R13
            mov RDI,R12
            call memcpy@PLT

            mov R11,QWORD PTR [RSP+32]
            mov ECX,DWORD PTR [RSP+40]
            mov R8D,DWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+48]
            mov R10D,DWORD PTR [RSP+60]
.L_40ecf6:

            mov EAX,ECX
            mov EDI,R8D
            sub QWORD PTR [RSP+8],R14
            and EAX,R10D
            and EDI,R10D
            cmp R15D,EBX
            jle .L_40ef58

            sub R15D,EBX
            cmp R9,RBP
            mov R12,RBP
            jbe .L_40ef78
.L_40ed1e:

            cmp EAX,EDI
            mov EBX,DWORD PTR [RSP+20]
            jg .L_40ec60

            sub EBX,EDI
            cmp EBX,R15D
            cmovg EBX,R15D
            jmp .L_40ec69
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ed40:

            mov R12,RBP
.L_40ed43:

            mov EAX,R11D
            mov R10D,DWORD PTR [RSP+96]
            sub EAX,R15D
            mov R15D,EAX
            and R15D,R10D
            jmp .L_40ec38
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ed60:

            cmp QWORD PTR [RSP+8],0
            je .L_40fcb8

            cmp QWORD PTR [RSP+64],RBP
            jbe .L_40fcb0

            mov DWORD PTR [RSP+32],R15D
            mov DWORD PTR [RSP+56],EBX
            mov R15,R9
            mov R13,QWORD PTR [RSP+224]
            mov R12D,DWORD PTR [RSP+240]
            mov DWORD PTR [RSP+40],R8D
            mov RBX,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RSP+232]
            jmp .L_40ee46
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40edb0:

            mov RSI,QWORD PTR [RSP+304]
            lea RAX,QWORD PTR [RIP+.L_410960]
            mov ECX,R10D
            sub ECX,R12D
            mov RDX,QWORD PTR [R15+464]
            shr RSI,CL
            and ESI,DWORD PTR [RAX+R14*4]
            mov ECX,DWORD PTR [R15+444]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R15+360]
            jl .L_40edf7

            mov RDI,QWORD PTR [RSP+104]
            mov EDX,EAX
            call .L_40bd60
.L_40edf7:

            movsxd RDX,EAX
            movzx EDX,BYTE PTR [R13+RDX*1]
            sub R10D,EDX
            mov DWORD PTR [RSP+312],R10D
.L_40ee0b:

            cmp EAX,255
            jg .L_40ea0a

            mov RSI,QWORD PTR [RSP+72]
            movsxd RDX,R11D
            add RBP,1
            add R11D,1
            and R11D,DWORD PTR [RSP+96]
            sub RBX,1
            mov BYTE PTR [RSI+RDX*1],AL
            mov BYTE PTR [RBP-1],AL
            je .L_40f281

            cmp QWORD PTR [RSP+64],RBP
            je .L_40f314
.L_40ee46:

            mov R10D,DWORD PTR [RSP+312]
            cmp R12D,R10D
            jle .L_40edb0

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            call .L_40c420

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+312]
            jne .L_40edb0

            cmp R12D,R10D
            jle .L_40edb0

            mov RCX,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RCX
            jne .L_40fd5a

            mov RSI,QWORD PTR [RSP+304]
            lea RAX,QWORD PTR [RIP+.L_410960]
            mov ECX,R12D
            sub ECX,R10D
            mov RDX,QWORD PTR [R15+464]
            shl RSI,CL
            and ESI,DWORD PTR [RAX+R14*4]
            mov ECX,DWORD PTR [R15+444]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R15+360]
            jl .L_40eee4

            mov RDI,QWORD PTR [RSP+104]
            mov EDX,EAX
            call .L_40bd60
.L_40eee4:

            movsxd RDX,EAX
            movzx EDX,BYTE PTR [R13+RDX*1]
            sub R10D,EDX
            test R10D,R10D
            mov DWORD PTR [RSP+312],R10D
            jns .L_40ee0b

            mov R12,R15
            jmp .L_40f63a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef10:

            test EBX,EBX
            movsxd RDI,EDI
            jle .L_40ecf6
.L_40ef1b:

            lea ESI,DWORD PTR [RBX-1]
            xor EAX,EAX
            add RDI,R11
            add RSI,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ef30:

            movzx EDX,BYTE PTR [R13+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            mov BYTE PTR [R12+RAX*1],DL
            add RAX,1
            cmp RSI,RAX
            jne .L_40ef30

            jmp .L_40ecf6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ef50:

            movsxd RDI,EDI
            jmp .L_40ef1b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40ef58:

            mov R8D,R15D
            mov R11D,EDI
            mov R15D,EAX
            mov R9,QWORD PTR [RSP+136]
            mov EBX,18
            jmp .L_40e9f2
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ef78:

            mov R12,QWORD PTR [RSP+136]
            mov R8D,R15D
            mov R11D,EDI
            mov R15D,EAX
            mov EBX,22
.L_40ef8e:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+24]
            movdqa XMM0,XMMWORD PTR [RSP+304]
            mov DWORD PTR [R12+32],R8D
            mov DWORD PTR [R12+28],R15D
            mov QWORD PTR [R12+56],RAX
            mov EAX,DWORD PTR [RSP+128]
            movups XMMWORD PTR [R12+104],XMM0
            mov DWORD PTR [R12],EBX
            mov DWORD PTR [R12+24],R11D
            mov DWORD PTR [R12+84],EAX
            mov EAX,DWORD PTR [RSP+132]
            mov DWORD PTR [R12+92],EAX
            mov EAX,DWORD PTR [RSP+112]
            mov DWORD PTR [R12+88],EAX
            mov EAX,DWORD PTR [RSP+100]
            mov DWORD PTR [R12+64],EAX
            mov EAX,DWORD PTR [RSP+116]
            mov DWORD PTR [R12+68],EAX
            mov EAX,DWORD PTR [RSP+208]
            mov DWORD PTR [R12+72],EAX
            mov RAX,QWORD PTR [RSP+64]
            sub RAX,RBP
            mov QWORD PTR [RSI+424],RAX
.L_40f00d:

            mov RSI,QWORD PTR [RSP+184]
            sub RSI,RAX
            mov RAX,RSI
            mov RSI,QWORD PTR [RSP+24]
            add QWORD PTR [RSI+416],RAX
            add QWORD PTR [RSI+432],RAX
            mov RAX,QWORD PTR [RSI+400]
.L_40f035:

            mov RDI,QWORD PTR [RSP+80]
            mov RCX,QWORD PTR [RSP+24]
            sub RDI,RAX
            add QWORD PTR [RCX+408],RDI
            jmp .L_40dc08
          .byte 0x66
          .byte 0x90
.L_40f050:

            cmp DWORD PTR [RSP+132],EAX
            jle .L_40f09f

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40c420

            test EAX,EAX
            mov R8D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RSP+312]
            jne .L_40f09f

            cmp DWORD PTR [RSP+132],EAX
            jg .L_40fe62
.L_40f09f:

            movsxd RDX,DWORD PTR [RSP+132]
            lea RSI,QWORD PTR [RIP+.L_410960]
            sub EAX,EDX
            mov ECX,EAX
            mov RAX,QWORD PTR [RSP+304]
            mov DWORD PTR [RSP+312],ECX
            shr RAX,CL
            and EAX,DWORD PTR [RSI+RDX*4]
            jmp .L_40ebf3
.L_40f0cc:

            mov RDX,QWORD PTR [RSP+304]
            sub R10D,EBX
.L_40f0d7:

            movsxd RAX,DWORD PTR [RSP+220]
            mov ECX,R10D
            mov DWORD PTR [RSP+312],R10D
            sub ECX,EAX
            shr RDX,CL
            lea RCX,QWORD PTR [RIP+.L_410960]
            mov ESI,DWORD PTR [RCX+RAX*4]
            mov ECX,DWORD PTR [R9+204]
            and ESI,EDX
            mov RDX,QWORD PTR [R9+224]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R9+120]
            jl .L_40f13a

            mov RDI,QWORD PTR [RSP+264]
            mov EDX,EAX
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40bd60

            mov R9,QWORD PTR [RSP+40]
            mov R8D,DWORD PTR [RSP+32]
.L_40f13a:

            mov RCX,QWORD PTR [RSP+248]
            movsxd RDX,EAX
            movzx EDX,BYTE PTR [RCX+RDX*1]
            sub R10D,EDX
            mov DWORD PTR [RSP+312],R10D
            jmp .L_40ebf0
.L_40f159:

            mov R10D,DWORD PTR [RSP+312]
            cmp DWORD PTR [RSP+244],R10D
            jg .L_40f560
.L_40f16f:

            movsxd RAX,DWORD PTR [RSP+244]
            mov RSI,QWORD PTR [RSP+304]
            lea RDX,QWORD PTR [RIP+.L_410960]
            mov ECX,R10D
            sub ECX,EAX
            shr RSI,CL
            and ESI,DWORD PTR [RDX+RAX*4]
            mov ECX,DWORD PTR [R9+324]
            mov RDX,QWORD PTR [R9+344]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R9+240]
            jl .L_40f1c9

            mov RDI,QWORD PTR [RSP+272]
            mov EDX,EAX
            mov QWORD PTR [RSP+32],R9
            call .L_40bd60

            mov R9,QWORD PTR [RSP+32]
.L_40f1c9:

            mov RCX,QWORD PTR [RSP+256]
            movsxd RDX,EAX
            movzx EDX,BYTE PTR [RCX+RDX*1]
            sub R10D,EDX
            mov DWORD PTR [RSP+312],R10D
.L_40f1e3:

            lea R8D,DWORD PTR [RAX+9]
            jmp .L_40ea4d
.L_40f1ec:

            cmp CL,67
            jne .L_40f206

            cmp RSI,1
            jle .L_40e000

            cmp BYTE PTR [R14+1],75
            je .L_40e000
.L_40f206:

            lea RDX,QWORD PTR [RIP+.L_4106b0]
            mov ESI,4294967295
.L_40f212:

            mov RDI,QWORD PTR [RSP+88]
            xor EAX,EAX
            call .L_43f5d0
.L_40f21e:

            mov RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RAX],-30
            xor EAX,EAX
            jmp .L_40ddfb
.L_40f234:

            mov R15D,DWORD PTR [RSP+100]
            mov EBX,21
            jmp .L_40e9f2
.L_40f243:

            mov R15D,DWORD PTR [RSP+208]
            mov EAX,DWORD PTR [RSP+100]
            mov EBX,21
            mov DWORD PTR [RSP+208],EAX
            mov DWORD PTR [RSP+100],R15D
            jmp .L_40e9f2
.L_40f265:

            mov R15D,DWORD PTR [RSP+116]
            mov EAX,DWORD PTR [RSP+100]
            mov EBX,21
            mov DWORD PTR [RSP+116],EAX
            mov DWORD PTR [RSP+100],R15D
            jmp .L_40e9f2
.L_40f281:

            mov R12,R15
            mov R8D,DWORD PTR [RSP+40]
            mov R15D,DWORD PTR [RSP+32]
.L_40f28e:

            mov EAX,DWORD PTR [RSP+128]
            mov DWORD PTR [R12],2
            movdqa XMM0,XMMWORD PTR [RSP+304]
            mov RDX,QWORD PTR [RSP+24]
            mov QWORD PTR [R12+56],0
            mov DWORD PTR [R12+84],EAX
            mov EAX,DWORD PTR [RSP+112]
            movups XMMWORD PTR [R12+104],XMM0
            mov DWORD PTR [R12+32],R8D
            mov DWORD PTR [R12+28],R15D
            mov DWORD PTR [R12+88],EAX
            mov EAX,DWORD PTR [RSP+100]
            mov DWORD PTR [R12+24],R11D
            mov DWORD PTR [RSP+212],1
            mov DWORD PTR [R12+64],EAX
            mov EAX,DWORD PTR [RSP+116]
            mov DWORD PTR [R12+68],EAX
            mov EAX,DWORD PTR [RSP+208]
            mov DWORD PTR [R12+72],EAX
            mov RAX,QWORD PTR [RSP+64]
            sub RAX,RBP
            mov QWORD PTR [RDX+424],RAX
            jmp .L_40f00d
.L_40f314:

            mov QWORD PTR [RSP+8],RBX
            mov R12,R15
            mov R8D,DWORD PTR [RSP+40]
            mov R15D,DWORD PTR [RSP+32]
            mov EBX,DWORD PTR [RSP+56]
            mov RBP,QWORD PTR [RSP+64]
            jmp .L_40ef8e
.L_40f334:

            cmp R13D,1
            je .L_40f206

            cmp CL,67
            jne .L_40f206

            cmp BYTE PTR [R14+1],75
            jne .L_40f206

            lea RCX,QWORD PTR [R14+RAX*1]
            sub EDX,R13D
            mov QWORD PTR [RBX+288],RAX
            mov DWORD PTR [RBX+280],EDX
            xor R13D,R13D
            mov QWORD PTR [RBX+272],RCX
.L_40f370:

            lea RDI,QWORD PTR [RBX+272]
            xor ESI,ESI
            call inflate@PLT

            test EAX,EAX
            je .L_40f532

            cmp EAX,1
            jne .L_40f50c

            mov RSI,QWORD PTR [RBX+288]
            mov RDI,QWORD PTR [RSP+88]
            mov QWORD PTR [R12+56],R14
            mov QWORD PTR [R12+16],RSI
            call .L_40c1b0

            test RAX,RAX
            js .L_40f21e

            movzx R8D,WORD PTR [R12+8]
            mov RAX,QWORD PTR [RBX+312]
.L_40f3c0:

            cmp AX,R8W
            mov EBP,EAX
            jb .L_40fe0d

            movzx EAX,WORD PTR [R12+6]
            test AX,AX
            jne .L_40fd75
.L_40f3db:

            mov RAX,QWORD PTR [RBX+40]
            movzx EDX,WORD PTR [RAX+4]
            cmp DWORD PTR [RAX+88],EDX
            jl .L_40f4dc
.L_40f3ec:

            movzx EAX,WORD PTR [R12+14]
            movzx EDX,BP
            mov RCX,RAX
            add RAX,QWORD PTR [RBX+160]
            sub EDX,ECX
            mov RCX,QWORD PTR [RSP+192]
            movsxd RDX,EDX
            mov QWORD PTR [RCX],RDX
            mov WORD PTR [R12+12],BP
            jmp .L_40ddfb
.L_40f41a:

            mov DWORD PTR [R12],11
            mov EBX,11
            jmp .L_40dd9a
.L_40f42c:

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40c420

            test EAX,EAX
            mov R8D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [RSP+312]
            jne .L_40eac1

            cmp EBX,EAX
            jle .L_40eac1

            mov RDI,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RDI
            mov R12,R9
            je .L_40f63a
.L_40f487:

            mov EBX,20
            jmp .L_40ef8e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f498:

            mov EDX,EAX
            jmp .L_40e552
.L_40f49f:

            movsxd RAX,DWORD PTR [R12+80]
            cmp EAX,3
            jg .L_40e4b7

            cmp BYTE PTR [R12+117],0
            je .L_40f498

            movzx ECX,BYTE PTR [R12+116]
            lea EDX,DWORD PTR [RAX+1]
            cmp EDX,4
            mov DWORD PTR [R12+80],EDX
            mov BYTE PTR [R12+RAX*1+76],CL
            mov BYTE PTR [R12+117],0
            jne .L_40e552

            jmp .L_40e4b7
.L_40f4dc:

            lea R13,QWORD PTR [RBX+272]
            mov RDI,R13
            call inflateReset@PLT

            test EAX,EAX
            jne .L_40f50c

            movzx EDX,WORD PTR [R12+8]
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,R13
            call inflateSetDictionary@PLT

            test EAX,EAX
            je .L_40f3ec
.L_40f50c:

            cmp EAX,-4
            jne .L_40f860

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_410700]
            mov ESI,12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_40f21e
.L_40f532:

            mov RSI,QWORD PTR [RBX+288]
            mov RDI,R15
            mov QWORD PTR [R12+56],R14
            mov QWORD PTR [R12+16],RSI
            call .L_40c1b0

            test RAX,RAX
            jns .L_40e023

            jmp .L_40f21e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f560:

            mov RDX,QWORD PTR [RSP+152]
            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R8D
            call .L_40c420

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+312]
            mov R8D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            jne .L_40f16f

            movsxd RAX,DWORD PTR [RSP+244]
            cmp EAX,R10D
            jle .L_40f16f

            mov RDI,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RDI
            jne .L_40fe4d

            mov RSI,QWORD PTR [RSP+304]
            mov ECX,EAX
            lea RDX,QWORD PTR [RIP+.L_410960]
            sub ECX,R10D
            shl RSI,CL
            and ESI,DWORD PTR [RDX+RAX*4]
            mov ECX,DWORD PTR [R9+324]
            mov RDX,QWORD PTR [R9+344]
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            cmp EAX,DWORD PTR [R9+240]
            jl .L_40f614

            mov RDI,QWORD PTR [RSP+272]
            mov EDX,EAX
            mov QWORD PTR [RSP+32],R9
            call .L_40bd60

            mov R9,QWORD PTR [RSP+32]
.L_40f614:

            mov RCX,QWORD PTR [RSP+256]
            movsxd RDX,EAX
            movzx EDX,BYTE PTR [RCX+RDX*1]
            sub R10D,EDX
            test R10D,R10D
            mov DWORD PTR [RSP+312],R10D
            jns .L_40f1e3
.L_40f637:

            mov R12,R9
.L_40f63a:

            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [R12+604],4294967271
            mov DWORD PTR [RSP+212],4294967271
            mov RAX,QWORD PTR [RAX+424]
            jmp .L_40f00d
.L_40f662:

            mov EAX,DWORD PTR [R12+76]
            test EAX,EAX
            mov DWORD PTR [R12+64],EAX
            js .L_40f9fe

            mov DWORD PTR [R12],6
            jmp .L_40e4e8
.L_40f681:

            mov RAX,QWORD PTR [RBP+104]
            movzx ECX,BYTE PTR [RBP+116]
            add EDX,16
            shl RAX,16
            or RAX,RCX
            movzx ECX,BYTE PTR [RSI]
            shl ECX,8
            movsxd RCX,ECX
            or RAX,RCX
            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RBP+104],RAX
            lea RAX,QWORD PTR [RSI+1]
            mov QWORD PTR [RCX+392],RAX
            mov RAX,QWORD PTR [RSP+80]
            sub RAX,1
            mov QWORD PTR [RCX+400],RAX
            mov DWORD PTR [RBP+112],EDX
            mov BYTE PTR [RBP+117],0
            jmp .L_40dd6c
.L_40f6cf:

            cmp ESI,15
            jle .L_40f98e
.L_40f6d8:

            sub ESI,16
            mov DWORD PTR [R12+112],ESI
            jmp .L_40e797
.L_40f6e5:

            mov RDX,QWORD PTR [RSP+192]
            cdqe 
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
            jmp .L_40ddfb
.L_40f6f9:

            test R12,R12
            movzx R13D,WORD PTR [RDX+8]
            je .L_40f9c6
.L_40f707:

            lea EAX,DWORD PTR [R13-15]
            cmp EAX,6
            ja .L_40fe3c

            lea RCX,QWORD PTR [RIP+.L_410a00]
            cdqe 
            mov RDI,QWORD PTR [R12+16]
            mov EDX,DWORD PTR [R12+4]
            mov DWORD PTR [R12+604],4294967266
            mov EBP,DWORD PTR [RCX+RAX*4]
            mov ECX,R13D
            mov EAX,1
            shl EAX,CL
            test RDI,RDI
            lea ECX,DWORD PTR [RAX-1]
            mov DWORD PTR [R12+4],EAX
            mov DWORD PTR [R12+8],ECX
            je .L_40f756

            cmp EDX,EAX
            je .L_40f7a4
.L_40f756:

            call free@PLT

            movsxd RDI,DWORD PTR [R12+4]
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+16],RAX
            je .L_40f9ed

            mov RDI,QWORD PTR [R12+96]
            call free@PLT

            movsxd RDI,EBP
            shl RDI,3
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+96],RAX
            je .L_40f9ed

            lea RDI,QWORD PTR [R12+360]
            call .L_40bdc0
.L_40f7a4:

            lea RSI,QWORD PTR [RSP+320]
            xor ECX,ECX
            mov EDX,1
            nop
            nop
            nop
            nop
            nop
.L_40f7b8:

            mov EAX,EDX
            shl EAX,CL
            mov DWORD PTR [RSI+RCX*4],EAX
            add RCX,1
            cmp RCX,18
            jne .L_40f7b8

            test EBP,EBP
            jle .L_40fa1e

            lea R8D,DWORD PTR [RBP-1]
            mov RDI,QWORD PTR [R12+96]
            xor ESI,ESI
            xor EDX,EDX
            xor EAX,EAX
            add R8,1
            jmp .L_40f80d
.L_40f7e6:

            movsxd RCX,EAX
            add EDX,DWORD PTR [RSP+RCX*4+320]
            cmp EAX,16
            jle .L_40fde3
.L_40f7f9:

            mov DWORD PTR [RDI+RSI*8],EDX
            mov DWORD PTR [RDI+RSI*8+4],EAX
            add RSI,1
            cmp R8,RSI
            je .L_40fa1e
.L_40f80d:

            test EAX,EAX
            mov ECX,ESI
            jne .L_40f7e6
.L_40f813:

            test ECX,ECX
            mov EDX,ECX
            mov EAX,4294967294
            je .L_40fc40
.L_40f822:

            add EAX,1
            sar EDX,1
            jne .L_40f822

            test EAX,EAX
            cmovs EAX,EDX
            mov EDX,ECX
            jmp .L_40f7f9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f838:

            mov EBX,DWORD PTR [R12]
            jmp .L_40dd90
.L_40f841:

            mov EAX,DWORD PTR [R12+76]
            test EAX,EAX
            mov DWORD PTR [R12+68],EAX
            js .L_40f9fe

            mov DWORD PTR [R12],7
            jmp .L_40e4e8
.L_40f860:

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_410728]
            mov ECX,EAX
            mov ESI,4294967295
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_40f21e
.L_40f87f:

            call inflateReset@PLT

            jmp .L_40df02
.L_40f889:

            mov QWORD PTR [RAX+168],32768
            mov EDI,32768
            mov RBX,RAX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+160],RAX
            jne .L_40db98
.L_40f8b1:

            lea RDX,QWORD PTR [RIP+.L_410870]
            mov ESI,12
            jmp .L_40f212
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f8c8:

            mov QWORD PTR [RBX+168],32768
            mov EDI,32768
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+160],RAX
            jne .L_40de74

            jmp .L_40f8b1
          .byte 0x90
.L_40f8f0:

            mov EAX,DWORD PTR [R12+120]
            lea EAX,DWORD PTR [RAX+RAX*2]
            cmp DWORD PTR [R12+112],EAX
            jge .L_40e087

            mov DWORD PTR [R12],10
.L_40f90b:

            mov RAX,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+80]
            mov RSI,RCX
            sub RSI,QWORD PTR [RAX+400]
            add RSI,QWORD PTR [RAX+408]
            cmp QWORD PTR [RSP+176],RCX
            jne .L_40e29c
.L_40f934:

            mov R10,R12
.L_40f937:

            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [R10+604],4294967271
            mov DWORD PTR [RSP+212],4294967271
            mov QWORD PTR [RAX+408],RSI
.L_40f959:

            mov ECX,DWORD PTR [RSP+212]
            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_4108a8]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RAX],-30
            xor EAX,EAX
            jmp .L_40ddfb
.L_40f98e:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40c420

            test EAX,EAX
            mov ESI,DWORD PTR [R12+112]
            jne .L_40f6d8

            cmp ESI,15
            jg .L_40f6d8

            mov DWORD PTR [R12],4
            jmp .L_40f90b
.L_40f9c6:

            mov ESI,608
            mov EDI,1
            call calloc@PLT

            mov R12,RAX
            mov RAX,QWORD PTR [RSP+24]
            test R12,R12
            mov QWORD PTR [RAX+440],R12
            jne .L_40f707
.L_40f9ed:

            lea RDX,QWORD PTR [RIP+.L_410750]
            mov ESI,4294967295
            jmp .L_40f212
.L_40f9fe:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+80]
            mov R10,R12
            sub RSI,QWORD PTR [RAX+400]
            add RSI,QWORD PTR [RAX+408]
            jmp .L_40f937
.L_40fa1e:

            movabs RAX,4294967297
            lea RDI,QWORD PTR [R12+120]
            mov DWORD PTR [R12+24],0
            mov DWORD PTR [R12],0
            mov QWORD PTR [R12+104],0
            mov EDX,8
            mov DWORD PTR [R12+112],0
            mov QWORD PTR [R12+64],RAX
            mov ESI,8
            mov DWORD PTR [R12+72],1
            call .L_40c0e0

            test EAX,EAX
            jne .L_40f9ed

            lea RDI,QWORD PTR [R12+480]
            mov EDX,10
            mov ESI,20
            call .L_40c0e0

            test EAX,EAX
            jne .L_40f9ed

            lea ESI,DWORD PTR [RBP*8+256]
            lea RDI,QWORD PTR [R12+360]
            mov EDX,16
            movsxd RSI,ESI
            call .L_40c0e0

            test EAX,EAX
            jne .L_40f9ed

            lea RDI,QWORD PTR [R12+240]
            mov EDX,16
            mov ESI,249
            call .L_40c0e0

            test EAX,EAX
            jne .L_40f9ed

            mov RDI,QWORD PTR [RSP+24]
            mov DWORD PTR [R12+604],0
            mov RAX,QWORD PTR [RDI+40]
            mov BYTE PTR [RAX+92],1
            mov RAX,QWORD PTR [RSP+144]
            mov R12,QWORD PTR [RDI+440]
            movzx EAX,WORD PTR [RAX+8]
            jmp .L_40dbcb
.L_40fb08:

            lea RDX,QWORD PTR [RIP+.L_410890]
            mov ESI,84
            jmp .L_40f212
.L_40fb19:

            mov RAX,QWORD PTR [RSP+144]
            mov EBX,EDX
            movzx EAX,WORD PTR [RAX+6]
            test AX,AX
            je .L_40fb77

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RSP+304]
            movzx ESI,AX
            call .L_4049e0

            cmp QWORD PTR [RSP+304],0
            jle .L_40fcc0

            mov RDX,QWORD PTR [RSP+144]
            mov RDI,QWORD PTR [RSP+88]
            movzx ESI,WORD PTR [RDX+6]
            mov QWORD PTR [RDX+56],RAX
            mov QWORD PTR [RDX+16],RSI
            call .L_40c1b0

            test RAX,RAX
            js .L_40f21e
.L_40fb77:

            mov RSI,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+144]
            mov R14,QWORD PTR [RSI+440]
            movzx EAX,WORD PTR [RAX+8]
            mov R12,QWORD PTR [RSI+160]
            cmp BYTE PTR [R14+40],0
            je .L_40fba7

            cmp RAX,10
            ja .L_40fcd1
.L_40fba7:

            mov RDI,QWORD PTR [RSP+144]
            movzx EDX,BX
            movzx EAX,WORD PTR [RDI+14]
            mov RCX,RAX
            add RAX,R12
            sub EDX,ECX
            mov RCX,QWORD PTR [RSP+192]
            movsxd RDX,EDX
            mov QWORD PTR [RCX],RDX
            mov WORD PTR [RDI+12],BX
            jmp .L_40ddfb
.L_40fbd5:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40c420

            test EAX,EAX
            mov EAX,DWORD PTR [R12+112]
            jne .L_40e64e

            cmp EAX,31
            jg .L_40e64e

            mov DWORD PTR [R12],1
            jmp .L_40e273
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40fc10:

            mov RDI,QWORD PTR [RSP+80]
            mov DWORD PTR [R12],9
            mov RCX,RDI
            sub RCX,RAX
            add RSI,RCX
            cmp QWORD PTR [RSP+176],RDI
            jne .L_40e62c

            jmp .L_40f934
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fc40:

            xor EAX,EAX
            mov EDX,ECX
            jmp .L_40f7f9
.L_40fc49:

            mov RSI,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+120]
            mov RDX,R11
            call .L_40c420

            test EAX,EAX
            mov EAX,DWORD PTR [R12+112]
            jne .L_40e71b

            test EAX,EAX
            jg .L_40e71b

            mov RAX,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RAX
            mov DWORD PTR [R12],0
            je .L_40fdea

            mov RDI,QWORD PTR [RSP+24]
            sub RAX,QWORD PTR [RDI+400]
            mov RSI,QWORD PTR [RDI+408]
            add RSI,RAX
            mov QWORD PTR [RDI+408],RSI
            jmp .L_40dc22
.L_40fcb0:

            mov R12,R9
            jmp .L_40ef8e
.L_40fcb8:

            mov R12,R9
            jmp .L_40f28e
.L_40fcc0:

            lea RDX,QWORD PTR [RIP+.L_4107f0]
            mov ESI,84
            jmp .L_40f212
.L_40fcd1:

            lea R13,QWORD PTR [R12+RAX*1-10]
            cmp R12,R13
            jae .L_40fba7

            mov RAX,QWORD PTR [RSI+40]
            mov RDI,R12
            mov EBP,DWORD PTR [RAX+88]
            sub EBP,1
            shl EBP,15
            jmp .L_40fd34
.L_40fcf1:

            mov RSI,RAX
            mov ECX,DWORD PTR [RAX+1]
            sub RSI,R12
            add ESI,EBP
            mov EDX,ESI
            neg EDX
            cmp ECX,EDX
            jl .L_40fd2b

            mov EDX,DWORD PTR [R14+36]
            cmp ECX,EDX
            jge .L_40fd2b

            mov EDI,ECX
            add EDX,ECX
            sub EDI,ESI
            test ECX,ECX
            cmovns EDX,EDI
            mov ECX,EDX
            mov BYTE PTR [RAX+1],DL
            mov BYTE PTR [RAX+2],DH
            shr ECX,16
            shr EDX,24
            mov BYTE PTR [RAX+3],CL
            mov BYTE PTR [RAX+4],DL
.L_40fd2b:

            lea RDI,QWORD PTR [RAX+5]
            cmp R13,RDI
            jbe .L_40fd49
.L_40fd34:

            mov RDX,R13
            mov ESI,232
            sub RDX,RDI
            call memchr@PLT

            test RAX,RAX
            jne .L_40fcf1
.L_40fd49:

            mov RAX,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RAX+160]
            jmp .L_40fba7
.L_40fd5a:

            mov QWORD PTR [RSP+8],RBX
            mov R12,R15
            mov R8D,DWORD PTR [RSP+40]
            mov R15D,DWORD PTR [RSP+32]
            mov EBX,DWORD PTR [RSP+56]
            jmp .L_40ef8e
.L_40fd75:

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RSP+304]
            movzx ESI,AX
            call .L_4049e0

            cmp QWORD PTR [RSP+304],0
            jle .L_40fcc0

            movzx ESI,WORD PTR [R12+6]
            mov RDI,QWORD PTR [RSP+88]
            mov QWORD PTR [R12+56],RAX
            mov QWORD PTR [R12+16],RSI
            call .L_40c1b0

            test RAX,RAX
            jns .L_40f3db

            jmp .L_40f21e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fdc8:

            mov RSI,QWORD PTR [RSP+80]
            sub RSI,RAX
            add RSI,QWORD PTR [RDI+408]
            mov QWORD PTR [RDI+408],RSI
            jmp .L_40dc22
.L_40fde3:

            mov ECX,EDX
            jmp .L_40f813
.L_40fdea:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+176]
            mov R10,R12
            sub RSI,QWORD PTR [RAX+400]
            add RSI,QWORD PTR [RAX+408]
            jmp .L_40f937
.L_40fe0d:

            mov RDI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_4106d8]
            movzx ECX,AX
            or ESI,4294967295
            xor EAX,EAX
            call .L_43f5d0

            mov RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RAX],-30
            xor EAX,EAX
            jmp .L_40ddfb
.L_40fe3c:

            mov DWORD PTR [R12+604],4294967271
            jmp .L_40f9ed
.L_40fe4d:

            mov R12,R9
            mov EBX,19
            jmp .L_40ef8e
.L_40fe5a:

            mov R12,R9
            jmp .L_40f487
.L_40fe62:

            mov RDX,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+176],RDX
            mov R12,R9
            jne .L_40f487

            jmp .L_40f63a
.L_40fe7d:

            call __stack_chk_fail@PLT
.L_40fe82:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40fe90:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,40
.L_40fea4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R13,QWORD PTR [RAX]
            call .L_40c1b0

            test RAX,RAX
            js .L_410027

            mov RBP,QWORD PTR [R13+56]
            je .L_40ff5e

            movzx ESI,WORD PTR [RBP+4]
            test SI,SI
            je .L_40ffdc

            lea R12,QWORD PTR [RSP+16]
            mov R15,RAX
.L_40feeb:

            movzx EAX,WORD PTR [RBP+10]
            movzx EDI,WORD PTR [RBP+12]
            cmp RAX,R15
            mov RCX,RAX
            jg .L_40ff70

            sub R15,RAX
            test DI,DI
            jne .L_410000

            mov RCX,QWORD PTR [R13+48]
            movzx ECX,WORD PTR [RCX+16]
            and ECX,4294967293
            cmp CX,-3
            jne .L_410000

            mov RDI,RBX
            call .L_404a30

            movzx EAX,WORD PTR [RBP+4]
            xor EDX,EDX
            mov RDI,RBX
            add QWORD PTR [R13+64],RAX
            xor EAX,EAX
            mov WORD PTR [RBP+10],DX
            mov WORD PTR [RBP+6],AX
            call .L_40bde0

            test EAX,EAX
            js .L_410076

            mov RBP,QWORD PTR [R13+56]
            cmp WORD PTR [RBP+8],0
            jne .L_40ffca

            mov RAX,QWORD PTR [R13+48]
            cmp WORD PTR [RAX+16],-3
            jb .L_40ffca
.L_40ff5e:

            mov RAX,R14
            jmp .L_41002e
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ff70:

            test DI,DI
            je .L_410050
.L_40ff79:

            mov QWORD PTR [RSP+8],0
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ff88:

            mov RSI,R12
            mov RDI,RBX
            call .L_40db00

            mov RSI,QWORD PTR [RSP+16]
            test RSI,RSI
            jle .L_410027

            cmp RSI,R15
            jle .L_40ffae

            mov QWORD PTR [RSP+16],R15
            mov RSI,R15
.L_40ffae:

            mov RDI,RBX
            call .L_40c1b0

            test RAX,RAX
            js .L_410027

            sub R15,QWORD PTR [RSP+16]
            test R15,R15
            jg .L_40ff88

            mov R15,QWORD PTR [RSP+8]
.L_40ffca:

            test R15,R15
            jle .L_40ff5e

            movzx ESI,WORD PTR [RBP+4]
            test SI,SI
            jne .L_40feeb
.L_40ffdc:

            lea RDX,QWORD PTR [RIP+.L_410805]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBX
            call .L_43f5d0

            mov RAX,-30
            jmp .L_41002e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410000:

            test RAX,RAX
            jne .L_41007f

            mov RDI,RBX
            call .L_40bde0

            test EAX,EAX
            js .L_410076

            mov RBP,QWORD PTR [R13+56]
            cmp WORD PTR [RBP+8],0
            jne .L_40ffca

            mov RAX,QWORD PTR [R13+48]
            cmp WORD PTR [RAX+16],-3
            jb .L_40ffca
.L_410027:

            mov RAX,-30
.L_41002e:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_41007a

            add RSP,40
.L_410042:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410050:

            mov RAX,QWORD PTR [R13+48]
            movzx EAX,WORD PTR [RAX+16]
            and EAX,4294967293
            cmp AX,-3
            jne .L_40ff79

            sub ECX,R15D
            add WORD PTR [RBP+14],R15W
            mov WORD PTR [RBP+10],CX
            jmp .L_40ff5e
.L_410076:

            cdqe 
            jmp .L_41002e
.L_41007a:

            call __stack_chk_fail@PLT
.L_41007f:

            mov QWORD PTR [RSP+8],R15
            mov R15,RAX
            jmp .L_40ff88
.L_41008c:

            nop
            nop
            nop
            nop
.L_410090:

            push RBP
            push RBX
            sub RSP,8
.L_410096:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov EAX,1
            cmp BYTE PTR [RBX+145],0
            jne .L_41011c

            cmp BYTE PTR [RBX+148],0
            je .L_410128

            mov RSI,QWORD PTR [RBX+16]
            mov RBP,RDI
            test RSI,RSI
            jne .L_410150

            cmp QWORD PTR [RBX+56],0
            je .L_410170
.L_4100d2:

            xor EAX,EAX
            cmp BYTE PTR [RBX+147],0
            jne .L_41011c

            mov RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_40fe90

            test RAX,RAX
            js .L_41017f

            mov RAX,QWORD PTR [RBX+40]
            cmp WORD PTR [RAX+6],0
            jne .L_41010e

            mov RAX,QWORD PTR [RBX+56]
            test RAX,RAX
            je .L_41010e

            mov QWORD PTR [RAX+16],0
.L_41010e:

            mov EAX,257
            mov WORD PTR [RBX+146],AX
            xor EAX,EAX
.L_41011c:

            add RSP,8
.L_410120:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410128:

            mov EDX,257
            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RBX+8],0
            add QWORD PTR [RBX+152],RAX
            mov WORD PTR [RBX+146],DX
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_410150:

            call .L_40fe90

            test EAX,EAX
            mov QWORD PTR [RBX+16],0
            jns .L_4100d2

            jmp .L_41011c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410170:

            call .L_40bde0

            test EAX,EAX
            jns .L_4100d2

            jmp .L_41011c
.L_41017f:

            mov EAX,4294967266
            jmp .L_41011c
.L_410186:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410190:

            push R14
            push R13
            mov R14,RDX
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDI
            mov R13,RCX
            sub RSP,16
.L_4101a8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX+48]
            cmp WORD PTR [RAX+16],-3
            jae .L_4103d0

            cmp BYTE PTR [RBX+148],0
            je .L_410248

            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            jne .L_41028f
.L_4101e7:

            test DWORD PTR [RBX+144],16776960
            je .L_4102b7
.L_4101f7:

            cmp BYTE PTR [RBX+147],0
            jne .L_410207

            mov BYTE PTR [RBX+147],1
.L_410207:

            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R13],RAX
            mov QWORD PTR [R14],0
            mov EAX,1
            mov QWORD PTR [R12],0
.L_410222:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_410414

            add RSP,16
.L_41023a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410248:

            mov RSI,QWORD PTR [RBX+152]
            test RSI,RSI
            je .L_41027b

            cmp QWORD PTR [RBX+56],0
            je .L_410360
.L_41025f:

            mov RDI,RBP
            call .L_40fe90

            test RAX,RAX
            js .L_41040a

            mov QWORD PTR [RBX+152],0
.L_41027b:

            mov RSI,QWORD PTR [RBX+16]
            mov BYTE PTR [RBX+148],1
            test RSI,RSI
            je .L_4101e7
.L_41028f:

            mov RDI,RBP
            call .L_40fe90

            test EAX,EAX
            mov QWORD PTR [RBX+16],0
            js .L_410222

            test DWORD PTR [RBX+144],16776960
            jne .L_4101f7
.L_4102b7:

            mov RAX,QWORD PTR [RBP+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+8],0
            jne .L_4102f0

            mov QWORD PTR [R12],0
            mov QWORD PTR [R14],0
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R13],RAX
            mov BYTE PTR [RBX+146],1
            xor EAX,EAX
            jmp .L_410222
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4102f0:

            mov RSI,RSP
            mov RDI,RBP
            call .L_40db00

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [R12],RAX
            cmp RDX,0
            jle .L_410380

            mov RAX,QWORD PTR [RBX+8]
            cmp RDX,RAX
            jle .L_410319

            mov QWORD PTR [RSP],RAX
            mov RDX,RAX
.L_410319:

            mov QWORD PTR [R14],RDX
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [R13],RAX
            add QWORD PTR [RBX],RDX
            sub QWORD PTR [RBX+8],RDX
            jne .L_410333

            mov BYTE PTR [RBX+146],1
.L_410333:

            mov RCX,QWORD PTR [RBX+40]
            xor EAX,EAX
            mov QWORD PTR [RBX+16],RDX
            cmp WORD PTR [RCX+6],0
            jne .L_410222

            mov RCX,QWORD PTR [RBX+56]
            cmp QWORD PTR [RCX+16],RDX
            jle .L_410222

            mov QWORD PTR [RCX+16],RDX
            jmp .L_410222
          .byte 0x90
.L_410360:

            call .L_40bde0

            test EAX,EAX
            js .L_410222

            mov RSI,QWORD PTR [RBX+152]
            jmp .L_41025f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410380:

            mov QWORD PTR [R12],0
            mov QWORD PTR [R14],0
            mov QWORD PTR [R13],0
            jne .L_4103a4

            mov RAX,QWORD PTR [RBX+56]
            cmp WORD PTR [RAX+8],0
            je .L_4103ab
.L_4103a4:

            mov EAX,EDX
            jmp .L_410222
.L_4103ab:

            lea RDX,QWORD PTR [RIP+.L_410805]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_410222
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4103d0:

            mov QWORD PTR [RSI],0
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RCX],0
            call .L_43f5b0

            lea RDX,QWORD PTR [RIP+.L_4107a0]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967271
            jmp .L_410222
.L_41040a:

            mov EAX,4294967266
            jmp .L_410222
.L_410414:

            call __stack_chk_fail@PLT
.L_410419:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410420:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4107d0]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_41043a:

            call .L_443f50

            cmp EAX,-30
            je .L_4104e6

            mov ESI,448
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4104ed

            lea RDI,QWORD PTR [RAX+120]
            mov ESI,256
            mov QWORD PTR [RAX+120],0
            mov QWORD PTR [RAX+128],0
            mov QWORD PTR [RAX+136],0
            call .L_434430

            lea RAX,QWORD PTR [RIP+.L_40c6d0]
            push 0
.L_410498:

            push 0
            lea R9,QWORD PTR [RIP+.L_40c9c0]
            lea R8,QWORD PTR [RIP+.L_40d600]
            lea RCX,QWORD PTR [RIP+.L_40c8a0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_410090]
            push 0
            lea RDX,QWORD PTR [RIP+.L_4108de]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_410190]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_4104e6

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_4104e6:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4104ed:

            lea RDX,QWORD PTR [RIP+.L_4108c6]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4104e6
.L_41050a:
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410510:
          .string "Invalid offset of CFDATA in folder(%d) %jd < %jd"
          .zero 7
.L_410548:
          .string "Can\'t allocate memory for CAB data"
          .zero 5
.L_410570:
          .string "Checksum error CFDATA[%d] %x:%x in %d bytes"
          .zero 4
.L_4105a0:
          .string "Invalid offset of CFFILE %jd < %jd"
          .zero 5
.L_4105c8:
          .string "Multivolume cabinet file is unsupported"
.L_4105f0:
          .string "Can\'t allocate memory for Pathname"
          .zero 5
.L_410618:
          .string "Pathname cannot be converted from %s to current locale."
.L_410650:
          .string "cab: hdrcharset option needs a character-set name"
          .zero 6
.L_410688:
          .string "Can\'t initialize deflate decompression."
.L_4106b0:
          .string "CFDATA incorrect(no MSZIP signature)"
          .zero 3
.L_4106d8:
          .string "Invalid uncompressed size (%d < %d)"
          .zero 4
.L_410700:
          .string "Out of memory for deflate decompression"
.L_410728:
          .string "Deflate decompression failed (%d)"
          .zero 6
.L_410750:
          .string "Can\'t initialize LZX decompression."
          .zero 4
.L_410778:
          .string "Unsupported CAB compression : %s"
          .zero 7
.L_4107a0:
          .string "Cannot restore this file split in multivolume."
          .zero 1
.L_4107d0:
          .string "archive_read_support_format_cab"
.L_4107f0:
          .string "Truncated CAB header"
.L_410805:
          .string "Invalid CFDATA"
.L_410814:
          .string "CAB"
.L_410818:
          .string "Couldn\'t find out CAB header"
.L_410835:
          .string "UNKNOWN"
.L_41083d:
          .string "Invalid CAB header"
.L_410850:
          .string "UTF-8"
.L_410856:
          .string "CAB %d.%d (%s)"
.L_410865:
          .string "hdrcharset"
.L_410870:

            outsd DX,DWORD PTR [RSI]
            and BYTE PTR [RBP+101],CH
            insd DWORD PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
            jb .L_4108f2
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x43
          .byte 0x41
          .byte 0x42
          .byte 0x20
          .byte 0x72
          .byte 0x65
          .byte 0x61
          .byte 0x64
          .byte 0x65
          .byte 0x72
          .byte 0x0
.L_410889:
          .string "1.2.11"
.L_410890:
          .string "Truncated CAB file data"
.L_4108a8:
          .string "LZX decompression failed (%d)"
.L_4108c6:
          .string "Can\'t allocate CAB data"
.L_4108de:
          .string "cab"
.L_4108e2:
          .string "NONE"
.L_4108e7:
          .string "MSZIP"
.L_4108ed:
          .byte 0x51
          .byte 0x75
          .byte 0x61
          .byte 0x6e
          .byte 0x74
.L_4108f2:

            jne .L_410961
          .zero 1
.L_4108f5:
          .string "LZX"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410900:
          .long .L_40e70e-.L_410900
          .long .L_40e636-.L_410900
          .long .L_40e7b2-.L_410900
          .long .L_40e73a-.L_410900
          .long .L_40e780-.L_410900
          .long .L_40e473-.L_410900
          .long .L_40e473-.L_410900
          .long .L_40e473-.L_410900
          .long .L_40e34c-.L_410900
          .long .L_40e5d8-.L_410900
          .long .L_40e05b-.L_410900
          .long .L_40e120-.L_410900
          .long .L_40e12c-.L_410900
          .long .L_40e1a1-.L_410900
          .long .L_40e1db-.L_410900
          .long .L_40e247-.L_410900
          .long .L_40e2c4-.L_410900
          .long .L_40e2fd-.L_410900
.L_410948:
          .long .L_40ed60-.L_410948
          .long .L_40ea34-.L_410948
          .long .L_40ea91-.L_410948
          .long .L_40ed40-.L_410948
          .long .L_40ec30-.L_410948
          .zero 4
.L_410960:
          .zero 1
.L_410961:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RBX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],CL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],BL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],BH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],BH
            add BYTE PTR [RAX],AL
            inc DWORD PTR [RAX]
            add BYTE PTR [RAX],AL
            inc DWORD PTR [RCX]
            add BYTE PTR [RAX],AL
            inc DWORD PTR [RBX]
            add BYTE PTR [RAX],AL
            inc DWORD PTR [RDI]
            add BYTE PTR [RAX],AL
            dec DWORD PTR [RDI]
            add BYTE PTR [RAX],AL
            call QWORD PTR [RDI]
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x7
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410a00:
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410a30:

            lea EAX,DWORD PTR [RSI-1]
            lea RSI,QWORD PTR [RDI+RAX*1+1]
            xor EAX,EAX
            jmp .L_410a59
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410a40:

            lea ECX,DWORD PTR [RDX-87]
.L_410a43:

            shl RAX,4
            add RDI,1
            mov RDX,RAX
            movsxd RAX,ECX
            or RAX,RDX
            cmp RSI,RDI
            je .L_410a90
.L_410a59:

            movsx EDX,BYTE PTR [RDI]
            lea ECX,DWORD PTR [RDX-97]
            cmp CL,5
            jbe .L_410a40

            lea ECX,DWORD PTR [RDX-65]
            cmp CL,5
            ja .L_410a78

            movsx ECX,DL
            sub ECX,55
            jmp .L_410a43
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410a78:

            lea ECX,DWORD PTR [RDX-48]
            cmp CL,9
            ja .L_410a90

            movsx ECX,DL
            sub ECX,48
            jmp .L_410a43
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410a90:

            ret 
.L_410a92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410aa0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_410aa7:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBP+16]
            test RAX,RAX
            je .L_410ae6

            nop
            nop
            nop
            nop
            nop
            nop
.L_410ac0:

            mov RDI,QWORD PTR [RAX+40]
            mov RBX,QWORD PTR [RAX]
            test RDI,RDI
            je .L_410ad1

            call free@PLT
.L_410ad1:

            mov RDI,QWORD PTR [RBP+16]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RBP+16],RBX
            mov RAX,RBX
            jne .L_410ac0
.L_410ae6:

            mov RDI,RBP
            call free@PLT

            mov RAX,QWORD PTR [R12+2472]
            mov QWORD PTR [RAX],0
            xor EAX,EAX
            pop RBX
.L_410b00:

            pop RBP
            pop R12
            ret 
.L_410b04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410b10:

            push RBP
            push RBX
            sub RSP,8
.L_410b16:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RBX,QWORD PTR [RBP+48]
            add RBX,QWORD PTR [RBP+24]
            add RBX,QWORD PTR [RBP+32]
            mov RSI,RBX
            call .L_404a30

            cmp RAX,RBX
            jne .L_410b60

            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+48],0
            xor EAX,EAX
            mov QWORD PTR [RBP+32],0
.L_410b53:

            add RSP,8
.L_410b57:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410b60:

            mov EAX,4294967266
            jmp .L_410b53
.L_410b67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410b70:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,24
.L_410b8a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+32]
            test RSI,RSI
            jne .L_410c60
.L_410bb1:

            cmp QWORD PTR [RBX+24],0
            jle .L_410c20

            mov RDX,RSP
            mov ESI,1
            mov RDI,RBP
            call .L_4049e0

            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            jle .L_410c78

            cmp QWORD PTR [RBX+24],RAX
            cmovle RAX,QWORD PTR [RBX+24]
            mov QWORD PTR [R12],RAX
            mov RDX,QWORD PTR [RBX+40]
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [R13],RDX
            add QWORD PTR [RBX+40],RAX
            sub QWORD PTR [RBX+24],RAX
            xor EAX,EAX
.L_410bfb:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_410c82

            add RSP,24
.L_410c0f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410c20:

            mov R15,QWORD PTR [RBX+48]
            mov RDI,RBP
            mov RSI,R15
            call .L_404a30

            cmp R15,RAX
            jne .L_410c78

            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [R14],0
            mov QWORD PTR [R12],0
            mov RAX,QWORD PTR [RBX+40]
            mov QWORD PTR [R13],RAX
            mov EAX,1
            jmp .L_410bfb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410c60:

            call .L_404a30

            mov QWORD PTR [RBX+32],0
            jmp .L_410bb1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410c78:

            mov EAX,4294967266
            jmp .L_410bfb
.L_410c82:

            call __stack_chk_fail@PLT
.L_410c87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410c90:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
.L_410c98:

            xor EDX,EDX
            mov ESI,6
            mov RBX,QWORD PTR [RAX]
            call .L_4049e0

            test RAX,RAX
            je .L_410da2

            cmp DWORD PTR [RAX],925906736
            je .L_410d20
.L_410cb8:

            cmp DWORD PTR [RAX],925906736
            je .L_410d40

            cmp DWORD PTR [RAX],925906736
            je .L_410d54
.L_410cd0:

            cmp DWORD PTR [RAX],925906736
            je .L_410d78
.L_410cdc:

            movzx EDX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RAX+1]
            mov ECX,EDX
            shl ECX,8
            add ECX,EAX
            cmp ECX,29127
            je .L_410d90

            shl EAX,8
            add EDX,EAX
            mov EAX,4294967276
            cmp EDX,29127
            jne .L_410d18

            lea RAX,QWORD PTR [RIP+.L_410db0]
            mov QWORD PTR [RBX+8],RAX
            mov EAX,16
.L_410d18:

            pop RBX
.L_410d19:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410d20:

            cmp WORD PTR [RAX+4],14128
            jne .L_410cb8
.L_410d28:

            lea RAX,QWORD PTR [RIP+.L_411a10]
            mov QWORD PTR [RBX+8],RAX
            mov EAX,48
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410d40:

            cmp WORD PTR [RAX+4],14130
            je .L_410d28

            cmp DWORD PTR [RAX],925906736
            jne .L_410cd0
.L_410d54:

            cmp WORD PTR [RAX+4],12592
            jne .L_410cd0
.L_410d60:

            lea RAX,QWORD PTR [RIP+.L_411110]
            mov QWORD PTR [RBX+8],RAX
            mov EAX,48
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410d78:

            cmp WORD PTR [RAX+4],12848
            jne .L_410cdc

            jmp .L_410d60
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410d90:

            lea RAX,QWORD PTR [RIP+.L_410f60]
            mov QWORD PTR [RBX+8],RAX
            mov EAX,16
            pop RBX
            ret 
.L_410da2:

            mov EAX,4294967295
            pop RBX
            ret 
.L_410da9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410db0:

            push R15
            lea RAX,QWORD PTR [RIP+.L_412238]
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov ESI,26
            xor EDX,EDX
            mov R13,RDI
            sub RSP,8
.L_410dd5:

            mov DWORD PTR [RDI+16],65538
            mov QWORD PTR [RDI+24],RAX
            mov R15,RCX
            mov R14,R8
            call .L_4049e0

            test RAX,RAX
            je .L_410f44

            movzx ESI,BYTE PTR [RAX+3]
            mov RBX,RAX
            movzx EAX,BYTE PTR [RAX+2]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_4463c0

            movzx ESI,BYTE PTR [RBX+5]
            movzx EAX,BYTE PTR [RBX+4]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_446050

            movzx ESI,BYTE PTR [RBX+7]
            movzx EAX,BYTE PTR [RBX+6]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            call .L_446590

            movzx ESI,BYTE PTR [RBX+9]
            movzx EAX,BYTE PTR [RBX+8]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_446950

            movzx ESI,BYTE PTR [RBX+11]
            movzx EAX,BYTE PTR [RBX+10]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_445fa0

            movzx ESI,BYTE PTR [RBX+13]
            movzx EAX,BYTE PTR [RBX+12]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            call .L_446630

            movzx ESI,BYTE PTR [RBX+15]
            movzx EAX,BYTE PTR [RBX+14]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_446710

            movzx ESI,BYTE PTR [RBX+16]
            xor EDX,EDX
            mov RDI,RBP
            shl ESI,16
            movsxd RAX,ESI
            movzx ESI,BYTE PTR [RBX+17]
            shl RSI,24
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+18]
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+19]
            shl EAX,8
            cdqe 
            add RSI,RAX
            call .L_4465a0

            movzx EAX,BYTE PTR [RBX+21]
            movzx EDX,BYTE PTR [RBX+20]
            mov RDI,RBP
            shl EAX,8
            add EAX,EDX
            movsxd RDX,EAX
            and EAX,1
            mov QWORD PTR [R15],RDX
            mov QWORD PTR [R14],RAX
            movzx ESI,BYTE PTR [RBX+22]
            shl ESI,16
            movsxd RAX,ESI
            movzx ESI,BYTE PTR [RBX+23]
            shl RSI,24
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+24]
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+25]
            shl EAX,8
            cdqe 
            add RSI,RAX
            mov QWORD PTR [R12+24],RSI
            call .L_446770

            mov RAX,QWORD PTR [R12+24]
            mov ESI,26
            mov RDI,R13
            and EAX,1
            mov QWORD PTR [R12+48],RAX
            call .L_404a30

            xor EAX,EAX
.L_410f35:

            add RSP,8
.L_410f39:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_410f44:

            lea RDX,QWORD PTR [RIP+.L_412318]
            xor EAX,EAX
            xor ESI,ESI
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_410f35
.L_410f5e:

            nop
            nop
.L_410f60:

            push R15
            lea RAX,QWORD PTR [RIP+.L_412254]
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov ESI,26
            xor EDX,EDX
            mov R13,RDI
            sub RSP,8
.L_410f85:

            mov DWORD PTR [RDI+16],65539
            mov QWORD PTR [RDI+24],RAX
            mov R15,RCX
            mov R14,R8
            call .L_4049e0

            test RAX,RAX
            je .L_4110f2

            movzx ESI,BYTE PTR [RAX+2]
            mov RBX,RAX
            movzx EAX,BYTE PTR [RAX+3]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_4463c0

            movzx ESI,BYTE PTR [RBX+4]
            movzx EAX,BYTE PTR [RBX+5]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_446050

            movzx ESI,BYTE PTR [RBX+6]
            movzx EAX,BYTE PTR [RBX+7]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            call .L_446590

            movzx ESI,BYTE PTR [RBX+8]
            movzx EAX,BYTE PTR [RBX+9]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_446950

            movzx ESI,BYTE PTR [RBX+10]
            movzx EAX,BYTE PTR [RBX+11]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_445fa0

            movzx ESI,BYTE PTR [RBX+12]
            movzx EAX,BYTE PTR [RBX+13]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            call .L_446630

            movzx ESI,BYTE PTR [RBX+14]
            movzx EAX,BYTE PTR [RBX+15]
            mov RDI,RBP
            shl ESI,8
            add ESI,EAX
            movsxd RSI,ESI
            call .L_446710

            movzx EAX,BYTE PTR [RBX+17]
            movzx ESI,BYTE PTR [RBX+16]
            xor EDX,EDX
            mov RDI,RBP
            shl EAX,16
            shl RSI,24
            cdqe 
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+18]
            shl EAX,8
            cdqe 
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+19]
            add RSI,RAX
            call .L_4465a0

            movzx EAX,BYTE PTR [RBX+20]
            movzx EDX,BYTE PTR [RBX+21]
            mov RDI,RBP
            shl EAX,8
            add EAX,EDX
            movsxd RDX,EAX
            and EAX,1
            mov QWORD PTR [R15],RDX
            mov QWORD PTR [R14],RAX
            movzx ESI,BYTE PTR [RBX+22]
            movzx EAX,BYTE PTR [RBX+23]
            shl RSI,24
            shl EAX,16
            cdqe 
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+24]
            shl EAX,8
            cdqe 
            add RSI,RAX
            movzx EAX,BYTE PTR [RBX+25]
            add RSI,RAX
            mov QWORD PTR [R12+24],RSI
            call .L_446770

            mov RAX,QWORD PTR [R12+24]
            mov ESI,26
            mov RDI,R13
            and EAX,1
            mov QWORD PTR [R12+48],RAX
            call .L_404a30

            xor EAX,EAX
.L_4110e3:

            add RSP,8
.L_4110e7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4110f2:

            lea RDX,QWORD PTR [RIP+.L_412318]
            xor EAX,EAX
            xor ESI,ESI
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4110e3
.L_41110c:

            nop
            nop
            nop
            nop
.L_411110:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            xor EBP,EBP
            mov RBX,RDI
            sub RSP,40
.L_411129:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea R12,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RCX
            mov QWORD PTR [RSP+8],R8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411150:

            mov RDX,R12
            mov ESI,110
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_411439

            mov R9,QWORD PTR [RSP+16]
            add R9,RAX
            cmp DWORD PTR [RAX],925906736
            je .L_4113e8
.L_41117d:

            mov RSI,RAX
.L_411180:

            lea R8,QWORD PTR [RSI+110]
            cmp R9,R8
            jb .L_4111ae
.L_411189:

            movzx EDX,BYTE PTR [RSI+5]
            cmp DL,48
            je .L_4111d0

            jl .L_4111c8

            cmp DL,50
            jg .L_4111c8

            cmp DWORD PTR [RSI],925906736
            je .L_4111e0
.L_4111a1:

            add RSI,2
            lea R8,QWORD PTR [RSI+110]
            cmp R9,R8
            jae .L_411189
.L_4111ae:

            sub RSI,RAX
            mov RDI,RBX
            mov R15,RSI
            add RBP,R15
            call .L_404a30

            jmp .L_411150
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4111c8:

            add RSI,6
            jmp .L_411180
          .byte 0x66
          .byte 0x90
.L_4111d0:

            add RSI,1
            jmp .L_411180
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4111e0:

            cmp BYTE PTR [RSI+4],48
            jne .L_4111a1

            mov RCX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4111f0:

            movzx EDX,BYTE PTR [RCX]
            lea EDI,DWORD PTR [RDX-48]
            cmp DIL,9
            jbe .L_411207

            and EDX,4294967263
            sub EDX,65
            cmp DL,5
            ja .L_4111a1
.L_411207:

            add RCX,1
            cmp RCX,R8
            jne .L_4111f0

            sub RSI,RAX
            mov RDI,RBX
            mov R12,RSI
            call .L_404a30

            mov RCX,R12
            add RCX,RBP
            jne .L_41148f
.L_41122a:

            xor R12D,R12D
.L_41122d:

            xor EDX,EDX
            mov ESI,110
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov RBP,RAX
            je .L_411439

            cmp DWORD PTR [RAX],925906736
            je .L_411444
.L_411254:

            cmp DWORD PTR [RBP],925906736
            je .L_411467
.L_411261:

            lea RDI,QWORD PTR [RBP+62]
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov RSI,RAX
            call .L_4463f0

            lea RDI,QWORD PTR [RBP+70]
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov RSI,RAX
            call .L_446420

            lea RDI,QWORD PTR [RBP+6]
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov RSI,RAX
            call .L_446050

            lea RDI,QWORD PTR [RBP+14]
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov ESI,EAX
            call .L_446590

            lea RDI,QWORD PTR [RBP+22]
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov RSI,RAX
            call .L_446950

            lea RDI,QWORD PTR [RBP+30]
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov RSI,RAX
            call .L_445fa0

            lea RDI,QWORD PTR [RBP+38]
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov ESI,EAX
            call .L_446630

            lea RDI,QWORD PTR [RBP+78]
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov RSI,RAX
            call .L_446730

            lea RDI,QWORD PTR [RBP+86]
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov RSI,RAX
            call .L_446750

            lea RDI,QWORD PTR [RBP+46]
            mov ESI,8
            call .L_410a30

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R13
            call .L_4465a0

            lea RDI,QWORD PTR [RBP+94]
            mov ESI,8
            call .L_410a30

            mov RSI,QWORD PTR [RSP]
            mov EDX,2
            lea RDI,QWORD PTR [RBP+54]
            sub RDX,RAX
            mov QWORD PTR [RSI],RAX
            mov RSI,QWORD PTR [RSP+8]
            mov RAX,RDX
            and EAX,3
            mov QWORD PTR [RSI],RAX
            mov ESI,8
            call .L_410a30

            mov RDI,R13
            mov RSI,RAX
            mov QWORD PTR [R14+24],RAX
            call .L_446770

            mov RAX,QWORD PTR [R14+24]
            mov ESI,110
            mov RDI,RBX
            neg RAX
            and EAX,3
            mov QWORD PTR [R14+48],RAX
            call .L_404a30
.L_4113be:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_41148a

            add RSP,40
.L_4113d9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4113e8:

            cmp BYTE PTR [RAX+4],48
            jne .L_41117d

            movzx ESI,BYTE PTR [RAX+5]
            lea EDX,DWORD PTR [RSI-49]
            mov RSI,RAX
            cmp DL,1
            ja .L_411180

            lea RDI,QWORD PTR [RAX+110]
            mov RCX,RAX
            jmp .L_41141d
          .byte 0x66
          .byte 0x90
.L_411410:

            add RCX,1
            cmp RCX,RDI
            je .L_41122a
.L_41141d:

            movzx EDX,BYTE PTR [RCX]
            lea ESI,DWORD PTR [RDX-48]
            cmp SIL,9
            jbe .L_411410

            and EDX,4294967263
            sub EDX,65
            cmp DL,5
            jbe .L_411410

            jmp .L_41117d
.L_411439:

            mov R12D,4294967266
            jmp .L_4113be
.L_411444:

            cmp WORD PTR [RAX+4],12592
            jne .L_411254

            lea RAX,QWORD PTR [RIP+.L_412273]
            mov DWORD PTR [RBX+16],65540
            mov QWORD PTR [RBX+24],RAX
            jmp .L_411261
.L_411467:

            cmp WORD PTR [RBP+4],12848
            jne .L_411261

            lea RAX,QWORD PTR [RIP+.L_412291]
            mov DWORD PTR [RBX+16],65541
            mov QWORD PTR [RBX+24],RAX
            jmp .L_411261
.L_41148a:

            call __stack_chk_fail@PLT
.L_41148f:

            lea RDX,QWORD PTR [RIP+.L_412348]
            xor ESI,ESI
            mov RDI,RBX
            xor EAX,EAX
            mov R12D,4294967276
            call .L_43f5d0

            jmp .L_41122d
.L_4114ad:

            nop
            nop
            nop
.L_4114b0:

            xor EAX,EAX
            cmp RSI,115
            jbe .L_4114be

            cmp BYTE PTR [RDI+30],109
            je .L_4114c0
.L_4114be:

            ret 
.L_4114c0:

            cmp BYTE PTR [RDI+85],110
            jne .L_4114be

            cmp BYTE PTR [RDI+98],115
            jne .L_4114be

            cmp BYTE PTR [RDI+115],58
            jne .L_4114be

            lea RDX,QWORD PTR [RDI+6]
            lea RSI,QWORD PTR [RDI+30]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4114e0:

            movzx EAX,BYTE PTR [RDX]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            jbe .L_4114f5

            and EAX,4294967263
            sub EAX,65
            cmp AL,5
            ja .L_41152e
.L_4114f5:

            add RDX,1
            cmp RDX,RSI
            jne .L_4114e0

            lea RDX,QWORD PTR [RDI+31]
            lea RSI,QWORD PTR [RDI+85]
            jmp .L_411519
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411510:

            add RDX,1
            cmp RDX,RSI
            je .L_411531
.L_411519:

            movzx EAX,BYTE PTR [RDX]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            jbe .L_411510

            and EAX,4294967263
            sub EAX,65
            cmp AL,5
            jbe .L_411510
.L_41152e:

            xor EAX,EAX
            ret 
.L_411531:

            lea RDX,QWORD PTR [RDI+86]
            lea RSI,QWORD PTR [RDI+98]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411540:

            movzx EAX,BYTE PTR [RDX]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            jbe .L_411555

            and EAX,4294967263
            sub EAX,65
            cmp AL,5
            ja .L_41152e
.L_411555:

            add RDX,1
            cmp RDX,RSI
            jne .L_411540

            lea RDX,QWORD PTR [RDI+99]
            add RDI,115
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411570:

            movzx EAX,BYTE PTR [RDX]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            jbe .L_411585

            and EAX,4294967263
            sub EAX,65
            cmp AL,5
            ja .L_41152e
.L_411585:

            add RDX,1
            cmp RDX,RDI
            jne .L_411570

            mov EAX,1
            ret 
.L_411594:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4115a0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            sub RSP,56
.L_4115b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RBX,QWORD PTR [RBP+56]
            test RBX,RBX
            je .L_4117a0
.L_4115db:

            lea RCX,QWORD PTR [RSP+24]
            lea R8,QWORD PTR [RSP+32]
            mov RDX,R13
            mov RSI,RBP
            mov RDI,R12
            call QWORD PTR [RBP+8]

            cmp EAX,-20
            mov R14D,EAX
            jge .L_411620
.L_4115f9:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_41194a

            add RSP,56
.L_411614:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_411620:

            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [RSP+24]
            xor EDX,EDX
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            mov R15,RAX
            je .L_4118c8

            mov RDX,QWORD PTR [RSP+24]
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,R13
            call .L_4466d0

            test EAX,EAX
            je .L_41168c

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_411929

            mov RDI,RBX
            mov R14D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_4123a0]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_41168c:

            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [RSP+24]
            mov RDI,R12
            mov QWORD PTR [RBP+40],0
            call .L_404a30

            mov RDI,R13
            call .L_444e70

            cmp EAX,40960
            je .L_4117b8
.L_4116b9:

            cmp QWORD PTR [RSP+24],11
            jne .L_4116f0

            lea RDI,QWORD PTR [RIP+.L_4122ac]
            mov ECX,11
            mov RSI,R15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4116f0

            mov RDI,R12
            mov R14D,1
            call .L_43f5b0

            jmp .L_4115f9
          .byte 0x66
          .byte 0x90
.L_4116f0:

            mov RDI,R13
            call .L_445440

            cmp EAX,1
            jbe .L_4115f9

            mov RDI,R13
            call .L_444d80

            mov RDI,R13
            mov R15,RAX
            call .L_4453f0

            mov RCX,QWORD PTR [RBP+16]
            mov RDX,RAX
            test RCX,RCX
            je .L_4118f0

            mov RBX,RCX
            jmp .L_41173c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411730:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_411848
.L_41173c:

            cmp R15,QWORD PTR [RBX+24]
            jne .L_411730

            cmp RDX,QWORD PTR [RBX+32]
            jne .L_411730

            mov RSI,QWORD PTR [RBX+40]
            mov RDI,R13
            call .L_446110

            mov EAX,DWORD PTR [RBX+16]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [RBX+16],EAX
            jg .L_4115f9

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            test RDX,RDX
            je .L_411777

            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [RBX]
.L_411777:

            test RAX,RAX
            je .L_411780

            mov QWORD PTR [RAX+8],RDX
.L_411780:

            cmp QWORD PTR [RBP+16],RBX
            je .L_411920
.L_41178a:

            mov RDI,QWORD PTR [RBX+40]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            jmp .L_4115f9
.L_4117a0:

            mov EAX,DWORD PTR [RBP+72]
            test EAX,EAX
            je .L_4118d8

            mov RBX,QWORD PTR [RBP+64]
            jmp .L_4115db
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4117b8:

            mov RSI,QWORD PTR [RBP+24]
            cmp RSI,1048576
            jg .L_411932

            xor EDX,EDX
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            mov R15,RAX
            je .L_4118c8

            mov RDX,QWORD PTR [RBP+24]
            mov RCX,RBX
            mov RSI,RAX
            mov RDI,R13
            call .L_446910

            test EAX,EAX
            je .L_41182a

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_41193e

            mov RDI,RBX
            mov R14D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_412448]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_41182a:

            mov RSI,QWORD PTR [RBP+24]
            mov RDI,R12
            call .L_404a30

            mov QWORD PTR [RBP+24],0
            jmp .L_4116b9

            nop
            nop
            nop
            nop
            nop
.L_411848:

            mov EDI,48
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov RDX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            je .L_4118b2

            mov QWORD PTR [RCX+8],RBX
.L_411870:

            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],0
            mov RDI,R13
            mov QWORD PTR [RBP+16],RBX
            mov QWORD PTR [RBX+32],RDX
            mov QWORD PTR [RBX+24],R15
            call .L_445440

            sub EAX,1
            mov RDI,R13
            mov DWORD PTR [RBX+16],EAX
            call .L_445450

            mov RDI,RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+40],RAX
            jne .L_4115f9
.L_4118b2:

            lea RDX,QWORD PTR [RIP+.L_412480]
.L_4118b9:

            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_4118c8:

            mov R14D,4294967266
            jmp .L_4115f9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4118d8:

            call .L_4378a0

            mov DWORD PTR [RBP+72],1
            mov RBX,RAX
            mov QWORD PTR [RBP+64],RAX
            jmp .L_4115db
.L_4118f0:

            mov EDI,48
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RAX
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov RDX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            jne .L_411870

            jmp .L_4118b2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411920:

            mov QWORD PTR [RBP+16],RAX
            jmp .L_41178a
.L_411929:

            lea RDX,QWORD PTR [RIP+.L_412378]
            jmp .L_4118b9
.L_411932:

            lea RDX,QWORD PTR [RIP+.L_4123d8]
            jmp .L_4118b9
.L_41193e:

            lea RDX,QWORD PTR [RIP+.L_412420]
            jmp .L_4118b9
.L_41194a:

            call __stack_chk_fail@PLT
.L_41194f:

            nop
.L_411950:

            push RBP
            push RBX
            mov RAX,RDI
            mov R8,RSI
            sub RSP,8
.L_41195c:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_4122b7]
            mov RBP,QWORD PTR [RCX]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_4119d0

            lea RDI,QWORD PTR [RIP+.L_4122c1]
            mov ECX,11
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_411a08

            test RDX,RDX
            mov RSI,RDX
            mov RDI,RAX
            je .L_4119e8

            cmp BYTE PTR [RDX],0
            je .L_4119e8

            xor EDX,EDX
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [RBP+56],RAX
            mov EAX,4294967266
            cmove EBX,EAX
.L_4119c5:

            add RSP,8
.L_4119c9:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_4119d0:

            xor EAX,EAX
            test RDX,RDX
            setne AL
            mov DWORD PTR [RBP+72],EAX
            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4119e8:

            lea RDX,QWORD PTR [RIP+.L_4124a8]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_43f5d0

            jmp .L_4119c5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411a08:

            mov EBX,4294967276
            jmp .L_4119c5
.L_411a0f:

            nop
.L_411a10:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            xor EBP,EBP
            mov RBX,RDI
            sub RSP,40
.L_411a29:

            mov DWORD PTR [RDI+16],65537
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_4122cc]
            lea R13,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RCX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RDI+24],RAX
.L_411a59:

            mov RDX,R13
            mov ESI,76
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R9,RAX
            je .L_412115

            cmp DWORD PTR [RAX],925906736
            mov RSI,QWORD PTR [RSP+16]
            lea R8,QWORD PTR [RAX+RSI*1]
            je .L_411f20
.L_411a8a:

            cmp DWORD PTR [R9],925906736
            je .L_411f6c
.L_411a97:

            mov R14,R9
            nop
            nop
            nop
            nop
            nop
            nop
.L_411aa0:

            lea RCX,QWORD PTR [R14+76]
            cmp R8,RCX
            jb .L_411ad9
.L_411aa9:

            movzx EAX,BYTE PTR [R14+5]
            cmp AL,48
            je .L_411b00

            cmp AL,55
            jne .L_411af0

            cmp DWORD PTR [R14],925906736
            je .L_411b10
.L_411abf:

            cmp DWORD PTR [R14],925906736
            je .L_411ef0
.L_411acc:

            add R14,2
            lea RCX,QWORD PTR [R14+76]
            cmp R8,RCX
            jae .L_411aa9
.L_411ad9:

            sub R14,R9
            mov RDI,RBX
            mov RSI,R14
            add RBP,R14
            call .L_404a30

            jmp .L_411a59
          .byte 0x90
.L_411af0:

            add R14,6
            jmp .L_411aa0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411b00:

            add R14,1
            jmp .L_411aa0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411b10:

            cmp WORD PTR [R14+4],14128
            jne .L_411abf

            movzx EAX,BYTE PTR [R14]
            lea RDX,QWORD PTR [R14+1]
            sub EAX,48
            cmp AL,7
            ja .L_411abf

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411b30:

            movzx EAX,BYTE PTR [RDX]
            sub EAX,48
            cmp AL,7
            ja .L_411abf

            add RDX,1
            cmp RDX,RCX
            jne .L_411b30
.L_411b43:

            mov R13,R14
            mov RDI,RBX
            sub R13,R9
            mov RSI,R13
            call .L_404a30

            cmp BYTE PTR [R14+4],50
            lea RCX,QWORD PTR [R13+RBP*1]
            jne .L_411b67

            mov DWORD PTR [RBX+16],65542
.L_411b67:

            test RCX,RCX
            jne .L_41212f
.L_411b70:

            xor R14D,R14D
.L_411b73:

            cmp DWORD PTR [RBX+16],65542
            je .L_411f93

            xor EDX,EDX
            mov ESI,76
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov RBP,RAX
            je .L_412115

            movzx EAX,BYTE PTR [RAX+6]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411bdf

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+7]
            lea RDI,QWORD PTR [RBP+12]
            sub ESI,48
            movsxd RSI,ESI
.L_411bba:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411bdf

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RDI,RCX
            jne .L_411bba
.L_411bdf:

            mov RDI,R12
            call .L_4463c0

            movzx EAX,BYTE PTR [RBP+12]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411c2b

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+13]
            lea RDI,QWORD PTR [RBP+18]
            sub ESI,48
            movsxd RSI,ESI
.L_411c06:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411c2b

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RDI,RCX
            jne .L_411c06
.L_411c2b:

            mov RDI,R12
            call .L_446050

            movzx EAX,BYTE PTR [RBP+18]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411c77

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+19]
            lea RDI,QWORD PTR [RBP+24]
            sub ESI,48
            movsxd RSI,ESI
.L_411c52:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411c77

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RDI,RCX
            jne .L_411c52
.L_411c77:

            mov RDI,R12
            call .L_446590

            movzx EAX,BYTE PTR [RBP+24]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411cc3

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+25]
            lea RDI,QWORD PTR [RBP+30]
            sub ESI,48
            movsxd RSI,ESI
.L_411c9e:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411cc3

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RDI,RCX
            jne .L_411c9e
.L_411cc3:

            mov RDI,R12
            call .L_446950

            movzx EAX,BYTE PTR [RBP+30]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411d0f

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+31]
            lea RDI,QWORD PTR [RBP+36]
            sub ESI,48
            movsxd RSI,ESI
.L_411cea:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411d0f

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RCX,RDI
            jne .L_411cea
.L_411d0f:

            mov RDI,R12
            call .L_445fa0

            movzx EAX,BYTE PTR [RBP+36]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411d5b

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+37]
            lea RDI,QWORD PTR [RBP+42]
            sub ESI,48
            movsxd RSI,ESI
.L_411d36:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411d5b

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RCX,RDI
            jne .L_411d36
.L_411d5b:

            mov RDI,R12
            call .L_446630

            movzx EAX,BYTE PTR [RBP+42]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411da7

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+43]
            lea RDI,QWORD PTR [RBP+48]
            sub ESI,48
            movsxd RSI,ESI
.L_411d82:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411da7

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RCX,RDI
            jne .L_411d82
.L_411da7:

            mov RDI,R12
            call .L_446710

            movzx EAX,BYTE PTR [RBP+48]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411df4

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+49]
            lea RDI,QWORD PTR [RBP+59]
            sub ESI,48
            movsxd RSI,ESI
            nop
            nop
.L_411dd0:

            movsx EDX,BYTE PTR [RCX]
            lea EAX,DWORD PTR [RDX-48]
            cmp AL,7
            ja .L_411df4

            lea RAX,QWORD PTR [RSI*8]
            sub EDX,48
            add RCX,1
            movsxd RSI,EDX
            or RSI,RAX
            cmp RCX,RDI
            jne .L_411dd0
.L_411df4:

            xor EDX,EDX
            mov RDI,R12
            call .L_4465a0

            movsx EAX,BYTE PTR [RBP+59]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_412128

            sub EAX,48
            lea RSI,QWORD PTR [RBP+60]
            lea RDI,QWORD PTR [RBP+65]
            movsxd RDX,EAX
.L_411e1c:

            movzx EAX,BYTE PTR [RSI]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,7
            ja .L_412120

            lea RCX,QWORD PTR [RDX*8]
            movsx EDX,AL
            add RSI,1
            sub EDX,48
            movsxd RAX,EDX
            or RAX,RCX
            cmp RSI,RDI
            mov RDX,RAX
            jne .L_411e1c
.L_411e4b:

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RAX],0
            movzx EAX,BYTE PTR [RBP+65]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411ea5

            movsx ESI,AL
            lea RCX,QWORD PTR [RBP+66]
            add RBP,76
            sub ESI,48
            movsxd RSI,ESI
            nop
            nop
            nop
.L_411e80:

            movsx EAX,BYTE PTR [RCX]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_411ea5

            lea RDX,QWORD PTR [RSI*8]
            sub EAX,48
            add RCX,1
            movsxd RSI,EAX
            or RSI,RDX
            cmp RCX,RBP
            jne .L_411e80
.L_411ea5:

            mov QWORD PTR [R15+24],RSI
            mov RDI,R12
            call .L_446770

            mov QWORD PTR [R15+48],0
            mov ESI,76
            mov RDI,RBX
            call .L_404a30
.L_411ec6:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_41214d

            add RSP,40
.L_411ee1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411ef0:

            cmp WORD PTR [R14+4],14130
            jne .L_411acc

            mov RSI,R8
            mov RDI,R14
            sub RSI,R14
            call .L_4114b0

            test EAX,EAX
            je .L_411acc

            jmp .L_411b43
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411f20:

            cmp WORD PTR [RAX+4],14128
            jne .L_411a8a

            movzx EAX,BYTE PTR [RAX]
            lea RDX,QWORD PTR [R9+1]
            lea RCX,QWORD PTR [R9+76]
            sub EAX,48
            cmp AL,7
            jbe .L_411f55

            jmp .L_411a8a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411f48:

            add RDX,1
            cmp RCX,RDX
            je .L_411b70
.L_411f55:

            movzx EAX,BYTE PTR [RDX]
            sub EAX,48
            cmp AL,7
            jbe .L_411f48

            cmp DWORD PTR [R9],925906736
            jne .L_411a97
.L_411f6c:

            cmp WORD PTR [R9+4],14130
            jne .L_411a97

            mov RDI,R9
            xor R14D,R14D
            call .L_4114b0

            test EAX,EAX
            je .L_411a97

            mov DWORD PTR [RBX+16],65542
.L_411f93:

            lea RAX,QWORD PTR [RIP+.L_4122e6]
            xor EDX,EDX
            mov ESI,116
            mov RDI,RBX
            mov QWORD PTR [RBX+24],RAX
            call .L_4049e0

            test RAX,RAX
            mov RBP,RAX
            je .L_412115

            lea RDI,QWORD PTR [RAX+6]
            mov ESI,8
            lea R13,QWORD PTR [RBP+37]
            call .L_410a30

            mov RDI,R12
            mov RSI,RAX
            call .L_4463c0

            lea RDI,QWORD PTR [RBP+14]
            mov ESI,16
            call .L_410a30

            mov RDI,R12
            mov RSI,RAX
            call .L_446050

            movsx EAX,BYTE PTR [RBP+31]
            xor ESI,ESI
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_412038

            sub EAX,48
            lea RSI,QWORD PTR [RBP+32]
            lea R13,QWORD PTR [RBP+37]
            movsxd RDX,EAX
.L_41200b:

            movzx EAX,BYTE PTR [RSI]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,7
            ja .L_412036

            lea RCX,QWORD PTR [RDX*8]
            movsx EDX,AL
            add RSI,1
            sub EDX,48
            movsxd RAX,EDX
            or RAX,RCX
            cmp R13,RSI
            mov RDX,RAX
            jne .L_41200b
.L_412036:

            mov ESI,EDX
.L_412038:

            mov RDI,R12
            call .L_446590

            mov RDI,R13
            mov ESI,8
            call .L_410a30

            mov RDI,R12
            mov RSI,RAX
            call .L_446950

            lea RDI,QWORD PTR [RBP+45]
            mov ESI,8
            call .L_410a30

            mov RDI,R12
            mov RSI,RAX
            call .L_445fa0

            lea RDI,QWORD PTR [RBP+53]
            mov ESI,8
            call .L_410a30

            mov RDI,R12
            mov ESI,EAX
            call .L_446630

            lea RDI,QWORD PTR [RBP+61]
            mov ESI,8
            call .L_410a30

            mov RDI,R12
            mov RSI,RAX
            call .L_446710

            lea RDI,QWORD PTR [RBP+69]
            mov ESI,16
            call .L_410a30

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R12
            call .L_4465a0

            lea RDI,QWORD PTR [RBP+86]
            mov ESI,4
            call .L_410a30

            mov RDI,QWORD PTR [RSP]
            mov ESI,16
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RBP+99]
            mov QWORD PTR [RAX],0
            call .L_410a30

            mov RDI,R12
            mov QWORD PTR [R15+24],RAX
            mov RSI,RAX
            call .L_446770

            mov QWORD PTR [R15+48],0
            mov ESI,116
            mov RDI,RBX
            call .L_404a30

            jmp .L_411ec6
.L_412115:

            mov R14D,4294967266
            jmp .L_411ec6
.L_412120:

            mov RAX,RDX
            jmp .L_411e4b
.L_412128:

            xor EAX,EAX
            jmp .L_411e4b
.L_41212f:

            lea RDX,QWORD PTR [RIP+.L_412348]
            xor ESI,ESI
            mov RDI,RBX
            xor EAX,EAX
            mov R14D,4294967276
            call .L_43f5d0

            jmp .L_411b73
.L_41214d:

            call __stack_chk_fail@PLT
.L_412152:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412160:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4124e0]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
            call .L_443f50

            cmp EAX,-30
            je .L_4121f8

            mov ESI,80
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4121ff

            mov DWORD PTR [RAX],320083222
            lea RAX,QWORD PTR [RIP+.L_410aa0]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_4115a0]
            lea R8,QWORD PTR [RIP+.L_411950]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_410b10]
            push 0
            lea RCX,QWORD PTR [RIP+.L_410c90]
            lea RDX,QWORD PTR [RIP+.L_412310]
            mov RSI,RBX
            push RAX
            lea RAX,QWORD PTR [RIP+.L_410b70]
            mov RDI,RBP
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_4121f8

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_4121f8:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4121ff:

            lea RDX,QWORD PTR [RIP+.L_4122f7]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4121f8
.L_41221c:
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x0
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x32
          .byte 0x37
          .byte 0x0
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x31
          .byte 0x0
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x32
          .byte 0x0
.L_412238:
          .string "cpio (little-endian binary)"
.L_412254:
          .string "cpio (big-endian binary)"
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x37
          .byte 0x30
          .byte 0x0
.L_412273:
          .string "ASCII cpio (SVR4 with no CRC)"
.L_412291:
          .string "ASCII cpio (SVR4 with CRC)"
.L_4122ac:
          .string "TRAILER!!!"
.L_4122b7:
          .string "compat-2x"
.L_4122c1:
          .string "hdrcharset"
.L_4122cc:
          .string "POSIX octet-oriented cpio"
.L_4122e6:
          .string "afio large ASCII"
.L_4122f7:
          .string "Can\'t allocate cpio data"
.L_412310:
          .string "cpio"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412318:
          .string "End of file trying to read next cpio header"
          .zero 4
.L_412348:
          .string "Skipped %d bytes before finding valid header"
          .zero 3
.L_412378:
          .string "Can\'t allocate memory for Pathname"
          .zero 5
.L_4123a0:
          .string "Pathname can\'t be converted from %s to current locale."
          .zero 1
.L_4123d8:
          .string "Rejecting malformed cpio archive: symlink contents exceed 1 megabyte"
          .zero 3
.L_412420:
          .string "Can\'t allocate memory for Linkname"
          .zero 5
.L_412448:
          .string "Linkname can\'t be converted from %s to current locale."
          .zero 1
.L_412480:
          .string "Out of memory adding file to list"
          .zero 6
.L_4124a8:
          .string "cpio: hdrcharset option needs a character-set name"
          .zero 5
.L_4124e0:
          .string "archive_read_support_format_cpio"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412510:

            lea RAX,QWORD PTR [RIP+.L_4125d4]
            mov DWORD PTR [RDI+16],393216
            mov QWORD PTR [RDI+24],RAX
            mov EAX,1
            ret 
.L_412528:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412530:

            mov EAX,1
            ret 
.L_412536:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412540:

            test ESI,ESI
            jg .L_412578

            xor EDX,EDX
            sub RSP,8
            mov ESI,1
            call .L_4049e0

            test RAX,RAX
            mov EDX,1
            jne .L_412568

            mov EAX,EDX
            add RSP,8
            ret 
            nop
            nop
            nop
.L_412568:

            mov EDX,4294967295
            add RSP,8
            mov EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412578:

            mov EDX,4294967295
            mov EAX,EDX
            ret 
.L_412580:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_450f60-256384]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_4125d2

            lea RAX,QWORD PTR [RIP+.L_412530]
            push 0
            lea R9,QWORD PTR [RIP+.L_412510]
            push 0
            lea RCX,QWORD PTR [RIP+.L_412540]
            push 0
            push 0
            push 0
            xor R8D,R8D
            push RAX
            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBX
            call .L_404820

            add RSP,48
.L_4125d2:

            pop RBX
            ret 
.L_4125d4:
          .string "Empty file"
# WARNING: found overlapping blocks at address 12398
# WARNING: found overlapping blocks at address 1239a

            nop

            push 1600484969
            jb .L_41264f
          .byte 0x61
          .byte 0x64
          .byte 0x5f
          .byte 0x73
          .byte 0x75
          .byte 0x70
          .byte 0x70
          .byte 0x6f
          .byte 0x72
          .byte 0x74
          .byte 0x5f
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x6d
          .byte 0x61
.L_4125fa:

            je .L_41265b
          .byte 0x65
          .byte 0x6d
          .byte 0x70
          .byte 0x74

            jns .L_412602
.L_412602:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412610:

            xor EAX,EAX
            ret 
.L_412613:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412620:

            mov R8D,DWORD PTR [RDI+12]
            test R8D,R8D
            jle .L_4126c2

            mov RCX,QWORD PTR [RDI]
            sub R8D,1
            movsxd RDX,R8D
            cmp R8D,1
            mov RDX,QWORD PTR [RCX+RDX*8]
            mov RAX,QWORD PTR [RCX]
            mov DWORD PTR [RDI+12],R8D
.L_412646:

            mov R11,QWORD PTR [RDX+40]
            mov QWORD PTR [RCX],RDX
            jle .L_4126ba
.L_41264f:

            mov EDI,1
            xor ESI,ESI
            xor R9D,R9D
            jmp .L_41269f
.L_41265b:

            nop
            nop
            nop
            nop
            nop
.L_412660:

            movsxd R9,EDX
            mov R9,QWORD PTR [RCX+R9*8]
            mov R9,QWORD PTR [R9+40]
            cmp R10,R9
            jbe .L_4126b3

            mov R10,R9
            cmp R10,R11
            jae .L_4126ba
.L_412678:

            lea RDI,QWORD PTR [RCX+RSI*8]
            movsxd RSI,EDX
            lea RSI,QWORD PTR [RCX+RSI*8]
            mov R9,QWORD PTR [RDI]
            mov R10,QWORD PTR [RSI]
            mov QWORD PTR [RDI],R10
            mov QWORD PTR [RSI],R9
            lea R9D,DWORD PTR [RDX+RDX*1]
            movsxd RSI,EDX
            lea EDI,DWORD PTR [R9+1]
            cmp R8D,EDI
            jle .L_4126c0
.L_41269f:

            movsxd RDX,EDI
            mov RDX,QWORD PTR [RCX+RDX*8]
            mov R10,QWORD PTR [RDX+40]
            lea EDX,DWORD PTR [R9+2]
            cmp R8D,EDX
            jg .L_412660
.L_4126b3:

            cmp R10,R11
            mov EDX,EDI
            jb .L_412678
.L_4126ba:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4126c0:

            ret 
.L_4126c2:

            xor EAX,EAX
            ret 
.L_4126c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4126d0:

            mov ECX,ECX
            mov EDX,EDX
            sub RSP,8
            add RSI,RDX
            add RDI,528
            mov RDX,RCX
            call memcmp@PLT

            test EAX,EAX
            sete AL
            add RSP,8
            movzx EAX,AL
            ret 
.L_4126f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412700:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov R12,RCX
            sub RSP,24
.L_412717:

            movsxd RAX,DWORD PTR [RSI+12]
            mov R14D,DWORD PTR [RSI+8]
            cmp EAX,R14D
            jge .L_412790

            mov RBX,QWORD PTR [RSI]
.L_412727:

            lea EDX,DWORD PTR [RAX+1]
            test EAX,EAX
            mov QWORD PTR [RBP+40],R12
            mov DWORD PTR [R13+12],EDX
            jle .L_412773

            lea EDX,DWORD PTR [RAX-1]
            sar EDX,1
            movsxd RCX,EDX
            mov RDI,QWORD PTR [RBX+RCX*8]
            cmp R12,QWORD PTR [RDI+40]
            jb .L_41276b

            jmp .L_412810
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412750:

            lea ESI,DWORD PTR [RDX-1]
            sar ESI,1
            movsxd RAX,ESI
            mov RDI,QWORD PTR [RBX+RAX*8]
            movsxd RAX,EDX
            cmp R12,QWORD PTR [RDI+40]
            jae .L_412812

            mov EDX,ESI
.L_41276b:

            test EDX,EDX
            mov QWORD PTR [RBX+RAX*8],RDI
            jne .L_412750
.L_412773:

            mov QWORD PTR [RBX],RBP
            xor EAX,EAX
.L_412778:

            add RSP,24
.L_41277c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412790:

            cmp R14D,1023
            mov R8,RDI
            jle .L_412800

            lea R15D,DWORD PTR [R14+R14*1]
            cmp R14D,R15D
            jge .L_41282a

            movsxd RDI,R15D
            shl RDI,3
.L_4127b0:

            mov QWORD PTR [RSP+8],R8
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov R8,QWORD PTR [RSP+8]
            je .L_41282a

            mov RCX,QWORD PTR [R13]
            movsxd RDX,R14D
            mov RDI,RAX
            shl RDX,3
            mov RSI,RCX
            mov QWORD PTR [RSP+8],RCX
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RCX
            call free@PLT

            mov QWORD PTR [R13],RBX
            mov DWORD PTR [R13+8],R15D
            movsxd RAX,DWORD PTR [R13+12]
            jmp .L_412727
.L_412800:

            mov EDI,8192
            mov R15D,1024
            jmp .L_4127b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412810:

            mov EDX,EAX
.L_412812:

            movsxd RDX,EDX
            xor EAX,EAX
            mov QWORD PTR [RBX+RDX*8],RBP
            add RSP,24
.L_41281f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41282a:

            lea RDX,QWORD PTR [RIP+.L_41643a]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R8
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_412778
.L_41284a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_412850:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RDX
            mov R12,RCX
            sub RSP,56
.L_41286a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+224]
            test RSI,RSI
            jne .L_412c60
.L_412894:

            cmp QWORD PTR [RBX+216],0
            jle .L_412c10
.L_4128a2:

            mov R15D,DWORD PTR [RBX+232]
            test R15D,R15D
            jne .L_412948

            lea RDX,QWORD PTR [RSP+32]
            mov ESI,1
            mov RDI,R13
            call .L_4049e0

            cmp QWORD PTR [RSP+32],0
            mov QWORD PTR [R14],RAX
            je .L_412e38
.L_4128d3:

            test RAX,RAX
            je .L_412f42

            mov RDX,QWORD PTR [RSP+32]
            cmp QWORD PTR [RBX+216],RDX
            cmovle RDX,QWORD PTR [RBX+216]
            mov QWORD PTR [RBP],RDX
            mov RAX,QWORD PTR [RBX+208]
            mov QWORD PTR [R12],RAX
            add QWORD PTR [RBX+208],RDX
            sub QWORD PTR [RBX+216],RDX
            mov QWORD PTR [RBX+224],RDX
            add QWORD PTR [RBX+160],RDX
.L_41291b:

            mov RDI,QWORD PTR [RSP+40]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_41303e

            add RSP,56
.L_412936:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412948:

            mov RAX,QWORD PTR [R13+2472]
            lea RDX,QWORD PTR [RSP+32]
            mov ESI,1
            mov RDI,R13
            mov RBX,QWORD PTR [RAX]
            call .L_4049e0

            mov RDX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP],RAX
            test RDX,RDX
            jle .L_412fcd

            mov RAX,QWORD PTR [RBX+216]
            cmp RDX,RAX
            jle .L_41298a

            mov QWORD PTR [RSP+32],RAX
            mov RDX,RAX
.L_41298a:

            mov EDI,DWORD PTR [RBX+248]
            mov R15,RDX
            test EDI,EDI
            jne .L_412b3c

            mov ECX,DWORD PTR [RBX+236]
            mov RSI,QWORD PTR [RBX+240]
            mov EAX,1
            shl RAX,CL
            lea RAX,QWORD PTR [RSI+RAX*1-1]
            shr RAX,CL
            lea RSI,QWORD PTR [RAX*4+4]
            cmp RSI,QWORD PTR [RBX+320]
            jbe .L_412a41

            mov RDI,QWORD PTR [RBX+312]
            test RDI,RDI
            je .L_4129ee

            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+8],RDX
            call free@PLT

            mov RSI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
.L_4129ee:

            mov RAX,RSI
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+16],RSI
            and RAX,-1024
            lea RCX,QWORD PTR [RAX+1024]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+312],RAX
            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+24]
            je .L_41301d

            mov QWORD PTR [RBX+320],RCX
            mov ECX,DWORD PTR [RBX+236]
.L_412a41:

            mov EAX,1
            mov QWORD PTR [RBX+328],RSI
            shl RAX,CL
            cmp RAX,QWORD PTR [RBX+264]
            mov RCX,RAX
            jbe .L_412aad

            mov RDI,QWORD PTR [RBX+256]
            test RDI,RDI
            je .L_412a81

            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RAX
            call free@PLT

            mov RCX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
.L_412a81:

            mov RDI,RCX
            mov QWORD PTR [RSP+16],RDX
            mov QWORD PTR [RSP+8],RCX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+256],RAX
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            je .L_41301d
.L_412aad:

            mov QWORD PTR [RBX+264],RCX
            mov RCX,QWORD PTR [RBX+296]
            cmp RCX,15
            ja .L_412b10

            mov EAX,16
            sub RAX,RCX
            lea RCX,QWORD PTR [RBX+RCX*1+276]
            cmp RDX,RAX
            cmovbe RAX,RDX
            cmp EAX,8
            jae .L_412eb0

            test AL,4
            jne .L_412f4d

            test EAX,EAX
            je .L_412aff

            mov RDI,QWORD PTR [RSP]
            test AL,2
            movzx ESI,BYTE PTR [RDI]
            mov BYTE PTR [RCX],SIL
            jne .L_412fb8
.L_412aff:

            add QWORD PTR [RBX+296],RAX
            add QWORD PTR [RSP],RAX
            sub RDX,RAX
            mov R15,RDX
.L_412b10:

            mov ESI,DWORD PTR [RBX+304]
            test ESI,ESI
            jne .L_412caa

            cmp QWORD PTR [RBX+296],16
            je .L_412f08
.L_412b2c:

            mov ECX,DWORD PTR [RBX+248]
            xor EDX,EDX
            test ECX,ECX
            je .L_412bbd
.L_412b3c:

            mov EAX,DWORD PTR [RBX+352]
            test EAX,EAX
            je .L_412d30

            mov RDI,QWORD PTR [RBX+256]
            mov RDX,QWORD PTR [RBX+264]
            lea RCX,QWORD PTR [RBX+360]
.L_412b5f:

            mov RSI,QWORD PTR [RSP]
            mov QWORD PTR [RBX+384],RDI
            mov RDI,RCX
            mov DWORD PTR [RBX+392],EDX
            mov QWORD PTR [RBX+360],RSI
            mov ESI,EAX
            cmp R15,RSI
            cmovbe EAX,R15D
            xor ESI,ESI
            mov DWORD PTR [RBX+368],EAX
            call inflate@PLT

            cmp EAX,1
            ja .L_412fd9

            mov EAX,DWORD PTR [RBX+392]
            mov RDX,QWORD PTR [RBX+264]
            sub RDX,RAX
            mov RAX,QWORD PTR [RBX+360]
            sub RAX,QWORD PTR [RSP]
            sub DWORD PTR [RBX+352],EAX
            sub R15,RAX
.L_412bbd:

            mov RCX,QWORD PTR [RBX+256]
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [R14],RCX
            mov QWORD PTR [RBP],RDX
            mov RCX,QWORD PTR [RBX+208]
            sub RAX,R15
            xor R15D,R15D
            mov QWORD PTR [R12],RCX
            add DWORD PTR [RBX+272],EAX
            add QWORD PTR [RBX+208],RDX
            sub QWORD PTR [RBX+216],RAX
            add QWORD PTR [RBX+160],RAX
            add QWORD PTR [RBX+224],RAX
            jmp .L_41291b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412c10:

            mov RAX,QWORD PTR [RBX+480]
            test RAX,RAX
            je .L_412e60

            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            mov QWORD PTR [RBX+480],RAX
            je .L_412e60

            mov R9,QWORD PTR [RBX+160]
            mov RSI,QWORD PTR [RAX]
            cmp R9,RSI
            jb .L_412e08

            ja .L_412f76
.L_412c4d:

            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+216],RAX
            jmp .L_4128a2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412c60:

            call .L_404a30

            mov QWORD PTR [RBX+224],0
            jmp .L_412894
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412c78:

            cmp BYTE PTR [RBX+288],4
            jne .L_412f2c

            movzx EAX,BYTE PTR [RBX+289]
            cmp EAX,DWORD PTR [RBX+236]
            jne .L_412f2c

            test DL,DL
            jne .L_412f2c

            mov DWORD PTR [RBX+304],1
.L_412caa:

            mov RDI,QWORD PTR [RBX+336]
            mov RAX,QWORD PTR [RBX+328]
            cmp RDI,RAX
            jae .L_412b2c

            sub RAX,RDI
            mov RSI,QWORD PTR [RSP]
            cmp RAX,R15
            cmova RAX,R15
            add RDI,QWORD PTR [RBX+312]
            mov RDX,RAX
            mov QWORD PTR [RSP+8],RAX
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX+336]
            add QWORD PTR [RSP],RCX
            add RAX,RCX
            sub R15,RCX
            cmp RAX,QWORD PTR [RBX+328]
            mov QWORD PTR [RBX+336],RAX
            jne .L_412b2c

            mov QWORD PTR [RBX+344],0
            mov DWORD PTR [RBX+352],0
            mov DWORD PTR [RBX+248],1
            nop
            nop
            nop
            nop
.L_412d30:

            mov RDX,QWORD PTR [RBX+344]
            lea RSI,QWORD PTR [RDX+4]
            cmp RSI,QWORD PTR [RBX+328]
            jae .L_412f64

            mov RDI,QWORD PTR [RBX+312]
            mov EAX,DWORD PTR [RBX+272]
            add RAX,QWORD PTR [RSP+32]
            mov R9D,DWORD PTR [RDI+RDX*1]
            sub RAX,R15
            cmp R9,RAX
            jne .L_412f6d

            mov EAX,DWORD PTR [RDI+RDX*1+4]
            cmp R9D,EAX
            ja .L_412f64

            sub EAX,R9D
            mov QWORD PTR [RBX+344],RSI
            lea RCX,QWORD PTR [RBX+360]
            mov DWORD PTR [RBX+352],EAX
            mov EAX,DWORD PTR [RBX+472]
            test EAX,EAX
            je .L_412e88

            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call inflateReset@PLT

            mov RCX,QWORD PTR [RSP+8]
.L_412dae:

            test EAX,EAX
            jne .L_412ffc

            mov EAX,DWORD PTR [RBX+352]
            mov DWORD PTR [RBX+472],1
            mov QWORD PTR [RBX+376],0
            mov QWORD PTR [RBX+400],0
            mov RDX,QWORD PTR [RBX+264]
            mov RDI,QWORD PTR [RBX+256]
            test EAX,EAX
            jne .L_412b5f

            xor ESI,ESI
            call memset@PLT

            mov RDX,QWORD PTR [RBX+264]
            jmp .L_412bbd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412e08:

            sub RSI,R9
            mov RDI,R13
            call .L_404a30

            test RAX,RAX
            mov R15D,EAX
            js .L_41291b

            mov RAX,QWORD PTR [RBX+480]
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RBX+160],RDX
            jmp .L_412c4d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412e38:

            lea RDX,QWORD PTR [RIP+.L_4164a1]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_43f5d0

            mov RAX,QWORD PTR [R14]
            jmp .L_4128d3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412e60:

            mov QWORD PTR [R14],0
            mov QWORD PTR [RBP],0
            mov R15D,1
            mov RAX,QWORD PTR [RBX+208]
            mov QWORD PTR [R12],RAX
            jmp .L_41291b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412e88:

            lea RSI,QWORD PTR [RIP+.L_41649a]
            mov RDI,RCX
            mov EDX,112
            mov QWORD PTR [RSP+8],RCX
            call inflateInit_@PLT

            mov RCX,QWORD PTR [RSP+8]
            jmp .L_412dae
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412eb0:

            mov R11,QWORD PTR [RSP]
            mov RSI,QWORD PTR [R11]
            mov QWORD PTR [RCX],RSI
            mov ESI,EAX
            mov RDI,QWORD PTR [R11+RSI*1-8]
            mov QWORD PTR [RCX+RSI*1-8],RDI
            lea RSI,QWORD PTR [RCX+8]
            and RSI,-8
            sub RCX,RSI
            sub R11,RCX
            add ECX,EAX
            and ECX,4294967288
            mov R9,R11
            cmp ECX,8
            jb .L_412aff

            and ECX,4294967288
            xor EDI,EDI
.L_412eea:

            mov R8D,EDI
            add EDI,8
            mov R10,QWORD PTR [R9+R8*1]
            cmp EDI,ECX
            mov QWORD PTR [RSI+R8*1],R10
            jb .L_412eea

            jmp .L_412aff
          .byte 0xf
          .byte 0x1f

            add BYTE PTR [RAX],0
            add BYTE PTR [RAX],AL
.L_412f08:

            mov RAX,QWORD PTR [RBX+276]
            cmp QWORD PTR [RIP+.L_416b30],RAX
            mov EAX,DWORD PTR [RBX+284]
            setne DL
            cmp RAX,QWORD PTR [RBX+240]
            je .L_412c78
.L_412f2c:

            lea RDX,QWORD PTR [RIP+.L_416463]
.L_412f33:

            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_43f5d0
.L_412f42:

            mov R15D,4294967266
            jmp .L_41291b
.L_412f4d:

            mov RDI,QWORD PTR [RSP]
            mov ESI,DWORD PTR [RDI]
            mov DWORD PTR [RCX],ESI
            mov ESI,EAX
            mov EDI,DWORD PTR [RDI+RSI*1-4]
            mov DWORD PTR [RCX+RSI*1-4],EDI
            jmp .L_412aff
.L_412f64:

            lea RDX,QWORD PTR [RIP+.L_41647c]
            jmp .L_412f33
.L_412f6d:

            lea RDX,QWORD PTR [RIP+.L_4166a8]
            jmp .L_412f33
.L_412f76:

            mov RCX,QWORD PTR [RBX+16]
            lea RDX,QWORD PTR [RIP+.L_416650]
            mov R8,RSI
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            mov R15D,4294967276
            call .L_43f5d0

            mov QWORD PTR [R14],0
            mov QWORD PTR [RBP],0
            mov RAX,QWORD PTR [RBX+208]
            mov QWORD PTR [R12],RAX
            jmp .L_41291b
.L_412fb8:

            mov RDI,QWORD PTR [RSP]
            mov ESI,EAX
            movzx EDI,WORD PTR [RDI+RSI*1-2]
            mov WORD PTR [RCX+RSI*1-2],DI
            jmp .L_412aff
.L_412fcd:

            lea RDX,QWORD PTR [RIP+.L_416448]
            jmp .L_412f33
.L_412fd9:

            lea RDX,QWORD PTR [RIP+.L_416700]
            mov ECX,EAX
            mov ESI,4294967295
            mov RDI,R13
            xor EAX,EAX
            mov R15D,4294967266
            call .L_43f5d0

            jmp .L_41291b
.L_412ffc:

            lea RDX,QWORD PTR [RIP+.L_4166d8]
            mov ESI,4294967295
            mov RDI,R13
            xor EAX,EAX
            mov R15D,4294967266
            call .L_43f5d0

            jmp .L_41291b
.L_41301d:

            lea RDX,QWORD PTR [RIP+.L_416680]
            mov ESI,12
            mov RDI,R13
            xor EAX,EAX
            mov R15D,4294967266
            call .L_43f5d0

            jmp .L_41291b
.L_41303e:

            call __stack_chk_fail@PLT
.L_413043:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413050:

            mov RAX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_4164b6]
            mov ECX,7
            mov R8,RSI

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov R9,QWORD PTR [RAX]
            seta AL
            sbb AL,0
            movsx EAX,AL
            test EAX,EAX
            jne .L_4130f8

            test RDX,RDX
            je .L_4130ec

            lea RDI,QWORD PTR [RIP+.L_4164bd]
            mov ECX,4
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_4130ec

            lea RDI,QWORD PTR [RIP+.L_4164c1]
            mov ECX,7
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_4130ec

            lea RDI,QWORD PTR [RIP+.L_4164c8]
            mov ECX,8
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_4130ec

            lea RDI,QWORD PTR [RIP+.L_4164d0]
            mov RSI,RDX
            mov ECX,2

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_413150
.L_4130ec:

            mov DWORD PTR [R9+4],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4130f8:

            lea RDI,QWORD PTR [RIP+.L_4164d2]
            mov ECX,10
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_413128
.L_413112:

            xor EAX,EAX
            test RDX,RDX
            setne AL
            mov DWORD PTR [R9+8],EAX
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413128:

            lea RDI,QWORD PTR [RIP+.L_4164dc]
            mov ECX,10
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_413112

            mov EAX,4294967276
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413150:

            mov DWORD PTR [R9+4],1
            ret 
.L_413159:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413160:

            cmp EDX,1001
            je .L_4131f0

            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,8
            mov RSI,QWORD PTR [RSI+8]
            test RSI,RSI
            je .L_41318b

            cmp QWORD PTR [RSI+176],0
            jne .L_4131c8
.L_41318b:

            cmp QWORD PTR [RBX+176],0
            je .L_4131b0

            lea RSI,QWORD PTR [RBX+168]
            mov RDI,RBP
            call .L_434410
.L_4131a4:

            mov RAX,QWORD PTR [RBP]
.L_4131a8:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_4131b0:

            lea RSI,QWORD PTR [RIP+.L_4164e8]
            mov RDI,RBP
            call .L_437310

            jmp .L_4131a4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4131c8:

            add EDX,1
            call .L_413160

            test RAX,RAX
            je .L_4131e6

            lea RSI,QWORD PTR [RIP+.L_4164e6]
            mov RDI,RBP
            call .L_437310

            jmp .L_41318b
.L_4131e6:

            xor EAX,EAX
            jmp .L_4131a8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4131f0:

            xor EAX,EAX
            ret 
.L_4131f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413200:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            push RBX
.L_41320b:

            mov RAX,QWORD PTR [RDI+2472]
            mov R12,QWORD PTR [RAX]
            mov RBP,QWORD PTR [R12+104]
            test RBP,RBP
            je .L_413279

            nop
.L_413220:

            lea RDI,QWORD PTR [RBP+168]
            mov R13,QWORD PTR [RBP]
            call .L_434290

            lea RDI,QWORD PTR [RBP+216]
            call .L_434290

            mov RDI,QWORD PTR [RBP+192]
            call free@PLT

            mov RDI,QWORD PTR [RBP+272]
            test RDI,RDI
            je .L_413269

            nop
            nop
            nop
            nop
.L_413258:

            mov RBX,QWORD PTR [RDI+16]
            call free@PLT

            test RBX,RBX
            mov RDI,RBX
            jne .L_413258
.L_413269:

            mov RDI,RBP
            mov RBP,R13
            call free@PLT

            test R13,R13
            jne .L_413220
.L_413279:

            mov RDI,QWORD PTR [R12+56]
            call free@PLT

            lea RDI,QWORD PTR [R12+16]
            call .L_434290

            lea RDI,QWORD PTR [R12+80]
            call .L_434290

            mov RDI,QWORD PTR [R12+112]
            test RDI,RDI
            je .L_4132a6

            call free@PLT
.L_4132a6:

            mov RDI,QWORD PTR [R12+256]
            call free@PLT

            mov RDI,QWORD PTR [R12+312]
            call free@PLT

            mov EAX,DWORD PTR [R12+472]
            test EAX,EAX
            jne .L_413310
.L_4132cc:

            xor EBX,EBX
.L_4132ce:

            mov RDI,QWORD PTR [R12+496]
            call free@PLT

            mov RDI,QWORD PTR [R12+512]
            call free@PLT

            mov RDI,R12
            call free@PLT

            mov RAX,QWORD PTR [R14+2472]
            mov QWORD PTR [RAX],0
            mov EAX,EBX
            pop RBX
.L_413301:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413310:

            lea RDI,QWORD PTR [R12+360]
            call inflateEnd@PLT

            test EAX,EAX
            je .L_4132cc

            lea RDX,QWORD PTR [RIP+.L_416728]
            mov ESI,4294967295
            mov RDI,R14
            xor EAX,EAX
            mov EBX,4294967266
            call .L_43f5d0

            jmp .L_4132ce
.L_41333e:

            nop
            nop
.L_413340:

            xor EAX,EAX
            cmp BYTE PTR [RSI],2
            je .L_413350

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413350:

            push RBP
            push RBX
            mov ECX,8
            mov EDX,72
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_413366:

            call .L_4126d0

            test EAX,EAX
            je .L_4133ac

            mov ECX,1
            mov EDX,882
            mov RSI,RBP
            mov RDI,RBX
            call .L_4126d0

            test EAX,EAX
            je .L_4133ac

            mov ECX,653
            mov EDX,1395
            mov RSI,RBP
            mov RDI,RBX
            call .L_4126d0

            test EAX,EAX
            je .L_4133ac

            xor EAX,EAX
            cmp BYTE PTR [RBP+881],1
            je .L_4133b8
.L_4133ac:

            add RSP,8
.L_4133b0:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4133b8:

            cmp WORD PTR [RBP+128],0
            je .L_4133ac

            mov EDX,DWORD PTR [RBP+80]
            cmp EDX,20
            jle .L_4133ac

            mov EAX,DWORD PTR [RBP+140]
            cmp EAX,17
            jle .L_4133ed

            cmp EDX,EAX
            jle .L_4133ed

            mov EAX,DWORD PTR [RBP+148]
            bswap EAX
            lea ECX,DWORD PTR [RAX-1]
            cmp ECX,16
            jbe .L_4133ed

            cmp EDX,EAX
            jg .L_4133f1
.L_4133ed:

            xor EAX,EAX
            jmp .L_4133ac
.L_4133f1:

            cmp BYTE PTR [RBP+156],34
            mov EAX,0
            mov EDX,48
            cmove EAX,EDX
            jmp .L_4133ac
.L_413407:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413410:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41341e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,48
            jg .L_413870

            mov RAX,QWORD PTR [RDI+2472]
            mov RDX,RSP
            mov ESI,49152
            mov R12,QWORD PTR [RAX]
            call .L_4049e0

            test RAX,RAX
            je .L_413870

            mov RDX,QWORD PTR [RSP]
            lea RBX,QWORD PTR [RAX+32768]
            lea RCX,QWORD PTR [RDX-32768]
            cmp RCX,2048
            mov QWORD PTR [RSP],RCX
            jle .L_4134a9

            movzx EAX,BYTE PTR [RAX+32768]
            lea ECX,DWORD PTR [RAX-4]
            cmp CL,250
            jbe .L_4134a9

            lea RBP,QWORD PTR [RDX-34816]
            sub RDX,34817
            and RDX,-2048
            mov R14,RBP
            sub R14,RDX
.L_4134a0:

            cmp DWORD PTR [RBX+1],808469571
            je .L_4134d0
.L_4134a9:

            xor EAX,EAX
.L_4134ab:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_413884

            add RSP,24
.L_4134c3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_4134d0:

            cmp BYTE PTR [RBX+5],49
            jne .L_4134a9

            cmp AL,1
            je .L_413548

            nop
            nop
            nop
            nop
            nop
            nop
.L_4134e0:

            mov EAX,DWORD PTR [R12+196]
            test EAX,EAX
            je .L_413780
.L_4134f0:

            movzx R13D,BYTE PTR [RBX]
            test R13B,R13B
            jne .L_413678

            cmp BYTE PTR [RBX+6],1
            je .L_413516
.L_413503:

            mov RSI,RBX
            mov RDI,R12
            call .L_413340

            test EAX,EAX
            je .L_413818
.L_413516:

            add RBX,2048
            cmp RBP,R14
            mov QWORD PTR [RSP],RBP
            je .L_4134a9

            movzx EAX,BYTE PTR [RBX]
            sub RBP,2048
            lea EDX,DWORD PTR [RAX-4]
            cmp DL,250
            ja .L_4134a0

            jmp .L_4134a9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413548:

            cmp BYTE PTR [RBX+6],1
            jne .L_4134e0

            cmp BYTE PTR [RBX+7],0
            jne .L_4134e0

            mov ECX,8
            mov EDX,72
            mov RSI,RBX
            mov RDI,R12
            call .L_4126d0

            test EAX,EAX
            je .L_4134e0

            mov ECX,32
            mov EDX,88
            mov RSI,RBX
            mov RDI,R12
            call .L_4126d0

            test EAX,EAX
            je .L_4134e0

            movzx R13D,WORD PTR [RBX+128]
            test R13,R13
            je .L_4134e0

            movsxd R15,DWORD PTR [RBX+80]
            cmp R15D,20
            jle .L_4134e0

            cmp BYTE PTR [RBX+881],1
            jne .L_4134e0

            mov EAX,DWORD PTR [RBX+140]
            cmp EAX,17
            jle .L_4134e0

            cmp R15D,EAX
            jle .L_4134e0

            mov EAX,DWORD PTR [RBX+148]
            bswap EAX
            lea EDX,DWORD PTR [RAX-1]
            cmp EDX,16
            jbe .L_4134e0

            cmp R15D,EAX
            jle .L_4134e0

            test BYTE PTR [RBX+882],223
            jne .L_4134e0

            mov ECX,653
            mov EDX,1395
            mov RSI,RBX
            mov RDI,R12
            call .L_4126d0

            test EAX,EAX
            je .L_4134e0

            cmp BYTE PTR [RBX+156],34
            jne .L_4134e0

            cmp DWORD PTR [R12+188],0
            jne .L_413516

            mov QWORD PTR [R12+168],R13
            mov DWORD PTR [R12+184],R15D
            imul R13,R15
            mov QWORD PTR [R12+176],R13
            mov EAX,DWORD PTR [RBX+158]
            mov DWORD PTR [R12+188],EAX
            mov EAX,DWORD PTR [RBX+166]
            mov DWORD PTR [R12+192],EAX
            jmp .L_413516
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413678:

            cmp R13B,2
            jne .L_413889

            cmp BYTE PTR [RBX+6],2
            jne .L_413503

            cmp BYTE PTR [RBX+7],0
            jne .L_413503

            mov ECX,8
            mov EDX,72
            mov RSI,RBX
            mov RDI,R12
            call .L_4126d0

            test EAX,EAX
            je .L_413503

            mov ECX,32
            mov EDX,88
            mov RSI,RBX
            mov RDI,R12
            call .L_4126d0

            test EAX,EAX
            je .L_413503

            cmp WORD PTR [RBX+128],0
            je .L_413503

            mov EAX,DWORD PTR [RBX+80]
            cmp EAX,20
            jle .L_413503

            cmp BYTE PTR [RBX+881],2
            jne .L_413503

            mov EDX,DWORD PTR [RBX+140]
            cmp EDX,17
            jle .L_413503

            cmp EAX,EDX
            jle .L_413503

            mov EDX,DWORD PTR [RBX+148]
            bswap EDX
            lea ECX,DWORD PTR [RDX-1]
            cmp ECX,16
            jbe .L_413503

            cmp EAX,EDX
            jle .L_413503

            mov ECX,1
            mov EDX,882
            mov RSI,RBX
            mov RDI,R12
            call .L_4126d0

            test EAX,EAX
            je .L_413503

            mov ECX,653
            mov EDX,1395
            mov RSI,RBX
            mov RDI,R12
            call .L_4126d0

            test EAX,EAX
            je .L_413503

            cmp BYTE PTR [RBX+156],34
            jne .L_413503

            jmp .L_413516
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413780:

            mov RSI,RBX
            mov RDI,R12
            call .L_413340

            test EAX,EAX
            je .L_4134f0

            cmp BYTE PTR [RBX+88],37
            jne .L_4134f0

            cmp BYTE PTR [RBX+89],47
            jne .L_4134f0

            movzx EAX,BYTE PTR [RBX+90]
            cmp AL,64
            je .L_413862

            cmp AL,67
            je .L_41387a

            cmp AL,69
            jne .L_4134f0

            mov EAX,3
.L_4137c8:

            mov BYTE PTR [R12+42],AL
            movsxd RAX,DWORD PTR [RBX+80]
            movzx EDX,WORD PTR [RBX+128]
            mov DWORD PTR [R12+184],EAX
            imul RAX,RDX
            mov QWORD PTR [R12+168],RDX
            mov QWORD PTR [R12+176],RAX
            mov EAX,DWORD PTR [RBX+158]
            mov DWORD PTR [R12+196],EAX
            mov EAX,DWORD PTR [RBX+166]
            mov DWORD PTR [R12+200],EAX
            jmp .L_413516
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413818:

            cmp R13B,255
            jne .L_4134a9

            cmp BYTE PTR [RBX+6],1
            jne .L_4134a9

            mov ECX,2041
            mov EDX,7
            mov RSI,RBX
            mov RDI,R12
            call .L_4126d0

            test EAX,EAX
            je .L_4134a9

            cmp DWORD PTR [R12+188],16
            mov EAX,48
            jle .L_4134a9

            jmp .L_4134ab
.L_413862:

            mov EAX,1
            jmp .L_4137c8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413870:

            mov EAX,4294967295
            jmp .L_4134ab
.L_41387a:

            mov EAX,2
            jmp .L_4137c8
.L_413884:

            call __stack_chk_fail@PLT
.L_413889:

            mov RSI,RBX
            mov RDI,R12
            call .L_413340

            test EAX,EAX
            jne .L_413516

            cmp R13B,3
            jne .L_413818

            cmp BYTE PTR [RBX+6],1
            jne .L_4134a9

            cmp BYTE PTR [RBX+7],0
            jne .L_4134a9

            mov EAX,DWORD PTR [RBX+72]
            cmp EAX,16
            jle .L_4134a9

            cmp EAX,DWORD PTR [R12+184]
            jge .L_4134a9

            mov EDX,DWORD PTR [RBX+76]
            bswap EDX
            cmp EAX,EDX
            jne .L_4134a9

            jmp .L_413516
.L_4138e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4138f0:

            sub RSP,72
.L_4138f4:

            mov RDX,RDI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDX]
            movzx ECX,BYTE PTR [RDX+3]
            mov RDI,RSP
            movzx ESI,BYTE PTR [RDX+4]
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+20],EAX
            movzx EAX,BYTE PTR [RDX+1]
            movups XMMWORD PTR [RSP+24],XMM0
            mov DWORD PTR [RSP+8],ECX
            mov DWORD PTR [RSP+4],ESI
            movups XMMWORD PTR [RDI+40],XMM0
            sub EAX,1
            mov DWORD PTR [RSP+16],EAX
            movzx EAX,BYTE PTR [RDX+2]
            mov DWORD PTR [RSP+12],EAX
            movzx EAX,BYTE PTR [RDX+5]
            mov DWORD PTR [RSP],EAX
            movsx EAX,BYTE PTR [RDX+6]
            lea EDX,DWORD PTR [RAX+47]
            cmp EDX,98
            ja .L_41397d

            lea EDX,DWORD PTR [RAX+3]
            test EAX,EAX
            cmovns EDX,EAX
            sar EDX,2
            sub ECX,EDX
            cdq 
            shr EDX,30
            mov DWORD PTR [RSP+8],ECX
            add EAX,EDX
            and EAX,3
            sub EAX,EDX
            mov EDX,EAX
            shl EDX,4
            sub EAX,EDX
            add EAX,ESI
            mov DWORD PTR [RSP+4],EAX
.L_41397d:

            call timegm@PLT

            mov EDX,0
            cmp RAX,-1
            cmove RAX,RDX
            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            jne .L_4139a4

            add RSP,72
.L_4139a3:

            ret 
.L_4139a4:

            call __stack_chk_fail@PLT
.L_4139a9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4139b0:

            mov RAX,RDI
            sub RSP,72
.L_4139b7:

            movzx EDX,BYTE PTR [RAX]
            movzx ECX,BYTE PTR [RAX+1]
            mov RDI,RSP
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RSI
            xor ESI,ESI
            pxor XMM0,XMM0
            sub EDX,48
            sub ECX,48
            imul ECX,ECX,100
            imul EDX,EDX,1000
            movups XMMWORD PTR [RSP+24],XMM0
            add EDX,ECX
            movups XMMWORD PTR [RDI+40],XMM0
            movzx ECX,BYTE PTR [RAX+2]
            lea ECX,DWORD PTR [RCX+RCX*4-240]
            lea ECX,DWORD PTR [RDX+RCX*2]
            movzx EDX,BYTE PTR [RAX+3]
            lea EDX,DWORD PTR [RCX+RDX*1-1948]
            mov DWORD PTR [RSP+20],EDX
            movzx EDX,BYTE PTR [RAX+4]
            lea ECX,DWORD PTR [RDX+RDX*4-240]
            movzx EDX,BYTE PTR [RAX+5]
            lea EDX,DWORD PTR [RDX+RCX*2-48]
            mov DWORD PTR [RSP+16],EDX
            movzx EDX,BYTE PTR [RAX+6]
            lea ECX,DWORD PTR [RDX+RDX*4-240]
            movzx EDX,BYTE PTR [RAX+7]
            lea EDX,DWORD PTR [RDX+RCX*2-48]
            mov DWORD PTR [RSP+12],EDX
            movzx EDX,BYTE PTR [RAX+8]
            lea ECX,DWORD PTR [RDX+RDX*4-240]
            movzx EDX,BYTE PTR [RAX+9]
            lea EDX,DWORD PTR [RDX+RCX*2-48]
            movzx ECX,BYTE PTR [RAX+10]
            mov DWORD PTR [RSP+8],EDX
            lea ESI,DWORD PTR [RCX+RCX*4-240]
            movzx ECX,BYTE PTR [RAX+11]
            lea ESI,DWORD PTR [RCX+RSI*2-48]
            movzx ECX,BYTE PTR [RAX+12]
            mov DWORD PTR [RSP+4],ESI
            lea R8D,DWORD PTR [RCX+RCX*4-240]
            movzx ECX,BYTE PTR [RAX+13]
            movsx EAX,BYTE PTR [RAX+16]
            lea ECX,DWORD PTR [RCX+R8*2-48]
            mov DWORD PTR [RSP],ECX
            lea ECX,DWORD PTR [RAX+47]
            cmp ECX,98
            ja .L_413ab5

            lea ECX,DWORD PTR [RAX+3]
            test EAX,EAX
            cmovns ECX,EAX
            sar ECX,2
            sub EDX,ECX
            mov DWORD PTR [RSP+8],EDX
            cdq 
            shr EDX,30
            add EAX,EDX
            and EAX,3
            sub EAX,EDX
            mov EDX,EAX
            shl EDX,4
            sub EAX,EDX
            add EAX,ESI
            mov DWORD PTR [RSP+4],EAX
.L_413ab5:

            call timegm@PLT

            mov EDX,0
            cmp RAX,-1
            cmove RAX,RDX
            mov RDI,QWORD PTR [RSP+56]
            xor RDI,QWORD PTR FS:[40]
            jne .L_413adc

            add RSP,72
.L_413adb:

            ret 
.L_413adc:

            call __stack_chk_fail@PLT
.L_413ae1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413af0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            lea RSI,QWORD PTR [RDX+4]
            push RBP
            push RBX
            sub RSP,56
.L_413b05:

            mov RAX,QWORD PTR [RDI+2472]
            cmp RCX,RSI
            mov RBP,QWORD PTR [RAX]
            jb .L_413be0

            movzx EAX,BYTE PTR [RDX]
            mov RBX,RDX
            lea EDX,DWORD PTR [RAX-65]
            cmp DL,25
            ja .L_413be0

            movzx EDX,BYTE PTR [RBX+1]
            mov R9,RDI
            lea EDI,DWORD PTR [RDX-65]
            cmp DIL,25
            ja .L_413be0

            movzx R12D,BYTE PTR [RBX+2]
            cmp R12B,3
            jbe .L_413be0

            movzx EDI,R12B
            add RDI,RBX
            cmp RCX,RDI
            jb .L_413be0

            lea R8,QWORD PTR [RIP+.L_416a48]
            mov R13,RCX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413b70:

            sub EAX,67
            lea EDI,DWORD PTR [R12-4]
            movzx ECX,BYTE PTR [RBX+3]
            cmp AL,23
            ja .L_413ba0

            movzx EAX,AL
            movsxd RAX,DWORD PTR [R8+RAX*4]
            add RAX,R8
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413b90:

            cmp DL,70
            jne .L_413ba0

            cmp ECX,1
            je .L_414240

            nop
            nop
.L_413ba0:

            movzx EAX,BYTE PTR [RBX+2]
            add RBX,RAX
            lea RSI,QWORD PTR [RBX+4]
            cmp RSI,R13
            ja .L_413be0

            movzx EAX,BYTE PTR [RBX]
            lea EDX,DWORD PTR [RAX-65]
            cmp DL,25
            ja .L_413be0

            movzx EDX,BYTE PTR [RBX+1]
            lea ECX,DWORD PTR [RDX-65]
            cmp CL,25
            ja .L_413be0

            movzx R12D,BYTE PTR [RBX+2]
            cmp R12B,3
            jbe .L_413be0

            movzx ECX,R12B
            add RCX,RBX
            cmp R13,RCX
            jae .L_413b70

            nop
            nop
.L_413be0:

            xor EAX,EAX
.L_413be2:

            add RSP,56
.L_413be6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413bf8:

            cmp ECX,1
            jne .L_413ba0

            cmp DL,70
            jne .L_413ba0

            test EDI,EDI
            je .L_413d38

            movzx EDX,BYTE PTR [RBX+4]
            lea R15,QWORD PTR [RBX+5]
            lea ESI,DWORD PTR [R12-5]
            mov EAX,EDX
            mov R10D,EDX
            mov EDI,EDX
            and EDI,4
            and EAX,1
            and R10D,2
            test DL,DL
            mov BYTE PTR [RSP],DIL
            js .L_41447a

            test AL,AL
            je .L_413c86

            cmp ESI,6
            jle .L_413d38

            mov RDI,R15
            mov DWORD PTR [R14+88],1
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R8
            mov BYTE PTR [RSP+16],R10B
            lea R15,QWORD PTR [RBX+12]
            mov BYTE PTR [RSP+8],DL
            call .L_4138f0

            movzx R10D,BYTE PTR [RSP+16]
            movzx EDX,BYTE PTR [RSP+8]
            lea ESI,DWORD PTR [R12-12]
            mov R9,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+24]
            mov QWORD PTR [R14+96],RAX
.L_413c86:

            test R10B,R10B
            je .L_413ccc

            cmp ESI,6
            mov BYTE PTR [RSP+32],DL
            mov DWORD PTR [RSP+24],ESI
            jle .L_413d38

            mov RDI,R15
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            call .L_4138f0

            mov ESI,DWORD PTR [RSP+24]
            movzx EDX,BYTE PTR [RSP+32]
            add R15,7
            mov R9,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+104],RAX
            sub ESI,7
.L_413ccc:

            cmp BYTE PTR [RSP],0
            je .L_413d0d

            cmp ESI,6
            mov BYTE PTR [RSP+24],DL
            mov DWORD PTR [RSP+16],ESI
            jle .L_413d38

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_4138f0

            mov ESI,DWORD PTR [RSP+16]
            movzx EDX,BYTE PTR [RSP+24]
            add R15,7
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [R14+112],RAX
            sub ESI,7
.L_413d0d:

            and EDX,8
            je .L_413d38

            cmp ESI,6
            jle .L_413d38

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_4138f0

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [R14+120],RAX
            nop
            nop
            nop
.L_413d38:

            mov BYTE PTR [RBP+40],1
            jmp .L_413ba0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413d48:

            cmp DL,76
            je .L_414040

            cmp DL,84
            jne .L_413ba0

            test EDI,EDI
            jne .L_413ba0

            cmp ECX,1
            jne .L_413ba0

            xor EAX,EAX
            mov WORD PTR [RBP+40],AX
            xor EAX,EAX
            jmp .L_413be2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413d80:

            cmp ECX,1
            jne .L_413ba0

            cmp DL,69
            jne .L_413ba0

            mov BYTE PTR [R14+74],1
            mov BYTE PTR [RBP+40],1
            jmp .L_413ba0
.L_413da0:

            cmp ECX,1
            sete AL
            cmp DL,78
            je .L_413fb8

            cmp DL,88
            jne .L_413ba0

            test AL,AL
            je .L_413ba0

            cmp EDI,7
            jle .L_413d38

            lea R10,QWORD PTR [RSI+3]
            xor ECX,ECX
            mov EDX,1
.L_413dd4:

            movzx EAX,BYTE PTR [RSI]
            add RSI,1
            imul EAX,EDX
            shl EDX,8
            add ECX,EAX
            cmp RSI,R10
            jne .L_413dd4

            movzx EAX,BYTE PTR [RSI]
            imul EDX,EAX
            add ECX,EDX
            cmp EDI,15
            mov DWORD PTR [R14+136],ECX
            jle .L_413d38

            lea RAX,QWORD PTR [RBX+12]
            lea R10,QWORD PTR [RBX+15]
            xor ESI,ESI
            mov ECX,1
.L_413e0f:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RAX,R10
            jne .L_413e0f

            movzx EAX,BYTE PTR [RAX]
            imul ECX,EAX
            add ESI,ECX
            cmp EDI,23
            mov DWORD PTR [R14+160],ESI
            jle .L_413d38

            lea RAX,QWORD PTR [RBX+20]
            lea R10,QWORD PTR [RBX+23]
            xor ESI,ESI
            mov ECX,1
.L_413e4a:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RAX,R10
            jne .L_413e4a

            movzx EAX,BYTE PTR [RAX]
            imul ECX,EAX
            add ESI,ECX
            cmp EDI,31
            mov DWORD PTR [R14+140],ESI
            jle .L_413d38

            lea RAX,QWORD PTR [RBX+28]
            lea R10,QWORD PTR [RBX+31]
            xor ESI,ESI
            mov ECX,1
.L_413e85:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp R10,RAX
            jne .L_413e85

            movzx EAX,BYTE PTR [R10]
            imul ECX,EAX
            add ESI,ECX
            cmp EDI,39
            mov DWORD PTR [R14+144],ESI
            jle .L_413d38

            lea RAX,QWORD PTR [RBX+36]
            lea RDI,QWORD PTR [RBX+39]
            xor ESI,ESI
            mov ECX,1
.L_413ec1:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RDI,RAX
            jne .L_413ec1

            movzx EAX,BYTE PTR [RDI]
            imul ECX,EAX
            lea EAX,DWORD PTR [RSI+RCX*1]
            mov QWORD PTR [R14+152],RAX
            jmp .L_413d38
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413ef0:

            cmp ECX,1
            jne .L_413ba0

            cmp DL,77
            jne .L_413ba0

            cmp BYTE PTR [R14+208],0
            jne .L_413f17

            mov QWORD PTR [R14+176],0
.L_413f17:

            test EDI,EDI
            mov BYTE PTR [R14+208],0
            je .L_413d38

            movzx EAX,BYTE PTR [RBX+4]
            cmp AL,1
            je .L_4145ed

            jb .L_4145b6

            cmp AL,2
            je .L_41458c

            cmp AL,4
            jne .L_413d38

            lea RDI,QWORD PTR [R14+168]
            lea RSI,QWORD PTR [RIP+.L_4164f1]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_437310

            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            jmp .L_413d38
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413f78:

            cmp DL,69
            je .L_414108

            cmp DL,76
            jne .L_413ba0

            cmp ECX,1
            jne .L_413ba0

            cmp EDI,8
            jne .L_413ba0

            mov EAX,DWORD PTR [RBX+4]
            imul RAX,QWORD PTR [RBP+168]
            mov QWORD PTR [R14+80],RAX
            mov BYTE PTR [RBP+40],1
            jmp .L_413ba0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413fb8:

            cmp EDI,16
            jne .L_413ba0

            test AL,AL
            je .L_413ba0

            lea RDI,QWORD PTR [RSI+3]
            xor ECX,ECX
            mov EDX,1
.L_413fd4:

            movzx EAX,BYTE PTR [RSI]
            add RSI,1
            imul EAX,EDX
            shl EDX,8
            add ECX,EAX
            cmp RDI,RSI
            jne .L_413fd4

            movzx EAX,BYTE PTR [RDI]
            lea RDI,QWORD PTR [RBX+15]
            xor ESI,ESI
            imul EDX,EAX
            lea RAX,QWORD PTR [RBX+12]
            lea R10D,DWORD PTR [RDX+RCX*1]
            mov ECX,1
            shl R10,32
            mov QWORD PTR [R14+128],R10
.L_41400c:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RDI,RAX
            jne .L_41400c

            movzx EAX,BYTE PTR [RDI]
            imul ECX,EAX
            lea EAX,DWORD PTR [RCX+RSI*1]
            or R10,RAX
            mov QWORD PTR [R14+128],R10
            mov BYTE PTR [RBP+40],1
            jmp .L_413ba0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414040:

            cmp ECX,1
            jne .L_413ba0

            cmp BYTE PTR [R14+240],0
            jne .L_4142f2
.L_414057:

            mov QWORD PTR [R14+224],0
.L_414062:

            test EDI,EDI
            mov BYTE PTR [R14+240],0
            je .L_413d38

            movzx EAX,BYTE PTR [RBX+4]
            test AL,AL
            je .L_41408a

            cmp AL,1
            jne .L_413d38

            mov BYTE PTR [R14+240],1
.L_41408a:

            sub R12D,5
            lea RCX,QWORD PTR [RBX+5]
            cmp R12D,1
            jle .L_413d38

            lea RAX,QWORD PTR [R14+216]
            lea RSI,QWORD PTR [RIP+.L_4164f0]
            mov QWORD PTR [RSP+24],RBX
            mov QWORD PTR [RSP+8],RBP
            mov EBX,R12D
            mov QWORD PTR [RSP+16],R9
            mov R12,RAX
            mov QWORD PTR [RSP+32],R13
            nop
            nop
            nop
            nop
.L_4140c8:

            movzx R13D,BYTE PTR [RCX]
            mov RDI,R12
            mov QWORD PTR [RSP],R8
            lea R15,QWORD PTR [RCX+2]
            movzx EBP,BYTE PTR [RCX+1]
            sub EBX,2
            call .L_437310

            mov R8,QWORD PTR [RSP]
            cmp R13B,32
            ja .L_41433a

            lea RDI,QWORD PTR [RIP+.L_416aa8]
            movzx EDX,R13B
            movsxd RAX,DWORD PTR [RDI+RDX*4]
            add RAX,RDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414108:

            cmp ECX,1
            jne .L_413ba0

            cmp EDI,24
            jne .L_413ba0

            mov RSI,QWORD PTR [R9+2472]
            mov EAX,DWORD PTR [RBX+12]
            movsxd RCX,DWORD PTR [RBX+4]
            mov R12,QWORD PTR [RSI]
            mov ESI,DWORD PTR [R14+136]
            mov DWORD PTR [R14+64],EAX
            mov EDX,DWORD PTR [RBX+20]
            mov RDI,QWORD PTR [R12+168]
            and ESI,61440
            mov DWORD PTR [R14+68],EDX
            imul RCX,RDI
            cmp ESI,32768
            je .L_41443e
.L_41415b:

            cmp RCX,QWORD PTR [R12+160]
            jb .L_414448

            add RAX,RDX
            cmp RDI,RAX
            jb .L_414448

            add RAX,RCX
            cmp RAX,QWORD PTR [R12+176]
            ja .L_414448

            movsxd RDX,DWORD PTR [R12+64]
            mov EAX,DWORD PTR [R12+68]
            cmp EDX,EAX
            jl .L_414288

            cmp EAX,15
            jle .L_414468

            lea EDI,DWORD PTR [RAX+RAX*1]
            cmp EAX,EDI
            mov DWORD PTR [RSP+32],EDI
            jge .L_41462c

            movsxd RDI,EDI
.L_4141b3:

            mov ESI,16
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov DWORD PTR [RSP],EDX
            call calloc@PLT

            test RAX,RAX
            mov R15,RAX
            mov R9,QWORD PTR [RSP+24]
            je .L_41462c

            mov RSI,QWORD PTR [R12+56]
            movsxd RDX,DWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            test RSI,RSI
            je .L_41422f

            shl RDX,4
            mov RDI,RAX
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP],RCX
            call memcpy@PLT

            mov RDI,QWORD PTR [R12+56]
            call free@PLT

            movsxd RDX,DWORD PTR [R12+64]
            mov R9,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP]
.L_41422f:

            mov EAX,DWORD PTR [RSP+32]
            mov QWORD PTR [R12+56],R15
            mov DWORD PTR [R12+68],EAX
            jmp .L_41428d
          .byte 0x90
.L_414240:

            cmp BYTE PTR [RBX+4],112
            jne .L_413ba0

            cmp BYTE PTR [RBX+5],122
            jne .L_413ba0

            cmp EDI,12
            jne .L_413ba0

            mov DWORD PTR [R14+244],1
            movzx EAX,BYTE PTR [RBX+7]
            mov DWORD PTR [R14+248],EAX
            mov EAX,DWORD PTR [RBX+8]
            mov QWORD PTR [R14+256],RAX
            jmp .L_413ba0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414288:

            mov R15,QWORD PTR [R12+56]
.L_41428d:

            lea EAX,DWORD PTR [RDX+1]
            test EDX,EDX
            mov DWORD PTR [R12+64],EAX
            jle .L_4142e6

            lea ESI,DWORD PTR [RDX-1]
            sar ESI,1
            movsxd RAX,ESI
            shl RAX,4
            add RAX,R15
            cmp QWORD PTR [RAX],RCX
            ja .L_4142d5

            jmp .L_41442d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4142b8:

            lea EDI,DWORD PTR [RSI-1]
            movsxd RDX,ESI
            sar EDI,1
            movsxd RAX,EDI
            shl RAX,4
            add RAX,R15
            cmp RCX,QWORD PTR [RAX]
            jae .L_41442f

            mov ESI,EDI
.L_4142d5:

            movdqu XMM0,XMMWORD PTR [RAX]
            shl RDX,4
            test ESI,ESI
            movups XMMWORD PTR [R15+RDX*1],XMM0
            jne .L_4142b8
.L_4142e6:

            mov QWORD PTR [R15],RCX
            mov QWORD PTR [R15+8],R14
            jmp .L_413ba0
.L_4142f2:

            cmp QWORD PTR [R14+224],0
            jne .L_414062

            jmp .L_414057
.L_414305:

            lea RSI,QWORD PTR [RIP+.L_4164f9]
            mov QWORD PTR [RSP],R8
.L_414310:

            mov RDI,R12
            movzx R13D,BPL
            call .L_437310

            mov R8,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RIP+.L_4164e6]
            movzx ECX,BPL
.L_41432b:

            sub EBX,R13D
            add RCX,R15
            cmp EBX,1
            jg .L_4140c8
.L_41433a:

            mov RBP,QWORD PTR [RSP+8]
            mov R9,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP+24]
            mov R13,QWORD PTR [RSP+32]
            jmp .L_413d38
.L_414353:

            mov QWORD PTR [RSP],R8
            mov QWORD PTR [R14+224],0
            lea RSI,QWORD PTR [RIP+.L_4164f4]
            jmp .L_414310
.L_41436b:

            lea RSI,QWORD PTR [RIP+.L_4164e6]
            mov RDI,R12
            mov QWORD PTR [RSP],R8
            movzx R13D,BPL
            call .L_437310

            movzx ECX,BPL
            lea RSI,QWORD PTR [RIP+.L_4164f0]
            mov R8,QWORD PTR [RSP]
            jmp .L_41432b
.L_414393:

            mov QWORD PTR [RSP],R8
            lea RSI,QWORD PTR [RIP+.L_4164f1]
            jmp .L_414310
.L_4143a3:

            mov QWORD PTR [RSP],R8
            lea RSI,QWORD PTR [RIP+.L_4164e8]
            jmp .L_414310
.L_4143b3:

            movzx R13D,BPL
            cmp EBX,R13D
            jl .L_41433a

            movzx ECX,BPL
            mov RSI,R15
            mov RDI,R12
            mov RDX,RCX
            mov QWORD PTR [RSP+40],R8
            mov QWORD PTR [RSP],RCX
            call .L_437290

            lea RSI,QWORD PTR [RIP+.L_4164e6]
            mov RCX,QWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+40]
            jmp .L_41432b
.L_4143f0:

            movzx R13D,BPL
            cmp EBX,R13D
            jl .L_41433a

            movzx ECX,BPL
            mov RSI,R15
            mov RDI,R12
            mov RDX,RCX
            mov QWORD PTR [RSP+40],R8
            mov QWORD PTR [RSP],RCX
            call .L_437290

            lea RSI,QWORD PTR [RIP+.L_4164f0]
            mov RCX,QWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+40]
            jmp .L_41432b
.L_41442d:

            mov ESI,EDX
.L_41442f:

            movsxd RSI,ESI
            shl RSI,4
            add R15,RSI
            jmp .L_4142e6
.L_41443e:

            cmp RCX,QWORD PTR [R14+48]
            jb .L_41415b
.L_414448:

            lea RDX,QWORD PTR [RIP+.L_416750]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R9
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_413be2
.L_414468:

            mov EDI,16
            mov DWORD PTR [RSP+32],16
            jmp .L_4141b3
.L_41447a:

            test AL,AL
            je .L_4144cc

            cmp ESI,16
            jle .L_413d38

            mov RDI,R15
            mov DWORD PTR [R14+88],1
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R8
            mov BYTE PTR [RSP+16],R10B
            lea R15,QWORD PTR [RBX+22]
            mov BYTE PTR [RSP+8],DL
            call .L_4139b0

            movzx R10D,BYTE PTR [RSP+16]
            movzx EDX,BYTE PTR [RSP+8]
            lea ESI,DWORD PTR [R12-22]
            mov R9,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+24]
            mov QWORD PTR [R14+96],RAX
.L_4144cc:

            test R10B,R10B
            je .L_414512

            cmp ESI,16
            mov BYTE PTR [RSP+32],DL
            mov DWORD PTR [RSP+24],ESI
            jle .L_413d38

            mov RDI,R15
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            call .L_4139b0

            mov ESI,DWORD PTR [RSP+24]
            movzx EDX,BYTE PTR [RSP+32]
            add R15,17
            mov R9,QWORD PTR [RSP+16]
            mov R8,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+104],RAX
            sub ESI,17
.L_414512:

            cmp BYTE PTR [RSP],0
            je .L_414557

            cmp ESI,16
            mov BYTE PTR [RSP+24],DL
            mov DWORD PTR [RSP+16],ESI
            jle .L_413d38

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_4139b0

            mov ESI,DWORD PTR [RSP+16]
            movzx EDX,BYTE PTR [RSP+24]
            add R15,17
            mov R9,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [R14+112],RAX
            sub ESI,17
.L_414557:

            and EDX,8
            je .L_413d38

            cmp ESI,16
            jle .L_413d38

            mov RDI,R15
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_4139b0

            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [R14+120],RAX
            mov R9,QWORD PTR [RSP+8]
            jmp .L_413d38
.L_41458c:

            lea RDI,QWORD PTR [R14+168]
            lea RSI,QWORD PTR [RIP+.L_4164e8]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_437310

            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            jmp .L_413d38
.L_4145b6:

            cmp EDI,1
            je .L_413d38

            sub R12D,5
            lea RSI,QWORD PTR [RBX+5]
            lea RDI,QWORD PTR [R14+168]
            movsxd RDX,R12D
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_437290

            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            jmp .L_413d38
.L_4145ed:

            cmp EDI,1
            je .L_413d38

            sub R12D,5
            lea RSI,QWORD PTR [RBX+5]
            lea RDI,QWORD PTR [R14+168]
            movsxd RDX,R12D
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],R8
            call .L_437290

            mov BYTE PTR [R14+208],1
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            jmp .L_413d38
.L_41462c:

            lea RDX,QWORD PTR [RIP+.L_41643a]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R9
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_413be2
.L_41464c:

            nop
            nop
            nop
            nop
.L_414650:

            push R15
            push R14
            mov R10,RDI
            push R13
            push R12
            mov ECX,1
            push RBP
            push RBX
            mov R12,RSI
            mov RBP,RDX
            xor ESI,ESI
            sub RSP,56
.L_41466e:

            mov RAX,QWORD PTR [RDI+2472]
            movzx R14D,BYTE PTR [RDX+32]
            movzx R9D,BYTE PTR [RDX]
            mov R15D,DWORD PTR [RDX+2]
            lea RDI,QWORD PTR [RDX+13]
            mov R13,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RDX+10]
            mov BYTE PTR [RSP+8],R14B
.L_414692:

            movzx EDX,BYTE PTR [RAX]
            add RAX,1
            imul EDX,ECX
            shl ECX,8
            add ESI,EDX
            cmp RAX,RDI
            jne .L_414692

            movzx EAX,BYTE PTR [RBP+13]
            lea RDX,QWORD PTR [RIP+.L_416780]
            imul ECX,EAX
            add ECX,ESI
            cmp R9,33
            jbe .L_414a00

            lea RAX,QWORD PTR [R9-33]
            cmp RAX,R14
            jb .L_414b38

            test R14,R14
            je .L_414b38

            test R15D,R15D
            jle .L_414a20

            mov RSI,QWORD PTR [R13+168]
            xor EDX,EDX
            movsxd RDI,R15D
            lea RAX,QWORD PTR [RSI+RCX*1-1]
            div RSI
            mov EDX,DWORD PTR [R13+184]
            add RAX,RDI
            cmp RAX,RDX
            ja .L_414ae0
.L_414706:

            imul RSI,RDI
            test R12,R12
            mov RDX,RSI
            je .L_41473b

            cmp RSI,QWORD PTR [R12+48]
            je .L_414950

            mov RAX,R12
            jmp .L_414732
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414728:

            cmp QWORD PTR [RAX+48],RDX
            je .L_414950
.L_414732:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            jne .L_414728
.L_41473b:

            mov ESI,304
            mov EDI,1
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+32],RDX
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+16],R9
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov R9,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+40]
            je .L_414d63

            lea RDI,QWORD PTR [RBP+18]
            mov QWORD PTR [RAX+8],R12
            mov QWORD PTR [RAX+48],RDX
            mov QWORD PTR [RAX+56],RCX
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],R9
            call .L_4138f0

            mov QWORD PTR [RBX+104],RAX
            mov QWORD PTR [RBX+112],RAX
            lea R8,QWORD PTR [RBP+33]
            mov QWORD PTR [RBX+120],RAX
            lea RAX,QWORD PTR [RBX+288]
            mov QWORD PTR [RBX+288],0
            mov R9,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+24]
            mov QWORD PTR [RBX+296],RAX
            cmp BYTE PTR [R13+42],0
            jne .L_414a40

            cmp R14,2
            jbe .L_414b70

            cmp BYTE PTR [R8+R14*1-2],59
            lea RSI,QWORD PTR [R14-2]
            lea RDX,QWORD PTR [R14-1]
            movzx ECX,BYTE PTR [R8+R14*1-1]
            mov RAX,R14
            je .L_414d52
.L_414802:

            cmp CL,46
            cmovne RDX,RAX
.L_414809:

            lea RDI,QWORD PTR [RBX+168]
            mov RSI,R8
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RSP+32],R10
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],R8
            call .L_437290

            mov R10,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+16]
.L_414841:

            movsx EAX,BYTE PTR [RBP+25]
            mov R11D,EAX
            and R11D,2
            cmp R11B,1
            sbb EDX,EDX
            shr EAX,31
            and EDX,16192
            mov DWORD PTR [RBX+264],EAX
            add EDX,16832
            cmp QWORD PTR [RBX+56],0
            mov DWORD PTR [RBX+136],EDX
            jne .L_414af0

            test R15D,R15D
            js .L_414af0

            mov RAX,-1
            mov QWORD PTR [RBX+152],RAX
            mov QWORD PTR [RBX+48],RAX
.L_414893:

            mov EDX,DWORD PTR [R13+8]
            test EDX,EDX
            je .L_4148cf

            movzx R15D,BYTE PTR [RSP+8]
            lea RCX,QWORD PTR [RBP+R9*1]
            not R15D
            and R15D,1
            add R14,R15
            add R14,R8
            test R12,R12
            je .L_414c00
.L_4148bc:

            cmp BYTE PTR [R13+41],0
            jne .L_414d48

            mov DWORD PTR [R13+8],0
.L_4148cf:

            test R12,R12
            mov DWORD PTR [RBX+160],1
            movzx EAX,BYTE PTR [R13+40]
            je .L_414b48

            test R11B,R11B
            je .L_414b00

            mov EDX,DWORD PTR [R12+32]
            test AL,AL
            lea ECX,DWORD PTR [RDX+1]
            mov DWORD PTR [R12+32],ECX
            je .L_41493a

            cmp QWORD PTR [R12+8],0
            je .L_414cc9
.L_41490d:

            cmp BYTE PTR [RBX+74],0
            je .L_41497a
.L_414913:

            cmp BYTE PTR [R12+72],0
            je .L_414b5a

            cmp QWORD PTR [RBX+80],0
            lea RDX,QWORD PTR [RIP+.L_416562]
            jne .L_414a00

            test R11B,R11B
            je .L_414b5a
.L_41493a:

            mov RAX,QWORD PTR [R13+104]
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [R13+104],RBX
            jmp .L_414968
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414950:

            lea RDX,QWORD PTR [RIP+.L_4167f8]
            mov ESI,84
            mov RDI,R10
            xor EAX,EAX
            xor EBX,EBX
            call .L_43f5d0
.L_414968:

            add RSP,56
.L_41496c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41497a:

            cmp BYTE PTR [R12+72],0
            jne .L_414b2a

            test R11B,R11B
            je .L_4149a0

            cmp WORD PTR [R12+74],0
            je .L_4149a0

            mov BYTE PTR [RBX+75],1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4149a0:

            mov RDX,QWORD PTR [RBX+80]
            test RDX,RDX
            je .L_41493a

            cmp QWORD PTR [R12+8],0
            je .L_4149f0

            test R11B,R11B
            jne .L_4149f0

            add DWORD PTR [R12+32],1
            lea RAX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBX+152],RAX
            mov QWORD PTR [RBX+48],RAX
            mov RAX,R12
            nop
            nop
.L_4149d0:

            cmp QWORD PTR [RAX+48],RDX
            je .L_4149f0

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            jne .L_4149d0

            cmp BYTE PTR [R12+72],0
            je .L_41493a

            nop
            nop
            nop
            nop
            nop
.L_4149f0:

            lea RDX,QWORD PTR [RIP+.L_41657e]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414a00:

            mov ESI,4294967295
            mov RDI,R10
            xor EAX,EAX
            call .L_43f5d0

            xor EBX,EBX
            jmp .L_414968
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414a20:

            test RCX,RCX
            je .L_414a2e

            test R15D,R15D
            js .L_414ae0
.L_414a2e:

            movsxd RDI,R15D
            mov RSI,QWORD PTR [R13+168]
            jmp .L_414706
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414a40:

            cmp R14,206
            ja .L_414b98

            mov RDX,R14
            and RDX,-2
            cmp RDX,4
            ja .L_414dbb
.L_414a5e:

            mov RDI,RDX
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],RDX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+192],RAX
            mov RDX,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+40]
            je .L_414d91

            cmp EDX,8
            mov ECX,EDX
            jae .L_414bd8

            test DL,4
            jne .L_414d7e

            test ECX,ECX
            je .L_414ad0

            movzx ESI,BYTE PTR [RBP+33]
            test CL,2
            mov BYTE PTR [RAX],SIL
            je .L_414ad0

            movzx ESI,WORD PTR [R8+RCX*1-2]
            mov WORD PTR [RAX+RCX*1-2],SI
            nop
            nop
            nop
.L_414ad0:

            mov QWORD PTR [RBX+200],RDX
            jmp .L_414841
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414ae0:

            lea RDX,QWORD PTR [RIP+.L_4167d0]
            jmp .L_414a00
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414af0:

            mov EAX,R15D
            mov QWORD PTR [RBX+152],RAX
            jmp .L_414893
          .byte 0x90
.L_414b00:

            test AL,AL
            je .L_41493a

            cmp QWORD PTR [R12+8],0
            jne .L_41490d

            cmp BYTE PTR [RBX+74],0
            jne .L_414913

            cmp BYTE PTR [R12+72],0
            je .L_4149a0
.L_414b2a:

            mov BYTE PTR [RBX+73],0
            jmp .L_4149a0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414b38:

            lea RDX,QWORD PTR [RIP+.L_4167a8]
            jmp .L_414a00
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414b48:

            test AL,AL
            je .L_41493a

            cmp BYTE PTR [RBX+74],0
            je .L_414cb9
.L_414b5a:

            lea RDX,QWORD PTR [RIP+.L_41654d]
            jmp .L_414a00
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414b70:

            mov RDX,R14
.L_414b73:

            cmp RDX,1
            je .L_414809

            lea RSI,QWORD PTR [RDX-1]
            movzx ECX,BYTE PTR [RBP+RDX*1+32]
            mov RAX,RDX
            mov RDX,RSI
            jmp .L_414802
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414b98:

            mov EAX,202
            mov EDX,206
.L_414ba2:

            cmp BYTE PTR [RBP+RAX*1+33],0
            jne .L_414a5e

            cmp BYTE PTR [R8+RDX*1-3],59
            jne .L_414a5e

            cmp BYTE PTR [R8+RDX*1-2],0
            jne .L_414a5e

            cmp BYTE PTR [R8+RDX*1-1],49
            cmove RDX,RAX
            jmp .L_414a5e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414bd8:

            mov ECX,EDX
            mov RDI,RAX
            mov RSI,QWORD PTR [R8+RCX*1-8]
            mov QWORD PTR [RAX+RCX*1-8],RSI
            lea ECX,DWORD PTR [RDX-1]
            mov RSI,R8
            shr ECX,3

            rep movsq 

            jmp .L_414ad0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414c00:

            mov RAX,RCX
            sub RAX,R14
            cmp RAX,6
            jle .L_4148bc

            cmp DWORD PTR [R14],17256531
            jne .L_4148bc

            cmp WORD PTR [R14+4],61374
            jne .L_4148bc

            movzx EDX,BYTE PTR [R14+6]
            mov BYTE PTR [R13+41],1
            add R14,7
            mov BYTE PTR [R13+43],DL
            nop
            nop
            nop
            nop
.L_414c40:

            add RDX,R14
            mov RDI,R10
            mov BYTE PTR [RBX+208],0
            mov BYTE PTR [RBX+240],0
            mov RSI,RBX
            mov BYTE PTR [RSP+16],R11B
            mov QWORD PTR [RSP+8],R10
            call .L_413af0

            test EAX,EAX
            mov R10,QWORD PTR [RSP+8]
            movzx R11D,BYTE PTR [RSP+16]
            jne .L_414dac

            cmp QWORD PTR [RBX+56],0
            je .L_4148cf

            mov EAX,DWORD PTR [RBX+136]
            and EAX,61440
            cmp EAX,40960
            jne .L_4148cf

            mov RAX,-1
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+152],RAX
            mov QWORD PTR [RBX+48],RAX
            jmp .L_4148cf
.L_414cb9:

            cmp QWORD PTR [RBX+80],0
            je .L_41493a

            jmp .L_4149f0
.L_414cc9:

            cmp QWORD PTR [R13+48],0
            jne .L_41490d

            mov RAX,QWORD PTR [RBX+168]
            test RAX,RAX
            je .L_41490d

            lea RDI,QWORD PTR [RIP+.L_41653a]
            mov ECX,9
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_414d1d

            lea RDI,QWORD PTR [RIP+.L_416543]
            mov RSI,RAX
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41490d
.L_414d1d:

            cmp QWORD PTR [RBX+80],0
            mov EAX,257
            mov QWORD PTR [R13+48],RBX
            mov WORD PTR [RBX+72],AX
            mov BYTE PTR [RBX+74],0
            mov DWORD PTR [R12+32],EDX
            jne .L_4149f0

            jmp .L_41493a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414d48:

            movzx EDX,BYTE PTR [R13+43]
            jmp .L_414c40
.L_414d52:

            cmp CL,49
            jne .L_414802

            mov RDX,RSI
            jmp .L_414b73
.L_414d63:

            lea RDX,QWORD PTR [RIP+.L_416502]
            mov ESI,12
            mov RDI,R10
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_414968
.L_414d7e:

            mov ESI,DWORD PTR [RBP+33]
            mov DWORD PTR [RAX],ESI
            mov ESI,DWORD PTR [R8+RCX*1-4]
            mov DWORD PTR [RAX+RCX*1-4],ESI
            jmp .L_414ad0
.L_414d91:

            lea RDX,QWORD PTR [RIP+.L_41651b]
            mov ESI,12
            mov RDI,R10
            xor EBX,EBX
            call .L_43f5d0

            jmp .L_414968
.L_414dac:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            jmp .L_414968
.L_414dbb:

            lea RAX,QWORD PTR [RDX-4]
            jmp .L_414ba2
.L_414dc4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414dd0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,120
.L_414de1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+128]
            mov QWORD PTR [RSP+24],RDX
            test RAX,RAX
            je .L_414e50

            mov RDX,QWORD PTR [RAX+16]
            test RDX,RDX
            mov QWORD PTR [RSI+128],RDX
            je .L_414e40
.L_414e12:

            mov RBX,QWORD PTR [RSP+24]
            mov QWORD PTR [RBX],RAX
            xor EAX,EAX
.L_414e1c:

            mov RBX,QWORD PTR [RSP+104]
            xor RBX,QWORD PTR FS:[40]
            jne .L_4159ac

            add RSP,120
.L_414e34:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_414e40:

            lea RDX,QWORD PTR [RSI+128]
            mov QWORD PTR [RSI+136],RDX
            jmp .L_414e12
.L_414e50:

            lea RAX,QWORD PTR [RSI+112]
            mov R13,RDI
            mov QWORD PTR [RSP+40],RAX
            lea RAX,QWORD PTR [RSI+144]
            mov QWORD PTR [RSP+64],RAX
.L_414e68:

            mov RDI,QWORD PTR [RSP+40]
            call .L_412620

            mov R15,RAX
            mov RAX,QWORD PTR [RSP+24]
            test R15,R15
            mov QWORD PTR [RAX],R15
            je .L_415800

            mov R8,QWORD PTR [R15+80]
            test R8,R8
            jne .L_415448

            mov EDX,DWORD PTR [R15+136]
            and EDX,61440
            cmp EDX,16384
            jne .L_4152e0

            mov RAX,QWORD PTR [R13+2472]
            mov RAX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RAX+224]
            mov QWORD PTR [RSP+16],RAX
            test RSI,RSI
            jne .L_4154d0
.L_414ecb:

            mov RAX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R15+48]
            mov R8,QWORD PTR [RAX+160]
            cmp R8,RSI
            ja .L_41593b

            mov RAX,QWORD PTR [R15+56]
            mov RBX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RSI+RAX*1]
            cmp RDX,QWORD PTR [RBX+176]
            ja .L_415965

            cmp R8,RSI
            jb .L_415390
.L_414f07:

            mov RSI,QWORD PTR [RSP+16]
            xor EDX,EDX
            mov RDI,R13
            mov RCX,QWORD PTR [RSI+168]
            lea RAX,QWORD PTR [RAX+RCX*1-1]
            div RCX
            xor EDX,EDX
            imul RAX,RCX
            mov RSI,RAX
            mov QWORD PTR [RSP+48],RAX
            call .L_4049e0

            test RAX,RAX
            mov R14,RAX
            je .L_41598c

            mov RAX,QWORD PTR [RSP+48]
            mov RBX,QWORD PTR [RSP+16]
            add QWORD PTR [RBX+160],RAX
            test RAX,RAX
            je .L_41510f

            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [RBX+112]
            xor R12D,R12D
            mov QWORD PTR [RSP],R15
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+72],RBP
.L_414f73:

            mov RAX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RAX+168]
            mov QWORD PTR [RSP+32],RAX
            lea RBX,QWORD PTR [R14+RAX*1]
            movzx EAX,BYTE PTR [R14]
            test AL,AL
            je .L_4150f3

            cmp RBX,R14
            jbe .L_4150f3

            add RAX,R14
            cmp RBX,RAX
            jb .L_4150f3

            mov R15,R12
            jmp .L_415072
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414fb8:

            mov RSI,QWORD PTR [RSP]
            mov RDX,R14
            mov RDI,R13
            call .L_414650

            test RAX,RAX
            mov R12,RAX
            je .L_415376

            cmp QWORD PTR [RAX+80],0
            jne .L_415090

            mov EBP,DWORD PTR [RAX+264]
            test EBP,EBP
            jne .L_4150b8

            test R15,R15
            je .L_415090
.L_414ff5:

            mov EDI,24
            call malloc@PLT

            test RAX,RAX
            je .L_415362

            mov RCX,QWORD PTR [R12+48]
            mov RSI,QWORD PTR [R12+56]
            mov RDI,QWORD PTR [R15+280]
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX],RCX
            mov QWORD PTR [RAX+8],RSI
            mov QWORD PTR [RDI],RAX
            add RAX,16
            cmp R12,R15
            mov QWORD PTR [R15+280],RAX
            je .L_4150e8

            add QWORD PTR [R15+56],RSI
            mov EAX,0
            test EBP,EBP
            cmove R15,RAX
.L_41504e:

            movzx EAX,BYTE PTR [R14]
            add R14,RAX
            movzx EAX,BYTE PTR [R14]
            test AL,AL
            je .L_4150f0

            cmp RBX,R14
            jbe .L_4150f0

            add RAX,R14
            cmp RBX,RAX
            jb .L_4150f0
.L_415072:

            cmp BYTE PTR [R14+32],1
            jne .L_414fb8

            cmp BYTE PTR [R14+33],1
            ja .L_414fb8

            jmp .L_41504e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415090:

            mov RCX,QWORD PTR [R12+48]
            mov RDX,R12
.L_415098:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_412700

            test EAX,EAX
            je .L_41504e
.L_4150a9:

            mov EAX,4294967266
            jmp .L_414e1c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4150b8:

            test R15,R15
            jne .L_414ff5

            mov QWORD PTR [RAX+272],0
            lea RAX,QWORD PTR [RAX+272]
            mov R15,R12
            mov QWORD PTR [R12+280],RAX
            jmp .L_414ff5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4150e8:

            mov RDX,R15
            jmp .L_415098
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4150f0:

            mov R12,R15
.L_4150f3:

            mov R14,RBX
            mov RBX,QWORD PTR [RSP+32]
            sub QWORD PTR [RSP+56],RBX
            jne .L_414f73

            mov R15,QWORD PTR [RSP]
            mov RBP,QWORD PTR [RSP+72]
.L_41510f:

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R13
            call .L_404a30

            mov R12,QWORD PTR [RSP+16]
            mov R8D,DWORD PTR [R12+64]
            mov RBX,QWORD PTR [R12+168]
            test R8D,R8D
            je .L_4155aa

            mov RAX,QWORD PTR [R12+56]
            mov RAX,QWORD PTR [RAX]
            cmp QWORD PTR [R12+160],RAX
            jne .L_4155aa

            mov QWORD PTR [RSP],R15
            mov QWORD PTR [RSP+8],RBP
.L_415156:

            xor EDX,EDX
            mov RSI,RBX
            mov RDI,R13
            call .L_4049e0

            test RAX,RAX
            mov RBP,RAX
            je .L_41598c

            mov R9,QWORD PTR [R12+56]
            nop
            nop
            nop
            nop
.L_415178:

            mov RSI,QWORD PTR [R9+8]
            mov EDX,DWORD PTR [RSI+64]
            mov ECX,DWORD PTR [RSI+68]
            lea EAX,DWORD PTR [RDX+RCX*1]
            cmp RBX,RAX
            jb .L_41590d

            mov R10D,DWORD PTR [R12+64]
            add RDX,RBP
            add RCX,RDX
            test R10D,R10D
            jle .L_4156a0

            sub R10D,1
            movsxd RAX,R10D
            mov DWORD PTR [R12+64],R10D
            shl RAX,4
            cmp R10D,1
            movdqu XMM0,XMMWORD PTR [R9+RAX*1]
            movq R15,XMM0
            movups XMMWORD PTR [R9],XMM0
            jle .L_4156a0

            mov R11D,1
            xor R14D,R14D
            xor EAX,EAX
            jmp .L_415236
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4151e0:

            movsxd R14,R8D
            shl R14,4
            mov R14,QWORD PTR [R9+R14*1]
            cmp RDI,R14
            jbe .L_41524a

            mov RDI,R14
.L_4151f3:

            cmp R15,RDI
            jbe .L_4156a0

            shl RAX,4
            movsxd RDI,R8D
            add RAX,R9
            shl RDI,4
            mov R14,QWORD PTR [RAX]
            add RDI,R9
            mov R11,QWORD PTR [RAX+8]
            movdqu XMM0,XMMWORD PTR [RDI]
            movups XMMWORD PTR [RAX],XMM0
            mov QWORD PTR [RDI],R14
            lea R14D,DWORD PTR [R8+R8*1]
            mov QWORD PTR [RDI+8],R11
            movsxd RAX,R8D
            lea R11D,DWORD PTR [R14+1]
            cmp R10D,R11D
            jle .L_4156a0
.L_415236:

            lea R8D,DWORD PTR [R14+2]
            movsxd RDI,R11D
            shl RDI,4
            cmp R10D,R8D
            mov RDI,QWORD PTR [R9+RDI*1]
            jg .L_4151e0
.L_41524a:

            mov R8D,R11D
            jmp .L_4151f3
          .byte 0x90
.L_415250:

            mov RDX,QWORD PTR [RAX+8]
            sub DWORD PTR [RDX+32],1
            mov RDX,QWORD PTR [R15+8]
            mov BYTE PTR [RAX+74],0
            mov QWORD PTR [RAX+8],RDX
            cmp BYTE PTR [RDX+75],0
            jne .L_415655

            mov RSI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RAX+136]
            mov R15,RAX
            mov QWORD PTR [RSI],RAX
            mov RCX,QWORD PTR [RAX+288]
            and EDX,61440
            test RCX,RCX
            je .L_4152e0

            lea RDI,QWORD PTR [RAX+288]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4152a0:

            mov RSI,QWORD PTR [RCX+24]
            test RSI,RSI
            mov QWORD PTR [RAX+288],RSI
            je .L_415718
.L_4152b4:

            mov RSI,QWORD PTR [RBP+136]
            mov QWORD PTR [RCX+16],0
            mov QWORD PTR [RSI],RCX
            add RCX,16
            mov QWORD PTR [RBP+136],RCX
            mov RCX,QWORD PTR [RAX+288]
            test RCX,RCX
            jne .L_4152a0

            mov R15,RAX
.L_4152e0:

            xor EAX,EAX
            cmp EDX,32768
            jne .L_414e1c

            nop
            nop
.L_4152f0:

            mov R12,QWORD PTR [R15+152]
            cmp R12,-1
            je .L_414e1c

            mov ECX,DWORD PTR [RBP+124]
            lea R13,QWORD PTR [RBP+128]
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RBP+128],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RBP+136],R13
            mov QWORD PTR [RSP+88],RAX
            test ECX,ECX
            jle .L_41534d

            mov RAX,QWORD PTR [RBP+112]
            mov RAX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+152]
            cmp RAX,-1
            je .L_4153bd

            cmp R12,RAX
            je .L_4153bd
.L_41534d:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],R15
            xor EAX,EAX
            test R15,R15
            sete AL
            jmp .L_414e1c
.L_415362:

            lea RDX,QWORD PTR [RIP+.L_416593]
            mov ESI,12
            mov RDI,R13
            call .L_43f5d0
.L_415376:

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R13
            call .L_404a30

            mov EAX,4294967266
            jmp .L_414e1c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415390:

            sub RSI,R8
            mov RDI,R13
            call .L_404a30

            test RAX,RAX
            js .L_4155a2

            mov RAX,QWORD PTR [R15+48]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSI+160],RAX
            mov RAX,QWORD PTR [R15+56]
            jmp .L_414f07
.L_4153bd:

            mov RDX,R12
            xor EBX,EBX
            mov RAX,R15
            mov R14,QWORD PTR [RSP+40]
            jmp .L_415423
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4153d0:

            mov RDX,QWORD PTR [RBP+136]
            mov QWORD PTR [RAX+16],0
            add EBX,1
            mov QWORD PTR [RDX],RAX
            mov QWORD PTR [RBP+136],RCX
.L_4153ec:

            mov RDI,R14
            call .L_412620

            mov EDX,DWORD PTR [RBP+124]
            test EDX,EDX
            jle .L_4154ed

            mov RDX,QWORD PTR [RBP+112]
            mov RDX,QWORD PTR [RDX]
            mov RDX,QWORD PTR [RDX+152]
            cmp R12,RDX
            je .L_41541c

            cmp RDX,-1
            jne .L_4154ed
.L_41541c:

            mov RDX,QWORD PTR [RAX+152]
.L_415423:

            cmp RDX,-1
            lea RCX,QWORD PTR [RAX+16]
            jne .L_4153d0

            mov RDX,QWORD PTR [RSP+88]
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RDX],RAX
            mov QWORD PTR [RSP+88],RCX
            jmp .L_4153ec
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415448:

            xor EDX,EDX
            jmp .L_415483

            nop
            nop
            nop
            nop
.L_415450:

            cmp RDX,RAX
            je .L_4154b0
.L_415455:

            test RDX,RDX
            cmove RDX,RAX
            cmp R8,QWORD PTR [RAX+48]
            je .L_415250

            mov RCX,QWORD PTR [RBP+152]
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RCX],RAX
            add RAX,24
            mov QWORD PTR [RBP+152],RAX
.L_415483:

            mov RAX,QWORD PTR [RBP+144]
            test RAX,RAX
            je .L_415450

            mov RCX,QWORD PTR [RAX+24]
            test RCX,RCX
            mov QWORD PTR [RBP+144],RCX
            jne .L_415450

            mov RBX,QWORD PTR [RSP+64]
            cmp RDX,RAX
            mov QWORD PTR [RBP+152],RBX
            jne .L_415455
.L_4154b0:

            mov EDX,DWORD PTR [R15+136]
            and EDX,61440
.L_4154bd:

            xor EAX,EAX
            cmp EDX,32768
            jne .L_414e1c

            jmp .L_4152f0
.L_4154d0:

            mov RDI,R13
            call .L_404a30

            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX+224],0
            jmp .L_414ecb
.L_4154ed:

            test EBX,EBX
            mov R15,RAX
            je .L_41534d

            cmp QWORD PTR [R15+152],-1
            lea RAX,QWORD PTR [RAX+16]
            je .L_4157ca

            mov RDX,QWORD PTR [RBP+136]
            mov QWORD PTR [R15+16],0
            add EBX,1
            mov QWORD PTR [RDX],R15
            mov QWORD PTR [RBP+136],RAX
.L_415526:

            mov RDX,QWORD PTR [RBP+128]
            mov RCX,QWORD PTR [RSP+80]
            test RDX,RDX
            je .L_41592d

            mov RAX,RDX
            nop
            nop
.L_415540:

            mov DWORD PTR [RAX+160],EBX
            mov RAX,QWORD PTR [RAX+16]
            test RAX,RAX
            jne .L_415540

            test RCX,RCX
            je .L_415576
.L_415554:

            mov RAX,QWORD PTR [RSP+88]
.L_415559:

            mov RDX,QWORD PTR [RBP+136]
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RBP+136],RAX
.L_41556a:

            mov RDX,QWORD PTR [RBP+128]
            test RDX,RDX
            je .L_41558d
.L_415576:

            mov RAX,QWORD PTR [RDX+16]
            test RAX,RAX
            mov QWORD PTR [RBP+128],RAX
            jne .L_41558d

            mov QWORD PTR [RBP+136],R13
.L_41558d:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],RDX
            xor EAX,EAX
            test RDX,RDX
            sete AL
            jmp .L_414e1c
.L_4155a2:

            test EAX,EAX
            jne .L_414e1c
.L_4155aa:

            cmp BYTE PTR [R15+72],0
            je .L_4155d0

            cmp BYTE PTR [R15+73],0
            jne .L_414e68

            mov EDX,DWORD PTR [R15+136]
            and EDX,61440
            jmp .L_4154bd
          .byte 0x66
          .byte 0x90
.L_4155d0:

            cmp BYTE PTR [R15+74],0
            je .L_415600

            mov RAX,QWORD PTR [RBP+152]
            mov QWORD PTR [R15+24],0
            mov QWORD PTR [RAX],R15
            add R15,24
            mov QWORD PTR [RBP+152],R15
            jmp .L_414e68
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415600:

            cmp BYTE PTR [R15+75],0
            je .L_4154b0

            mov RAX,QWORD PTR [R15+8]
            test RAX,RAX
            jne .L_41562d

            jmp .L_4154b0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415620:

            mov RAX,QWORD PTR [RAX+8]
            test RAX,RAX
            je .L_4154b0
.L_41562d:

            cmp BYTE PTR [RAX+74],0
            je .L_415620

            mov RDX,QWORD PTR [RAX+296]
            mov QWORD PTR [R15+24],0
            mov QWORD PTR [RDX],R15
            add R15,24
            mov QWORD PTR [RAX+296],R15
            jmp .L_414e68
.L_415655:

            mov BYTE PTR [RAX+75],1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415660:

            cmp BYTE PTR [RDX+74],0
            jne .L_415724

            mov RDX,QWORD PTR [RDX+8]
            test RDX,RDX
            jne .L_415660

            nop
            nop
            nop
            nop
            nop
.L_415678:

            mov RCX,QWORD PTR [RBP+160]
            lea RDX,QWORD PTR [RIP+.L_4168b8]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_414e1c
          .byte 0x90
.L_4156a0:

            mov RDI,R13
            call .L_413af0

            test EAX,EAX
            jne .L_4150a9

            mov EDI,DWORD PTR [R12+64]
            test EDI,EDI
            je .L_4156cf

            mov R9,QWORD PTR [R12+56]
            mov RAX,QWORD PTR [R12+160]
            cmp QWORD PTR [R9],RAX
            je .L_415178
.L_4156cf:

            mov RSI,RBX
            mov RDI,R13
            call .L_404a30

            mov RAX,QWORD PTR [R12+160]
            mov ESI,DWORD PTR [R12+64]
            add RAX,RBX
            test ESI,ESI
            mov QWORD PTR [R12+160],RAX
            je .L_415704

            mov RDX,QWORD PTR [R12+56]
            cmp RAX,QWORD PTR [RDX]
            je .L_415156
.L_415704:

            mov R15,QWORD PTR [RSP]
            mov RBP,QWORD PTR [RSP+8]
            jmp .L_4155aa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415718:

            mov QWORD PTR [RAX+296],RDI
            jmp .L_4152b4
.L_415724:

            mov RCX,QWORD PTR [RDX+296]
            mov QWORD PTR [RAX+24],0
            lea RDI,QWORD PTR [RAX+288]
            mov QWORD PTR [RCX],RAX
            lea RCX,QWORD PTR [RAX+24]
            mov QWORD PTR [RDX+296],RCX
            mov RCX,QWORD PTR [RAX+288]
            test RCX,RCX
            je .L_414e68

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415760:

            mov RDX,QWORD PTR [RCX+24]
            test RDX,RDX
            mov QWORD PTR [RAX+288],RDX
            je .L_4157c1
.L_415770:

            mov RDX,QWORD PTR [RCX+8]
            test RDX,RDX
            jne .L_41578d

            jmp .L_415678
          .byte 0x66
          .byte 0x90
.L_415780:

            mov RDX,QWORD PTR [RDX+8]
            test RDX,RDX
            je .L_415678
.L_41578d:

            cmp BYTE PTR [RDX+74],0
            je .L_415780

            mov RSI,QWORD PTR [RDX+296]
            mov QWORD PTR [RCX+24],0
            mov QWORD PTR [RSI],RCX
            add RCX,24
            mov QWORD PTR [RDX+296],RCX
            mov RCX,QWORD PTR [RAX+288]
            test RCX,RCX
            jne .L_415760

            jmp .L_414e68
.L_4157c1:

            mov QWORD PTR [RAX+296],RDI
            jmp .L_415770
.L_4157ca:

            mov RDX,QWORD PTR [RSP+88]
            cmp EBX,1
            mov QWORD PTR [R15+16],0
            mov QWORD PTR [RDX],R15
            mov QWORD PTR [RSP+88],RAX
            jne .L_415526

            mov RCX,QWORD PTR [RSP+80]
            test RCX,RCX
            jne .L_415559

            jmp .L_41556a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415800:

            mov RDX,QWORD PTR [RBP+144]
            test RDX,RDX
            je .L_4158d1

            mov RAX,QWORD PTR [RBP+48]
            test RAX,RAX
            je .L_415843

            cmp BYTE PTR [RAX+73],0
            je .L_415843

            mov RDX,QWORD PTR [RBP+136]
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RDX],RAX
            mov RDX,QWORD PTR [RBP+144]
            add RAX,16
            mov QWORD PTR [RBP+136],RAX
.L_415843:

            lea RDI,QWORD PTR [RBP+144]
            nop
            nop
            nop
            nop
            nop
            nop
.L_415850:

            test RDX,RDX
            je .L_4158d1

            mov RCX,QWORD PTR [RDX+24]
            test RCX,RCX
            mov QWORD PTR [RBP+144],RCX
            je .L_415901
.L_415869:

            mov RAX,QWORD PTR [RDX+288]
            lea RSI,QWORD PTR [RDX+288]
            test RAX,RAX
            je .L_4158f9

            nop
            nop
            nop
            nop
.L_415880:

            mov RCX,QWORD PTR [RAX+24]
            test RCX,RCX
            mov QWORD PTR [RDX+288],RCX
            je .L_4158c8
.L_415890:

            mov RCX,QWORD PTR [RBP+136]
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RCX],RAX
            add RAX,16
            mov QWORD PTR [RBP+136],RAX
            mov RAX,QWORD PTR [RDX+288]
            test RAX,RAX
            jne .L_415880

            mov RDX,QWORD PTR [RBP+144]
            jmp .L_415850
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4158c8:

            mov QWORD PTR [RDX+296],RSI
            jmp .L_415890
.L_4158d1:

            cmp QWORD PTR [RBP+128],0
            mov EAX,1
            je .L_414e1c

            mov RDX,QWORD PTR [RSP+24]
            mov RSI,RBP
            mov RDI,R13
            call .L_414dd0

            jmp .L_414e1c
.L_4158f9:

            mov RDX,RCX
            jmp .L_415850
.L_415901:

            mov QWORD PTR [RBP+152],RDI
            jmp .L_415869
.L_41590d:

            lea RDX,QWORD PTR [RIP+.L_4165ae]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_414e1c
.L_41592d:

            test RCX,RCX
            jne .L_415554

            jmp .L_41558d
.L_41593b:

            mov RCX,QWORD PTR [R15+168]
            lea RDX,QWORD PTR [RIP+.L_416820]
            mov R9,RSI
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_414e1c
.L_415965:

            mov RCX,QWORD PTR [R15+168]
            lea RDX,QWORD PTR [RIP+.L_416850]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_414e1c
.L_41598c:

            lea RDX,QWORD PTR [RIP+.L_416878]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_414e1c
.L_4159ac:

            call __stack_chk_fail@PLT
.L_4159b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4159c0:

            push R12
            push RBP
            mov RBP,RDX
            push RBX
.L_4159c7:

            mov RDX,QWORD PTR [RDX+8]
            mov R12,RDI
            mov RBX,RSI
            test RDX,RDX
            je .L_4159e0

            cmp QWORD PTR [RDX+200],0
            jne .L_415a48
.L_4159e0:

            mov RDI,QWORD PTR [RBX]
.L_4159e3:

            mov RDX,QWORD PTR [RBP+200]
            test RDX,RDX
            je .L_415a20

            lea RAX,QWORD PTR [RDX+RDI*1]
            cmp RAX,1024
            ja .L_415a78

            mov RSI,QWORD PTR [RBP+192]
            add RDI,R12
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP+200]
            add QWORD PTR [RBX],RAX
            xor EAX,EAX
.L_415a16:

            pop RBX
.L_415a17:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415a20:

            lea RAX,QWORD PTR [RDI+2]
            cmp RAX,1024
            ja .L_415a78

            mov BYTE PTR [R12+RDI*1],0
            mov RAX,QWORD PTR [RBX]
            mov BYTE PTR [R12+RAX*1+1],46
            xor EAX,EAX
            add QWORD PTR [RBX],2
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415a48:

            call .L_4159c0

            test EAX,EAX
            jne .L_415a78

            mov RAX,QWORD PTR [RBX]
            mov BYTE PTR [R12+RAX*1],0
            mov RAX,QWORD PTR [RBX]
            mov BYTE PTR [R12+RAX*1+1],47
            mov RAX,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RAX+2]
            mov QWORD PTR [RBX],RDI
            jmp .L_4159e3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415a78:

            mov EAX,4294967295
            jmp .L_415a16
.L_415a7f:

            nop
.L_415a80:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_415a94:

            mov R8D,DWORD PTR [RDI+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            test R8D,R8D
            mov RBX,QWORD PTR [RAX]
            jne .L_415ac9

            lea RAX,QWORD PTR [RIP+.L_4165c7]
            mov DWORD PTR [RDI+16],262144
            mov QWORD PTR [RDI+24],RAX
.L_415ac9:

            cmp QWORD PTR [RBX+160],0
            jne .L_415b90

            mov EDI,DWORD PTR [RBX+4]
            lea R14,QWORD PTR [RBX+188]
            movsxd RSI,DWORD PTR [RBX+188]
            test EDI,EDI
            jne .L_415ea0

            mov BYTE PTR [RBX+42],0
            mov R15,R14
.L_415af7:

            shl RSI,11
            mov RDI,RBP
            call .L_404a30

            test RAX,RAX
            js .L_415ed0

            mov ESI,DWORD PTR [R15+4]
            xor EDX,EDX
            mov QWORD PTR [RBX+160],RAX
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_416298

            movzx R13D,BYTE PTR [RBX+42]
            xor ESI,ESI
            mov BYTE PTR [RBX+42],0
            mov RDX,RAX
            mov RDI,RBP
            call .L_414650

            test RAX,RAX
            je .L_415fa8

            cmp R14,R15
            mov BYTE PTR [RBX+42],R13B
            je .L_415fb8
.L_415b56:

            mov RCX,QWORD PTR [RAX+48]
            lea RSI,QWORD PTR [RBX+112]
            mov RDX,RAX
            mov RDI,RBP
            call .L_412700

            test EAX,EAX
            jne .L_415fa8

            cmp BYTE PTR [RBX+40],0
            je .L_415b90

            lea RAX,QWORD PTR [RIP+.L_416938]
            mov DWORD PTR [RBP+16],262145
            mov QWORD PTR [RBP+24],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415b90:

            mov RDX,RSP
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RSP],0
            call .L_414dd0

            test EAX,EAX
            mov R13D,EAX
            jne .L_415e70

            mov R14,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RBX+224]
            cmp QWORD PTR [R14+56],0
            jne .L_415ee0

            mov RAX,QWORD PTR [RBX+160]
            test RSI,RSI
            mov QWORD PTR [R14+48],RAX
            jne .L_415fd0
.L_415bdb:

            cmp BYTE PTR [RBX+42],0
            je .L_415f26
.L_415be5:

            cmp QWORD PTR [RBX+488],0
            je .L_4161f0
.L_415bf3:

            cmp QWORD PTR [RBX+496],0
            je .L_416220
.L_415c01:

            cmp QWORD PTR [RBX+512],0
            je .L_415f78
.L_415c0f:

            mov RDI,QWORD PTR [RBX+496]
            mov RDX,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RBX+504]
            mov QWORD PTR [RBX+504],0
            call .L_4159c0

            test EAX,EAX
            jne .L_416277

            mov RCX,QWORD PTR [RBX+488]
            mov RDX,QWORD PTR [RBX+504]
            mov RDI,R12
            mov RSI,QWORD PTR [RBX+496]
            call .L_4466d0

            test EAX,EAX
            mov R13D,EAX
            je .L_415c96

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4162b9

            mov RDI,QWORD PTR [RBX+488]
            mov R13D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_416960]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0
.L_415c96:

            mov RDX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RDX+56]
            mov QWORD PTR [RBX+208],0
            mov QWORD PTR [RBX+216],RAX
            add RAX,QWORD PTR [RDX+48]
            cmp RAX,QWORD PTR [RBX+176]
            ja .L_416240

            mov ESI,DWORD PTR [RDX+136]
            mov RDI,R12
            call .L_446590

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+140]
            call .L_446950

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+144]
            call .L_445fa0

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+160]
            call .L_446630

            mov RAX,QWORD PTR [RSP]
            mov ECX,DWORD PTR [RAX+88]
            test ECX,ECX
            jne .L_415f60

            mov RDI,R12
            call .L_446300
.L_415d1c:

            mov RAX,QWORD PTR [RSP]
            xor EDX,EDX
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+104]
            call .L_4465a0

            mov RAX,QWORD PTR [RSP]
            xor EDX,EDX
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+120]
            call .L_446330

            mov RAX,QWORD PTR [RSP]
            xor EDX,EDX
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+112]
            call .L_446210

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+128]
            call .L_446710

            mov RSI,QWORD PTR [RBX+216]
            mov RDI,R12
            call .L_446770

            mov RDX,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RDX+216]
            test RSI,RSI
            je .L_415d90

            mov RDI,R12
            call .L_446850

            mov RDX,QWORD PTR [RSP]
.L_415d90:

            mov RAX,QWORD PTR [RDX+152]
            cmp RAX,-1
            je .L_415da7

            cmp RAX,QWORD PTR [RBX+72]
            je .L_416110
.L_415da7:

            mov EAX,DWORD PTR [RDX+136]
            and EAX,61440
            cmp EAX,16384
            je .L_415dca

            mov RSI,QWORD PTR [RDX+48]
            cmp RSI,QWORD PTR [RBX+160]
            jb .L_416180
.L_415dca:

            mov EAX,DWORD PTR [RDX+244]
            test EAX,EAX
            mov DWORD PTR [RBX+232],EAX
            jne .L_4160b0
.L_415dde:

            cmp BYTE PTR [RBX+42],0
            mov RAX,QWORD PTR [RDX+152]
            mov QWORD PTR [RBX+72],RAX
            jne .L_416080

            mov RBP,QWORD PTR [RBX+16]
            xor EDX,EDX
            mov QWORD PTR [RBX+88],0
            test RBP,RBP
            je .L_415e11

            mov RDI,RBP
            call strlen@PLT

            mov RDX,RAX
.L_415e11:

            lea RDI,QWORD PTR [RBX+80]
            mov RSI,RBP
            call .L_437290
.L_415e1d:

            mov RAX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RAX+272]
            test RAX,RAX
            mov QWORD PTR [RBX+480],RAX
            je .L_415e3f

            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+216],RAX
.L_415e3f:

            mov RDI,R12
            call .L_444e70

            cmp EAX,16384
            jne .L_415e70

            mov RAX,QWORD PTR [RSP]
            mov RDI,R12
            mov ESI,DWORD PTR [RAX+32]
            add ESI,2
            call .L_446630

            mov QWORD PTR [RBX+216],0
            nop
            nop
            nop
            nop
            nop
.L_415e70:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_416308

            add RSP,24
.L_415e8b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415ea0:

            cmp BYTE PTR [RBX+42],0
            je .L_416319

            mov EAX,DWORD PTR [RBX+196]
            mov R15,R14
            cmp EAX,ESI
            jge .L_415af7

            lea R15,QWORD PTR [RBX+196]
            movsxd RSI,EAX
            jmp .L_415af7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415ed0:

            test EAX,EAX
            mov R13D,EAX
            jne .L_415e70

            jmp .L_415b90
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415ee0:

            test RSI,RSI
            jne .L_415fd0

            mov RAX,QWORD PTR [RBX+160]
            mov RSI,QWORD PTR [R14+48]
            cmp RAX,RSI
            jae .L_415bdb
.L_415efd:

            sub RSI,RAX
            mov RDI,RBP
            call .L_404a30

            test RAX,RAX
            js .L_4161d8

            cmp BYTE PTR [RBX+42],0
            mov RAX,QWORD PTR [R14+48]
            mov QWORD PTR [RBX+160],RAX
            jne .L_415be5
.L_415f26:

            mov RSI,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RBX+16]
            xor EDX,EDX
            call .L_413160

            test RAX,RAX
            je .L_416277

            mov QWORD PTR [RBX+24],0
            mov RSI,RAX
            mov RDI,R12
            call .L_446640

            jmp .L_415c96
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415f60:

            mov RSI,QWORD PTR [RAX+96]
            xor EDX,EDX
            mov RDI,R12
            call .L_4462a0

            jmp .L_415d1c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415f78:

            mov EDI,1024
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+512],RAX
            jne .L_415c0f
.L_415f92:

            lea RDX,QWORD PTR [RIP+.L_4165d8]
.L_415f99:

            mov ESI,12
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0
.L_415fa8:

            mov R13D,4294967266
            jmp .L_415e70
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415fb8:

            movzx EDX,BYTE PTR [RBX+40]
            test DL,DL
            je .L_416000

            test R13B,R13B
            je .L_416000

            mov BYTE PTR [RBX+42],0
            jmp .L_415b56
          .byte 0x66
          .byte 0x90
.L_415fd0:

            mov RDI,RBP
            call .L_404a30

            mov RAX,QWORD PTR [RBX+160]
            mov RSI,QWORD PTR [R14+48]
            mov QWORD PTR [RBX+224],0
            cmp RAX,RSI
            jb .L_415efd

            jmp .L_415bdb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416000:

            test DL,DL
            jne .L_415b56

            test R13B,R13B
            je .L_415b56

            movsxd RSI,DWORD PTR [RBX+196]
            mov RDI,RBP
            shl RSI,11
            sub RSI,QWORD PTR [RBX+160]
            call .L_404a30

            test RAX,RAX
            js .L_415ed0

            add QWORD PTR [RBX+160],RAX
            mov ESI,DWORD PTR [RBX+200]
            xor EDX,EDX
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_416298

            xor ESI,ESI
            mov BYTE PTR [RBX+42],0
            mov RDX,RAX
            mov RDI,RBP
            call .L_414650

            test RAX,RAX
            je .L_415fa8

            mov BYTE PTR [RBX+42],R13B
            jmp .L_415b56
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416080:

            mov RDI,QWORD PTR [RBX+512]
            mov RSI,QWORD PTR [RBX+496]
            mov RDX,QWORD PTR [RBX+504]
            call memcpy@PLT

            mov RAX,QWORD PTR [RBX+504]
            mov QWORD PTR [RBX+520],RAX
            jmp .L_415e1d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4160b0:

            mov EAX,DWORD PTR [RDX+248]
            mov RSI,QWORD PTR [RDX+256]
            mov RDI,R12
            mov DWORD PTR [RBX+248],0
            mov DWORD PTR [RBX+272],0
            mov QWORD PTR [RBX+296],0
            mov DWORD PTR [RBX+304],0
            mov DWORD PTR [RBX+236],EAX
            mov QWORD PTR [RBX+240],RSI
            mov QWORD PTR [RBX+336],0
            call .L_446770

            mov RDX,QWORD PTR [RSP]
            jmp .L_415dde
          .byte 0x90
.L_416110:

            cmp BYTE PTR [RBX+42],0
            je .L_4161b0

            mov RCX,QWORD PTR [RBX+488]
            mov RDX,QWORD PTR [RBX+520]
            mov RDI,R12
            mov RSI,QWORD PTR [RBX+512]
            call .L_4461d0

            test EAX,EAX
            je .L_4161bc

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_41630d

            mov RDI,QWORD PTR [RBX+488]
            mov R13D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_4169b8]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_4161bc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416180:

            xor EDX,EDX
            mov RDI,RBP
            call .L_404dd0

            mov RDX,QWORD PTR [RSP]
            mov R9,QWORD PTR [RDX+48]
            cmp R9,RAX
            jne .L_4162c5

            mov QWORD PTR [RBX+160],R9
            jmp .L_415dca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4161b0:

            mov RSI,QWORD PTR [RBX+80]
            mov RDI,R12
            call .L_446090
.L_4161bc:

            mov RDI,R12
            call .L_446790

            mov QWORD PTR [RBX+216],0
            jmp .L_415e70
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4161d8:

            test EAX,EAX
            je .L_415bdb

            mov R13D,EAX
            jmp .L_415e70
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4161f0:

            lea RSI,QWORD PTR [RIP+.L_4165cf]
            mov EDX,1
            mov RDI,RBP
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [RBX+488],RAX
            jne .L_415bf3

            jmp .L_415fa8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416220:

            mov EDI,1024
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+496],RAX
            jne .L_415c01

            jmp .L_415f92
          .byte 0x90
.L_416240:

            mov RDI,R12
            mov R13D,4294967276
            call .L_445450

            lea RDX,QWORD PTR [RIP+.L_416998]
            mov RCX,RAX
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            mov QWORD PTR [RBX+216],0
            jmp .L_415e70
.L_416277:

            lea RDX,QWORD PTR [RIP+.L_4165e2]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R13D,4294967266
            call .L_43f5d0

            jmp .L_415e70
.L_416298:

            lea RDX,QWORD PTR [RIP+.L_416878]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov R13D,4294967266
            call .L_43f5d0

            jmp .L_415e70
.L_4162b9:

            lea RDX,QWORD PTR [RIP+.L_4165f7]
            jmp .L_415f99
.L_4162c5:

            mov RCX,QWORD PTR [RDX+152]
            mov R8,QWORD PTR [RBX+16]
            sub RSP,8
.L_4162d4:

            lea RDX,QWORD PTR [RIP+.L_4169f0]
            push QWORD PTR [RBX+160]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            mov R13D,4294967276
            call .L_43f5d0

            mov QWORD PTR [RBX+216],0
            pop RAX
            pop RDX
            jmp .L_415e70
.L_416308:

            call __stack_chk_fail@PLT
.L_41630d:

            lea RDX,QWORD PTR [RIP+.L_41660e]
            jmp .L_415f99
.L_416319:

            mov R15,R14
            jmp .L_415af7
.L_416321:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416330:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_416a20]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
            call .L_443f50

            cmp EAX,-30
            je .L_416416

            mov ESI,2576
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_41641d

            mov QWORD PTR [RAX+128],0
            lea RAX,QWORD PTR [RAX+128]
            push 0
            push 0
.L_416389:

            lea R9,QWORD PTR [RIP+.L_415a80]
            lea R8,QWORD PTR [RIP+.L_413050]
            mov QWORD PTR [RBX+136],RAX
            lea RAX,QWORD PTR [RBX+144]
            lea RCX,QWORD PTR [RIP+.L_413410]
            lea RDX,QWORD PTR [RIP+.L_416641]
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RBX+152],RAX
            movabs RAX,6817879648
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX],RAX
            lea RAX,QWORD PTR [RIP+.L_413200]
            mov DWORD PTR [RBX+8],1
            push RAX
.L_4163e7:

            lea RAX,QWORD PTR [RIP+.L_412610]
            push 0
            push RAX
            lea RAX,QWORD PTR [RIP+.L_412850]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_416416

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_416416:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_41641d:

            lea RDX,QWORD PTR [RIP+.L_416625]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_416416
.L_41643a:
          .string "Out of memory"
.L_416448:
          .string "Truncated zisofs file body"
.L_416463:
          .string "Illegal zisofs file body"
.L_41647c:
          .string "Illegal zisofs block pointers"
.L_41649a:
          .string "1.2.11"
.L_4164a1:
          .string "Truncated input file"
.L_4164b6:
          .string "joliet"
.L_4164bd:
          .byte 0x6f
          .byte 0x66
          .byte 0x66
          .byte 0x0
.L_4164c1:
          .string "ignore"
.L_4164c8:
          .string "disable"
.L_4164d0:
          .byte 0x30
          .byte 0x0
.L_4164d2:
          .string "rockridge"
.L_4164dc:
          .string "Rockridge"
.L_4164e6:
          .string "/"
.L_4164e8:
          .string "."
          .byte 0x43
          .byte 0x44
          .byte 0x30
          .byte 0x30
          .byte 0x31
          .byte 0x0
.L_4164f0:
          .zero 1
.L_4164f1:
          .string ".."
.L_4164f4:
          .string "ROOT"
.L_4164f9:
          .string "hostname"
.L_416502:
          .string "No memory for file entry"
.L_41651b:
          .string "No memory for file name"
          .byte 0x53
          .byte 0x50
          .byte 0x7
          .byte 0x1
          .byte 0xbe
          .byte 0xef
          .byte 0x0
.L_41653a:
          .string "rr_moved"
.L_416543:
          .string ".rr_moved"
.L_41654d:
          .string "Invalid Rockridge RE"
.L_416562:
          .string "Invalid Rockridge RE and CL"
.L_41657e:
          .string "Invalid Rockridge CL"
.L_416593:
          .string "No memory for multi extent"
.L_4165ae:
          .string "Malformed CE information"
.L_4165c7:
          .string "ISO9660"
.L_4165cf:
          .string "UTF-16BE"
.L_4165d8:
          .string "No memory"
.L_4165e2:
          .string "Pathname is too long"
.L_4165f7:
          .string "No memory for Pathname"
.L_41660e:
          .string "No memory for Linkname"
.L_416625:
          .string "Can\'t allocate iso9660 data"
.L_416641:
          .string "iso9660"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416650:
          .string "Ignoring out-of-order file (%s) %jd < %jd"
          .zero 6
.L_416680:
          .string "No memory for zisofs decompression"
          .zero 5
.L_4166a8:
          .string "Illegal zisofs block pointers(cannot seek)"
          .zero 5
.L_4166d8:
          .string "Can\'t initialize zisofs decompression."
          .zero 1
.L_416700:
          .string "zisofs decompression failed (%d)"
          .zero 7
.L_416728:
          .string "Failed to clean up zlib decompressor"
          .zero 3
.L_416750:
          .string "Invalid parameter in SUSP \"CE\" extension"
          .zero 7
.L_416780:
          .string "Invalid length of directory record"
          .zero 5
.L_4167a8:
          .string "Invalid length of file identifier"
          .zero 6
.L_4167d0:
          .string "Invalid location of extent of file"
          .zero 5
.L_4167f8:
          .string "Directory structure contains loop"
          .zero 6
.L_416820:
          .string "Ignoring out-of-order directory (%s) %jd > %jd"
          .zero 1
.L_416850:
          .string "Directory is beyond end-of-media: %s"
          .zero 3
.L_416878:
          .string "Failed to read full block when scanning ISO9660 directory list"
          .zero 1
.L_4168b8:
          .string "Failed to connect \'CL\' pointer to \'RE\' rr_moved pointer of Rockridge extensions: current position = %jd, CL offset = %jd"
          .zero 7
.L_416938:
          .string "ISO9660 with Rockridge extensions"
          .zero 6
.L_416960:
          .string "Pathname cannot be converted from %s to current locale."
.L_416998:
          .string "File is beyond end-of-media: %s"
.L_4169b8:
          .string "Linkname cannot be converted from %s to current locale."
.L_4169f0:
          .string "Ignoring out-of-order file @%jx (%s) %jd < %jd"
          .zero 1
.L_416a20:
          .string "archive_read_support_format_iso9660"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416a48:
          .long .L_413f78-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ef0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413da0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413d80-.L_416a48
          .long .L_413d48-.L_416a48
          .long .L_413bf8-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413ba0-.L_416a48
          .long .L_413b90-.L_416a48
.L_416aa8:
          .long .L_4143b3-.L_416aa8
          .long .L_4143f0-.L_416aa8
          .long .L_4143a3-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_414393-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41436b-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_414353-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_41433a-.L_416aa8
          .long .L_414305-.L_416aa8
          .zero 4
.L_416b30:
          .byte 0x37
          .byte 0xe4
          .byte 0x53
          .byte 0x96
          .byte 0xc9
          .byte 0xdb
          .byte 0xd6
          .byte 0x7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416b40:

            movzx ECX,BYTE PTR [RDI+5]
            lea EAX,DWORD PTR [RCX-45]
            cmp AL,77
            ja .L_416bd0

            lea RDX,QWORD PTR [RIP+.L_41a780]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416b68:

            mov EAX,1
.L_416b6d:

            ret 
          .byte 0x90
.L_416b70:

            cmp BYTE PTR [RDI],0
            mov EAX,4
            je .L_416b6d

            cmp BYTE PTR [RDI+2],45
            jne .L_416b6d

            cmp BYTE PTR [RDI+3],108
            jne .L_416b6d

            cmp BYTE PTR [RDI+6],45
            jne .L_416b6d

            movzx EDX,BYTE PTR [RDI+4]
            cmp DL,104
            je .L_416bd6

            cmp DL,122
            jne .L_416b6d

            cmp BYTE PTR [RDI+20],0
            jne .L_416b6d

            lea EDX,DWORD PTR [RCX-52]
            cmp DL,1
            jbe .L_416bad

            cmp CL,115
            jne .L_416b6d
.L_416bad:

            xor EAX,EAX
            ret 
.L_416bb0:

            mov EAX,3
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416bc0:

            mov EAX,2
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416bd0:

            mov EAX,4
            ret 
.L_416bd6:

            cmp CL,115
            je .L_416b6d

            movzx EDX,BYTE PTR [RDI+20]
            xor EAX,EAX
            test DL,DL
            je .L_416b6d

            cmp DL,3
            mov EAX,4
            ja .L_416b6d

            xor EAX,EAX
            cmp BYTE PTR [RDI+19],32
            setne AL
            shl RAX,2
            ret 
.L_416c01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416c10:

            mov R9,QWORD PTR [RDI+120]
            mov EAX,DWORD PTR [RDI+92]
            mov ECX,DWORD PTR [RDI+4]
.L_416c1a:

            cmp ECX,EDX
            jg .L_416c44
.L_416c1e:

            sub EAX,1
            sub EDX,ECX
            lea R8D,DWORD PTR [RAX+1]
            test R8D,R8D
            jle .L_416c60

            cmp DWORD PTR [RDI+100],EDX
            jle .L_416c60

            movsxd RDX,EDX
            bt ESI,EAX
            lea RDX,QWORD PTR [R9+RDX*4]
            jae .L_416c50

            movzx EDX,WORD PTR [RDX]
            cmp ECX,EDX
            jle .L_416c1e
.L_416c44:

            mov EAX,EDX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416c50:

            movzx EDX,WORD PTR [RDX+2]
            jmp .L_416c1a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416c60:

            xor EAX,EAX
            ret 
.L_416c63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416c70:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
            mov RBX,QWORD PTR [RAX]
            mov EAX,1
            cmp BYTE PTR [RBX+293],0
            jne .L_416ca3

            test BYTE PTR [RBX+64],8
            je .L_416c9c

            movzx ECX,WORD PTR [RBX+24]
            cmp WORD PTR [RBX+194],CX
            jne .L_416ca8
.L_416c9c:

            mov BYTE PTR [RBX+293],1
.L_416ca3:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416ca8:

            lea RDX,QWORD PTR [RIP+.L_41ad28]
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov EAX,4294967276
            mov BYTE PTR [RBX+293],1
            jmp .L_416ca3
.L_416cc9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416cd0:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            jne .L_416d28
.L_416cea:

            xor R12D,R12D
            cmp BYTE PTR [RBX+293],0
            je .L_416d00
.L_416cf6:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_416d00:

            mov RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            call .L_404a30

            test RAX,RAX
            js .L_416d37

            mov EAX,257
            mov WORD PTR [RBX+292],AX
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416d28:

            call .L_404a30

            mov QWORD PTR [RBX+16],0
            jmp .L_416cea
.L_416d37:

            mov R12D,4294967266
            jmp .L_416cf6
.L_416d3f:

            nop
.L_416d40:

            push R15
            push R14
            mov EDX,32768
            push R13
            push R12
            xor ESI,ESI
            push RBP
            push RBX
            mov RBX,RDI
            xor R9D,R9D
            sub RSP,184
.L_416d5e:

            lea R8,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+96]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            mov EAX,1
.L_416d80:

            mov ECX,DWORD PTR [RBX+RAX*4+12]
            mov DWORD PTR [R8+RAX*4],ESI
            mov DWORD PTR [RDI+RAX*4],EDX
            test ECX,ECX
            je .L_416d97

            imul ECX,EDX
            mov R9D,EAX
            add ESI,ECX
.L_416d97:

            add RAX,1
            sar EDX,1
            cmp RAX,17
            jne .L_416d80

            cmp ESI,65536
            je .L_416de0
.L_416dab:

            xor EAX,EAX
.L_416dad:

            mov RBX,QWORD PTR [RSP+168]
            xor RBX,QWORD PTR FS:[40]
            jne .L_417150

            add RSP,184
.L_416dcb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416de0:

            cmp DWORD PTR [RBX+96],R9D
            jl .L_416dab

            cmp R9D,15
            mov DWORD PTR [RBX+88],R9D
            jg .L_416e20

            mov ECX,16
            sub ECX,R9D
            test R9D,R9D
            je .L_416e20

            lea EAX,DWORD PTR [R9-1]
            lea RDX,QWORD PTR [RAX*4+8]
            mov EAX,4
            nop
            nop
.L_416e10:

            sar DWORD PTR [R8+RAX*1],CL
            sar DWORD PTR [RDI+RAX*1],CL
            add RAX,4
            cmp RAX,RDX
            jne .L_416e10
.L_416e20:

            xor R12D,R12D
            cmp R9D,10
            mov R14,QWORD PTR [RBX+112]
            jg .L_416fd7
.L_416e31:

            mov EBP,DWORD PTR [RBX+4]
            mov DWORD PTR [RBX+92],R12D
            mov R15,QWORD PTR [RBX+80]
            mov DWORD PTR [RBX+100],0
            test EBP,EBP
            jle .L_416fcd

            lea EAX,DWORD PTR [RBP-1]
            lea ECX,DWORD PTR [R12-1]
            mov R8D,1
            mov R13,R15
            lea R9,QWORD PTR [R15+RAX*1+1]
            shl R8D,CL
.L_416e64:

            movzx EAX,BYTE PTR [R13]
            test AL,AL
            je .L_416fc0

            movsxd RDX,EAX
            cmp EAX,10
            movsxd RDI,DWORD PTR [RSP+RDX*4+16]
            mov ECX,DWORD PTR [RSP+RDX*4+96]
            lea ESI,DWORD PTR [RDI+RCX*1]
            mov DWORD PTR [RSP+RDX*4+16],ESI
            jle .L_416f48

            mov ECX,R12D
            mov EDX,EDI
            sar EDX,CL
            movsxd RDX,EDX
            lea RCX,QWORD PTR [R14+RDX*2]
            movzx EDX,WORD PTR [RCX]
            test DX,DX
            jne .L_41706c

            movsxd RDX,DWORD PTR [RBX+100]
            mov R10,QWORD PTR [RBX+120]
            lea ESI,DWORD PTR [RDX+RBP*1]
            mov WORD PTR [RCX],SI
            lea ESI,DWORD PTR [RDX+1]
            cmp ESI,DWORD PTR [RBX+104]
            lea RCX,QWORD PTR [R10+RDX*4]
            mov DWORD PTR [RBX+100],ESI
            jg .L_416dab

            mov DWORD PTR [RCX],0
.L_416ece:

            sub EAX,11
            mov EDX,R8D
            jne .L_416f1f

            jmp .L_41704d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416ee0:

            movzx ESI,WORD PTR [RCX]
            cmp ESI,EBP
            jge .L_417038

            movsxd RSI,DWORD PTR [RBX+100]
            lea R11D,DWORD PTR [RSI+RBP*1]
            mov WORD PTR [RCX],R11W
.L_416ef7:

            lea R11D,DWORD PTR [RSI+1]
            cmp R11D,DWORD PTR [RBX+104]
            lea RCX,QWORD PTR [R10+RSI*4]
            mov DWORD PTR [RBX+100],R11D
            jg .L_416dab

            shr DX,1
            sub EAX,1
            mov DWORD PTR [RCX],0
            je .L_41704d
.L_416f1f:

            movzx ESI,DX
            test ESI,EDI
            jne .L_416ee0

            movzx ESI,WORD PTR [RCX+2]
            cmp ESI,EBP
            jge .L_417038

            movsxd RSI,DWORD PTR [RBX+100]
            lea R11D,DWORD PTR [RSI+RBP*1]
            mov WORD PTR [RCX+2],R11W
            jmp .L_416ef7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416f48:

            cmp ESI,1024
            jg .L_416dab

            cmp ECX,7
            lea RDI,QWORD PTR [R14+RDI*2]
            jle .L_4170ad

            lea EDX,DWORD PTR [RCX-8]
            mov EAX,R13D
            sub EAX,R15D
            movsxd R10,EDX
            add R10,R10
            cmp EDX,7
            lea RSI,QWORD PTR [RDI+R10*1]
            mov WORD PTR [RSI],AX
            mov WORD PTR [RSI+2],AX
            mov WORD PTR [RSI+4],AX
            mov WORD PTR [RSI+6],AX
            mov WORD PTR [RSI+8],AX
            mov WORD PTR [RSI+10],AX
            mov WORD PTR [RSI+12],AX
            mov WORD PTR [RSI+14],AX
            jg .L_4170ed
.L_416f9c:

            test EDX,EDX
            je .L_416fc0

            movsxd RDX,EDX
            mov QWORD PTR [RSP+8],R9
            mov DWORD PTR [RSP+4],R8D
            add RDX,RDX
            call memcpy@PLT

            mov R8D,DWORD PTR [RSP+4]
            mov R9,QWORD PTR [RSP+8]
            nop
.L_416fc0:

            add R13,1
            cmp R9,R13
            jne .L_416e64
.L_416fcd:

            mov EAX,1
            jmp .L_416dad
.L_416fd7:

            lea R12D,DWORD PTR [R9-10]
            mov EAX,4
.L_416fe0:

            mov ECX,R12D
            sar DWORD PTR [R8+RAX*1],CL
            sar DWORD PTR [RDI+RAX*1],CL
            add RAX,4
            cmp RAX,44
            jne .L_416fe0

            lea RDX,QWORD PTR [R14+2048]
            mov EAX,DWORD PTR [RSP+136]
            imul EAX,DWORD PTR [RBX+52]
            add EAX,DWORD PTR [RSP+56]
            lea RAX,QWORD PTR [R14+RAX*2]
            cmp RAX,RDX
            jae .L_416e31

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417020:

            add RAX,2
            xor ECX,ECX
            cmp RAX,RDX
            mov WORD PTR [RAX-2],CX
            jb .L_417020

            jmp .L_416e31
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417038:

            sub ESI,EBP
            shr DX,1
            sub EAX,1
            movsxd RSI,ESI
            lea RCX,QWORD PTR [R10+RSI*4]
            jne .L_416f1f
.L_41704d:

            movzx EDX,DX
            test EDX,EDI
            je .L_417093

            cmp WORD PTR [RCX],0
            jne .L_416dab

            mov EAX,R13D
            sub EAX,R15D
            mov WORD PTR [RCX],AX
            jmp .L_416fc0
.L_41706c:

            cmp EDX,EBP
            jl .L_416dab

            mov ECX,DWORD PTR [RBX+100]
            add ECX,EBP
            cmp EDX,ECX
            jge .L_416dab

            mov R10,QWORD PTR [RBX+120]
            sub EDX,EBP
            movsxd RDX,EDX
            lea RCX,QWORD PTR [R10+RDX*4]
            jmp .L_416ece
.L_417093:

            cmp WORD PTR [RCX+2],0
            jne .L_416dab

            mov EAX,R13D
            sub EAX,R15D
            mov WORD PTR [RCX+2],AX
            jmp .L_416fc0
.L_4170ad:

            mov EDX,R13D
            movsxd RAX,ECX
            sub EDX,R15D
            cmp ECX,1
            jle .L_4170d1
.L_4170bb:

            mov WORD PTR [RDI+RAX*2-2],DX
            mov WORD PTR [RDI+RAX*2-4],DX
            sub RAX,2
            cmp EAX,1
            jg .L_4170bb

            and ECX,1
.L_4170d1:

            test ECX,ECX
            je .L_416fc0

            lea EAX,DWORD PTR [RCX-1]
            mov EDX,R13D
            sub EDX,R15D
            cdqe 
            mov WORD PTR [RDI+RAX*2],DX
            jmp .L_416fc0
.L_4170ed:

            lea EDX,DWORD PTR [RCX-16]
            lea RAX,QWORD PTR [RDI+R10*1-16]
            movdqu XMM0,XMMWORD PTR [RSI]
            cmp EDX,15
            movups XMMWORD PTR [RAX],XMM0
            jle .L_417148

            lea EDX,DWORD PTR [RCX-32]
            lea RSI,QWORD PTR [RDI+R10*1-48]
            lea RCX,QWORD PTR [RDI+R10*1-80]
            mov R11D,EDX
            shr R11D,4
            mov R10D,R11D
            shl R10,5
            sub RCX,R10
.L_41711f:

            movdqu XMM0,XMMWORD PTR [RAX]
            sub RSI,32
            movups XMMWORD PTR [RSI+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RSI+48],XMM0
            cmp RCX,RSI
            jne .L_41711f

            shl R11D,4
            mov RSI,RAX
            sub EDX,R11D
            jmp .L_416f9c
.L_417148:

            mov RSI,RAX
            jmp .L_416f9c
.L_417150:

            call __stack_chk_fail@PLT
.L_417155:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417160:

            mov ECX,64
            sub ECX,DWORD PTR [RDX+8]
.L_417168:

            mov EAX,DWORD PTR [RSI]
            mov R8D,ECX
            sar R8D,3
            cmp R8D,EAX
            jg .L_4171b0

            cmp R8D,6
            je .L_417268

            jle .L_4171e0

            cmp R8D,7
            je .L_4171f0

            cmp R8D,8
            jne .L_4171b0

            mov RCX,QWORD PTR [RDI]
            sub EAX,8
            mov R8,QWORD PTR [RCX]
            add RCX,8
            bswap R8
            mov QWORD PTR [RDX],R8
            mov QWORD PTR [RDI],RCX
            mov DWORD PTR [RSI],EAX
            mov EAX,1
            add DWORD PTR [RDX+8],64
            ret 
.L_4171b0:

            test EAX,EAX
            je .L_4171ea

            mov R8,QWORD PTR [RDI]
            mov R9,QWORD PTR [RDX]
            sub EAX,1
            sub ECX,8
            lea R10,QWORD PTR [R8+1]
            shl R9,8
            mov QWORD PTR [RDI],R10
            movzx R8D,BYTE PTR [R8]
            or R8,R9
            mov QWORD PTR [RDX],R8
            mov DWORD PTR [RSI],EAX
            add DWORD PTR [RDX+8],8
            jmp .L_417168
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4171e0:

            test R8D,R8D
            jne .L_4171b0

            mov EAX,1
.L_4171ea:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4171f0:

            mov R8,QWORD PTR [RDI]
            sub EAX,7
            movzx ECX,BYTE PTR [R8]
            movzx R9D,BYTE PTR [R8+1]
            add R8,7
            shl R9,40
            shl RCX,48
            or RCX,R9
            movzx R9D,BYTE PTR [R8-1]
            or RCX,R9
            movzx R9D,BYTE PTR [R8-5]
            shl R9,32
            or RCX,R9
            movzx R9D,BYTE PTR [R8-4]
            shl R9D,24
            or RCX,R9
            movzx R9D,BYTE PTR [R8-3]
            shl R9D,16
            or RCX,R9
            movzx R9D,BYTE PTR [R8-2]
            shl R9D,8
            or RCX,R9
            mov R9,QWORD PTR [RDX]
            shl R9,56
            or RCX,R9
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDI],R8
            mov DWORD PTR [RSI],EAX
            mov EAX,1
            add DWORD PTR [RDX+8],56
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417268:

            mov R8,QWORD PTR [RDI]
            sub EAX,6
            movzx ECX,BYTE PTR [R8]
            movzx R9D,BYTE PTR [R8+1]
            add R8,6
            shl R9,32
            shl RCX,40
            or RCX,R9
            movzx R9D,BYTE PTR [R8-1]
            or RCX,R9
            movzx R9D,BYTE PTR [R8-4]
            shl R9D,24
            or RCX,R9
            movzx R9D,BYTE PTR [R8-3]
            shl R9D,16
            or RCX,R9
            movzx R9D,BYTE PTR [R8-2]
            shl R9D,8
            or RCX,R9
            mov R9,QWORD PTR [RDX]
            shl R9,48
            or RCX,R9
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDI],R8
            mov DWORD PTR [RSI],EAX
            mov EAX,1
            add DWORD PTR [RDX+8],48
            ret 
.L_4172ce:

            nop
            nop
.L_4172d0:

            cmp ESI,EDX
            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_4172dc:

            mov R13,QWORD PTR [RDI+48]
            jge .L_4173ec

            movsxd R15,ESI
            lea RBP,QWORD PTR [R13+40]
            mov R11D,EDX
            mov R14,R15
            mov RBX,RDI
            lea R12,QWORD PTR [RIP+.L_41a900]
            jmp .L_417328
          .byte 0x90
.L_417300:

            movzx EAX,AX
            mov DWORD PTR [R13+48],ECX
.L_417307:

            mov RDX,QWORD PTR [R13+264]
            add R14D,1
            mov BYTE PTR [RDX+R15*1],AL
            add R15,1
            add DWORD PTR [R13+RAX*4+196],1
            cmp R11D,R14D
            je .L_41738c
.L_417328:

            mov EDX,DWORD PTR [R13+48]
            cmp EDX,2
            jle .L_417370
.L_417331:

            mov RSI,QWORD PTR [R13+40]
            lea ECX,DWORD PTR [RDX-3]
            mov RAX,RSI
            shr RAX,CL
            and EAX,7
            cmp AX,7
            jne .L_417300

            cmp EDX,12
            jle .L_4173a0
.L_41734c:

            lea ECX,DWORD PTR [RDX-13]
            shr RSI,CL
            and ESI,1023
            movsx RAX,BYTE PTR [R12+RSI*1]
            test EAX,EAX
            je .L_4173d8

            lea ECX,DWORD PTR [RAX-3]
            sub EDX,ECX
            mov DWORD PTR [R13+48],EDX
            jmp .L_417307
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417370:

            lea RSI,QWORD PTR [RBX+8]
            mov RDX,RBP
            mov RDI,RBX
            call .L_417160

            test EAX,EAX
            mov EDX,DWORD PTR [R13+48]
            jne .L_417331

            cmp EDX,2
            jg .L_417331
.L_41738c:

            pop RBX
.L_41738d:

            mov EAX,R14D
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4173a0:

            lea RSI,QWORD PTR [RBX+8]
            mov RDX,RBP
            mov RDI,RBX
            call .L_417160

            test EAX,EAX
            je .L_4173c0

            mov RSI,QWORD PTR [R13+40]
            mov EDX,DWORD PTR [R13+48]
            jmp .L_41734c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4173c0:

            mov EDX,DWORD PTR [R13+48]
            cmp EDX,12
            jle .L_41738c

            mov RSI,QWORD PTR [R13+40]
            jmp .L_41734c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4173d8:

            mov R14D,4294967295
            pop RBX
            mov EAX,R14D
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4173ec:

            mov R14D,ESI
            jmp .L_41738c
.L_4173f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417400:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41740a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,30
            jg .L_417500

            xor EDX,EDX
            mov ESI,22
            mov RBP,RDI
            call .L_4049e0

            test RAX,RAX
            mov RSI,RAX
            je .L_417500

            mov RDI,RAX
            call .L_416b40

            test RAX,RAX
            mov EDX,30
            je .L_417457

            xor EDX,EDX
            cmp BYTE PTR [RSI],77
            je .L_417480
.L_417457:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EDX
            jne .L_417527

            add RSP,24
.L_417471:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417480:

            cmp BYTE PTR [RSI+1],90
            jne .L_417457

            mov R12D,4096
            xor EBX,EBX
            mov R13,RSP
.L_417491:

            lea RSI,QWORD PTR [RBX+R12*1]
            mov RDX,R13
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            mov R9,RAX
            je .L_4174e8

            mov R8,QWORD PTR [RSP]
            add RBX,RAX
            add R8,RAX
            lea RAX,QWORD PTR [RBX+22]
            cmp R8,RAX
            ja .L_4174cc

            jmp .L_417510
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4174c0:

            add RBX,RAX
            lea RAX,QWORD PTR [RBX+22]
            cmp R8,RAX
            jbe .L_417510
.L_4174cc:

            mov RDI,RBX
            call .L_416b40

            test RAX,RAX
            jne .L_4174c0

            mov EDX,30
            jmp .L_417457
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4174e8:

            sar R12,1
            cmp R12,24
            jg .L_417491

            xor EDX,EDX
            jmp .L_417457
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417500:

            mov EDX,4294967295
            jmp .L_417457
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417510:

            sub RBX,R9
            cmp RBX,20479
            jle .L_417491

            xor EDX,EDX
            jmp .L_417457
.L_417527:

            call __stack_chk_fail@PLT
.L_41752c:

            nop
            nop
            nop
            nop
.L_417530:

            test SIL,1
            mov EAX,EDI
            je .L_417556

            xor DIL,BYTE PTR [RSI]
            lea RCX,QWORD PTR [RIP+.L_65b7c0]
            shr AX,8
            sub RDX,1
            add RSI,1
            movzx EDI,DIL
            xor AX,WORD PTR [RCX+RDI*2]
.L_417556:

            cmp RDX,7
            jbe .L_4175db

            lea RCX,QWORD PTR [RDX-8]
            shr RCX,3
            lea RDI,QWORD PTR [RSI+RCX*8+8]
            lea RCX,QWORD PTR [RIP+.L_65b7c0]
.L_417570:

            xor AX,WORD PTR [RSI]
            add RSI,8
            movzx R8D,AL
            movzx EAX,AH
            movzx EAX,WORD PTR [RCX+RAX*2]
            xor AX,WORD PTR [RCX+R8*2+512]
            xor AX,WORD PTR [RSI-6]
            movzx R8D,AL
            movzx EAX,AH
            movzx EAX,WORD PTR [RCX+RAX*2]
            xor AX,WORD PTR [RCX+R8*2+512]
            xor AX,WORD PTR [RSI-4]
            movzx R8D,AL
            movzx EAX,AH
            movzx EAX,WORD PTR [RCX+RAX*2]
            xor AX,WORD PTR [RCX+R8*2+512]
            xor AX,WORD PTR [RSI-2]
            movzx R8D,AL
            movzx EAX,AH
            movzx EAX,WORD PTR [RCX+RAX*2]
            xor AX,WORD PTR [RCX+R8*2+512]
            cmp RSI,RDI
            jne .L_417570

            and EDX,7
.L_4175db:

            test RDX,RDX
            je .L_41760b

            lea RCX,QWORD PTR [RIP+.L_65b7c0]
            add RDX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
.L_4175f0:

            add RSI,1
            mov EDI,EAX
            xor AL,BYTE PTR [RSI-1]
            shr DI,8
            movzx EAX,AL
            xor DI,WORD PTR [RCX+RAX*2]
            cmp RSI,RDX
            mov EAX,EDI
            jne .L_4175f0
.L_41760b:

            ret 
.L_41760d:

            nop
            nop
            nop
.L_417610:

            sub RSP,72
.L_417614:

            movzx EDX,WORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,WORD PTR [RDI+2]
            pxor XMM0,XMM0
            mov RDI,RSP
            movups XMMWORD PTR [RSP+24],XMM0
            mov ECX,EAX
            mov ESI,EAX
            sar EAX,5
            and EAX,15
            sar ESI,9
            and ECX,31
            sub EAX,1
            add ESI,80
            mov DWORD PTR [RSP+16],EAX
            mov EAX,EDX
            mov DWORD PTR [RSP+12],ECX
            sar EAX,11
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+32],4294967295
            mov DWORD PTR [RSP+8],EAX
            mov EAX,EDX
            add EDX,EDX
            movups XMMWORD PTR [RDI+40],XMM0
            sar EAX,5
            and EDX,62
            and EAX,63
            mov DWORD PTR [RSP+4],EAX
            mov DWORD PTR [RSP],EDX
            call mktime@PLT

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41769c

            add RSP,72
.L_41769b:

            ret 
.L_41769c:

            call __stack_chk_fail@PLT
.L_4176a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4176b0:

            push RBP
            push RBX
            mov RAX,RDI
            sub RSP,8
.L_4176b9:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_41ad3b]
            mov RBP,QWORD PTR [RCX]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_417730

            test RDX,RDX
            mov RSI,RDX
            mov RDI,RAX
            je .L_417710

            cmp BYTE PTR [RDX],0
            je .L_417710

            xor EDX,EDX
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [RBP+208],RAX
            mov EAX,4294967266
            cmove EBX,EAX
.L_417707:

            add RSP,8
.L_41770b:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_417710:

            lea RDX,QWORD PTR [RIP+.L_41ae88]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_43f5d0

            jmp .L_417707
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417730:

            mov EBX,4294967276
            jmp .L_417707
.L_417737:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417740:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            cmp QWORD PTR [RDI+80],0
            je .L_417798
.L_417753:

            cmp QWORD PTR [RBX+112],0
            je .L_417778
.L_41775a:

            cmp QWORD PTR [RBX+120],0
            je .L_4177b0
.L_417761:

            mov DWORD PTR [RBX],EBP
            mov DWORD PTR [RBX+96],16
            xor EAX,EAX
.L_41776c:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417778:

            mov EDI,2048
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+112],RAX
            jne .L_41775a
.L_41778b:

            mov EAX,4294967266
            jmp .L_41776c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417798:

            mov RDI,RSI
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+80],RAX
            jne .L_417753

            jmp .L_41778b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4177b0:

            mov DWORD PTR [RBX+104],1024
            mov EDI,4096
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+120],RAX
            jne .L_417761

            jmp .L_41778b
.L_4177cc:

            nop
            nop
            nop
            nop
.L_4177d0:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_4177d7:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX+408]
            test RAX,RAX
            je .L_417869

            mov RDI,QWORD PTR [RAX+16]
            call free@PLT

            mov R12,QWORD PTR [RBX+408]
            mov RDI,QWORD PTR [R12+136]
            call free@PLT

            mov RDI,QWORD PTR [R12+168]
            call free@PLT

            mov RDI,QWORD PTR [R12+176]
            call free@PLT

            mov R12,QWORD PTR [RBX+408]
            mov RDI,QWORD PTR [R12+264]
            call free@PLT

            mov RDI,QWORD PTR [R12+296]
            call free@PLT

            mov RDI,QWORD PTR [R12+304]
            call free@PLT

            mov RDI,QWORD PTR [RBX+408]
            call free@PLT

            mov QWORD PTR [RBX+408],0
.L_417869:

            lea RDI,QWORD PTR [RBX+216]
            call .L_434290

            lea RDI,QWORD PTR [RBX+240]
            call .L_434290

            lea RDI,QWORD PTR [RBX+144]
            call .L_434290

            lea RDI,QWORD PTR [RBX+168]
            call .L_434290

            lea RDI,QWORD PTR [RBX+264]
            call .L_4342c0

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            xor EAX,EAX
            pop RBX
.L_4178be:

            pop RBP
            pop R12
            ret 
.L_4178c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4178d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,232
.L_4178e1:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+216],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+56],RSI
            mov QWORD PTR [RSP+32],RDI
            mov RBX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+64],RDX
            mov QWORD PTR [RSP+72],RCX
            mov RSI,QWORD PTR [RBX+16]
            test RSI,RSI
            jne .L_417c40

            cmp BYTE PTR [RBX+292],0
            jne .L_417c5a
.L_41792c:

            mov RAX,QWORD PTR [RSP+32]
            cmp BYTE PTR [RBX+294],0
            mov RAX,QWORD PTR [RAX+2472]
            mov R14,QWORD PTR [RAX]
            jne .L_4179b0

            cmp QWORD PTR [R14+8],0
            jne .L_4189d0

            mov RAX,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+72]
            xor R8D,R8D
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [R14]
            mov QWORD PTR [RBX],RAX
            mov BYTE PTR [R14+292],1
.L_41797d:

            mov RBX,QWORD PTR [RSP+216]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R8D
            jne .L_418f8a

            add RSP,232
.L_41799e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4179b0:

            cmp BYTE PTR [R14+291],0
            jne .L_417b50

            mov RBX,QWORD PTR [R14+408]
            test RBX,RBX
            je .L_418df5
.L_4179ce:

            mov DWORD PTR [RBX+340],4294967271
            cmp BYTE PTR [R14+41],108
            jne .L_417a00

            cmp BYTE PTR [R14+42],104
            jne .L_417a00

            movzx EAX,BYTE PTR [R14+43]
            cmp AL,54
            je .L_417a61

            cmp AL,55
            je .L_418deb

            cmp AL,53
            mov EBP,13
            je .L_417a66
.L_417a00:

            mov RAX,QWORD PTR [RSP+56]
            mov RBX,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_41aec0]
            mov ESI,84
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+64]
            mov RDI,RBX
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RAX],0
            movsx R8D,BYTE PTR [R14+42]
            xor EAX,EAX
            movsx ECX,BYTE PTR [R14+41]
            movsx R9D,BYTE PTR [R14+43]
            call .L_43f5d0

            mov RDI,RBX
            call .L_416cd0

            mov R8D,4294967276
            jmp .L_41797d
.L_417a61:

            mov EBP,15
.L_417a66:

            movabs RAX,562945658585088
            mov DWORD PTR [RBX+340],4294967266
            mov QWORD PTR [RBX+4],RAX
            mov RAX,QWORD PTR [RBX+16]
            test RAX,RAX
            je .L_418d69
.L_417a8b:

            mov ECX,EBP
            mov EDX,1
            mov ESI,32
            shl EDX,CL
            sub RAX,RDX
            lea RDI,QWORD PTR [RAX+131072]
            call memset@PLT

            lea EAX,DWORD PTR [RBP+1]
            sub EBP,15
            lea RDI,QWORD PTR [RBX+56]
            mov DWORD PTR [RBX+24],0
            mov DWORD PTR [RBX],0
            mov ESI,510
            mov DWORD PTR [RBX+316],EAX
            xor EAX,EAX
            cmp EBP,2
            setb AL
            mov QWORD PTR [RBX+40],0
            mov DWORD PTR [RBX+48],0
            add EAX,4
            mov DWORD PTR [RBX+320],EAX
            movabs RAX,21474836499
            mov QWORD PTR [RBX+324],RAX
            call .L_417740

            test EAX,EAX
            jne .L_418d80

            lea RDI,QWORD PTR [RBX+184]
            mov DWORD PTR [RBX+64],9
            mov ESI,19
            call .L_417740

            test EAX,EAX
            jne .L_418d80

            mov DWORD PTR [RBX+340],0
            mov BYTE PTR [R14+291],1
            mov DWORD PTR [R14+392],0
            mov QWORD PTR [R14+400],0
.L_417b50:

            mov RDI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RSP+184]
            mov ESI,1
            call .L_4049e0

            mov QWORD PTR [R14+360],RAX
            mov RAX,QWORD PTR [RSP+184]
            test RAX,RAX
            mov QWORD PTR [RSP+96],RAX
            jle .L_418edd

            mov RAX,QWORD PTR [R14+8]
            cmp QWORD PTR [RSP+96],RAX
            mov QWORD PTR [RSP+88],RAX
            jle .L_417ba1

            mov QWORD PTR [RSP+184],RAX
            mov QWORD PTR [RSP+96],RAX
.L_417ba1:

            mov RAX,QWORD PTR [RSP+96]
            mov RBP,QWORD PTR [R14+408]
            mov QWORD PTR [R14+376],0
            mov DWORD PTR [R14+392],0
            mov DWORD PTR [RSP+136],EAX
            mov DWORD PTR [R14+368],EAX
            mov EAX,DWORD PTR [RBP+340]
            mov QWORD PTR [RSP+104],RBP
            test EAX,EAX
            mov DWORD PTR [RSP+140],EAX
            jne .L_4182c8

            lea RAX,QWORD PTR [R14+360]
            lea R15,QWORD PTR [RIP+.L_41ad00]
            mov QWORD PTR [RSP+16],R14
            mov R9D,DWORD PTR [RBP]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+128],RAX
            mov RAX,QWORD PTR [RSP+104]
            cmp DWORD PTR [RAX],8
            jg .L_417fda
.L_417c25:

            lea R13,QWORD PTR [RBP+40]
            lea RBX,QWORD PTR [RIP+.L_41a8b8]
.L_417c30:

            cmp R9D,9
            ja .L_417c30
.L_417c36:

            movsxd RAX,DWORD PTR [RBX+R9*4]
            add RAX,RBX
            jmp RAX
          .byte 0x90
.L_417c40:

            call .L_404a30

            cmp BYTE PTR [RBX+292],0
            mov QWORD PTR [RBX+16],0
            je .L_41792c
.L_417c5a:

            mov RAX,QWORD PTR [RBX]
            mov RBX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RAX],0
            call .L_416c70

            mov R8D,EAX
            jmp .L_41797d
          .byte 0x90
.L_417c90:

            cmp DWORD PTR [RBP+56],EAX
            jl .L_4184e0

            pxor XMM0,XMM0
            mov DWORD PTR [RBP+336],0
            mov DWORD PTR [RBP+132],0
            movups XMMWORD PTR [RBP+68],XMM0
            movups XMMWORD PTR [RBP+84],XMM0
            movups XMMWORD PTR [RBP+100],XMM0
            movups XMMWORD PTR [RBP+116],XMM0
.L_417cc1:

            mov R12D,DWORD PTR [RBP+336]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417cd0:

            cmp R12D,DWORD PTR [RBP+60]
            jge .L_417d77
.L_417cda:

            movsxd RAX,DWORD PTR [RBP+272]
            mov R10D,DWORD PTR [RBP+48]
            cmp R10D,EAX
            jl .L_418560
.L_417cee:

            mov R11,QWORD PTR [RBP+40]
            mov ECX,R10D
            mov RDX,QWORD PTR [RBP+296]
            sub ECX,EAX
            mov RSI,R11
            shr RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+276]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            mov EDX,DWORD PTR [RBP+188]
            test EDX,EDX
            je .L_417d36

            cmp EAX,EDX
            jl .L_417d36

            lea RDI,QWORD PTR [RBP+184]
            mov EDX,EAX
            call .L_416c10
.L_417d36:

            cmp EAX,2
            mov RDX,QWORD PTR [RBP+264]
            jle .L_418530

            movsxd RSI,EAX
            movsxd RCX,R12D
            sub EAX,2
            movzx EDX,BYTE PTR [RDX+RSI*1]
            add R12D,1
            sub R10D,EDX
            mov DWORD PTR [RBP+48],R10D
            add DWORD PTR [RBP+RSI*4+60],1
            mov RSI,QWORD PTR [RBP+136]
            mov BYTE PTR [RSI+RCX*1],AL
            cmp R12D,DWORD PTR [RBP+60]
            jl .L_417cda
.L_417d77:

            jg .L_4184e0

            lea RDI,QWORD PTR [RBP+56]
            call .L_416d40

            test EAX,EAX
            je .L_4184e0
.L_417d8e:

            mov EAX,DWORD PTR [RBP+316]
            mov DWORD PTR [RBP+332],1
            mov R9D,1
            mov DWORD PTR [RBP],1
            mov DWORD PTR [RBP+184],EAX
            mov EAX,DWORD PTR [RBP+320]
            mov DWORD PTR [RBP+192],EAX
            jmp .L_417c36
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417dc8:

            movsxd RDX,DWORD PTR [RBP+64]
            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,EDX
            jl .L_418a60
.L_417dd7:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,EDX
            mov DWORD PTR [RBP+48],ECX
            shr RAX,CL
            and AX,WORD PTR [R15+RDX*2]
            movzx EAX,AX
            mov DWORD PTR [RBP+60],EAX
.L_417dee:

            test EAX,EAX
            jne .L_417c90

            movsxd RDX,DWORD PTR [RBP+64]
            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,EDX
            jl .L_418ae8
.L_417e05:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,EDX
            shr RAX,CL
            and AX,WORD PTR [R15+RDX*2]
            movzx EDX,AX
            cmp EDX,DWORD PTR [RBP+56]
            jge .L_4184e0

            mov RDX,QWORD PTR [RBP+168]
            mov R9D,8
            mov WORD PTR [RDX],AX
            mov RDX,QWORD PTR [RBP+136]
            movzx EAX,AX
            mov QWORD PTR [RBP+144],0
            mov BYTE PTR [RDX+RAX*1],0
            mov DWORD PTR [RBP],8
            mov EAX,DWORD PTR [RBP+64]
            sub DWORD PTR [RBP+48],EAX
            jmp .L_417c36
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417e60:

            mov ECX,DWORD PTR [RBP+184]
            cmp ECX,EAX
            jl .L_4184e0

            pxor XMM0,XMM0
            cmp EAX,2
            mov DWORD PTR [RBP+336],0
            mov DWORD PTR [RBP+260],0
            movups XMMWORD PTR [RBP+196],XMM0
            movups XMMWORD PTR [RBP+212],XMM0
            movups XMMWORD PTR [RBP+228],XMM0
            movups XMMWORD PTR [RBP+244],XMM0
            jle .L_4188d8

            cmp ECX,DWORD PTR [RBP+316]
            je .L_4188d8
.L_417eb7:

            mov ESI,DWORD PTR [RBP+336]
            mov RDI,QWORD PTR [RSP+8]
            mov EDX,3
            call .L_4172d0

            cmp EAX,2
            mov DWORD PTR [RBP+336],EAX
            jle .L_418e78

            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,1
            jle .L_418b80
.L_417ee7:

            mov RSI,QWORD PTR [RBP+40]
            mov EDX,DWORD PTR [RBP+188]
            sub ECX,2
            mov DWORD PTR [RBP+48],ECX
            shr RSI,CL
            lea EAX,DWORD PTR [RDX-2]
            and ESI,3
            cmp ESI,EAX
            jge .L_4184e0

            test ESI,ESI
            jle .L_418de1

            lea ECX,DWORD PTR [RSI-1]
            mov EAX,3
            add RCX,4
            nop
            nop
            nop
            nop
.L_417f20:

            mov RDX,QWORD PTR [RBP+264]
            mov BYTE PTR [RDX+RAX*1],0
            add RAX,1
            cmp RCX,RAX
            jne .L_417f20

            mov EDX,DWORD PTR [RBP+188]
            add ESI,3
.L_417f3d:

            mov DWORD PTR [RBP+336],ESI
.L_417f43:

            mov RDI,QWORD PTR [RSP+8]
            call .L_4172d0

            cmp EAX,DWORD PTR [RBP+188]
            mov DWORD PTR [RBP+336],EAX
            jl .L_418e20

            lea RDI,QWORD PTR [RBP+184]
            call .L_416d40

            test EAX,EAX
            je .L_4184e0

            mov EDX,DWORD PTR [RBP+332]
            test EDX,EDX
            je .L_417dc8
.L_417f81:

            mov DWORD PTR [RBP],9
            mov R9D,9
            jmp .L_417c36
.L_417f93:

            movdqa XMM0,XMMWORD PTR [RSP+192]
            mov DWORD PTR [RBP],0
            mov DWORD PTR [RBP+312],0
            movups XMMWORD PTR [RBP+40],XMM0
            mov DWORD PTR [RBP+24],R13D
            mov DWORD PTR [RBP+28],0
.L_417fbc:

            mov RAX,QWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RAX+408]
            mov RAX,QWORD PTR [RSP+104]
            cmp DWORD PTR [RAX],8
            mov R9D,DWORD PTR [RBP]
            jle .L_417c25
.L_417fda:

            lea RAX,QWORD PTR [RBP+56]
            movdqu XMM0,XMMWORD PTR [RBP+40]
            mov EDI,DWORD PTR [RBP+272]
            mov EBX,DWORD PTR [RBP+32]
            mov QWORD PTR [RSP+112],RAX
            lea RAX,QWORD PTR [RBP+184]
            mov R11D,DWORD PTR [RBP+28]
            movaps XMMWORD PTR [RSP+192],XMM0
            mov QWORD PTR [RSP+160],RAX
            mov RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [RBP+136]
            mov R13D,DWORD PTR [RBP+24]
            mov R12D,DWORD PTR [RBP+4]
            mov DWORD PTR [RSP+124],EDI
            mov QWORD PTR [RSP+152],RAX
            mov RAX,QWORD PTR [RBP+264]
            mov QWORD PTR [RSP+144],RAX
            mov EAX,DWORD PTR [RBP+312]
            mov DWORD PTR [RSP+80],EAX
            mov EAX,DWORD PTR [RBP+8]
            mov DWORD PTR [RSP+120],EAX
            movsxd RAX,DWORD PTR [RBP+144]
            mov DWORD PTR [RSP+168],EAX
            mov QWORD PTR [RSP+40],RAX
.L_418063:

            cmp R9D,10
            je .L_4186cb

            jle .L_4188f0

            cmp R9D,11
            je .L_4189c8

            cmp R9D,12
            jne .L_418063

            mov QWORD PTR [RSP+48],RBP
            mov R9D,R13D
            mov EBP,EBX
            mov EBX,R12D
            mov R12D,R13D
            jmp .L_4180f6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418098:

            sub R14D,R11D
            cmp R14D,EBP
            cmovg R14D,EBP
.L_4180a2:

            mov RAX,QWORD PTR [RSP+24]
            lea R13D,DWORD PTR [R11+R14*1]
            movsxd RDI,R9D
            movsxd RSI,R11D
            add R12D,R14D
            add RDI,RAX
            add RSI,RAX
            cmp R9D,R13D
            jg .L_4180c8

            cmp R11D,R12D
            jle .L_4187c0
.L_4180c8:

            movsxd RDX,R14D
            call memcpy@PLT
.L_4180d0:

            cmp EBX,R12D
            je .L_418828
.L_4180d9:

            cmp EBP,R14D
            mov R9D,9
            jle .L_418348

            mov R11D,DWORD PTR [RSP+120]
            sub EBP,R14D
            mov R9D,R12D
            and R11D,R13D
.L_4180f6:

            cmp R11D,R12D
            mov R14D,EBX
            jg .L_418098

            sub R14D,R12D
            cmp R14D,EBP
            cmovg R14D,EBP
            jmp .L_4180a2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418110:

            mov ESI,DWORD PTR [RBP+336]
            mov EDX,DWORD PTR [RBP+188]
            jmp .L_417f43
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418128:

            mov EAX,DWORD PTR [RBP+60]
            jmp .L_417dee
.L_418130:

            mov EAX,DWORD PTR [RBP+188]
.L_418136:

            test EAX,EAX
            jne .L_417e60

            movsxd RDX,DWORD PTR [RBP+192]
            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,EDX
            jl .L_418c00
.L_418150:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,EDX
            shr RAX,CL
            and AX,WORD PTR [R15+RDX*2]
            movzx EDX,AX
            cmp EDX,DWORD PTR [RBP+184]
            jge .L_4184e0

            mov RDX,QWORD PTR [RBP+296]
            mov WORD PTR [RDX],AX
            mov RDX,QWORD PTR [RBP+264]
            movzx EAX,AX
            mov QWORD PTR [RBP+272],0
            mov BYTE PTR [RDX+RAX*1],0
            mov ECX,DWORD PTR [RBP+332]
            mov EAX,DWORD PTR [RBP+192]
            sub DWORD PTR [RBP+48],EAX
            test ECX,ECX
            jne .L_417f81

            mov DWORD PTR [RBP],5
            mov R9D,5
            jmp .L_417c36
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4181c0:

            movsxd RDX,DWORD PTR [RBP+192]
            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,EDX
            jl .L_418242
.L_4181ce:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,EDX
            mov DWORD PTR [RBP+48],ECX
            shr RAX,CL
            and AX,WORD PTR [R15+RDX*2]
            movzx EAX,AX
            mov DWORD PTR [RBP+188],EAX
            jmp .L_418136
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4181f0:

            mov ECX,DWORD PTR [RBP+48]
            cmp ECX,15
            jle .L_418d40
.L_4181fc:

            mov RAX,QWORD PTR [RBP+40]
            sub ECX,16
            shr RAX,CL
            movzx EDX,AX
            test AX,AX
            mov DWORD PTR [RBP+312],EDX
            je .L_4184e0

            movsxd RDX,DWORD PTR [RBP+328]
            mov EAX,DWORD PTR [RBP+324]
            mov DWORD PTR [RBP+48],ECX
            mov DWORD PTR [RBP+332],0
            mov DWORD PTR [RBP+184],EAX
            cmp ECX,EDX
            mov DWORD PTR [RBP+192],EDX
            jge .L_4181ce
.L_418242:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            movsxd RDX,DWORD PTR [RBP+192]
            jne .L_4181ce

            cmp ECX,EDX
            jge .L_4181ce

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_4184e5

            mov DWORD PTR [RBP],1
.L_4182ab:

            mov RAX,QWORD PTR [R14+8]
            mov QWORD PTR [R14+376],RDX
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_4182e8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4182c8:

            cmp DWORD PTR [RSP+140],1
            jne .L_418506

            xor R8D,R8D
            xor EDX,EDX
.L_4182db:

            mov BYTE PTR [R14+292],1
            nop
            nop
            nop
            nop
            nop
.L_4182e8:

            mov RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [R14+16],RDX
            sub RAX,RDX
            test R8D,R8D
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [R14]
            je .L_418d00

            movsxd R9,R8D
.L_418307:

            mov RBX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [R14+384]
            mov RDX,R9
            movzx EDI,WORD PTR [R14+24]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],R9
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RAX],RSI
            call .L_417530

            xor R8D,R8D
            mov WORD PTR [R14+24],AX
            add QWORD PTR [R14],R9
            jmp .L_41797d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418348:

            mov RBP,QWORD PTR [RSP+48]
            mov R13D,R12D
            mov R12D,EBX
.L_418353:

            mov EAX,DWORD PTR [RSP+80]
            test EAX,EAX
            je .L_417f93

            mov RAX,QWORD PTR [RSP+16]
            movsxd R11,R13D
            mov EBX,DWORD PTR [RSP+80]
            mov DWORD PTR [RSP+48],R12D
            add R11,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+172],R9D
            mov R12D,DWORD PTR [RSP+168]
            lea R14,QWORD PTR [RAX+368]
            mov QWORD PTR [RSP+80],R14
            mov R14,QWORD PTR [RSP+152]
            jmp .L_418429
          .byte 0x66
          .byte 0x90
.L_4183a0:

            mov RAX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+192]
            mov ECX,R10D
            sub ECX,R12D
            mov RDX,QWORD PTR [RBP+168]
            shr RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+148]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            mov EDX,DWORD PTR [RBP+60]
            cmp EAX,EDX
            jl .L_4183ea

            test EDX,EDX
            je .L_4183ea

            mov RDI,QWORD PTR [RSP+112]
            mov EDX,EAX
            call .L_416c10
.L_4183ea:

            movsxd RDX,EAX
            movzx EDX,BYTE PTR [R14+RDX*1]
            sub R10D,EDX
            mov DWORD PTR [RSP+200],R10D
.L_4183fd:

            sub EBX,1
            cmp EAX,255
            jg .L_4186bc

            add R13D,1
            cmp DWORD PTR [RSP+48],R13D
            mov BYTE PTR [R11],AL
            jle .L_418da3

            add R11,1
            test EBX,EBX
            je .L_417f93
.L_418429:

            mov R10D,DWORD PTR [RSP+200]
            cmp R12D,R10D
            jle .L_4183a0

            mov RDX,QWORD PTR [RSP+128]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+8]
            call .L_417160

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+200]
            jne .L_4183a0

            cmp R12D,R10D
            jle .L_4183a0

            mov RDI,QWORD PTR [RSP+96]
            cmp QWORD PTR [RSP+88],RDI
            jne .L_418eb8

            mov RAX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+192]
            mov ECX,R12D
            sub ECX,R10D
            mov RDX,QWORD PTR [RBP+168]
            shl RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+148]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx EAX,WORD PTR [RDX+RAX*2]
            mov EDX,DWORD PTR [RBP+60]
            test EDX,EDX
            je .L_4184c4

            cmp EAX,EDX
            jl .L_4184c4

            mov RDI,QWORD PTR [RSP+112]
            mov EDX,EAX
            call .L_416c10
.L_4184c4:

            movsxd RDX,EAX
            movzx EDX,BYTE PTR [R14+RDX*1]
            sub R10D,EDX
            test R10D,R10D
            mov DWORD PTR [RSP+200],R10D
            jns .L_4183fd
.L_4184e0:

            mov R14,QWORD PTR [RSP+16]
.L_4184e5:

            mov EAX,DWORD PTR [RSP+136]
            sub EAX,DWORD PTR [R14+368]
            mov DWORD PTR [RBP+340],4294967271
            cdqe 
            add QWORD PTR [R14+376],RAX
.L_418506:

            mov RDI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_41ad5e]
            mov ESI,4294967295
            xor EAX,EAX
            call .L_43f5d0

            mov R8D,4294967271
            jmp .L_41797d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418530:

            test EAX,EAX
            jne .L_4185f0

            movzx EAX,BYTE PTR [RDX]
            mov RDX,QWORD PTR [RBP+136]
            sub R10D,EAX
            movsxd RAX,R12D
            add R12D,1
            mov DWORD PTR [RBP+48],R10D
            mov BYTE PTR [RDX+RAX*1],0
            jmp .L_417cd0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418560:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            test EAX,EAX
            mov R10D,DWORD PTR [RBP+48]
            movsxd RAX,DWORD PTR [RBP+272]
            jne .L_417cee

            cmp R10D,EAX
            jge .L_417cee
.L_418595:

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_4184e5

            mov DWORD PTR [RBP+336],R12D
            mov DWORD PTR [RBP],7
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_4182e8
          .byte 0x66
          .byte 0x90
.L_4185f0:

            movsxd RCX,EAX
            xor R14D,R14D
            cmp EAX,1
            movzx EAX,BYTE PTR [RDX+RCX*1]
            setne R14B
            lea R14D,DWORD PTR [R14+R14*4+4]
            lea EDX,DWORD PTR [RAX+R14*1]
            cmp EDX,R10D
            jg .L_418670
.L_41860f:

            mov ECX,R10D
            sub ECX,EAX
            movsxd RAX,R14D
            sub ECX,R14D
            shr R11,CL
            and R11W,WORD PTR [R15+RAX*2]
            mov DWORD PTR [RBP+48],ECX
            cmp R14D,4
            mov EAX,20
            mov ECX,3
            cmove EAX,ECX
            movzx EDX,R11W
            add EDX,EAX
            lea R14D,DWORD PTR [R12+RDX*1]
            cmp R14D,DWORD PTR [RBP+60]
            jg .L_4184e0

            movsxd RDI,R12D
            add RDI,QWORD PTR [RBP+136]
            movsxd RDX,EDX
            xor ESI,ESI
            mov R12D,R14D
            call memset@PLT

            jmp .L_417cd0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418670:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            mov QWORD PTR [RSP+24],RCX
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            mov RCX,QWORD PTR [RSP+24]
            test EAX,EAX
            mov RAX,QWORD PTR [RBP+264]
            mov R10D,DWORD PTR [RBP+48]
            movzx EAX,BYTE PTR [RAX+RCX*1]
            jne .L_4186b3

            lea EDX,DWORD PTR [R14+RAX*1]
            cmp R10D,EDX
            jl .L_418595
.L_4186b3:

            mov R11,QWORD PTR [RBP+40]
            jmp .L_41860f
.L_4186bc:

            mov R12D,DWORD PTR [RSP+48]
            mov DWORD PTR [RSP+80],EBX
            lea EBX,DWORD PTR [RAX-253]
.L_4186cb:

            mov R10D,DWORD PTR [RSP+200]
            cmp DWORD PTR [RSP+124],R10D
            jg .L_418900
.L_4186de:

            movsxd RAX,DWORD PTR [RSP+124]
            mov RSI,QWORD PTR [RSP+192]
            mov ECX,R10D
            mov RDX,QWORD PTR [RBP+296]
            sub ECX,EAX
            shr RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+276]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx R11D,WORD PTR [RDX+RAX*2]
            mov EAX,DWORD PTR [RBP+188]
            cmp R11D,EAX
            jl .L_418733

            test EAX,EAX
            je .L_418733

            mov RDI,QWORD PTR [RSP+160]
            mov EDX,R11D
            call .L_416c10

            mov R11D,EAX
.L_418733:

            mov RDI,QWORD PTR [RSP+144]
            movsxd RAX,R11D
            mov R9D,R13D
            movzx EAX,BYTE PTR [RDI+RAX*1]
            sub R10D,EAX
            mov DWORD PTR [RSP+200],R10D
.L_418750:

            cmp R11D,1
            jle .L_41879c

            mov EDX,DWORD PTR [RSP+200]
            lea R14D,DWORD PTR [R11-1]
            cmp R14D,EDX
            jg .L_418c88
.L_41876a:

            mov R11,QWORD PTR [RSP+192]
            sub EDX,R14D
            movsxd RAX,R14D
            mov ECX,EDX
            mov DWORD PTR [RSP+200],EDX
            shr R11,CL
            and R11W,WORD PTR [R15+RAX*2]
            mov ECX,R14D
            movzx EAX,R11W
            mov R11D,1
            shl R11D,CL
            add R11D,EAX
.L_41879c:

            mov EAX,R13D
            mov QWORD PTR [RSP+48],RBP
            mov EBP,EBX
            sub EAX,R11D
            mov EBX,R12D
            mov R12D,R13D
            mov R11D,EAX
            sub R11D,1
            and R11D,DWORD PTR [RSP+120]
            jmp .L_4180f6
.L_4187c0:

            cmp R14D,1
            jle .L_418b70

            lea R11D,DWORD PTR [R14-2]
            lea RAX,QWORD PTR [RSI+1]
            lea RDX,QWORD PTR [RDI+1]
            shr R11D,1
            mov R9D,R11D
            lea R9,QWORD PTR [RSI+R9*2+3]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4187e8:

            movzx ECX,BYTE PTR [RAX-1]
            add RAX,2
            add RDX,2
            mov BYTE PTR [RDX-3],CL
            movzx ECX,BYTE PTR [RAX-2]
            mov BYTE PTR [RDX-2],CL
            cmp R9,RAX
            jne .L_4187e8

            lea EAX,DWORD PTR [R11+R11*1+2]
.L_418808:

            cmp EAX,R14D
            jge .L_4180d0

            cdqe 
            cmp EBX,R12D
            movzx EDX,BYTE PTR [RSI+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            jne .L_4180d9

            nop
            nop
            nop
            nop
            nop
.L_418828:

            mov ECX,R14D
            mov R14,QWORD PTR [RSP+16]
            movsxd R9,EBX
            mov EBX,EBP
            mov R10D,R13D
            mov R8,R9
            mov RBP,QWORD PTR [RSP+48]
            mov R12D,9
            mov RAX,QWORD PTR [R14+408]
            mov RAX,QWORD PTR [RAX+16]
            add QWORD PTR [R14+400],R9
            cmp EBX,ECX
            mov DWORD PTR [R14+392],R9D
            mov QWORD PTR [R14+384],RAX
            jle .L_418880

            and R10D,DWORD PTR [RSP+120]
            mov EAX,EBX
            mov R12D,12
            sub EAX,ECX
            mov DWORD PTR [RBP+32],EAX
            mov DWORD PTR [RBP+28],R10D
.L_418880:

            mov EAX,DWORD PTR [RSP+80]
            movdqa XMM0,XMMWORD PTR [RSP+192]
            mov DWORD PTR [RBP],R12D
            mov DWORD PTR [RBP+312],EAX
            mov EAX,DWORD PTR [RSP+140]
            movups XMMWORD PTR [RBP+40],XMM0
            mov DWORD PTR [RBP+24],EAX
            mov EAX,DWORD PTR [RSP+136]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            mov RDX,RAX
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_4182e8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4188d8:

            mov DWORD PTR [RBP],4
            mov R9D,4
            jmp .L_417c36
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4188f0:

            cmp R9D,9
            je .L_418353

            jmp .L_418063
          .byte 0x90
.L_418900:

            mov RAX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+200]
            jne .L_4186de

            cmp DWORD PTR [RSP+124],R10D
            jle .L_4186de

            mov RDI,QWORD PTR [RSP+96]
            cmp QWORD PTR [RSP+88],RDI
            jne .L_418fb7

            movsxd RAX,DWORD PTR [RSP+124]
            mov RSI,QWORD PTR [RSP+192]
            mov RDX,QWORD PTR [RBP+296]
            mov ECX,EAX
            sub ECX,R10D
            shl RSI,CL
            and SI,WORD PTR [R15+RAX*2]
            mov ECX,DWORD PTR [RBP+276]
            movzx ESI,SI
            mov EAX,ESI
            shr EAX,CL
            movzx R11D,WORD PTR [RDX+RAX*2]
            mov EAX,DWORD PTR [RBP+188]
            test EAX,EAX
            je .L_41899e

            cmp R11D,EAX
            jl .L_41899e

            mov RDI,QWORD PTR [RSP+160]
            mov EDX,R11D
            call .L_416c10

            mov R11D,EAX
.L_41899e:

            mov RDI,QWORD PTR [RSP+144]
            movsxd RAX,R11D
            movzx EAX,BYTE PTR [RDI+RAX*1]
            sub R10D,EAX
            test R10D,R10D
            mov DWORD PTR [RSP+200],R10D
            js .L_4184e0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4189c8:

            mov R9D,R13D
            jmp .L_418750
.L_4189d0:

            mov RDI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RSP+192]
            mov ESI,1
            call .L_4049e0

            mov R9,QWORD PTR [RSP+192]
            mov RBX,QWORD PTR [RSP+56]
            test R9,R9
            mov QWORD PTR [RBX],RAX
            jle .L_418f8f

            mov RDX,QWORD PTR [R14+8]
            cmp R9,RDX
            jle .L_418a14

            mov QWORD PTR [RSP+192],RDX
            mov R9,RDX
.L_418a14:

            test R9,R9
            movzx EDI,WORD PTR [R14+24]
            je .L_418a2b

            mov RDX,R9
            mov RSI,RAX
            call .L_417530

            mov EDI,EAX
.L_418a2b:

            mov RAX,QWORD PTR [RSP+64]
            mov WORD PTR [R14+24],DI
            mov RBX,QWORD PTR [RSP+72]
            mov QWORD PTR [RAX],R9
            mov RAX,QWORD PTR [R14]
            mov QWORD PTR [RBX],RAX
            add QWORD PTR [R14],R9
            sub QWORD PTR [R14+8],R9
            jne .L_418a54

            mov BYTE PTR [R14+292],1
.L_418a54:

            mov QWORD PTR [R14+16],R9
            xor R8D,R8D
            jmp .L_41797d
.L_418a60:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            movsxd RDX,DWORD PTR [RBP+64]
            jne .L_417dd7

            cmp ECX,EDX
            jge .L_417dd7

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_4184e5

            mov DWORD PTR [RBP],5
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_4182e8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418ae8:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            movsxd RDX,DWORD PTR [RBP+64]
            jne .L_417e05

            cmp ECX,EDX
            jge .L_417e05

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_4184e5

            mov DWORD PTR [RBP],6
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_4182e8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418b70:

            xor EAX,EAX
            jmp .L_418808
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418b80:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            jne .L_417ee7

            cmp ECX,1
            jg .L_417ee7

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_4184e5
.L_418bdc:

            mov RAX,QWORD PTR [R14+8]
            mov DWORD PTR [RBP],3
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [R14+376],RDX
            mov QWORD PTR [RSP+88],RAX
            jmp .L_4182e8
          .byte 0x90
.L_418c00:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            test EAX,EAX
            mov ECX,DWORD PTR [RBP+48]
            movsxd RDX,DWORD PTR [RBP+192]
            jne .L_418150

            cmp ECX,EDX
            jge .L_418150

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            je .L_4184e5

            mov DWORD PTR [RBP],2
            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_4182e8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418c88:

            mov RAX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+48],R9D
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            test EAX,EAX
            mov EDX,DWORD PTR [RSP+200]
            mov R9D,DWORD PTR [RSP+48]
            jne .L_41876a

            cmp R14D,EDX
            jle .L_41876a

            mov RDI,QWORD PTR [RSP+96]
            cmp QWORD PTR [RSP+88],RDI
            mov R14,QWORD PTR [RSP+16]
            je .L_4184e5

            mov DWORD PTR [RBP+32],EBX
            mov DWORD PTR [RBP+28],R11D
            mov R12D,11
            mov R8D,DWORD PTR [R14+392]
            mov DWORD PTR [RSP+140],R13D
            jmp .L_418880
          .byte 0x66
          .byte 0x90
.L_418d00:

            mov RBX,QWORD PTR [RSP+72]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RAX],0
            cmp BYTE PTR [R14+292],0
            je .L_41797d

            mov RDI,QWORD PTR [RSP+32]
            call .L_416c70

            mov R8D,EAX
            jmp .L_41797d
.L_418d40:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            lea RSI,QWORD PTR [RAX+368]
            call .L_417160

            test EAX,EAX
            je .L_418f00

            mov ECX,DWORD PTR [RBP+48]
            jmp .L_4181fc
.L_418d69:

            mov EDI,131072
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            jne .L_417a8b
.L_418d80:

            mov RDI,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_41aef0]
            mov ESI,12
            xor EAX,EAX
            call .L_43f5d0

            mov R8D,4294967266
            jmp .L_41797d
.L_418da3:

            mov R14,QWORD PTR [RSP+16]
            movsxd R9,DWORD PTR [RSP+48]
            mov DWORD PTR [RSP+80],EBX
            mov R12D,DWORD PTR [RSP+172]
            mov RAX,QWORD PTR [R14+408]
            mov R8,R9
            mov RAX,QWORD PTR [RAX+16]
            mov DWORD PTR [R14+392],R9D
            add QWORD PTR [R14+400],R9
            mov QWORD PTR [R14+384],RAX
            jmp .L_418880
.L_418de1:

            mov ESI,3
            jmp .L_417f3d
.L_418deb:

            mov EBP,16
            jmp .L_417a66
.L_418df5:

            mov ESI,344
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            mov QWORD PTR [R14+408],RAX
            jne .L_4179ce

            jmp .L_418d80
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418e20:

            mov R14,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+96]
            sub EDX,DWORD PTR [R14+368]
            movsxd RDX,EDX
            add RDX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RDI
            je .L_4184e5

            test EAX,EAX
            js .L_4184e5

            mov RAX,QWORD PTR [R14+8]
            mov DWORD PTR [RBP],4
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [R14+376],RDX
            mov QWORD PTR [RSP+88],RAX
            jmp .L_4182e8
.L_418e78:

            mov R14,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+96]
            sub EDX,DWORD PTR [R14+368]
            movsxd RDX,EDX
            add RDX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RDI
            je .L_4184e5

            test EAX,EAX
            jns .L_418bdc

            jmp .L_4184e5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418eb8:

            mov R14,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+80],EBX
            mov R12D,DWORD PTR [RSP+172]
            mov DWORD PTR [RSP+140],R13D
            mov R8D,DWORD PTR [R14+392]
            jmp .L_418880
.L_418edd:

            lea RDX,QWORD PTR [RIP+.L_41ad46]
.L_418ee4:

            mov RDI,QWORD PTR [RSP+32]
            mov ESI,84
            xor EAX,EAX
            call .L_43f5d0

            mov R8D,4294967266
            jmp .L_41797d
.L_418f00:

            mov R14,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RSP+136]
            mov RBX,QWORD PTR [RSP+96]
            sub EAX,DWORD PTR [R14+368]
            cdqe 
            add RAX,QWORD PTR [R14+376]
            cmp QWORD PTR [RSP+88],RBX
            mov RDX,RAX
            jne .L_4182ab

            cmp DWORD PTR [RBP+48],7
            jg .L_4184e5

            mov R8D,DWORD PTR [RBP+24]
            test R8D,R8D
            jle .L_418f9b

            mov RAX,QWORD PTR [R14+408]
            movsxd R9,R8D
            mov RAX,QWORD PTR [RAX+16]
            mov DWORD PTR [R14+392],R8D
            add QWORD PTR [R14+400],R9
            mov QWORD PTR [R14+384],RAX
            mov RAX,QWORD PTR [R14+8]
            mov DWORD PTR [RBP+24],0
            mov QWORD PTR [R14+376],RDX
            sub RAX,RDX
            mov QWORD PTR [R14+16],RDX
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [R14]
            jmp .L_418307
.L_418f8a:

            call __stack_chk_fail@PLT
.L_418f8f:

            lea RDX,QWORD PTR [RIP+.L_41ad6b]
            jmp .L_418ee4
.L_418f9b:

            mov QWORD PTR [R14+376],RAX
            mov RAX,QWORD PTR [R14+8]
            mov R8D,DWORD PTR [R14+392]
            mov QWORD PTR [RSP+88],RAX
            jmp .L_4182db
.L_418fb7:

            mov R14,QWORD PTR [RSP+16]
            mov DWORD PTR [RBP+32],EBX
            mov R12D,10
            mov DWORD PTR [RSP+140],R13D
            mov R8D,DWORD PTR [R14+392]
            jmp .L_418880
.L_418fd9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418fe0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            movsxd RBX,ECX
            mov RBP,RDI
            mov R14,RBX
            mov R12,R9
            sub RSP,72
.L_418ffd:

            mov QWORD PTR [R9],RBX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP],R8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419020:

            xor EDX,EDX
            mov RSI,RBX
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_4196e0

            cmp R14D,2
            je .L_419170

            mov R15D,DWORD PTR [RAX]
            test R15,R15
            je .L_41917d
.L_41904c:

            mov RAX,QWORD PTR [R12]
            add RAX,R15
            cmp RAX,QWORD PTR [RSP]
            ja .L_4192d8

            cmp RBX,R15
            jae .L_4192d8

            xor EDX,EDX
            mov RSI,R15
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            mov R10,RAX
            je .L_4196e0

            lea R11D,DWORD PTR [R14+1]
            mov RCX,R15
            add QWORD PTR [R12],R15
            movzx R9D,BYTE PTR [RAX+RBX*1]
            lea R8,QWORD PTR [RAX+RBX*1+1]
            movsxd R11,R11D
            sub RCX,R11
            test R13,R13
            je .L_4190cd

            test R9B,R9B
            je .L_4190cd

            movzx EDI,WORD PTR [R13]
            mov RDX,R15
            mov RSI,RAX
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            call .L_417530

            mov R8,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov WORD PTR [R13],AX
.L_4190cd:

            cmp R9B,70
            je .L_419460

            jbe .L_419120

            cmp R9B,83
            je .L_419660

            ja .L_4191b0

            cmp R9B,81
            je .L_4194f0

            ja .L_419620

            cmp R9B,80
            jne .L_419110

            cmp RCX,2
            je .L_4196c0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419110:

            mov RSI,R15
            mov RDI,RBP
            call .L_404a30

            jmp .L_419020
.L_419120:

            cmp R9B,2
            je .L_419250

            jbe .L_4191f8

            cmp R9B,65
            je .L_419560

            cmp R9B,66
            je .L_419530

            cmp R9B,64
            jne .L_419110

            cmp RCX,2
            jne .L_419110

            movzx EAX,WORD PTR [R8]
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,R15
            mov RDI,RBP
            mov BYTE PTR [RDX+288],AL
            call .L_404a30

            jmp .L_419020
          .byte 0x90
.L_419170:

            movzx R15D,WORD PTR [RAX]
            test R15,R15
            jne .L_41904c
.L_41917d:

            test R13,R13
            je .L_419197

            movzx EDI,WORD PTR [R13]
            mov RDX,RBX
            mov RSI,RAX
            call .L_417530

            mov WORD PTR [R13],AX
.L_419197:

            mov RSI,RBX
            mov RDI,RBP
            call .L_404a30

            xor EAX,EAX
            jmp .L_4192f3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4191b0:

            cmp R9B,127
            je .L_419400

            cmp R9B,255
            je .L_4193a8

            cmp R9B,84
            jne .L_419110

            cmp RCX,4
            jne .L_419110

            mov ESI,DWORD PTR [R8]
            mov RAX,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov QWORD PTR [RAX+88],RSI
            mov RSI,R15
            call .L_404a30

            jmp .L_419020
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4191f8:

            test R9B,R9B
            je .L_419320

            cmp R9B,1
            jne .L_419110

            test RCX,RCX
            je .L_4196a0

            cmp BYTE PTR [R8],0
            je .L_4192d8

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,R8
            mov RDX,RCX
            lea RDI,QWORD PTR [RAX+240]
            mov QWORD PTR [RAX+248],0
            call .L_437290

            mov RSI,R15
            mov RDI,RBP
            call .L_404a30

            jmp .L_419020
.L_419250:

            test RCX,RCX
            je .L_4192d8

            cmp BYTE PTR [R8],0
            je .L_4192d8

            mov RDI,QWORD PTR [RSP+24]
            mov RDX,RCX
            mov RSI,R8
            mov QWORD PTR [RDI+224],0
            add RDI,216
            call .L_437290

            mov RDI,QWORD PTR [RSP+24]
            cmp QWORD PTR [RDI+224],0
            je .L_41970b

            mov RSI,QWORD PTR [RDI+216]
            xor EDX,EDX
            xor EAX,EAX
            nop
.L_4192a0:

            add RAX,RSI
            cmp BYTE PTR [RAX],255
            jne .L_4192b2

            mov BYTE PTR [RAX],47
            mov RSI,QWORD PTR [RDI+216]
.L_4192b2:

            mov RCX,QWORD PTR [RDI+224]
            lea EAX,DWORD PTR [RDX+1]
            mov RDX,RAX
            cmp RAX,RCX
            jb .L_4192a0

            sub RCX,1
.L_4192c8:

            cmp BYTE PTR [RSI+RCX*1],47
            je .L_419110

            nop
            nop
            nop
            nop
            nop
            nop
.L_4192d8:

            lea RDX,QWORD PTR [RIP+.L_41ada3]
.L_4192df:

            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0
.L_4192ee:

            mov EAX,4294967266
.L_4192f3:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_419821

            add RSP,72
.L_41930b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419320:

            cmp RCX,1
            mov QWORD PTR [RSP+8],RCX
            jbe .L_419110

            movzx EAX,WORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            test R13,R13
            mov QWORD PTR [RSP+16],R8
            mov WORD PTR [RSI+192],AX
            je .L_419110

            movzx EDI,WORD PTR [R13]
            mov RDX,R11
            mov RSI,R10
            call .L_417530

            lea RSI,QWORD PTR [RIP+.L_41a8e0]
            mov EDX,2
            mov WORD PTR [R13],AX
            movzx EDI,AX
            call .L_417530

            mov RCX,QWORD PTR [RSP+8]
            mov WORD PTR [R13],AX
            mov RDX,RCX
            sub RDX,2
            jne .L_4196f0

            mov WORD PTR [R13],AX
.L_419392:

            mov RSI,R15
            mov RDI,RBP
            call .L_404a30

            jmp .L_419020
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4193a8:

            cmp RCX,20
            jne .L_419110

            mov EAX,DWORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov DWORD PTR [RSI+120],EAX
            mov EDX,DWORD PTR [R8+4]
            mov RAX,RSI
            mov QWORD PTR [RSI+136],RDX
            mov ESI,DWORD PTR [R8+8]
            mov QWORD PTR [RAX+128],RSI
            mov EDX,DWORD PTR [R8+12]
            mov QWORD PTR [RAX+72],RDX
            mov ESI,DWORD PTR [R8+16]
            or DWORD PTR [RAX+64],7
            mov QWORD PTR [RAX+104],RSI
            mov RSI,R15
            call .L_404a30

            jmp .L_419020
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419400:

            cmp RCX,16
            jne .L_419110

            movzx EAX,WORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov BYTE PTR [RSI+288],AL
            movzx EAX,WORD PTR [R8+2]
            mov DWORD PTR [RSI+120],EAX
            movzx EAX,WORD PTR [R8+4]
            mov QWORD PTR [RSI+136],RAX
            movzx EAX,WORD PTR [R8+6]
            mov QWORD PTR [RSI+128],RAX
            mov EDX,DWORD PTR [R8+8]
            mov RAX,RSI
            mov QWORD PTR [RSI+72],RDX
            mov ESI,DWORD PTR [R8+12]
            or DWORD PTR [RAX+64],7
            mov QWORD PTR [RAX+104],RSI
            mov RSI,R15
            call .L_404a30

            jmp .L_419020
.L_419460:

            cmp RCX,4
            jne .L_419110

            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+48],0
            mov EDX,DWORD PTR [R8]
            lea RSI,QWORD PTR [RIP+.L_41ad83]
            mov QWORD PTR [RSP+8],RAX
            cmp EDX,65001
            jne .L_41977f
.L_4194a5:

            mov EDX,1
            mov RDI,RBP
            call .L_437870

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSI+200],RAX
            call .L_434290

            mov RSI,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSI+200],0
            je .L_4192ee

            mov RSI,R15
            mov RDI,RBP
            call .L_404a30

            jmp .L_419020
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4194f0:

            cmp RCX,4
            jne .L_419110

            movzx EAX,WORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov QWORD PTR [RSI+136],RAX
            movzx EAX,WORD PTR [R8+2]
            mov QWORD PTR [RSI+128],RAX
            mov RSI,R15
            call .L_404a30

            jmp .L_419020

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419530:

            cmp RCX,16
            jne .L_419110

            mov RAX,QWORD PTR [R8]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov QWORD PTR [RSI+48],RAX
            mov RAX,QWORD PTR [R8+8]
            mov QWORD PTR [RSI+56],RAX
            mov RSI,R15
            call .L_404a30

            jmp .L_419020
          .byte 0x66
          .byte 0x90
.L_419560:

            cmp RCX,24
            jne .L_419110

            mov RAX,QWORD PTR [RSP+24]
            movabs RDX,116444735999999999
            lea RSI,QWORD PTR [RAX+80]
            mov RAX,QWORD PTR [R8]
            cmp RAX,RDX
            ja .L_419723

            xor EDX,EDX
            test RSI,RSI
            je .L_41959d

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+80],0
.L_41959d:

            mov RAX,QWORD PTR [RSP+24]
            movabs RSI,116444735999999999
            mov QWORD PTR [RAX+72],RDX
            mov RAX,QWORD PTR [R8+8]
            cmp RAX,RSI
            ja .L_4197db

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+96],0
            xor EAX,EAX
.L_4195cc:

            mov RSI,QWORD PTR [RSP+24]
            movabs RDX,116444735999999999
            mov QWORD PTR [RSI+88],RAX
            mov RAX,QWORD PTR [R8+16]
            cmp RAX,RDX
            ja .L_41979a

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+112],0
            xor EAX,EAX
.L_4195fb:

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBP
            or DWORD PTR [RSI+64],3
            mov QWORD PTR [RSI+104],RAX
            mov RSI,R15
            call .L_404a30

            jmp .L_419020
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419620:

            test RCX,RCX
            je .L_419110

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,R8
            mov RDX,RCX
            lea RDI,QWORD PTR [RAX+168]
            mov QWORD PTR [RAX+176],0
            call .L_437290

            mov RSI,R15
            mov RDI,RBP
            call .L_404a30

            jmp .L_419020
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419660:

            test RCX,RCX
            je .L_419110

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,R8
            mov RDX,RCX
            lea RDI,QWORD PTR [RAX+144]
            mov QWORD PTR [RAX+152],0
            call .L_437290

            mov RSI,R15
            mov RDI,RBP
            call .L_404a30

            jmp .L_419020
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4196a0:

            mov RAX,QWORD PTR [RSP+24]
            mov RSI,R15
            mov RDI,RBP
            mov QWORD PTR [RAX+248],0
            call .L_404a30

            jmp .L_419020
.L_4196c0:

            mov RSI,QWORD PTR [RSP+24]
            movzx EAX,WORD PTR [R8]
            mov RDI,RBP
            or DWORD PTR [RSI+64],4
            mov DWORD PTR [RSI+120],EAX
            mov RSI,R15
            call .L_404a30

            jmp .L_419020
.L_4196e0:

            lea RDX,QWORD PTR [RIP+.L_41ad89]
            jmp .L_4192df
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4196f0:

            mov R8,QWORD PTR [RSP+16]
            movzx EDI,AX
            lea RSI,QWORD PTR [R8+2]
            call .L_417530

            mov WORD PTR [R13],AX
            jmp .L_419392
.L_41970b:

            mov RAX,QWORD PTR [RSP+24]
            mov RCX,-1
            mov RSI,QWORD PTR [RAX+216]
            jmp .L_4192c8
.L_419723:

            movabs RDX,-116444736000000000
            test RSI,RSI
            lea RCX,QWORD PTR [RAX+RDX*1]
            je .L_419769

            movabs RAX,-2972493582642298179
            mul RCX
            shr RDX,23
            imul RAX,RDX,10000000
            mov RDX,RCX
            sub RDX,RAX
            lea RAX,QWORD PTR [RDX+RDX*4]
            mov RDX,QWORD PTR [RSP+24]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RDX+80],RAX
.L_419769:

            movabs RAX,-2972493582642298179
            mul RCX
            shr RDX,23
            jmp .L_41959d
.L_41977f:

            lea RSI,QWORD PTR [RIP+.L_41ad9e]
            mov RDI,RAX
            xor EAX,EAX
            call .L_43ee20

            mov RSI,QWORD PTR [RSP+32]
            jmp .L_4194a5
.L_41979a:

            movabs RDX,-116444736000000000
            lea RCX,QWORD PTR [RAX+RDX*1]
            movabs RAX,-2972493582642298179
            mul RCX
            shr RDX,23
            imul RAX,RDX,10000000
            sub RCX,RAX
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RSI+112],RAX
            mov RAX,RDX
            jmp .L_4195fb
.L_4197db:

            movabs RSI,-116444736000000000
            lea RCX,QWORD PTR [RAX+RSI*1]
            movabs RAX,-2972493582642298179
            mov RSI,QWORD PTR [RSP+24]
            mul RCX
            shr RDX,23
            imul RAX,RDX,10000000
            sub RCX,RAX
            lea RAX,QWORD PTR [RCX+RCX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RSI+96],RAX
            mov RAX,RDX
            jmp .L_4195cc
.L_419821:

            call __stack_chk_fail@PLT
.L_419826:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419830:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,104
.L_419841:

            mov EDI,DWORD PTR [RIP+.L_65b7a0]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RSI
            test EDI,EDI
            jne .L_4198de

            lea RDI,QWORD PTR [RIP+.L_65b7c0]
            mov DWORD PTR [RIP+.L_65b7a0],1
            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
.L_419878:

            mov EDX,R8D
            mov ESI,8
.L_419880:

            mov ECX,EDX
            shr DX,1
            and ECX,1
            lea EAX,DWORD PTR [RCX*4]
            add EAX,ECX
            shl EAX,13
            add EAX,ECX
            xor EDX,EAX
            sub ESI,1
            jne .L_419880

            mov WORD PTR [RDI+R8*2],DX
            add R8,1
            cmp R8,256
            jne .L_419878

            lea RDX,QWORD PTR [RIP+.L_65b7c0]
            lea RSI,QWORD PTR [RDX+512]
            nop
            nop
            nop
.L_4198c0:

            movzx EAX,WORD PTR [RDX]
            add RDX,2
            movzx ECX,AL
            shr AX,8
            xor AX,WORD PTR [RDI+RCX*2]
            mov WORD PTR [RDX+510],AX
            cmp RDX,RSI
            jne .L_4198c0
.L_4198de:

            cmp QWORD PTR [RBX+24],0
            mov DWORD PTR [RBX+16],720896
            je .L_419e39
.L_4198f0:

            mov RAX,QWORD PTR [RBX+2472]
            xor ESI,ESI
            xor EDX,EDX
            mov RDI,RBX
            mov RBP,QWORD PTR [RAX]
            mov WORD PTR [RBP+291],SI
            mov BYTE PTR [RBP+293],0
            mov ESI,22
            mov QWORD PTR [RBP+16],0
            call .L_4049e0

            test RAX,RAX
            mov R12,RAX
            je .L_419e49

            cmp BYTE PTR [RBP+289],0
            movzx EAX,BYTE PTR [RAX]
            jne .L_419941

            cmp AL,77
            je .L_419e80
.L_419941:

            test AL,AL
            jne .L_419971
.L_419945:

            mov R13D,1
.L_41994b:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_41a617

            add RSP,104
.L_419966:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_419971:

            mov RDI,R12
            call .L_416b40

            test RAX,RAX
            jne .L_41a61c

            mov BYTE PTR [RBP+289],1
            mov QWORD PTR [RBP+32],0
            movzx EAX,BYTE PTR [R12+20]
            mov BYTE PTR [RBP+40],AL
            movzx EAX,BYTE PTR [R12+3]
            mov BYTE PTR [RBP+41],AL
            movzx EAX,BYTE PTR [R12+4]
            mov BYTE PTR [RBP+42],AL
            movzx EAX,BYTE PTR [R12+5]
            cmp WORD PTR [RBP+41],26732
            mov BYTE PTR [RBP+43],AL
            lea RAX,QWORD PTR [RBP+41]
            je .L_41a020
.L_4199c5:

            mov BYTE PTR [RBP+290],0
            xor EDX,EDX
.L_4199ce:

            cmp WORD PTR [RBP+41],26732
            je .L_41a03b
.L_4199da:

            cmp WORD PTR [RBP+41],31340
            je .L_41a3d0
.L_4199e6:

            mov BYTE PTR [RBP+294],1
.L_4199ed:

            cmp DL,1
            mov QWORD PTR [RBP+48],0
            mov QWORD PTR [RBP+56],0
            sbb EAX,EAX
            mov DWORD PTR [RBP+64],0
            mov QWORD PTR [RBP+72],0
            and EAX,4294967223
            mov QWORD PTR [RBP+80],0
            mov QWORD PTR [RBP+88],0
            add EAX,511
            mov QWORD PTR [RBP+96],0
            mov QWORD PTR [RBP+104],0
            mov DWORD PTR [RBP+120],EAX
            mov RAX,QWORD PTR [RBP+208]
            mov QWORD PTR [RBP+112],0
            mov QWORD PTR [RBP+128],0
            mov QWORD PTR [RBP+136],0
            mov QWORD PTR [RBP+224],0
            mov QWORD PTR [RBP+248],0
            mov BYTE PTR [RBP+288],0
            mov QWORD PTR [RBP+200],RAX
            movzx R13D,BYTE PTR [R12+20]
            cmp R13B,1
            je .L_41a1bd

            jb .L_41a051

            cmp R13B,2
            je .L_419f28

            cmp R13B,3
            jne .L_41a171

            xor EDX,EDX
            mov ESI,28
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_41a5f8

            cmp WORD PTR [RAX],4
            jne .L_41a263

            mov EDI,DWORD PTR [RAX+24]
            mov QWORD PTR [RBP+32],RDI
            mov RDX,RDI
            mov EDI,DWORD PTR [RAX+7]
            mov QWORD PTR [RBP+48],RDI
            mov EDI,DWORD PTR [RAX+11]
            mov QWORD PTR [RBP+56],RDI
            mov EDI,DWORD PTR [RAX+15]
            mov QWORD PTR [RBP+88],RDI
            movzx ECX,WORD PTR [RAX+21]
            or DWORD PTR [RBP+64],8
            cmp EDX,31
            mov WORD PTR [RBP+194],CX
            jbe .L_41a263

            mov EDX,28
            xor EDI,EDI
            mov RSI,RAX
            call .L_417530

            mov ESI,28
            mov RDI,RBX
            mov WORD PTR [RSP+32],AX
            call .L_404a30

            mov RAX,QWORD PTR [RBP+32]
            lea RDX,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+64]
            mov ECX,4
            mov RSI,RBP
            mov RDI,RBX
            lea R8,QWORD PTR [RAX-28]
            call .L_418fe0

            cmp EAX,-20
            mov R13D,EAX
            jl .L_41994b
.L_419b57:

            movzx EAX,WORD PTR [RSP+32]
            cmp WORD PTR [RBP+192],AX
            jne .L_41a5ec
.L_419b69:

            cmp R13D,-20
            jl .L_41994b
.L_419b73:

            cmp BYTE PTR [RBP+290],0
            jne .L_419b8a

            cmp QWORD PTR [RBP+248],0
            je .L_419e6a
.L_419b8a:

            lea R15,QWORD PTR [RBP+216]
            lea RSI,QWORD PTR [RBP+240]
            lea R14,QWORD PTR [RSP+64]
            mov RDI,R15
            call .L_434410

            mov RSI,R15
            mov RDI,R14
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            call .L_434410

            mov EAX,DWORD PTR [RBP+120]
            mov EDX,EAX
            and EDX,61440
            cmp EDX,40960
            je .L_41a3e0

            and AH,15
            cmp BYTE PTR [RBP+290],1
            sbb EDX,EDX
            and EDX,16384
            add EDX,16384
            or EAX,EDX
            mov DWORD PTR [RBP+120],EAX
.L_419c1a:

            test BYTE PTR [RBP+64],4
            jne .L_419c30

            test BYTE PTR [RBP+288],1
            je .L_419c30

            and DWORD PTR [RBP+120],4294967149
.L_419c30:

            mov RCX,QWORD PTR [RBP+200]
            mov RDX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP]
            call .L_4466d0

            test EAX,EAX
            je .L_419c87

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_41a5e3

            mov RDI,QWORD PTR [RBP+200]
            mov R13D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_41af68]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            call .L_43f5d0
.L_419c87:

            mov RDI,R14
            call .L_434290

            mov RDX,QWORD PTR [RSP+40]
            test RDX,RDX
            je .L_41a161

            mov RCX,QWORD PTR [RBP+200]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP]
            call .L_446910

            test EAX,EAX
            je .L_419cef

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_41a5c2

            mov RDI,QWORD PTR [RBP+200]
            mov R13D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_41afc8]
            mov RCX,RAX
            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            call .L_43f5d0
.L_419cef:

            lea RDI,QWORD PTR [RSP+32]
            call .L_434290

            cmp BYTE PTR [R12+20],0
            je .L_41a4c2
.L_419d05:

            mov R15,QWORD PTR [RSP]
            mov ESI,DWORD PTR [RBP+120]
            mov RDI,R15
            call .L_446590

            mov RSI,QWORD PTR [RBP+128]
            mov RDI,R15
            call .L_446950

            mov RSI,QWORD PTR [RBP+136]
            mov RDI,R15
            call .L_445fa0

            cmp QWORD PTR [RBP+152],0
            jne .L_41a4ad
.L_419d40:

            cmp QWORD PTR [RBP+176],0
            jne .L_41a498
.L_419d4e:

            test BYTE PTR [RBP+64],1
            je .L_41a1a4

            mov R15,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RBP+80]
            mov RSI,QWORD PTR [RBP+72]
            mov RDI,R15
            call .L_4462a0

            mov RDX,QWORD PTR [RBP+80]
            mov RSI,QWORD PTR [RBP+72]
            mov RDI,R15
            call .L_446330
.L_419d7c:

            mov R15,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RBP+96]
            mov RSI,QWORD PTR [RBP+88]
            mov RDI,R15
            call .L_4465a0

            test BYTE PTR [RBP+64],2
            je .L_41a196

            mov RDX,QWORD PTR [RBP+112]
            mov RSI,QWORD PTR [RBP+104]
            mov RDI,R15
            call .L_446210
.L_419daa:

            cmp BYTE PTR [RBP+290],0
            jne .L_419dc5

            mov RDI,QWORD PTR [RSP]
            call .L_445790

            test RAX,RAX
            je .L_41a5b0
.L_419dc5:

            mov RDI,QWORD PTR [RSP]
            call .L_446790
.L_419dce:

            xor ECX,ECX
            cmp BYTE PTR [RBP+290],0
            mov RAX,QWORD PTR [RBP+48]
            mov QWORD PTR [RBP],0
            mov WORD PTR [RBP+24],CX
            mov QWORD PTR [RBP+8],RAX
            jne .L_419df2

            test RAX,RAX
            jne .L_419df9
.L_419df2:

            mov BYTE PTR [RBP+292],1
.L_419df9:

            movsx EAX,BYTE PTR [RBP+43]
            sub RSP,8
.L_419e01:

            lea R12,QWORD PTR [RBP+295]
            lea RCX,QWORD PTR [RIP+.L_41ae63]
            mov EDX,64
            mov ESI,1
            mov RDI,R12
            push RAX
            movsx R9D,BYTE PTR [RBP+42]
            xor EAX,EAX
            movsx R8D,BYTE PTR [RBP+41]
            call __sprintf_chk@PLT

            mov QWORD PTR [RBX+24],R12
            pop RAX
            pop RDX
            jmp .L_41994b
.L_419e39:

            lea RAX,QWORD PTR [RIP+.L_41adbf]
            mov QWORD PTR [RBX+24],RAX
            jmp .L_4198f0
.L_419e49:

            xor EDX,EDX
            mov ESI,1
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_419945

            cmp BYTE PTR [RAX],0
            je .L_419945
.L_419e6a:

            lea RDX,QWORD PTR [RIP+.L_41ad89]
            jmp .L_41a26a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419e80:

            cmp BYTE PTR [R12+1],90
            jne .L_419971

            lea R14,QWORD PTR [RSP+64]
            mov R12D,4096
.L_419e97:

            mov RDX,R14
            mov RSI,R12
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R8,RAX
            je .L_41a478

            mov R9,QWORD PTR [RSP+64]
            cmp R9,21
            jle .L_41a485

            add R9,RAX
            lea RAX,QWORD PTR [RAX+22]
            mov RSI,R8
            cmp R9,RAX
            ja .L_419ee8

            jmp .L_41a468
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419ed8:

            add RSI,RAX
            lea RAX,QWORD PTR [RSI+22]
            cmp R9,RAX
            jbe .L_41a468
.L_419ee8:

            mov RDI,RSI
            call .L_416b40

            test RAX,RAX
            jne .L_419ed8

            sub RSI,R8
            mov RDI,RBX
            call .L_404a30

            xor EDX,EDX
            mov ESI,1
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R12,RAX
            je .L_419e6a

            movzx EAX,BYTE PTR [RAX]
            jmp .L_419941
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419f28:

            xor EDX,EDX
            mov ESI,24
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_419e6a

            movzx ECX,WORD PTR [RAX]
            mov QWORD PTR [RBP+32],RCX
            mov EDI,DWORD PTR [RAX+7]
            mov RDX,RCX
            mov QWORD PTR [RBP+48],RDI
            mov EDI,DWORD PTR [RAX+11]
            mov QWORD PTR [RBP+56],RDI
            mov EDI,DWORD PTR [RAX+15]
            mov QWORD PTR [RBP+88],RDI
            movzx ECX,WORD PTR [RAX+21]
            or DWORD PTR [RBP+64],8
            cmp DX,23
            mov WORD PTR [RBP+194],CX
            jbe .L_41a690

            mov EDX,24
            xor EDI,EDI
            mov RSI,RAX
            call .L_417530

            mov ESI,24
            mov RDI,RBX
            mov WORD PTR [RSP+32],AX
            call .L_404a30

            mov RAX,QWORD PTR [RBP+32]
            lea RDX,QWORD PTR [RSP+32]
            lea R9,QWORD PTR [RSP+64]
            mov ECX,2
            mov RSI,RBP
            mov RDI,RBX
            lea R8,QWORD PTR [RAX-24]
            call .L_418fe0

            cmp EAX,-20
            mov R13D,EAX
            jl .L_41994b

            mov R14D,4294967272
            sub R14D,DWORD PTR [RSP+64]
            add R14D,DWORD PTR [RBP+32]
            test R14D,R14D
            jle .L_419b57

            movsxd R14,R14D
            xor EDX,EDX
            mov RDI,RBX
            mov RSI,R14
            call .L_4049e0

            test RAX,RAX
            je .L_419e6a

            movzx EDI,WORD PTR [RSP+32]
            mov RDX,R14
            mov RSI,RAX
            call .L_417530

            mov RSI,R14
            mov RDI,RBX
            mov WORD PTR [RSP+32],AX
            call .L_404a30

            jmp .L_419b57
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a020:

            cmp BYTE PTR [RAX+2],100
            jne .L_4199c5

            mov BYTE PTR [RBP+290],1
            mov EDX,1
            jmp .L_4199ce
.L_41a03b:

            cmp BYTE PTR [RAX+2],48
            jne .L_4199da
.L_41a045:

            mov BYTE PTR [RBP+294],0
            jmp .L_4199ed
.L_41a051:

            xor EDX,EDX
            mov ESI,24
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R14,RAX
            je .L_419e6a

            movzx EAX,BYTE PTR [RAX]
            lea RDI,QWORD PTR [R14+15]
            add RAX,2
            mov QWORD PTR [RBP+32],RAX
            movzx EAX,BYTE PTR [R14+1]
            mov BYTE PTR [RSP+16],AL
            mov EAX,DWORD PTR [R14+7]
            mov QWORD PTR [RBP+48],RAX
            mov EAX,DWORD PTR [R14+11]
            mov QWORD PTR [RBP+56],RAX
            call .L_417610

            mov RSI,QWORD PTR [RBP+32]
            mov QWORD PTR [RBP+88],RAX
            movzx EAX,BYTE PTR [R14+21]
            lea R15D,DWORD PTR [RSI-24]
            sub R15D,EAX
            cmp EAX,221
            mov BYTE PTR [RSP+8],AL
            mov DWORD PTR [RSP+28],EAX
            jg .L_41a0c5

            test R15D,R15D
            jns .L_41a360
.L_41a0c5:

            cmp R15D,-2
            jne .L_41a263

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R14,RAX
            je .L_419e6a

            movzx EDX,BYTE PTR [RSP+8]
            lea RSI,QWORD PTR [RAX+22]
            lea RDI,QWORD PTR [RBP+240]
            mov QWORD PTR [RBP+248],0
            call .L_437290

            mov RSI,QWORD PTR [RBP+32]
            lea RAX,QWORD PTR [R14+2]
            cmp RSI,2
            je .L_41a146
.L_41a113:

            lea RDX,QWORD PTR [R14+RSI*1]
.L_41a117:

            add RAX,1
            add R13B,BYTE PTR [RAX-1]
            cmp RAX,RDX
            jne .L_41a117
.L_41a124:

            test R15D,R15D
            jle .L_41a146

            mov EAX,DWORD PTR [RSP+28]
            add EAX,22
            cdqe 
            lea RAX,QWORD PTR [R14+RAX*1+2]
            cmp BYTE PTR [RAX],85
            jne .L_41a146

            cmp R15D,12
            je .L_41a663
.L_41a146:

            mov RDI,RBX
            call .L_404a30

            cmp BYTE PTR [RSP+16],R13B
            jne .L_41a338

            xor R13D,R13D
            jmp .L_419b73
.L_41a161:

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_4467d0

            jmp .L_419cef
.L_41a171:

            lea RDX,QWORD PTR [RIP+.L_41af20]
            movzx ECX,R13B
            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            mov R13D,4294967266
            call .L_43f5d0

            jmp .L_41994b
.L_41a196:

            mov RDI,QWORD PTR [RSP]
            call .L_446270

            jmp .L_419daa
.L_41a1a4:

            mov R15,QWORD PTR [RSP]
            mov RDI,R15
            call .L_446300

            mov RDI,R15
            call .L_446390

            jmp .L_419d7c
.L_41a1bd:

            xor EDX,EDX
            mov ESI,27
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R13,RAX
            je .L_419e6a

            movzx EAX,BYTE PTR [RAX]
            lea RDI,QWORD PTR [R13+15]
            add RAX,2
            mov QWORD PTR [RBP+32],RAX
            movzx EAX,BYTE PTR [R13+1]
            mov BYTE PTR [RSP+8],AL
            mov EAX,DWORD PTR [R13+7]
            mov QWORD PTR [RBP+48],RAX
            mov EAX,DWORD PTR [R13+11]
            mov QWORD PTR [RBP+56],RAX
            call .L_417610

            mov RSI,QWORD PTR [RBP+32]
            mov QWORD PTR [RBP+88],RAX
            movzx R14D,BYTE PTR [R13+21]
            lea EAX,DWORD PTR [RSI-27]
            cmp EAX,R14D
            mov R15,R14
            js .L_41a263

            cmp R14D,230
            jg .L_41a263

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R13,RAX
            je .L_419e6a

            test R14D,R14D
            je .L_41a284

            cmp BYTE PTR [RAX+22],255
            je .L_41a263

            lea EDX,DWORD PTR [R14-1]
            lea RAX,QWORD PTR [RAX+23]
            lea RDX,QWORD PTR [R13+RDX*1+23]
.L_41a254:

            cmp RAX,RDX
            je .L_41a284

            add RAX,1
            cmp BYTE PTR [RAX-1],255
            jne .L_41a254
.L_41a263:

            lea RDX,QWORD PTR [RIP+.L_41adf9]
.L_41a26a:

            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            call .L_43f5d0

            mov R13D,4294967266
            jmp .L_41994b
.L_41a284:

            lea RSI,QWORD PTR [R13+22]
            lea RDI,QWORD PTR [RBP+240]
            mov RDX,R15
            mov QWORD PTR [RBP+248],0
            call .L_437290

            movzx EAX,WORD PTR [R13+R15*1+22]
            or DWORD PTR [RBP+64],8
            lea RDX,QWORD PTR [R13+2]
            mov WORD PTR [RBP+194],AX
            mov RAX,QWORD PTR [RBP+32]
            mov RSI,RAX
            sub RSI,2
            je .L_41a65b

            add RAX,R13
            xor R15D,R15D
.L_41a2ce:

            add RDX,1
            add R15B,BYTE PTR [RDX-1]
            cmp RDX,RAX
            jne .L_41a2ce
.L_41a2db:

            mov RDI,RBX
            call .L_404a30

            mov RAX,QWORD PTR [RBP+48]
            lea R9,QWORD PTR [RSP+64]
            xor EDX,EDX
            mov ECX,2
            mov RSI,RBP
            mov RDI,RBX
            lea R8,QWORD PTR [RAX+2]
            call .L_418fe0

            cmp EAX,-20
            mov R13D,EAX
            jl .L_41994b

            test EAX,EAX
            mov EAX,0
            cmovg R13D,EAX
            mov EAX,2
            sub RAX,QWORD PTR [RSP+64]
            add QWORD PTR [RBP+48],RAX
            js .L_41a263

            cmp BYTE PTR [RSP+8],R15B
            je .L_419b69
.L_41a338:

            lea RDX,QWORD PTR [RIP+.L_41ae0c]
            or ESI,4294967295
            mov RDI,RBX
            xor EAX,EAX
            mov R13D,4294967266
            call .L_43f5d0

            jmp .L_41994b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a360:

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R14,RAX
            je .L_419e6a

            movzx R8D,BYTE PTR [RSP+8]
            lea RSI,QWORD PTR [R14+22]
            lea RDI,QWORD PTR [RBP+240]
            mov QWORD PTR [RBP+248],0
            mov RDX,R8
            mov QWORD PTR [RSP+8],R8
            call .L_437290

            mov R8,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RBP+32]
            movzx EAX,WORD PTR [R14+R8*1+22]
            or DWORD PTR [RBP+64],8
            cmp RSI,2
            mov WORD PTR [RBP+194],AX
            lea RAX,QWORD PTR [R14+2]
            jne .L_41a113

            jmp .L_41a124
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a3d0:

            cmp BYTE PTR [RAX+2],52
            jne .L_4199e6

            jmp .L_41a045
          .byte 0x90
.L_41a3e0:

            mov RDI,QWORD PTR [RSP+64]
            mov ESI,124
            call strchr@PLT

            test RAX,RAX
            je .L_41a628

            lea RSI,QWORD PTR [RAX+1]
            or R9,-1
            xor R15D,R15D
            mov QWORD PTR [RSP+16],RAX
            mov RCX,R9
            mov QWORD PTR [RSP+8],R9
            mov RDI,RSI
            mov EAX,R15D

            repne scasb AL,BYTE PTR [RDI]

            lea RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+40],0
            mov RDX,RCX
            not RDX
            add RDX,R9
            call .L_437290

            mov R8,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RSP+8]
            mov EAX,R15D
            mov BYTE PTR [R8],0
            mov RDI,QWORD PTR [RSP+64]
            mov RCX,R9

            repne scasb AL,BYTE PTR [RDI]

            mov RAX,RCX
            not RAX
            sub RAX,1
            mov QWORD PTR [RSP+72],RAX
            jmp .L_419c1a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a468:

            sub RSI,R8
            mov RDI,RBX
            call .L_404a30

            jmp .L_419e97
.L_41a478:

            sar R12,1
            cmp R12,24
            jg .L_419e97
.L_41a485:

            lea RDX,QWORD PTR [RIP+.L_41adc3]
            jmp .L_41a26a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a498:

            mov RSI,QWORD PTR [RBP+168]
            mov RDI,QWORD PTR [RSP]
            call .L_445fb0

            jmp .L_419d4e
.L_41a4ad:

            mov RSI,QWORD PTR [RBP+144]
            mov RDI,QWORD PTR [RSP]
            call .L_446960

            jmp .L_419d40
.L_41a4c2:

            mov RDI,QWORD PTR [RSP]
            call .L_445530

            test RAX,RAX
            mov R12,RAX
            je .L_41a52d

            mov RDI,RAX
            mov QWORD PTR [RBP+272],0
            call wcslen@PLT

            lea RDI,QWORD PTR [RBP+264]
            mov RDX,RAX
            mov RSI,R12
            call .L_4372d0

            mov RDX,QWORD PTR [RBP+272]
            mov RSI,QWORD PTR [RBP+264]
            test RDX,RDX
            je .L_41a524

            lea RDX,QWORD PTR [RSI+RDX*4]
            mov RAX,RSI
.L_41a512:

            cmp DWORD PTR [RAX],92
            je .L_41a59d
.L_41a51b:

            add RAX,4
            cmp RAX,RDX
            jne .L_41a512
.L_41a524:

            mov RDI,QWORD PTR [RSP]
            call .L_446670
.L_41a52d:

            mov RDI,QWORD PTR [RSP]
            call .L_445890

            test RAX,RAX
            mov R12,RAX
            je .L_419d05

            mov RDI,RAX
            mov QWORD PTR [RBP+272],0
            call wcslen@PLT

            lea RDI,QWORD PTR [RBP+264]
            mov RDX,RAX
            mov RSI,R12
            call .L_4372d0

            mov RDX,QWORD PTR [RBP+272]
            mov RSI,QWORD PTR [RBP+264]
            test RDX,RDX
            je .L_41a58f

            lea RDX,QWORD PTR [RSI+RDX*4]
            mov RAX,RSI
.L_41a581:

            cmp DWORD PTR [RAX],92
            je .L_41a5a8
.L_41a586:

            add RAX,4
            cmp RAX,RDX
            jne .L_41a581
.L_41a58f:

            mov RDI,QWORD PTR [RSP]
            call .L_446860

            jmp .L_419d05
.L_41a59d:

            mov DWORD PTR [RAX],47
            jmp .L_41a51b
.L_41a5a8:

            mov DWORD PTR [RAX],47
            jmp .L_41a586
.L_41a5b0:

            mov RSI,QWORD PTR [RBP+56]
            mov RDI,QWORD PTR [RSP]
            call .L_446770

            jmp .L_419dce
.L_41a5c2:

            lea RDX,QWORD PTR [RIP+.L_41afa0]
.L_41a5c9:

            mov ESI,12
            mov RDI,RBX
            xor EAX,EAX
            call .L_43f5d0

            mov R13D,4294967266
            jmp .L_41994b
.L_41a5e3:

            lea RDX,QWORD PTR [RIP+.L_41af40]
            jmp .L_41a5c9
.L_41a5ec:

            lea RDX,QWORD PTR [RIP+.L_41ae39]
            jmp .L_41a26a
.L_41a5f8:

            lea RDX,QWORD PTR [RIP+.L_41ad89]
            mov ESI,84
            mov RDI,RBX
            mov R13D,4294967266
            call .L_43f5d0

            jmp .L_41994b
.L_41a617:

            call __stack_chk_fail@PLT
.L_41a61c:

            lea RDX,QWORD PTR [RIP+.L_41ade0]
            jmp .L_41a26a
.L_41a628:

            lea RDX,QWORD PTR [RIP+.L_41ae4e]
            mov ESI,84
            xor EAX,EAX
            mov RDI,RBX
            mov R13D,4294967271
            call .L_43f5d0

            mov RDI,R14
            call .L_434290

            lea RDI,QWORD PTR [RSP+32]
            call .L_434290

            jmp .L_41994b
.L_41a65b:

            xor R15D,R15D
            jmp .L_41a2db
.L_41a663:

            mov EDI,DWORD PTR [RAX+2]
            mov QWORD PTR [RBP+88],RDI
            movzx EDX,WORD PTR [RAX+6]
            mov DWORD PTR [RBP+120],EDX
            movzx EDX,WORD PTR [RAX+8]
            mov QWORD PTR [RBP+128],RDX
            movzx EAX,WORD PTR [RAX+10]
            or DWORD PTR [RBP+64],4
            mov QWORD PTR [RBP+136],RAX
            jmp .L_41a146
.L_41a690:

            lea RDX,QWORD PTR [RIP+.L_41ae21]
            jmp .L_41a26a
.L_41a69c:

            nop
            nop
            nop
            nop
.L_41a6a0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_41b000]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_41a6ba:

            call .L_443f50

            cmp EAX,-30
            je .L_41a757

            mov ESI,416
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_41a75e

            mov QWORD PTR [RAX+264],0
            mov QWORD PTR [RAX+272],0
            lea R9,QWORD PTR [RIP+.L_419830]
            mov QWORD PTR [RAX+280],0
            lea RAX,QWORD PTR [RIP+.L_4177d0]
            push 0
.L_41a710:

            push 0
            lea R8,QWORD PTR [RIP+.L_4176b0]
            lea RCX,QWORD PTR [RIP+.L_417400]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_416cd0]
            push 0
            lea RDX,QWORD PTR [RIP+.L_41adbf]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_4178d0]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_41a757

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_41a757:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_41a75e:

            lea RDX,QWORD PTR [RIP+.L_41ae70]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_41a757
.L_41a77b:
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a780:
          .long .L_416bb0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416b68-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bc0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416b70-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416bd0-.L_41a780
          .long .L_416b68-.L_41a780
.L_41a8b8:
          .long .L_4181f0-.L_41a8b8
          .long .L_4181c0-.L_41a8b8
          .long .L_418130-.L_41a8b8
          .long .L_417eb7-.L_41a8b8
          .long .L_418110-.L_41a8b8
          .long .L_417dc8-.L_41a8b8
          .long .L_418128-.L_41a8b8
          .long .L_417cc1-.L_41a8b8
          .long .L_417d8e-.L_41a8b8
          .long .L_417fbc-.L_41a8b8
.L_41a8e0:
          .zero 32
.L_41a900:
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x8
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xa
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xc
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xd
          .byte 0xe
          .byte 0xe
          .byte 0xe
          .byte 0xe
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x0
.L_41ad00:
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0x7
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0x7f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_41ad28:
          .string "LHa data CRC error"
.L_41ad3b:
          .string "hdrcharset"
.L_41ad46:
          .string "Truncated LHa file body"
.L_41ad5e:
          .string "Bad lzh data"
.L_41ad6b:
          .string "Truncated LHa file data"
.L_41ad83:
          .string "UTF-8"
.L_41ad89:
          .string "Truncated LHa header"
.L_41ad9e:
          .string "CP%d"
.L_41ada3:
          .string "Invalid extended LHa header"
.L_41adbf:
          .string "lha"
.L_41adc3:
          .string "Couldn\'t find out LHa header"
.L_41ade0:
          .string "Bad LHa file"
          .byte 0x6c
          .byte 0x68
          .byte 0x64
          .byte 0x0
          .byte 0x6c
          .byte 0x68
          .byte 0x30
          .byte 0x0
          .byte 0x6c
          .byte 0x7a
          .byte 0x34
          .byte 0x0
.L_41adf9:
          .string "Invalid LHa header"
.L_41ae0c:
          .string "LHa header sum error"
.L_41ae21:
          .string "Invalid LHa header size"
.L_41ae39:
          .string "LHa header CRC error"
.L_41ae4e:
          .string "Unknown symlink-name"
.L_41ae63:
          .string "lha -%c%c%c-"
.L_41ae70:
          .string "Can\'t allocate lha data"
.L_41ae88:
          .string "lha: hdrcharset option needs a character-set name"
          .zero 6
.L_41aec0:
          .string "Unsupported lzh compression method -%c%c%c-"
          .zero 4
.L_41aef0:
          .string "Couldn\'t allocate memory for lzh decompression"
          .zero 1
.L_41af20:
          .string "Unsupported LHa header level %d"
.L_41af40:
          .string "Can\'t allocate memory for Pathname"
          .zero 5
.L_41af68:
          .string "Pathname cannot be converted from %s to current locale."
.L_41afa0:
          .string "Can\'t allocate memory for Linkname"
          .zero 5
.L_41afc8:
          .string "Linkname cannot be converted from %s to current locale."
.L_41b000:
          .string "archive_read_support_format_lha"
.L_41b020:

            xor EAX,EAX
            test RDX,RDX
            movzx R8D,BYTE PTR [RSI]
            jle .L_41b088

            movzx ECX,BYTE PTR [RDI]
            test CL,CL
            je .L_41b088

            test R8B,R8B
            je .L_41b090

            add RDX,RDI
            cmp CL,R8B
            mov R9,RDI
            je .L_41b04b
.L_41b042:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b048:

            mov RSI,R8
.L_41b04b:

            add R9,1
            lea R8,QWORD PTR [RSI+1]
            mov EAX,R9D
            sub EAX,EDI
            cmp R9,RDX
            je .L_41b080

            movzx ECX,BYTE PTR [R9]
            test CL,CL
            je .L_41b080

            movzx ESI,BYTE PTR [R8]
            test SIL,SIL
            je .L_41b0c9

            cmp CL,SIL
            je .L_41b048
.L_41b073:

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b080:

            movzx R8D,BYTE PTR [RSI+1]
            mov RDI,R9
.L_41b088:

            test R8B,R8B
            jne .L_41b073

            movzx ECX,BYTE PTR [RDI]
.L_41b090:

            cmp CL,61
            jbe .L_41b0b0

            cmp CL,92
            jne .L_41b073

            movzx EDX,BYTE PTR [RDI+1]
            cmp DL,10
            je .L_41b042

            cmp DL,13
            mov EDX,0
            cmovne EAX,EDX
            ret 
          .byte 0x90
.L_41b0b0:

            movabs RDX,2305843013508670976
            shr RDX,CL
            and EDX,1
            mov EDX,0
            cmove EAX,EDX
            ret 
.L_41b0c9:

            mov RDI,R9
            jmp .L_41b090
.L_41b0ce:

            nop
            nop
.L_41b0d0:

            test RSI,RSI
            jle .L_41b36b

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
.L_41b0e6:

            movzx R12D,BYTE PTR [RDI]
            test R12B,R12B
            je .L_41b372

            lea RBX,QWORD PTR [RIP+.L_41e200]
            lea R15,QWORD PTR [RIP+.L_65b580]
            mov R14,RSI
            mov EBP,EDX
            mov R11D,ECX
            xor R10D,R10D
            nop
            nop
            nop
            nop
.L_41b110:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b118:

            cmp R12B,32
            je .L_41b124

            cmp R12B,9
            jne .L_41b138
.L_41b124:

            add R13,1
            sub R14,1
            movzx R12D,BYTE PTR [R13]
            mov EAX,1
            jne .L_41b118
.L_41b138:

            cmp R12B,10
            je .L_41b246

            cmp R12B,13
            je .L_41b246

            cmp R12B,92
            je .L_41b2d8
.L_41b156:

            or EAX,R11D
            je .L_41b240

            test R11D,R11D
            je .L_41b16d

            test R14,R14
            je .L_41b246
.L_41b16d:

            test EBP,EBP
            je .L_41b18b

            lea RSI,QWORD PTR [RIP+.L_41df7d]
            mov RDX,R14
            mov RDI,R13
            call .L_41b020

            test EAX,EAX
            jg .L_41b353
.L_41b18b:

            sub R12D,99
            cmp R12B,18
            ja .L_41b240

            movzx R12D,R12B
            movsxd RAX,DWORD PTR [RBX+R12*4]
            add RAX,RBX
            jmp RAX
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b1b0:

            mov R12,R15
            nop
            nop
            nop
            nop
            nop
.L_41b1b8:

            mov RSI,QWORD PTR [R12]
            test RSI,RSI
            je .L_41b240
.L_41b1c1:

            add R12,8
            jmp .L_41b1de
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b1d0:

            add R12,8
            mov RSI,QWORD PTR [R12-8]
            test RSI,RSI
            je .L_41b240
.L_41b1de:

            mov RDX,R14
            mov RDI,R13
            call .L_41b020

            test EAX,EAX
            jle .L_41b1d0

            cdqe 
            add R10D,1
            add R13,RAX
            sub R14,RAX
            cmp BYTE PTR [R13],61
            je .L_41b2f8

            test R14,R14
            jle .L_41b246
.L_41b209:

            movzx R12D,BYTE PTR [R13]
            test R12B,R12B
            jne .L_41b110

            pop RBX
.L_41b218:

            mov EAX,R10D
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b228:

            lea R12,QWORD PTR [RIP+.L_65b5a0]
            mov RSI,QWORD PTR [R12]
            test RSI,RSI
            jne .L_41b1c1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b240:

            mov R10D,4294967295
.L_41b246:

            pop RBX
            mov EAX,R10D
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b258:

            lea R12,QWORD PTR [RIP+.L_65b440]
            jmp .L_41b1b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b268:

            lea R12,QWORD PTR [RIP+.L_65b460]
            jmp .L_41b1b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b278:

            lea R12,QWORD PTR [RIP+.L_65b480]
            jmp .L_41b1b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b288:

            lea R12,QWORD PTR [RIP+.L_65b4e0]
            jmp .L_41b1b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b298:

            lea R12,QWORD PTR [RIP+.L_65b500]
            jmp .L_41b1b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b2a8:

            lea R12,QWORD PTR [RIP+.L_65b520]
            jmp .L_41b1b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b2b8:

            lea R12,QWORD PTR [RIP+.L_65b540]
            jmp .L_41b1b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b2c8:

            lea R12,QWORD PTR [RIP+.L_65b560]
            jmp .L_41b1b8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b2d8:

            movzx EDX,BYTE PTR [R13+1]
            cmp DL,10
            je .L_41b246

            cmp DL,13
            jne .L_41b156

            jmp .L_41b246
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b2f8:

            sub R14,1
            lea RAX,QWORD PTR [R13+1]
            test R14,R14
            jle .L_41b35b

            movzx EDX,BYTE PTR [R13+1]
            cmp DL,9
            je .L_41b343

            cmp DL,32
            jne .L_41b325

            jmp .L_41b343
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b320:

            cmp DL,32
            je .L_41b33b
.L_41b325:

            add RAX,1
            sub R14,1
            je .L_41b246

            movzx EDX,BYTE PTR [RAX]
            cmp DL,9
            jne .L_41b320
.L_41b33b:

            mov R13,RAX
            jmp .L_41b209
.L_41b343:

            test EBP,EBP
            je .L_41b240

            mov R13,RAX
            jmp .L_41b209
.L_41b353:

            mov R10D,EBP
            jmp .L_41b246
.L_41b35b:

            test EBP,EBP
            mov EAX,4294967295
            cmove R10D,EAX
            jmp .L_41b246
.L_41b36b:

            xor R10D,R10D
            mov EAX,R10D
            ret 
.L_41b372:

            xor R10D,R10D
            jmp .L_41b246
.L_41b37a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b380:

            mov RSI,QWORD PTR [RDI]
            movsx EDX,BYTE PTR [RSI]
            mov EAX,EDX
            sub EDX,48
            sub EAX,48
            cmp AL,7
            ja .L_41b3db

            add RSI,1
            xor EAX,EAX
            movabs R8,1152921504606846975
            jmp .L_41b3b1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b3a8:

            add RSI,1
            cmp RAX,R8
            jg .L_41b3d0
.L_41b3b1:

            movsxd RDX,EDX
            mov QWORD PTR [RDI],RSI
            lea RAX,QWORD PTR [RDX+RAX*8]
            movsx EDX,BYTE PTR [RSI]
            mov ECX,EDX
            sub EDX,48
            sub ECX,48
            cmp CL,7
            jbe .L_41b3a8

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b3d0:

            movabs RAX,9223372036854775807
            ret 
.L_41b3db:

            xor EAX,EAX
            ret 
.L_41b3de:

            nop
            nop
.L_41b3e0:

            mov RSI,QWORD PTR [RDI]
            movzx EAX,BYTE PTR [RSI]
            cmp AL,45
            je .L_41b480

            movsx EDX,AL
            sub EAX,48
            sub EDX,48
            cmp AL,9
            ja .L_41b4b0

            mov R10D,1
            mov R9D,7
.L_41b40b:

            xor EAX,EAX
            movsxd RDX,EDX
            movabs R8,922337203685477580
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b420:

            lea RAX,QWORD PTR [RAX+RAX*4]
            add RSI,1
            mov QWORD PTR [RDI],RSI
            lea RAX,QWORD PTR [RDX+RAX*2]
            movsx EDX,BYTE PTR [RSI]
            mov ECX,EDX
            sub EDX,48
            sub ECX,48
            cmp CL,9
            ja .L_41b470

            cmp RAX,R8
            jg .L_41b44e

            movsxd RDX,EDX
            jne .L_41b420

            cmp RDX,R9
            jle .L_41b420
.L_41b44e:

            cmp R10D,-1
            movabs RDX,-9223372036854775808
            movabs RAX,9223372036854775807
            cmove RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b470:

            cmp R10D,-1
            je .L_41b4ac

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b480:

            lea RCX,QWORD PTR [RSI+1]
            mov R10D,4294967295
            mov R9D,8
            mov QWORD PTR [RDI],RCX
            movsx EDX,BYTE PTR [RSI+1]
            mov RSI,RCX
            mov EAX,EDX
            sub EDX,48
            sub EAX,48
            cmp AL,9
            jbe .L_41b40b

            xor EAX,EAX
.L_41b4ac:

            neg RAX
            ret 
.L_41b4b0:

            xor EAX,EAX
            ret 
.L_41b4b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b4c0:

            mov RAX,QWORD PTR [RDI]
            cmp BYTE PTR [RAX],48
            jne .L_41b578

            movzx EDX,BYTE PTR [RAX+1]
            and EDX,4294967263
            cmp DL,88
            je .L_41b4e0

            jmp .L_41b380
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b4e0:

            lea RDX,QWORD PTR [RAX+2]
            mov QWORD PTR [RDI],RDX
            movzx ECX,BYTE PTR [RAX+2]
            cmp CL,45
            je .L_41b580

            mov R10D,1
            mov R9D,15
            movabs R8,576460752303423487
.L_41b50a:

            lea EAX,DWORD PTR [RCX-48]
            movsx EDX,CL
            cmp AL,9
            ja .L_41b608

            sub EDX,48
.L_41b51b:

            xor EAX,EAX
            mov R11D,4294967295
.L_41b523:

            cmp EDX,15
            ja .L_41b562
.L_41b528:

            cmp RAX,R8
            jg .L_41b5c9

            movsxd RDX,EDX
            je .L_41b5c0
.L_41b53a:

            shl RAX,4
            add RAX,RDX
            mov RDX,QWORD PTR [RDI]
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RDI],RCX
            movsx EDX,BYTE PTR [RDX+1]
            lea ESI,DWORD PTR [RDX-48]
            mov ECX,EDX
            cmp SIL,9
            ja .L_41b5a8

            sub EDX,48
            cmp EDX,15
            jbe .L_41b528
.L_41b562:

            mov RDX,RAX
            neg RDX
            cmp R10D,-1
            cmove RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b578:

            jmp .L_41b3e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b580:

            lea RDX,QWORD PTR [RAX+3]
            mov R10D,4294967295
            xor R9D,R9D
            movabs R8,576460752303423488
            mov QWORD PTR [RDI],RDX
            movzx ECX,BYTE PTR [RAX+3]
            jmp .L_41b50a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b5a8:

            lea ESI,DWORD PTR [RDX-97]
            cmp SIL,5
            ja .L_41b5f0

            sub EDX,97
            jmp .L_41b523
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b5c0:

            cmp R9,RDX
            jge .L_41b53a
.L_41b5c9:

            cmp R10D,-1
            movabs RDX,9223372036854775807
            movabs RAX,-9223372036854775808
            cmovne RAX,RDX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b5f0:

            sub ECX,65
            sub EDX,65
            cmp CL,6
            cmovae EDX,R11D
            jmp .L_41b523
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b608:

            lea EAX,DWORD PTR [RCX-97]
            cmp AL,5
            ja .L_41b620

            sub EDX,97
            jmp .L_41b51b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b620:

            sub ECX,65
            sub EDX,65
            mov EAX,4294967295
            cmp CL,6
            cmovae EDX,EAX
            jmp .L_41b51b
.L_41b636:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b640:

            test RDI,RDI
            je .L_41b678

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            nop
            nop
.L_41b650:

            mov RDI,QWORD PTR [RBX+8]
            mov RBP,QWORD PTR [RBX]
            call free@PLT

            mov RDI,RBX
            mov RBX,RBP
            call free@PLT

            test RBP,RBP
            jne .L_41b650

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b678:

            ret 
.L_41b67a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b680:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_41b68d:

            mov RAX,QWORD PTR [RDI+2472]
            mov R12,QWORD PTR [RAX]
            mov RBX,QWORD PTR [R12+64]
            test RBX,RBX
            je .L_41b6cd

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b6a8:

            mov RDI,QWORD PTR [RBX+16]
            mov RBP,QWORD PTR [RBX]
            call free@PLT

            mov RDI,QWORD PTR [RBX+8]
            call .L_41b640

            mov RDI,RBX
            mov RBX,RBP
            call free@PLT

            test RBP,RBP
            jne .L_41b6a8
.L_41b6cd:

            mov RDI,R12
            call .L_434290

            lea RDI,QWORD PTR [R12+8272]
            call .L_434290

            lea RDI,QWORD PTR [R12+8296]
            call .L_434290

            mov RDI,QWORD PTR [R12+8320]
            call .L_4473d0

            mov RDI,QWORD PTR [R12+32]
            call free@PLT

            mov RDI,R12
            call free@PLT

            mov RAX,QWORD PTR [R13+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_41b720:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41b729:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b730:

            push RBX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov EDI,DWORD PTR [RBX+48]
            test EDI,EDI
            js .L_41b74e

            call close@PLT

            mov DWORD PTR [RBX+48],4294967295
.L_41b74e:

            xor EAX,EAX
            pop RBX
            ret 
.L_41b752:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b760:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41b76a:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov R13D,DWORD PTR [RBX+48]
            test R13D,R13D
            js .L_41b800

            mov RAX,QWORD PTR [RBX+32]
            mov R12,RDX
            mov RBP,RDI
            test RAX,RAX
            je .L_41b828
.L_41b794:

            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RBX+40]
            mov EDI,R13D
            mov RSI,QWORD PTR [RBX+32]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [RBX+8328]
            sub RAX,QWORD PTR [RBX+40]
            mov RDX,QWORD PTR [RBX+24]
            cmp RDX,RAX
            cmovg RDX,RAX
            call read@PLT

            test RAX,RAX
            js .L_41b877

            je .L_41b7e0

            add QWORD PTR [RBX+40],RAX
            mov QWORD PTR [R12],RAX
            xor EAX,EAX
.L_41b7d5:

            add RSP,24
.L_41b7d9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41b7e0:

            mov QWORD PTR [R12],0
            add RSP,24
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b800:

            mov QWORD PTR [RSI],0
            mov QWORD PTR [RCX],0
            mov EAX,1
            mov QWORD PTR [RDX],0
            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b828:

            mov QWORD PTR [RBX+24],65536
            mov EDI,65536
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RSI
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+32],RAX
            mov RSI,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            jne .L_41b794

            lea RDX,QWORD PTR [RIP+.L_41df81]
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_41b7d5
.L_41b877:

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_41df97]
            xor EAX,EAX
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_41b7d5
.L_41b899:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b8a0:

            test RSI,RSI
            mov RDX,RDI
            mov R8,RSI
            je .L_41b8c5

            lea RDI,QWORD PTR [RIP+.L_41dfa2]
            mov ECX,2
            mov RSI,RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41b908
.L_41b8c5:

            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            je .L_41b914
.L_41b8cc:

            test R8,R8
            lea R10,QWORD PTR [RIP+.L_41e24c]
            mov RCX,RDX
            setne R9B
.L_41b8dd:

            cmp AL,47
            lea RSI,QWORD PTR [RDX+1]
            jne .L_41b920

            test R9B,R9B
            je .L_41b920

            mov BYTE PTR [R8+24],1
            mov RDX,RSI
.L_41b8f2:

            add RCX,1
            mov BYTE PTR [RCX-1],AL
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            jne .L_41b8dd

            jmp .L_41b917
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b908:

            mov BYTE PTR [R8+24],1
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            jne .L_41b8cc
.L_41b914:

            mov RCX,RDX
.L_41b917:

            mov BYTE PTR [RCX],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b920:

            cmp AL,92
            jne .L_41bab0

            movzx R11D,BYTE PTR [RDX+1]
            lea EDI,DWORD PTR [R11-48]
            cmp DIL,70
            ja .L_41bab0

            push RBX
.L_41b93c:

            nop
            nop
            nop
            nop
.L_41b940:

            movzx EDI,DIL
            movsxd RDI,DWORD PTR [R10+RDI*4]
            add RDI,R10
            jmp RDI
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b950:

            movzx EDI,BYTE PTR [RDX+2]
            lea EBX,DWORD PTR [RDI-48]
            cmp BL,7
            jbe .L_41ba60
.L_41b960:

            mov RDX,RSI
.L_41b963:

            add RCX,1
            mov BYTE PTR [RCX-1],AL
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            je .L_41b99c
.L_41b971:

            cmp AL,47
            lea RSI,QWORD PTR [RDX+1]
            jne .L_41ba90

            test R9B,R9B
            je .L_41ba90

            add RCX,1
            mov RDX,RSI
            mov BYTE PTR [R8+24],1
            mov BYTE PTR [RCX-1],AL
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            jne .L_41b971
.L_41b99c:

            mov BYTE PTR [RCX],0
            pop RBX
.L_41b9a0:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b9a8:

            add RDX,2
            mov EAX,11
            jmp .L_41b963
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b9b8:

            add RDX,2
            mov EAX,9
            jmp .L_41b963
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b9c8:

            add RDX,2
            mov EAX,32
            jmp .L_41b963
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b9d8:

            add RDX,2
            mov EAX,13
            jmp .L_41b963
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b9e8:

            add RDX,2
            mov EAX,10
            jmp .L_41b963
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ba00:

            add RDX,2
            mov EAX,12
            jmp .L_41b963
          .byte 0x66
          .byte 0x90
.L_41ba10:

            add RDX,2
            mov EAX,8
            jmp .L_41b963
          .byte 0x66
          .byte 0x90
.L_41ba20:

            add RDX,2
            mov EAX,7
            jmp .L_41b963
          .byte 0x66
          .byte 0x90
.L_41ba30:

            add RDX,2
            mov EAX,R11D
            jmp .L_41b963
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ba40:

            movzx EDI,BYTE PTR [RDX+2]
            lea EBX,DWORD PTR [RDI-48]
            cmp BL,7
            jbe .L_41ba60

            add RDX,2
            xor EAX,EAX
            jmp .L_41b963
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ba60:

            movzx EBX,BYTE PTR [RDX+3]
            sub EBX,48
            cmp BL,7
            ja .L_41b960

            mov EAX,R11D
            lea EDI,DWORD PTR [RDI*8-128]
            add RDX,4
            shl EAX,6
            or EAX,EBX
            or EAX,EDI
            jmp .L_41b963
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ba90:

            cmp AL,92
            jne .L_41b960

            movzx R11D,BYTE PTR [RDX+1]
            lea EDI,DWORD PTR [R11-48]
            cmp DIL,70
            jbe .L_41b940

            jmp .L_41b960
.L_41bab0:

            mov RDX,RSI
            jmp .L_41b8f2
.L_41bab8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bac0:

            mov RAX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_41dfa4]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov R8,QWORD PTR [RAX]
            seta AL
            sbb AL,0
            movsx EAX,AL
            test EAX,EAX
            jne .L_41bb10

            test RDX,RDX
            je .L_41bb00

            cmp BYTE PTR [RDX],0
            je .L_41bb00

            mov BYTE PTR [R8+8336],1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bb00:

            mov BYTE PTR [R8+8336],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bb10:

            mov EAX,4294967276
            ret 
.L_41bb16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bb20:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_41bb2e:

            mov RBX,QWORD PTR [RDI]
            test RBX,RBX
            je .L_41bb79

            mov RBP,RDX
            mov R12,RSI
            mov R14,RDI
            xor R13D,R13D
            jmp .L_41bb4b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41bb48:

            mov RBX,RAX
.L_41bb4b:

            mov R15,QWORD PTR [RBX+8]
            mov RDX,RBP
            mov RSI,R12
            mov RDI,R15
            call strncmp@PLT

            test EAX,EAX
            jne .L_41bb6e

            movzx EAX,BYTE PTR [R15+RBP*1]
            test AL,AL
            je .L_41bb90

            cmp AL,61
            je .L_41bb90
.L_41bb6e:

            mov RAX,QWORD PTR [RBX]
            mov R13,RBX
            test RAX,RAX
            jne .L_41bb48
.L_41bb79:

            add RSP,8
.L_41bb7d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bb90:

            test R13,R13
            mov RAX,QWORD PTR [RBX]
            je .L_41bbc0

            mov QWORD PTR [R13],RAX
.L_41bb9c:

            mov RDI,R15
            call free@PLT

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp free@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bbc0:

            mov QWORD PTR [R14],RAX
            jmp .L_41bb9c
.L_41bbc5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bbd0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov EDI,16
            push RBX
.L_41bbe0:

            mov R12,RSI
            mov R13,RDX
            mov RBP,RCX
            call malloc@PLT

            test RAX,RAX
            je .L_41bc38

            lea RDI,QWORD PTR [RBP+1]
            mov RBX,RAX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_41bc30

            mov RDX,RBP
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov BYTE PTR [RAX+RBP*1],0
            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [R12],RBX
            mov QWORD PTR [RBX],RAX
            xor EAX,EAX
.L_41bc27:

            pop RBX
.L_41bc28:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41bc30:

            mov RDI,RBX
            call free@PLT
.L_41bc38:

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_41df81]
            xor EAX,EAX
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_41bc27
.L_41bc57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bc60:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RDI,RDX
            sub RSP,72
.L_41bc74:

            mov QWORD PTR [RBP],0
            mov QWORD PTR [RSP],RSI
            mov ESI,44
            mov QWORD PTR [RSP+8],RDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],0
            call strchr@PLT

            test RAX,RAX
            je .L_41bd90

            mov BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+8]
            mov RBX,RAX
            lea R15,QWORD PTR [RAX+1]
            call .L_447f70

            test RAX,RAX
            mov R14,RAX
            je .L_41be18

            test R15,R15
            je .L_41be00

            cmp BYTE PTR [RBX+1],0
            mov R13D,1
            lea R12,QWORD PTR [RSP+16]
            je .L_41be00
.L_41bcef:

            lea RSI,QWORD PTR [RIP+.L_41dfe2]
            mov RDI,R15
            call strcspn@PLT

            lea RBX,QWORD PTR [R15+RAX*1]
            cmp BYTE PTR [RBX],0
            je .L_41bd0e

            mov BYTE PTR [RBX],0
            add RBX,1
.L_41bd0e:

            mov QWORD PTR [RSP+16],R15
            cmp BYTE PTR [R15],0
            je .L_41bdf0

            cmp R13,4
            je .L_41bd50

            mov RDI,R12
            call .L_41b4c0

            test RBX,RBX
            mov EDI,R13D
            lea RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+R13*8+24],RAX
            je .L_41bda8

            add R13,1
            cmp BYTE PTR [RBX],0
            je .L_41bda8

            mov R15,RBX
            jmp .L_41bcef
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bd50:

            lea RDX,QWORD PTR [RIP+.L_41dfcf]
.L_41bd57:

            mov RDI,QWORD PTR [RSP]
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            mov EAX,4294967276
.L_41bd6c:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41be26

            add RSP,72
.L_41bd84:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41bd90:

            lea RDI,QWORD PTR [RSP+8]
            call .L_41b4c0
.L_41bd9a:

            mov QWORD PTR [RBP],RAX
            xor EAX,EAX
            jmp .L_41bd6c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bda8:

            cmp EDI,1
            mov QWORD PTR [RSP+16],0
            je .L_41be09

            lea RDX,QWORD PTR [RSP+24]
            call R14

            mov RCX,QWORD PTR [RSP+24]
            test RCX,RCX
            je .L_41bd9a

            lea RDX,QWORD PTR [RIP+.L_41dff9]
.L_41bdcf:

            mov RDI,QWORD PTR [RSP]
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_41bd6c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bdf0:

            lea RDX,QWORD PTR [RIP+.L_41dfc0]
            jmp .L_41bd57
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41be00:

            mov QWORD PTR [RSP+16],0
.L_41be09:

            lea RDX,QWORD PTR [RIP+.L_41dfe4]
            jmp .L_41bd57
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41be18:

            mov RCX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_41dfac]
            jmp .L_41bdcf
.L_41be26:

            call __stack_chk_fail@PLT
.L_41be2b:

            nop
            nop
            nop
            nop
            nop
.L_41be30:

            push R15
            push R14
            mov R15,R8
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_41be41:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test RCX,RCX
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+16],RDX
            je .L_41bff0

            xor R12D,R12D
            lea R14,QWORD PTR [RIP+.L_41dffc]
            lea R13,QWORD PTR [RIP+.L_41e005]
            mov RBP,RCX
            mov R9,R8
            mov R15D,R12D
            nop
            nop
            nop
            nop
            nop
            nop
.L_41be88:

            mov R12,QWORD PTR [RBP+8]
            cmp BYTE PTR [R12],0
            je .L_41bfa8

            mov ECX,9
            mov RSI,R12
            mov RDI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c008

            mov ECX,9
            mov RSI,R12
            mov RDI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c018

            lea RDI,QWORD PTR [RIP+.L_41e00e]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            mov ESI,61
            mov RDI,R12
            mov QWORD PTR [RSP+24],R9
            call strchr@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+56],RAX
            mov R9,QWORD PTR [RSP+24]
            je .L_41c82d

            mov BYTE PTR [RAX],0
            mov RDX,QWORD PTR [RSP+56]
            lea R8,QWORD PTR [RDX+1]
            mov QWORD PTR [RSP+56],R8
            movzx EAX,BYTE PTR [R12]
            sub EAX,99
            cmp AL,18
            ja .L_41c517

            lea RCX,QWORD PTR [RIP+.L_41e368]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
.L_41bf4a:

            lea RDI,QWORD PTR [RIP+.L_41e033]
            mov ECX,8
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41c708

            lea RDI,QWORD PTR [RIP+.L_41e03b]
            mov ECX,9
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41c708

            lea RDI,QWORD PTR [RIP+.L_41e044]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41c396

            nop
            nop
            nop
            nop
.L_41bfa8:

            xor EBX,EBX
.L_41bfaa:

            mov RBP,QWORD PTR [RBP]
            cmp R15D,EBX
            cmovg R15D,EBX
            test RBP,RBP
            jne .L_41be88

            mov R12D,R15D
            mov R15,R9
            test R12D,R12D
            je .L_41bff0
.L_41bfc9:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_41c872

            add RSP,88
.L_41bfe4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41bff0:

            mov EAX,DWORD PTR [R15]
            test AH,1
            je .L_41c80a

            xor R12D,R12D
            jmp .L_41bfc9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c008:

            or DWORD PTR [R9],4096
            jmp .L_41bfaa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c018:

            or DWORD PTR [R9],2048
            jmp .L_41bfaa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c028:

            lea RDI,QWORD PTR [RIP+.L_41e051]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c4f8
.L_41c04a:

            lea RDI,QWORD PTR [RIP+.L_41e057]
            mov ECX,4
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c76d

            lea RDI,QWORD PTR [RIP+.L_41e05b]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c546
.L_41c08e:

            lea RDI,QWORD PTR [RIP+.L_41e061]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c4d3
.L_41c0b0:

            lea RDI,QWORD PTR [RIP+.L_41e067]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c47a
.L_41c0d2:

            lea RDI,QWORD PTR [RIP+.L_41e06c]
            mov ECX,4
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e070]
            mov ECX,10
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e07a]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_41c163

            movzx EAX,BYTE PTR [RDX+1]
            sub EAX,48
            cmp AL,9
            ja .L_41c894

            or DWORD PTR [R9],64
            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_41b380

            mov RDI,QWORD PTR [RSP]
            mov ESI,EAX
            call .L_4466e0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c163:

            lea RDI,QWORD PTR [RIP+.L_41e07f]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c565
.L_41c185:

            lea RDI,QWORD PTR [RIP+.L_41e085]
            mov ECX,10
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41c495

            lea RDI,QWORD PTR [RIP+.L_41e08f]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e096]
            mov ECX,13
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8
.L_41c1df:

            lea RDI,QWORD PTR [RIP+.L_41e0a3]
            mov ECX,5
            mov RSI,R12
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+24],RDX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e0a8]
            mov ECX,11
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e0b3]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e0ba]
            mov ECX,13
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e0c7]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e0ce]
            mov ECX,13
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e0db]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RSI,QWORD PTR [RIP+.L_41e0e2]
            mov RDI,R12
            mov QWORD PTR [RSP+40],R9
            call strcmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP+40]
            je .L_41bfa8

            lea RSI,QWORD PTR [RIP+.L_41e0ef]
            mov RDI,R12
            call strcmp@PLT

            test EAX,EAX
            mov EBX,EAX
            mov R9,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+32]
            jne .L_41c3f6

            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_41b3e0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_446770

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c330:

            lea RDI,QWORD PTR [RIP+.L_41e11c]
            mov ECX,4
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c796

            lea RDI,QWORD PTR [RIP+.L_41e120]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_41c517

            or DWORD PTR [R9],1024
            mov RDI,QWORD PTR [RSP]
            mov RSI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_446980

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c396:

            lea RDI,QWORD PTR [RIP+.L_41e04a]
            mov ECX,7
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41c028

            or DWORD PTR [R9],1
            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+64]
            mov RDX,R8
            mov QWORD PTR [RSP+24],R9
            call .L_41bc60

            test EAX,EAX
            mov EBX,EAX
            mov R9,QWORD PTR [RSP+24]
            jne .L_41bfaa

            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP]
            call .L_446710

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c3f6:

            lea RDI,QWORD PTR [RIP+.L_41e0f4]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41bfa8

            lea RDI,QWORD PTR [RIP+.L_41e0f9]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_41c7c2

            lea RDI,QWORD PTR [RIP+.L_41e0fe]
            mov ECX,5
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_41c330

            movzx EAX,BYTE PTR [RDX+1]
            sub EAX,98
            cmp AL,10
            ja .L_41c6c6

            lea RDX,QWORD PTR [RIP+.L_41e3b4]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
.L_41c47a:

            mov RDI,QWORD PTR [RSP]
            mov RSI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_446850

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c495:

            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+64]
            mov RDX,R8
            mov QWORD PTR [RSP+24],R9
            call .L_41bc60

            test EAX,EAX
            mov EBX,EAX
            mov R9,QWORD PTR [RSP+24]
            jne .L_41bfaa

            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP]
            call .L_4463c0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c4d3:

            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_41b3e0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_446050

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c4f8:

            or DWORD PTR [R9],2
            mov RDI,QWORD PTR [RSP]
            mov RSI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_445b30

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c517:

            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_41e126]
            mov RCX,R12
            mov ESI,84
            xor EAX,EAX
            mov QWORD PTR [RSP+24],R9
            mov EBX,4294967276
            call .L_43f5d0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c546:

            or DWORD PTR [R9],8
            mov RDI,QWORD PTR [RSP]
            mov RSI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_445fd0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c565:

            or DWORD PTR [R9],32
            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_41b3e0

            mov RDI,QWORD PTR [RSP]
            mov ESI,EAX
            call .L_446630

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c58d:

            lea RDI,QWORD PTR [RIP+.L_41e067]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41c6c6

            mov RDI,QWORD PTR [RSP]
            mov ESI,40960
            mov QWORD PTR [RSP+24],R9
            call .L_445ae0

            mov R9,QWORD PTR [RSP+24]
.L_41c5c3:

            or DWORD PTR [R9],256
            jmp .L_41bfaa
.L_41c5cf:

            lea RDI,QWORD PTR [RIP+.L_41e112]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41c877

            lea RDI,QWORD PTR [RIP+.L_41e117]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41c58d

            mov RDI,QWORD PTR [RSP]
            mov ESI,32768
            mov QWORD PTR [RSP+24],R9
            call .L_445ae0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41c5c3
.L_41c621:

            lea RDI,QWORD PTR [RIP+.L_41e10e]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41c5cf

            mov RDI,QWORD PTR [RSP]
            mov ESI,16384
            mov QWORD PTR [RSP+24],R9
            call .L_445ae0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41c5c3
.L_41c658:

            lea RDI,QWORD PTR [RIP+.L_41e109]
            mov ECX,5
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41c621

            mov RDI,QWORD PTR [RSP]
            mov ESI,8192
            mov QWORD PTR [RSP+24],R9
            call .L_445ae0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41c5c3
.L_41c68f:

            lea RDI,QWORD PTR [RIP+.L_41e103]
            mov ECX,6
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41c658

            mov RDI,QWORD PTR [RSP]
            mov ESI,24576
            mov QWORD PTR [RSP+24],R9
            call .L_445ae0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41c5c3
.L_41c6c6:

            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_41e500]
            mov RCX,R8
            mov ESI,84
            xor EAX,EAX
            mov QWORD PTR [RSP+24],R9
            mov EBX,4294967276
            call .L_43f5d0

            mov RDI,QWORD PTR [RSP]
            mov ESI,32768
            call .L_445ae0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c708:

            xor ESI,ESI
            mov RDI,R8
            mov QWORD PTR [RSP+24],R9
            call .L_41b8a0

            mov RBX,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+16]
            xor EDX,EDX
            mov R9,QWORD PTR [RSP+24]
            test RBX,RBX
            mov QWORD PTR [RAX+8304],0
            je .L_41c748

            mov RDI,RBX
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov RDX,RAX
.L_41c748:

            mov RAX,QWORD PTR [RSP+16]
            mov RSI,RBX
            mov QWORD PTR [RSP+24],R9
            xor EBX,EBX
            lea RDI,QWORD PTR [RAX+8296]
            call .L_437290

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c76d:

            or DWORD PTR [R9],4
            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_41b3e0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_445fa0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c796:

            or DWORD PTR [R9],512
            lea RDI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            call .L_41b3e0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_446950

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c7c2:

            or DWORD PTR [R9],16
            lea R12,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+24],R9
            mov RDI,R12
            call .L_41b3e0

            mov RCX,QWORD PTR [RSP+56]
            mov R11,RAX
            xor EAX,EAX
            mov R9,QWORD PTR [RSP+24]
            cmp BYTE PTR [RCX],46
            je .L_41c85a
.L_41c7ec:

            mov RDI,QWORD PTR [RSP]
            mov RDX,RAX
            mov RSI,R11
            mov QWORD PTR [RSP+24],R9
            call .L_4465a0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c80a:

            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_41e530]
            mov ESI,84
            xor EAX,EAX
            mov R12D,4294967276
            call .L_43f5d0

            jmp .L_41bfc9
.L_41c82d:

            movsx R8D,BYTE PTR [R12]
            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_41e015]
            mov RCX,R12
            mov ESI,84
            mov EBX,4294967276
            call .L_43f5d0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c85a:

            add RCX,1
            mov QWORD PTR [RSP+56],RCX
            call .L_41b3e0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41c7ec
.L_41c872:

            call __stack_chk_fail@PLT
.L_41c877:

            mov RDI,QWORD PTR [RSP]
            mov ESI,4096
            mov QWORD PTR [RSP+24],R9
            call .L_445ae0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41c5c3
.L_41c894:

            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_41e4e0]
            mov RCX,R8
            mov ESI,84
            xor EAX,EAX
            mov QWORD PTR [RSP+24],R9
            mov EBX,4294967276
            call .L_43f5d0

            mov R9,QWORD PTR [RSP+24]
            jmp .L_41bfaa
.L_41c8c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c8d0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,56
.L_41c8e1:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RBX
            xor EBX,EBX
            test RSI,RSI
            mov QWORD PTR [RSP+8],RSI
            je .L_41c901

            mov DWORD PTR [RSI],0
.L_41c901:

            lea R14,QWORD PTR [RSP+32]
            mov ESI,1
            mov RDI,R13
            mov RDX,R14
            call .L_4049e0

            test RAX,RAX
            mov RBX,RAX
            je .L_41cf21

            mov RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+16],0
            mov DWORD PTR [RSP],0
            mov DWORD PTR [RSP+4],0
            mov RBP,RAX
.L_41c941:

            xor R15D,R15D
            cmp RAX,0
            jne .L_41cc08

            nop
            nop
.L_41c950:

            lea RSI,QWORD PTR [RBP+1023]
            lea RDX,QWORD PTR [RBP+160]
            mov R12,RBP
            sub R12,RAX
            mov RDI,R13
            and ESI,4294966272
            lea RAX,QWORD PTR [RSI+RSI*1]
            cmp RSI,RDX
            mov RDX,R14
            cmovb RSI,RAX
            call .L_4049e0

            xor R8D,R8D
            test RAX,RAX
            je .L_41cab8
.L_41c98c:

            mov RBP,QWORD PTR [RSP+32]
            lea RBX,QWORD PTR [RAX+R12*1]
            lea RSI,QWORD PTR [RBX+R15*1]
            mov RAX,RBP
            sub RAX,R12
            mov RCX,RAX
            mov QWORD PTR [RSP+32],RAX
            sub RCX,R15
            cmp RCX,0
            jle .L_41cae0

            xor EDI,EDI
.L_41c9b6:

            movzx EDX,BYTE PTR [RSI]
            cmp DL,10
            je .L_41ca23

            cmp DL,13
            je .L_41ca10

            test DL,DL
            je .L_41cb00

            add RDI,1
            add RSI,1
            cmp RCX,RDI
            jne .L_41c9b6

            test R8D,R8D
            mov R15,RAX
            mov EDX,1
            je .L_41caf1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c9f0:

            test R15,R15
            jle .L_41cd9b
.L_41c9f9:

            cmp DWORD PTR [RSP+4],2
            jg .L_41ca8b
.L_41ca04:

            xor EAX,EAX
            jmp .L_41cc4d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ca10:

            sub RCX,RDI
            cmp RCX,1
            jle .L_41ca23

            cmp BYTE PTR [RSI+1],10
            je .L_41cb18
.L_41ca23:

            lea R15,QWORD PTR [R15+RDI*1+1]
            mov R12D,1
.L_41ca2e:

            test R15,R15
            jle .L_41cd9b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ca40:

            mov ECX,DWORD PTR [RSP]
            test ECX,ECX
            je .L_41cb33

            xor ECX,ECX
            xor EDX,EDX
            mov RSI,R15
            mov RDI,RBX
            call .L_41b0d0

            test EAX,EAX
            jle .L_41c9f9

            mov RAX,R15
            sub RAX,R12
            cmp BYTE PTR [RBX+RAX*1-1],92
            je .L_41cc77

            cmp DWORD PTR [RSP],1
            jne .L_41cc70

            add DWORD PTR [RSP+4],1
            mov EAX,DWORD PTR [RSP+4]
            cmp EAX,2
            jle .L_41cc70
.L_41ca8b:

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            je .L_41cc48

            cmp DWORD PTR [RSP+16],1
            jne .L_41cc48

            mov DWORD PTR [RAX],1
            mov EAX,32
            jmp .L_41cc4d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cab8:

            mov RSI,QWORD PTR [RSP+32]
            cmp RSI,RBP
            jle .L_41cd98

            mov RDX,R14
            mov RDI,R13
            call .L_4049e0

            mov R8D,1
            jmp .L_41c98c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cae0:

            jne .L_41cb07

            cmp RAX,R15
            sete DL
.L_41cae8:

            test R8D,R8D
            jne .L_41c9f0
.L_41caf1:

            test DL,DL
            jne .L_41c950

            jmp .L_41c9f0
          .byte 0x66
          .byte 0x90
.L_41cb00:

            mov RCX,-1
.L_41cb07:

            cmp RAX,RCX
            mov R15,RCX
            sete DL
            jmp .L_41cae8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cb18:

            lea R15,QWORD PTR [R15+RDI*1+2]
            mov R12D,2
            jmp .L_41ca2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cb30:

            mov RBX,RDX
.L_41cb33:

            movzx EAX,BYTE PTR [RBX]
            cmp AL,32
            je .L_41cb3e

            cmp AL,9
            jne .L_41cb55
.L_41cb3e:

            sub QWORD PTR [RSP+32],1
            sub R15,1
            lea RDX,QWORD PTR [RBX+1]
            jne .L_41cb30

            movzx EAX,BYTE PTR [RBX+1]
            mov RBX,RDX
.L_41cb55:

            cmp AL,35
            mov EDX,EAX
            jbe .L_41cc90

            cmp AL,47
            jne .L_41cca0

            lea RDI,QWORD PTR [RIP+.L_41e13d]
            mov ECX,4
            mov RSI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            movsx EAX,AL
            test EAX,EAX
            mov DWORD PTR [RSP],EAX
            je .L_41ce89

            lea RDI,QWORD PTR [RIP+.L_41e142]
            mov ECX,6
            mov RSI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            movsx EAX,AL
            test EAX,EAX
            mov DWORD PTR [RSP],EAX
            jne .L_41cd9b

            lea RSI,QWORD PTR [R15-6]
            lea RDI,QWORD PTR [RBX+6]
            xor ECX,ECX
            mov EDX,1
            call .L_41b0d0

            test EAX,EAX
            jle .L_41cd9b
.L_41cbcb:

            mov RDX,R15
            sub RDX,R12
            movzx EAX,BYTE PTR [RBX+RDX*1-1]
            add RBX,R15
            cmp AL,92
            mov EAX,2
            mov ECX,EAX
            cmovne ECX,DWORD PTR [RSP]
            mov DWORD PTR [RSP],ECX
.L_41cbe9:

            mov RAX,QWORD PTR [RSP+32]
            sub RAX,R15
            xor R15D,R15D
            cmp RAX,0
            mov QWORD PTR [RSP+32],RAX
            je .L_41c950

            nop
            nop
            nop
            nop
            nop
.L_41cc08:

            jle .L_41cc3a

            mov RCX,RBX
            xor R8D,R8D
.L_41cc10:

            movzx EDX,BYTE PTR [RCX]
            cmp DL,10
            je .L_41cd85

            cmp DL,13
            je .L_41cd68

            test DL,DL
            je .L_41cdc0

            add R8,1
            add RCX,1
            cmp RAX,R8
            jne .L_41cc10
.L_41cc3a:

            mov R15,RAX
            jmp .L_41c950
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cc48:

            mov EAX,32
.L_41cc4d:

            mov RBX,QWORD PTR [RSP+40]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41cf2b

            add RSP,56
.L_41cc65:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41cc70:

            mov DWORD PTR [RSP],0
.L_41cc77:

            mov RAX,QWORD PTR [RSP+32]
            add RBX,R15
            sub RAX,R15
            mov QWORD PTR [RSP+32],RAX
            jmp .L_41c941
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cc90:

            movabs RCX,34359747584
            bt RCX,RAX
            jb .L_41cc77
.L_41cca0:

            lea R9,QWORD PTR [RBX+R15*1]
            cmp RBX,R9
            jae .L_41cdeb

            lea RDI,QWORD PTR [RIP+.L_41e3e0]
            cmp BYTE PTR [RDI+RAX*1],0
            je .L_41cf17

            mov RDI,RBX
            jmp .L_41ccdf
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ccc8:

            movzx EAX,BYTE PTR [RDI]
            lea RCX,QWORD PTR [RIP+.L_41e3e0]
            cmp BYTE PTR [RCX+RAX*1],0
            mov RDX,RAX
            je .L_41cdc9
.L_41ccdf:

            add RDI,1
            cmp R9,RDI
            jne .L_41ccc8

            xor R10D,R10D
            xor ESI,ESI
.L_41cced:

            xor EDX,EDX
            mov ECX,R10D
            mov QWORD PTR [RSP+24],R9
            mov DWORD PTR [RSP+20],R10D
            call .L_41b0d0

            test EAX,EAX
            js .L_41cd9b

            mov EDX,DWORD PTR [RSP+16]
            mov R10D,DWORD PTR [RSP+20]
            mov R9,QWORD PTR [RSP+24]
            test EDX,EDX
            jne .L_41cec2

            test R10D,R10D
            mov DWORD PTR [RSP+16],R10D
            jne .L_41cd48

            test EAX,EAX
            setne AL
            movzx EAX,AL
            neg EAX
            mov DWORD PTR [RSP+16],EAX
.L_41cd37:

            mov RAX,R15
            sub RAX,R12
            cmp BYTE PTR [RBX+RAX*1-1],92
            je .L_41cef0
.L_41cd48:

            add DWORD PTR [RSP+4],1
            mov EAX,DWORD PTR [RSP+4]
            cmp EAX,2
            jg .L_41ca8b

            mov RBX,R9
            jmp .L_41cbe9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cd68:

            sub RAX,R8
            cmp RAX,1
            jle .L_41cd85

            cmp BYTE PTR [RCX+1],10
            lea R15,QWORD PTR [R8+2]
            mov R12D,2
            je .L_41ca40
.L_41cd85:

            lea R15,QWORD PTR [R8+1]
            mov R12D,1
            jmp .L_41ca40
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41cd98:

            xor R15D,R15D
.L_41cd9b:

            mov EAX,DWORD PTR [RSP+4]
            cmp EAX,2
            jg .L_41ca8b

            test EAX,EAX
            jle .L_41ca04

            test R15,R15
            je .L_41ca8b

            xor EAX,EAX
            jmp .L_41cc4d
.L_41cdc0:

            mov R15,-1
            jmp .L_41cd9b
.L_41cdc9:

            mov EAX,1
.L_41cdce:

            cmp DL,32
            ja .L_41cdeb

            movabs RCX,4294977024
            bt RCX,RDX
            jae .L_41cdeb

            test EAX,EAX
            jne .L_41cf09
.L_41cdeb:

            mov RDI,R15
            sub RDI,R12
            add RDI,RBX
            lea RAX,QWORD PTR [RDI-2]
            cmp RBX,RAX
            ja .L_41ceb0
.L_41ce01:

            cmp BYTE PTR [RDI-1],92
            je .L_41cd9b

            xor ESI,ESI
            mov RAX,RDI
            mov R10D,1
            jmp .L_41ce3c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ce18:

            cmp DL,9
            je .L_41ce54

            movzx EAX,BYTE PTR [RCX]
            lea R11,QWORD PTR [RIP+.L_41e3e0]
            cmp BYTE PTR [R11+RAX*1],0
            je .L_41cd9b

            cmp DL,47
            mov RAX,RCX
            cmove ESI,R10D
.L_41ce3c:

            lea RCX,QWORD PTR [RAX-1]
            mov R11D,EDI
            sub R11D,EAX
            cmp RBX,RCX
            ja .L_41ce54

            movzx EDX,BYTE PTR [RAX-1]
            cmp DL,32
            jne .L_41ce18
.L_41ce54:

            test R11D,R11D
            je .L_41cd9b

            and ESI,1
            je .L_41cd9b

            cmp BYTE PTR [RAX],47
            je .L_41cd9b

            mov RSI,R15
            movsxd R11,R11D
            mov RDI,RBX
            sub RSI,R12
            mov R10D,1
            sub RSI,R11
            jmp .L_41cced
.L_41ce89:

            lea RSI,QWORD PTR [R15-4]
            lea RDI,QWORD PTR [RBX+4]
            xor ECX,ECX
            xor EDX,EDX
            call .L_41b0d0

            test EAX,EAX
            jg .L_41cbcb

            jmp .L_41cd9b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ceb0:

            lea RAX,QWORD PTR [RDI-1]
            cmp RBX,RAX
            jbe .L_41ce01

            jmp .L_41cd9b
.L_41cec2:

            cmp DWORD PTR [RSP+16],1
            je .L_41ced7

            test R10D,R10D
            je .L_41cd37

            jmp .L_41cd48
.L_41ced7:

            test R10D,R10D
            jne .L_41ceff

            test EAX,EAX
            je .L_41cd37

            jmp .L_41cd9b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cef0:

            mov RBX,R9
            mov DWORD PTR [RSP],1
            jmp .L_41cbe9
.L_41ceff:

            mov DWORD PTR [RSP+16],R10D
            jmp .L_41cd48
.L_41cf09:

            mov RSI,R9
            xor R10D,R10D
            sub RSI,RDI
            jmp .L_41cced
.L_41cf17:

            xor EAX,EAX
            mov RDI,RBX
            jmp .L_41cdce
.L_41cf21:

            mov EAX,4294967295
            jmp .L_41cc4d
.L_41cf2b:

            call __stack_chk_fail@PLT
.L_41cf30:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,248
.L_41cf44:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+232],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+32],RSI
            mov RBX,QWORD PTR [RAX]
            mov EDI,DWORD PTR [RBX+48]
            test EDI,EDI
            js .L_41cf79

            call close@PLT

            mov DWORD PTR [RBX+48],4294967295
.L_41cf79:

            mov RAX,QWORD PTR [RBX+64]
            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_41d6cb
.L_41cf8b:

            mov EAX,DWORD PTR [RBX+52]
            mov R13,QWORD PTR [RBX+72]
            lea R12,QWORD PTR [RIP+.L_41e1b2]
            mov DWORD PTR [R14+16],EAX
            mov RAX,QWORD PTR [RBX+56]
            test R13,R13
            mov QWORD PTR [R14+24],RAX
            je .L_41d4a8

            lea RAX,QWORD PTR [RSP+60]
            mov QWORD PTR [RSP],R14
            mov R15,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RBX+8272]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_41d00a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cfe0:

            mov BYTE PTR [R13+25],1
            mov RAX,QWORD PTR [RBX+8280]
            test RAX,RAX
            jne .L_41d338
.L_41cff5:

            mov R13,QWORD PTR [RBX+72]
.L_41cff9:

            mov R13,QWORD PTR [R13]
            test R13,R13
            mov QWORD PTR [RBX+72],R13
            je .L_41d4a8
.L_41d00a:

            mov RSI,QWORD PTR [R13+16]
            mov ECX,3
            mov RDI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41cfe0

            cmp BYTE PTR [R13+25],0
            jne .L_41cff9

            mov QWORD PTR [RSP+64],R15
            mov ESI,32768
            mov RDI,R15
            mov BYTE PTR [R13+25],1
            call .L_445ae0

            mov RDI,QWORD PTR [RSP+64]
            xor ESI,ESI
            call .L_446770

            mov RCX,QWORD PTR [R13+8]
            mov R8,QWORD PTR [RSP+8]
            mov RDX,RBX
            mov RSI,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP]
            mov QWORD PTR [RBX+8304],0
            mov DWORD PTR [RSP+60],0
            call .L_41be30

            cmp BYTE PTR [R13+24],0
            mov EBP,EAX
            jne .L_41d410

            mov R14,QWORD PTR [RBX+8280]
            test R14,R14
            jne .L_41d4d0
.L_41d095:

            mov RSI,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+16]
            call .L_437310

            mov RSI,QWORD PTR [RBX+8272]
            mov RDI,QWORD PTR [RSP+64]
            call .L_446660

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,16384
            je .L_41d0cc

            mov QWORD PTR [RBX+8280],R14
.L_41d0cc:

            mov R10,QWORD PTR [RSP+64]
.L_41d0d1:

            cmp BYTE PTR [RBX+8336],0
            je .L_41d2ef

            cmp QWORD PTR [RBX+8304],0
            mov DWORD PTR [RBX+48],4294967295
            je .L_41d4b8

            mov R13,QWORD PTR [RBX+8296]
.L_41d0fa:

            mov RDI,R10
            call .L_444e70

            cmp EAX,32768
            je .L_41d378

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,16384
            je .L_41d378

            mov ESI,DWORD PTR [RBX+48]
.L_41d125:

            test ESI,ESI
            js .L_41d3e0
.L_41d12d:

            mov RDX,QWORD PTR [RSP+24]
            mov EDI,1
            call __fxstat@PLT

            cmp EAX,-1
            je .L_41d685
.L_41d145:

            mov EAX,DWORD PTR [RSP+104]
            mov EDX,EAX
            and EDX,61440
            cmp EDX,32768
            je .L_41d502

            cmp EDX,40960
            je .L_41d52f
.L_41d169:

            mov EDX,EAX
            and EDX,49152
            cmp EDX,49152
            je .L_41d55c
.L_41d17d:

            and EAX,61440
            cmp EAX,8192
            je .L_41d585
.L_41d18d:

            cmp EAX,24576
            je .L_41d5aa
.L_41d198:

            cmp EAX,16384
            je .L_41d5cf
.L_41d1a3:

            cmp EAX,4096
            je .L_41d5f4
.L_41d1ae:

            mov EDI,DWORD PTR [RBX+48]
            test EDI,EDI
            jns .L_41d4e6

            mov DWORD PTR [RBX+48],4294967295
            test BYTE PTR [RSP+61],8
            jne .L_41cff5
.L_41d1cb:

            test EBP,EBP
            mov R14,QWORD PTR [RSP]
            jne .L_41d306

            mov RDI,QWORD PTR [RSP+64]
            mov EBP,4294967276
            call .L_445450

            lea RDX,QWORD PTR [RIP+.L_41e560]
            mov RCX,RAX
            mov ESI,4294967295
            mov RDI,R14
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_41d306
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d208:

            mov ESI,DWORD PTR [RSP+112]
            call .L_445fa0

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
            test AH,6
            je .L_41d224

            test AH,16
            je .L_41d236
.L_41d224:

            mov ESI,DWORD PTR [RSP+108]
            call .L_446950

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41d236:

            mov EDX,EAX
            and EDX,4112
            cmp EDX,16
            je .L_41d261

            mov RDX,QWORD PTR [RSP+176]
            mov RSI,QWORD PTR [RSP+168]
            call .L_4465a0

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41d261:

            mov EDX,EAX
            and EDX,4128
            cmp EDX,32
            je .L_41d280

            mov ESI,DWORD PTR [RSP+96]
            call .L_446630

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41d280:

            mov EDX,EAX
            and EDX,4160
            cmp EDX,64
            je .L_41d29f

            mov ESI,DWORD PTR [RSP+104]
            call .L_4466e0

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41d29f:

            and EAX,4224
            add EAX,-128
            je .L_41d2bb

            mov RSI,QWORD PTR [RSP+128]
            call .L_446770

            mov RDI,QWORD PTR [RSP+64]
.L_41d2bb:

            mov RSI,QWORD PTR [RSP+88]
            call .L_446050

            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+64]
            call .L_4463c0

            mov RDI,QWORD PTR [RBX+8320]
            lea RDX,QWORD PTR [RSP+72]
            lea RSI,QWORD PTR [RSP+64]
            call .L_447420

            mov R10,QWORD PTR [RSP+64]
.L_41d2ef:

            mov RDI,R10
            call .L_4456a0

            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+8328],RAX
.L_41d306:

            mov RCX,QWORD PTR [RSP+232]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_41de65

            add RSP,248
.L_41d326:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d338:

            mov RDX,QWORD PTR [RBX+8272]
            lea RAX,QWORD PTR [RDX+RAX*1-1]
            cmp RDX,RAX
            jbe .L_41d359

            jmp .L_41d362
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d350:

            sub RAX,1
            cmp RDX,RAX
            ja .L_41d362
.L_41d359:

            cmp BYTE PTR [RAX],47
            jne .L_41d350

            sub RAX,1
.L_41d362:

            sub RAX,RDX
            add RAX,1
            mov QWORD PTR [RBX+8280],RAX
            jmp .L_41cff5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d378:

            mov ESI,524288
            mov RDI,R13
            xor EAX,EAX
            call open@PLT

            mov DWORD PTR [RBX+48],EAX
            mov EDI,EAX
            call .L_43f840

            mov ESI,DWORD PTR [RBX+48]
            cmp ESI,-1
            jne .L_41d125

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            cmp ESI,2
            jne .L_41d3b3

            cmp QWORD PTR [RBX+8304],0
            je .L_41d3e0
.L_41d3b3:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_41e1b7]
            xor EAX,EAX
            mov RCX,R13
            mov EBP,4294967276
            call .L_43f5d0

            mov ESI,DWORD PTR [RBX+48]
            test ESI,ESI
            jns .L_41d12d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d3e0:

            mov RDX,QWORD PTR [RSP+24]
            mov RSI,R13
            mov EDI,1
            call __lxstat@PLT

            cmp EAX,-1
            jne .L_41d145

            test BYTE PTR [RSP+61],8
            jne .L_41cff5
.L_41d406:

            mov R10,QWORD PTR [RSP+64]
            jmp .L_41d2ef
.L_41d410:

            mov RSI,QWORD PTR [R13+16]
            mov RDI,QWORD PTR [RSP+64]
            call .L_446660

            mov R14,QWORD PTR [R13+32]
            mov R10,QWORD PTR [RSP+64]
            test R14,R14
            jne .L_41d445

            jmp .L_41d0d1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d438:

            mov R14,QWORD PTR [R14+32]
            test R14,R14
            je .L_41d0d1
.L_41d445:

            cmp BYTE PTR [R14+24],0
            je .L_41d438

            cmp BYTE PTR [R14+25],0
            jne .L_41d438

            mov EAX,DWORD PTR [R14+28]
            cmp DWORD PTR [R13+28],EAX
            jne .L_41d438

            mov RSI,QWORD PTR [R14+16]
            mov RDI,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+32],R10
            call strcmp@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RSP+32]
            jne .L_41d438

            mov RCX,QWORD PTR [R14+8]
            mov R8,QWORD PTR [RSP+8]
            mov RSI,R10
            mov RDI,QWORD PTR [RSP]
            mov BYTE PTR [R14+25],1
            mov RDX,RBX
            call .L_41be30

            cmp EBP,EAX
            mov R10,QWORD PTR [RSP+64]
            cmovg EBP,EAX
            jmp .L_41d438
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d4a8:

            mov EBP,1
            jmp .L_41d306
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d4b8:

            mov RDI,R10
            call .L_445450

            mov R10,QWORD PTR [RSP+64]
            mov R13,RAX
            jmp .L_41d0fa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d4d0:

            mov RDI,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_41e1b5]
            call .L_437310

            jmp .L_41d095
.L_41d4e6:

            call close@PLT

            mov DWORD PTR [RBX+48],4294967295
            test BYTE PTR [RSP+61],8
            je .L_41d1cb

            jmp .L_41cff5
.L_41d502:

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,32768
            je .L_41d610

            mov EAX,DWORD PTR [RSP+104]
            mov EDX,EAX
            and EDX,61440
            cmp EDX,40960
            jne .L_41d169
.L_41d52f:

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,40960
            je .L_41d610

            mov EAX,DWORD PTR [RSP+104]
            mov EDX,EAX
            and EDX,49152
            cmp EDX,49152
            jne .L_41d17d
.L_41d55c:

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,49152
            je .L_41d610

            mov EAX,DWORD PTR [RSP+104]
            and EAX,61440
            cmp EAX,8192
            jne .L_41d18d
.L_41d585:

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,8192
            je .L_41d610

            mov EAX,DWORD PTR [RSP+104]
            and EAX,61440
            cmp EAX,24576
            jne .L_41d198
.L_41d5aa:

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,24576
            je .L_41d610

            mov EAX,DWORD PTR [RSP+104]
            and EAX,61440
            cmp EAX,16384
            jne .L_41d1a3
.L_41d5cf:

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,16384
            je .L_41d610

            mov EAX,DWORD PTR [RSP+104]
            and EAX,61440
            cmp EAX,4096
            jne .L_41d1ae
.L_41d5f4:

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,4096
            jne .L_41d1ae

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d610:

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
            mov EDX,EAX
            and EDX,4097
            cmp EDX,1
            je .L_41d666

            call .L_444e70

            cmp EAX,8192
            je .L_41d64e

            mov RDI,QWORD PTR [RSP+64]
            call .L_444e70

            cmp EAX,24576
            je .L_41d64e

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_41d666
.L_41d64e:

            mov RDI,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+120]
            call .L_446710

            mov EAX,DWORD PTR [RSP+60]
            mov RDI,QWORD PTR [RSP+64]
.L_41d666:

            test AL,12
            je .L_41d208

            test AH,16
            jne .L_41d208

            test AH,6
            jne .L_41d236

            jmp .L_41d224
.L_41d685:

            mov DWORD PTR [RSP+32],EAX
            mov EBP,4294967276
            call __errno_location@PLT

            mov RDI,QWORD PTR [RSP]
            mov ESI,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_41e1c5]
            xor EAX,EAX
            mov RCX,R13
            call .L_43f5d0

            mov EDI,DWORD PTR [RBX+48]
            call close@PLT

            mov R8D,DWORD PTR [RSP+32]
            mov DWORD PTR [RBX+48],R8D
            test BYTE PTR [RSP+61],8
            je .L_41d406

            jmp .L_41cff5
.L_41d6cb:

            call .L_447310

            test RAX,RAX
            mov QWORD PTR [RBX+8320],RAX
            je .L_41db97

            mov RDI,RAX
            mov ESI,524288
            call .L_447360

            lea RAX,QWORD PTR [RIP+.L_41e149]
            lea RSI,QWORD PTR [RSP+60]
            mov DWORD PTR [RBX+52],524288
            mov RDI,R14
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RSP+64],0
            call .L_41c8d0

            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+16],1
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d730:

            mov QWORD PTR [RSP],0
            xor R15D,R15D
.L_41d73b:

            mov RDX,QWORD PTR [RSP+8]
            mov ESI,1
            mov RDI,R14
            call .L_4049e0

            test RAX,RAX
            mov RBP,RAX
            je .L_41ddb4

            mov R12,QWORD PTR [RSP+72]
            test R12,R12
            js .L_41db8d

            mov RDX,R12
            mov ESI,10
            mov RDI,RAX
            call memchr@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_41d78e

            mov R12,RAX
            sub R12,RBP
            add R12,1
            mov QWORD PTR [RSP+72],R12
.L_41d78e:

            add R12,R15
            cmp R12,65535
            jg .L_41db77

            lea RSI,QWORD PTR [R12+1]
            mov RDI,RBX
            call .L_4342f0

            test RAX,RAX
            je .L_41dd5c

            mov RDI,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RSP+72]
            mov RSI,RBP
            add RDI,R15
            call memcpy@PLT

            mov RSI,QWORD PTR [RSP+72]
            mov RDI,R14
            call .L_404a30

            mov RSI,QWORD PTR [RSP+72]
            mov RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RSP]
            add RSI,R15
            mov BYTE PTR [RAX+RSI*1],0
            mov R8,QWORD PTR [RBX]
            mov R15,RSI
            add RDX,R8
            movzx EAX,BYTE PTR [RDX]
            nop
            nop
            nop
            nop
            nop
.L_41d7f8:

            test AL,AL
            je .L_41d820
.L_41d7fc:

            cmp AL,10
            je .L_41d870

            cmp AL,35
            je .L_41d838

            cmp AL,92
            movzx ECX,BYTE PTR [RDX+1]
            je .L_41d850

            mov EAX,ECX
            add RDX,1
            test AL,AL
            jne .L_41d7fc

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d820:

            mov RBP,RDX
            nop
            nop
            nop
            nop
            nop
.L_41d828:

            sub RBP,R8
            mov QWORD PTR [RSP],RBP
            jmp .L_41d73b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d838:

            test R13,R13
            je .L_41d820

            movzx EAX,BYTE PTR [RDX+1]
            add RDX,1
            jmp .L_41d7f8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d850:

            cmp CL,10
            je .L_41dba1

            test CL,CL
            lea RBP,QWORD PTR [RDX+1]
            je .L_41d828

            movzx EAX,BYTE PTR [RDX+2]
            add RDX,2
            jmp .L_41d7f8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d870:

            test RSI,RSI
            je .L_41ddb4

            js .L_41de44

            movzx EAX,BYTE PTR [R8]
            cmp AL,9
            je .L_41d890

            cmp AL,32
            jne .L_41d8a4

            nop
            nop
            nop
            nop
            nop
.L_41d890:

            add R8,1
            movzx EAX,BYTE PTR [R8]
            sub R15,1
            cmp AL,32
            je .L_41d890

            cmp AL,9
            je .L_41d890
.L_41d8a4:

            cmp AL,35
            jbe .L_41d970

            cmp AL,47
            jne .L_41d980

            lea RDI,QWORD PTR [RIP+.L_41e13d]
            mov ECX,4
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41dbb6

            movzx EAX,BYTE PTR [R8+4]
            cmp AL,32
            je .L_41d8e3

            cmp AL,9
            jne .L_41ddd3
.L_41d8e3:

            lea R12,QWORD PTR [R8+4]
            lea R13,QWORD PTR [RSP+64]
            jmp .L_41d945
          .byte 0x66
          .byte 0x90
.L_41d8f0:

            lea RSI,QWORD PTR [RIP+.L_41e17b]
            mov RDI,RBP
            call strcspn@PLT

            mov ESI,61
            lea R12,QWORD PTR [RBP+RAX*1]
            mov RDI,RBP
            mov R15,RAX
            call strchr@PLT

            mov RDX,RAX
            mov RSI,RBP
            mov RDI,R13
            sub RDX,RBP
            cmp R12,RAX
            cmovb RDX,R15
            call .L_41bb20

            mov RCX,R15
            mov RDX,RBP
            mov RSI,R13
            mov RDI,R14
            call .L_41bbd0

            test EAX,EAX
            jne .L_41db66
.L_41d945:

            lea RSI,QWORD PTR [RIP+.L_41e17b]
            mov RDI,R12
            call strspn@PLT

            lea RBP,QWORD PTR [R12+RAX*1]
            cmp BYTE PTR [RBP],0
            jne .L_41d8f0

            nop
            nop
.L_41d960:

            add QWORD PTR [RSP+16],1
            jmp .L_41d730
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d970:

            movabs RDX,34359747585
            bt RDX,RAX
            jb .L_41d960
.L_41d980:

            mov EDI,40
            mov QWORD PTR [RSP],R8
            mov EBP,DWORD PTR [RSP+60]
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            mov R8,QWORD PTR [RSP]
            je .L_41de02

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            xor EAX,EAX
            cmp QWORD PTR [RSP+24],0
            mov WORD PTR [R12+24],AX
            mov DWORD PTR [R12+28],0
            mov QWORD PTR [R12+32],0
            je .L_41dd98

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],R12
.L_41d9e7:

            test EBP,EBP
            mov RDI,R15
            je .L_41dd14

            test R15,R15
            jg .L_41da1d

            jmp .L_41ddcb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41da00:

            movabs RCX,4294977024
            bt RCX,RAX
            jae .L_41da2a

            sub RDI,1
            mov R15,RDI
            je .L_41ddaa
.L_41da1d:

            movzx EAX,BYTE PTR [R8+R15*1-1]
            mov RDI,R15
            cmp AL,32
            jbe .L_41da00
.L_41da2a:

            lea RDX,QWORD PTR [R8+1]
            mov RBP,R8
            lea RAX,QWORD PTR [RDX+R15*1]
.L_41da35:

            movzx ECX,BYTE PTR [RDX-1]
            cmp CL,32
            ja .L_41da55

            movabs RSI,4294977024
            shr RSI,CL
            mov RCX,RSI
            and ECX,1
            cmovne RBP,RDX
.L_41da55:

            add RDX,1
            cmp RAX,RDX
            jne .L_41da35
.L_41da5e:

            lea R15,QWORD PTR [R8+RDI*1]
            mov QWORD PTR [RSP+24],RBP
            mov R13,R8
            mov R9,R15
            sub R9,RBP
.L_41da70:

            lea RDI,QWORD PTR [R9+1]
            mov QWORD PTR [RSP],R9
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+16],RAX
            mov R9,QWORD PTR [RSP]
            je .L_41de02

            mov RDX,R9
            mov RSI,RBP
            mov RDI,RAX
            mov QWORD PTR [RSP],R9
            call memcpy@PLT

            mov R9,QWORD PTR [RSP]
            mov RDI,RAX
            mov RSI,R12
            mov BYTE PTR [RAX+R9*1],0
            call .L_41b8a0

            mov RCX,QWORD PTR [R12+16]
            xor EAX,EAX
.L_41dabc:

            movsx EDX,BYTE PTR [RCX]
            test DL,DL
            je .L_41dae7
.L_41dac3:

            shl EAX,4
            add RCX,1
            add EAX,EDX
            mov EDX,EAX
            and EDX,4026531840
            je .L_41dabc

            shr EDX,24
            xor EAX,EDX
            movsx EDX,BYTE PTR [RCX]
            and EAX,268435455
            test DL,DL
            jne .L_41dac3
.L_41dae7:

            mov DWORD PTR [R12+28],EAX
            and EAX,1023
            lea RAX,QWORD PTR [RBX+RAX*8]
            mov RDX,QWORD PTR [RAX+80]
            test RDX,RDX
            jne .L_41db0b

            jmp .L_41dda1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41db08:

            mov RDX,RAX
.L_41db0b:

            mov RAX,QWORD PTR [RDX+32]
            test RAX,RAX
            jne .L_41db08

            mov QWORD PTR [RDX+32],R12
.L_41db18:

            mov RBP,QWORD PTR [RSP+64]
            test RBP,RBP
            je .L_41dc77

            lea R15,QWORD PTR [R12+8]
            mov QWORD PTR [RSP],RBX
            jmp .L_41db45
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41db38:

            mov RBP,QWORD PTR [RBP]
            test RBP,RBP
            je .L_41dc73
.L_41db45:

            mov RBX,QWORD PTR [RBP+8]
            mov RDI,RBX
            call strlen@PLT

            mov RDX,RBX
            mov RCX,RAX
            mov RSI,R15
            mov RDI,R14
            call .L_41bbd0

            test EAX,EAX
            je .L_41db38
.L_41db66:

            mov EBP,EAX
.L_41db68:

            mov RDI,QWORD PTR [RSP+64]
            call .L_41b640

            jmp .L_41d306
.L_41db77:

            lea RDX,QWORD PTR [RIP+.L_41e14f]
            mov ESI,84
            mov RDI,R14
            xor EAX,EAX
            call .L_43f5d0
.L_41db8d:

            mov RDI,QWORD PTR [RSP+64]
            call .L_41b640
.L_41db97:

            mov EBP,4294967266
            jmp .L_41d306
.L_41dba1:

            mov BYTE PTR [R8+RSI*1-2],0
            lea R15,QWORD PTR [RSI-2]
            mov R8,QWORD PTR [RBX]
            mov RBP,RDX
            jmp .L_41d828
.L_41dbb6:

            lea RDI,QWORD PTR [RIP+.L_41e142]
            mov ECX,6
            mov RSI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_41ddd3

            movzx EAX,BYTE PTR [R8+6]
            cmp AL,32
            je .L_41dbe5

            cmp AL,9
            jne .L_41ddd3
.L_41dbe5:

            lea R13,QWORD PTR [R8+6]
            mov ESI,61
            mov RDI,R13
            call strchr@PLT

            test RAX,RAX
            jne .L_41de24

            lea RBP,QWORD PTR [RIP+.L_41e17b]
            lea R12,QWORD PTR [RSP+64]
            jmp .L_41dc53
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41dc10:

            mov RSI,RBP
            mov RDI,R13
            call strcspn@PLT

            cmp RAX,3
            mov R15,RAX
            jne .L_41dc42

            lea RDI,QWORD PTR [RIP+.L_41df7d]
            mov ECX,3
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_41dd44
.L_41dc42:

            mov RDX,R15
            mov RSI,R13
            mov RDI,R12
            call .L_41bb20
.L_41dc50:

            add R13,R15
.L_41dc53:

            mov RDI,R13
            mov RSI,RBP
            call strspn@PLT

            add R13,RAX
            cmp BYTE PTR [R13],0
            jne .L_41dc10

            add QWORD PTR [RSP+16],1
            jmp .L_41d730
.L_41dc73:

            mov RBX,QWORD PTR [RSP]
.L_41dc77:

            mov QWORD PTR [RSP],RBX
            lea R15,QWORD PTR [R12+8]
            mov QWORD PTR [RSP+40],R12
            mov RBX,QWORD PTR [RSP+24]
            jmp .L_41dcbf
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41dc90:

            cmp R13,RAX
            jb .L_41dd0f

            sub RAX,R12
            mov RDX,RAX
.L_41dc9b:

            mov RSI,R12
            mov RDI,R15
            call .L_41bb20

            mov RCX,RBP
            mov RDX,R12
            mov RSI,R15
            mov RDI,R14
            call .L_41bbd0

            test EAX,EAX
            jne .L_41db66
.L_41dcbf:

            lea RSI,QWORD PTR [RIP+.L_41e17b]
            mov RDI,R13
            call strspn@PLT

            lea R12,QWORD PTR [R13+RAX*1]
            cmp BYTE PTR [R12],0
            je .L_41dd7f

            cmp R12,RBX
            jae .L_41dd7f

            lea RSI,QWORD PTR [RIP+.L_41e17b]
            mov RDI,R12
            call strcspn@PLT

            mov ESI,61
            mov RDI,R12
            mov RBP,RAX
            lea R13,QWORD PTR [R12+RAX*1]
            call strchr@PLT

            test RAX,RAX
            jne .L_41dc90
.L_41dd0f:

            mov RDX,RBP
            jmp .L_41dc9b
.L_41dd14:

            lea RSI,QWORD PTR [RIP+.L_41e17b]
            mov RDI,R8
            mov QWORD PTR [RSP],R8
            call strcspn@PLT

            mov R8,QWORD PTR [RSP]
            mov R9,RAX
            lea R13,QWORD PTR [R8+RAX*1]
            mov RBP,R8
            lea RAX,QWORD PTR [R13+R15*1]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_41da70
.L_41dd44:

            mov RDI,QWORD PTR [RSP+64]
            call .L_41b640

            mov QWORD PTR [RSP+64],0
            jmp .L_41dc50
.L_41dd5c:

            lea RDX,QWORD PTR [RIP+.L_41e15d]
            mov RDI,R14
            mov ESI,12
            call .L_43f5d0

            mov RDI,QWORD PTR [RSP+64]
            call .L_41b640

            jmp .L_41db97
.L_41dd7f:

            mov R12,QWORD PTR [RSP+40]
            mov RBX,QWORD PTR [RSP]
            add QWORD PTR [RSP+16],1
            mov QWORD PTR [RSP+24],R12
            jmp .L_41d730
.L_41dd98:

            mov QWORD PTR [RBX+64],R12
            jmp .L_41d9e7
.L_41dda1:

            mov QWORD PTR [RAX+80],R12
            jmp .L_41db18
.L_41ddaa:

            mov RBP,R8
            xor EDI,EDI
            jmp .L_41da5e
.L_41ddb4:

            mov RAX,QWORD PTR [RBX+64]
            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RBX+72],RAX
            call .L_41b640

            jmp .L_41cf8b
.L_41ddcb:

            mov RBP,R8
            jmp .L_41da5e
.L_41ddd3:

            mov RCX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_41e19d]
            mov ESI,84
            mov RDI,R14
            xor EAX,EAX
            mov EBP,4294967266
            call .L_43f5d0

            mov RDI,QWORD PTR [RSP+64]
            call .L_41b640

            jmp .L_41d306
.L_41de02:

            call __errno_location@PLT

            mov ESI,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_41df81]
            mov RDI,R14
            xor EAX,EAX
            mov EBP,4294967266
            call .L_43f5d0

            jmp .L_41db68
.L_41de24:

            lea RDX,QWORD PTR [RIP+.L_41e180]
            mov ESI,4294967295
            mov RDI,R14
            xor EAX,EAX
            mov EBP,4294967266
            call .L_43f5d0

            jmp .L_41db68
.L_41de44:

            mov RDI,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],RSI
            call .L_41b640

            mov RSI,QWORD PTR [RSP]
            test ESI,ESI
            mov EBP,ESI
            je .L_41cf8b

            jmp .L_41d306
.L_41de65:

            call __stack_chk_fail@PLT
.L_41de6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41de70:

            push RBX
            xor EDX,EDX
            mov ESI,6
            mov RBX,RDI
            call .L_4049e0

            test RAX,RAX
            je .L_41deaf

            cmp DWORD PTR [RAX],1920232739
            je .L_41dea0
.L_41de8d:

            mov RDI,RBX
            xor ESI,ESI
            pop RBX
            jmp .L_41c8d0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dea0:

            cmp WORD PTR [RAX+4],25957
            jne .L_41de8d

            mov EAX,48
            pop RBX
            ret 
.L_41deaf:

            mov EAX,4294967295
            pop RBX
            ret 
.L_41deb6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dec0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_41e590]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
            call .L_443f50

            cmp EAX,-30
            je .L_41df59

            mov ESI,8344
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_41df60

            mov DWORD PTR [RAX+48],4294967295
            lea RAX,QWORD PTR [RIP+.L_41b680]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_41cf30]
            lea R8,QWORD PTR [RIP+.L_41bac0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_41b730]
            push 0
            lea RCX,QWORD PTR [RIP+.L_41de70]
            lea RDX,QWORD PTR [RIP+.L_41e149]
            mov RSI,RBX
            push RAX
            lea RAX,QWORD PTR [RIP+.L_41b760]
            mov RDI,RBP
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_41df59

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_41df59:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_41df60:

            lea RDX,QWORD PTR [RIP+.L_41e1df]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_41df59
.L_41df7d:
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x0
.L_41df81:
          .string "Can\'t allocate memory"
.L_41df97:
          .string "Can\'t read"
.L_41dfa2:
          .byte 0x2e
          .byte 0x0
.L_41dfa4:
          .string "checkfs"
.L_41dfac:
          .string "Unknown format `%s\'"
.L_41dfc0:
          .string "Missing number"
.L_41dfcf:
          .string "Too many arguments"
.L_41dfe2:
          .string ","
.L_41dfe4:
          .string "Not enough arguments"
.L_41dff9:
          .string "%s"
.L_41dffc:
          .string "nochange"
.L_41e005:
          .string "optional"
.L_41e00e:
          .string "ignore"
.L_41e015:
          .string "Malformed attribute \"%s\" (%d)"
.L_41e033:
          .string "content"
.L_41e03b:
          .string "contents"
.L_41e044:
          .string "cksum"
.L_41e04a:
          .string "device"
.L_41e051:
          .string "flags"
.L_41e057:
          .byte 0x67
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_41e05b:
          .string "gname"
.L_41e061:
          .string "inode"
.L_41e067:
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x0
.L_41e06c:
          .byte 0x6d
          .byte 0x64
          .byte 0x35
          .byte 0x0
.L_41e070:
          .string "md5digest"
.L_41e07a:
          .byte 0x6d
          .byte 0x6f
          .byte 0x64
          .byte 0x65
          .byte 0x0
.L_41e07f:
          .string "nlink"
.L_41e085:
          .string "resdevice"
.L_41e08f:
          .string "rmd160"
.L_41e096:
          .string "rmd160digest"
.L_41e0a3:
          .byte 0x73
          .byte 0x68
          .byte 0x61
          .byte 0x31
          .byte 0x0
.L_41e0a8:
          .string "sha1digest"
.L_41e0b3:
          .string "sha256"
.L_41e0ba:
          .string "sha256digest"
.L_41e0c7:
          .string "sha384"
.L_41e0ce:
          .string "sha384digest"
.L_41e0db:
          .string "sha512"
.L_41e0e2:
          .string "sha512digest"
.L_41e0ef:
          .string "size"
.L_41e0f4:
          .byte 0x74
          .byte 0x61
          .byte 0x67
          .byte 0x73
          .byte 0x0
.L_41e0f9:
          .byte 0x74
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x0
.L_41e0fe:
          .byte 0x74
          .byte 0x79
          .byte 0x70
          .byte 0x65
          .byte 0x0
.L_41e103:
          .string "block"
.L_41e109:
          .byte 0x63
          .byte 0x68
          .byte 0x61
          .byte 0x72
          .byte 0x0
.L_41e10e:
          .byte 0x64
          .byte 0x69
          .byte 0x72
          .byte 0x0
.L_41e112:
          .byte 0x66
          .byte 0x69
          .byte 0x66
          .byte 0x6f
          .byte 0x0
.L_41e117:
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x0
.L_41e11c:
          .byte 0x75
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_41e120:
          .string "uname"
.L_41e126:
          .string "Unrecognized key %s=%s"
.L_41e13d:
          .byte 0x2f
          .byte 0x73
          .byte 0x65
          .byte 0x74
          .byte 0x0
.L_41e142:
          .string "/unset"
.L_41e149:
          .string "mtree"
.L_41e14f:
          .string "Line too long"
.L_41e15d:
          .string "Can\'t allocate working buffer"
.L_41e17b:
          .string " \t\r\n"
.L_41e180:
          .string "/unset shall not contain `=\'"
.L_41e19d:
          .string "Can\'t parse line %ju"
.L_41e1b2:
          .byte 0x2e
          .byte 0x2e
          .byte 0x0
.L_41e1b5:
          .string "/"
.L_41e1b7:
          .string "Can\'t open %s"
.L_41e1c5:
          .string "Could not fstat %s"
          .byte 0x23
          .byte 0x6d
          .byte 0x74
          .byte 0x72
          .byte 0x65
          .byte 0x65
          .byte 0x0
.L_41e1df:
          .string "Can\'t allocate mtree data"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e200:
          .long .L_41b228-.L_41e200
          .long .L_41b1b0-.L_41e200
          .long .L_41b240-.L_41e200
          .long .L_41b1b0-.L_41e200
          .long .L_41b2c8-.L_41e200
          .long .L_41b240-.L_41e200
          .long .L_41b2b8-.L_41e200
          .long .L_41b240-.L_41e200
          .long .L_41b240-.L_41e200
          .long .L_41b2b8-.L_41e200
          .long .L_41b2a8-.L_41e200
          .long .L_41b298-.L_41e200
          .long .L_41b298-.L_41e200
          .long .L_41b240-.L_41e200
          .long .L_41b240-.L_41e200
          .long .L_41b288-.L_41e200
          .long .L_41b278-.L_41e200
          .long .L_41b268-.L_41e200
          .long .L_41b258-.L_41e200
.L_41e24c:
          .long .L_41ba40-.L_41e24c
          .long .L_41b950-.L_41e24c
          .long .L_41b950-.L_41e24c
          .long .L_41b950-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41ba30-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41ba20-.L_41e24c
          .long .L_41ba10-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41ba00-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b9e8-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b9d8-.L_41e24c
          .long .L_41b9c8-.L_41e24c
          .long .L_41b9b8-.L_41e24c
          .long .L_41b960-.L_41e24c
          .long .L_41b9a8-.L_41e24c
.L_41e368:
          .long .L_41bf4a-.L_41e368
          .long .L_41c396-.L_41e368
          .long .L_41c517-.L_41e368
          .long .L_41c028-.L_41e368
          .long .L_41c04a-.L_41e368
          .long .L_41c517-.L_41e368
          .long .L_41c08e-.L_41e368
          .long .L_41c517-.L_41e368
          .long .L_41c517-.L_41e368
          .long .L_41c0b0-.L_41e368
          .long .L_41c0d2-.L_41e368
          .long .L_41c163-.L_41e368
          .long .L_41c517-.L_41e368
          .long .L_41c517-.L_41e368
          .long .L_41c517-.L_41e368
          .long .L_41c185-.L_41e368
          .long .L_41c1df-.L_41e368
          .long .L_41c3f6-.L_41e368
          .long .L_41c330-.L_41e368
.L_41e3b4:
          .long .L_41c68f-.L_41e3b4
          .long .L_41c658-.L_41e3b4
          .long .L_41c621-.L_41e3b4
          .long .L_41c6c6-.L_41e3b4
          .long .L_41c5cf-.L_41e3b4
          .long .L_41c6c6-.L_41e3b4
          .long .L_41c6c6-.L_41e3b4
          .long .L_41c6c6-.L_41e3b4
          .long .L_41c6c6-.L_41e3b4
          .long .L_41c6c6-.L_41e3b4
          .long .L_41c58d-.L_41e3b4
.L_41e3e0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e4e0:
          .string "Symbolic mode \"%s\" unsupported"
          .zero 1
.L_41e500:
          .string "Unrecognized file type \"%s\"; assuming \"file\""
          .zero 3
.L_41e530:

            imul R14,QWORD PTR [R11+115],543649385
            je .L_41e5b3

            jo .L_41e5a1
          .byte 0x20
          .byte 0x6b
          .byte 0x65
          .byte 0x79
          .byte 0x77
          .byte 0x6f
          .byte 0x72
          .byte 0x64
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x20
          .byte 0x6d
          .byte 0x74
          .byte 0x72
          .byte 0x65
          .byte 0x65
          .byte 0x20
          .byte 0x73
          .byte 0x70
          .string "ecification"
          .zero 4
.L_41e560:

            insd DWORD PTR [RDI],DX
            je .L_41e5d5
          .byte 0x65
          .byte 0x65
          .byte 0x20
          .byte 0x73
          .byte 0x70
          .byte 0x65
          .byte 0x63
          .byte 0x69
          .byte 0x66
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x68
          .byte 0x61
          .byte 0x73
          .byte 0x20
          .byte 0x64
          .byte 0x69
          .byte 0x66
          .byte 0x66
          .byte 0x65
          .byte 0x72
          .byte 0x65
          .byte 0x6e
          .byte 0x74
          .byte 0x20
          .byte 0x74
          .byte 0x79
          .byte 0x70
          .byte 0x65
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x25
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e590:
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x5f
          .byte 0x72
          .byte 0x65
          .byte 0x61
          .byte 0x64
          .byte 0x5f
          .byte 0x73
          .byte 0x75
          .byte 0x70
          .byte 0x70
.L_41e5a1:

            outsd DX,DWORD PTR [RSI]
          .byte 0x72
          .byte 0x74

            pop RDI
            outsw DX,WORD PTR [RSI]
          .byte 0x72
          .byte 0x6d
          .byte 0x61
          .byte 0x74
          .byte 0x5f
          .byte 0x6d
          .byte 0x74
          .byte 0x72
          .byte 0x65
          .byte 0x65
          .byte 0x0
          .byte 0x66
.L_41e5b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e5c0:

            mov EAX,3
            ret 
.L_41e5c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e5d0:

            test RDI,RDI
            je .L_41e5f0
.L_41e5d5:

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_41e5f0

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_41e5f0

            mov EAX,DWORD PTR [RAX+20240]
            ret 
.L_41e5f0:

            mov EAX,4294967295
            ret 
.L_41e5f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e600:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41e611:

            mov RAX,QWORD PTR [RSI]
            test RAX,RAX
            je .L_41e730

            test EDX,EDX
            js .L_41e710

            cmp DWORD PTR [RSI+8],EDX
            mov R13,RSI
            jle .L_41e710

            movsxd RBP,EDX
            mov RBX,RCX
            mov ECX,R9D
            shl RBP,3
            sub ECX,R8D
            mov R12D,1
            add RAX,RBP
            shl R12D,CL
            mov R14D,R9D
            mov ESI,DWORD PTR [RAX]
            cmp ESI,DWORD PTR [RAX+4]
            je .L_41e680

            cmp R9D,R8D
            lea R11D,DWORD PTR [R8+1]
            jne .L_41e6b0

            mov DWORD PTR [RBX],R11D
            mov DWORD PTR [RBX+4],EDX
.L_41e666:

            xor EAX,EAX
.L_41e668:

            add RSP,24
.L_41e66c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e680:

            test R12D,R12D
            jle .L_41e666

            lea EAX,DWORD PTR [R12-1]
            mov RCX,RBX
            lea RAX,QWORD PTR [RBX+RAX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e698:

            mov DWORD PTR [RCX],R8D
            mov DWORD PTR [RCX+4],ESI
            add RCX,8
            cmp RAX,RCX
            jne .L_41e698

            jmp .L_41e666
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e6b0:

            mov R8D,R11D
            mov RCX,RBX
            mov EDX,ESI
            mov RSI,R13
            mov DWORD PTR [RSP+12],R11D
            call .L_41e600

            mov DWORD PTR [RSP+8],EAX
            mov EAX,R12D
            mov R11D,DWORD PTR [RSP+12]
            shr EAX,31
            mov R9D,R14D
            mov RSI,R13
            add R12D,EAX
            mov RAX,QWORD PTR [R13]
            mov RDI,R15
            sar R12D,1
            mov R8D,R11D
            movsxd R12,R12D
            mov EDX,DWORD PTR [RAX+RBP*1+4]
            lea RCX,QWORD PTR [RBX+R12*8]
            call .L_41e600

            or EAX,DWORD PTR [RSP+8]
            add RSP,24
.L_41e702:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e710:

            lea RDX,QWORD PTR [RIP+.L_422990]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R15
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_41e668
.L_41e730:

            lea RDX,QWORD PTR [RIP+.L_4227a0]
            mov ESI,84
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_41e668
.L_41e74b:

            nop
            nop
            nop
            nop
            nop
.L_41e750:

            mov RDI,RSI
            jmp free@PLT
.L_41e758:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e760:

            mov RDI,RSI
            jmp malloc@PLT
.L_41e768:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e770:

            push RBP
            push RBX
            sub RSP,8
            movsxd RDX,DWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI]
            cmp DWORD PTR [RDI+12],EDX
            je .L_41e7a0
.L_41e782:

            movabs RCX,-4294967297
            mov QWORD PTR [RAX+RDX*8],RCX
            mov EAX,1
.L_41e795:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e7a0:

            test EDX,EDX
            jle .L_41e7d0

            lea EBX,DWORD PTR [RDX+RDX*1]
            movsxd RSI,EBX
            shl RSI,3
.L_41e7ae:

            mov RBP,RDI
            mov RDI,RAX
            call realloc@PLT

            test RAX,RAX
            je .L_41e7dc

            mov QWORD PTR [RBP],RAX
            mov DWORD PTR [RBP+12],EBX
            movsxd RDX,DWORD PTR [RBP+8]
            jmp .L_41e782
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e7d0:

            mov ESI,2048
            mov EBX,256
            jmp .L_41e7ae
.L_41e7dc:

            mov EAX,4294967295
            jmp .L_41e795
.L_41e7e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e7f0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov R12D,ECX
            push RBX
            mov RBP,RSI
            sub RSP,16
.L_41e805:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+224],0
            je .L_41e920
.L_41e81d:

            mov EAX,DWORD PTR [RBX+848]
            and EDX,EAX
            add EAX,1
            lea ECX,DWORD PTR [R12+RDX*1]
            cmp ECX,EAX
            jle .L_41e8f0

            cmp R12D,EAX
            jg .L_41e968

            sub EAX,EDX
            mov R13D,EAX
            js .L_41e968

            mov RSI,QWORD PTR [RBX+840]
            movsxd RDX,EDX
            mov EDI,DWORD PTR [RBX+212]
            add RDI,QWORD PTR [RBX+224]
            add RSI,RDX
            cmp R12D,EAX
            jg .L_41e8a0

            movsxd RDX,R12D
            call memcpy@PLT
.L_41e86f:

            mov ECX,DWORD PTR [RBX+212]
            add ECX,R12D
            cmp ECX,DWORD PTR [RBX+216]
            mov DWORD PTR [RBX+212],ECX
            jae .L_41e8d0

            mov QWORD PTR [RBP],0
            xor EAX,EAX
.L_41e890:

            add RSP,16
.L_41e894:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e8a0:

            movsxd RDX,EAX
            call memcpy@PLT

            mov EDI,R13D
            add EDI,DWORD PTR [RBX+212]
            mov EDX,R12D
            add RDI,QWORD PTR [RBX+224]
            mov RSI,QWORD PTR [RBX+840]
            sub EDX,R13D
            movsxd RDX,EDX
            call memcpy@PLT

            jmp .L_41e86f
          .byte 0x90
.L_41e8d0:

            mov RAX,QWORD PTR [RBX+224]
            mov QWORD PTR [RBP],RAX
            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e8f0:

            mov EDI,DWORD PTR [RBX+212]
            movsxd RSI,EDX
            add RSI,QWORD PTR [RBX+840]
            add RDI,QWORD PTR [RBX+224]
            movsxd RAX,R12D
            mov RDX,RAX
            call memcpy@PLT

            jmp .L_41e86f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e920:

            mov EDI,DWORD PTR [RBX+216]
            mov QWORD PTR [RSP+8],RDX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+224],RAX
            mov RDX,QWORD PTR [RSP+8]
            jne .L_41e81d

            lea RDX,QWORD PTR [RIP+.L_4229c0]
            mov ESI,12
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_41e890

            nop
            nop
            nop
            nop
            nop
.L_41e968:

            lea RDX,QWORD PTR [RIP+.L_4227be]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_41e890
.L_41e988:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e990:

            sub RSP,72
.L_41e994:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov EAX,EDI
            mov DWORD PTR [RSP+32],4294967295
            and EAX,31
            add EAX,EAX
            mov DWORD PTR [RSP],EAX
            mov EAX,EDI
            sar EAX,5
            and EAX,63
            mov DWORD PTR [RSP+4],EAX
            mov EAX,EDI
            sar EAX,11
            and EAX,31
            mov DWORD PTR [RSP+8],EAX
            mov EAX,EDI
            sar EAX,16
            and EAX,31
            mov DWORD PTR [RSP+12],EAX
            mov EAX,EDI
            shr EDI,25
            sar EAX,21
            add EDI,80
            and EAX,15
            mov DWORD PTR [RSP+20],EDI
            mov RDI,RSP
            sub EAX,1
            mov DWORD PTR [RSP+16],EAX
            call mktime@PLT

            mov RDX,QWORD PTR [RSP+56]
            xor RDX,QWORD PTR FS:[40]
            jne .L_41ea10

            add RSP,72
.L_41ea0f:

            ret 
.L_41ea10:

            call __stack_chk_fail@PLT
.L_41ea15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ea20:

            push RBX

            mov RBX,QWORD PTR [RDI]
            mov RDI,QWORD PTR [RBX+272]
            call free@PLT

            mov RDI,QWORD PTR [RBX+312]
            call free@PLT

            mov RDI,QWORD PTR [RBX+352]
            call free@PLT

            mov RDI,QWORD PTR [RBX+392]
            call free@PLT

            mov RDI,QWORD PTR [RBX+304]
            call free@PLT

            mov RDI,QWORD PTR [RBX+344]
            call free@PLT

            mov RDI,QWORD PTR [RBX+384]
            call free@PLT

            mov RDI,QWORD PTR [RBX+424]
            call free@PLT

            pxor XMM0,XMM0
            mov QWORD PTR [RBX+304],0
            mov QWORD PTR [RBX+344],0
            mov QWORD PTR [RBX+384],0
            mov QWORD PTR [RBX+424],0
            movups XMMWORD PTR [RBX+272],XMM0
            movups XMMWORD PTR [RBX+288],XMM0
            movups XMMWORD PTR [RBX+312],XMM0
            movups XMMWORD PTR [RBX+328],XMM0
            movups XMMWORD PTR [RBX+352],XMM0
            movups XMMWORD PTR [RBX+368],XMM0
            movups XMMWORD PTR [RBX+392],XMM0
            movups XMMWORD PTR [RBX+408],XMM0
            pop RBX

            ret 
.L_41eaee:

            nop
            nop
.L_41eaf0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_41eaf9:

            mov RDI,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RDI]
            call .L_41ea20

            mov RDI,QWORD PTR [RBX+72]
            call free@PLT

            mov RDI,QWORD PTR [RBX+80]
            call free@PLT

            mov RDI,QWORD PTR [RBX+256]
            call free@PLT

            mov RDI,QWORD PTR [RBX+224]
            call free@PLT

            mov RDI,QWORD PTR [RBX+840]
            call free@PLT

            lea RDI,QWORD PTR [RBX+920]
            lea RSI,QWORD PTR [RIP+.L_65b5c0]
            call QWORD PTR [RIP+.L_65ad50]

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_41eb6c:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_41eb71:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41eb80:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_41eb8a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,30
            jg .L_41ecc0

            xor EDX,EDX
            mov ESI,7
            mov RBP,RDI
            call .L_4049e0

            test RAX,RAX
            mov RDX,RAX
            je .L_41ecc0

            cmp DWORD PTR [RAX],561144146
            je .L_41ec68
.L_41ebca:

            cmp BYTE PTR [RDX],77
            je .L_41ecb0
.L_41ebd3:

            xor EAX,EAX
            cmp DWORD PTR [RDX],1179403647
            jne .L_41ec48
.L_41ebdd:

            mov EBX,65536
            mov R13D,4096
            mov ESI,69632
            mov R12,RSP
.L_41ebf0:

            mov RDX,R12
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_41ec80

            lea RDX,QWORD PTR [RAX+RBX*1]
            mov RSI,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RDX+7]
            add RSI,RAX
            cmp RSI,RCX
            ja .L_41ec2d

            jmp .L_41ec90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ec20:

            add RDX,16
            lea RCX,QWORD PTR [RDX+7]
            cmp RSI,RCX
            jbe .L_41ec90
.L_41ec2d:

            cmp DWORD PTR [RDX],561144146
            jne .L_41ec20

            cmp WORD PTR [RDX+4],1818
            jne .L_41ec20

            cmp BYTE PTR [RDX+6],0
            jne .L_41ec20
.L_41ec43:

            mov EAX,30
.L_41ec48:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41ecca

            add RSP,24
.L_41ec5c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ec68:

            cmp WORD PTR [RAX+4],1818
            jne .L_41ebca

            cmp BYTE PTR [RAX+6],0
            jne .L_41ebca

            jmp .L_41ec43
.L_41ec80:

            sar R13,1
            cmp R13,63
            jg .L_41ec96

            xor EAX,EAX
            jmp .L_41ec48
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ec90:

            mov RBX,RDX
            sub RBX,RAX
.L_41ec96:

            lea RSI,QWORD PTR [R13+RBX*1]
            cmp RSI,131072
            jle .L_41ebf0

            xor EAX,EAX
            jmp .L_41ec48
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ecb0:

            cmp BYTE PTR [RDX+1],90
            jne .L_41ebd3

            jmp .L_41ebdd
          .byte 0x90
.L_41ecc0:

            mov EAX,4294967295
            jmp .L_41ec48
.L_41ecca:

            call __stack_chk_fail@PLT
.L_41eccf:

            nop
.L_41ecd0:

            push RBP
            push RBX
            mov RAX,RDI
            sub RSP,8
.L_41ecd9:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_4227d0]
            mov RBP,QWORD PTR [RCX]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_41ed50

            test RDX,RDX
            mov RSI,RDX
            mov RDI,RAX
            je .L_41ed30

            cmp BYTE PTR [RDX],0
            je .L_41ed30

            xor EDX,EDX
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [RBP+20184],RAX
            mov EAX,4294967266
            cmove EBX,EAX
.L_41ed27:

            add RSP,8
.L_41ed2b:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_41ed30:

            lea RDX,QWORD PTR [RIP+.L_4229f8]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_43f5d0

            jmp .L_41ed27
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ed50:

            mov EBX,4294967276
            jmp .L_41ed27
.L_41ed57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ed60:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov R12,RDX
            sub RSP,56
.L_41ed77:

            mov QWORD PTR [RSI+8],0
            mov QWORD PTR [RSP+40],RDI
            mov RDI,RSI
            call .L_41e770

            test EAX,EAX
            js .L_41ef30

            movabs RAX,-9223372034707292161
            mov DWORD PTR [R14+8],1
            mov DWORD PTR [RSP+28],R13D
            mov QWORD PTR [R14+16],RAX
            mov EAX,R13D
            mov QWORD PTR [RSP+32],0
            sub EAX,1
            xor R15D,R15D
            lea RAX,QWORD PTR [R12+RAX*1+1]
            mov QWORD PTR [RSP+16],RAX
.L_41edcb:

            mov EAX,DWORD PTR [RSP+32]
            mov R13,R12
            lea EBX,DWORD PTR [RAX+1]
            jmp .L_41edef
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ede0:

            add R13,1
            cmp QWORD PTR [RSP+16],R13
            je .L_41eed3
.L_41edef:

            movzx EAX,BYTE PTR [R13]
            mov EBP,R13D
            sub EBP,R12D
            cmp EAX,EBX
            jne .L_41ede0

            mov RDI,QWORD PTR [R14+32]
            call free@PLT

            cmp DWORD PTR [R14+20],EBX
            mov QWORD PTR [R14+32],0
            jge .L_41ee19

            mov DWORD PTR [R14+20],EBX
.L_41ee19:

            cmp DWORD PTR [R14+16],EBX
            jle .L_41ee23

            mov DWORD PTR [R14+16],EBX
.L_41ee23:

            mov ECX,DWORD PTR [RSP+32]
            mov RDI,QWORD PTR [R14]
            xor EAX,EAX
            jmp .L_41ee38
          .byte 0x66
          .byte 0x90
.L_41ee30:

            sub ECX,1
            cmp ECX,-1
            je .L_41eeaa
.L_41ee38:

            lea R10,QWORD PTR [RAX*8]
            mov EDX,R15D
            sar EDX,CL
            lea RAX,QWORD PTR [RDI+R10*1]
            and EDX,1
            mov ESI,DWORD PTR [RAX+4]
            cmp DWORD PTR [RAX],ESI
            je .L_41ef00

            movsxd RDX,EDX
            movsxd RAX,DWORD PTR [RAX+RDX*4]
            test EAX,EAX
            jns .L_41ee30

            mov RDI,R14
            mov QWORD PTR [RSP+8],RDX
            mov DWORD PTR [RSP+24],ECX
            mov QWORD PTR [RSP],R10
            call .L_41e770

            test EAX,EAX
            js .L_41ef30

            movsxd RAX,DWORD PTR [R14+8]
            mov RDX,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+24]
            mov R10,QWORD PTR [RSP]
            lea EDI,DWORD PTR [RAX+1]
            sub ECX,1
            cmp ECX,-1
            mov DWORD PTR [R14+8],EDI
            mov RDI,QWORD PTR [R14]
            lea RDX,QWORD PTR [RDI+RDX*4]
            mov DWORD PTR [RDX+R10*1],EAX
            jne .L_41ee38
.L_41eeaa:

            lea RAX,QWORD PTR [RDI+RAX*8]
            cmp DWORD PTR [RAX],-1
            jne .L_41ef00

            cmp DWORD PTR [RAX+4],-2
            jne .L_41ef00

            sub DWORD PTR [RSP+28],1
            mov DWORD PTR [RAX],EBP
            add R15D,1
            mov DWORD PTR [RAX+4],EBP
            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            jg .L_41ede0
.L_41eed3:

            add QWORD PTR [RSP+32],1
            add R15D,R15D
            mov RAX,QWORD PTR [RSP+32]
            cmp RAX,15
            jne .L_41edcb

            add RSP,56
.L_41eeef:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ef00:

            mov RDI,QWORD PTR [RSP+40]
            lea RDX,QWORD PTR [RIP+.L_4227db]
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            add RSP,56
            mov EAX,4294967266
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ef30:

            mov RDI,QWORD PTR [RSP+40]
            lea RDX,QWORD PTR [RIP+.L_422a30]
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            add RSP,56
            mov EAX,4294967266
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41ef5c:

            nop
            nop
            nop
            nop
.L_41ef60:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,168
.L_41ef74:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+48],RSI
            mov DWORD PTR [RSP+20],EDX
            mov R15,QWORD PTR [RAX]
            mov RAX,QWORD PTR [R15+20184]
            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_41f8a8
.L_41efaf:

            xor EDX,EDX
            mov ESI,7
            mov RDI,R13
            call .L_4049e0

            test RAX,RAX
            je .L_41fb98

            movzx ECX,WORD PTR [RAX+5]
            movzx EDX,WORD PTR [RAX+3]
            movzx EBP,WORD PTR [RAX]
            cmp CX,31
            mov RBX,RCX
            mov DWORD PTR [R15+24],EDX
            mov QWORD PTR [RSP+24],RCX
            jbe .L_41fc30

            lea RSI,QWORD PTR [RAX+2]
            xor EDI,EDI
            mov EDX,5
            call crc32@PLT

            mov ESI,7
            mov RDI,R13
            mov R12,RAX
            call .L_404a30

            test BYTE PTR [R15+24],16
            jne .L_41fc70

            movzx EAX,BX
            xor EDX,EDX
            mov BYTE PTR [R15+23],0
            sub RAX,7
            mov QWORD PTR [R15+32],0
            mov QWORD PTR [R15+40],0
            mov QWORD PTR [R15+48],0
            mov QWORD PTR [R15+128],0
            mov RSI,RAX
            mov QWORD PTR [R15+112],0
            mov QWORD PTR [R15+144],0
            mov RDI,R13
            mov DWORD PTR [R15+64],0
            mov QWORD PTR [R15+104],0
            mov QWORD PTR [R15+120],0
            mov QWORD PTR [R15+136],0
            mov QWORD PTR [R15+56],0
            mov QWORD PTR [R15+152],0
            mov QWORD PTR [RSP+8],RAX
            call .L_4049e0

            test RAX,RAX
            mov R14,RAX
            je .L_41fb98

            movzx EDX,BX
            mov RSI,RAX
            mov RDI,R12
            sub EDX,7
            call crc32@PLT

            cmp BP,AX
            lea RDX,QWORD PTR [RIP+.L_4227fc]
            jne .L_41f470

            mov RAX,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [R14+21]
            mov EDI,DWORD PTR [R14+13]
            mov EBP,DWORD PTR [R14+9]
            movdqu XMM0,XMMWORD PTR [R14]
            add RAX,R14
            movzx EBX,WORD PTR [R14+19]
            mov DWORD PTR [RSP+60],ECX
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [R14+16]
            movaps XMMWORD PTR [RSP+112],XMM0
            mov QWORD PTR [RSP+128],RAX
            movzx EAX,BYTE PTR [R14+24]
            mov BYTE PTR [RSP+136],AL
            movzx EAX,BYTE PTR [R14+8]
            mov BYTE PTR [RSP+59],AL
            movzx EAX,BYTE PTR [R14+18]
            mov BYTE PTR [R15+23],AL
            call .L_41e990

            mov EDX,DWORD PTR [R15+24]
            mov QWORD PTR [R15+48],RAX
            mov EAX,EBP
            mov QWORD PTR [R15+8],RAX
            test DL,4
            jne .L_41f8d0
.L_41f13b:

            and DH,1
            mov ECX,DWORD PTR [RSP+116]
            mov ESI,DWORD PTR [RSP+112]
            jne .L_41f430

            mov EAX,ESI
            lea R9,QWORD PTR [R14+25]
            mov QWORD PTR [R15+40],RCX
            mov QWORD PTR [R15+32],RAX
.L_41f15a:

            cmp BYTE PTR [RSP+20],122
            mov QWORD PTR [R15+168],RAX
            je .L_41f9e8
.L_41f16c:

            lea R12,QWORD PTR [R9+RBX*1]
            cmp R12,QWORD PTR [RSP]
            movzx R14D,BX
            ja .L_41fc7c

            lea EAX,DWORD PTR [R14+1]
            mov RBP,QWORD PTR [R15+72]
            lea EDX,DWORD PTR [RAX+RAX*1]
            cmp QWORD PTR [R15+96],RDX
            mov DWORD PTR [RSP+32],EAX
            mov DWORD PTR [RSP+64],EDX
            jae .L_41f1ca

            mov RSI,RDX
            mov RDI,RBP
            mov QWORD PTR [RSP+80],R9
            mov QWORD PTR [RSP+72],RDX
            call realloc@PLT

            test RAX,RAX
            mov RBP,RAX
            mov RDX,QWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+80]
            je .L_41fcb5

            mov QWORD PTR [R15+72],RAX
            mov QWORD PTR [R15+96],RDX
.L_41f1ca:

            mov RDX,RBX
            mov RSI,R9
            mov RDI,RBP
            mov QWORD PTR [RSP+72],R9
            call memcpy@PLT

            mov BYTE PTR [RBP+RBX*1],0
            test BYTE PTR [R15+25],2
            je .L_41f2eb

            mov RDI,RBP
            call strlen@PLT

            cmp RBX,RAX
            je .L_41fa30

            mov R9,QWORD PTR [RSP+72]
            lea R12D,DWORD PTR [RAX+2]
            add EAX,1
            mov R8D,DWORD PTR [RSP+64]
            xor EBX,EBX
            xor EDI,EDI
            xor ESI,ESI
            movzx EAX,BYTE PTR [R9+RAX*1]
            sub R8D,2
            mov BYTE PTR [RSP+32],AL
.L_41f222:

            cmp R12D,R14D
            jae .L_41f288
.L_41f227:

            cmp EBX,R8D
            jae .L_41f288

            mov EDX,R12D
            test SIL,SIL
            lea R10,QWORD PTR [R9+RDX*1]
            je .L_41f4b8

            sub ESI,2
            movzx EAX,DIL
            movzx ECX,SIL
            sar EAX,CL
            and EAX,3
            cmp EAX,2
            je .L_41f4e4
.L_41f255:

            cmp EAX,3
            je .L_41f840

            cmp EAX,1
            mov EDX,EBX
            lea EAX,DWORD PTR [RBX+1]
            je .L_41f820

            mov BYTE PTR [RBP+RDX*1],0
            movzx EDX,BYTE PTR [R10]
            add R12D,1
            add EBX,2
            cmp R12D,R14D
            mov BYTE PTR [RBP+RAX*1],DL
            jb .L_41f227

            nop
            nop
            nop
.L_41f288:

            cmp EBX,R8D
            ja .L_41fcd0

            mov EAX,EBX
            lea R14D,DWORD PTR [RBX+2]
            mov BYTE PTR [RBP+RAX*1],0
            lea EAX,DWORD PTR [RBX+1]
            mov BYTE PTR [RBP+RAX*1],0
            mov RAX,QWORD PTR [R15+20200]
            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_41fb60
.L_41f2b9:

            mov RAX,RBP
            jmp .L_41f2cf
          .byte 0x66
          .byte 0x90
.L_41f2c0:

            cmp WORD PTR [RAX],23552
            jne .L_41f2cb

            mov BYTE PTR [RAX+1],47
.L_41f2cb:

            add RAX,2
.L_41f2cf:

            cmp WORD PTR [RAX],0
            jne .L_41f2c0

            lea EAX,DWORD PTR [RBX+3]
            add R12,R9
            mov DWORD PTR [RSP+32],EAX
            jmp .L_41f307
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f2e8:

            mov BYTE PTR [RAX],47
.L_41f2eb:

            mov ESI,92
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            jne .L_41f2e8

            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+64],RAX
.L_41f307:

            mov RCX,QWORD PTR [R15+80]
            mov EBX,DWORD PTR [RSP+32]
            test RCX,RCX
            je .L_41f31e

            cmp QWORD PTR [R15+88],R14
            je .L_41f910
.L_41f31e:

            mov RDI,RCX
            mov RSI,RBX
            call realloc@PLT

            mov RSI,QWORD PTR [R15+72]
            mov RDX,RBX
            mov RDI,RAX
            mov QWORD PTR [R15+80],RAX
            call memcpy@PLT

            mov RDI,QWORD PTR [R15+256]
            mov QWORD PTR [R15+88],R14
            call free@PLT

            mov ESI,24
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R15+256],RAX
            je .L_41fcb5

            mov RCX,QWORD PTR [RSP+24]
            mov RDX,-1
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RDX
            mov QWORD PTR [RAX],RCX
            movabs RAX,4294967296
            mov QWORD PTR [R15+264],RAX
            mov EAX,DWORD PTR [R15+24]
            test AH,4
            je .L_41f3b6

            lea RDX,QWORD PTR [R12+8]
            cmp RDX,QWORD PTR [RSP]
            ja .L_41fc30

            mov RCX,QWORD PTR [R12]
            mov R12,RDX
            mov QWORD PTR [R15+104],RCX
.L_41f3b6:

            test AH,16
            je .L_41f51a

            lea RBX,QWORD PTR [R12+2]
            cmp QWORD PTR [RSP],RBX
            jb .L_41fc30

            movzx EAX,WORD PTR [R12]
            mov QWORD PTR [RSP+72],RBP
            mov R12D,3
            mov QWORD PTR [RSP+80],R14
            mov DWORD PTR [RSP+24],EAX
            lea RAX,QWORD PTR [RSP+104]
            mov QWORD PTR [RSP+32],RAX
.L_41f3f1:

            mov EBP,DWORD PTR [RSP+24]
            lea ECX,DWORD PTR [R12*4]
            mov QWORD PTR [RSP+104],0
            shr EBP,CL
            mov EAX,EBP
            and EAX,8
            cmp R12D,3
            je .L_41f74f

            test EAX,EAX
            jne .L_41f768
.L_41f41f:

            test R12D,R12D
            je .L_41f510
.L_41f428:

            sub R12D,1
            jmp .L_41f3f1
          .byte 0x66
          .byte 0x90
.L_41f430:

            mov EAX,DWORD PTR [R14+25]
            mov EDX,DWORD PTR [R14+29]
            lea R9,QWORD PTR [R14+33]
            shl RDX,32
            shl RAX,32
            or RDX,RCX
            or RAX,RSI
            mov QWORD PTR [R15+40],RDX
            test RAX,RAX
            mov QWORD PTR [R15+32],RAX
            js .L_41f460

            test RDX,RDX
            jns .L_41f15a
.L_41f460:

            lea RDX,QWORD PTR [RIP+.L_42280d]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f470:

            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_43f5d0

            mov R9D,4294967266
.L_41f485:

            mov RCX,QWORD PTR [RSP+152]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R9D
            jne .L_41fce5

            add RSP,168
.L_41f4a6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f4b8:

            movzx EDI,BYTE PTR [R10]
            mov ECX,6
            lea EDX,DWORD PTR [R12+1]
            mov ESI,6
            mov R12,RDX
            lea R10,QWORD PTR [R9+RDX*1]
            movzx EAX,DIL
            sar EAX,CL
            and EAX,3
            cmp EAX,2
            jne .L_41f255
.L_41f4e4:

            movzx ECX,BYTE PTR [R9+RDX*1+1]
            mov EDX,EBX
            lea EAX,DWORD PTR [RBX+1]
            add R12D,2
            add EBX,2
            mov BYTE PTR [RBP+RDX*1],CL
            movzx EDX,BYTE PTR [R10]
            mov BYTE PTR [RBP+RAX*1],DL
            jmp .L_41f222
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f510:

            mov RBP,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+80]
.L_41f51a:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_404a30

            mov RAX,QWORD PTR [R13+1032]
            mov RDX,QWORD PTR [R15+256]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RDX+8],RAX
            add RAX,QWORD PTR [R15+32]
            mov QWORD PTR [RDX+16],RAX
            movzx EAX,BYTE PTR [RSP+59]
            test AL,AL
            js .L_41f9b0

            cmp AL,2
            jle .L_41f990

            cmp AL,5
            jg .L_41f9b0

            mov EAX,DWORD PTR [RSP+60]
            mov DWORD PTR [R15+64],EAX
.L_41f569:

            mov RDI,QWORD PTR [R15+224]
            mov QWORD PTR [R15+160],0
            mov QWORD PTR [R15+176],0
            mov QWORD PTR [R15+184],0
            mov QWORD PTR [R15+856],0
            mov QWORD PTR [R15+200],0
            mov DWORD PTR [R15+232],0
            mov QWORD PTR [R15+192],0
            mov DWORD PTR [R15+20216],0
            mov QWORD PTR [R15+20224],0
            mov QWORD PTR [R15+240],0
            mov BYTE PTR [R15+237],0
            mov BYTE PTR [R15+208],1
            mov BYTE PTR [R15+915],0
            mov BYTE PTR [R15+912],1
            call free@PLT

            lea RDI,QWORD PTR [R15+440]
            movabs RAX,562949953421312
            mov QWORD PTR [R15+224],0
            mov QWORD PTR [R15+212],RAX
            mov EAX,R15D
            mov QWORD PTR [R15+432],0
            and RDI,-8
            mov QWORD PTR [R15+828],0
            lea RSI,QWORD PTR [RIP+.L_65b5c0]
            sub EAX,EDI
            lea ECX,DWORD PTR [RAX+836]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            lea RDI,QWORD PTR [R15+920]
            call QWORD PTR [RIP+.L_65ad50]

            xor EAX,EAX
            cmp BYTE PTR [RSP+20],122
            mov WORD PTR [R15+913],AX
            je .L_41f980

            mov RBX,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [R15+56]
            mov RSI,QWORD PTR [R15+48]
            mov RDI,RBX
            call .L_4465a0

            mov RDX,QWORD PTR [R15+136]
            mov RSI,QWORD PTR [R15+128]
            mov RDI,RBX
            call .L_446330

            mov RDX,QWORD PTR [R15+120]
            mov RSI,QWORD PTR [R15+112]
            mov RDI,RBX
            call .L_446210

            mov RSI,QWORD PTR [R15+40]
            mov RDI,RBX
            call .L_446770

            mov ESI,DWORD PTR [R15+64]
            mov RDI,RBX
            call .L_446590

            mov RCX,QWORD PTR [RSP+64]
            mov RDX,R14
            mov RSI,RBP
            mov RDI,RBX
            call .L_4466d0

            test EAX,EAX
            mov R9D,EAX
            je .L_41f720

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_41fcdc

            mov RDI,QWORD PTR [RSP+64]
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_422b08]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_43f5d0

            mov R9D,4294967276
.L_41f720:

            mov EAX,DWORD PTR [R15+64]
            and EAX,61440
            cmp EAX,40960
            je .L_41fab0
.L_41f734:

            cmp QWORD PTR [R15+168],0
            jne .L_41f485

            mov BYTE PTR [R15+237],1
            jmp .L_41f485
.L_41f74f:

            mov RDX,QWORD PTR [R15+48]
            test EAX,EAX
            mov QWORD PTR [RSP+104],RDX
            je .L_41f428

            test RDX,RDX
            jne .L_41f785

            nop
            nop
            nop
.L_41f768:

            lea R14,QWORD PTR [RBX+4]
            cmp QWORD PTR [RSP],R14
            jb .L_41fc30

            mov EDI,DWORD PTR [RBX]
            mov RBX,R14
            call .L_41e990

            mov QWORD PTR [RSP+104],RAX
.L_41f785:

            mov R14D,EBP
            and R14D,3
            mov EAX,R14D
            add RAX,RBX
            cmp QWORD PTR [RSP],RAX
            jb .L_41fc30

            test R14D,R14D
            je .L_41f7cf

            lea EAX,DWORD PTR [R14-1]
            xor EDX,EDX
            lea RDI,QWORD PTR [RBX+RAX*1+1]
.L_41f7ac:

            movsx EAX,BYTE PTR [RBX]
            shr EDX,8
            add RBX,1
            shl EAX,16
            or EDX,EAX
            cmp RDI,RBX
            jne .L_41f7ac

            mov EDI,1801439851
            mov EAX,EDX
            mul EDI
            shr EDX,22
            mov R14D,EDX
.L_41f7cf:

            mov RDI,QWORD PTR [RSP+32]
            call localtime@PLT

            mov R9D,DWORD PTR [RAX]
            and EBP,4
            lea EDX,DWORD PTR [R9+R14*1]
            jne .L_41f9c0

            mov RAX,QWORD PTR [RSP+104]
.L_41f7ee:

            cmp R12D,3
            je .L_41fca8

            cmp R12D,2
            je .L_41fc88

            cmp R12D,1
            je .L_41fc9b

            mov QWORD PTR [R15+144],RAX
            mov QWORD PTR [R15+152],RDX
            jmp .L_41f41f
          .byte 0x90
.L_41f820:

            movzx ECX,BYTE PTR [RSP+32]
            add R12D,1
            add EBX,2
            mov BYTE PTR [RBP+RDX*1],CL
            movzx EDX,BYTE PTR [R10]
            mov BYTE PTR [RBP+RAX*1],DL
            jmp .L_41f222
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f840:

            movzx EAX,BYTE PTR [R10]
            lea EDX,DWORD PTR [R12+1]
            test AL,AL
            js .L_41fa70

            mov R12D,EDX
            xor R11D,R11D
            xor R10D,R10D
.L_41f85a:

            lea ECX,DWORD PTR [RBX+1]
            and EAX,127
            mov BYTE PTR [RSP+64],SIL
            add EAX,2
            add RCX,RBP
            jmp .L_41f875
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41f870:

            cmp R8D,EBX
            jbe .L_41f897
.L_41f875:

            mov EDX,EBX
            add RCX,2
            mov BYTE PTR [RBP+RDX*1],R11B
            mov EDX,EBX
            add EBX,2
            shr EDX,1
            movzx ESI,BYTE PTR [R9+RDX*1]
            add ESI,R10D
            mov BYTE PTR [RCX-2],SIL
            sub AL,1
            jne .L_41f870
.L_41f897:

            movzx ESI,BYTE PTR [RSP+64]
            jmp .L_41f222

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f8a8:

            mov EDX,DWORD PTR [R15+20168]
            test EDX,EDX
            je .L_41fa88

            mov RAX,QWORD PTR [R15+20176]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_41efaf
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f8d0:

            mov RDI,QWORD PTR [RSP+48]
            mov ESI,1
            call .L_4469f0

            lea RDX,QWORD PTR [RIP+.L_422a88]
            mov DWORD PTR [R15+20240],1
            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_43f5d0

            mov EDX,DWORD PTR [R15+24]
            jmp .L_41f13b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f910:

            mov RDI,QWORD PTR [R15+72]
            mov RSI,RCX
            mov RDX,RBX
            mov QWORD PTR [RSP+32],RCX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+32]
            jne .L_41f31e

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            mov DWORD PTR [RSP],EAX
            call .L_404a30

            mov EAX,DWORD PTR [R15+264]
            mov EDX,DWORD PTR [R15+268]
            mov R9D,DWORD PTR [RSP]
            add EAX,1
            cmp EAX,EDX
            mov DWORD PTR [R15+264],EAX
            jae .L_41fbbc

            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [R15+256]
            lea RAX,QWORD PTR [RAX+RDX*8]
            cmp QWORD PTR [RAX+8],0
            js .L_41fc14

            nop
.L_41f980:

            xor R9D,R9D
            jmp .L_41f485
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f990:

            mov EAX,DWORD PTR [RSP+60]
            and EAX,16
            cmp EAX,1
            sbb EAX,EAX
            and EAX,16311
            add EAX,16877
            mov DWORD PTR [R15+64],EAX
            jmp .L_41f569
          .byte 0x90
.L_41f9b0:

            lea RDX,QWORD PTR [RIP+.L_422ab0]
            jmp .L_41f470
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41f9c0:

            add R9D,1
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RDX
            mov DWORD PTR [RAX],R9D
            call mktime@PLT

            mov RDX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+104],RAX
            jmp .L_41f7ee
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f9e8:

            add QWORD PTR [RSP+24],RAX
            sub R9,R14
            xor EDX,EDX
            mov RCX,QWORD PTR [RSP+24]
            mov RDI,R13
            mov RBP,R9
            lea RAX,QWORD PTR [RCX-7]
            mov RSI,RAX
            mov R14,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_4049e0

            test RAX,RAX
            je .L_41fb98

            mov RCX,R14
            lea R9,QWORD PTR [RAX+RBP*1]
            add RCX,RAX
            mov QWORD PTR [RSP],RCX
            jmp .L_41f16c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41fa30:

            mov RAX,QWORD PTR [R15+20192]
            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            jne .L_41fa53

            jmp .L_41fc3c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fa50:

            mov BYTE PTR [RAX],47
.L_41fa53:

            mov ESI,92
            mov RDI,RBP
            call strchr@PLT

            test RAX,RAX
            jne .L_41fa50

            jmp .L_41f307
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fa70:

            add R12D,2
            movzx R10D,BYTE PTR [R9+RDX*1]
            movzx R11D,BYTE PTR [RSP+32]
            jmp .L_41f85a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41fa88:

            call .L_4378a0

            mov DWORD PTR [R15+20168],1
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [R15+20176],RAX
            jmp .L_41efaf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fab0:

            mov R14,QWORD PTR [RSP+48]
            xor ESI,ESI
            mov QWORD PTR [R15+168],0
            mov DWORD PTR [RSP],R9D
            mov RDI,R14
            call .L_446770

            mov RAX,QWORD PTR [R13+2472]
            xor EDX,EDX
            mov RDI,R13
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+32]
            call .L_4205b0

            test RAX,RAX
            je .L_41fb98

            mov RDX,QWORD PTR [RBX+32]
            mov RCX,QWORD PTR [RSP+40]
            mov RSI,RAX
            mov RDI,R14
            call .L_446910

            test EAX,EAX
            mov R9D,DWORD PTR [RSP]
            je .L_41fba3

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_41fcea

            mov RDI,QWORD PTR [RSP+40]
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_422b60]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R13
            xor EAX,EAX
            call .L_43f5d0

            mov RSI,QWORD PTR [RBX+32]
            mov RDI,R13
            call .L_404a30

            mov R9D,4294967276
            jmp .L_41f734
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41fb60:

            lea RSI,QWORD PTR [RIP+.L_422867]
            mov EDX,1
            mov RDI,R13
            mov QWORD PTR [RSP+32],R9
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [R15+20200],RAX
            mov R9,QWORD PTR [RSP+32]
            jne .L_41f2b9

            nop
            nop
            nop
            nop
            nop
.L_41fb98:

            mov R9D,4294967266
            jmp .L_41f485
.L_41fba3:

            mov RSI,QWORD PTR [RBX+32]
            mov RDI,R13
            mov DWORD PTR [RSP],R9D
            call .L_404a30

            mov R9D,DWORD PTR [RSP]
            jmp .L_41f734
.L_41fbbc:

            lea EAX,DWORD PTR [RDX+1]
            mov RDI,QWORD PTR [R15+256]
            lea RSI,QWORD PTR [RAX+RAX*2]
            mov DWORD PTR [R15+268],EAX
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov QWORD PTR [R15+256],RAX
            je .L_41fcb5

            mov EDX,DWORD PTR [R15+264]
            mov RCX,QWORD PTR [RSP+24]
            mov R9D,DWORD PTR [RSP]
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RAX,QWORD PTR [RAX+RDX*8]
            mov RDX,-1
            mov QWORD PTR [RAX],RCX
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RAX+16],RDX
.L_41fc14:

            mov RDX,QWORD PTR [R13+1032]
            mov RDX,QWORD PTR [RDX]
            mov QWORD PTR [RAX+8],RDX
            add RDX,QWORD PTR [R15+32]
            mov QWORD PTR [RAX+16],RDX
            jmp .L_41f485
          .byte 0x90
.L_41fc30:

            lea RDX,QWORD PTR [RIP+.L_4227e8]
            jmp .L_41f470
.L_41fc3c:

            lea RSI,QWORD PTR [RIP+.L_422870]
            mov EDX,1
            mov RDI,R13
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [R15+20192],RAX
            jne .L_41fa53

            jmp .L_41fb98
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fc70:

            lea RDX,QWORD PTR [RIP+.L_422a60]
            jmp .L_41f470
.L_41fc7c:

            lea RDX,QWORD PTR [RIP+.L_422826]
            jmp .L_41f470
.L_41fc88:

            mov QWORD PTR [R15+128],RAX
            mov QWORD PTR [R15+136],RDX
            jmp .L_41f428
.L_41fc9b:

            mov QWORD PTR [R15+112],RAX
            mov QWORD PTR [R15+120],RDX
            jmp .L_41f428
.L_41fca8:

            mov QWORD PTR [R15+48],RAX
            mov QWORD PTR [R15+56],RDX
            jmp .L_41f428
.L_41fcb5:

            lea RDX,QWORD PTR [RIP+.L_42283c]
.L_41fcbc:

            mov ESI,12
            mov RDI,R13
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_41fb98
.L_41fcd0:

            lea RDX,QWORD PTR [RIP+.L_422856]
            jmp .L_41f470
.L_41fcdc:

            lea RDX,QWORD PTR [RIP+.L_422ae0]
            jmp .L_41fcbc
.L_41fce5:

            call __stack_chk_fail@PLT
.L_41fcea:

            lea RDX,QWORD PTR [RIP+.L_422b40]
            jmp .L_41fcbc
.L_41fcf3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41fd00:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_41fd11:

            mov DWORD PTR [RDI+16],851968
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp QWORD PTR [RDI+24],0
            mov QWORD PTR [RSP+16],RSI
            je .L_420060
.L_41fd38:

            mov RAX,QWORD PTR [RBX+2472]
            mov R12,QWORD PTR [RAX]
            cmp DWORD PTR [R12+20240],-1
            jne .L_41fd59

            mov DWORD PTR [R12+20240],0
.L_41fd59:

            xor EDX,EDX
            mov ESI,7
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_41ff88

            mov EDX,DWORD PTR [R12+248]
            test EDX,EDX
            je .L_41fe20
.L_41fd81:

            lea RAX,QWORD PTR [RSP+32]
            lea R14,QWORD PTR [RIP+.L_422d28]
            mov DWORD PTR [R12+248],1
            mov QWORD PTR [RSP+8],RAX
.L_41fd9e:

            xor EDX,EDX
            mov ESI,7
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_41fdf2

            movzx R15D,BYTE PTR [RAX+2]
            lea EDX,DWORD PTR [R15-114]
            cmp DL,9
            ja .L_4200a0

            movzx EDX,DL
            movsxd RDX,DWORD PTR [R14+RDX*4]
            add RDX,R14
            jmp RDX
.L_41fdd0:

            cmp DWORD PTR [RAX],561144146
            je .L_4200c8
.L_41fddc:

            lea RDX,QWORD PTR [RIP+.L_422897]
.L_41fde3:

            mov ESI,84
            mov RDI,RBX
            xor EAX,EAX
            call .L_43f5d0
.L_41fdf2:

            mov EAX,4294967266
.L_41fdf7:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42017f

            add RSP,56
.L_41fe0f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fe20:

            cmp BYTE PTR [RAX],77
            je .L_420110
.L_41fe29:

            cmp DWORD PTR [RAX],1179403647
            jne .L_41fd81
.L_41fe35:

            lea R13,QWORD PTR [RSP+32]
            xor EBP,EBP
            mov R14D,4096
            mov ESI,4096
.L_41fe47:

            mov RDX,R13
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_420070

            mov RCX,QWORD PTR [RSP+32]
            cmp RCX,63
            jle .L_42008c

            lea RDX,QWORD PTR [RAX+7]
            add RCX,RAX
            mov RSI,RAX
            cmp RCX,RDX
            ja .L_41fe91

            jmp .L_420120
          .byte 0x66
          .byte 0x90
.L_41fe80:

            add RAX,16
            lea RDX,QWORD PTR [RAX+7]
            cmp RCX,RDX
            jbe .L_4200f0
.L_41fe91:

            cmp DWORD PTR [RAX],561144146
            jne .L_41fe80

            cmp WORD PTR [RAX+4],1818
            jne .L_41fe80

            cmp BYTE PTR [RAX+6],0
            jne .L_41fe80

            sub RAX,RSI
            mov RDI,RBX
            mov RSI,RAX
            call .L_404a30

            jmp .L_41fd81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41fec0:

            movzx EBP,WORD PTR [RAX+5]
            movzx ECX,WORD PTR [RAX+3]
            cmp BP,6
            jbe .L_420124

            test CX,CX
            jns .L_41fefd

            cmp RBP,10
            jbe .L_420124

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_41fdf2

            mov EDX,DWORD PTR [RAX+7]
            add RBP,RDX
.L_41fefd:

            movzx EAX,WORD PTR [RAX]
            mov ESI,2
            mov RDI,RBX
            sub RBP,2
            xor R13D,R13D
            mov WORD PTR [RSP+30],AX
            call .L_404a30

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ff20:

            mov RDX,QWORD PTR [RSP+8]
            cmp RBP,32768
            mov ESI,32768
            cmovbe RSI,RBP
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_41fdf2

            mov EDX,DWORD PTR [RSP+32]
            mov RDI,R13
            mov RSI,RAX
            call crc32@PLT

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov R13,RAX
            call .L_404a30

            sub RBP,QWORD PTR [RSP+32]
            jne .L_41ff20

            cmp WORD PTR [RSP+30],R13W
            jne .L_42013c

            cmp R15B,123
            jne .L_41fd9e

            nop
            nop
            nop
            nop
            nop
            nop
.L_41ff88:

            mov EAX,1
            jmp .L_41fdf7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ff98:

            movzx EDX,WORD PTR [RAX+3]
            mov DWORD PTR [R12],EDX
            movzx EBP,WORD PTR [RAX+5]
            cmp BP,12
            mov R13,RBP
            jbe .L_420130

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R15,RAX
            je .L_41fdf2

            movzx EAX,WORD PTR [RAX+7]
            mov WORD PTR [R12+16],AX
            mov EAX,DWORD PTR [R15+9]
            mov DWORD PTR [R12+18],EAX
            mov EAX,DWORD PTR [R12]
            test AH,2
            jne .L_4200b0
.L_41ffea:

            test AL,128
            jne .L_420148

            movzx EDX,R13W
            lea RSI,QWORD PTR [R15+2]
            xor EDI,EDI
            sub EDX,2
            call crc32@PLT

            cmp WORD PTR [R15],AX
            jne .L_42013c

            mov RSI,RBP
            mov RDI,RBX
            call .L_404a30

            jmp .L_41fd9e
          .byte 0x66
          .byte 0x90
.L_420020:

            mov RSI,QWORD PTR [RSP+16]
            mov EDX,116
            mov RDI,RBX
            call .L_41ef60

            jmp .L_41fdf7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420040:

            mov RSI,QWORD PTR [RSP+16]
            mov EDX,122
            mov RDI,RBX
            call .L_41ef60

            cmp EAX,-20
            jge .L_41fd9e

            jmp .L_41fdf7
.L_420060:

            lea RAX,QWORD PTR [RIP+.L_422876]
            mov QWORD PTR [RDI+24],RAX
            jmp .L_41fd38
.L_420070:

            sar R14,1
            cmp R14,63
            jle .L_42008c
.L_420079:

            lea RAX,QWORD PTR [R14+RBP*1]
            mov RSI,R14
            cmp RAX,131072
            jbe .L_41fe47
.L_42008c:

            lea RDX,QWORD PTR [RIP+.L_42287a]
            jmp .L_41fde3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4200a0:

            lea RDX,QWORD PTR [RIP+.L_4228cb]
            jmp .L_41fde3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4200b0:

            cmp RBP,13
            je .L_420130

            movzx EDX,BYTE PTR [R15+13]
            mov BYTE PTR [R12+22],DL
            jmp .L_41ffea
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4200c8:

            cmp WORD PTR [RAX+4],1818
            jne .L_41fddc

            cmp BYTE PTR [RAX+6],0
            jne .L_41fddc

            mov ESI,7
            mov RDI,RBX
            call .L_404a30

            jmp .L_41fd9e
.L_4200f0:

            sub RAX,RSI
            mov RSI,RAX
            add RBP,RAX
.L_4200f9:

            mov RDI,RBX
            call .L_404a30

            jmp .L_420079
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420110:

            cmp BYTE PTR [RAX+1],90
            jne .L_41fe29

            jmp .L_41fe35
          .byte 0x90
.L_420120:

            xor ESI,ESI
            jmp .L_4200f9
.L_420124:

            lea RDX,QWORD PTR [RIP+.L_4228ad]
            jmp .L_41fde3
.L_420130:

            lea RDX,QWORD PTR [RIP+.L_4227e8]
            jmp .L_41fde3
.L_42013c:

            lea RDX,QWORD PTR [RIP+.L_4227fc]
            jmp .L_41fde3
.L_420148:

            mov R15,QWORD PTR [RSP+16]
            mov ESI,1
            mov RDI,R15
            call .L_446a10

            mov ESI,1
            mov RDI,R15
            call .L_4469f0

            mov DWORD PTR [R12+20240],1
            lea RDX,QWORD PTR [RIP+.L_422a88]
            jmp .L_41fde3
.L_42017f:

            call __stack_chk_fail@PLT
.L_420184:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420190:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,16
.L_42019b:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            cmp BYTE PTR [RBP+23],48
            jne .L_4204d3

            cmp EDX,1
            je .L_420480

            cmp EDX,2
            je .L_420450
.L_4201c1:

            test RSI,RSI
            js .L_4204dc

            mov RAX,QWORD PTR [RBP+40]
            cmp RAX,RSI
            jl .L_420438
.L_4201d7:

            mov RCX,QWORD PTR [RBP+256]
            mov EDI,DWORD PTR [RBP+264]
            mov RBX,QWORD PTR [RCX+8]
            add RBX,RSI
            test EDI,EDI
            je .L_420211

            lea EDX,DWORD PTR [RDI-1]
            lea RAX,QWORD PTR [RCX+16]
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RCX+RDX*8+40]
            nop
.L_420200:

            add RBX,QWORD PTR [RAX+16]
            add RAX,24
            sub RBX,QWORD PTR [RAX-24]
            cmp RDX,RAX
            jne .L_420200
.L_420211:

            test BYTE PTR [RBP],1
            je .L_4202b2

            mov EAX,EDI
            lea RDX,QWORD PTR [RAX+RAX*2]
            mov R8,QWORD PTR [RCX+RDX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420230:

            lea RAX,QWORD PTR [RAX+RAX*2]
            cmp RBX,R8
            lea RAX,QWORD PTR [RCX+RAX*8]
            jge .L_420380

            test BYTE PTR [RBP+24],1
            je .L_420380

            test EDI,EDI
            je .L_4204ca

            lea EAX,DWORD PTR [RDI-1]
            mov RSI,R8
            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RDI,RAX
            mov DWORD PTR [RBP+264],EAX
            lea RDX,QWORD PTR [RCX+RDX*8]
            sub RSI,QWORD PTR [RDX+16]
            mov R8,QWORD PTR [RDX+8]
            sub RBX,RSI
            cmp R8,RBX
            jg .L_420230

            mov RSI,R8
            sub RSI,QWORD PTR [RDX]
            mov RDI,R12
            xor EDX,EDX
            call .L_404dd0

            test RAX,RAX
            js .L_420375

            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            call .L_41fd00

            test EAX,EAX
            jne .L_4204a8

            sub DWORD PTR [RBP+264],1
.L_4202b2:

            xor EDX,EDX
            mov RSI,RBX
            mov RDI,R12
            call .L_404dd0

            test RAX,RAX
            js .L_420375

            mov ECX,DWORD PTR [RBP+264]
            mov R9,QWORD PTR [RBP+256]
            lea RSI,QWORD PTR [RCX+RCX*2]
            mov RDI,RCX
            shl RSI,3
            mov RDX,QWORD PTR [R9+RSI*1+16]
            sub RDX,RAX
            test ECX,ECX
            mov QWORD PTR [RBP+168],RDX
            je .L_420335

            sub EDI,1
            lea R8,QWORD PTR [R9+RSI*1-16]
            lea RDX,QWORD PTR [R9+RSI*1+8]
            lea RDI,QWORD PTR [RDI+RDI*2]
            lea RSI,QWORD PTR [RCX*4]
            shl RDI,3
            sub RCX,RSI
            sub R8,RDI
            shl RCX,3
            nop
            nop
            nop
            nop
            nop
            nop
.L_420320:

            lea RSI,QWORD PTR [RCX+RDX*1]
            sub RAX,QWORD PTR [RDX]
            sub RDX,24
            add RAX,QWORD PTR [RDI+RSI*1+8]
            cmp R8,RDX
            jne .L_420320
.L_420335:

            sub RAX,QWORD PTR [R9+8]
            mov RDI,R12
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_404310

            mov RAX,QWORD PTR [RSP]
            cmp QWORD PTR [RBP+40],RAX
            mov QWORD PTR [RBP+160],0
            mov QWORD PTR [RBP+184],0
            je .L_420490
.L_42036e:

            mov QWORD PTR [RBP+200],RAX
.L_420375:

            add RSP,16
.L_420379:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_420380:

            mov RSI,QWORD PTR [RAX+16]
            cmp RSI,RBX
            jge .L_4202b2

            test BYTE PTR [RBP+24],2
            je .L_4202b2

            lea EDX,DWORD PTR [RDI+1]
            cmp EDX,DWORD PTR [RBP+268]
            mov DWORD PTR [RBP+264],EDX
            jae .L_4203b8

            mov EAX,EDX
            lea R8,QWORD PTR [RAX+RAX*2]
            lea R8,QWORD PTR [RCX+R8*8]
            cmp QWORD PTR [R8+16],RBX
            jl .L_420420
.L_4203b8:

            mov DWORD PTR [RBP+264],EDI
            xor EDX,EDX
            mov RDI,R12
            call .L_404dd0

            test RAX,RAX
            js .L_420375

            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            call .L_41fd00

            cdqe 
            cmp RAX,1
            je .L_420460
.L_4203e5:

            test RAX,RAX
            jne .L_4204a8

            mov EAX,DWORD PTR [RBP+264]
            mov RCX,QWORD PTR [RBP+256]
            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RDI,RAX
            mov R8,QWORD PTR [RCX+RDX*8+8]
            lea EDX,DWORD PTR [RAX-1]
            lea RDX,QWORD PTR [RDX+RDX*2]
            mov RSI,R8
            sub RSI,QWORD PTR [RCX+RDX*8+16]
            add RBX,RSI
            jmp .L_420230
          .byte 0x66
          .byte 0x90
.L_420420:

            mov R8,QWORD PTR [R8+8]
            mov RDI,R8
            sub RDI,RSI
            add RBX,RDI
            mov EDI,EDX
            jmp .L_420230
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420438:

            mov QWORD PTR [RBP+200],RSI
            mov RSI,RAX
            jmp .L_4201d7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420450:

            add RSI,QWORD PTR [RBP+40]
            jmp .L_4201c1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420460:

            mov BYTE PTR [RBP+252],1
            mov RSI,QWORD PTR [R12+160]
            mov RDI,R12
            call .L_41fd00

            cdqe 
            jmp .L_4203e5
          .byte 0x66
          .byte 0x90
.L_420480:

            add RSI,QWORD PTR [RBP+200]
            jmp .L_4201c1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420490:

            mov RDX,QWORD PTR [RBP+200]
            cmp RAX,RDX
            jge .L_42036e

            mov RAX,RDX
            jmp .L_420375
.L_4204a8:

            lea RDX,QWORD PTR [RIP+.L_4228d8]
.L_4204af:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R12
            call .L_43f5d0

            mov RAX,-25
            jmp .L_420375
.L_4204ca:

            lea RDX,QWORD PTR [RIP+.L_422b98]
            jmp .L_4204af
.L_4204d3:

            lea RDX,QWORD PTR [RIP+.L_422bd0]
            jmp .L_4204af
.L_4204dc:

            mov RAX,-1
            jmp .L_420375
.L_4204e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4204f0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_4204f9:

            jmp .L_42052b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420500:

            test BYTE PTR [RBX],1
            je .L_420598

            test BYTE PTR [RBX+24],2
            je .L_420598

            mov RSI,QWORD PTR [RBP+160]
            mov RDI,RBP
            call .L_41fd00

            cmp EAX,1
            je .L_420580
.L_420527:

            test EAX,EAX
            jne .L_420572
.L_42052b:

            mov RAX,QWORD PTR [RBP+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+160]
            test RSI,RSI
            jle .L_420554

            mov RDI,RBP
            call .L_404a30

            mov QWORD PTR [RBX+160],0
.L_420554:

            mov RSI,QWORD PTR [RBX+168]
            test RSI,RSI
            jle .L_420500

            mov RDI,RBP
            call .L_404a30

            test RAX,RAX
            jns .L_420500

            mov EAX,4294967266
.L_420572:

            add RSP,8
.L_420576:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420580:

            mov RSI,QWORD PTR [RBP+160]
            mov RDI,RBP
            call .L_41fd00

            jmp .L_420527
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420598:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_4205a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4205b0:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDX
            mov RBX,RDI
            sub RSP,8
.L_4205c3:

            jmp .L_4205d0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4205c8:

            test EAX,EAX
            jne .L_420668
.L_4205d0:

            mov RAX,QWORD PTR [RBX+2472]
            mov RDX,R12
            mov RSI,R13
            mov RDI,RBX
            mov RBP,QWORD PTR [RAX]
            call .L_4049e0

            test R12,R12
            je .L_42066a

            cmp BYTE PTR [RBX+144],0
            mov RDX,QWORD PTR [R12]
            je .L_42060d

            mov RCX,QWORD PTR [RBX+152]
            cmp RCX,RDX
            jge .L_42060d

            mov QWORD PTR [R12],RCX
            mov RDX,RCX
.L_42060d:

            mov RCX,QWORD PTR [RBP+168]
            cmp RCX,RDX
            jge .L_420620

            mov QWORD PTR [R12],RCX
            mov RDX,RCX
.L_420620:

            test RDX,RDX
            js .L_420668

            jne .L_42066a

            test BYTE PTR [RBP],1
            je .L_42066a

            test BYTE PTR [RBP+24],2
            je .L_42066a

            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            call .L_41fd00

            cmp EAX,1
            jne .L_4205c8

            mov BYTE PTR [RBP+252],1
            mov RSI,QWORD PTR [RBX+160]
            mov RDI,RBX
            call .L_41fd00

            test EAX,EAX
            je .L_4205d0

            nop
            nop
            nop
.L_420668:

            xor EAX,EAX
.L_42066a:

            add RSP,8
.L_42066e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_420675:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420680:

            push R14
            push R13
            mov R14,RDI
            push R12
            mov R12D,64
            push RBP
            push RBX
.L_420691:

            sub R12D,DWORD PTR [RSI+8]
            mov RBX,RSI
            mov RAX,QWORD PTR [RDI+2472]
            lea R13,QWORD PTR [RSI+16]
            mov RBP,QWORD PTR [RAX]
            mov EAX,R12D
            sar EAX,3
            cmp EAX,6
            je .L_420727
.L_4206b1:

            jle .L_4207a8

            cmp EAX,7
            je .L_420810

            cmp EAX,8
            jne .L_4208a0

            mov RDX,QWORD PTR [RBX+16]
            cmp RDX,7
            jg .L_4208a9
.L_4206d7:

            test RDX,RDX
            jle .L_4207c0

            mov RAX,QWORD PTR [RBX+24]
.L_4206e4:

            lea RSI,QWORD PTR [RAX+1]
            mov RCX,QWORD PTR [RBX]
            sub R12D,8
            sub RDX,1
            mov QWORD PTR [RBX+24],RSI
            movzx EAX,BYTE PTR [RAX]
            shl RCX,8
            add DWORD PTR [RBX+8],8
            mov QWORD PTR [RBX+16],RDX
            or RAX,RCX
            mov QWORD PTR [RBX],RAX
            mov EAX,R12D
            sar EAX,3
            add QWORD PTR [RBP+160],1
            sub QWORD PTR [RBP+168],1
            cmp EAX,6
            jne .L_4206b1
.L_420727:

            mov RDX,QWORD PTR [RBX+16]
            cmp RDX,5
            jle .L_4206d7

            mov RCX,QWORD PTR [RBX+24]
            mov RAX,QWORD PTR [RBX]
            sub RDX,6
            movzx ESI,BYTE PTR [RCX+5]
            shl RAX,48
            add RCX,6
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-6]
            shl RSI,40
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-5]
            shl RSI,32
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-4]
            shl ESI,24
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-3]
            shl ESI,16
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-2]
            mov QWORD PTR [RBX+24],RCX
            mov QWORD PTR [RBX+16],RDX
            add DWORD PTR [RBX+8],48
            shl ESI,8
            or RAX,RSI
            mov QWORD PTR [RBX],RAX
            add QWORD PTR [RBP+160],6
            mov EAX,1
            sub QWORD PTR [RBP+168],6
            jmp .L_4207b5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4207a8:

            test EAX,EAX
            jne .L_4208a0

            mov EAX,1
.L_4207b5:

            pop RBX
.L_4207b6:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_4207c0:

            mov RSI,QWORD PTR [RBP+160]
            test RSI,RSI
            jle .L_4207df

            mov RDI,R14
            call .L_404a30

            mov QWORD PTR [RBP+160],0
.L_4207df:

            mov RDX,R13
            mov ESI,1
            mov RDI,R14
            call .L_4205b0

            test RAX,RAX
            mov QWORD PTR [RBX+24],RAX
            je .L_420805

            mov RDX,QWORD PTR [RBX+16]
            test RDX,RDX
            jne .L_4206e4
.L_420805:

            xor EAX,EAX
            jmp .L_4207b5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420810:

            mov RDX,QWORD PTR [RBX+16]
            cmp RDX,6
            jle .L_4206d7

            mov RCX,QWORD PTR [RBX+24]
            mov RAX,QWORD PTR [RBX]
            sub RDX,7
            movzx ESI,BYTE PTR [RCX+6]
            shl RAX,56
            add RCX,7
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-7]
            shl RSI,48
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-6]
            shl RSI,40
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-5]
            shl RSI,32
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-4]
            shl ESI,24
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-3]
            shl ESI,16
            or RAX,RSI
            movzx ESI,BYTE PTR [RCX-2]
            mov QWORD PTR [RBX+24],RCX
            mov QWORD PTR [RBX+16],RDX
            add DWORD PTR [RBX+8],56
            shl ESI,8
            or RAX,RSI
            mov QWORD PTR [RBX],RAX
            add QWORD PTR [RBP+160],7
            mov EAX,1
            sub QWORD PTR [RBP+168],7
            jmp .L_4207b5
.L_4208a0:

            mov RDX,QWORD PTR [RBX+16]
            jmp .L_4206d7
.L_4208a9:

            mov RAX,QWORD PTR [RBX+24]
            sub RDX,8
            mov RCX,QWORD PTR [RAX]
            add RAX,8
            mov QWORD PTR [RBX+16],RDX
            mov QWORD PTR [RBX+24],RAX
            add DWORD PTR [RBX+8],64
            mov EAX,1
            bswap RCX
            mov QWORD PTR [RBX],RCX
            add QWORD PTR [RBP+160],8
            sub QWORD PTR [RBP+168],8
            jmp .L_4207b5
.L_4208e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4208f0:

            push RBP
            push RBX
            sub RSP,8
            mov RBP,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RBP+2472]
            mov RBX,QWORD PTR [RAX]
            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,7
            jle .L_420930
.L_42090e:

            mov RAX,QWORD PTR [RBX+20208]
            sub ECX,8
            mov DWORD PTR [RBX+20216],ECX
            shr RAX,CL
.L_420921:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420930:

            lea RSI,QWORD PTR [RBX+20208]
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_42090e

            cmp ECX,7
            jg .L_42090e

            lea RDX,QWORD PTR [RIP+.L_4228f6]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_43f5d0

            mov BYTE PTR [RBX+208],0
            xor EAX,EAX
            jmp .L_420921
.L_42096f:

            nop
.L_420970:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_42097b:

            cmp QWORD PTR [RSI+32],0
            mov RBP,RSI
            je .L_420a70
.L_420989:

            mov RAX,QWORD PTR [R12+2472]
            mov EDX,DWORD PTR [RBP+24]
            mov R13,QWORD PTR [RAX]
            mov EDI,DWORD PTR [R13+20216]
            lea RBX,QWORD PTR [R13+20208]
            cmp EDI,EDX
            jl .L_420ae8
.L_4209ad:

            mov RSI,QWORD PTR [R13+20208]
            mov ECX,EDI
            lea R9,QWORD PTR [RIP+.L_422f00]
            sub ECX,EDX
            movsxd R8,EDX
            mov RAX,RSI
            shr RAX,CL
            and EAX,DWORD PTR [R9+R8*4]
            mov R8,QWORD PTR [RBP+32]
            lea RAX,QWORD PTR [R8+RAX*8]
            mov R8D,DWORD PTR [RAX]
            movsxd RAX,DWORD PTR [RAX+4]
            test R8D,R8D
            js .L_420b38

            cmp R8D,EDX
            jle .L_420ad0

            mov DWORD PTR [R13+20216],ECX
            mov RDI,QWORD PTR [RBP]
            jmp .L_420a1f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420a00:

            sub ECX,1
            mov RAX,RSI
            shr RAX,CL
            mov DWORD PTR [R13+20216],ECX
            and EAX,1
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            test EAX,EAX
            js .L_420b38
.L_420a1f:

            lea R14,QWORD PTR [RAX*8]
            lea RDX,QWORD PTR [RDI+R14*1]
            mov EAX,DWORD PTR [RDX]
            cmp EAX,DWORD PTR [RDX+4]
            je .L_420ac3

            mov ECX,DWORD PTR [R13+20216]
            test ECX,ECX
            jg .L_420a00

            mov RSI,RBX
            mov RDI,R12
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [R13+20216]
            jne .L_420a5f

            test ECX,ECX
            jle .L_420b0d
.L_420a5f:

            mov RDI,QWORD PTR [RBP]
            mov RSI,QWORD PTR [R13+20208]
            lea RDX,QWORD PTR [RDI+R14*1]
            jmp .L_420a00
.L_420a70:

            mov EBX,DWORD PTR [RSI+20]
            cmp EBX,DWORD PTR [RSI+16]
            jl .L_420a81

            cmp EBX,10
            jle .L_420b5c
.L_420a81:

            mov DWORD PTR [RBP+24],10
            mov ESI,8192
            mov EBX,10
.L_420a92:

            mov EDI,1
            call calloc@PLT

            xor R8D,R8D
            xor EDX,EDX
            mov QWORD PTR [RBP+32],RAX
            mov R9D,EBX
            mov RCX,RAX
            mov RSI,RBP
            mov RDI,R12
            call .L_41e600

            test EAX,EAX
            je .L_420989

            mov EAX,4294967295
.L_420ac3:

            pop RBX
.L_420ac4:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420ad0:

            sub EDI,R8D
            mov DWORD PTR [R13+20216],EDI
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420ae8:

            mov RDI,R12
            mov RSI,RBX
            call .L_420680

            test EAX,EAX
            mov EDI,DWORD PTR [R13+20216]
            mov EDX,DWORD PTR [RBP+24]
            jne .L_4209ad

            cmp EDI,EDX
            jge .L_4209ad
.L_420b0d:

            lea RDX,QWORD PTR [RIP+.L_4228f6]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R12
            call .L_43f5d0

            mov BYTE PTR [R13+208],0
            mov EAX,4294967295
            jmp .L_420ac3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420b38:

            lea RDX,QWORD PTR [RIP+.L_422c00]
            mov RDI,R12
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            pop RBX
.L_420b4f:

            mov EAX,4294967295
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_420b5c:

            mov DWORD PTR [RSI+24],EBX
            mov ECX,EBX
            mov ESI,8
            shl RSI,CL
            jmp .L_420a92
.L_420b6e:

            nop
            nop
.L_420b70:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,88
.L_420b81:

            mov RDI,QWORD PTR [RDI+2472]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RBX,QWORD PTR [RDI]
            call .L_41ea20

            mov ECX,DWORD PTR [RBX+20216]
            lea R13,QWORD PTR [RBX+20208]
            and ECX,4294967288
            test ECX,ECX
            mov DWORD PTR [RBX+20216],ECX
            jle .L_421150
.L_420bbe:

            mov RAX,QWORD PTR [RBX+20208]
            sub ECX,1
            mov DWORD PTR [RBX+20216],ECX
            mov RDX,RAX
            mov RDI,RAX
            shr RDX,CL
            and EDX,1
            test DL,DL
            mov BYTE PTR [RBX+915],DL
            je .L_420d30

            cmp ECX,6
            jle .L_421180
.L_420bf1:

            sub ECX,7
            mov R12,RAX
            shr R12,CL
            mov DWORD PTR [RBX+20216],ECX
            mov R14D,R12D
            and R14D,32
            je .L_420c30

            cmp ECX,7
            jle .L_421280
.L_420c12:

            sub ECX,8
            mov RDX,RAX
            shr RDX,CL
            mov DWORD PTR [RBX+20216],ECX
            movzx EDX,DL
            add EDX,1
            shl EDX,20
            mov DWORD PTR [RBX+232],EDX
.L_420c30:

            test R12B,64
            je .L_421080

            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,7
            jle .L_4212b0
.L_420c49:

            sub ECX,8
            shr RAX,CL
            test R14B,R14B
            mov DWORD PTR [RBX+20216],ECX
            movzx EAX,AL
            mov DWORD PTR [RBX+948],EAX
            mov DWORD PTR [RBX+916],EAX
            je .L_421093
.L_420c6d:

            and R12D,31
            add R12D,1
            cmp R12D,16
            mov R13D,R12D
            jg .L_4211f0

            cmp R12D,1
            je .L_421544
.L_420c8c:

            lea R12,QWORD PTR [RBX+920]
            lea RSI,QWORD PTR [RIP+.L_65b5c0]
            lea R14,QWORD PTR [RBX+20104]
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad50]

            lea RAX,QWORD PTR [RIP+.L_4208f0]
            mov RDI,R14
            mov QWORD PTR [RBX+20152],RBP
            mov QWORD PTR [RBX+20160],RAX
            call QWORD PTR [RIP+.L_65ad68]

            lea RAX,QWORD PTR [RBX+20152]
            mov RDI,R12
            mov QWORD PTR [RBX+20144],RAX
            call QWORD PTR [RIP+.L_65ad40]

            mov ESI,DWORD PTR [RBX+232]
            test ESI,ESI
            je .L_42157a

            lea RDX,QWORD PTR [RIP+.L_65b5c0]
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad48]

            test EAX,EAX
            je .L_42155b

            mov RDI,R14
            call QWORD PTR [RIP+.L_65ad78]

            test EAX,EAX
            je .L_42151c

            mov ESI,R13D
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad58]

            mov BYTE PTR [RBX+913],1
            jmp .L_4210b5
          .byte 0x66
          .byte 0x90
.L_420d30:

            test ECX,ECX
            jle .L_421230
.L_420d38:

            lea ESI,DWORD PTR [RCX-1]
            bt RDI,RSI
            jae .L_4212e0
.L_420d45:

            pxor XMM0,XMM0
            mov DWORD PTR [RBX+20216],ESI
            mov DWORD PTR [RSP+64],0
            xor R14D,R14D
            lea R12,QWORD PTR [RSP+47]
            movaps XMMWORD PTR [RSP+48],XMM0
            jmp .L_420d83
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420d70:

            cmp R15D,19
            jg .L_420e18
.L_420d7a:

            mov ESI,DWORD PTR [RBX+20216]
            mov R14D,R15D
.L_420d83:

            cmp ESI,3
            jle .L_420e90
.L_420d8c:

            mov RDX,QWORD PTR [RBX+20208]
            lea ECX,DWORD PTR [RSI-4]
            movsxd RSI,R14D
            lea R15D,DWORD PTR [R14+1]
            mov DWORD PTR [RBX+20216],ECX
            mov RAX,RDX
            shr RAX,CL
            and EAX,15
            cmp AL,15
            mov BYTE PTR [RSP+RSI*1+48],AL
            jne .L_420d70

            cmp ECX,3
            jle .L_420ee0
.L_420dbd:

            sub ECX,4
            shr RDX,CL
            mov DWORD PTR [RBX+20216],ECX
            and EDX,15
            je .L_420d70

            movzx EDX,DL
            add EDX,1
            cmp R14D,19
            jg .L_421320

            movsxd RAX,R15D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_420de8:

            mov ECX,EAX
            mov R15D,EAX
            mov BYTE PTR [R12+RAX*1],0
            sub ECX,R14D
            cmp EDX,ECX
            setge SIL
            cmp EAX,19
            setle CL
            add RAX,1
            test SIL,CL
            jne .L_420de8

            cmp R15D,19
            jle .L_420d7a

            nop
            nop
            nop
            nop
.L_420e18:

            pxor XMM0,XMM0
            mov R12,RSP
            lea RDX,QWORD PTR [RSP+48]
            mov ECX,20
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [RSP+32],0
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            call .L_41ed60

            test EAX,EAX
            mov R14D,EAX
            je .L_420f45

            mov RDI,QWORD PTR [RSP]
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT
.L_420e64:

            mov RDI,QWORD PTR [RSP+72]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_42154d

            add RSP,88
.L_420e7f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420e90:

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            mov ESI,DWORD PTR [RBX+20216]
            jne .L_420d8c

            cmp ESI,3
            jg .L_420d8c
.L_420eb2:

            lea RDX,QWORD PTR [RIP+.L_4228f6]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R14D,4294967266
            call .L_43f5d0

            mov BYTE PTR [RBX+208],0
            jmp .L_420e64
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420ee0:

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            je .L_420f08

            mov RDX,QWORD PTR [RBX+20208]
            mov ECX,DWORD PTR [RBX+20216]
            jmp .L_420dbd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420f08:

            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,3
            jle .L_420eb2

            mov RDX,QWORD PTR [RBX+20208]
            jmp .L_420dbd
          .byte 0x90
.L_420f20:

            movsxd RDX,R14D
            add R14D,1
            add AL,BYTE PTR [RBX+RDX*1+432]
            and EAX,15
            mov BYTE PTR [RBX+RDX*1+432],AL
.L_420f38:

            cmp R14D,403
            jg .L_421438
.L_420f45:

            mov RSI,R12
            mov RDI,RBP
            call .L_420970

            test EAX,EAX
            js .L_421417

            cmp EAX,15
            jle .L_420f20

            cmp EAX,17
            jg .L_421000

            test R14D,R14D
            je .L_4214e8

            cmp EAX,16
            mov ECX,DWORD PTR [RBX+20216]
            je .L_421390

            cmp ECX,6
            jle .L_421258
.L_420f87:

            mov RSI,QWORD PTR [RBX+20208]
            sub ECX,7
            mov DWORD PTR [RBX+20216],ECX
            shr RSI,CL
            and ESI,127
            add ESI,11
.L_420fa0:

            cmp R14D,403
            jg .L_421438

            lea EAX,DWORD PTR [R14+1]
            lea R9,QWORD PTR [RBX-2]
            lea RDX,QWORD PTR [RBX-1]
            cdqe 
            nop
            nop
            nop
            nop
            nop
.L_420fc0:

            movzx ECX,BYTE PTR [R9+RAX*1+432]
            mov R8D,EAX
            mov BYTE PTR [RDX+RAX*1+432],CL
            mov ECX,EAX
            sub ECX,R14D
            cmp ESI,ECX
            setg DIL
            cmp EAX,403
            setle CL
            add RAX,1
            test DIL,CL
            jne .L_420fc0

            mov R14D,R8D
            jmp .L_420f38
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421000:

            cmp EAX,18
            mov ECX,DWORD PTR [RBX+20216]
            je .L_421330

            cmp ECX,6
            jle .L_421200
.L_421018:

            mov RSI,QWORD PTR [RBX+20208]
            sub ECX,7
            mov DWORD PTR [RBX+20216],ECX
            shr RSI,CL
            and ESI,127
            add ESI,11
.L_421031:

            cmp R14D,403
            jg .L_421438

            lea EAX,DWORD PTR [R14+1]
            lea RDX,QWORD PTR [RBX-1]
            cdqe 
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421050:

            mov ECX,EAX
            mov R8D,EAX
            mov BYTE PTR [RDX+RAX*1+432],0
            sub ECX,R14D
            cmp ESI,ECX
            setg DIL
            cmp EAX,403
            setle CL
            add RAX,1
            test DIL,CL
            jne .L_421050

            mov R14D,R8D
            jmp .L_420f38
          .byte 0x90
.L_421080:

            test R14B,R14B
            mov DWORD PTR [RBX+916],2
            jne .L_420c6d
.L_421093:

            cmp BYTE PTR [RBX+913],0
            je .L_421552

            lea RDI,QWORD PTR [RBX+20104]
            call QWORD PTR [RIP+.L_65ad78]

            test EAX,EAX
            je .L_42151c
.L_4210b5:

            mov EAX,DWORD PTR [RBX+232]
            mov RDI,QWORD PTR [RBX+840]
            test EAX,EAX
            je .L_4210e0

            test RDI,RDI
            je .L_4210e0

            mov BYTE PTR [RBX+912],0
            xor R14D,R14D
            jmp .L_420e64
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4210e0:

            mov RAX,QWORD PTR [RBX+40]
            cmp RAX,4194303
            jle .L_4211a8

            mov R13D,4194304
            mov R12D,4194304
.L_4210fc:

            mov RSI,R13
            call realloc@PLT

            test RAX,RAX
            je .L_421525

            mov QWORD PTR [RBX+840],RAX
            mov DWORD PTR [RBX+232],R12D
            mov RDX,R13
            xor ESI,ESI
            mov RDI,RAX
            xor R14D,R14D
            call memset@PLT

            mov EAX,DWORD PTR [RBX+232]
            mov BYTE PTR [RBX+912],0
            sub EAX,1
            mov DWORD PTR [RBX+848],EAX
            jmp .L_420e64
          .byte 0x66
          .byte 0x2e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421150:

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_420bbe

            test ECX,ECX
            jg .L_420bbe

            jmp .L_420eb2

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421180:

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            je .L_4213d0

            mov RAX,QWORD PTR [RBX+20208]
            mov ECX,DWORD PTR [RBX+20216]
            jmp .L_420bf1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4211a8:

            mov R12D,EAX
            shr R12D,1
            or R12D,EAX
            mov EAX,R12D
            shr EAX,2
            or R12D,EAX
            mov EAX,R12D
            shr EAX,4
            or R12D,EAX
            mov EAX,R12D
            shr EAX,8
            or R12D,EAX
            mov EAX,R12D
            shr EAX,16
            or R12D,EAX
            mov EAX,R12D
            shr EAX,1
            sub R12D,EAX
            lea R13D,DWORD PTR [R12+R12*1]
            mov R12,R13
            jmp .L_4210fc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4211f0:

            lea R13D,DWORD PTR [R12+R12*2-32]
            jmp .L_420c8c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421200:

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_421018

            cmp ECX,6
            jg .L_421018

            jmp .L_42134f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421230:

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            je .L_4213eb

            mov RDI,QWORD PTR [RBX+20208]
            mov ECX,DWORD PTR [RBX+20216]
            jmp .L_420d38
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421258:

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_420f87

            cmp ECX,6
            jg .L_420f87

            jmp .L_42134f
          .byte 0x90
.L_421280:

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            jne .L_421405

            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,7
            jle .L_420eb2

            mov RAX,QWORD PTR [RBX+20208]
            jmp .L_420c12
          .byte 0x66
          .byte 0x90
.L_4212b0:

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_4212ce

            cmp ECX,7
            jle .L_420eb2
.L_4212ce:

            mov RAX,QWORD PTR [RBX+20208]
            jmp .L_420c49
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4212e0:

            lea RDI,QWORD PTR [RBX+440]
            mov EAX,EBX
            mov QWORD PTR [RBX+432],0
            mov QWORD PTR [RBX+828],0
            and RDI,-8
            sub EAX,EDI
            lea ECX,DWORD PTR [RAX+836]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            jmp .L_420d45
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421320:

            mov R15D,R14D
            jmp .L_420d70
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421330:

            cmp ECX,2
            jg .L_421370

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_421370

            cmp ECX,2
            jg .L_421370
.L_42134f:

            mov RDI,QWORD PTR [RSP]
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT

            jmp .L_420eb2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421370:

            mov RSI,QWORD PTR [RBX+20208]
            sub ECX,3
            mov DWORD PTR [RBX+20216],ECX
            shr RSI,CL
            and ESI,7
            add ESI,3
            jmp .L_421031
          .byte 0x66
          .byte 0x90
.L_421390:

            cmp ECX,2
            jg .L_4213af

            mov RSI,R13
            mov RDI,RBP
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [RBX+20216]
            jne .L_4213af

            cmp ECX,2
            jle .L_42134f
.L_4213af:

            mov RSI,QWORD PTR [RBX+20208]
            sub ECX,3
            mov DWORD PTR [RBX+20216],ECX
            shr RSI,CL
            and ESI,7
            add ESI,3
            jmp .L_420fa0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4213d0:

            mov ECX,DWORD PTR [RBX+20216]
            cmp ECX,6
            jle .L_420eb2

            mov RAX,QWORD PTR [RBX+20208]
            jmp .L_420bf1
.L_4213eb:

            mov ECX,DWORD PTR [RBX+20216]
            test ECX,ECX
            jle .L_420eb2

            mov RDI,QWORD PTR [RBX+20208]
            jmp .L_420d38
.L_421405:

            mov RAX,QWORD PTR [RBX+20208]
            mov ECX,DWORD PTR [RBX+20216]
            jmp .L_420c12
.L_421417:

            mov RDI,QWORD PTR [RSP]
            mov R14D,4294967266
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT

            jmp .L_420e64
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421438:

            mov RDI,QWORD PTR [RSP]
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT

            lea RDX,QWORD PTR [RBX+432]
            lea RSI,QWORD PTR [RBX+272]
            mov ECX,299
            mov RDI,RBP
            call .L_41ed60

            test EAX,EAX
            mov R14D,EAX
            jne .L_420e64

            lea RDX,QWORD PTR [RBX+731]
            lea RSI,QWORD PTR [RBX+312]
            mov ECX,60
            mov RDI,RBP
            call .L_41ed60

            test EAX,EAX
            mov R14D,EAX
            jne .L_420e64

            lea RDX,QWORD PTR [RBX+791]
            lea RSI,QWORD PTR [RBX+352]
            mov ECX,17
            mov RDI,RBP
            call .L_41ed60

            test EAX,EAX
            mov R14D,EAX
            jne .L_420e64

            lea RDX,QWORD PTR [RBX+808]
            lea RSI,QWORD PTR [RBX+392]
            mov ECX,28
            mov RDI,RBP
            call .L_41ed60

            test EAX,EAX
            mov R14D,EAX
            je .L_4210b5

            jmp .L_420e64
.L_4214e8:

            mov RDI,QWORD PTR [RSP]
            call free@PLT

            mov RDI,QWORD PTR [RSP+32]
            call free@PLT

            lea RDX,QWORD PTR [RIP+.L_422c50]
.L_421502:

            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            mov R14D,4294967266
            jmp .L_420e64
.L_42151c:

            lea RDX,QWORD PTR [RIP+.L_422c28]
            jmp .L_421502
.L_421525:

            lea RDX,QWORD PTR [RIP+.L_4229c0]
            mov ESI,12
            mov RDI,RBP
            mov R14D,4294967266
            call .L_43f5d0

            jmp .L_420e64
.L_421544:

            lea RDX,QWORD PTR [RIP+.L_4228f6]
            jmp .L_421502
.L_42154d:

            call __stack_chk_fail@PLT
.L_421552:

            lea RDX,QWORD PTR [RIP+.L_422939]
            jmp .L_421502
.L_42155b:

            lea RDX,QWORD PTR [RIP+.L_42292b]
            mov ESI,12
            mov RDI,RBP
            mov R14D,4294967266
            call .L_43f5d0

            jmp .L_420e64
.L_42157a:

            lea RDX,QWORD PTR [RIP+.L_42290e]
            jmp .L_421502
.L_421586:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421590:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,104
.L_4215a1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RCX
            mov R15,QWORD PTR [RAX]
            cmp DWORD PTR [R15+20240],-1
            jne .L_4215de

            mov DWORD PTR [R15+20240],0
.L_4215de:

            mov RSI,QWORD PTR [R15+160]
            test RSI,RSI
            jle .L_4215fd

            mov RDI,R12
            call .L_404a30

            mov QWORD PTR [R15+160],0
.L_4215fd:

            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RAX],0
            cmp BYTE PTR [R15+237],0
            jne .L_42161f

            mov RAX,QWORD PTR [R15+40]
            cmp QWORD PTR [R15+200],RAX
            jl .L_421678
.L_42161f:

            mov RAX,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+16]
            mov R14D,1
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [R15+184]
            mov QWORD PTR [RBX],RAX
            mov RDX,QWORD PTR [R15+40]
            cmp RAX,RDX
            jl .L_421670
.L_421649:

            mov RDI,QWORD PTR [RSP+88]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_422644

            add RSP,104
.L_421664:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_421670:

            mov QWORD PTR [RBX],RDX
            jmp .L_421649
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421678:

            movzx EAX,BYTE PTR [R15+23]
            cmp AL,48
            je .L_4217a8

            jl .L_4219d0

            cmp AL,53
            jg .L_4219d0

            mov QWORD PTR [RSP+40],R15
            mov QWORD PTR [RSP+24],R12
.L_42169d:

            mov RAX,QWORD PTR [RSP+24]
            xor R14D,R14D
            mov RAX,QWORD PTR [RAX+2472]
            mov R15,QWORD PTR [RAX]
.L_4216af:

            cmp BYTE PTR [R15+208],0
            je .L_42236e

            cmp BYTE PTR [R15+914],0
            jne .L_42237e

            mov EAX,DWORD PTR [R15+232]
            test EAX,EAX
            je .L_421850

            mov RDX,QWORD PTR [R15+184]
            cmp RDX,QWORD PTR [R15+40]
            jge .L_42237e

            cmp BYTE PTR [R15+915],0
            jne .L_421850

            mov RAX,QWORD PTR [R15+176]
            test RAX,RAX
            jle .L_421850

            mov EBX,DWORD PTR [R15+216]
            sub EBX,DWORD PTR [R15+212]
            mov RBP,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+24]
            cmp RAX,RBX
            mov RSI,RBP
            cmovle RBX,RAX
            mov ECX,EBX
            call .L_41e7f0

            test EAX,EAX
            mov R14D,EAX
            jne .L_421a0e

            mov RSI,QWORD PTR [RBP]
            add QWORD PTR [R15+184],RBX
            sub QWORD PTR [R15+176],RBX
            test RSI,RSI
            je .L_4216af

            mov EAX,DWORD PTR [R15+216]
            mov RCX,QWORD PTR [RSP+8]
            mov DWORD PTR [R15+212],0
            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [R15+192]
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RCX]
            add QWORD PTR [R15+192],RAX
            mov RDI,QWORD PTR [R15+240]
            mov RDX,QWORD PTR [RCX]
            call crc32@PLT

            mov QWORD PTR [R15+240],RAX
            jmp .L_421649
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4217a8:

            mov RAX,QWORD PTR [R12+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+168],0
            jne .L_4217d0

            test BYTE PTR [RBX],1
            je .L_421a18

            test BYTE PTR [RBX+24],2
            je .L_421a18
.L_4217d0:

            lea RDX,QWORD PTR [RSP+80]
            mov ESI,1
            mov RDI,R12
            call .L_4205b0

            mov RDX,QWORD PTR [RSP+80]
            mov RCX,QWORD PTR [RSP]
            test RDX,RDX
            mov QWORD PTR [RCX],RAX
            jle .L_422621

            mov RCX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RAX
            xor R14D,R14D
            mov QWORD PTR [RCX],RDX
            mov RCX,QWORD PTR [RBX+184]
            mov QWORD PTR [RDI],RCX
            add QWORD PTR [RBX+184],RDX
            add QWORD PTR [RBX+200],RDX
            mov RDI,QWORD PTR [RBX+240]
            sub QWORD PTR [RBX+168],RDX
            mov QWORD PTR [RBX+160],RDX
            call crc32@PLT

            mov QWORD PTR [RBX+240],RAX
            jmp .L_421649
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421850:

            cmp QWORD PTR [R15+20232],0
            je .L_421c50
.L_42185e:

            cmp BYTE PTR [R15+912],0
            jne .L_4219f8
.L_42186c:

            cmp BYTE PTR [R15+915],0
            je .L_421d20

            lea R12,QWORD PTR [R15+20104]
            lea RBP,QWORD PTR [R15+920]
            mov RBX,QWORD PTR [RIP+.L_65ad80]
            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            mov R13D,EAX
            js .L_422358

            cmp EAX,DWORD PTR [R15+916]
            jne .L_4218d8

            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            js .L_422358

            cmp EAX,5
            ja .L_4218d8

            lea RDX,QWORD PTR [RIP+.L_422d50]
            mov EAX,EAX
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4218d8:

            mov RAX,QWORD PTR [R15+856]
            and EAX,DWORD PTR [R15+848]
            mov RDX,QWORD PTR [R15+840]
            cdqe 
            mov BYTE PTR [RDX+RAX*1],R13B
            mov RAX,QWORD PTR [R15+176]
            add QWORD PTR [R15+856],1
            lea RCX,QWORD PTR [RAX+1]
            mov QWORD PTR [R15+176],RCX
.L_42190d:

            mov EBX,DWORD PTR [R15+216]
            sub EBX,DWORD PTR [R15+212]
            mov RDX,QWORD PTR [R15+184]
            mov RSI,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+24]
            cmp RBX,RCX
            cmovge RBX,RCX
            mov ECX,EBX
            call .L_41e7f0

            test EAX,EAX
            mov R14D,EAX
            jne .L_421a0e

            add QWORD PTR [R15+184],RBX
            sub QWORD PTR [R15+176],RBX
.L_421952:

            mov RAX,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RAX]
            test RSI,RSI
            je .L_4216af

            mov R13,R15
            mov RCX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [R13+216]
            mov DWORD PTR [R13+212],0
            mov R15,QWORD PTR [RSP+40]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [R13+192]
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RCX]
            add QWORD PTR [R13+192],RAX
            mov RDI,QWORD PTR [R13+240]
            mov RDX,QWORD PTR [RCX]
            call crc32@PLT

            mov QWORD PTR [R13+240],RAX
.L_4219b3:

            test R14D,R14D
            je .L_421649

            cmp R14D,-20
            jne .L_421b56

            jmp .L_421649
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4219d0:

            lea RDX,QWORD PTR [RIP+.L_422cc0]
.L_4219d7:

            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            mov R14D,4294967266
            jmp .L_421649
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4219f8:

            mov RDI,QWORD PTR [RSP+24]
            call .L_420b70

            cmp EAX,-20
            mov R14D,EAX
            jge .L_42186c
.L_421a0e:

            mov R15,QWORD PTR [RSP+40]
            jmp .L_4219b3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421a18:

            mov RAX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RBX+184]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [RBX+240]
            cmp QWORD PTR [RBX+8],RAX
            jne .L_42259e

            mov BYTE PTR [RBX+237],1
            mov R14D,1
            jmp .L_421649
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421a60:

            mov R14D,16
            xor R13D,R13D
.L_421a69:

            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            js .L_422358

            mov ECX,R14D
            sub R14D,8
            shl EAX,CL
            or R13D,EAX
            cmp R14D,-8
            jne .L_421a69

            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            js .L_422358

            mov ECX,DWORD PTR [R15+848]
            mov EDX,DWORD PTR [R15+856]
            lea EBX,DWORD PTR [RAX+32]
            add R13D,2
            mov R12D,EBX
            and EDX,ECX
            mov EAX,EDX
            sub EAX,R13D
            and EAX,ECX
            jmp .L_421b19
          .byte 0x66
          .byte 0x90
.L_421ac0:

            sub EBP,EDX
            cmp EBP,R12D
            cmovg EBP,R12D
.L_421ac9:

            mov RSI,QWORD PTR [R15+840]
            lea R13D,DWORD PTR [RBP+RDX*1]
            movsxd RDI,EDX
            movsxd R8,EAX
            lea R14D,DWORD PTR [RBP+RAX*1]
            add RDI,RSI
            add RSI,R8
            cmp R13D,EAX
            jl .L_421af4

            cmp EDX,R14D
            jle .L_421ce8
.L_421af4:

            movsxd RDX,EBP
            call memcpy@PLT

            mov ECX,DWORD PTR [R15+848]
.L_421b03:

            sub R12D,EBP
            mov EDX,R13D
            mov EAX,R14D
            and EDX,ECX
            and EAX,ECX
            test R12D,R12D
            jle .L_421c30
.L_421b19:

            cmp EDX,EAX
            lea EBP,DWORD PTR [RCX+1]
            jg .L_421ac0

            sub EBP,EAX
            cmp EBP,R12D
            cmovg EBP,R12D
            jmp .L_421ac9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421b30:

            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_422c78]
            mov ESI,4294967295
            xor EAX,EAX
            mov R14D,4294967271
            mov R15,QWORD PTR [RSP+40]
            mov RDI,R12
            call .L_43f5d0
.L_421b56:

            lea RDI,QWORD PTR [R15+920]
            lea RSI,QWORD PTR [RIP+.L_65b5c0]
            call QWORD PTR [RIP+.L_65ad50]

            jmp .L_421649
          .byte 0x90
.L_421b70:

            mov BYTE PTR [R15+914],1
            jmp .L_421952
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421b80:

            mov BYTE PTR [R15+912],1
            jmp .L_42169d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421b90:

            mov RSI,R12
            mov RDI,RBP
            call RBX

            test EAX,EAX
            js .L_422358

            mov ECX,DWORD PTR [R15+848]
            mov EDX,DWORD PTR [R15+856]
            lea EBX,DWORD PTR [RAX+4]
            mov R12D,EBX
            and EDX,ECX
            lea EAX,DWORD PTR [RDX-1]
            and EAX,ECX
            jmp .L_421c15
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421bc0:

            sub EBP,EDX
            cmp EBP,R12D
            cmovg EBP,R12D
.L_421bc9:

            mov RSI,QWORD PTR [R15+840]
            lea R13D,DWORD PTR [RBP+RDX*1]
            movsxd RDI,EDX
            movsxd R8,EAX
            lea R14D,DWORD PTR [RBP+RAX*1]
            add RDI,RSI
            add RSI,R8
            cmp R13D,EAX
            jl .L_421bf4

            cmp EDX,R14D
            jle .L_421cb0
.L_421bf4:

            movsxd RDX,EBP
            call memcpy@PLT

            mov ECX,DWORD PTR [R15+848]
.L_421c03:

            sub R12D,EBP
            mov EDX,R13D
            mov EAX,R14D
            and EDX,ECX
            and EAX,ECX
            test R12D,R12D
            jle .L_421c30
.L_421c15:

            cmp EDX,EAX
            lea EBP,DWORD PTR [RCX+1]
            jg .L_421bc0

            sub EBP,EAX
            cmp EBP,R12D
            cmovg EBP,R12D
            jmp .L_421bc9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421c30:

            movsxd RCX,EBX
            add QWORD PTR [R15+856],RCX
            add RCX,QWORD PTR [R15+176]
            mov QWORD PTR [R15+176],RCX
            jmp .L_42190d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421c50:

            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX+2472]
            mov RAX,QWORD PTR [RAX]
            cmp QWORD PTR [RAX+168],0
            jle .L_421ca6

            mov RDI,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [R15+20224]
            mov ESI,1
            lea RBX,QWORD PTR [R15+20208]
            call .L_4205b0

            test RAX,RAX
            mov QWORD PTR [R15+20232],RAX
            je .L_422676

            mov R14D,DWORD PTR [R15+20216]
            test R14D,R14D
            je .L_4223e4
.L_421ca6:

            xor R14D,R14D
            jmp .L_42185e
          .byte 0x66
          .byte 0x90
.L_421cb0:

            test EBP,EBP
            jle .L_421c03

            lea ECX,DWORD PTR [RBP-1]
            xor EAX,EAX
            add RCX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421cc8:

            movzx EDX,BYTE PTR [RSI+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            add RAX,1
            cmp RCX,RAX
            jne .L_421cc8

            mov ECX,DWORD PTR [R15+848]
            jmp .L_421c03
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421ce8:

            test EBP,EBP
            jle .L_421b03

            lea ECX,DWORD PTR [RBP-1]
            xor EAX,EAX
            add RCX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421d00:

            movzx EDX,BYTE PTR [RSI+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            add RAX,1
            cmp RCX,RAX
            jne .L_421d00

            mov ECX,DWORD PTR [R15+848]
            jmp .L_421b03
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421d20:

            mov EBX,DWORD PTR [R15+232]
            mov RAX,QWORD PTR [R15+184]
            mov QWORD PTR [RSP+48],R15
            mov QWORD PTR [RSP+64],RAX
            add RBX,RAX
            movabs RAX,9223372036854775807
            mov QWORD PTR [R15+904],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX+2472]
            mov R14,QWORD PTR [RAX]
            lea RAX,QWORD PTR [R14+20208]
            cmp QWORD PTR [R14+904],RBX
            mov RCX,QWORD PTR [R14+856]
            cmovle RBX,QWORD PTR [R14+904]
            mov QWORD PTR [RSP+56],RAX
            movzx EAX,BYTE PTR [R14+864]
            mov QWORD PTR [RSP+32],RBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_421d90:

            test AL,AL
            jne .L_421ee0
.L_421d98:

            lea RBP,QWORD PTR [R14+272]
.L_421d9f:

            cmp BYTE PTR [R14+915],0
            jne .L_421ef8

            cmp RCX,QWORD PTR [RSP+32]
            jge .L_421ef8

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,RBP
            call .L_420970

            test EAX,EAX
            js .L_42236e

            cmp EAX,255
            mov BYTE PTR [R14+864],0
            jle .L_421f50

            cmp EAX,256
            je .L_421f90

            cmp EAX,257
            je .L_421b30

            cmp EAX,258
            je .L_4220c8

            cmp EAX,262
            mov EBX,EAX
            jle .L_422250

            cmp EAX,270
            jg .L_4220f0

            lea EAX,DWORD PTR [RAX-263]
            lea RDX,QWORD PTR [RIP+.L_422eb8]
            cdqe 
            movzx EBP,BYTE PTR [RDX+RAX*1]
            lea RDX,QWORD PTR [RIP+.L_422eb0]
            movzx EBX,BYTE PTR [RDX+RAX*1]
            add EBP,1
            test BL,BL
            je .L_421e8d

            mov ECX,DWORD PTR [R14+20216]
            cmp ECX,EBX
            jge .L_421e6b

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [R14+20216]
            jne .L_421e6b

            cmp EBX,ECX
            jg .L_42241c
.L_421e6b:

            mov RAX,QWORD PTR [R14+20208]
            lea RDX,QWORD PTR [RIP+.L_422f00]
            sub ECX,EBX
            movsxd RBX,EBX
            mov DWORD PTR [R14+20216],ECX
            shr RAX,CL
            and EAX,DWORD PTR [RDX+RBX*4]
            add EBP,EAX
.L_421e8d:

            mov EAX,DWORD PTR [R14+884]
            mov RCX,QWORD PTR [R14+856]
            mov DWORD PTR [R14+888],EAX
            mov EAX,DWORD PTR [R14+880]
            mov DWORD PTR [R14+884],EAX
            mov EAX,DWORD PTR [R14+876]
            mov DWORD PTR [R14+876],EBP
            mov DWORD PTR [R14+880],EAX
            mov EAX,2
.L_421eca:

            mov DWORD PTR [R14+872],EBP
            mov DWORD PTR [R14+868],EAX
            mov BYTE PTR [R14+864],1
.L_421ee0:

            mov EAX,DWORD PTR [R14+868]
            mov RBP,RAX
            add RAX,RCX
            cmp RAX,QWORD PTR [RSP+32]
            jle .L_421fe0
.L_421ef8:

            mov R15,QWORD PTR [RSP+48]
.L_421efd:

            test RCX,RCX
            js .L_4226ab

            sub RCX,QWORD PTR [RSP+64]
            test RCX,RCX
            mov QWORD PTR [R15+176],RCX
            jne .L_42190d

            mov R15,QWORD PTR [RSP+40]
            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_422c98]
            nop
            nop
            nop
            nop
.L_421f30:

            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            mov R14D,4294967266
            jmp .L_421b56
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421f50:

            mov EBX,EAX
            mov RAX,QWORD PTR [R14+856]
            and EAX,DWORD PTR [R14+848]
            mov RDX,QWORD PTR [R14+840]
            cdqe 
            mov BYTE PTR [RDX+RAX*1],BL
            mov RAX,QWORD PTR [R14+856]
            lea RCX,QWORD PTR [RAX+1]
            movzx EAX,BYTE PTR [R14+864]
            mov QWORD PTR [R14+856],RCX
            jmp .L_421d90
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421f90:

            mov EAX,DWORD PTR [R14+20216]
            test EAX,EAX
            jle .L_4223f6
.L_421f9f:

            mov RDX,QWORD PTR [R14+20208]
            sub EAX,1
            mov DWORD PTR [R14+20216],EAX
            bt RDX,RAX
            jae .L_4225aa

            mov RDI,QWORD PTR [RSP+24]
            call .L_420b70

            test EAX,EAX
            jne .L_42236e

            movzx EAX,BYTE PTR [R14+864]
            mov RCX,QWORD PTR [R14+856]
            jmp .L_421d90
.L_421fe0:

            mov R10D,DWORD PTR [R14+848]
            mov EDX,R10D
            and EDX,ECX
            mov EAX,EDX
            sub EAX,DWORD PTR [R14+872]
            and EAX,R10D
            test EBP,EBP
            jle .L_4220a7

            mov R13D,EBP
            jmp .L_422059
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422008:

            sub EBX,EDX
            cmp EBX,R13D
            cmovg EBX,R13D
.L_422011:

            mov RSI,QWORD PTR [R14+840]
            lea R12D,DWORD PTR [RBX+RDX*1]
            movsxd RDI,EDX
            movsxd RCX,EAX
            lea R15D,DWORD PTR [RBX+RAX*1]
            add RDI,RSI
            add RSI,RCX
            cmp R12D,EAX
            jl .L_422036

            cmp R15D,EDX
            jge .L_422070
.L_422036:

            movsxd RDX,EBX
            call memcpy@PLT

            mov R10D,DWORD PTR [R14+848]
.L_422045:

            sub R13D,EBX
            mov EDX,R12D
            mov EAX,R15D
            and EDX,R10D
            and EAX,R10D
            test R13D,R13D
            jle .L_4220a0
.L_422059:

            cmp EAX,EDX
            lea EBX,DWORD PTR [R10+1]
            jl .L_422008

            sub EBX,EAX
            cmp EBX,R13D
            cmovg EBX,R13D
            jmp .L_422011
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_422070:

            test EBX,EBX
            jle .L_422045

            lea ECX,DWORD PTR [RBX-1]
            xor EAX,EAX
            add RCX,1
            nop
            nop
            nop
.L_422080:

            movzx EDX,BYTE PTR [RSI+RAX*1]
            mov BYTE PTR [RDI+RAX*1],DL
            add RAX,1
            cmp RCX,RAX
            jne .L_422080

            mov R10D,DWORD PTR [R14+848]
            jmp .L_422045
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4220a0:

            mov RCX,QWORD PTR [R14+856]
.L_4220a7:

            movsxd RBP,EBP
            mov BYTE PTR [R14+864],0
            add RCX,RBP
            mov QWORD PTR [R14+856],RCX
            jmp .L_421d98
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4220c8:

            mov EAX,DWORD PTR [R14+868]
            mov RCX,QWORD PTR [R14+856]
            test EAX,EAX
            je .L_421d9f

            mov EBP,DWORD PTR [R14+872]
            jmp .L_421eca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4220f0:

            cmp EAX,299
            jg .L_422588

            lea EAX,DWORD PTR [RAX-271]
            lea RCX,QWORD PTR [RIP+.L_422ee0]
            cdqe 
            movzx EBX,BYTE PTR [RCX+RAX*1]
            lea RCX,QWORD PTR [RIP+.L_422ec0]
            movzx EBP,BYTE PTR [RCX+RAX*1]
            add EBX,3
            test BPL,BPL
            je .L_422152

            mov ECX,DWORD PTR [R14+20216]
            cmp ECX,EBP
            jl .L_4224cc
.L_422130:

            mov RAX,QWORD PTR [R14+20208]
            lea RDX,QWORD PTR [RIP+.L_422f00]
            sub ECX,EBP
            movsxd RBP,EBP
            mov DWORD PTR [R14+20216],ECX
            shr RAX,CL
            and EAX,DWORD PTR [RDX+RBP*4]
            add EBX,EAX
.L_422152:

            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [R14+312]
            call .L_420970

            cmp EAX,60
            ja .L_422588

            lea RCX,QWORD PTR [RIP+.L_422dc0]
            movsxd RDX,EAX
            mov ECX,DWORD PTR [RCX+RDX*4]
            lea R8D,DWORD PTR [RCX+1]
            mov DWORD PTR [RSP+72],ECX
            lea RCX,QWORD PTR [RIP+.L_422d80]
            movzx EDX,BYTE PTR [RCX+RDX*1]
            mov EBP,R8D
            test DL,DL
            je .L_4221ff

            cmp EAX,9
            jle .L_422468

            cmp DL,4
            jbe .L_4221df

            mov EAX,DWORD PTR [R14+20216]
            lea EBP,DWORD PTR [RDX-4]
            cmp EAX,EBP
            jl .L_4225ec
.L_4221b3:

            mov RDX,QWORD PTR [R14+20208]
            sub EAX,EBP
            movsxd RBP,EBP
            mov ECX,EAX
            mov DWORD PTR [R14+20216],EAX
            shr RDX,CL
            lea RCX,QWORD PTR [RIP+.L_422f00]
            mov EDI,DWORD PTR [RCX+RBP*4]
            and EDI,EDX
            mov EBP,EDI
            shl EBP,4
            add EBP,R8D
.L_4221df:

            mov EAX,DWORD PTR [R14+896]
            test EAX,EAX
            je .L_422558

            add EBP,DWORD PTR [R14+892]
            sub EAX,1
            mov DWORD PTR [R14+896],EAX
.L_4221ff:

            cmp EBP,262143
            jle .L_422450

            add EBX,1
.L_42220e:

            add EBX,1
.L_422211:

            mov EAX,DWORD PTR [R14+884]
            mov RCX,QWORD PTR [R14+856]
            mov DWORD PTR [R14+888],EAX
            mov EAX,DWORD PTR [R14+880]
            mov DWORD PTR [R14+884],EAX
            mov EAX,DWORD PTR [R14+876]
            mov DWORD PTR [R14+876],EBP
            mov DWORD PTR [R14+880],EAX
            mov EAX,EBX
            jmp .L_421eca
.L_422250:

            mov R15,QWORD PTR [RSP+24]
            lea R13D,DWORD PTR [RAX-259]
            lea RSI,QWORD PTR [R14+392]
            movsxd RAX,R13D
            mov RDI,R15
            mov EBP,DWORD PTR [R14+RAX*4+876]
            call .L_420970

            cmp EAX,28
            ja .L_422588

            lea RCX,QWORD PTR [RIP+.L_422ee0]
            cdqe 
            movzx EDX,BYTE PTR [RCX+RAX*1]
            lea RCX,QWORD PTR [RIP+.L_422ec0]
            movzx R8D,BYTE PTR [RCX+RAX*1]
            add EDX,2
            test R8B,R8B
            je .L_422303

            mov ECX,DWORD PTR [R14+20216]
            cmp ECX,R8D
            jge .L_4222df

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,R15
            mov DWORD PTR [RSP+76],R8D
            mov DWORD PTR [RSP+72],EDX
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [R14+20216]
            mov EDX,DWORD PTR [RSP+72]
            mov R8D,DWORD PTR [RSP+76]
            jne .L_4222df

            cmp R8D,ECX
            jg .L_42241c
.L_4222df:

            mov RAX,QWORD PTR [R14+20208]
            lea RSI,QWORD PTR [RIP+.L_422f00]
            sub ECX,R8D
            movsxd R8,R8D
            mov DWORD PTR [R14+20216],ECX
            shr RAX,CL
            and EAX,DWORD PTR [RSI+R8*4]
            add EDX,EAX
.L_422303:

            test R13D,R13D
            je .L_422340

            sub EBX,260
            movsxd RCX,EBX
            mov EBX,EBX
            shl RCX,2
            lea RSI,QWORD PTR [R14+RCX*1-4]
            lea RAX,QWORD PTR [R14+RCX*1]
            lea RCX,QWORD PTR [RBX*4]
            sub RSI,RCX
.L_42232b:

            mov ECX,DWORD PTR [RAX+876]
            sub RAX,4
            mov DWORD PTR [RAX+884],ECX
            cmp RSI,RAX
            jne .L_42232b
.L_422340:

            mov DWORD PTR [R14+876],EBP
            mov EAX,EDX
            mov RCX,QWORD PTR [R14+856]
            jmp .L_421eca
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422358:

            mov R15,QWORD PTR [RSP+40]
            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_42295e]
            jmp .L_421f30
.L_42236e:

            mov R15,QWORD PTR [RSP+40]
            mov R14D,4294967266
            jmp .L_421b56
.L_42237e:

            mov R13,R15
            mov R12,QWORD PTR [RSP+24]
            mov R15,QWORD PTR [RSP+40]
            mov EAX,DWORD PTR [R13+212]
            test EAX,EAX
            jne .L_422500

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RAX],0
            mov RAX,QWORD PTR [R13+184]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [R13+240]
            cmp QWORD PTR [R13+8],RAX
            jne .L_42269f

            mov BYTE PTR [R13+237],1
            mov R14D,1
            jmp .L_421b56
.L_4223e4:

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,RBX
            call .L_420680

            jmp .L_42185e
.L_4223f6:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            call .L_420680

            test EAX,EAX
            mov EAX,DWORD PTR [R14+20216]
            jne .L_421f9f

            test EAX,EAX
            jg .L_421f9f
.L_42241c:

            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_4228f6]
            mov ESI,84
            xor EAX,EAX
            mov R15,QWORD PTR [RSP+40]
            mov RDI,R12
            call .L_43f5d0

            mov BYTE PTR [R14+208],0
            mov R14D,4294967266
            jmp .L_421b56
          .byte 0x90
.L_422450:

            cmp EBP,8191
            jle .L_422211

            jmp .L_42220e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422468:

            mov ECX,DWORD PTR [R14+20216]
            movzx EBP,DL
            cmp ECX,EBP
            jge .L_4224a2

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+72],R8D
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [R14+20216]
            mov R8D,DWORD PTR [RSP+72]
            jne .L_4224a2

            cmp EBP,ECX
            jg .L_42241c
.L_4224a2:

            lea RSI,QWORD PTR [RIP+.L_422f00]
            mov RAX,QWORD PTR [R14+20208]
            movsxd RDX,EBP
            sub ECX,EBP
            mov EBP,DWORD PTR [RSI+RDX*4]
            mov DWORD PTR [R14+20216],ECX
            shr RAX,CL
            and EBP,EAX
            add EBP,R8D
            jmp .L_4221ff
.L_4224cc:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            call .L_420680

            test EAX,EAX
            mov ECX,DWORD PTR [R14+20216]
            jne .L_422130

            cmp EBP,ECX
            jle .L_422130

            jmp .L_42241c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422500:

            mov RSI,QWORD PTR [R13+224]
            mov RCX,QWORD PTR [RSP]
            xor R14D,R14D
            mov RDI,QWORD PTR [RSP+16]
            mov QWORD PTR [RCX],RSI
            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [R13+192]
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RCX]
            add QWORD PTR [R13+192],RAX
            mov RDI,QWORD PTR [R13+240]
            mov RDX,QWORD PTR [RCX]
            call crc32@PLT

            mov DWORD PTR [R13+212],0
            mov QWORD PTR [R13+240],RAX
            jmp .L_421649
.L_422558:

            mov RDI,QWORD PTR [RSP+24]
            lea RSI,QWORD PTR [R14+352]
            call .L_420970

            test EAX,EAX
            js .L_42236e

            cmp EAX,16
            je .L_42262d

            add EBP,EAX
            mov DWORD PTR [R14+892],EAX
            jmp .L_4221ff
.L_422588:

            mov R15,QWORD PTR [RSP+40]
            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_4227be]
            jmp .L_421f30
.L_42259e:

            lea RDX,QWORD PTR [RIP+.L_42294f]
            jmp .L_4219d7
.L_4225aa:

            test EAX,EAX
            mov R15,QWORD PTR [RSP+48]
            mov BYTE PTR [R14+236],1
            jle .L_422649
.L_4225bf:

            mov EAX,DWORD PTR [R14+20216]
            lea ECX,DWORD PTR [RAX-1]
            mov RAX,RDX
            shr RAX,CL
            mov DWORD PTR [R14+20216],ECX
            mov RCX,QWORD PTR [R14+856]
            and EAX,1
            mov BYTE PTR [R14+912],AL
            jmp .L_421efd
.L_4225ec:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+72],R8D
            call .L_420680

            test EAX,EAX
            mov R8D,DWORD PTR [RSP+72]
            mov EAX,DWORD PTR [R14+20216]
            jne .L_4221b3

            cmp EBP,EAX
            jle .L_4221b3

            jmp .L_42241c
.L_422621:

            lea RDX,QWORD PTR [RIP+.L_4228f6]
            jmp .L_4219d7
.L_42262d:

            mov DWORD PTR [R14+896],15
            add EBP,DWORD PTR [R14+892]
            jmp .L_4221ff
.L_422644:

            call __stack_chk_fail@PLT
.L_422649:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+24]
            call .L_420680

            test EAX,EAX
            jne .L_42266a

            cmp DWORD PTR [R14+20216],0
            jle .L_42241c
.L_42266a:

            mov RDX,QWORD PTR [R14+20208]
            jmp .L_4225bf
.L_422676:

            mov R12,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_4228f6]
            mov ESI,84
            mov R15,QWORD PTR [RSP+40]
            mov R14D,4294967266
            mov RDI,R12
            call .L_43f5d0

            jmp .L_421b56
.L_42269f:

            lea RDX,QWORD PTR [RIP+.L_42294f]
            jmp .L_421f30
.L_4226ab:

            mov R15,QWORD PTR [RSP+40]
            mov R14D,ECX
            jmp .L_4219b3
.L_4226b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4226c0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_422cf0]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
.L_4226da:

            call .L_443f50

            cmp EAX,-30
            je .L_42277c

            mov ESI,1
            mov EDI,20248
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_422783

            mov DWORD PTR [RAX+20240],4294967295
            lea RAX,QWORD PTR [RIP+.L_41e5d0]
            lea R9,QWORD PTR [RIP+.L_41fd00]
            lea R8,QWORD PTR [RIP+.L_41ecd0]
            lea RCX,QWORD PTR [RIP+.L_41eb80]
            lea RDX,QWORD PTR [RIP+.L_422985]
            push RAX
.L_422731:

            lea RAX,QWORD PTR [RIP+.L_41e5c0]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_41eaf0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_420190]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_4204f0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_421590]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_42277c

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_42277c:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_422783:

            lea RDX,QWORD PTR [RIP+.L_42296d]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_42277c
.L_4227a0:
          .string "Huffman tree was not created."
.L_4227be:
          .string "Bad RAR file data"
.L_4227d0:
          .string "hdrcharset"
.L_4227db:
          .string "Prefix found"
.L_4227e8:
          .string "Invalid header size"
.L_4227fc:
          .string "Header CRC error"
.L_42280d:
          .string "Invalid sizes specified."
.L_422826:
          .string "Invalid filename size"
.L_42283c:
          .string "Couldn\'t allocate memory."
.L_422856:
          .string "Invalid filename"
.L_422867:
          .string "UTF-16BE"
.L_422870:
          .string "UTF-8"
.L_422876:
          .string "RAR"
.L_42287a:
          .string "Couldn\'t find out RAR header"
.L_422897:
          .string "Invalid marker header"
.L_4228ad:
          .string "Invalid header size too small"
.L_4228cb:
          .string "Bad RAR file"
.L_4228d8:
          .string "Error during seek of RAR file"
.L_4228f6:
          .string "Truncated RAR file data"
.L_42290e:
          .string "Invalid zero dictionary size"
.L_42292b:
          .string "Out of memory"
.L_422939:
          .string "Invalid PPMd sequence"
.L_42294f:
          .string "File CRC error"
.L_42295e:
          .string "Invalid symbol"
.L_42296d:
          .string "Can\'t allocate rar data"
.L_422985:
          .string "rar"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422990:
          .string "Invalid location to Huffman tree specified."
          .zero 4
.L_4229c0:
          .string "Unable to allocate memory for uncompressed data."
          .zero 7
.L_4229f8:
          .string "rar: hdrcharset option needs a character-set name"
          .zero 6
.L_422a30:
          .string "Unable to allocate memory for node data."
          .zero 7
.L_422a60:
          .string "RAR solid archive support unavailable."
          .zero 1
.L_422a88:
          .string "RAR encryption support unavailable."
          .zero 4
.L_422ab0:

            push RBP
            outsb DX,BYTE PTR [RSI]
            imul EBP,DWORD PTR [RSI+111],119
            outsb DX,BYTE PTR [RSI]
            and BYTE PTR [RSI+105],AH
            insb BYTE PTR [RDI],DX
            and BYTE PTR GS:[RCX+116],AH
            je .L_422b33
          .byte 0x69
          .byte 0x62
          .byte 0x75
          .byte 0x74
          .byte 0x65
          .byte 0x73
          .byte 0x20
          .byte 0x66
          .byte 0x72
          .byte 0x6f
          .byte 0x6d
          .byte 0x20
          .byte 0x52
          .byte 0x41
          .byte 0x52
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x27
          .byte 0x73
          .byte 0x20
          .byte 0x68
          .byte 0x6f
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x4f
          .byte 0x53
          .byte 0x0
.L_422ae0:
          .string "Can\'t allocate memory for Pathname"
          .zero 5
.L_422b08:
          .byte 0x50
          .byte 0x61
          .byte 0x74
          .byte 0x68
          .byte 0x6e
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x61
          .byte 0x6e
          .byte 0x6e
          .byte 0x6f
          .byte 0x74
          .byte 0x20
          .byte 0x62
          .byte 0x65
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x66
          .byte 0x72
          .byte 0x6f
          .byte 0x6d
          .byte 0x20
          .byte 0x25
          .byte 0x73
          .byte 0x20
          .byte 0x74
          .byte 0x6f
          .byte 0x20
          .byte 0x63
          .byte 0x75
          .byte 0x72
.L_422b33:

            jb .L_422b9a
          .byte 0x6e
          .byte 0x74
          .byte 0x20
          .byte 0x6c
          .byte 0x6f
          .byte 0x63
          .byte 0x61
          .byte 0x6c
          .byte 0x65
          .byte 0x2e
          .byte 0x0
.L_422b40:
          .string "Can\'t allocate memory for link"
          .zero 1
.L_422b60:
          .string "link cannot be converted from %s to current locale."
          .zero 4
.L_422b98:
          .byte 0x41
          .byte 0x74
.L_422b9a:

            je .L_422c01
          .byte 0x6d
          .byte 0x70
          .byte 0x74
          .byte 0x20
          .byte 0x74
          .byte 0x6f
          .byte 0x20
          .byte 0x73
          .byte 0x65
          .byte 0x65
          .byte 0x6b
          .byte 0x20
          .byte 0x70
          .byte 0x61
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x62
          .byte 0x65
          .byte 0x67
          .byte 0x69
          .byte 0x6e
          .byte 0x6e
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x52
          .byte 0x41
          .byte 0x52
          .byte 0x20
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x20
          .byte 0x62
          .byte 0x6c
          .byte 0x6f
          .byte 0x63
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422bd0:

            push RBX
            imul EBP,DWORD PTR GS:[RCX+110],103
            and BYTE PTR [RDI+102],CH
            and BYTE PTR [RBX+111],AH
            insd DWORD PTR [RDI],DX
            jo .L_422c52
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x52
          .byte 0x41
          .byte 0x52
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x73
          .byte 0x20
          .byte 0x69
          .byte 0x73
          .byte 0x20
          .byte 0x75
          .byte 0x6e
          .byte 0x73
          .byte 0x75
          .byte 0x70
          .byte 0x70
          .byte 0x6f
          .byte 0x72
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x0
          .byte 0x0
.L_422c00:
          .byte 0x49
.L_422c01:

            outsb DX,BYTE PTR [RSI]
          .byte 0x76
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x66
          .byte 0x69
          .byte 0x78
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x64
          .byte 0x65
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x20
          .byte 0x62
          .byte 0x69
          .byte 0x74
          .byte 0x73
          .byte 0x74
          .byte 0x72
          .byte 0x65
          .byte 0x61
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422c28:
          .string "Unable to initialize PPMd range decoder"
.L_422c50:

            outsb DX,BYTE PTR [RSI]
.L_422c52:

            je .L_422cb9
          .byte 0x72
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x72
          .byte 0x61
          .byte 0x63
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x52
          .byte 0x41
          .byte 0x52
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422c78:
          .string "Parsing filters is unsupported."
.L_422c98:
          .byte 0x49
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x72
          .byte 0x61
          .byte 0x63
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x52
          .byte 0x41
          .byte 0x52
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
.L_422cb9:

            add BYTE PTR GS:[RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_422cc0:
          .string "Unsupported compression method for RAR file."
          .zero 3
.L_422cf0:
          .string "archive_read_support_format_rar"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x61
          .byte 0x72
          .byte 0x21
          .byte 0x1a
          .byte 0x7
          .byte 0x0
          .byte 0x0
.L_422d28:
          .long .L_41fdd0-.L_422d28
          .long .L_41ff98-.L_422d28
          .long .L_420020-.L_422d28
          .long .L_41fec0-.L_422d28
          .long .L_41fec0-.L_422d28
          .long .L_41fec0-.L_422d28
          .long .L_41fec0-.L_422d28
          .long .L_41fec0-.L_422d28
          .long .L_420040-.L_422d28
          .long .L_41fec0-.L_422d28
.L_422d50:
          .long .L_421b80-.L_422d50
          .long .L_4218d8-.L_422d50
          .long .L_421b70-.L_422d50
          .long .L_421b30-.L_422d50
          .long .L_421a60-.L_422d50
          .long .L_421b90-.L_422d50
          .zero 24
.L_422d80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x5
          .byte 0x5
          .byte 0x6
          .byte 0x6
          .byte 0x7
          .byte 0x7
          .byte 0x8
          .byte 0x8
          .byte 0x9
          .byte 0x9
          .byte 0xa
          .byte 0xa
          .byte 0xb
          .byte 0xb
          .byte 0xc
          .byte 0xc
          .byte 0xd
          .byte 0xd
          .byte 0xe
          .byte 0xe
          .byte 0xf
          .byte 0xf
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x10
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422dc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
.L_422eb0:
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x6
          .byte 0x6
.L_422eb8:
          .byte 0x0
          .byte 0x4
          .byte 0x8
          .byte 0x10
          .byte 0x20
          .byte 0x40
          .byte 0x80
          .byte 0xc0
.L_422ec0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422ee0:
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0xa
          .byte 0xc
          .byte 0xe
          .byte 0x10
          .byte 0x14
          .byte 0x18
          .byte 0x1c
          .byte 0x20
          .byte 0x28
          .byte 0x30
          .byte 0x38
          .byte 0x40
          .byte 0x50
          .byte 0x60
          .byte 0x70
          .byte 0x80
          .byte 0xa0
          .byte 0xc0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422f00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x3
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x7
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xf
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_422f90:

            movzx EAX,BYTE PTR [RDI]
            mov R8,RDX
            mov R10D,1
            cmp AL,45
            jne .L_422faf

            movzx EAX,BYTE PTR [RDI+1]
            mov R10,-1
            add RDI,1
.L_422faf:

            sub EAX,48
            xor EDX,EDX
            movabs R9,922337203685477580
            cmp AL,9
            ja .L_422ff6

            nop
            nop
            nop
            nop
            nop
            nop
.L_422fc8:

            lea RCX,QWORD PTR [RDX+RDX*4]
            movzx EAX,AL
            add RDI,1
            lea RDX,QWORD PTR [RAX+RCX*2]
            movzx EAX,BYTE PTR [RDI]
            sub EAX,48
            cmp AL,9
            ja .L_423058

            cmp RDX,R9
            jg .L_422fec

            jne .L_422fc8

            cmp AL,7
            jbe .L_422fc8
.L_422fec:

            mov RDX,R10
            shl RDX,63
            sub RDX,R10
.L_422ff6:

            mov QWORD PTR [RSI],RDX
            mov QWORD PTR [R8],0
            cmp BYTE PTR [RDI],46
            je .L_423010
.L_423005:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423010:

            lea R9,QWORD PTR [RDI+9]
            mov EDX,100000000
            movabs RSI,-3689348814741910323
            nop
            nop
            nop
            nop
            nop
.L_423028:

            add RDI,1
            movsx ECX,BYTE PTR [RDI]
            lea EAX,DWORD PTR [RCX-48]
            cmp AL,9
            ja .L_423005

            sub ECX,48
            mov RAX,RDX
            movsxd RCX,ECX
            imul RCX,RDX
            mul RSI
            add QWORD PTR [R8],RCX
            shr RDX,3
            cmp RDI,R9
            jne .L_423028

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423058:

            imul RDX,R10
            mov QWORD PTR [RSI],RDX
            mov QWORD PTR [R8],0
            cmp BYTE PTR [RDI],46
            jne .L_423005

            jmp .L_423010
.L_42306d:

            nop
            nop
            nop
.L_423070:

            test RSI,RSI
            je .L_423138

            movsx ECX,BYTE PTR [RDI]
            mov R10D,EDX
            cmp CL,9
            je .L_423090

            cmp CL,32
            jne .L_4230ab

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423090:

            add RDI,1
            sub RSI,1
            je .L_423138

            movsx ECX,BYTE PTR [RDI]
            cmp CL,32
            je .L_423090

            cmp CL,9
            je .L_423090
.L_4230ab:

            cmp CL,45
            push R12
.L_4230b0:

            movsxd R11,R10D
            push RBP
            push RBX
.L_4230b5:

            je .L_423150

            movabs R8,9223372036854775807
            mov EBX,1
            mov RAX,R8
            cqo 
            idiv R11
            mov R9,RAX
            mov RAX,R8
.L_4230d8:

            sub ECX,48
            js .L_42313b

            xor R8D,R8D
            cmp R10D,ECX
            jg .L_42311f

            jmp .L_42313b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4230f0:

            imul R8,R11
            add RDI,1
            add R8,RCX
            movsx ECX,BYTE PTR [RDI]
            sub ECX,48
            mov EBP,ECX
            not EBP
            shr EBP,31
            sub RSI,1
            setne R12B
            test R12B,BPL
            je .L_423140

            cmp R10D,ECX
            jle .L_423140

            cmp R8,R9
            jg .L_42312c
.L_42311f:

            cmp R8,R9
            movsxd RCX,ECX
            jne .L_4230f0

            cmp RCX,RDX
            jle .L_4230f0
.L_42312c:

            pop RBX
.L_42312d:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423138:

            xor EAX,EAX
            ret 
.L_42313b:

            xor R8D,R8D
            nop
            nop
.L_423140:

            cmp EBX,-1
            jne .L_42318b
.L_423145:

            mov RAX,R8
            pop RBX
            neg RAX
            pop RBP
            pop R12
            ret 
.L_423150:

            movabs R8,-9223372036854775808
            lea RBX,QWORD PTR [RDI+1]
            mov RAX,R8
            cqo 
            idiv R11
            neg RAX
            sub RSI,1
            mov R9,RAX
            je .L_423186

            movsx ECX,BYTE PTR [RDI+1]
            mov RAX,R8
            mov RDI,RBX
            mov EBX,4294967295
            jmp .L_4230d8
.L_423186:

            xor R8D,R8D
            jmp .L_423145
.L_42318b:

            mov RAX,R8
            jmp .L_42312c
.L_423190:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_423199:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RDI,QWORD PTR [RBX+320]
            test RDI,RDI
            je .L_4231cb

            nop
.L_4231b0:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RBX+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [RBX+320]
            test RDI,RDI
            jne .L_4231b0
.L_4231cb:

            mov RDI,RBX
            mov QWORD PTR [RBX+328],0
            call .L_434290

            lea RDI,QWORD PTR [RBX+24]
            call .L_434290

            lea RDI,QWORD PTR [RBX+48]
            call .L_434290

            lea RDI,QWORD PTR [RBX+72]
            call .L_434290

            lea RDI,QWORD PTR [RBX+96]
            call .L_434290

            lea RDI,QWORD PTR [RBX+120]
            call .L_434290

            lea RDI,QWORD PTR [RBX+240]
            call .L_434290

            lea RDI,QWORD PTR [RBX+216]
            call .L_434290

            lea RDI,QWORD PTR [RBX+192]
            call .L_434290

            lea RDI,QWORD PTR [RBX+168]
            call .L_434290

            lea RDI,QWORD PTR [RBX+144]
            call .L_434290

            lea RDI,QWORD PTR [RBX+368]
            call .L_434290

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_42326d:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_423272:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423280:

            push RBX
.L_423281:

            mov RAX,QWORD PTR [RDI+2472]
            xor ESI,ESI
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX+320]
            test RAX,RAX
            je .L_4232cd

            movabs R8,9223372036854775807
            nop
            nop
            nop
            nop
            nop
.L_4232a8:

            mov EDX,DWORD PTR [RAX+24]
            test EDX,EDX
            jne .L_4232c5

            mov RDX,QWORD PTR [RAX+16]
            mov RCX,R8
            sub RCX,RSI
            cmp RDX,RCX
            jge .L_423358

            add RSI,RDX
.L_4232c5:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_4232a8
.L_4232cd:

            cmp QWORD PTR [RBX+272],RSI
            mov RAX,QWORD PTR [RBX+296]
            cmovle RSI,QWORD PTR [RBX+272]
            add RAX,QWORD PTR [RBX+288]
            add RSI,RAX
            call .L_404a30

            test RAX,RAX
            js .L_423358

            mov RDI,QWORD PTR [RBX+320]
            mov QWORD PTR [RBX+272],0
            mov QWORD PTR [RBX+296],0
            mov QWORD PTR [RBX+288],0
            test RDI,RDI
            je .L_423343

            nop
            nop
            nop
            nop
.L_423328:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RBX+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [RBX+320]
            test RDI,RDI
            jne .L_423328
.L_423343:

            mov QWORD PTR [RBX+328],0
            xor EAX,EAX
            pop RBX
.L_423351:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423358:

            mov EAX,4294967266
            pop RBX
            ret 
.L_42335f:

            nop
.L_423360:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            mov R12,RDX
            sub RSP,24
.L_42337a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R14,RSP
            mov R15,QWORD PTR [RAX]
            mov RDI,QWORD PTR [R15+320]
            nop
            nop
.L_4233a0:

            test RDI,RDI
            je .L_423480

            cmp QWORD PTR [RDI+16],0
            je .L_4234f8

            mov RSI,QWORD PTR [R15+296]
            test RSI,RSI
            jne .L_42348c
.L_4233c4:

            cmp QWORD PTR [R15+272],0
            je .L_4234b0

            mov RDX,R14
            mov ESI,1
            mov RDI,RBX
            call .L_4049e0

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],RAX
            test RDX,RDX
            js .L_42352c

            test RAX,RAX
            je .L_423518

            mov RAX,QWORD PTR [R15+272]
            cmp RDX,RAX
            jle .L_42340f

            mov QWORD PTR [RSP],RAX
            mov RDX,RAX
.L_42340f:

            mov RDI,QWORD PTR [R15+320]
            mov RAX,QWORD PTR [RDI+16]
            cmp RAX,RDX
            jge .L_423426

            mov QWORD PTR [RSP],RAX
            mov RDX,RAX
.L_423426:

            mov QWORD PTR [R12],RDX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [R13],RAX
            mov EAX,DWORD PTR [RDI+24]
            sub QWORD PTR [RDI+16],RDX
            add QWORD PTR [RDI+8],RDX
            mov QWORD PTR [R15+296],RDX
            sub QWORD PTR [R15+272],RDX
            test EAX,EAX
            jne .L_4233a0

            nop
            nop
            nop
            nop
            nop
.L_423458:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_423536

            add RSP,24
.L_423470:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423480:

            mov RSI,QWORD PTR [R15+296]
            test RSI,RSI
            je .L_4234b0
.L_42348c:

            mov RDI,RBX
            call .L_404a30

            cmp QWORD PTR [R15+320],0
            mov QWORD PTR [R15+296],0
            jne .L_4233c4

            nop
            nop
            nop
.L_4234b0:

            mov RSI,QWORD PTR [R15+288]
            mov RDI,RBX
            call .L_404a30

            test RAX,RAX
            js .L_42352c

            mov QWORD PTR [R15+288],0
            mov QWORD PTR [RBP],0
            mov QWORD PTR [R12],0
            mov RAX,QWORD PTR [R15+304]
            mov QWORD PTR [R13],RAX
            mov EAX,1
            jmp .L_423458
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4234f8:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [R15+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [R15+320]
            jmp .L_4233a0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423518:

            lea RDX,QWORD PTR [RIP+.L_427012]
            mov ESI,4294967295
            mov RDI,RBX
            call .L_43f5d0
.L_42352c:

            mov EAX,4294967266
            jmp .L_423458
.L_423536:

            call __stack_chk_fail@PLT
.L_42353b:

            nop
            nop
            nop
            nop
            nop
.L_423540:

            push RBP
            push RBX
            mov R8,RDI
            mov RAX,RSI
            sub RSP,8
.L_42354c:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_427028]
            mov RBP,QWORD PTR [RCX]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_423598

            xor EAX,EAX
            test RDX,RDX
            je .L_423580

            xor EAX,EAX
            cmp BYTE PTR [RDX],0
            setne AL
.L_423580:

            mov DWORD PTR [RBP+428],EAX
            mov DWORD PTR [RBP+424],EAX
.L_42358c:

            add RSP,8
.L_423590:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423598:

            lea RDI,QWORD PTR [RIP+.L_427032]
            mov ECX,11
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_4235f0

            test RDX,RDX
            mov RSI,RDX
            mov RDI,R8
            je .L_423670

            cmp BYTE PTR [RDX],0
            je .L_423670

            xor EDX,EDX
            call .L_437870

            mov QWORD PTR [RBP+392],RAX
            test RAX,RAX
            mov EAX,4294967266
            cmove EBX,EAX
            add RSP,8
.L_4235eb:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_4235f0:

            lea RDI,QWORD PTR [RIP+.L_42703d]
            mov ECX,8
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_423650

            lea RDI,QWORD PTR [RIP+.L_427045]
            mov ECX,27
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_42368d

            xor EAX,EAX
            test RDX,RDX
            je .L_42363b

            xor EAX,EAX
            cmp BYTE PTR [RDX],0
            setne AL
.L_42363b:

            mov DWORD PTR [RBP+436],EAX
            add RSP,8
.L_423645:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423650:

            xor EAX,EAX
            test RDX,RDX
            je .L_42365f

            xor EAX,EAX
            cmp BYTE PTR [RDX],0
            setne AL
.L_42365f:

            mov DWORD PTR [RBP+432],EAX
            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_423670:

            lea RDX,QWORD PTR [RIP+.L_427460]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_43f5d0

            jmp .L_42358c
.L_42368d:

            mov EBX,4294967276
            jmp .L_42358c
.L_423697:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4236a0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            sub RSP,72
.L_4236b1:

            mov R12,QWORD PTR [RDX]
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+40],RDX
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+16],RAX
            jmp .L_423768
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4236e8:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_4049e0

            mov R14,QWORD PTR [RSP+48]
            mov RBX,RAX
            test R14,R14
            jle .L_4238f8

            mov RDX,R14
            mov ESI,10
            mov RDI,RAX
            call memchr@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_4237a0

            lea RBP,QWORD PTR [RAX+1]
            sub RBP,RBX
            cmp R12,RBP
            mov QWORD PTR [RSP+48],RBP
            jl .L_4238b0

            mov QWORD PTR [R13],RBP
.L_42373d:

            test RBP,RBP
            jle .L_4238f8

            mov RAX,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RAX]
            mov R12,RDX
            mov QWORD PTR [RSP+8],RDX
            sub R12,RBP
            mov QWORD PTR [RAX],R12
            movsx EDX,BYTE PTR [RBX]
            cmp DL,35
            jne .L_423930
.L_423768:

            mov RSI,QWORD PTR [R13]
            cmp R12,100
            mov EAX,100
            cmovg R12,RAX
            test RSI,RSI
            je .L_4236e8

            mov RDI,QWORD PTR [RSP]
            call .L_404a30

            mov QWORD PTR [R13],0
            jmp .L_4236e8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4237a0:

            cmp R12,R14
            mov QWORD PTR [R13],R14
            jl .L_4238b0

            mov RAX,QWORD PTR [RSP+24]
            xor EBP,EBP
            add RAX,240
            mov QWORD PTR [RSP+32],RAX
            jmp .L_42383a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4237c8:

            mov R14,QWORD PTR [RSP+48]
            add R14,RBP
            test R15,R15
            mov RBP,R14
            jne .L_42389e
.L_4237dc:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_4049e0

            mov RCX,QWORD PTR [RSP+48]
            mov RBX,RAX
            test RCX,RCX
            jle .L_4238f8

            mov RDX,RCX
            mov ESI,10
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RCX
            call memchr@PLT

            test RAX,RAX
            mov R15,RAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_42382e

            lea RCX,QWORD PTR [RAX+1]
            sub RCX,RBX
            mov QWORD PTR [RSP+48],RCX
.L_42382e:

            add R14,RCX
            mov QWORD PTR [R13],RCX
            cmp R12,R14
            jl .L_4238b0
.L_42383a:

            mov RDI,QWORD PTR [RSP+32]
            mov RSI,R14
            call .L_4342f0

            test RAX,RAX
            je .L_423908

            mov RAX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+48]
            mov RSI,RBX
            mov RDI,QWORD PTR [RAX+240]
            add RDI,RBP
            call memcpy@PLT

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            je .L_4237c8

            mov RDI,QWORD PTR [RSP]
            call .L_404a30

            mov R14,QWORD PTR [RSP+48]
            mov QWORD PTR [R13],0
            add R14,RBP
            test R15,R15
            mov RBP,R14
            je .L_4237dc
.L_42389e:

            mov RAX,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RAX+240]
            jmp .L_42373d
          .byte 0x90
.L_4238b0:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_427060]
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            mov RAX,-30
.L_4238ce:

            mov RBX,QWORD PTR [RSP+56]
            xor RBX,QWORD PTR FS:[40]
            jne .L_42399f

            add RSP,72
.L_4238e6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4238f8:

            mov RAX,-30
            jmp .L_4238ce
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423908:

            mov RDI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_42706e]
            mov ESI,12
            call .L_43f5d0

            mov RAX,-30
            jmp .L_4238ce
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423930:

            lea RCX,QWORD PTR [RBX+1]
            xor EAX,EAX
            add RBX,RBP
            movabs RDI,922337203685477580
            movabs R8,9223372036854775807
            jmp .L_423974
          .byte 0x90
.L_423950:

            sub EDX,48
            cmp EDX,7
            jle .L_42395d

            cmp RAX,RDI
            je .L_42398b
.L_42395d:

            lea RAX,QWORD PTR [RAX+RAX*4]
            movsxd RDX,EDX
            cmp RBX,RCX
            lea RAX,QWORD PTR [RDX+RAX*2]
            je .L_423993
.L_42396d:

            movsx EDX,BYTE PTR [RCX]
            add RCX,1
.L_423974:

            cmp DL,10
            je .L_4238ce

            lea ESI,DWORD PTR [RDX-48]
            cmp SIL,9
            ja .L_423993

            cmp RAX,RDI
            jle .L_423950
.L_42398b:

            cmp RBX,RCX
            mov RAX,R8
            jne .L_42396d
.L_423993:

            mov RAX,-20
            jmp .L_4238ce
.L_42399f:

            call __stack_chk_fail@PLT
.L_4239a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4239b0:

            movzx EDX,BYTE PTR [RDI]
            cmp DL,128
            sete CL
            cmp DL,255
            sete AL
            or CL,AL
            jne .L_4239c9

            xor EAX,EAX
            test DL,DL
            jne .L_4239d4
.L_4239c9:

            mov EAX,1
            ret 
          .byte 0x90
.L_4239d0:

            movzx EDX,BYTE PTR [RDI+RAX*1]
.L_4239d4:

            cmp DL,32
            jne .L_4239f0

            add RAX,1
            cmp RSI,RAX
            jne .L_4239d0

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4239f0:

            cmp RSI,RAX
            jbe .L_4239c9

            lea ECX,DWORD PTR [RDX-48]
            cmp CL,7
            ja .L_423a15

            nop
            nop
            nop
.L_423a00:

            add RAX,1
            cmp RSI,RAX
            je .L_4239c9

            movzx EDX,BYTE PTR [RDI+RAX*1]
            lea ECX,DWORD PTR [RDX-48]
            cmp CL,7
            jbe .L_423a00
.L_423a15:

            and EDX,223
            jne .L_423a2f

            nop
            nop
            nop
.L_423a20:

            add RAX,1
            cmp RSI,RAX
            jbe .L_4239c9

            test BYTE PTR [RDI+RAX*1],223
            je .L_423a20
.L_423a2f:

            xor EAX,EAX
            ret 
.L_423a32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423a40:

            movzx EDX,BYTE PTR [RDI]
            test DL,DL
            js .L_423a58

            mov EDX,8
            jmp .L_423070
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423a58:

            test DL,64
            mov ECX,EDX
            jne .L_423ad0

            and ECX,127
            xor EAX,EAX
            cmp RSI,8
            mov EDX,ECX
            je .L_423a9f

            sub RSI,1
            test CL,CL
            jne .L_423b1f

            xor EAX,EAX
.L_423a7a:

            lea RSI,QWORD PTR [RDI+RSI*1-7]
            jmp .L_423a8c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423a88:

            cmp DL,CL
            jne .L_423af8
.L_423a8c:

            add RDI,1
            movzx EDX,BYTE PTR [RDI]
            cmp RDI,RSI
            jne .L_423a88

            mov ESI,EDX
            xor SIL,CL
            js .L_423af8
.L_423a9f:

            lea RSI,QWORD PTR [RDI+7]
            nop
            nop
            nop
            nop
            nop
.L_423aa8:

            shl RAX,8
            add RDI,1
            mov RCX,RAX
            movzx EAX,DL
            movzx EDX,BYTE PTR [RDI]
            or RAX,RCX
            cmp RDI,RSI
            jne .L_423aa8

            shl RAX,8
            mov RCX,RAX
            movzx EAX,DL
            or RAX,RCX
            ret 
          .byte 0x90
.L_423ad0:

            cmp RSI,8
            je .L_423b13

            sub RSI,1
            cmp DL,255
            mov RAX,-1
            je .L_423a7a

            movabs RAX,-9223372036854775808
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423af8:

            test CL,CL
            movabs RDX,-9223372036854775808
            movabs RAX,9223372036854775807
            cmovne RAX,RDX
            ret 
.L_423b13:

            mov RAX,-1
            jmp .L_423a9f
.L_423b1f:

            movabs RAX,9223372036854775807
            ret 
.L_423b2a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_423b30:

            push R12
            mov R12,RDI
            lea RDI,QWORD PTR [RDI+148]
            push RBP
            push RBX
.L_423b3e:

            lea RBX,QWORD PTR [R12+156]
            mov RAX,RDI
            mov RBP,R12
            nop
            nop
            nop
            nop
.L_423b50:

            movzx EDX,BYTE PTR [RAX]
            test DL,223
            je .L_423b64

            sub EDX,48
            cmp DL,7
            ja .L_423c0c
.L_423b64:

            add RAX,1
            cmp RBX,RAX
            jne .L_423b50

            mov ESI,8
            call .L_423a40

            mov R10,RAX
            lea RAX,QWORD PTR [R12+148]
            mov RCX,R12
            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423b90:

            movzx EDX,BYTE PTR [RCX]
            add RCX,1
            add ESI,EDX
            cmp RAX,RCX
            jne .L_423b90

            lea R9,QWORD PTR [R12+512]
            add ESI,256
            mov R8,RBX
            mov RDX,RBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_423bb8:

            movzx EDI,BYTE PTR [RDX]
            add RDX,1
            add ESI,EDI
            cmp R9,RDX
            jne .L_423bb8

            cmp R10D,ESI
            mov EAX,1
            je .L_423c07

            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
.L_423bd8:

            movsx EDI,BYTE PTR [RBP]
            add RBP,1
            add ESI,EDI
            cmp RCX,RBP
            jne .L_423bd8

            lea ECX,DWORD PTR [RSI+256]
            nop
            nop
            nop
.L_423bf0:

            movsx ESI,BYTE PTR [R8]
            add R8,1
            add ECX,ESI
            cmp RDX,R8
            jne .L_423bf0

            xor EAX,EAX
            cmp R10D,ECX
            sete AL
.L_423c07:

            pop RBX
.L_423c08:

            pop RBP
            pop R12
            ret 
.L_423c0c:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_423c13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423c20:

            push RBX
.L_423c21:

            xor EDX,EDX
            mov ESI,512
            call .L_4049e0

            test RAX,RAX
            je .L_423db7

            cmp BYTE PTR [RAX],0
            mov RBX,RAX
            jne .L_423c63

            lea RAX,QWORD PTR [RAX+1]
            lea RDX,QWORD PTR [RBX+512]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423c50:

            cmp RDX,RAX
            je .L_423db0

            add RAX,1
            cmp BYTE PTR [RAX-1],0
            je .L_423c50
.L_423c63:

            mov RDI,RBX
            call .L_423b30

            test EAX,EAX
            je .L_423d51

            cmp DWORD PTR [RBX+257],1635021685
            lea RAX,QWORD PTR [RBX+257]
            je .L_423d80
.L_423c8a:

            mov R8D,48
.L_423c90:

            cmp DWORD PTR [RBX+257],1635021685
            je .L_423d58
.L_423ca0:

            movzx EAX,BYTE PTR [RBX+156]
            lea EDX,DWORD PTR [RAX-48]
            cmp DL,9
            jbe .L_423cc4

            test AL,AL
            je .L_423cc4

            and EAX,4294967263
            lea EDX,DWORD PTR [RAX-65]
            xor EAX,EAX
            cmp DL,25
            ja .L_423d51
.L_423cc4:

            lea RDI,QWORD PTR [RBX+100]
            mov ESI,8
            call .L_4239b0

            test EAX,EAX
            je .L_423d51

            lea RDI,QWORD PTR [RBX+108]
            mov ESI,8
            call .L_4239b0

            test EAX,EAX
            je .L_423d51

            lea RDI,QWORD PTR [RBX+116]
            mov ESI,8
            call .L_4239b0

            test EAX,EAX
            je .L_423d51

            lea RDI,QWORD PTR [RBX+136]
            mov ESI,12
            call .L_4239b0

            test EAX,EAX
            je .L_423d51

            lea RDI,QWORD PTR [RBX+124]
            mov ESI,12
            call .L_4239b0

            test EAX,EAX
            je .L_423d51

            lea RDI,QWORD PTR [RBX+329]
            mov ESI,8
            call .L_4239b0

            test EAX,EAX
            je .L_423d51

            lea RDI,QWORD PTR [RBX+337]
            mov ESI,8
            call .L_4239b0

            add R8D,2
            test EAX,EAX
            cmovne EAX,R8D
.L_423d51:

            pop RBX
.L_423d52:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423d58:

            cmp WORD PTR [RAX+4],8306
            jne .L_423ca0

            cmp WORD PTR [RBX+263],32
            jne .L_423ca0

            add R8D,56
            jmp .L_423ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423d80:

            cmp WORD PTR [RAX+4],114
            jne .L_423c8a

            cmp WORD PTR [RBX+263],12336
            mov R8D,48
            mov EDX,104
            cmove R8D,EDX
            jmp .L_423c90
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423db0:

            mov EAX,10
            pop RBX
.L_423db6:

            ret 
.L_423db7:

            mov EAX,4294967295
            pop RBX
            ret 
.L_423dbe:

            nop
            nop
.L_423dc0:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov R13,RSI
            push RBX
.L_423dce:

            mov ESI,32
            mov EDI,1
            mov RBX,RDX
            mov R12,RCX
            mov RBP,R8
            call calloc@PLT

            test RAX,RAX
            je .L_423e43

            mov RDX,QWORD PTR [RBX]
            test RDX,RDX
            je .L_423e20

            mov QWORD PTR [RDX],RAX
.L_423df6:

            test RBP,RBP
            mov QWORD PTR [RBX],RAX
            js .L_423e26

            test R12,R12
            js .L_423e26

            mov QWORD PTR [RAX+8],R12
            mov QWORD PTR [RAX+16],RBP
            xor EAX,EAX
.L_423e0d:

            pop RBX
.L_423e0e:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423e20:

            mov QWORD PTR [R13],RAX
            jmp .L_423df6
.L_423e26:

            lea RDX,QWORD PTR [RIP+.L_4270a1]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_423e0d
.L_423e43:

            lea RDX,QWORD PTR [RIP+.L_427093]
            mov ESI,12
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_423e0d
.L_423e5e:

            nop
            nop
.L_423e60:

            lea EAX,DWORD PTR [RCX-1]
            push R15
            push R14
            push R13
            push R12
            lea R12,QWORD PTR [RSI+328]
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            push RBP
            push RBX
            mov R13,RDI
            mov RBP,RSI
            mov RBX,RDX
            lea R14,QWORD PTR [RDX+RAX*8]
            sub RSP,8
.L_423e8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_423e90:

            cmp BYTE PTR [RBX],0
            je .L_423ed8

            lea RDI,QWORD PTR [RBX+12]
            mov ESI,12
            call .L_423a40

            mov ESI,12
            mov RDI,RBX
            mov R15,RAX
            call .L_423a40

            lea RSI,QWORD PTR [RBP+320]
            mov R8,R15
            mov RCX,RAX
            mov RDX,R12
            mov RDI,R13
            call .L_423dc0

            test EAX,EAX
            jne .L_423ef0

            add RBX,24
            cmp RBX,R14
            jne .L_423e90
.L_423ed8:

            add RSP,8
.L_423edc:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423ef0:

            add RSP,8
            mov EAX,4294967266
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_423f04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423f10:

            push R15
            push R14
            mov R9,RDX
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            mov R15,RCX
            mov EBX,R8D
            sub RSP,24
.L_423f2d:

            cmp R8D,512
            je .L_424020

            cmp R8D,15360
            je .L_423fd8

            cmp R8D,256
            je .L_423f80

            lea RDX,QWORD PTR [RIP+.L_4270ef]
            mov ECX,R8D
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967266
            call .L_43f5d0
.L_423f6b:

            add RSP,24
.L_423f6f:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423f80:

            lea R14,QWORD PTR [RIP+.L_4270bb]
.L_423f87:

            mov RBP,QWORD PTR [R12]
            test RBP,RBP
            je .L_423fe8
.L_423f90:

            mov RDI,R9
            call .L_446cf0

            mov EDX,EBX
            mov RCX,RBP
            mov RSI,R15
            mov RDI,RAX
            call .L_442b10

            test EAX,EAX
            mov EBX,EAX
            je .L_423f6b

            cmp EAX,-30
            mov R8,R14
            je .L_42402c

            lea RCX,QWORD PTR [RIP+.L_42712b]
            lea RDX,QWORD PTR [RIP+.L_427125]
            mov ESI,4294967295
            mov RDI,R13
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_423f6b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423fd8:

            mov RBP,QWORD PTR [R12]
            lea R14,QWORD PTR [RIP+.L_4270e0]
            test RBP,RBP
            jne .L_423f90
.L_423fe8:

            lea RSI,QWORD PTR [RIP+.L_427104]
            mov EDX,1
            mov RDI,R13
            mov QWORD PTR [RSP+8],R9
            call .L_437870

            test RAX,RAX
            mov RBP,RAX
            mov QWORD PTR [R12],RAX
            mov R9,QWORD PTR [RSP+8]
            jne .L_423f90

            mov EBX,4294967266
            jmp .L_423f6b
.L_424020:

            lea R14,QWORD PTR [RIP+.L_4270cd]
            jmp .L_423f87
.L_42402c:

            lea RCX,QWORD PTR [RIP+.L_42710a]
            lea RDX,QWORD PTR [RIP+.L_427125]
            mov ESI,12
            mov RDI,R13
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_423f6b
.L_42404e:

            nop
            nop
.L_424050:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            lea RDI,QWORD PTR [RDX+124]
            mov RBP,RSI
            mov ESI,12
            mov R12,RCX
            sub RSP,8
.L_42406c:

            call .L_423a40

            cmp RAX,1048576
            ja .L_4240f8

            lea RSI,QWORD PTR [RAX+1]
            mov RDI,RBP
            mov RBX,RAX
            call .L_4342f0

            test RAX,RAX
            je .L_424127

            mov RSI,QWORD PTR [R12]
            test RSI,RSI
            jne .L_4240e8
.L_42409a:

            lea RSI,QWORD PTR [RBX+511]
            xor EDX,EDX
            mov RDI,R13
            and RSI,-512
            mov QWORD PTR [R12],RSI
            call .L_4049e0

            test RAX,RAX
            je .L_424118

            mov RDI,QWORD PTR [RBP]
            mov RDX,RBX
            mov RSI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP]
            mov BYTE PTR [RAX+RBX*1],0
            mov QWORD PTR [RBP+8],RBX
            xor EAX,EAX
.L_4240d8:

            add RSP,8
.L_4240dc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4240e8:

            mov RDI,R13
            call .L_404a30

            jmp .L_42409a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4240f8:

            lea RDX,QWORD PTR [RIP+.L_427139]
            xor EAX,EAX
            mov ESI,22
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4240d8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424118:

            mov QWORD PTR [R12],0
            mov EAX,4294967266
            jmp .L_4240d8
.L_424127:

            lea RDX,QWORD PTR [RIP+.L_427152]
            mov ESI,12
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4240d8
.L_424142:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424150:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_424198

            mov RDI,R12
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_427498]
            mov R8,RAX
            mov RCX,RBP
            mov RDI,RBX
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            pop RBX
            mov EAX,4294967276
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424198:

            lea RDX,QWORD PTR [RIP+.L_42715c]
            mov RCX,RBP
            mov RDI,RBX
            xor EAX,EAX
            mov ESI,12
            call .L_43f5d0

            pop RBX
            mov EAX,4294967266
            pop RBP
            pop R12
            ret 
.L_4241bb:

            nop
            nop
            nop
            nop
            nop
.L_4241c0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            mov RBP,RDX
            mov RBX,RCX
            sub RSP,8
.L_4241d6:

            cmp BYTE PTR [RCX+157],0
            mov QWORD PTR [RSI+80],0
            jne .L_4242f0
.L_4241eb:

            lea RDI,QWORD PTR [RBX+100]
            mov ESI,8
            call .L_423a40

            mov RDI,RBP
            mov ESI,EAX
            call .L_446590

            lea RDI,QWORD PTR [RBX+108]
            mov ESI,8
            call .L_423a40

            mov RDI,RBP
            mov RSI,RAX
            call .L_446950

            lea RDI,QWORD PTR [RBX+116]
            mov ESI,8
            call .L_423a40

            mov RDI,RBP
            mov RSI,RAX
            call .L_445fa0

            lea RDI,QWORD PTR [RBX+124]
            mov ESI,12
            call .L_423a40

            test RAX,RAX
            mov QWORD PTR [R12+272],RAX
            js .L_4244e4

            movabs RDX,9223372036854775807
            cmp RAX,RDX
            je .L_4244b8

            mov RSI,RAX
            mov QWORD PTR [R12+304],RAX
            mov RDI,RBP
            call .L_446770

            lea RDI,QWORD PTR [RBX+136]
            mov ESI,12
            call .L_423a40

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,RBP
            call .L_4465a0

            movzx EAX,BYTE PTR [RBX+156]
            sub EAX,48
            cmp AL,35
            ja .L_4242cc

            lea RDX,QWORD PTR [RIP+.L_427788]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4242c0:

            mov DWORD PTR [R12+312],1
.L_4242cc:

            mov ESI,32768
            mov RDI,RBP
            xor EBX,EBX
            call .L_445ae0
.L_4242db:

            add RSP,8
.L_4242df:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4242f0:

            lea RSI,QWORD PTR [RCX+157]
            lea RDI,QWORD PTR [R12+72]
            mov EDX,100
            call .L_437290

            jmp .L_4241eb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424310:

            xor EBX,EBX
            jmp .L_4242db
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424318:

            mov RCX,QWORD PTR [R12+400]
            mov RDX,QWORD PTR [R12+80]
            mov RDI,RBP
            mov RSI,QWORD PTR [R12+72]
            call .L_4461d0

            test EAX,EAX
            mov EBX,EAX
            je .L_424356

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_4271ad]
            mov RDI,R13
            call .L_424150

            cmp EAX,-30
            mov EBX,EAX
            je .L_4242db
.L_424356:

            mov RDI,RBP
            call .L_4456a0

            test RAX,RAX
            jg .L_4244a0
.L_424367:

            mov RDI,RBP
            call .L_4456a0

            test RAX,RAX
            je .L_4242db

            mov EAX,DWORD PTR [R13+16]
            cmp EAX,196610
            je .L_4242db

            and EAX,4294967291
            cmp EAX,196608
            je .L_4243a7

            mov ESI,50
            mov RDI,R13
            call .L_423c20

            cmp EAX,50
            jle .L_4242db
.L_4243a7:

            xor ESI,ESI
            mov RDI,RBP
            call .L_446770

            mov QWORD PTR [R12+272],0
            jmp .L_4242db
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4243c8:

            mov ESI,40960
            mov RDI,RBP
            call .L_445ae0

            xor ESI,ESI
            mov RDI,RBP
            call .L_446770

            mov RCX,QWORD PTR [R12+400]
            mov RDX,QWORD PTR [R12+80]
            mov RDI,RBP
            mov RSI,QWORD PTR [R12+72]
            mov QWORD PTR [R12+272],0
            call .L_446910

            test EAX,EAX
            mov EBX,EAX
            je .L_4242db

            mov RSI,QWORD PTR [R12+400]
            add RSP,8
.L_42441b:

            mov RDI,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            lea RDX,QWORD PTR [RIP+.L_4271ad]
            jmp .L_424150
.L_424430:

            mov ESI,24576
.L_424435:

            mov RDI,RBP
            xor EBX,EBX
            call .L_445ae0

            mov RDI,RBP
            xor ESI,ESI
            call .L_446770

            mov QWORD PTR [R12+272],0
            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424468:

            mov ESI,16384
            jmp .L_424435
          .byte 0x90
.L_424470:

            mov ESI,4096
            jmp .L_424435
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424480:

            mov ESI,16384
            mov RDI,RBP
            xor EBX,EBX
            call .L_445ae0

            jmp .L_4242db
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424498:

            mov ESI,8192
            jmp .L_424435
          .byte 0x90
.L_4244a0:

            mov ESI,32768
            mov RDI,RBP
            call .L_445ae0

            jmp .L_424367
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4244b8:

            lea RDX,QWORD PTR [RIP+.L_427195]
            mov QWORD PTR [R12+272],0
.L_4244cb:

            mov ESI,4294967295
            mov RDI,R13
            xor EAX,EAX
            call .L_43f5d0

            mov EBX,4294967266
            jmp .L_4242db
.L_4244e4:

            mov QWORD PTR [R12+272],0
            lea RDX,QWORD PTR [RIP+.L_427179]
            jmp .L_4244cb
.L_4244f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424500:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov R13,RCX
            sub RSP,72
.L_42451a:

            mov RSI,QWORD PTR [RCX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_424614
.L_424536:

            lea RDX,QWORD PTR [RSP+40]
            mov ESI,512
            mov RDI,RBP
            call .L_4049e0

            mov RBX,QWORD PTR [RSP+40]
            mov R15,RAX
            test RBX,RBX
            js .L_4246b0

            je .L_4246ea

            cmp RBX,511
            lea RDX,QWORD PTR [RIP+.L_427012]
            jle .L_42473c

            mov QWORD PTR [R13],512
            cmp BYTE PTR [R15],0
            lea RAX,QWORD PTR [RAX+1]
            lea RDX,QWORD PTR [R15+512]
            jne .L_42459f

            nop
            nop
            nop
            nop
.L_424590:

            cmp RAX,RDX
            je .L_4245f8

            add RAX,1
            cmp BYTE PTR [RAX-1],0
            je .L_424590
.L_42459f:

            mov RDI,R15
            call .L_423b30

            test EAX,EAX
            je .L_425370

            mov EAX,DWORD PTR [R12+268]
            add EAX,1
            cmp EAX,32
            mov DWORD PTR [R12+268],EAX
            jg .L_4253a5

            movzx EAX,BYTE PTR [R15+156]
            sub EAX,65
            cmp AL,55
            ja .L_424972

            lea RDX,QWORD PTR [RIP+.L_427818]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4245f8:

            cmp QWORD PTR [RBP+24],0
            je .L_424630
.L_4245ff:

            mov EDX,DWORD PTR [R12+436]
            mov ESI,512
            test EDX,EDX
            je .L_4246f1
.L_424614:

            mov RDI,RBP
            call .L_404a30

            mov QWORD PTR [R13],0
            jmp .L_424536
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424630:

            lea RAX,QWORD PTR [RIP+.L_4271b6]
            mov DWORD PTR [RBP+16],196608
            mov QWORD PTR [RBP+24],RAX
            jmp .L_4245ff
.L_424644:

            lea RAX,QWORD PTR [RIP+.L_427211]
            mov DWORD PTR [RBP+16],196610
.L_424652:

            mov QWORD PTR [RBP+24],RAX
            mov R8,R13
            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_425750

            mov EBX,EAX
.L_42466c:

            cmp EBX,-30
            je .L_4246ab
.L_424671:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            jne .L_424bd1
.L_42467e:

            mov EAX,DWORD PTR [R12+268]
            sub EAX,1
            cmp EBX,-20
            mov DWORD PTR [R12+268],EAX
            je .L_424a46

            test EBX,EBX
            je .L_424a46
.L_4246a2:

            cmp EBX,1
            je .L_424bf9
.L_4246ab:

            mov EBX,4294967266
.L_4246b0:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_4253da

            add RSP,72
.L_4246ca:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4246d5:

            mov ESI,512
            mov RDI,RBP
            call .L_404a30
.L_4246e2:

            mov RDI,RBP
            call .L_43f5b0
.L_4246ea:

            mov EBX,1
            jmp .L_4246b0
.L_4246f1:

            mov RDI,RBP
            call .L_404a30

            xor EDX,EDX
            mov QWORD PTR [R13],0
            mov ESI,512
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_4246e2

            cmp BYTE PTR [RAX],0
            jne .L_4246e2

            lea RDX,QWORD PTR [RAX+1]
            add RAX,512
.L_424724:

            cmp RDX,RAX
            je .L_4246d5

            add RDX,1
            cmp BYTE PTR [RDX-1],0
            je .L_424724

            jmp .L_4246e2
.L_424735:

            lea RDX,QWORD PTR [RIP+.L_427600]
.L_42473c:

            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            mov EBX,4294967266
            jmp .L_4246b0
.L_424755:

            lea RAX,QWORD PTR [RIP+.L_4271e7]
            lea RDI,QWORD PTR [R15+124]
            mov ESI,12
            mov DWORD PTR [RBP+16],196610
            mov QWORD PTR [RBP+24],RAX
            call .L_423a40

            mov RCX,R13
            mov RDX,R15
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [RSP+8],RAX
            call .L_424050

            test EAX,EAX
            mov EBX,EAX
            jne .L_42466c

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_424500

            test EAX,EAX
            je .L_425076

            cmp EAX,-20
            je .L_425076
.L_4247b7:

            mov EBX,EAX
            jmp .L_42466c
.L_4247be:

            lea RSI,QWORD PTR [R12+144]
            mov RCX,R13
            mov RDX,R15
            mov RDI,RBP
            call .L_424050

            test EAX,EAX
            mov EBX,EAX
            jne .L_42466c

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_424500

            test EAX,EAX
            je .L_4247f8

            cmp EAX,-20
            jne .L_4247b7
.L_4247f8:

            mov RSI,QWORD PTR [R12+144]
            mov RDI,R14
            call .L_4464b0
.L_424808:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            jne .L_424bd1

            sub DWORD PTR [R12+268],1
            jne .L_424c43

            cmp DWORD PTR [R12+432],0
            je .L_424c43
.L_424833:

            mov RDI,R14
            call .L_445530

            test RAX,RAX
            je .L_42525f

            mov ECX,DWORD PTR [RAX]
            mov RDX,RAX
            test ECX,ECX
            je .L_424c3c
.L_424851:

            mov ESI,DWORD PTR [RAX+4]
            add RAX,4
            cmp ECX,47
            je .L_424c14

            test ESI,ESI
            je .L_424c60

            mov ECX,ESI
            jmp .L_424851
.L_42486d:

            lea RSI,QWORD PTR [R12+168]
            mov RCX,R13
            mov RDX,R15
            mov RDI,RBP
            call .L_424050

            test EAX,EAX
            mov EBX,EAX
            jne .L_42466c

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_424500

            test EAX,EAX
            mov EBX,EAX
            je .L_4248ad

            cmp EAX,-20
            jne .L_42466c
.L_4248ad:

            mov RCX,QWORD PTR [R12+400]
            mov RDX,QWORD PTR [R12+176]
            mov RDI,R14
            mov RSI,QWORD PTR [R12+168]
            call .L_4466d0

            test EAX,EAX
            je .L_42466c

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_42722e]
            mov RDI,RBP
            call .L_424150

            mov EBX,EAX
            jmp .L_42466c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4248f8:

            mov DWORD PTR [RBP+16],196610
            lea RAX,QWORD PTR [RIP+.L_4275d0]
            jmp .L_424652
.L_42490b:

            lea RAX,QWORD PTR [RIP+.L_427211]
            lea RSI,QWORD PTR [R12+216]
            mov DWORD PTR [RBP+16],196610
            mov RCX,R13
            mov RDX,R15
            mov RDI,RBP
            mov QWORD PTR [RBP+24],RAX
            call .L_424050

            test EAX,EAX
            mov EBX,EAX
            jne .L_42494c

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_424500

            mov EBX,EAX
.L_42494c:

            cmp EBX,1
            jne .L_42466c

            jmp .L_4246ea
.L_42495a:

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_424500

            mov EBX,EAX
            jmp .L_42466c
.L_424972:

            movabs RDX,9042874888123253
            cmp QWORD PTR [R15+257],RDX
            lea RAX,QWORD PTR [R15+257]
            je .L_424ce0

            cmp DWORD PTR [R15+257],1635021685
            je .L_424f00
.L_4249a1:

            lea RAX,QWORD PTR [RIP+.L_42726b]
            mov RCX,QWORD PTR [R12+400]
            mov DWORD PTR [RBP+16],196608
            mov EDX,100
            mov RSI,R15
            mov RDI,R14
            mov QWORD PTR [RBP+24],RAX
            call .L_4466d0

            test EAX,EAX
            mov EBX,EAX
            je .L_4249f3

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_42722e]
            mov RDI,RBP
            call .L_424150

            cmp EAX,-30
            mov EBX,EAX
            je .L_4246ab
.L_4249f3:

            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_4241c0

            cmp EAX,EBX
            cmovle EBX,EAX
            mov RAX,QWORD PTR [R12+272]
            neg RAX
            and EAX,511
            mov QWORD PTR [R12+288],RAX
            jmp .L_42466c
.L_424a26:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            jne .L_424bd1

            mov EAX,DWORD PTR [R12+268]
            sub EAX,1
            mov DWORD PTR [R12+268],EAX
.L_424a46:

            test EAX,EAX
            jne .L_424a5a

            mov EAX,DWORD PTR [R12+432]
            test EAX,EAX
            jne .L_424833
.L_424a5a:

            cmp BYTE PTR [R12+360],0
            je .L_4246b0

            cmp QWORD PTR [R12+352],1
            jne .L_4252e6

            mov RDI,QWORD PTR [R12+320]
            lea RAX,QWORD PTR [R12+320]
            mov BYTE PTR [R12+360],0
            mov QWORD PTR [RSP+16],RAX
            test RDI,RDI
            je .L_424ab8
.L_424a9b:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [R12+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [R12+320]
            test RDI,RDI
            jne .L_424a9b
.L_424ab8:

            mov RAX,QWORD PTR [R12+272]
            lea R15,QWORD PTR [RSP+48]
            mov QWORD PTR [R12+328],0
            mov RCX,R13
            mov RSI,R12
            mov RDI,RBP
            mov RDX,R15
            mov QWORD PTR [RSP+48],RAX
            call .L_4236a0

            test EAX,EAX
            mov R14D,EAX
            js .L_424be6

            lea RAX,QWORD PTR [R12+328]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_424b5f
.L_424b01:

            mov RCX,R13
            mov RDX,R15
            mov RSI,R12
            mov RDI,RBP
            call .L_4236a0

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            js .L_424be6

            mov RCX,R13
            mov RDX,R15
            mov RSI,R12
            mov RDI,RBP
            call .L_4236a0

            test RAX,RAX
            mov R8,RAX
            js .L_424be6

            mov R9,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+24]
            mov RDI,RBP
            mov RSI,QWORD PTR [RSP+16]
            mov RCX,R9
            call .L_423dc0

            test EAX,EAX
            jne .L_424be6
.L_424b5f:

            sub R14D,1
            cmp R14D,-1
            jne .L_424b01

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            je .L_424b82

            mov RDI,RBP
            call .L_404a30

            mov QWORD PTR [R13],0
.L_424b82:

            mov RAX,QWORD PTR [R12+272]
            sub RAX,QWORD PTR [RSP+48]
            mov RDI,RBP
            mov R13,RAX
            neg RAX
            and EAX,511
            mov R14,RAX
            mov RSI,RAX
            call .L_404a30

            cmp R14,RAX
            jne .L_424be6

            lea RAX,QWORD PTR [R13+R14*1]
            sub QWORD PTR [R12+272],RAX
            test RAX,RAX
            js .L_42533d

            mov BYTE PTR [R12+360],0
            jmp .L_4246b0
.L_424bd1:

            mov RDI,RBP
            call .L_404a30

            mov QWORD PTR [R13],0
            jmp .L_42467e
.L_424be6:

            add QWORD PTR [R12+272],30
            mov EBX,4294967266
            jmp .L_4246b0
.L_424bf9:

            lea RDX,QWORD PTR [RIP+.L_4271ba]
            mov ESI,22
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_4246ab
.L_424c14:

            test ESI,ESI
            je .L_424c60

            mov RDX,RAX
            mov ECX,ESI
            jmp .L_424851
.L_424c22:

            test SIL,SIL
            jne .L_425298
.L_424c2b:

            cmp BYTE PTR [RDX],46
            jne .L_424c3c

            cmp BYTE PTR [RDX+1],95
            jne .L_424c3c

            cmp BYTE PTR [RDX+2],0
            jne .L_424c71
.L_424c3c:

            xor EAX,EAX
.L_424c3e:

            cmp EBX,EAX
            cmovg EBX,EAX
.L_424c43:

            cmp EBX,-20
            je .L_424a5a

            test EBX,EBX
            je .L_424a5a

            jmp .L_4246a2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424c60:

            cmp DWORD PTR [RDX],46
            jne .L_424c3c

            cmp DWORD PTR [RDX+4],95
            jne .L_424c3c

            cmp DWORD PTR [RDX+8],0
            je .L_424c3c
.L_424c71:

            mov RDI,R14
            call .L_4456a0

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,RBP
            mov R15,RAX
            call .L_4049e0

            test RAX,RAX
            je .L_42532b

            mov RSI,RAX
            mov RDX,R15
            mov RDI,R14
            call .L_446a60

            lea RSI,QWORD PTR [R15+511]
            and RSI,-512
            test RSI,RSI
            mov QWORD PTR [R13],RSI
            je .L_424cc7

            mov RDI,RBP
            call .L_404a30

            mov QWORD PTR [R13],0
.L_424cc7:

            mov RCX,R13
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_424500

            jmp .L_424c3e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424ce0:

            lea RAX,QWORD PTR [RIP+.L_427237]
            mov DWORD PTR [RBP+16],196612
            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [RBP+24],RAX
            call .L_4241c0

            cmp EAX,-30
            mov EBX,EAX
            je .L_4246ab

            mov RCX,QWORD PTR [R12+400]
            mov EDX,100
            mov RSI,R15
            mov RDI,R14
            call .L_4466d0

            test EAX,EAX
            je .L_424d4c

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_42722e]
            mov RDI,RBP
            call .L_424150

            cmp EAX,-30
            mov EBX,EAX
            je .L_4246ab
.L_424d4c:

            mov RCX,QWORD PTR [R12+400]
            lea RSI,QWORD PTR [R15+265]
            mov EDX,32
            mov RDI,R14
            call .L_446a30

            test EAX,EAX
            je .L_424d8e

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_427246]
            mov RDI,RBP
            call .L_424150

            cmp EAX,-30
            mov EBX,EAX
            je .L_4246ab
.L_424d8e:

            mov RCX,QWORD PTR [R12+400]
            lea RSI,QWORD PTR [R15+297]
            mov EDX,32
            mov RDI,R14
            call .L_446040

            test EAX,EAX
            jne .L_425497
.L_424db2:

            movzx EAX,BYTE PTR [R15+156]
            sub EAX,51
            cmp AL,1
            jbe .L_42545a

            xor ESI,ESI
            mov RDI,R14
            call .L_446710
.L_424dcf:

            mov RAX,QWORD PTR [R12+272]
            lea RDI,QWORD PTR [R15+345]
            mov ESI,12
            neg RAX
            and EAX,511
            mov QWORD PTR [R12+288],RAX
            call .L_423a40

            test RAX,RAX
            jg .L_425448
.L_424e01:

            lea RDI,QWORD PTR [R15+357]
            mov ESI,12
            call .L_423a40

            test RAX,RAX
            jg .L_425436
.L_424e1b:

            cmp BYTE PTR [R15+483],0
            jne .L_42540d
.L_424e29:

            cmp BYTE PTR [R15+386],0
            je .L_424671

            lea RDX,QWORD PTR [R15+386]
            mov ECX,4
            mov RSI,R12
            mov RDI,RBP
            call .L_423e60

            test EAX,EAX
            jne .L_4246ab

            cmp BYTE PTR [R15+482],0
            je .L_424671

            lea R15,QWORD PTR [RSP+48]
            jmp .L_424ed8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424e70:

            mov RDX,R15
            mov ESI,512
            mov RDI,RBP
            call .L_4049e0

            mov R8,RAX
            mov RAX,QWORD PTR [RSP+48]
            test RAX,RAX
            js .L_4246ab

            cmp RAX,511
            jle .L_424735

            mov QWORD PTR [R13],512
            mov ECX,21
            mov RDX,R8
            mov RSI,R12
            mov RDI,RBP
            mov QWORD PTR [RSP+8],R8
            call .L_423e60

            test EAX,EAX
            jne .L_4246ab

            mov R8,QWORD PTR [RSP+8]
            cmp BYTE PTR [R8+504],0
            je .L_4253eb
.L_424ed8:

            mov RSI,QWORD PTR [R13]
            test RSI,RSI
            je .L_424e70

            mov RDI,RBP
            call .L_404a30

            mov QWORD PTR [R13],0
            jmp .L_424e70
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424f00:

            cmp BYTE PTR [RAX+4],114
            jne .L_4249a1

            cmp DWORD PTR [RBP+16],196610
            je .L_424f25

            lea RAX,QWORD PTR [RIP+.L_427258]
            mov DWORD PTR [RBP+16],196609
            mov QWORD PTR [RBP+24],RAX
.L_424f25:

            cmp BYTE PTR [R15+345],0
            lea RBX,QWORD PTR [R12+24]
            mov QWORD PTR [R12+32],0
            je .L_424f6f

            lea RSI,QWORD PTR [R15+345]
            mov EDX,155
            mov RDI,RBX
            call .L_437290

            mov RDX,QWORD PTR [R12+24]
            mov RAX,QWORD PTR [R12+32]
            cmp BYTE PTR [RDX+RAX*1-1],47
            je .L_424f6f

            mov ESI,47
            mov RDI,RBX
            call .L_437330
.L_424f6f:

            mov RDI,RBX
            mov EDX,100
            mov RSI,R15
            call .L_437290

            mov RCX,QWORD PTR [R12+400]
            mov RDX,QWORD PTR [R12+32]
            mov RDI,R14
            mov RSI,QWORD PTR [R12+24]
            call .L_4466d0

            test EAX,EAX
            mov EBX,EAX
            je .L_424fc1

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_42722e]
            mov RDI,RBP
            call .L_424150

            cmp EAX,-30
            mov EBX,EAX
            je .L_4246ab
.L_424fc1:

            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
            call .L_4241c0

            cmp EAX,-30
            je .L_4246ab

            mov RCX,QWORD PTR [R12+400]
            lea RSI,QWORD PTR [R15+265]
            cmp EAX,EBX
            mov EDX,32
            mov RDI,R14
            cmovle EBX,EAX
            call .L_446a30

            test EAX,EAX
            je .L_425022

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_427246]
            mov RDI,RBP
            call .L_424150

            cmp EAX,-30
            mov EBX,EAX
            je .L_4246ab
.L_425022:

            mov RCX,QWORD PTR [R12+400]
            lea RSI,QWORD PTR [R15+297]
            mov EDX,32
            mov RDI,R14
            call .L_446040

            test EAX,EAX
            jne .L_425304
.L_425046:

            movzx EAX,BYTE PTR [R15+156]
            sub EAX,51
            cmp AL,1
            jbe .L_4252a9
.L_425059:

            mov RAX,QWORD PTR [R12+272]
            neg RAX
            and EAX,511
            mov QWORD PTR [R12+288],RAX
            jmp .L_424671
.L_425076:

            mov RCX,QWORD PTR [R12]
            movsx EAX,BYTE PTR [RCX]
            test AL,AL
            je .L_425350

            mov RDI,QWORD PTR [RSP+8]
            add RDI,RCX
            cmp RDI,RCX
            jbe .L_425350

            lea EDX,DWORD PTR [RAX-48]
            cmp DL,7
            ja .L_425344

            sub EAX,48
            mov R8,RCX
            cdqe 
            jmp .L_4250dc
.L_4250ac:

            cmp RDI,RSI
            je .L_4251df

            lea R8D,DWORD PTR [RDX-48]
            cmp R8B,7
            ja .L_425344

            sub EDX,48
            mov R8,RSI
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RDX+RAX*8]
            cmp RAX,16777215
            jg .L_4253df
.L_4250dc:

            movsx EDX,BYTE PTR [R8+1]
            lea RSI,QWORD PTR [R8+1]
            test DL,DL
            jne .L_4250ac
.L_4250e9:

            mov EBX,EAX
            and EAX,4294705152
            cmp EAX,262144
            je .L_425252

            cmp EAX,786432
            mov DWORD PTR [RSP+16],15360
            jne .L_425350
.L_42510e:

            lea RBX,QWORD PTR [R8+2]
            cmp RDI,RBX
            jbe .L_425234

            mov RAX,RBX
            sub RAX,RCX
            mov RCX,QWORD PTR [RSP+8]
            sub RCX,RAX
            cmp BYTE PTR [RSI+1],0
            mov RAX,RCX
            je .L_4251e7

            add RAX,RBX
            mov R15,RBX
            cmp RAX,RBX
            ja .L_42514d

            jmp .L_425157
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425148:

            cmp RAX,R15
            je .L_425157
.L_42514d:

            add R15,1
            cmp BYTE PTR [R15],0
            jne .L_425148
.L_425157:

            cmp QWORD PTR [R12+408],0
            je .L_42520a
.L_425166:

            mov RDX,R15
            lea RDI,QWORD PTR [R12+368]
            mov RSI,RBX
            sub RDX,RBX
            mov QWORD PTR [R12+376],0
            call .L_437290

            mov RBX,QWORD PTR [R12+408]
            mov R15,QWORD PTR [R12+368]
            mov RDI,R14
            call .L_446cf0

            mov EDX,DWORD PTR [RSP+16]
            mov RDI,RAX
            mov RCX,RBX
            mov RSI,R15
            call .L_442b10

            test EAX,EAX
            mov EBX,EAX
            je .L_424a26

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4251ef

            lea RDX,QWORD PTR [RIP+.L_4275a0]
            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_42466c
.L_4251df:

            mov RSI,RDI
            jmp .L_4250e9
.L_4251e7:

            mov R15,RBX
            jmp .L_425157
.L_4251ef:

            lea RDX,QWORD PTR [RIP+.L_4271f3]
            mov ESI,12
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_42466c
.L_42520a:

            lea RSI,QWORD PTR [RIP+.L_427104]
            mov EDX,1
            mov RDI,RBP
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [R12+408],RAX
            jne .L_425166

            jmp .L_4246ab
.L_425234:

            lea RDX,QWORD PTR [RIP+.L_427570]
.L_42523b:

            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            mov EBX,4294967276
            jmp .L_424808
.L_425252:

            mov DWORD PTR [RSP+16],256
            jmp .L_42510e
.L_42525f:

            mov RDI,R14
            call .L_445450

            test RAX,RAX
            je .L_42529f

            movzx ECX,BYTE PTR [RAX]
            mov RDX,RAX
            test CL,CL
            je .L_424c3c
.L_42527a:

            movzx ESI,BYTE PTR [RAX+1]
            add RAX,1
            cmp CL,47
            je .L_424c22

            test SIL,SIL
            je .L_424c2b

            mov ECX,ESI
            jmp .L_42527a
.L_425298:

            mov RDX,RAX
            mov ECX,ESI
            jmp .L_42527a
.L_42529f:

            mov EAX,4294967271
            jmp .L_424c3e
.L_4252a9:

            lea RDI,QWORD PTR [R15+329]
            mov ESI,8
            call .L_423a40

            mov RDI,R14
            mov RSI,RAX
            call .L_446730

            lea RDI,QWORD PTR [R15+337]
            mov ESI,8
            call .L_423a40

            mov RDI,R14
            mov RSI,RAX
            call .L_446750

            jmp .L_425059
.L_4252e6:

            lea RDX,QWORD PTR [RIP+.L_427640]
            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov EBX,4294967276
            call .L_43f5d0

            jmp .L_4246b0
.L_425304:

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_42724c]
            mov RDI,RBP
            call .L_424150

            cmp EAX,-30
            mov EBX,EAX
            jne .L_425046

            jmp .L_4246ab
.L_42532b:

            mov QWORD PTR [R13],0
            mov EAX,4294967266
            jmp .L_424c3e
.L_42533d:

            mov EBX,EAX
            jmp .L_4246b0
.L_425344:

            lea RDX,QWORD PTR [RIP+.L_4274d0]
            jmp .L_42523b
.L_425350:

            lea RDX,QWORD PTR [RIP+.L_427538]
            mov ECX,EBX
            or ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov EBX,4294967276
            call .L_43f5d0

            jmp .L_424808
.L_425370:

            mov ESI,512
            mov RDI,RBP
            mov EBX,4294967286
            call .L_404a30

            lea RDX,QWORD PTR [RIP+.L_4271ba]
            mov QWORD PTR [R13],0
            mov ESI,22
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_4246b0
.L_4253a5:

            mov ESI,512
            mov RDI,RBP
            mov EBX,4294967276
            call .L_404a30

            lea RDX,QWORD PTR [RIP+.L_4271ce]
            mov QWORD PTR [R13],0
            mov ESI,22
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_4246b0
.L_4253da:

            call __stack_chk_fail@PLT
.L_4253df:

            lea RDX,QWORD PTR [RIP+.L_427500]
            jmp .L_42523b
.L_4253eb:

            mov RAX,QWORD PTR [R12+320]
            test RAX,RAX
            je .L_424671

            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+280],RAX
            jmp .L_424671
.L_42540d:

            lea RDI,QWORD PTR [R15+483]
            mov ESI,12
            call .L_423a40

            mov RDI,R14
            mov QWORD PTR [R12+304],RAX
            mov RSI,RAX
            call .L_446770

            jmp .L_424e29
.L_425436:

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R14
            call .L_446330

            jmp .L_424e1b
.L_425448:

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,R14
            call .L_446210

            jmp .L_424e01
.L_42545a:

            lea RDI,QWORD PTR [R15+329]
            mov ESI,8
            call .L_423a40

            mov RDI,R14
            mov RSI,RAX
            call .L_446730

            lea RDI,QWORD PTR [R15+337]
            mov ESI,8
            call .L_423a40

            mov RDI,R14
            mov RSI,RAX
            call .L_446750

            jmp .L_424dcf
.L_425497:

            mov RSI,QWORD PTR [R12+400]
            lea RDX,QWORD PTR [RIP+.L_42724c]
            mov RDI,RBP
            call .L_424150

            cmp EAX,-30
            mov EBX,EAX
            jne .L_424db2

            jmp .L_4246ab
.L_4254be:

            nop
            nop
.L_4254c0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RDI,R12
            sub RSP,16
.L_4254d5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RIP+.L_65bc44]
            mov QWORD PTR [RSP],0
            lea ESI,DWORD PTR [RAX+1]
            movsxd RSI,ESI
            call .L_4463c0

            mov EAX,DWORD PTR [RIP+.L_65bc40]
            mov RDI,R12
            lea ESI,DWORD PTR [RAX+1]
            mov DWORD PTR [RIP+.L_65bc40],ESI
            movsxd RSI,ESI
            call .L_446050

            cmp DWORD PTR [RIP+.L_65bc40],65534
            jle .L_425535

            add DWORD PTR [RIP+.L_65bc44],1
            mov DWORD PTR [RIP+.L_65bc40],0
.L_425535:

            mov RAX,QWORD PTR [R13+2472]
            mov RBP,QWORD PTR [RAX]
            mov RDI,QWORD PTR [RBP+320]
            mov QWORD PTR [RBP+280],0
            test RDI,RDI
            je .L_42557b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425560:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RBP+320],RAX
            call free@PLT

            mov RDI,QWORD PTR [RBP+320]
            test RDI,RDI
            jne .L_425560
.L_42557b:

            mov RAX,QWORD PTR [RBP+392]
            mov QWORD PTR [RBP+328],0
            mov QWORD PTR [RBP+304],-1
            test RAX,RAX
            mov QWORD PTR [RBP+400],RAX
            je .L_4256d8
.L_4255a8:

            mov RSI,RBP
            mov RCX,RSP
            mov RDX,R12
            mov RDI,R13
            call .L_424500

            mov RSI,QWORD PTR [RSP]
            mov R14D,EAX
            test RSI,RSI
            jne .L_425680

            mov RBX,QWORD PTR [RBP+320]
            test RBX,RBX
            jne .L_4255e8

            jmp .L_4256a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4255e0:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_425607
.L_4255e8:

            mov EAX,DWORD PTR [RBX+24]
            test EAX,EAX
            jne .L_4255e0

            mov RDX,QWORD PTR [RBX+16]
            mov RSI,QWORD PTR [RBX+8]
            mov RDI,R12
            call .L_4476c0

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            jne .L_4255e8
.L_425607:

            test R14D,R14D
            je .L_425630
.L_42560c:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_425748

            add RSP,16
.L_425627:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_425630:

            mov RDI,R12
            call .L_444e70

            cmp EAX,32768
            jne .L_42560c

            mov RDI,R12
            call .L_445530

            test RAX,RAX
            mov RBX,RAX
            je .L_425713

            mov RDI,RAX
            call wcslen@PLT

            test RAX,RAX
            je .L_42560c

            cmp DWORD PTR [RBX+RAX*4-4],47
            jne .L_42560c
.L_425667:

            mov ESI,16384
            mov RDI,R12
            call .L_445ae0

            jmp .L_42560c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425680:

            mov RDI,R13
            call .L_404a30

            mov RBX,QWORD PTR [RBP+320]
            mov QWORD PTR [RSP],0
            test RBX,RBX
            jne .L_4255e8
.L_4256a0:

            mov R8,QWORD PTR [RBP+272]
            lea RDX,QWORD PTR [RBP+328]
            lea RSI,QWORD PTR [RBP+320]
            xor ECX,ECX
            mov RDI,R13
            call .L_423dc0

            test EAX,EAX
            je .L_425607

            mov R14D,4294967266
            jmp .L_42560c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4256d8:

            mov EDX,DWORD PTR [RBP+424]
            test EDX,EDX
            je .L_4256f8

            mov RAX,QWORD PTR [RBP+416]
.L_4256e9:

            mov QWORD PTR [RBP+400],RAX
            jmp .L_4255a8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4256f8:

            mov RDI,R13
            call .L_4378a0

            mov DWORD PTR [RBP+424],1
            mov QWORD PTR [RBP+416],RAX
            jmp .L_4256e9
.L_425713:

            mov RDI,R12
            call .L_445450

            test RAX,RAX
            mov RBX,RAX
            je .L_42560c

            mov RDI,RAX
            call strlen@PLT

            test RAX,RAX
            je .L_42560c

            cmp BYTE PTR [RBX+RAX*1-1],47
            jne .L_42560c

            jmp .L_425667
.L_425748:

            call __stack_chk_fail@PLT
.L_42574d:

            nop
            nop
            nop
.L_425750:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            add RSI,192
            mov RBX,R8
            sub RSP,104
.L_42576e:

            mov QWORD PTR [RSP+8],RDX
            mov RDX,RCX
            mov RCX,R8
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            call .L_424050

            test EAX,EAX
            mov R13D,EAX
            je .L_4257c0
.L_425795:

            mov RDI,QWORD PTR [RSP+88]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_426c95

            add RSP,104
.L_4257b0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4257c0:

            mov RDX,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_424500

            test EAX,EAX
            mov R14D,EAX
            je .L_4257e8

            cmp EAX,-20
            je .L_4257e8

            mov R13D,EAX
            jmp .L_425795
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4257e8:

            mov R9,QWORD PTR [RBP+200]
            mov R10,QWORD PTR [RBP+192]
            mov DWORD PTR [RBP+264],0
            mov QWORD PTR [RBP+128],0
            mov QWORD PTR [RBP+80],0
            mov QWORD PTR [RBP+32],0
            test R9,R9
            mov QWORD PTR [RBP+56],0
            mov QWORD PTR [RBP+104],0
            je .L_4268d0

            xor R11D,R11D
            mov DWORD PTR [RSP+56],R14D
            mov QWORD PTR [RSP+16],R12
            mov R14,RBP
            mov R12,R9
            mov RBP,R10
            mov R10D,R11D
.L_42584d:

            mov RDX,R12
            mov R13,RBP
            xor EBX,EBX
            nop
            nop
            nop
.L_425858:

            movsx EAX,BYTE PTR [R13]
            cmp AL,32
            je .L_425a28

            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            ja .L_425a38

            sub EAX,48
            lea RCX,QWORD PTR [RBX+RBX*4]
            cdqe 
            lea RBX,QWORD PTR [RAX+RCX*2]
            cmp RBX,999999
            ja .L_425a90

            add R13,1
            sub RDX,1
            jne .L_425858
.L_425895:

            cmp R12,RBX
            jb .L_426605

            test RBX,RBX
            je .L_426605

            lea R11,QWORD PTR [RBP+RBX*1-1]
            cmp BYTE PTR [R11],10
            jne .L_426605

            mov BYTE PTR [R11],0
            movzx EAX,BYTE PTR [R13]
            cmp AL,61
            je .L_426839

            test AL,AL
            je .L_426820

            mov R15,R13
            jmp .L_4258df

            nop
            nop
            nop
            nop
.L_4258d8:

            cmp AL,61
            je .L_4258ec

            mov R15,RDX
.L_4258df:

            movzx EAX,BYTE PTR [R15+1]
            lea RDX,QWORD PTR [R15+1]
            test AL,AL
            jne .L_4258d8
.L_4258ec:

            test AL,AL
            je .L_426820

            mov BYTE PTR [RDX],0
            movzx EAX,BYTE PTR [R13]
            lea R9,QWORD PTR [RIP+.L_42727b]
            add R15,2
            cmovne R9,R15
            sub EAX,71
            cmp AL,46
            ja .L_425930

            lea RDI,QWORD PTR [RIP+.L_4278f8]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_425925:

            mov R10D,R14D
            mov R14,RBX
            mov RBX,QWORD PTR [RSP+24]
.L_425930:

            xor R8D,R8D
.L_425933:

            cmp R10D,R8D
            cmovg R10D,R8D
            add RBP,RBX
            sub R12,RBX
            jne .L_42584d

            mov RBP,R14
            mov R11D,R10D
            mov R12,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RBP+264]
            mov R14D,DWORD PTR [RSP+56]
            test EDX,EDX
            je .L_4268cd

            mov RBX,QWORD PTR [RBP+392]
.L_42596b:

            mov RDX,QWORD PTR [RBP+128]
            test RDX,RDX
            jne .L_426873
.L_42597b:

            mov RDX,QWORD PTR [RBP+80]
            test RDX,RDX
            jne .L_42691d
.L_425988:

            mov RDX,QWORD PTR [RBP+56]
            lea R13,QWORD PTR [RBP+48]
            test RDX,RDX
            jne .L_4259a2

            mov RDX,QWORD PTR [RBP+32]
            test RDX,RDX
            je .L_4259c5

            lea R13,QWORD PTR [RBP+24]
.L_4259a2:

            mov RSI,QWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov DWORD PTR [RSP+16],R11D
            call .L_4466d0

            test EAX,EAX
            mov R11D,DWORD PTR [RSP+16]
            jne .L_42699f
.L_4259c5:

            mov RDX,QWORD PTR [RBP+104]
            test RDX,RDX
            je .L_425a61

            mov RSI,QWORD PTR [RBP+96]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov DWORD PTR [RSP+16],R11D
            call .L_446a30

            test EAX,EAX
            mov R11D,DWORD PTR [RSP+16]
            je .L_425a61

            lea RDX,QWORD PTR [RIP+.L_427246]
            mov RSI,RBX
            mov RDI,R12
            call .L_424150

            cmp EAX,-30
            mov R11D,EAX
            je .L_425a61

            mov RSI,QWORD PTR [RBP+96]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+16],EAX
            call .L_446980

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_425a61
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_425a28:

            add R13,1
            jmp .L_425895
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425a38:

            mov RBP,R14
            mov R12,QWORD PTR [RSP+16]
            mov R14D,DWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_427668]
.L_425a4c:

            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            mov R11D,4294967276
.L_425a61:

            mov RAX,QWORD PTR [RBP+272]
            cmp R14D,R11D
            cmovle R11D,R14D
            mov R13D,R11D
            neg RAX
            and EAX,511
            mov QWORD PTR [RBP+288],RAX
            jmp .L_425795
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425a90:

            mov RBP,R14
            mov R12,QWORD PTR [RSP+16]
            mov R14D,DWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_427698]
            jmp .L_425a4c
.L_425aa6:

            lea RDI,QWORD PTR [RIP+.L_427422]
            mov ECX,5
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_425930

            mov RDI,R9
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+32]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_423070

            cmp QWORD PTR [R14+304],0
            mov QWORD PTR [R14+272],RAX
            mov R10D,DWORD PTR [RSP+40]
            jns .L_425930

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            mov DWORD PTR [RSP+32],R10D
            call .L_446770

            mov RAX,QWORD PTR [R14+272]
            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            mov QWORD PTR [R14+304],RAX
            jmp .L_425933
.L_425b41:

            lea RDI,QWORD PTR [RIP+.L_427427]
            mov ECX,4
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_426786

            lea RDI,QWORD PTR [RIP+.L_42742b]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_425930

            mov RDI,R9
            mov QWORD PTR [R14+104],0
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            lea RDI,QWORD PTR [R14+96]
.L_425bb0:

            mov R9,QWORD PTR [RSP+32]
            mov RDX,RAX
            mov RSI,R9
            call .L_437290

            mov R10D,DWORD PTR [RSP+40]
            mov R8D,DWORD PTR [RSP+24]
            jmp .L_425933
.L_425bcf:

            lea RDI,QWORD PTR [RIP+.L_42741d]
            mov ECX,5
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_425930

            mov RDI,R9
            mov QWORD PTR [R14+32],0
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            lea RDI,QWORD PTR [R14+24]
            jmp .L_425bb0
.L_425c1a:

            lea RDI,QWORD PTR [RIP+.L_427317]
            mov ECX,24
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_426747
.L_425c38:

            movabs RDX,8247344779599168854
            movabs RAX,5280544583653149004
            xor RDX,QWORD PTR [R13+8]
            xor RAX,QWORD PTR [R13]
            or RDX,RAX
            jne .L_425930

            cmp BYTE PTR [R13+16],46
            jne .L_425930

            xor R8D,R8D
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov DWORD PTR [RSP+24],R8D
            call strlen@PLT

            cmp RAX,17
            mov R8D,DWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jbe .L_425930

            add R13,17
            mov DWORD PTR [RSP+48],R10D
            mov DWORD PTR [RSP+32],R8D
            mov RDI,R13
            mov QWORD PTR [RSP+40],R9
            call strlen@PLT

            lea RDI,QWORD PTR [RAX+1]
            call malloc@PLT

            test RAX,RAX
            mov R11,RAX
            mov QWORD PTR [RSP+24],RAX
            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+48]
            je .L_425933

            mov R15D,4294967295
            mov R9,QWORD PTR [RSP+40]
            jmp .L_425cf2
.L_425ce7:

            add R13,1
            mov BYTE PTR [R11],AL
.L_425cee:

            add R11,1
.L_425cf2:

            movzx EAX,BYTE PTR [R13]
            test AL,AL
            je .L_4269d6

            cmp AL,37
            jne .L_425ce7

            movsx ESI,BYTE PTR [R13+1]
            test SIL,SIL
            je .L_425ce7

            movsx EDX,BYTE PTR [R13+2]
            test DL,DL
            je .L_425ce7

            lea ECX,DWORD PTR [RSI-48]
            cmp ECX,9
            jbe .L_425d2d

            lea ECX,DWORD PTR [RSI-65]
            cmp ECX,5
            ja .L_426d28

            lea ECX,DWORD PTR [RSI-55]
.L_425d2d:

            lea ESI,DWORD PTR [RDX-48]
            cmp ESI,9
            ja .L_426ce1

            mov EDX,ESI
.L_425d3b:

            test ECX,ECX
            js .L_425ce7

            test EDX,EDX
            js .L_425ce7

            shl ECX,4
            add R13,3
            or EDX,ECX
            mov BYTE PTR [R11],DL
            jmp .L_425cee
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425d58:

            lea RDI,QWORD PTR [RIP+.L_42727c]
            mov ECX,10
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_425d81

            mov ECX,DWORD PTR [R14+312]
            test ECX,ECX
            je .L_426dd3
.L_425d81:

            lea RDI,QWORD PTR [RIP+.L_427287]
            mov ECX,21
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_425dbc

            mov QWORD PTR [R14+336],-1
            mov QWORD PTR [R14+344],-1
            mov QWORD PTR [R14+352],0
.L_425dbc:

            lea RDI,QWORD PTR [RIP+.L_42729c]
            mov ECX,18
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_425e62

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_423070

            mov R8,QWORD PTR [R14+344]
            mov QWORD PTR [R14+336],RAX
            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            cmp R8,-1
            je .L_425e62

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [R14+328]
            lea RSI,QWORD PTR [R14+320]
            mov RCX,RAX
            call .L_423dc0

            test EAX,EAX
            jne .L_426650

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov QWORD PTR [R14+336],-1
            mov QWORD PTR [R14+344],-1
.L_425e62:

            lea RDI,QWORD PTR [RIP+.L_4272ae]
            mov ECX,20
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_425f08

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_423070

            cmp RAX,-1
            mov QWORD PTR [R14+344],RAX
            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            je .L_425f08

            mov RCX,QWORD PTR [R14+336]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [R14+328]
            lea RSI,QWORD PTR [R14+320]
            mov R8,RAX
            call .L_423dc0

            test EAX,EAX
            jne .L_426650

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov QWORD PTR [R14+336],-1
            mov QWORD PTR [R14+344],-1
.L_425f08:

            lea RDI,QWORD PTR [RIP+.L_4272c2]
            mov ECX,16
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_425f67

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+304],RAX
            mov RSI,RAX
            call .L_446770

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
.L_425f67:

            lea RDI,QWORD PTR [RIP+.L_4272d2]
            mov ECX,15
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_426663
.L_425f85:

            lea RDI,QWORD PTR [RIP+.L_4272e1]
            mov ECX,17
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_425fdf

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_423070

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            mov DWORD PTR [R14+352],EAX
            mov BYTE PTR [R14+360],1
.L_425fdf:

            lea RDI,QWORD PTR [RIP+.L_4272f2]
            mov ECX,17
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_426039

            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_423070

            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            mov DWORD PTR [R14+356],EAX
            mov BYTE PTR [R14+360],1
.L_426039:

            lea RDI,QWORD PTR [RIP+.L_427431]
            mov ECX,16
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42608b

            mov RDI,R9
            mov QWORD PTR [R14+56],0
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [R14+48]
            mov RDX,RAX
            mov RSI,R9
            call .L_437290

            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
.L_42608b:

            lea RDI,QWORD PTR [RIP+.L_427303]
            mov ECX,20
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_425930

            mov RDI,R9
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R8D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+304],RAX
            mov RSI,RAX
            call .L_446770

            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jmp .L_425933
.L_426100:

            lea RDI,QWORD PTR [RIP+.L_4273e5]
            mov ECX,4
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_4267ce

            lea RDI,QWORD PTR [RIP+.L_4273e9]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_425930

            mov RDI,R9
            mov QWORD PTR [R14+128],0
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            lea RDI,QWORD PTR [R14+120]
            jmp .L_425bb0
.L_426177:

            lea RDI,QWORD PTR [RIP+.L_4273df]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_425930

            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            call .L_422f90

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_446330

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_4261dc:

            lea RDI,QWORD PTR [RIP+.L_4273d9]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_425930

            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            call .L_422f90

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_446210

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426241:

            lea RDI,QWORD PTR [RIP+.L_4270bb]
            mov ECX,18
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_42661e

            lea RDI,QWORD PTR [RIP+.L_4270cd]
            mov ECX,19
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_42685c

            lea RDI,QWORD PTR [RIP+.L_4270e0]
            mov ECX,15
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_426977

            lea RDI,QWORD PTR [RIP+.L_427341]
            mov ECX,16
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_426b89

            lea RDI,QWORD PTR [RIP+.L_427351]
            mov ECX,16
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_426be0

            lea RDI,QWORD PTR [RIP+.L_427361]
            mov ECX,14
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_426c28

            lea RSI,QWORD PTR [RIP+.L_42736f]
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strcmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_426c4e

            lea RSI,QWORD PTR [RIP+.L_42737a]
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strcmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_426c9a

            lea RSI,QWORD PTR [RIP+.L_427385]
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strcmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_426d8d

            lea RSI,QWORD PTR [RIP+.L_427392]
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strcmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_426d3f

            lea RSI,QWORD PTR [RIP+.L_4273a2]
            mov EDX,13
            mov RDI,R13
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+24],R11
            call strncmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RSP+24]
            mov R9,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            je .L_426e33

            lea RSI,QWORD PTR [RIP+.L_4273b0]
            mov RDI,R13
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call strcmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jne .L_425930

            cmp BYTE PTR [R9],32
            jne .L_426e08

            lea RAX,QWORD PTR [R14+328]
            xor ECX,ECX
            lea RDI,QWORD PTR [R9+1]
            mov QWORD PTR [RSP+24],RBX
            mov DWORD PTR [RSP+32],1
            mov RBX,R14
            mov QWORD PTR [RSP+40],RAX
            mov R15,RCX
            mov R14D,R10D
.L_426478:

            mov R13,RDI
            jmp .L_42648c
.L_42647d:

            sub EAX,48
            cmp AL,9
            ja .L_426dfd

            add R13,1
.L_42648c:

            movzx EAX,BYTE PTR [R13]
            test AL,223
            jne .L_42647d

            mov RSI,R13
            mov EDX,10
            sub RSI,RDI
            call .L_423070

            test RAX,RAX
            mov R9,RAX
            js .L_426dfd

            cmp RAX,R15
            jg .L_426ed1
.L_4264ba:

            cmp BYTE PTR [R13],0
            je .L_425925

            lea RDI,QWORD PTR [R13+1]
            xor DWORD PTR [RSP+32],1
            mov R15,R9
            jmp .L_426478
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4264d8:

            lea RDI,QWORD PTR [RIP+.L_42740e]
            mov ECX,9
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            mov DWORD PTR [RSP+24],R8D
            jne .L_425930

            mov RDI,R9
            mov QWORD PTR [R14+80],0
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R9
            call strlen@PLT

            lea RDI,QWORD PTR [R14+72]
            jmp .L_425bb0
.L_426526:

            lea RDI,QWORD PTR [RIP+.L_427032]
            mov ECX,11
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_425930

            lea RDI,QWORD PTR [RIP+.L_4273ef]
            mov ECX,7
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            je .L_42684c

            lea RDI,QWORD PTR [RIP+.L_4273f6]
            mov ECX,24
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_425930

            mov DWORD PTR [R14+264],0
            jmp .L_425933
.L_4265a0:

            lea RDI,QWORD PTR [RIP+.L_427417]
            mov ECX,6
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R8B
            sbb R8B,0
            movsx R8D,R8B
            test R8D,R8D
            jne .L_425930

            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            call .L_422f90

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_4465a0

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426605:

            mov RBP,R14
            mov R12,QWORD PTR [RSP+16]
            mov R14D,DWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_4276c0]
            jmp .L_425a4c
.L_42661e:

            lea RSI,QWORD PTR [R14+408]
            mov DWORD PTR [RSP+24],R10D
            mov R8D,256
.L_426630:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov RCX,R9
            call .L_423f10

            cmp EAX,-30
            mov R10D,DWORD PTR [RSP+24]
            jne .L_425930
.L_426650:

            mov RBP,R14
            mov R14D,DWORD PTR [RSP+56]
.L_426658:

            mov R11D,4294967266
            jmp .L_425a61
.L_426663:

            movabs RAX,4294967296
            mov QWORD PTR [RSP+32],RBX
            mov RDI,R9
            mov QWORD PTR [R14+352],RAX
            mov RBX,R14
            mov RCX,-1
            mov QWORD PTR [RSP+24],RBP
            mov R15D,R10D
            mov R14,R9
.L_426691:

            movzx EAX,BYTE PTR [RDI]
            test AL,AL
            je .L_4266e2

            cmp AL,44
            je .L_4266e2

            sub EAX,48
            cmp AL,9
            ja .L_4266c7

            mov RBP,RDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4266b0:

            add RBP,1
            movzx EAX,BYTE PTR [RBP]
            test AL,AL
            je .L_4266e5

            cmp AL,44
            je .L_4266e5

            sub EAX,48
            cmp AL,9
            jbe .L_4266b0
.L_4266c7:

            mov R14,RBX
            mov RBP,QWORD PTR [RSP+24]
            mov R10D,R15D
            mov RBX,QWORD PTR [RSP+32]
            mov R8D,4294967276
            jmp .L_425933
.L_4266e2:

            mov RBP,RDI
.L_4266e5:

            mov RSI,RBP
            mov EDX,10
            mov QWORD PTR [RSP+40],RCX
            sub RSI,RDI
            call .L_423070

            mov RCX,QWORD PTR [RSP+40]
            mov R8,RAX
            cmp RCX,-1
            je .L_42698e

            test RAX,RAX
            js .L_4266c7

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RBX+328]
            lea RSI,QWORD PTR [RBX+320]
            call .L_423dc0

            test EAX,EAX
            jne .L_4266c7

            mov RCX,-1
.L_426734:

            cmp BYTE PTR [RBP],0
            je .L_426eb9

            lea RDI,QWORD PTR [RBP+1]
            jmp .L_426691
.L_426747:

            lea RDX,QWORD PTR [RSP+80]
            lea RSI,QWORD PTR [RSP+72]
            mov RDI,R9
            mov DWORD PTR [RSP+32],R10D
            mov QWORD PTR [RSP+24],R9
            call .L_422f90

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_4462a0

            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+24]
            jmp .L_425c38
.L_426786:

            mov RDI,R9
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R8D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_446950

            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jmp .L_425933
.L_4267ce:

            mov RDI,R9
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R8D
            mov QWORD PTR [RSP+24],R9
            call strlen@PLT

            mov R9,QWORD PTR [RSP+24]
            mov EDX,10
            mov RSI,RAX
            mov RDI,R9
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_445fa0

            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jmp .L_425933
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_426820:

            mov RBP,R14
            mov R12,QWORD PTR [RSP+16]
            mov R14D,DWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_4276f0]
            jmp .L_425a4c
.L_426839:

            mov RBP,R14
            mov R11D,4294967295
            mov R14D,DWORD PTR [RSP+56]
            jmp .L_425a61
.L_42684c:

            mov DWORD PTR [R14+264],1
            jmp .L_425933
.L_42685c:

            mov DWORD PTR [RSP+24],R10D
            lea RSI,QWORD PTR [R14+408]
            mov R8D,512
            jmp .L_426630
.L_426873:

            mov RSI,QWORD PTR [RBP+120]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov DWORD PTR [RSP+16],R11D
            call .L_446040

            test EAX,EAX
            mov R11D,DWORD PTR [RSP+16]
            je .L_42597b

            lea RDX,QWORD PTR [RIP+.L_42724c]
            mov RSI,RBX
            mov RDI,R12
            call .L_424150

            cmp EAX,-30
            mov DWORD PTR [RSP+16],EAX
            je .L_426658

            mov RSI,QWORD PTR [RBP+120]
            mov RDI,QWORD PTR [RSP+8]
            call .L_445fd0

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_42597b
.L_4268cd:

            mov R13D,R10D
.L_4268d0:

            lea RSI,QWORD PTR [RIP+.L_427104]
            mov EDX,1
            mov RDI,R12
            call .L_437870

            test RAX,RAX
            mov RBX,RAX
            je .L_426658

            mov EAX,DWORD PTR [RBP+428]
            mov R11D,R13D
            test EAX,EAX
            je .L_42596b

            mov ESI,1
            mov RDI,RBX
            mov DWORD PTR [RSP+16],R13D
            call .L_437920

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_42596b
.L_42691d:

            mov RSI,QWORD PTR [RBP+72]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov DWORD PTR [RSP+16],R11D
            call .L_446560

            test EAX,EAX
            mov R11D,DWORD PTR [RSP+16]
            je .L_425988

            lea RDX,QWORD PTR [RIP+.L_4271ad]
            mov RSI,RBX
            mov RDI,R12
            call .L_424150

            cmp EAX,-30
            mov DWORD PTR [RSP+16],EAX
            je .L_426658

            mov RSI,QWORD PTR [RBP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_4464b0

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_425988
.L_426977:

            mov DWORD PTR [RSP+24],R10D
            lea RSI,QWORD PTR [R14+408]
            mov R8D,15360
            jmp .L_426630
.L_42698e:

            test RAX,RAX
            js .L_4266c7

            mov RCX,RAX
            jmp .L_426734
.L_42699f:

            lea RDX,QWORD PTR [RIP+.L_42722e]
            mov RSI,RBX
            mov RDI,R12
            call .L_424150

            cmp EAX,-30
            mov DWORD PTR [RSP+16],EAX
            je .L_426658

            mov RSI,QWORD PTR [R13]
            mov RDI,QWORD PTR [RSP+8]
            call .L_446660

            mov R11D,DWORD PTR [RSP+16]
            jmp .L_4259c5
.L_4269d6:

            mov RDI,R9
            mov BYTE PTR [R11],0
            mov DWORD PTR [RSP+48],R10D
            mov DWORD PTR [RSP+40],R8D
            mov QWORD PTR [RSP+32],R9
            lea R15,QWORD PTR [RIP+.L_65bbc0]
            call strlen@PLT

            cmp BYTE PTR [RIP+.L_65bc02],1
            mov RSI,RAX
            mov R13,RAX
            mov R9,QWORD PTR [RSP+32]
            mov R8D,DWORD PTR [RSP+40]
            mov R10D,DWORD PTR [RSP+48]
            je .L_426a42

            mov EAX,4294967295
            mov ECX,128
            mov RDI,R15

            rep stosb BYTE PTR [RDI]

            lea RCX,QWORD PTR [RIP+.L_4279c0]
            xor EAX,EAX
            nop
            nop
.L_426a30:

            movzx EDX,BYTE PTR [RCX+RAX*1]
            mov BYTE PTR [R15+RDX*1],AL
            add RAX,1
            cmp RAX,64
            jne .L_426a30
.L_426a42:

            lea RDI,QWORD PTR [RSI+1]
            mov RAX,RSI
            mov DWORD PTR [RSP+60],R10D
            shr RAX,2
            mov DWORD PTR [RSP+40],R8D
            mov QWORD PTR [RSP+48],R9
            sub RDI,RAX
            mov QWORD PTR [RSP+32],RSI
            call malloc@PLT

            test RAX,RAX
            mov R11,RAX
            mov R8D,DWORD PTR [RSP+40]
            mov R10D,DWORD PTR [RSP+60]
            je .L_426cf1

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RAX
            mov R9,QWORD PTR [RSP+48]
            test RSI,RSI
            je .L_426b0e
.L_426a91:

            xor ESI,ESI
            xor EDX,EDX
.L_426a95:

            cmp ESI,3
            jg .L_426ad9
.L_426a9a:

            test R13,R13
            je .L_426ad9

            movzx EAX,BYTE PTR [R9]
            cmp AL,61
            je .L_426b5c

            cmp AL,95
            je .L_426b5c

            lea ECX,DWORD PTR [RAX-32]
            add R9,1
            sub R13,1
            cmp CL,95
            ja .L_426a95

            movzx EAX,BYTE PTR [R15+RAX*1]
            cmp AL,255
            je .L_426a95

            shl EDX,6
            add ESI,1
            or EDX,EAX
            cmp ESI,3
            jle .L_426a9a
.L_426ad9:

            mov EAX,4
            sub EAX,ESI
            lea ECX,DWORD PTR [RAX+RAX*2]
            add ECX,ECX
            shl EDX,CL
            cmp ESI,3
            je .L_426b77

            cmp ESI,4
            je .L_426b84

            cmp ESI,2
            je .L_426b7a
.L_426afe:

            lea EAX,DWORD PTR [RSI+RSI*2]
            sar EAX,2
            cdqe 
            add RDI,RAX
            test R13,R13
            jne .L_426a91
.L_426b0e:

            sub RDI,R11
            mov R15,QWORD PTR [RSP+24]
            mov RDX,R11
            mov RCX,RDI
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+48],R10D
            mov DWORD PTR [RSP+40],R8D
            mov QWORD PTR [RSP+32],R11
            mov RSI,R15
            call .L_4478f0

            mov RDI,R15
            call free@PLT

            mov R11,QWORD PTR [RSP+32]
            mov RDI,R11
            call free@PLT

            mov R8D,DWORD PTR [RSP+40]
            mov R10D,DWORD PTR [RSP+48]
            jmp .L_425933
.L_426b5c:

            mov EAX,4
            sub EAX,ESI
            lea ECX,DWORD PTR [RAX+RAX*2]
            add ECX,ECX
            shl EDX,CL
            cmp ESI,2
            je .L_426bd1

            cmp ESI,3
            jne .L_426b0e

            xor R13D,R13D
.L_426b77:

            mov BYTE PTR [RDI+1],DH
.L_426b7a:

            sar EDX,16
            mov BYTE PTR [RDI],DL
            jmp .L_426afe
.L_426b84:

            mov BYTE PTR [RDI+2],DL
            jmp .L_426b77
.L_426b89:

            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            mov RDI,R9
            xor EAX,EAX
            or RCX,-1
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_446730

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426bd1:

            sar EDX,16
            add RDI,1
            mov BYTE PTR [RDI-1],DL
            jmp .L_426b0e
.L_426be0:

            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            mov RDI,R9
            xor EAX,EAX
            or RCX,-1
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_446750

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426c28:

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],R8D
            call .L_445b30

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426c4e:

            mov DWORD PTR [RSP+32],R10D
            mov RDI,R9
            mov DWORD PTR [RSP+24],EAX
            or RCX,-1
            xor EAX,EAX
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_4463c0

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426c95:

            call __stack_chk_fail@PLT
.L_426c9a:

            mov DWORD PTR [RSP+32],R10D
            mov RDI,R9
            mov DWORD PTR [RSP+24],EAX
            or RCX,-1
            xor EAX,EAX
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RAX
            call .L_446050

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426ce1:

            lea ESI,DWORD PTR [RDX-65]
            cmp ESI,5
            ja .L_426d14

            sub EDX,55
            jmp .L_425d3b
.L_426cf1:

            mov RDI,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+40],R10D
            mov DWORD PTR [RSP+32],R8D
            call free@PLT

            mov R8D,DWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
            jmp .L_425933
.L_426d14:

            lea ESI,DWORD PTR [RDX-97]
            cmp ESI,5
            ja .L_425ce7

            sub EDX,87
            jmp .L_425d3b
.L_426d28:

            lea EDI,DWORD PTR [RSI-97]
            mov ECX,R15D
            cmp EDI,5
            ja .L_425d2d

            lea ECX,DWORD PTR [RSI-87]
            jmp .L_425d2d
.L_426d3f:

            mov DWORD PTR [RSP+32],R10D
            mov RDI,R9
            mov DWORD PTR [RSP+24],EAX
            or RCX,-1
            xor EAX,EAX
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [R14+304],RAX
            mov RSI,RAX
            call .L_446770

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426d8d:

            mov DWORD PTR [RSP+32],R10D
            mov RDI,R9
            mov DWORD PTR [RSP+24],EAX
            or RCX,-1
            xor EAX,EAX
            mov EDX,10

            repne scasb AL,BYTE PTR [RDI]

            mov RDI,R9
            mov RAX,RCX
            not RAX
            lea RSI,QWORD PTR [RAX-1]
            call .L_423070

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,EAX
            call .L_446630

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426dd3:

            mov R12,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_427710]
            or ESI,4294967295
            mov RBP,R14
            mov R14D,DWORD PTR [RSP+56]
            mov RDI,R12
            call .L_43f5d0

            mov R11D,4294967266
            jmp .L_425a61
.L_426dfd:

            mov R10D,R14D
            mov R14,RBX
            mov RBX,QWORD PTR [RSP+24]
.L_426e08:

            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_4273be]
            or ESI,4294967295
            xor EAX,EAX
            mov DWORD PTR [RSP+24],R10D
            call .L_43f5d0

            mov R8D,4294967276
            mov R10D,DWORD PTR [RSP+24]
            jmp .L_425933
.L_426e33:

            or RCX,-1
            mov QWORD PTR [RSP+40],R9
            mov QWORD PTR [RSP+32],R11
            mov RDI,R13

            repne scasb AL,BYTE PTR [RDI]

            mov RAX,RCX
            not RAX
            sub RAX,1
            cmp RAX,13
            jbe .L_425930

            lea RSI,QWORD PTR [RIP+.L_4273a2]
            mov EDX,13
            mov RDI,R13
            mov DWORD PTR [RSP+24],R10D
            call memcmp@PLT

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            jne .L_425930

            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R11
            lea RSI,QWORD PTR [R13+13]
            sub RCX,R15
            mov RDX,R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+24],EAX
            call .L_4478f0

            mov R8D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+32]
            jmp .L_425933
.L_426eb9:

            mov R9,R14
            mov RBP,QWORD PTR [RSP+24]
            mov R14,RBX
            mov R10D,R15D
            mov RBX,QWORD PTR [RSP+32]
            jmp .L_425f85
.L_426ed1:

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+16]
            mov R8,RAX
            lea RSI,QWORD PTR [RBX+320]
            sub R8,R15
            mov RCX,R15
            mov QWORD PTR [RSP+48],RAX
            call .L_423dc0

            test EAX,EAX
            jne .L_426f11

            mov RAX,QWORD PTR [RBX+328]
            mov ESI,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+48]
            mov DWORD PTR [RAX+24],ESI
            jmp .L_4264ba
.L_426f11:

            mov R14D,DWORD PTR [RSP+56]
            mov RBP,RBX
            jmp .L_426658
.L_426f1e:

            nop
            nop
.L_426f20:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_427738]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
            call .L_443f50

            cmp EAX,-30
            je .L_426fb2

            mov ESI,440
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_426fb9

            lea RAX,QWORD PTR [RIP+.L_423190]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_4254c0]
            lea R8,QWORD PTR [RIP+.L_423540]
            lea RCX,QWORD PTR [RIP+.L_423c20]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_423280]
            push 0
            lea RDX,QWORD PTR [RIP+.L_4271b6]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_423360]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_426fb2

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_426fb2:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_426fb9:

            lea RDX,QWORD PTR [RIP+.L_427441]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_426fb2
.L_426fd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426fe0:

            push RBX
            lea RCX,QWORD PTR [RIP+.L_427758]
            mov EDX,1
            mov ESI,14594245
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_427010

            mov RDI,RBX
            pop RBX
            jmp .L_426f20
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427010:

            pop RBX
            ret 
.L_427012:
          .string "Truncated tar archive"
.L_427028:
          .string "compat-2x"
.L_427032:
          .string "hdrcharset"
.L_42703d:
          .string "mac-ext"
.L_427045:
          .string "read_concatenated_archives"
.L_427060:
          .string "Line too long"
.L_42706e:
          .string "Can\'t allocate working buffer"
          .byte 0x75
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x72
          .byte 0x20
          .byte 0x0
.L_427093:
          .string "Out of memory"
.L_4270a1:
          .string "Malformed sparse map data"
.L_4270bb:
          .string "SCHILY.acl.access"
.L_4270cd:
          .string "SCHILY.acl.default"
.L_4270e0:
          .string "SCHILY.acl.ace"
.L_4270ef:
          .string "Unknown ACL type: %d"
.L_427104:
          .string "UTF-8"
.L_42710a:
          .string "Can\'t allocate memory for "
.L_427125:
          .string "%s %s"
.L_42712b:
          .string "Parse error: "
.L_427139:
          .string "Special header too large"
.L_427152:
          .string "No memory"
.L_42715c:
          .string "Can\'t allocate memory for %s"
.L_427179:
          .string "Tar entry has negative size"
.L_427195:
          .string "Tar entry size overflow"
.L_4271ad:
          .string "Linkname"
.L_4271b6:
          .string "tar"
.L_4271ba:
          .string "Damaged tar archive"
.L_4271ce:
          .string "Too many special headers"
.L_4271e7:
          .string "Solaris tar"
.L_4271f3:
          .string "Can\'t allocate memory for ACL"
.L_427211:
          .string "POSIX pax interchange format"
.L_42722e:
          .string "Pathname"
.L_427237:
          .string "GNU tar format"
.L_427246:
          .string "Uname"
.L_42724c:
          .string "Gname"
          .byte 0x75
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x72
          .byte 0x0
.L_427258:
          .string "POSIX ustar format"
.L_42726b:
          .string "tar (non-POSIX)"
.L_42727b:
          .zero 1
.L_42727c:
          .byte 0x47
          .byte 0x4e
          .byte 0x55
          .byte 0x2e
          .byte 0x73
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x0
.L_427287:
          .string "GNU.sparse.numblocks"
.L_42729c:
          .string "GNU.sparse.offset"
.L_4272ae:
          .string "GNU.sparse.numbytes"
.L_4272c2:
          .string "GNU.sparse.size"
.L_4272d2:
          .string "GNU.sparse.map"
.L_4272e1:
          .string "GNU.sparse.major"
.L_4272f2:
          .string "GNU.sparse.minor"
.L_427303:
          .string "GNU.sparse.realsize"
.L_427317:
          .string "LIBARCHIVE.creationtime"
          .byte 0x4c
          .byte 0x49
          .byte 0x42
          .byte 0x41
          .byte 0x52
          .byte 0x43
          .byte 0x48
          .byte 0x49
          .byte 0x56
          .byte 0x45
          .byte 0x2e
          .byte 0x78
          .byte 0x61
          .byte 0x74
          .byte 0x74
          .byte 0x72
          .byte 0x2e
          .byte 0x0
.L_427341:
          .string "SCHILY.devmajor"
.L_427351:
          .string "SCHILY.devminor"
.L_427361:
          .string "SCHILY.fflags"
.L_42736f:
          .string "SCHILY.dev"
.L_42737a:
          .string "SCHILY.ino"
.L_427385:
          .string "SCHILY.nlink"
.L_427392:
          .string "SCHILY.realsize"
.L_4273a2:
          .string "SCHILY.xattr."
.L_4273b0:
          .string "SUN.holesdata"
.L_4273be:
          .string "Parse error: SUN.holesdata"
.L_4273d9:
          .string "atime"
.L_4273df:
          .string "ctime"
.L_4273e5:
          .byte 0x67
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_4273e9:
          .string "gname"
.L_4273ef:
          .string "BINARY"
.L_4273f6:
          .string "ISO-IR 10646 2000 UTF-8"
.L_42740e:
          .string "linkpath"
.L_427417:
          .string "mtime"
.L_42741d:
          .byte 0x70
          .byte 0x61
          .byte 0x74
          .byte 0x68
          .byte 0x0
.L_427422:
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x0
.L_427427:
          .byte 0x75
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_42742b:
          .string "uname"
.L_427431:
          .string "GNU.sparse.name"
.L_427441:
          .string "Can\'t allocate tar data"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427460:
          .string "tar: hdrcharset option needs a character-set name"
          .zero 6
.L_427498:
          .string "%s can\'t be converted from %s to current locale."
          .zero 7
.L_4274d0:
          .string "Malformed Solaris ACL attribute (invalid digit)"
.L_427500:
          .string "Malformed Solaris ACL attribute (count too large)"
          .zero 6
.L_427538:
          .string "Malformed Solaris ACL attribute (unsupported type %o)"
          .zero 2
.L_427570:
          .string "Malformed Solaris ACL attribute (body overflow)"
.L_4275a0:
          .string "Malformed Solaris ACL attribute (unparsable)"
          .zero 3
.L_4275d0:
          .string "POSIX pax interchange format (Sun variant)"
          .zero 5
.L_427600:
          .string "Truncated tar archive detected while reading sparse file data"
          .zero 2
.L_427640:
          .string "Unrecognized GNU sparse file format"
          .zero 4
.L_427668:
          .string "Ignoring malformed pax extended attributes"
          .zero 5
.L_427698:
          .string "Rejecting pax extended attribute > 1MB"
          .zero 1
.L_4276c0:
          .string "Ignoring malformed pax extended attribute"
          .zero 6
.L_4276f0:
          .string "Invalid pax extended attributes"
.L_427710:
          .string "Non-regular file cannot be sparse"
          .zero 6
.L_427738:
          .string "archive_read_support_format_tar"
.L_427758:
          .string "archive_read_support_format_gnutar"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427788:
          .long .L_4242c0-.L_427788
          .long .L_424318-.L_427788
          .long .L_4243c8-.L_427788
          .long .L_424498-.L_427788
          .long .L_424430-.L_427788
          .long .L_424468-.L_427788
          .long .L_424470-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_424480-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_424310-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242cc-.L_427788
          .long .L_4242c0-.L_427788
.L_427818:
          .long .L_424755-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_4247be-.L_427818
          .long .L_42486d-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_42495a-.L_427818
          .long .L_424972-.L_427818
          .long .L_4248f8-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_42490b-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424972-.L_427818
          .long .L_424644-.L_427818
.L_4278f8:
          .long .L_425d58-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425c1a-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_426241-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_4261dc-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_426177-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_426100-.L_4278f8
          .long .L_426526-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_4264d8-.L_4278f8
          .long .L_4265a0-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425bcf-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425aa6-.L_4278f8
          .long .L_425930-.L_4278f8
          .long .L_425b41-.L_4278f8
          .zero 12
.L_4279c0:
          .byte 0x41
          .byte 0x42
          .byte 0x43
          .byte 0x44
          .byte 0x45
          .byte 0x46
          .byte 0x47
          .byte 0x48
          .byte 0x49
          .byte 0x4a
          .byte 0x4b
          .byte 0x4c
          .byte 0x4d
          .byte 0x4e
          .byte 0x4f
          .byte 0x50
          .byte 0x51
          .byte 0x52
          .byte 0x53
          .byte 0x54
          .byte 0x55
          .byte 0x56
          .byte 0x57
          .byte 0x58
          .byte 0x59
          .byte 0x5a
          .byte 0x61
          .byte 0x62
          .byte 0x63
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x67
          .byte 0x68
          .byte 0x69
          .byte 0x6a
          .byte 0x6b
          .byte 0x6c
          .byte 0x6d
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x71
          .byte 0x72
          .byte 0x73
          .byte 0x74
          .byte 0x75
          .byte 0x76
          .byte 0x77
          .byte 0x78
          .byte 0x79
          .byte 0x7a
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x2b
          .byte 0x2f
.L_427a00:

            movsx R8D,BYTE PTR [RDI]
            lea EAX,DWORD PTR [R8-48]
            cmp AL,9
            ja .L_427a68

            push RBP
            mov R11,RDI
            push RBX
.L_427a11:

            xor R9D,R9D
            mov EBX,EDX
            mov EBP,3435973837
            mov EDX,ECX
            nop
            nop
            nop
.L_427a20:

            lea R10D,DWORD PTR [R9+R8*1-48]
            mov EAX,EDX
            add R11,1
            mul EBP
            lea R9D,DWORD PTR [R10+R10*4]
            add R9D,R9D
            shr EDX,3
            cmp R9D,ECX
            jg .L_427a4c

            test EDX,EDX
            je .L_427a4c

            movsx R8D,BYTE PTR [R11]
            lea EAX,DWORD PTR [R8-48]
            cmp AL,9
            jbe .L_427a20
.L_427a4c:

            cmp RDI,R11
            je .L_427a7d

            cmp R10D,EBX
            jl .L_427a75

            cmp ECX,R10D
            jl .L_427a75
.L_427a5b:

            mov EAX,R10D
            mov QWORD PTR [RSI],R11
            pop RBX
.L_427a62:

            pop RBP
            ret 

            nop
            nop
            nop
            nop
.L_427a68:

            mov R10D,4294967295
            mov QWORD PTR [RSI],RDI
            mov EAX,R10D
            ret 
.L_427a75:

            mov R10D,4294967294
            jmp .L_427a5b
.L_427a7d:

            or R10D,4294967295
            jmp .L_427a5b
.L_427a83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427a90:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+24],0
            je .L_427ab3

            mov RDI,QWORD PTR [RBX+32]
            call free@PLT
.L_427ab3:

            lea RDI,QWORD PTR [RBX+48]
            call .L_434290

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_427adb:

            nop
            nop
            nop
            nop
            nop
.L_427ae0:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX]
            lea RSI,QWORD PTR [RAX+4]
            call .L_404a30

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            xor EAX,EAX
            pop RBX
            ret 
.L_427b0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_427b10:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDX
            sub RSP,32
.L_427b1e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX]
            cmp QWORD PTR [RBX+8],RAX
            jb .L_427b88
.L_427b41:

            mov QWORD PTR [R12],0
            mov QWORD PTR [RBP],0
            mov RAX,QWORD PTR [RBX+8]
            add RAX,4
            mov QWORD PTR [RCX],RAX
            mov QWORD PTR [RBX+16],0
            mov EAX,1
.L_427b69:

            mov RSI,QWORD PTR [RSP+24]
            xor RSI,QWORD PTR FS:[40]
            jne .L_427be4

            add RSP,32
.L_427b7d:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_427b88:

            lea RDX,QWORD PTR [RSP+16]
            mov ESI,1
            mov QWORD PTR [RSP+8],RCX
            call .L_4049e0

            mov RDX,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            test RDX,RDX
            js .L_427bd8

            je .L_427b41

            mov RDI,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RBX]
            sub RSI,RDI
            mov QWORD PTR [RCX],RDI
            cmp RSI,RDX
            cmovae RSI,RDX
            mov QWORD PTR [RBP],RSI
            mov QWORD PTR [R12],RAX
            xor EAX,EAX
            add QWORD PTR [RBX+8],RSI
            mov QWORD PTR [RBX+16],RSI
            jmp .L_427b69
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_427bd8:

            mov QWORD PTR [RBP],0
            mov EAX,EDX
            jmp .L_427b69
.L_427be4:

            call __stack_chk_fail@PLT
.L_427be9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427bf0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R15,RCX
            push RBP
            push RBX
            mov RBX,RSI
            mov R13,RDI
            sub RSP,24
.L_427c0a:

            movsx ESI,BYTE PTR [RDX]
            mov RDX,RBX
            mov QWORD PTR [RSP],RCX
            call memchr@PLT

            test RAX,RAX
            mov RCX,RAX
            je .L_427cea

            movsx EBP,BYTE PTR [RAX]
            lea R10,QWORD PTR [R14+R15*1]
            lea R8,QWORD PTR [R14+1]
            lea R12,QWORD PTR [RAX+1]
            add R13,RBX
            cmp R10,R8
            mov RBX,R12
            mov EAX,EBP
            jbe .L_427d08

            cmp R13,R12
            jbe .L_427d08

            mov R15D,EBP
            mov EDI,1
            jmp .L_427c65
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427c60:

            cmp R10,R8
            jbe .L_427c8b
.L_427c65:

            movsx EDX,BYTE PTR [RBX]
            movsx R11D,BYTE PTR [R8]
            mov ESI,EDX
            xor EBP,EDX
            xor R15D,R11D
            cmp SIL,R11B
            sete DL
            add RBX,1
            add R8,1
            movzx EDX,DL
            and EDI,EDX
            cmp R13,RBX
            ja .L_427c60
.L_427c8b:

            cmp R10,R8
            ja .L_427d00

            test EDI,EDI
            jne .L_427cea

            cmp R13,RBX
            jbe .L_427d00

            mov RDI,QWORD PTR [RSP]
            sub RDI,1
            mov QWORD PTR [RSP+8],RDI
            jmp .L_427cc2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427cb0:

            add RBX,1
            cmp R13,RBX
            je .L_427d00

            movzx EAX,BYTE PTR [R12]
            add R12,1
.L_427cc2:

            xor AL,BYTE PTR [RBX]
            movsx EAX,AL
            xor EBP,EAX
            cmp EBP,R15D
            jne .L_427cb0

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,R14
            mov RDI,R12
            mov QWORD PTR [RSP],R12
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP]
            jne .L_427cb0
.L_427cea:

            add RSP,24
.L_427cee:

            mov RAX,RCX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427d00:

            xor ECX,ECX
            jmp .L_427cea
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427d08:

            cmp R10,R8
            mov EAX,0
            cmova RCX,RAX
            jmp .L_427cea
.L_427d16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427d20:

            push R12
            push RBP
            push RBX
            sub RSP,16
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp DWORD PTR [RDI],1129464151
            je .L_427d60
.L_427d40:

            mov EBP,99999
.L_427d45:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_427dd0

            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
.L_427d60:

            cmp BYTE PTR [RDI+4],47
            jne .L_427d40

            cmp DWORD PTR [RDI+5],221261361
            lea RAX,QWORD PTR [RDI+5]
            je .L_427dc0
.L_427d73:

            movsx R12D,BYTE PTR [RDI+5]
            mov EBP,999999
            lea EAX,DWORD PTR [R12-48]
            cmp AL,8
            ja .L_427d45

            cmp BYTE PTR [RDI+6],46
            jne .L_427d45

            lea RBX,QWORD PTR [RDI+7]
            mov RSI,RSP
            mov EDX,10
            mov RDI,RBX
            call strtol@PLT

            cmp RBX,QWORD PTR [RSP]
            jae .L_427d45

            sub R12D,48
            lea RAX,QWORD PTR [RAX+RAX*4]
            imul R12D,R12D,10000
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea EBP,DWORD PTR [R12+RAX*4]
            jmp .L_427d45
          .byte 0x90
.L_427dc0:

            cmp BYTE PTR [RAX+4],10
            mov EBP,10000
            jne .L_427d73

            jmp .L_427d45
.L_427dd0:

            call __stack_chk_fail@PLT
.L_427dd5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_427de0:

            sub RSP,24
.L_427de4:

            mov ESI,12
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_4049e0

            test RAX,RAX
            je .L_427e40

            cmp QWORD PTR [RSP],11
            jle .L_427e40

            mov RDI,RAX
            call .L_427d20

            sub EAX,1
            cmp EAX,9999
            ja .L_427e40

            mov EAX,64
.L_427e24:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_427e47

            add RSP,24
.L_427e38:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427e40:

            mov EAX,4294967295
            jmp .L_427e24
.L_427e47:

            call __stack_chk_fail@PLT
.L_427e4c:

            nop
            nop
            nop
            nop
.L_427e50:

            push R12
            pxor XMM0,XMM0
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,80
.L_427e62:

            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+64],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            call __ctype_b_loc@PLT

            mov RCX,QWORD PTR [RAX]
            mov RAX,RBX
            jmp .L_427ea5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427ea0:

            mov QWORD PTR [RSP+8],RAX
.L_427ea5:

            mov RDI,RAX
            add RAX,1
            movzx EDX,BYTE PTR [RDI]
            test BYTE PTR [RCX+RDX*2+1],32
            jne .L_427ea0

            lea RBX,QWORD PTR [RSP+8]
            mov ECX,4095
            mov EDX,1583
            mov RSI,RBX
            call .L_427a00

            test EAX,EAX
            mov DWORD PTR [RSP+36],EAX
            js .L_42801e

            mov RAX,QWORD PTR [RSP+8]
            mov R12,-1
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],45
            jne .L_427ffe

            mov ECX,12
            mov EDX,1
            call .L_427a00

            test EAX,EAX
            mov DWORD PTR [RSP+32],EAX
            js .L_427ff9

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],45
            jne .L_427ffe

            mov ECX,31
            mov EDX,1
            call .L_427a00

            test EAX,EAX
            mov DWORD PTR [RSP+28],EAX
            js .L_427ff9

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],84
            jne .L_427ffe

            xor EDX,EDX
            mov ECX,23
            call .L_427a00

            test EAX,EAX
            mov DWORD PTR [RSP+24],EAX
            js .L_427ff9

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],58
            jne .L_427ffe

            xor EDX,EDX
            mov ECX,59
            call .L_427a00

            test EAX,EAX
            mov DWORD PTR [RSP+20],EAX
            js .L_42801e

            mov RAX,QWORD PTR [RSP+8]
            mov R12,-1
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],58
            jne .L_427ffe

            xor EDX,EDX
            mov ECX,60
            call .L_427a00

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            js .L_427ff9

            mov RAX,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+8],RDI
            cmp BYTE PTR [RAX],90
            jne .L_427ffe

            lea RDI,QWORD PTR [RSP+16]
            sub DWORD PTR [RSP+36],1900
            sub DWORD PTR [RSP+32],1
            call timegm@PLT

            mov R12,RAX
.L_427ff9:

            mov RDI,QWORD PTR [RSP+8]
.L_427ffe:

            mov RSI,QWORD PTR [RSP+72]
            xor RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RBP],RDI
            mov RAX,R12
            jne .L_42802c

            add RSP,80
.L_428019:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42801e:

            mov RDI,QWORD PTR [RSP+8]
            mov R12,-1
            jmp .L_427ffe
.L_42802c:

            call __stack_chk_fail@PLT
.L_428031:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428040:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
.L_428051:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+56],RSI
            mov R12,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_428080:

            mov RDX,QWORD PTR [RSP+32]
            mov ESI,12
            mov RDI,R15
            call .L_4049e0

            mov RSI,QWORD PTR [RSP+72]
            mov RBP,RAX
            test RSI,RSI
            js .L_4285b0

            test RAX,RAX
            je .L_428609

            lea RDX,QWORD PTR [RIP+.L_428848]
            mov ECX,4
            mov RDI,RAX
            call .L_427bf0

            test RAX,RAX
            je .L_4285b0

            add RAX,4
            mov RBX,RAX
            je .L_4285b0

            sub RAX,RBP
            mov RDI,RBP
            mov QWORD PTR [RSP],RAX
            call .L_427d20

            cmp EAX,10000
            mov R13D,EAX
            ja .L_428610

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_428830]
            mov ECX,17
            mov RDI,RBP
            mov QWORD PTR [RSP+80],0
            call .L_427bf0

            test RAX,RAX
            je .L_428620

            lea RSI,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RAX+17]
            mov EDX,10
            mov QWORD PTR [RSP+16],RSI
            call strtol@PLT

            mov RDX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+8],RAX
            test RDX,RDX
            mov QWORD PTR [RSP+24],RDX
            je .L_428620

            call __ctype_b_loc@PLT

            mov RDX,QWORD PTR [RSP+24]
            mov R14,RAX
            mov RAX,QWORD PTR [RAX]
            movzx EDX,BYTE PTR [RDX]
            test BYTE PTR [RAX+RDX*2+1],32
            je .L_428620

            cmp QWORD PTR [RSP+8],0
            js .L_428620

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_428818]
            mov ECX,12
            mov RDI,RBP
            mov QWORD PTR [RSP+80],0
            call .L_427bf0

            test RAX,RAX
            je .L_42863d

            mov RSI,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RAX+12]
            call .L_427e50

            mov RCX,RAX
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [RSP+80]
            test RAX,RAX
            je .L_42863d

            movzx EDX,BYTE PTR [RAX]
            mov RAX,QWORD PTR [R14]
            test BYTE PTR [RAX+RDX*2+1],32
            je .L_42863d

            cmp RCX,-1
            je .L_42863d

            cmp DWORD PTR [R12+40],R13D
            mov DWORD PTR [R15+16],983040
            je .L_42821f

            mov EAX,R13D
            mov EDX,3518437209
            mov ECX,R13D
            mul EDX
            lea RDI,QWORD PTR [R12+48]
            lea RSI,QWORD PTR [RIP+.L_42876e]
            shr EDX,13
            imul EAX,EDX,10000
            sub ECX,EAX
            xor EAX,EAX
            call .L_43ee20

            mov DWORD PTR [R12+40],R13D
.L_42821f:

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_428808]
            mov ECX,12
            mov RDI,RBP
            call .L_427bf0

            test RAX,RAX
            je .L_4282c0

            add RAX,12
            cmp RBX,RAX
            jbe .L_428263

            mov RCX,QWORD PTR [R14]
            jmp .L_428259
          .byte 0x66
          .byte 0x90
.L_428250:

            add RAX,1
            cmp RBX,RAX
            je .L_428263
.L_428259:

            movzx EDX,BYTE PTR [RAX]
            test BYTE PTR [RCX+RDX*2+1],32
            jne .L_428250
.L_428263:

            lea RDX,QWORD PTR [RAX+8]
            cmp RBX,RDX
            jb .L_4282c0

            movabs RDI,7305808869231650162
            cmp QWORD PTR [RAX],RDI
            je .L_428310

            movabs RDI,8027224784753549687
            cmp QWORD PTR [RAX],RDI
            je .L_4282c0

            movabs RDI,7022344802737087853
            cmp QWORD PTR [RAX],RDI
            je .L_4282c0

            cmp DWORD PTR [RAX],1970365810
            je .L_42858f
.L_4282a9:

            movabs RDI,7310308045059482994
            cmp QWORD PTR [RAX],RDI
            je .L_4285ea

            nop
            nop
            nop
            nop
.L_4282c0:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12],RAX
.L_4282d2:

            mov RSI,QWORD PTR [RSP]
            mov RDI,R15
            call .L_404a30
.L_4282de:

            mov RAX,QWORD PTR [R15+2472]
            mov RDI,R15
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX]
            lea RSI,QWORD PTR [RAX+4]
            call .L_404a30

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            jmp .L_428080
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428310:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12+8],0
            mov DWORD PTR [RSP+52],3
            mov QWORD PTR [R12],RAX
.L_42832a:

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4287f0]
            mov ECX,18
            mov RDI,RBP
            call .L_427bf0

            test RAX,RAX
            je .L_4282d2

            lea R8,QWORD PTR [RAX+18]
            cmp RBX,R8
            jbe .L_42836c

            mov RDX,QWORD PTR [R14]
            jmp .L_428361
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428358:

            add R8,1
            cmp RBX,R8
            je .L_42836c
.L_428361:

            movzx EAX,BYTE PTR [R8]
            test BYTE PTR [RDX+RAX*2+1],32
            jne .L_428358
.L_42836c:

            mov RSI,RBX
            lea RDX,QWORD PTR [RIP+.L_428781]
            mov ECX,3
            sub RSI,R8
            mov RDI,R8
            mov QWORD PTR [RSP+40],R8
            call .L_427bf0

            test RAX,RAX
            mov R13,RAX
            je .L_4282d2

            sub RBX,RAX
            mov ESI,10
            mov RDI,RAX
            mov RDX,RBX
            call memchr@PLT

            test RAX,RAX
            je .L_4282d2

            lea RBX,QWORD PTR [R13+3]
            mov R8,QWORD PTR [RSP+40]
            cmp RAX,RBX
            jbe .L_4283e4

            mov RSI,QWORD PTR [R14]
            jmp .L_4283d9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4283d0:

            sub RAX,1
            cmp RBX,RAX
            je .L_4283e4
.L_4283d9:

            movzx EDX,BYTE PTR [RAX-1]
            test BYTE PTR [RSI+RDX*2+1],32
            jne .L_4283d0
.L_4283e4:

            cmp DWORD PTR [R8],1701603686
            jne .L_428518
.L_4283f1:

            mov R13,RAX
            sub R13,RBX
            je .L_4282d2

            cmp BYTE PTR [RAX-1],47
            je .L_4282d2

            lea RAX,QWORD PTR [R13+1]
            cmp RAX,QWORD PTR [R12+24]
            mov RDI,QWORD PTR [R12+32]
            ja .L_428570
.L_42841b:

            mov RSI,RBX
            mov RDX,R13
            call memcpy@PLT

            mov RAX,QWORD PTR [R12+32]
            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4287d0]
            mov ECX,16
            mov RDI,RBP
            mov BYTE PTR [RAX+R13*1],0
            mov RBX,QWORD PTR [R12+32]
            mov QWORD PTR [RSP+80],0
            call .L_427bf0

            test RAX,RAX
            je .L_428646

            mov RSI,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RAX+16]
            call .L_427e50

            mov RBP,RAX
            mov RAX,QWORD PTR [RSP+80]
            test RAX,RAX
            je .L_428646

            movzx EDX,BYTE PTR [RAX]
            mov RAX,QWORD PTR [R14]
            test BYTE PTR [RAX+RDX*2+1],32
            je .L_428646

            cmp RBP,-1
            cmove RBP,QWORD PTR [RSP+24]
.L_428499:

            mov RSI,QWORD PTR [RSP]
            mov RDI,R15
            call .L_404a30

            mov EAX,DWORD PTR [RSP+52]
            cmp EAX,3
            je .L_4284b7

            cmp EAX,5
            jne .L_4282de
.L_4284b7:

            mov R14,QWORD PTR [RSP+56]
            mov ESI,32768
            mov RDI,R14
            call .L_445ae0

            mov RSI,RBX
            mov RDI,R14
            call .L_446660

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R14
            call .L_446770

            mov ESI,420
            mov RDI,R14
            call .L_4466e0

            mov RSI,QWORD PTR [RSP+24]
            xor EDX,EDX
            mov RDI,R14
            call .L_446330

            xor EDX,EDX
            mov RSI,RBP
            mov RDI,R14
            call .L_4465a0

            xor EAX,EAX
            jmp .L_4285cb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428518:

            cmp DWORD PTR [R8],1886680168
            je .L_428538

            cmp WORD PTR [R8],29798
            jne .L_4282d2

            cmp BYTE PTR [R8+2],112
            jne .L_4282d2
.L_428538:

            cmp RAX,RBX
            jbe .L_4283f1

            cmp BYTE PTR [R13+3],47
            lea RBX,QWORD PTR [R13+4]
            jne .L_428566

            jmp .L_4283f1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428558:

            add RBX,1
            cmp BYTE PTR [RBX-1],47
            je .L_4283f1
.L_428566:

            cmp RAX,RBX
            ja .L_428558

            jmp .L_4283f1
.L_428570:

            lea RSI,QWORD PTR [R13+64]
            and RSI,-64
            mov QWORD PTR [R12+24],RSI
            call realloc@PLT

            mov RDI,RAX
            mov QWORD PTR [R12+32],RAX
            jmp .L_42841b
.L_42858f:

            cmp WORD PTR [RAX+4],29541
            jne .L_4282a9

            cmp BYTE PTR [RAX+6],116
            jne .L_4282a9

            jmp .L_4282c0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4285b0:

            lea RDX,QWORD PTR [RIP+.L_42871e]
.L_4285b7:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R15
            call .L_43f5d0

            mov EAX,4294967266
.L_4285cb:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            jne .L_428650

            add RSP,104
.L_4285df:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4285ea:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12+8],0
            mov DWORD PTR [RSP+52],5
            mov QWORD PTR [R12],RAX
            jmp .L_42832a
.L_428609:

            mov EAX,1
            jmp .L_4285cb
.L_428610:

            lea RDX,QWORD PTR [RIP+.L_428730]
            jmp .L_4285b7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428620:

            lea RDX,QWORD PTR [RIP+.L_42874b]
.L_428627:

            xor EAX,EAX
            mov ESI,22
            mov RDI,R15
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4285cb
.L_42863d:

            lea RDX,QWORD PTR [RIP+.L_42875e]
            jmp .L_428627
.L_428646:

            mov RBP,QWORD PTR [RSP+24]
            jmp .L_428499
.L_428650:

            call __stack_chk_fail@PLT
.L_428655:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428660:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_4287a8]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
            call .L_443f50

            cmp EAX,-30
            je .L_4286f4

            mov ESI,72
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_4286fb

            lea RAX,QWORD PTR [RIP+.L_427a90]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_428040]
            lea RCX,QWORD PTR [RIP+.L_427de0]
            lea RDX,QWORD PTR [RIP+.L_4287a2]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_427ae0]
            push 0
            xor R8D,R8D
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_427b10]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_4286f4

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_4286f4:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_4286fb:

            lea RDX,QWORD PTR [RIP+.L_428789]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4286f4
.L_428718:
          .byte 0x31
          .byte 0x2e
          .byte 0x30
          .byte 0xd
          .byte 0xa
          .byte 0x0
.L_42871e:
          .string "Bad record header"
.L_428730:
          .string "Unsupported record version"
.L_42874b:
          .string "Bad content length"
.L_42875e:
          .string "Bad record time"
.L_42876e:
          .string "WARC/%u.%u"
          .byte 0x72
          .byte 0x65
          .byte 0x71
          .byte 0x75
          .byte 0x65
          .byte 0x73
          .byte 0x74
          .byte 0x0
.L_428781:
          .string "://"
          .byte 0x66
          .byte 0x74
          .byte 0x70
          .byte 0x0
.L_428789:
          .string "Can\'t allocate warc data"
.L_4287a2:
          .string "warc"
          .byte 0x90
.L_4287a8:
          .string "archive_read_support_format_warc"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4287d0:
          .string "\r\nLast-Modified:"
          .zero 15
.L_4287f0:
          .string "\r\nWARC-Target-URI:"
          .zero 5
.L_428808:
          .string "\r\nWARC-Type:"
          .zero 3
.L_428818:
          .string "\r\nWARC-Date:"
          .zero 11
.L_428830:
          .string "\r\nContent-Length:"
          .byte 0x57
          .byte 0x41
          .byte 0x52
          .byte 0x43
          .byte 0x2f
          .byte 0x0
.L_428848:

            or EAX,658698
            nop
            nop
            nop
.L_428850:

            xor EAX,EAX
            ret 
.L_428853:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428860:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_428867:

            add RDI,152
            call .L_434290

            lea RDI,QWORD PTR [R12+176]
            call .L_434290

            lea RDI,QWORD PTR [R12+224]
            call .L_434290

            lea RDI,QWORD PTR [R12+256]
            call .L_434290

            lea RDI,QWORD PTR [R12+360]
            call .L_434290

            mov RBX,QWORD PTR [R12+384]
            test RBX,RBX
            je .L_4288d4

            nop
            nop
            nop
            nop
.L_4288b8:

            mov RBP,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RBX+8]
            call .L_434290

            mov RDI,RBX
            mov RBX,RBP
            call free@PLT

            test RBP,RBP
            jne .L_4288b8
.L_4288d4:

            pop RBX
.L_4288d5:

            mov RDI,R12
            pop RBP
            pop R12
            jmp free@PLT
.L_4288e0:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_4288eb:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov ESI,DWORD PTR [RBX+216]
            test ESI,ESI
            jne .L_428a18
.L_428903:

            xor R13D,R13D
.L_428906:

            mov ECX,DWORD PTR [RBX+304]
            test ECX,ECX
            jne .L_4289e0
.L_428914:

            mov EDX,DWORD PTR [RBX+448]
            test EDX,EDX
            je .L_42892a

            lea RDI,QWORD PTR [RBX+312]
            call lzma_end@PLT
.L_42892a:

            mov RDI,QWORD PTR [RBX+544]
            test RDI,RDI
            je .L_428950

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428940:

            mov RBP,QWORD PTR [RDI]
            call free@PLT

            test RBP,RBP
            mov RDI,RBP
            jne .L_428940
.L_428950:

            mov EAX,DWORD PTR [RBX+532]
            test EAX,EAX
            jle .L_4289a9

            xor R14D,R14D
            xor EBP,EBP
            nop
.L_428960:

            mov RAX,QWORD PTR [RBX+520]
            add EBP,1
            mov RDI,QWORD PTR [RAX+R14*1]
            add R14,8
            call .L_428860

            cmp DWORD PTR [RBX+532],EBP
            jg .L_428960

            mov RBP,QWORD PTR [RBX+48]
            test RBP,RBP
            je .L_4289b2

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428990:

            mov RAX,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RBP+8]
            mov QWORD PTR [RBX+48],RAX
            call .L_434290

            mov RDI,RBP
            call free@PLT
.L_4289a9:

            mov RBP,QWORD PTR [RBX+48]
            test RBP,RBP
            jne .L_428990
.L_4289b2:

            mov RDI,QWORD PTR [RBX+32]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [R12+2472]
            mov QWORD PTR [RAX],0
            mov EAX,R13D
            pop RBX
.L_4289d6:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_4289e0:

            lea RDI,QWORD PTR [RBX+224]
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            je .L_428914

            lea RDX,QWORD PTR [RIP+.L_42d8b0]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov R13D,4294967266
            call .L_43f5d0

            jmp .L_428914
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428a18:

            lea RDI,QWORD PTR [RBX+104]
            call inflateEnd@PLT

            test EAX,EAX
            je .L_428903

            lea RDX,QWORD PTR [RIP+.L_42d888]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov R13D,4294967266
            call .L_43f5d0

            jmp .L_428906
.L_428a4a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_428a50:

            push RBP
            push RBX
            sub RSP,8
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov EBP,DWORD PTR [RBX+24]
            test EBP,EBP
            je .L_428a78

            mov EBP,1
.L_428a6c:

            add RSP,8
            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428a78:

            mov RSI,QWORD PTR [RBX+576]
            add RSI,QWORD PTR [RBX+568]
            call .L_404a30

            test RAX,RAX
            js .L_428aa7

            add QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+576],0
            add RSP,8
            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
.L_428aa7:

            mov EBP,4294967266
            jmp .L_428a6c
.L_428aae:

            nop
            nop
.L_428ab0:

            sub RSP,8
            xor EDX,EDX
            mov ESI,28
            call .L_4049e0

            test RAX,RAX
            je .L_428aff

            mov RDX,RAX
            xor EAX,EAX
            cmp DWORD PTR [RDX],561144184
            je .L_428ae0
.L_428ad2:

            add RSP,8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428ae0:

            cmp WORD PTR [RDX+4],7168
            jne .L_428ad2

            cmp WORD PTR [RDX+6],256
            jne .L_428ad2

            mov EAX,DWORD PTR [RDX+24]
            bswap EAX
            cmp EAX,3
            sbb EAX,EAX
            and EAX,96
            jmp .L_428ad2
.L_428aff:

            mov EAX,4294967295
            jmp .L_428ad2
.L_428b06:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428b10:

            push RBP
            push RBX
            sub RSP,8
.L_428b16:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp DWORD PTR [RBX+40],77
            ja .L_428b81

            mov EAX,DWORD PTR [RBX+40]
            lea RDX,QWORD PTR [RIP+.L_42e1c0]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428b40:

            mov RBP,QWORD PTR [RBX+48]
            test RBP,RBP
            je .L_428b81

            test RSI,RSI
            je .L_428b81

            mov RDI,QWORD PTR [RBP+8]
            call strcmp@PLT

            test EAX,EAX
            jne .L_428b81

            mov RAX,QWORD PTR [RBP]
            lea RDI,QWORD PTR [RBP+8]
            mov QWORD PTR [RBX+48],RAX
            call .L_434290

            mov RDI,RBP
            call free@PLT

            cmp QWORD PTR [RBX+48],0
            jne .L_428b81

            mov EAX,DWORD PTR [RBX+44]
            mov DWORD PTR [RBX+40],EAX
.L_428b81:

            add RSP,8
.L_428b85:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428b90:

            lea RDI,QWORD PTR [RIP+.L_42dea5]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
.L_428bb0:

            lea RDI,QWORD PTR [RIP+.L_42de9e]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
.L_428bd0:

            lea RDI,QWORD PTR [RIP+.L_42de96]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
.L_428bf0:

            lea RDI,QWORD PTR [RIP+.L_42de8f]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428c20:

            lea RDI,QWORD PTR [RIP+.L_42de85]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428c50:

            lea RDI,QWORD PTR [RIP+.L_42de7e]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428c80:

            lea RDI,QWORD PTR [RIP+.L_42de72]
            mov ECX,12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428cb0:

            lea RDI,QWORD PTR [RIP+.L_42de6c]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428ce0:

            lea RDI,QWORD PTR [RIP+.L_42de62]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428d10:

            lea RDI,QWORD PTR [RIP+.L_42de56]
            mov ECX,12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428d40:

            lea RDI,QWORD PTR [RIP+.L_42de4c]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428d70:

            lea RDI,QWORD PTR [RIP+.L_42de42]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428da0:

            lea RDI,QWORD PTR [RIP+.L_42de3a]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428dd0:

            lea RDI,QWORD PTR [RIP+.L_42de33]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428e00:

            lea RDI,QWORD PTR [RIP+.L_42de28]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428e30:

            lea RDI,QWORD PTR [RIP+.L_42de1e]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428e60:

            lea RDI,QWORD PTR [RIP+.L_42de12]
            mov ECX,12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428e90:

            lea RDI,QWORD PTR [RIP+.L_42de09]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428ec0:

            lea RDI,QWORD PTR [RIP+.L_42de00]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428ef0:

            lea RDI,QWORD PTR [RIP+.L_42ddf1]
            mov ECX,15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],56
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428f20:

            lea RDI,QWORD PTR [RIP+.L_42ddec]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428f50:

            lea RDI,QWORD PTR [RIP+.L_42dddd]
            mov ECX,15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428f80:

            lea RDI,QWORD PTR [RIP+.L_42ddce]
            mov ECX,15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428fb0:

            lea RDI,QWORD PTR [RIP+.L_42ddc1]
            mov ECX,13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428fe0:

            lea RDI,QWORD PTR [RIP+.L_42ddb1]
            mov ECX,16

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429010:

            lea RDI,QWORD PTR [RIP+.L_42dda2]
            mov ECX,15

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429040:

            lea RDI,QWORD PTR [RIP+.L_42dd95]
            mov ECX,13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429070:

            lea RDI,QWORD PTR [RIP+.L_42dd8a]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4290a0:

            lea RDI,QWORD PTR [RIP+.L_42dd7f]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4290d0:

            lea RDI,QWORD PTR [RIP+.L_42dd71]
            mov ECX,14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429100:

            lea RDI,QWORD PTR [RIP+.L_42dd66]
            mov ECX,11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],45
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429130:

            lea RDI,QWORD PTR [RIP+.L_42dd60]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429160:

            lea RDI,QWORD PTR [RIP+.L_42dd52]
            mov ECX,14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],41
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429190:

            lea RDI,QWORD PTR [RIP+.L_42dd4b]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],41
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4291c0:

            lea RDI,QWORD PTR [RIP+.L_42dd43]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],41
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4291f0:

            lea RDI,QWORD PTR [RIP+.L_42dd3f]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429220:

            lea RDI,QWORD PTR [RIP+.L_42dcdd]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429250:

            lea RDI,QWORD PTR [RIP+.L_42dd3a]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429280:

            lea RDI,QWORD PTR [RIP+.L_42dd35]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4292b0:

            lea RDI,QWORD PTR [RIP+.L_42dd2f]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4292e0:

            lea RDI,QWORD PTR [RIP+.L_42dd26]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429310:

            lea RDI,QWORD PTR [RIP+.L_42dd20]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],33
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429340:

            lea RDI,QWORD PTR [RIP+.L_42dd1a]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],33
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429370:

            lea RDI,QWORD PTR [RIP+.L_42dd13]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4293a0:

            lea RDI,QWORD PTR [RIP+.L_42dd0e]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4293d0:

            lea RDI,QWORD PTR [RIP+.L_42dd0a]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429400:

            lea RDI,QWORD PTR [RIP+.L_42dd05]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429430:

            lea RDI,QWORD PTR [RIP+.L_42dd01]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429460:

            lea RDI,QWORD PTR [RIP+.L_42dcfb]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429490:

            lea RDI,QWORD PTR [RIP+.L_42dcf5]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4294c0:

            lea RDI,QWORD PTR [RIP+.L_42dcef]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4294f0:

            lea RDI,QWORD PTR [RIP+.L_42dce9]
            mov ECX,6

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429520:

            lea RDI,QWORD PTR [RIP+.L_42dce2]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],16
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429550:

            lea RDI,QWORD PTR [RIP+.L_42dcdd]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],16
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429580:

            lea RDI,QWORD PTR [RIP+.L_42dcbf]
            mov ECX,19

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],16
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4295b0:

            lea RDI,QWORD PTR [RIP+.L_42dcad]
            mov ECX,18

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],16
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4295e0:

            lea RDI,QWORD PTR [RIP+.L_42dca4]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],16
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429610:

            lea RDI,QWORD PTR [RIP+.L_42dc8e]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],16
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429640:

            lea RDI,QWORD PTR [RIP+.L_42dc87]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],16
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429670:

            lea RDI,QWORD PTR [RIP+.L_42dc9d]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],16
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4296a0:

            lea RDI,QWORD PTR [RIP+.L_42dcda]
            mov ECX,3

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            mov QWORD PTR [RBX+512],0
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4296d8:

            lea RDI,QWORD PTR [RIP+.L_42dcd2]
            mov ECX,8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],8
            jmp .L_428b81
          .byte 0x90
.L_429700:

            lea RDI,QWORD PTR [RIP+.L_42dcbf]
            mov ECX,19

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],8
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429730:

            lea RDI,QWORD PTR [RIP+.L_42dcad]
            mov ECX,18

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],8
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429760:

            lea RDI,QWORD PTR [RIP+.L_42dca4]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],8
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429790:

            lea RDI,QWORD PTR [RIP+.L_42dc8e]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],8
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4297c0:

            lea RDI,QWORD PTR [RIP+.L_42dc87]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],8
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4297f0:

            lea RDI,QWORD PTR [RIP+.L_42dc9d]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],8
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429820:

            lea RDI,QWORD PTR [RIP+.L_42dc98]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],7
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429850:

            lea RDI,QWORD PTR [RIP+.L_42dc93]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov RDX,QWORD PTR [RBX+504]
            mov RAX,QWORD PTR [RDX+16]
            test RAX,RAX
            je .L_4299b7

            mov EDX,DWORD PTR [RDX+288]
            and EDX,61440
            cmp EDX,16384
            jne .L_429897

            add DWORD PTR [RAX+24],1
.L_429897:

            mov QWORD PTR [RBX+504],RAX
            jmp .L_428b81
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4298a8:

            lea RDI,QWORD PTR [RIP+.L_42dc8e]
            mov ECX,5

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],4
            jmp .L_428b81
          .byte 0x90
.L_4298d0:

            lea RDI,QWORD PTR [RIP+.L_42dc87]
            mov ECX,7

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],4
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429900:

            lea RDI,QWORD PTR [RIP+.L_42dc7e]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],2
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429930:

            lea RDI,QWORD PTR [RIP+.L_42dc70]
            mov ECX,14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],2
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429960:

            lea RDI,QWORD PTR [RIP+.L_42dc6c]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],1
            jmp .L_428b81
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429990:

            lea RDI,QWORD PTR [RIP+.L_42dc68]
            mov ECX,4

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_428b81

            mov DWORD PTR [RBX+40],0
            jmp .L_428b81
.L_4299b7:

            mov QWORD PTR [RBX+504],0
            mov DWORD PTR [RBX+40],2
            jmp .L_428b81
.L_4299ce:

            nop
            nop
.L_4299d0:

            cmp ESI,1
            mov DWORD PTR [RDI],ESI
            je .L_4299f8

            cmp ESI,2
            jne .L_4299f0

            add RDI,8
            jmp QWORD PTR [RIP+.L_65ac80]
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4299f0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4299f8:

            add RDI,16
            jmp QWORD PTR [RIP+.L_65acb0]
.L_429a02:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429a10:

            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_429a38

            cmp EAX,2
            jne .L_429a30

            add RDI,8
            jmp QWORD PTR [RIP+.L_65ac88]
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429a30:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429a38:

            add RDI,16
            jmp QWORD PTR [RIP+.L_65acb8]
.L_429a42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429a50:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov ESI,1
            push RBP
            push RBX
            mov R15,RDI
            mov R13,RCX
            mov R12,R8
            sub RSP,56
.L_429a6f:

            mov QWORD PTR [RSP+8],RDX
            lea RDX,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_4049e0

            mov RBX,QWORD PTR [RSP+32]
            test RBX,RBX
            js .L_429c30

            je .L_429e2f

            cmp RBX,R12
            mov R10,RAX
            mov RBP,RBX
            jbe .L_429ab8

            mov RBX,R12
            mov QWORD PTR [RSP+32],R12
            mov RBP,R12
.L_429ab8:

            mov RDI,QWORD PTR [R14]
            mov RAX,QWORD PTR [R15+2472]
            mov QWORD PTR [R13],RBP
            test RDI,RDI
            mov R12,QWORD PTR [RAX]
            je .L_429b68

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RAX]
            mov EAX,DWORD PTR [R12+96]
            cmp EAX,2
            je .L_429b8c
.L_429ae8:

            ja .L_429c58

            cmp EAX,1
            jne .L_429d38

            mov QWORD PTR [R12+128],RDI
            lea RDI,QWORD PTR [R12+104]
            mov QWORD PTR [R12+104],R10
            mov DWORD PTR [R12+136],EDX
            xor ESI,ESI
            mov DWORD PTR [R12+112],EBX
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],RDX
            call inflate@PLT

            cmp EAX,1
            mov RDX,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+24]
            ja .L_429e3b

            mov EAX,DWORD PTR [R12+112]
            sub RBP,RAX
            mov EAX,DWORD PTR [R12+136]
            mov QWORD PTR [R13],RBP
.L_429b4e:

            sub RDX,RAX
            mov RAX,QWORD PTR [RSP+8]
            mov R12,QWORD PTR [R14]
            mov RBP,RDX
            mov QWORD PTR [RAX],RDX
            jmp .L_429cfe
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429b68:

            mov RDI,QWORD PTR [R12+32]
            test RDI,RDI
            je .L_429dd0
.L_429b76:

            mov EAX,DWORD PTR [R12+96]
            mov QWORD PTR [R14],RDI
            mov EDX,65536
            cmp EAX,2
            jne .L_429ae8
.L_429b8c:

            mov DWORD PTR [R12+232],EBX
            lea RBX,QWORD PTR [R12+224]
            mov QWORD PTR [R12+224],R10
            mov QWORD PTR [R12+248],RDI
            mov DWORD PTR [R12+256],EDX
            mov RDI,RBX
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],RDX
            call BZ2_bzDecompress@PLT

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+24]
            je .L_429c0d

            cmp EAX,4
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+16],R10
            jne .L_429d70

            mov RDI,RBX
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+24]
            jne .L_429e5d

            mov DWORD PTR [R12+304],0
.L_429c0d:

            mov EAX,DWORD PTR [R12+232]
            sub RBP,RAX
            mov EAX,DWORD PTR [R12+256]
            mov QWORD PTR [R13],RBP
            jmp .L_429b4e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429c30:

            mov EAX,EBX
.L_429c32:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_429e69

            add RSP,56
.L_429c4a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429c58:

            cmp EAX,4
            ja .L_429d38

            lea RBX,QWORD PTR [R12+312]
            mov QWORD PTR [R12+312],R10
            mov QWORD PTR [R12+336],RDI
            mov QWORD PTR [R12+344],RDX
            xor ESI,ESI
            mov QWORD PTR [R12+320],RBP
            mov RDI,RBX
            mov QWORD PTR [RSP+24],R10
            mov QWORD PTR [RSP+16],RDX
            call lzma_code@PLT

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+24]
            je .L_429cdc

            cmp EAX,1
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+16],R10
            jne .L_429d90

            mov RDI,RBX
            call lzma_end@PLT

            mov R10,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+24]
            mov DWORD PTR [R12+448],0
.L_429cdc:

            sub RBP,QWORD PTR [R12+320]
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R13],RBP
            sub RDX,QWORD PTR [R12+344]
            mov R12,QWORD PTR [R14]
            mov RBP,RDX
            mov QWORD PTR [RAX],RDX
.L_429cfe:

            mov RAX,QWORD PTR [R15+2472]
            mov RDX,QWORD PTR [R13]
            mov RSI,R10
            mov RBX,QWORD PTR [RAX]
            lea RDI,QWORD PTR [RBX+456]
            call .L_429a10

            lea RDI,QWORD PTR [RBX+480]
            mov RDX,RBP
            mov RSI,R12
            call .L_429a10

            xor EAX,EAX
            jmp .L_429c32
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429d38:

            cmp RDI,QWORD PTR [R12+32]
            je .L_429e18

            cmp RBP,RDX
            mov RSI,R10
            mov QWORD PTR [RSP+16],R10
            cmova RBP,RDX
            mov RDX,RBP
            call memcpy@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R13],RBP
            mov R12,QWORD PTR [R14]
            mov R10,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX],RBP
            jmp .L_429cfe
.L_429d70:

            lea RDX,QWORD PTR [RIP+.L_42decd]
.L_429d77:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R15
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_429c32
.L_429d90:

            cmp DWORD PTR [R12+592],4
            lea RDX,QWORD PTR [RIP+.L_42deae]
            lea RCX,QWORD PTR [RIP+.L_42deb1]
            mov R8D,EAX
            mov ESI,4294967295
            mov RDI,R15
            cmove RCX,RDX
            lea RDX,QWORD PTR [RIP+.L_42dee7]
            xor EAX,EAX
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_429c32
          .byte 0x66
          .byte 0x90
.L_429dd0:

            mov EDI,65536
            mov QWORD PTR [RSP+16],R10
            call malloc@PLT

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [R12+32],RAX
            mov R10,QWORD PTR [RSP+16]
            jne .L_429b76

            lea RDX,QWORD PTR [RIP+.L_42d8d8]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R15
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_429c32
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429e18:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R14],R10
            mov R12,R10
            mov QWORD PTR [R13],RBP
            mov QWORD PTR [RAX],RBP
            jmp .L_429cfe
.L_429e2f:

            lea RDX,QWORD PTR [RIP+.L_42deb6]
            jmp .L_429d77
.L_429e3b:

            lea RDX,QWORD PTR [RIP+.L_42d900]
            mov ECX,EAX
            mov ESI,4294967295
            xor EAX,EAX
            mov RDI,R15
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_429c32
.L_429e5d:

            lea RDX,QWORD PTR [RIP+.L_42d920]
            jmp .L_429d77
.L_429e69:

            call __stack_chk_fail@PLT
.L_429e6e:

            nop
            nop
.L_429e70:

            push RBP
            push RBX
            sub RSP,40
.L_429e76:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+16],0
            mov RBX,QWORD PTR [RAX]
            xor EAX,EAX
            mov R8,QWORD PTR [RBX+64]
            test R8,R8
            jne .L_429ec0
.L_429ea4:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_429f09

            add RSP,40
.L_429eb8:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429ec0:

            movsxd RDX,EDX
            lea RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RDX
            lea RDX,QWORD PTR [RSP+8]
            mov RSI,RSP
            mov RBP,RDI
            call .L_429a50

            test EAX,EAX
            jne .L_429ea4

            mov RSI,QWORD PTR [RSP+16]
            mov RDI,RBP
            call .L_404a30

            mov RAX,QWORD PTR [RSP+16]
            sub QWORD PTR [RBX+64],RAX
            add QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+8]
            add QWORD PTR [RBX+72],RAX
            jmp .L_429ea4
.L_429f09:

            call __stack_chk_fail@PLT
.L_429f0e:

            nop
            nop
.L_429f10:

            sub EDX,1
            cmp EDX,3
            ja .L_429f30

            lea RDX,QWORD PTR [RIP+.L_42df03]
            mov RCX,RSI
            xor EAX,EAX
            mov ESI,4294967295
            jmp .L_43f5d0
          .byte 0x66
          .byte 0x90
.L_429f30:

            ret 
.L_429f32:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429f40:

            push R14
            push R13
            cmp ESI,4
            push R12
            push RBP
            mov R13,RDI
            push RBX
.L_429f4e:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov DWORD PTR [RBX+96],ESI
            ja .L_42a0d8

            mov R12D,EDX
            lea RDX,QWORD PTR [RIP+.L_42e2f8]
            mov ESI,ESI
            mov EBP,ECX
            movsxd RAX,DWORD PTR [RDX+RSI*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429f80:

            mov ECX,DWORD PTR [RBX+216]
            lea RDI,QWORD PTR [RBX+104]
            test ECX,ECX
            jne .L_42a130

            lea RSI,QWORD PTR [RIP+.L_42df5d]
            mov EDX,112
            call inflateInit_@PLT
.L_429fa3:

            test EAX,EAX
            jne .L_42a268

            mov RAX,QWORD PTR [R13+2472]
            mov DWORD PTR [RBX+216],1
            mov QWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+144],0
            mov RBX,QWORD PTR [RAX]
.L_429fd2:

            lea RDI,QWORD PTR [RBX+456]
            mov ESI,R12D
            call .L_4299d0

            lea RDI,QWORD PTR [RBX+480]
            mov ESI,EBP
            call .L_4299d0

            xor EAX,EAX
.L_429ff1:

            pop RBX
.L_429ff2:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a000:

            mov EAX,DWORD PTR [RBX+448]
            lea R14,QWORD PTR [RBX+312]
            test EAX,EAX
            jne .L_42a160
.L_42a015:

            cmp DWORD PTR [RBX+592],4
            je .L_42a140

            mov RSI,-1
            mov RDI,R14
            call lzma_alone_decoder@PLT
.L_42a031:

            test EAX,EAX
            je .L_42a1a0

            cmp EAX,5
            je .L_42a248

            cmp EAX,8
            lea RDX,QWORD PTR [RIP+.L_42d9e0]
            jne .L_42a1e8
.L_42a052:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_429ff1
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a070:

            mov EDX,DWORD PTR [RBX+304]
            lea R14,QWORD PTR [RBX+224]
            test EDX,EDX
            jne .L_42a180
.L_42a085:

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R14
            call BZ2_bzDecompressInit@PLT

            cmp EAX,-3
            je .L_42a1d0
.L_42a09a:

            test EAX,EAX
            jne .L_42a1f4

            mov RAX,QWORD PTR [R13+2472]
            mov DWORD PTR [RBX+304],1
            mov QWORD PTR [RBX+236],0
            mov QWORD PTR [RBX+260],0
            mov RBX,QWORD PTR [RAX]
            jmp .L_429fd2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a0d8:

            mov EAX,DWORD PTR [RBX+592]
            lea RCX,QWORD PTR [RIP+.L_42deb1]
            cmp EAX,3
            je .L_42a10b

            cmp EAX,4
            lea RCX,QWORD PTR [RIP+.L_42deae]
            je .L_42a10b

            cmp EAX,2
            lea RCX,QWORD PTR [RIP+.L_42df57]
            lea RAX,QWORD PTR [RIP+.L_42df19]
            cmovne RCX,RAX
.L_42a10b:

            lea RDX,QWORD PTR [RIP+.L_42da60]
            mov RDI,R13
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            pop RBX
.L_42a122:

            mov EAX,4294967271
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_42a130:

            call inflateReset@PLT

            jmp .L_429fa3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a140:

            mov EDX,8
            mov RSI,-1
            mov RDI,R14
            call lzma_stream_decoder@PLT

            jmp .L_42a031
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a160:

            mov RDI,R14
            call lzma_end@PLT

            mov DWORD PTR [RBX+448],0
            jmp .L_42a015
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a180:

            mov RDI,R14
            call BZ2_bzDecompressEnd@PLT

            mov DWORD PTR [RBX+304],0
            jmp .L_42a085
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a1a0:

            mov RAX,QWORD PTR [R13+2472]
            mov DWORD PTR [RBX+448],1
            mov QWORD PTR [RBX+328],0
            mov QWORD PTR [RBX+352],0
            mov RBX,QWORD PTR [RAX]
            jmp .L_429fd2
          .byte 0x90
.L_42a1d0:

            mov EDX,1
            xor ESI,ESI
            mov RDI,R14
            call BZ2_bzDecompressInit@PLT

            jmp .L_42a09a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a1e8:

            lea RDX,QWORD PTR [RIP+.L_42da30]
            jmp .L_42a052
.L_42a1f4:

            cmp EAX,-3
            je .L_42a274

            cmp EAX,-2
            mov ESI,4294967295
            lea RCX,QWORD PTR [RIP+.L_42df3f]
            je .L_42a21f

            cmp EAX,-9
            lea RCX,QWORD PTR [RIP+.L_42df2a]
            lea RAX,QWORD PTR [RIP+.L_42df19]
            cmovne RCX,RAX
.L_42a21f:

            lea RDX,QWORD PTR [RIP+.L_42d968]
            xor EAX,EAX
            mov RDI,R13
            call .L_43f5d0

            mov DWORD PTR [RBX+304],0
            mov EAX,4294967266
            jmp .L_429ff1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a248:

            lea RDX,QWORD PTR [RIP+.L_42d998]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_429ff1
.L_42a268:

            lea RDX,QWORD PTR [RIP+.L_42d940]
            jmp .L_42a052
.L_42a274:

            mov ESI,12
            lea RCX,QWORD PTR [RIP+.L_42df1c]
            jmp .L_42a21f
.L_42a282:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a290:

            push R12
            push RBP
            mov RBP,RDX
            push RBX
            mov RBX,RSI
            sub RSP,32
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI]
            cmp EAX,1
            je .L_42a318

            cmp EAX,2
            je .L_42a2e0
.L_42a2ba:

            xor EAX,EAX
.L_42a2bc:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42a368

            add RSP,32
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a2e0:

            add RDI,8
            mov RSI,RSP
            call QWORD PTR [RIP+.L_65ac90]

            cmp RBP,16
            jne .L_42a343

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            xor RDX,QWORD PTR [RSP]
            xor RAX,QWORD PTR [RSP+8]
            or RAX,RDX
            cmp RAX,1
            sbb EAX,EAX
            not EAX
            and EAX,4294967271
            jmp .L_42a2bc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a318:

            mov R12,RSP
            add RDI,16
            mov RSI,R12
            call QWORD PTR [RIP+.L_65acc0]

            cmp RBP,20
            jne .L_42a343

            mov RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RBX+8]
            xor RAX,QWORD PTR [RSP]
            xor RDX,QWORD PTR [RSP+8]
            or RDX,RAX
            je .L_42a350
.L_42a343:

            mov EAX,4294967271
            jmp .L_42a2bc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a350:

            mov EAX,DWORD PTR [R12+16]
            cmp DWORD PTR [RBX+16],EAX
            je .L_42a2ba

            mov EAX,4294967271
            jmp .L_42a2bc
.L_42a368:

            call __stack_chk_fail@PLT
.L_42a36d:

            nop
            nop
            nop
.L_42a370:

            push R14
            push R13
            mov R14,R8
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RAX,QWORD PTR [RDI+2472]
            mov R13,RCX
            mov RBP,QWORD PTR [RAX]
            lea RDI,QWORD PTR [RBP+456]
            call .L_42a290

            test EAX,EAX
            mov EBX,EAX
            je .L_42a3c0
.L_42a39d:

            lea RDX,QWORD PTR [RIP+.L_42df64]
            mov RDI,R12
            xor EAX,EAX
            mov ESI,4294967295
            call .L_43f5d0

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_42a3c0:

            lea RDI,QWORD PTR [RBP+480]
            mov RDX,R14
            mov RSI,R13
            call .L_42a290

            test EAX,EAX
            mov EBX,EAX
            jne .L_42a39d

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_42a3e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a3f0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R15,RCX
            sub RSP,24
.L_42a40a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+576]
            test RSI,RSI
            jne .L_42a538
.L_42a434:

            mov EDX,DWORD PTR [RBX+24]
            test EDX,EDX
            jne .L_42a447

            mov R8,QWORD PTR [RBX+568]
            test R8,R8
            jne .L_42a490
.L_42a447:

            mov R12D,1
.L_42a44d:

            mov QWORD PTR [R14],0
            mov QWORD PTR [R13],0
            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [R15],RAX
.L_42a463:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_42a5d4

            add RSP,24
.L_42a47e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a490:

            mov EAX,DWORD PTR [RBX+552]
            test EAX,EAX
            jne .L_42a550
.L_42a49e:

            mov QWORD PTR [R14],0
            mov RCX,RSP
            mov RDX,R13
            mov RSI,R14
            mov RDI,RBP
            call .L_429a50

            test EAX,EAX
            mov R12D,EAX
            jne .L_42a44d

            mov RAX,QWORD PTR [RBX+560]
            mov RCX,QWORD PTR [RSP]
            mov QWORD PTR [R15],RAX
            mov RDX,QWORD PTR [R13]
            add RDX,QWORD PTR [RBX+560]
            mov QWORD PTR [RBX+560],RDX
            mov RAX,QWORD PTR [R13]
            add QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RBX+568]
            add QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+576],RCX
            sub RAX,RCX
            test RAX,RAX
            mov QWORD PTR [RBX+568],RAX
            jne .L_42a463

            cmp RDX,QWORD PTR [RBX+584]
            je .L_42a5a0

            lea RDX,QWORD PTR [RIP+.L_42df73]
            mov ESI,4294967295
            mov RDI,RBP
            mov R12D,4294967266
            call .L_43f5d0

            jmp .L_42a44d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a538:

            call .L_404a30

            mov QWORD PTR [RBX+576],0
            jmp .L_42a434
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42a550:

            mov ECX,DWORD PTR [RBX+640]
            mov EDX,DWORD PTR [RBX+600]
            mov RDI,RBP
            mov ESI,DWORD PTR [RBX+592]
            call .L_429f40

            test EAX,EAX
            mov R12D,EAX
            jne .L_42a590

            mov DWORD PTR [RBX+552],0
            mov R8,QWORD PTR [RBX+568]
            jmp .L_42a49e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a590:

            mov QWORD PTR [RBX+568],0
            jmp .L_42a463
.L_42a5a0:

            mov RDX,QWORD PTR [RBX+608]
            mov R8,QWORD PTR [RBX+648]
            lea RCX,QWORD PTR [RBX+656]
            lea RSI,QWORD PTR [RBX+616]
            mov RDI,RBP
            call .L_42a370

            test EAX,EAX
            je .L_42a463

            mov R12D,EAX
            jmp .L_42a44d
.L_42a5d4:

            call __stack_chk_fail@PLT
.L_42a5d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a5e0:

            xor EAX,EAX
            test RDI,RDI
            mov RDX,RDI
            je .L_42a6b0

            lea R8,QWORD PTR [RIP+.L_42df8b]
            mov R9D,2
            mov R10D,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a608:

            mov RSI,QWORD PTR [RDX+8]
            mov ECX,6
            mov RDI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_42a650

            mov RSI,QWORD PTR [RDX+16]
            movzx ECX,BYTE PTR [RSI]
            and ECX,4294967263
            cmp CL,83
            jne .L_42a660

            movzx ECX,BYTE PTR [RSI+1]
            and ECX,4294967263
            cmp CL,72
            jne .L_42a650

            movzx ECX,BYTE PTR [RSI+2]
            and ECX,4294967263
            cmp CL,65
            jne .L_42a650

            cmp BYTE PTR [RSI+3],49
            je .L_42a690

            nop
            nop
            nop
.L_42a650:

            mov RDX,QWORD PTR [RDX]
            test RDX,RDX
            jne .L_42a608
.L_42a658:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a660:

            cmp CL,77
            jne .L_42a650

            movzx ECX,BYTE PTR [RSI+1]
            and ECX,4294967263
            cmp CL,68
            jne .L_42a650

            cmp BYTE PTR [RSI+2],53
            jne .L_42a650

            cmp BYTE PTR [RSI+3],0
            mov RDX,QWORD PTR [RDX]
            cmove EAX,R9D
            test RDX,RDX
            jne .L_42a608

            jmp .L_42a658
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a690:

            cmp BYTE PTR [RSI+4],0
            mov RDX,QWORD PTR [RDX]
            cmove EAX,R10D
            test RDX,RDX
            jne .L_42a608

            jmp .L_42a658
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a6b0:

            ret 
.L_42a6b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a6c0:

            test RDI,RDI
            je .L_42a808

            push R13
            lea R8,QWORD PTR [RIP+.L_42df8b]
            push R12
            lea R9,QWORD PTR [RIP+.L_42df91]
            push RBP
            lea R10,QWORD PTR [RIP+.L_42dfaa]
            push RBX
.L_42a6e4:

            lea R11,QWORD PTR [RIP+.L_42dfbd]
            lea RBX,QWORD PTR [RIP+.L_42dfd1]
            lea R12,QWORD PTR [RIP+.L_42dfe4]
            mov RDX,RDI
            xor EAX,EAX
            mov EBP,4
            nop
            nop
            nop
            nop
            nop
.L_42a708:

            mov RSI,QWORD PTR [RDX+8]
            mov ECX,6
            mov RDI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_42a770

            mov R13,QWORD PTR [RDX+16]
            mov ECX,25
            mov RDI,R9
            mov RSI,R13

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_42a780

            mov ECX,19
            mov RSI,R13
            mov RDI,R10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            je .L_42a790

            mov ECX,20
            mov RSI,R13
            mov RDI,R11

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_42a7a8

            mov EAX,2
            nop
            nop
.L_42a770:

            mov RDX,QWORD PTR [RDX]
            test RDX,RDX
            jne .L_42a708
.L_42a778:

            pop RBX
.L_42a779:

            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_42a780:

            mov RDX,QWORD PTR [RDX]
            xor EAX,EAX
            test RDX,RDX
            jne .L_42a708

            jmp .L_42a778
.L_42a790:

            mov RDX,QWORD PTR [RDX]
            mov EAX,1
            test RDX,RDX
            jne .L_42a708

            jmp .L_42a778
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a7a8:

            mov ECX,19
            mov RSI,R13
            mov RDI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta CL
            sbb CL,0
            test CL,CL
            jne .L_42a7d8

            mov RDX,QWORD PTR [RDX]
            mov EAX,3
            test RDX,RDX
            jne .L_42a708

            jmp .L_42a778
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a7d8:

            mov ECX,17
            mov RSI,R13
            mov RDI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov RDX,QWORD PTR [RDX]
            seta CL
            sbb CL,0
            test CL,CL
            cmove EAX,EBP
            test RDX,RDX
            jne .L_42a708

            jmp .L_42a778
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a808:

            xor EAX,EAX
            ret 
.L_42a80b:

            nop
            nop
            nop
            nop
            nop
.L_42a810:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov EDI,32
            mov RBP,RSI
            mov R12,RDX
            sub RSP,8
.L_42a828:

            call malloc@PLT

            test RAX,RAX
            je .L_42a89f

            mov RBX,RAX
            mov RAX,QWORD PTR [RBP+48]
            xor EDX,EDX
            test R12,R12
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX],RAX
            je .L_42a866

            mov RDI,R12
            call strlen@PLT

            mov RDX,RAX
.L_42a866:

            lea RDI,QWORD PTR [RBX+8]
            mov RSI,R12
            call .L_437290

            cmp QWORD PTR [RBP+48],0
            je .L_42a890
.L_42a879:

            mov QWORD PTR [RBP+48],RBX
            xor EAX,EAX
.L_42a87f:

            add RSP,8
.L_42a883:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a890:

            mov EAX,DWORD PTR [RBP+40]
            mov DWORD PTR [RBP+40],77
            mov DWORD PTR [RBP+44],EAX
            jmp .L_42a879
.L_42a89f:

            lea RDX,QWORD PTR [RIP+.L_42dff5]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R13
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_42a87f
.L_42a8bc:

            nop
            nop
            nop
            nop
.L_42a8c0:

            pxor XMM0,XMM0
            sub RSP,72
.L_42a8c8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp RSI,20
            mov QWORD PTR [RSP+48],0
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            je .L_42a910
.L_42a8f5:

            xor EAX,EAX
.L_42a8f7:

            mov RDI,QWORD PTR [RSP+56]
            xor RDI,QWORD PTR FS:[40]
            jne .L_42aa9f

            add RSP,72
.L_42a90f:

            ret 
.L_42a910:

            movsx EAX,BYTE PTR [RDI]
            sub EAX,48
            cmp EAX,9
            ja .L_42a8f5

            lea RSI,QWORD PTR [RDI+4]
            mov RDX,RDI
            xor ECX,ECX
.L_42a924:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RDX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RDX]
            sub EAX,48
            cmp EAX,9
            ja .L_42a942

            cmp RDX,RSI
            jne .L_42a924
.L_42a942:

            cmp RCX,1899
            jle .L_42a8f5

            sub ECX,1900
            cmp BYTE PTR [RDI+4],45
            mov DWORD PTR [RSP+20],ECX
            jne .L_42a8f5

            movsx EAX,BYTE PTR [RDI+5]
            sub EAX,48
            cmp EAX,9
            ja .L_42a8f5

            movsx EDX,BYTE PTR [RDI+6]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_42a980

            lea RAX,QWORD PTR [RAX+RAX*4]
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RDX+RAX*2]
.L_42a980:

            lea RDX,QWORD PTR [RAX-1]
            cmp RDX,11
            ja .L_42a8f5

            sub EAX,1
            cmp BYTE PTR [RDI+7],45
            mov DWORD PTR [RSP+16],EAX
            jne .L_42a8f5

            movsx EAX,BYTE PTR [RDI+8]
            sub EAX,48
            cmp EAX,9
            ja .L_42a8f5

            movsx EDX,BYTE PTR [RDI+9]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_42a9c8

            lea RAX,QWORD PTR [RAX+RAX*4]
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RDX+RAX*2]
.L_42a9c8:

            lea RDX,QWORD PTR [RAX-1]
            cmp RDX,30
            ja .L_42a8f5

            cmp BYTE PTR [RDI+10],84
            mov DWORD PTR [RSP+12],EAX
            jne .L_42a8f5

            movsx EAX,BYTE PTR [RDI+11]
            sub EAX,48
            cmp EAX,9
            ja .L_42aaa4

            movsx EDX,BYTE PTR [RDI+12]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_42aa17

            lea RAX,QWORD PTR [RAX+RAX*4]
            movsxd RDX,EDX
            lea RAX,QWORD PTR [RDX+RAX*2]
            cmp RAX,23
            ja .L_42a8f5
.L_42aa17:

            cmp BYTE PTR [RDI+13],58
            mov DWORD PTR [RSP+8],EAX
            jne .L_42a8f5

            movsx EAX,BYTE PTR [RDI+14]
            sub EAX,48
            cmp EAX,9
            ja .L_42aaaf

            movsx EDX,BYTE PTR [RDI+15]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_42aa53

            imul RAX,RAX,10
            movsxd RDX,EDX
            add RAX,RDX
            cmp RAX,59
            ja .L_42a8f5
.L_42aa53:

            cmp BYTE PTR [RDI+16],58
            mov DWORD PTR [RSP+4],EAX
            jne .L_42a8f5

            movsx EAX,BYTE PTR [RDI+17]
            sub EAX,48
            cmp EAX,9
            ja .L_42aaab

            movsx EDX,BYTE PTR [RDI+18]
            cdqe 
            sub EDX,48
            cmp EDX,9
            ja .L_42aa8f

            imul RAX,RAX,10
            movsxd RDX,EDX
            add RAX,RDX
            cmp RAX,60
            ja .L_42a8f5
.L_42aa8f:

            mov RDI,RSP
            mov DWORD PTR [RSP],EAX
            call timegm@PLT

            jmp .L_42a8f7
.L_42aa9f:

            call __stack_chk_fail@PLT
.L_42aaa4:

            xor EAX,EAX
            jmp .L_42aa17
.L_42aaab:

            xor EAX,EAX
            jmp .L_42aa8f
.L_42aaaf:

            xor EAX,EAX
            jmp .L_42aa53
.L_42aab3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42aac0:

            push R13
            push R12
            xor R12D,R12D
            push RBP
            push RBX
            sub RSP,8
.L_42aacd:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RBP]
            mov RAX,QWORD PTR [RBP+16]
            mov RCX,RDX
            sub RCX,RAX
            cmp RCX,RSI
            je .L_42ab09

            add RAX,RSI
            mov RBX,RDI
            sub RAX,RDX
            test RAX,RAX
            jle .L_42ab20

            mov RSI,RAX
            call .L_404a30

            test RAX,RAX
            js .L_42ab48

            add QWORD PTR [RBP],RAX
.L_42ab09:

            add RSP,8
.L_42ab0d:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ab20:

            xor EDX,EDX
            call .L_404dd0

            cmp RAX,-25
            mov R13,RAX
            je .L_42ab59

            mov QWORD PTR [RBP],RAX
            add RSP,8
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ab48:

            add RSP,8
            mov R12D,EAX
            pop RBX
            mov EAX,R12D
            pop RBP
            pop R12
            pop R13
            ret 
.L_42ab59:

            lea RDX,QWORD PTR [RIP+.L_42e003]
            mov ESI,4294967295
            mov RDI,RBX
            xor EAX,EAX
            mov R12D,R13D
            call .L_43f5d0

            jmp .L_42ab09
.L_42ab74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ab80:

            cmp RDX,1
            jbe .L_42ac40

            mov R8D,20
            jmp .L_42abcc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ab98:

            sub EAX,87
            shl EAX,4
.L_42ab9e:

            movzx ECX,BYTE PTR [RSI+1]
            lea R9D,DWORD PTR [RCX-97]
            cmp R9B,25
            ja .L_42abf3
.L_42abac:

            sub ECX,87
            or EAX,ECX
.L_42abb1:

            add RDI,1
            add RSI,2
            sub RDX,2
            sub R8,1
            mov BYTE PTR [RDI-1],AL
            je .L_42ac28

            cmp RDX,1
            jbe .L_42ac28
.L_42abcc:

            movzx EAX,BYTE PTR [RSI]
            lea ECX,DWORD PTR [RAX-97]
            cmp CL,25
            jbe .L_42ab98

            lea ECX,DWORD PTR [RAX-65]
            cmp CL,25
            ja .L_42ac08

            movzx ECX,BYTE PTR [RSI+1]
            sub EAX,55
            shl EAX,4
            lea R9D,DWORD PTR [RCX-97]
            cmp R9B,25
            jbe .L_42abac
.L_42abf3:

            lea R9D,DWORD PTR [RCX-65]
            cmp R9B,25
            ja .L_42ac18

            sub ECX,55
            or EAX,ECX
            jmp .L_42abb1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ac08:

            sub EAX,48
            cmp AL,9
            ja .L_42ac38

            shl EAX,4
            jmp .L_42ab9e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ac18:

            sub ECX,48
            cmp CL,9
            ja .L_42ac38

            or EAX,ECX
            jmp .L_42abb1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ac28:

            mov EAX,20
            sub RAX,R8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ac38:

            mov RAX,-1
            ret 
.L_42ac40:

            xor EAX,EAX
            ret 
.L_42ac43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ac50:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,296
.L_42ac64:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            mov EAX,DWORD PTR [RBP+40]
            cmp EAX,5
            je .L_42ad28

            cmp EAX,6
            jne .L_42ad00

            movsx EAX,BYTE PTR [RSI]
            xor ECX,ECX
            movsxd RDX,EDX
            sub EAX,48
            cmp EAX,9
            ja .L_42accf

            test RDX,RDX
            jne .L_42acb6

            jmp .L_42accf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42acb0:

            sub RDX,1
            je .L_42accf
.L_42acb6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42acb0
.L_42accf:

            mov QWORD PTR [RBP+88],RCX
.L_42acd3:

            mov RAX,QWORD PTR [RSP+280]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42b6ce

            add RSP,296
.L_42acf1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ad00:

            mov R12,QWORD PTR [RBP+504]
            test R12,R12
            je .L_42acd3

            sub EAX,9
            cmp EAX,35
            ja .L_42acd3

            lea RCX,QWORD PTR [RIP+.L_42e30c]
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ad28:

            movsx EAX,BYTE PTR [RSI]
            xor ECX,ECX
            movsxd RDX,EDX
            sub EAX,48
            cmp EAX,9
            ja .L_42ad5f

            test RDX,RDX
            jne .L_42ad46

            jmp .L_42ad5f
          .byte 0x90
.L_42ad40:

            sub RDX,1
            je .L_42ad5f
.L_42ad46:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42ad40
.L_42ad5f:

            mov QWORD PTR [RBP+80],RCX
            jmp .L_42acd3
.L_42ad68:

            mov RAX,QWORD PTR [R12+16]
            lea R13,QWORD PTR [R12+152]
            test RAX,RAX
            je .L_42adb8

            lea RSI,QWORD PTR [RAX+152]
            mov RDI,R13
            mov DWORD PTR [RSP+12],EDX
            call .L_434410

            mov RAX,QWORD PTR [RBP+504]
            mov ESI,47
            lea RDI,QWORD PTR [RAX+152]
            call .L_437330

            mov R12,QWORD PTR [RBP+504]
            mov EDX,DWORD PTR [RSP+12]
            lea R13,QWORD PTR [R12+152]
.L_42adb8:

            mov EAX,DWORD PTR [RBP+56]
            or DWORD PTR [R12+28],2
            movsxd R12,EDX
            test EAX,EAX
            je .L_42b69c

            test R12,R12
            je .L_42acd3

            movzx EAX,BYTE PTR [RBX]
            lea RBP,QWORD PTR [RIP+.L_42e4e0]
            mov ECX,DWORD PTR [RBP+RAX*4]
            test ECX,ECX
            js .L_42acd3

            movzx EAX,BYTE PTR [RBX+1]
            mov EAX,DWORD PTR [RBP+RAX*4]
            test EAX,EAX
            js .L_42acd3

            lea R14,QWORD PTR [RSP+16]
            xor ESI,ESI
            mov RDI,R14
            jmp .L_42ae9e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ae10:

            movzx ECX,BYTE PTR [RBX+2]
            mov ECX,DWORD PTR [RBP+RCX*4]
            test ECX,ECX
            js .L_42b6af

            shl ECX,6
            lea RDX,QWORD PTR [RSI+2]
            or EAX,ECX
            cmp R12,3
            mov BYTE PTR [RDI+1],AH
            je .L_42aebb

            movzx ECX,BYTE PTR [RBX+3]
            mov ECX,DWORD PTR [RBP+RCX*4]
            test ECX,ECX
            js .L_42b6af

            lea RDX,QWORD PTR [RSI+3]
            add RSI,6
            or EAX,ECX
            sub R12,4
            cmp RSI,255
            lea R15,QWORD PTR [RBX+4]
            lea R8,QWORD PTR [RDI+3]
            mov BYTE PTR [RDI+2],AL
            ja .L_42b6d3

            mov RSI,RDX
            mov RDI,R8
.L_42ae72:

            test R12,R12
            je .L_42b6b2

            movzx EAX,BYTE PTR [RBX+4]
            mov ECX,DWORD PTR [RBP+RAX*4]
            test ECX,ECX
            js .L_42b6b2

            movzx EAX,BYTE PTR [RBX+5]
            mov EAX,DWORD PTR [RBP+RAX*4]
            test EAX,EAX
            js .L_42b6b2

            mov RBX,R15
.L_42ae9e:

            shl ECX,18
            shl EAX,12
            or EAX,ECX
            mov EDX,EAX
            sar EDX,16
            cmp R12,2
            mov BYTE PTR [RDI],DL
            lea RDX,QWORD PTR [RSI+1]
            jne .L_42ae10
.L_42aebb:

            lea RAX,QWORD PTR [RDX+3]
            cmp RAX,255
            jbe .L_42b6af

            mov RSI,R14
            mov RDI,R13
            call .L_437290

            jmp .L_42acd3
.L_42aedb:

            movsxd RDX,EDX
            mov ECX,5
            lea RSI,QWORD PTR [RIP+.L_42dc93]
            cmp RDX,5
            mov RDI,RBX
            cmovle RCX,RDX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_42af28

            cmp RDX,9
            mov ECX,9
            lea RSI,QWORD PTR [RIP+.L_42e010]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42af3e
.L_42af28:

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,128
            mov DWORD PTR [R12+288],EAX
.L_42af3e:

            cmp RDX,10
            mov ECX,10
            lea RSI,QWORD PTR [RIP+.L_42e019]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42af79

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,64
            mov DWORD PTR [R12+288],EAX
.L_42af79:

            cmp RDX,8
            mov ECX,8
            lea RSI,QWORD PTR [RIP+.L_42e023]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42afb4

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,160
            mov DWORD PTR [R12+288],EAX
.L_42afb4:

            cmp RDX,18
            mov ECX,18
            lea RSI,QWORD PTR [RIP+.L_42e02b]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42afef

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,32
            mov DWORD PTR [R12+288],EAX
.L_42afef:

            cmp RDX,14
            mov ECX,14
            lea RSI,QWORD PTR [RIP+.L_42e03d]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42b02a

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,96
            mov DWORD PTR [R12+288],EAX
.L_42b02a:

            cmp RDX,7
            mov ECX,7
            lea RSI,QWORD PTR [RIP+.L_42e04b]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42b065

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,192
            mov DWORD PTR [R12+288],EAX
.L_42b065:

            cmp RDX,5
            mov ECX,5
            lea RSI,QWORD PTR [RIP+.L_42e052]
            cmovle RCX,RDX
            mov RDI,RBX
            cmp RCX,RCX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42b0a0

            mov EAX,DWORD PTR [R12+288]
            and AH,15
            or AH,16
            mov DWORD PTR [R12+288],EAX
.L_42b0a0:

            or DWORD PTR [R12+28],128
            jmp .L_42acd3
.L_42b0ae:

            or DWORD PTR [R12+28],8
            movsxd RSI,EDX
            mov RDI,RBX
            call .L_42a8c0

            mov QWORD PTR [R12+208],RAX
            jmp .L_42acd3
.L_42b0cc:

            or DWORD PTR [R12+28],8
            movsxd RSI,EDX
            mov RDI,RBX
            call .L_42a8c0

            mov QWORD PTR [R12+200],RAX
            jmp .L_42acd3
.L_42b0ea:

            mov RAX,QWORD PTR [RBP+512]
            or DWORD PTR [R12+28],8192
            movsxd RDX,EDX
            lea RDI,QWORD PTR [RAX+152]
            mov QWORD PTR [RAX+160],0
            call .L_437290

            jmp .L_42acd3
.L_42b119:

            mov RAX,QWORD PTR [RBP+512]
            or DWORD PTR [R12+28],8192
            movsxd RDX,EDX
            lea RDI,QWORD PTR [RAX+8]
            mov QWORD PTR [RAX+16],0
            call .L_437290

            jmp .L_42acd3
.L_42b142:

            mov R10,QWORD PTR [RBP+512]
            or DWORD PTR [R12+28],8192
            movsxd RDX,EDX
            lea RDI,QWORD PTR [R10+128]
            call .L_42ab80

            mov QWORD PTR [R10+120],RAX
            jmp .L_42acd3
.L_42b16a:

            mov R10,QWORD PTR [RBP+512]
            or DWORD PTR [R12+28],8192
            movsxd RDX,EDX
            lea RDI,QWORD PTR [R10+88]
            call .L_42ab80

            mov QWORD PTR [R10+80],RAX
            jmp .L_42acd3
.L_42b18f:

            or DWORD PTR [R12+28],8192
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RBX]
            mov RSI,QWORD PTR [RBP+512]
            sub EAX,48
            cmp EAX,9
            ja .L_42b1df

            test RDX,RDX
            jne .L_42b1c6

            jmp .L_42b1df
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b1c0:

            sub RDX,1
            je .L_42b1df
.L_42b1c6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b1c0
.L_42b1df:

            mov QWORD PTR [RSI+56],RCX
            jmp .L_42acd3
.L_42b1e8:

            or DWORD PTR [R12+28],8192
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RBX]
            mov RSI,QWORD PTR [RBP+512]
            sub EAX,48
            cmp EAX,9
            ja .L_42b22f

            test RDX,RDX
            jne .L_42b216

            jmp .L_42b22f
          .byte 0x90
.L_42b210:

            sub RDX,1
            je .L_42b22f
.L_42b216:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b210
.L_42b22f:

            mov QWORD PTR [RSI+48],RCX
            jmp .L_42acd3
.L_42b238:

            or DWORD PTR [R12+28],8192
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RBX]
            mov RSI,QWORD PTR [RBP+512]
            sub EAX,48
            cmp EAX,9
            ja .L_42b27f

            test RDX,RDX
            jne .L_42b266

            jmp .L_42b27f
          .byte 0x90
.L_42b260:

            sub RDX,1
            je .L_42b27f
.L_42b266:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b260
.L_42b27f:

            mov QWORD PTR [RSI+40],RCX
            jmp .L_42acd3
.L_42b288:

            lea RDI,QWORD PTR [R12+128]
            movsxd RDX,EDX
            call .L_42ab80

            mov QWORD PTR [R12+120],RAX
            jmp .L_42acd3
.L_42b2a2:

            lea RDI,QWORD PTR [R12+88]
            movsxd RDX,EDX
            call .L_42ab80

            mov QWORD PTR [R12+80],RAX
            jmp .L_42acd3
.L_42b2b9:

            or DWORD PTR [R12+28],1
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_42b2ff

            test RDX,RDX
            jne .L_42b2e6

            jmp .L_42b2ff
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b2e0:

            sub RDX,1
            je .L_42b2ff
.L_42b2e6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b2e0
.L_42b2ff:

            mov QWORD PTR [R12+56],RCX
            jmp .L_42acd3
.L_42b309:

            or DWORD PTR [R12+28],1
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_42b34f

            test RDX,RDX
            jne .L_42b336

            jmp .L_42b34f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b330:

            sub RDX,1
            je .L_42b34f
.L_42b336:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b330
.L_42b34f:

            mov QWORD PTR [R12+48],RCX
            jmp .L_42acd3
.L_42b359:

            or DWORD PTR [R12+28],1
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_42b39f

            test RDX,RDX
            jne .L_42b386

            jmp .L_42b39f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b380:

            sub RDX,1
            je .L_42b39f
.L_42b386:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b380
.L_42b39f:

            mov QWORD PTR [R12+40],RCX
            jmp .L_42acd3
.L_42b3a9:

            or DWORD PTR [R12+28],16384
            jmp .L_42acd3
.L_42b3b7:

            or DWORD PTR [R12+28],1024
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_42b3ff

            test RDX,RDX
            jne .L_42b3e6

            jmp .L_42b3ff
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b3e0:

            sub RDX,1
            je .L_42b3ff
.L_42b3e6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b3e0
.L_42b3ff:

            mov QWORD PTR [R12+312],RCX
            jmp .L_42acd3
.L_42b40c:

            or DWORD PTR [R12+28],512
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_42b44f

            test RDX,RDX
            jne .L_42b436

            jmp .L_42b44f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b430:

            sub RDX,1
            je .L_42b44f
.L_42b436:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b430
.L_42b44f:

            mov QWORD PTR [R12+304],RCX
            jmp .L_42acd3
.L_42b45c:

            mov EDI,DWORD PTR [R12+288]
            movsxd RDX,EDX
            or DWORD PTR [R12+28],64
            and EDI,61440
            test RDX,RDX
            je .L_42b4c2

            movzx EAX,BYTE PTR [RSI]
            add RBX,RDX
            xor EDX,EDX
            lea RSI,QWORD PTR [RSI+1]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,7
            jbe .L_42b49f

            jmp .L_42b4c2
          .byte 0x66
          .byte 0x90
.L_42b490:

            movzx EAX,BYTE PTR [RSI]
            add RSI,1
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,7
            ja .L_42b4bb
.L_42b49f:

            lea RCX,QWORD PTR [RDX*8]
            movsx EDX,AL
            sub EDX,48
            movsxd RAX,EDX
            or RAX,RCX
            cmp RBX,RSI
            mov RDX,RAX
            jne .L_42b490
.L_42b4bb:

            mov EAX,EDX
            and AH,15
            or EDI,EAX
.L_42b4c2:

            mov DWORD PTR [R12+288],EDI
            jmp .L_42acd3
.L_42b4cf:

            or DWORD PTR [R12+28],16
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_42b50f

            test RDX,RDX
            jne .L_42b4f6

            jmp .L_42b50f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b4f0:

            sub RDX,1
            je .L_42b50f
.L_42b4f6:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b4f0
.L_42b50f:

            mov QWORD PTR [R12+248],RCX
            jmp .L_42acd3
.L_42b51c:

            or DWORD PTR [R12+28],16
            lea RDI,QWORD PTR [R12+224]
            mov QWORD PTR [R12+232],0
            movsxd RDX,EDX
            call .L_437290

            jmp .L_42acd3
.L_42b543:

            or DWORD PTR [R12+28],32
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_42b57f

            test RDX,RDX
            jne .L_42b566

            jmp .L_42b57f
.L_42b560:

            sub RDX,1
            je .L_42b57f
.L_42b566:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b560
.L_42b57f:

            mov QWORD PTR [R12+280],RCX
            jmp .L_42acd3
.L_42b58c:

            or DWORD PTR [R12+28],32
            lea RDI,QWORD PTR [R12+256]
            mov QWORD PTR [R12+264],0
            movsxd RDX,EDX
            call .L_437290

            jmp .L_42acd3
.L_42b5b3:

            or DWORD PTR [R12+28],8
            movsxd RSI,EDX
            mov RDI,RBX
            call .L_42a8c0

            mov QWORD PTR [R12+216],RAX
            jmp .L_42acd3
.L_42b5d1:

            or DWORD PTR [R12+28],2048
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_42b617

            test RDX,RDX
            jne .L_42b5fe

            jmp .L_42b617
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b5f8:

            sub RDX,1
            je .L_42b617
.L_42b5fe:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b5f8
.L_42b617:

            mov QWORD PTR [R12+320],RCX
            jmp .L_42acd3
.L_42b624:

            or DWORD PTR [R12+28],4
            lea RDI,QWORD PTR [R12+176]
            mov QWORD PTR [R12+184],0
            movsxd RDX,EDX
            call .L_437290

            jmp .L_42acd3
.L_42b64b:

            or DWORD PTR [R12+28],256
            xor ECX,ECX
            movsxd RDX,EDX
            movsx EAX,BYTE PTR [RSI]
            sub EAX,48
            cmp EAX,9
            ja .L_42b68f

            test RDX,RDX
            jne .L_42b676

            jmp .L_42b68f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b670:

            sub RDX,1
            je .L_42b68f
.L_42b676:

            lea RCX,QWORD PTR [RCX+RCX*4]
            cdqe 
            add RBX,1
            lea RCX,QWORD PTR [RAX+RCX*2]
            movsx EAX,BYTE PTR [RBX]
            sub EAX,48
            cmp EAX,9
            jbe .L_42b670
.L_42b68f:

            mov QWORD PTR [R12+296],RCX
            jmp .L_42acd3
.L_42b69c:

            mov RDX,R12
            mov RSI,RBX
            mov RDI,R13
            call .L_437290

            jmp .L_42acd3
.L_42b6af:

            mov RSI,RDX
.L_42b6b2:

            test RSI,RSI
            je .L_42acd3

            mov RDX,RSI
            mov RDI,R13
            mov RSI,R14
            call .L_437290

            jmp .L_42acd3
.L_42b6ce:

            call __stack_chk_fail@PLT
.L_42b6d3:

            mov RSI,R14
            mov RDI,R13
            call .L_437290

            xor ESI,ESI
            mov RDI,R14
            jmp .L_42ae72
.L_42b6e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b6f0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov ESI,392
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,1
            mov RBX,RDX
            sub RSP,8
.L_42b711:

            call calloc@PLT

            test RAX,RAX
            je .L_42b938

            mov R13,RAX
            mov RAX,QWORD PTR [R14+504]
            xor EDI,EDI
            mov DWORD PTR [R13+288],33279
            mov QWORD PTR [R13+16],RAX
            call time@PLT

            xor EDI,EDI
            mov QWORD PTR [R13+216],RAX
            call time@PLT

            mov R15,QWORD PTR [RBX]
            mov QWORD PTR [R13+208],RAX
            mov QWORD PTR [R14+504],R13
            mov QWORD PTR [R14+512],0
            test R15,R15
            je .L_42b7fd

            lea RBX,QWORD PTR [RIP+.L_42e057]
            jmp .L_42b788
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b780:

            mov R15,QWORD PTR [R15]
            test R15,R15
            je .L_42b7fd
.L_42b788:

            mov RSI,QWORD PTR [R15+8]
            mov ECX,3
            mov RDI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42b780

            mov R12,QWORD PTR [R15+16]
            mov RDI,R12
            call strlen@PLT

            movsx EDX,BYTE PTR [R12]
            sub EDX,48
            cmp EDX,9
            ja .L_42b918

            test RAX,RAX
            je .L_42b918

            add RAX,R12
            xor ECX,ECX
            jmp .L_42b7d5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42b7d0:

            cmp R12,RAX
            je .L_42b7f1
.L_42b7d5:

            lea RCX,QWORD PTR [RCX+RCX*4]
            movsxd RDX,EDX
            add R12,1
            lea RCX,QWORD PTR [RDX+RCX*2]
            movsx EDX,BYTE PTR [R12]
            sub EDX,48
            cmp EDX,9
            jbe .L_42b7d0
.L_42b7f1:

            mov QWORD PTR [R13+32],RCX
.L_42b7f5:

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_42b788
.L_42b7fd:

            movsxd RAX,DWORD PTR [R14+532]
            mov R12D,DWORD PTR [R14+528]
            mov DWORD PTR [R13+356],1
            cmp EAX,R12D
            jge .L_42b890

            mov RBX,QWORD PTR [R14+520]
.L_42b822:

            lea EDX,DWORD PTR [RAX+1]
            test EAX,EAX
            mov RDI,QWORD PTR [R13+32]
            mov DWORD PTR [R14+532],EDX
            jle .L_42b873

            lea EDX,DWORD PTR [RAX-1]
            sar EDX,1
            movsxd RCX,EDX
            mov RSI,QWORD PTR [RBX+RCX*8]
            cmp RDI,QWORD PTR [RSI+32]
            jb .L_42b86b

            jmp .L_42b8f9

            nop
            nop
            nop
            nop
            nop
.L_42b850:

            lea ECX,DWORD PTR [RDX-1]
            sar ECX,1
            movsxd RAX,ECX
            mov RSI,QWORD PTR [RBX+RAX*8]
            movsxd RAX,EDX
            cmp RDI,QWORD PTR [RSI+32]
            jae .L_42b8fb

            mov EDX,ECX
.L_42b86b:

            test EDX,EDX
            mov QWORD PTR [RBX+RAX*8],RSI
            jne .L_42b850
.L_42b873:

            mov QWORD PTR [RBX],R13
            xor EAX,EAX
.L_42b878:

            add RSP,8
.L_42b87c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b890:

            cmp R12D,1023
            jle .L_42b928

            lea R15D,DWORD PTR [R12+R12*1]
            cmp R12D,R15D
            jge .L_42b938

            movsxd RDI,R15D
            shl RDI,3
.L_42b8b1:

            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_42b938

            mov RBP,QWORD PTR [R14+520]
            movsxd RDX,R12D
            mov RDI,RAX
            shl RDX,3
            mov RSI,RBP
            call memcpy@PLT

            mov RDI,RBP
            call free@PLT

            mov QWORD PTR [R14+520],RBX
            mov DWORD PTR [R14+528],R15D
            movsxd RAX,DWORD PTR [R14+532]
            jmp .L_42b822
.L_42b8f9:

            mov EDX,EAX
.L_42b8fb:

            movsxd RDX,EDX
            xor EAX,EAX
            mov QWORD PTR [RBX+RDX*8],R13
            add RSP,8
.L_42b908:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b918:

            xor ECX,ECX
            mov QWORD PTR [R13+32],RCX
            jmp .L_42b7f5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42b928:

            mov EDI,8192
            mov R15D,1024
            jmp .L_42b8b1
.L_42b938:

            lea RDX,QWORD PTR [RIP+.L_42dff5]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_42b878
.L_42b958:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b960:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,136
.L_42b974:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP],RSI
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX],0
            jne .L_42bac0

            cmp QWORD PTR [RBX+680],0
            mov QWORD PTR [RSP+8],RBX
            je .L_42bf10
.L_42b9af:

            lea RAX,QWORD PTR [RSP+88]
            mov ESI,28
            mov RDI,R12
            mov RDX,RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_4049e0

            mov R8,QWORD PTR [RSP+88]
            test R8,R8
            js .L_42befa

            cmp R8,27
            jle .L_42cc88

            cmp DWORD PTR [RAX],561144184
            jne .L_42cc60

            movzx EDX,WORD PTR [RAX+6]
            rol DX,8
            cmp DX,1
            jne .L_42cb98

            mov RDX,QWORD PTR [RAX+8]
            mov R15,QWORD PTR [RSP+8]
            mov ESI,28
            mov RDI,R12
            bswap RDX
            mov QWORD PTR [R15+64],RDX
            mov RDX,QWORD PTR [RAX+16]
            mov EAX,DWORD PTR [RAX+24]
            bswap RDX
            bswap EAX
            mov QWORD PTR [RSP+40],RDX
            mov DWORD PTR [RSP+24],EAX
            call .L_404a30

            add QWORD PTR [R15],28
            mov QWORD PTR [R15+72],0
            mov ESI,28
            mov RDI,R12
            call .L_42aac0

            test EAX,EAX
            mov R15D,EAX
            je .L_42c070

            nop
            nop
            nop
.L_42ba58:

            mov RBX,QWORD PTR [RSP+120]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_42ce45

            add RSP,136
.L_42ba76:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ba88:

            test RDI,RDI
            mov QWORD PTR [RBX+504],RDI
            je .L_42bee8

            mov EAX,DWORD PTR [RDI+288]
            and EAX,61440
            cmp EAX,16384
            jne .L_42bb70

            cmp DWORD PTR [RDI+28],130
            jne .L_42bb70

            call .L_428860
.L_42bac0:

            mov ESI,DWORD PTR [RBX+532]
            test ESI,ESI
            jle .L_42bedd

            mov RDX,QWORD PTR [RBX+520]
            lea R8D,DWORD PTR [RSI-1]
            movsxd RAX,R8D
            cmp R8D,1
            mov RAX,QWORD PTR [RDX+RAX*8]
            mov RDI,QWORD PTR [RDX]
            mov DWORD PTR [RBX+532],R8D
            mov R10,QWORD PTR [RAX+32]
            mov QWORD PTR [RDX],RAX
            jle .L_42ba88

            mov R11D,1
            xor ESI,ESI
            xor ECX,ECX
            jmp .L_42bb4e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bb08:

            movsxd RSI,EAX
            mov RSI,QWORD PTR [RDX+RSI*8]
            mov RSI,QWORD PTR [RSI+32]
            cmp R9,RSI
            jbe .L_42bb61

            mov R9,RSI
.L_42bb1b:

            cmp R10,R9
            jbe .L_42ba88

            lea RSI,QWORD PTR [RDX+RCX*8]
            movsxd RCX,EAX
            lea RCX,QWORD PTR [RDX+RCX*8]
            mov R9,QWORD PTR [RSI]
            mov R11,QWORD PTR [RCX]
            mov QWORD PTR [RSI],R11
            lea ESI,DWORD PTR [RAX+RAX*1]
            mov QWORD PTR [RCX],R9
            movsxd RCX,EAX
            lea R11D,DWORD PTR [RSI+1]
            cmp R8D,R11D
            jle .L_42ba88
.L_42bb4e:

            movsxd RAX,R11D
            mov RAX,QWORD PTR [RDX+RAX*8]
            mov R9,QWORD PTR [RAX+32]
            lea EAX,DWORD PTR [RSI+2]
            cmp R8D,EAX
            jg .L_42bb08
.L_42bb61:

            mov EAX,R11D
            jmp .L_42bb1b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42bb70:

            mov R15,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RDI+216]
            mov R13,RDI
            xor EDX,EDX
            mov RDI,R15
            call .L_446210

            mov RSI,QWORD PTR [R13+200]
            xor EDX,EDX
            mov RDI,R15
            call .L_446330

            mov RSI,QWORD PTR [R13+208]
            xor EDX,EDX
            mov RDI,R15
            call .L_4465a0

            mov RSI,QWORD PTR [R13+280]
            mov RDI,R15
            call .L_445fa0

            mov RDX,QWORD PTR [R13+264]
            test RDX,RDX
            jne .L_42be80
.L_42bbc9:

            xor R15D,R15D
.L_42bbcc:

            mov R14,QWORD PTR [RSP]
            mov RSI,QWORD PTR [R13+248]
            mov RDI,R14
            call .L_446950

            mov RDX,QWORD PTR [R13+232]
            test RDX,RDX
            je .L_42bc09

            mov RCX,QWORD PTR [RBX+680]
            mov RSI,QWORD PTR [R13+224]
            mov RDI,R14
            call .L_446a30

            test EAX,EAX
            jne .L_42bf46
.L_42bc09:

            mov R14,QWORD PTR [RSP]
            mov ESI,DWORD PTR [R13+288]
            mov RDI,R14
            call .L_446590

            mov RCX,QWORD PTR [RBX+680]
            mov RDX,QWORD PTR [R13+160]
            mov RDI,R14
            mov RSI,QWORD PTR [R13+152]
            call .L_4466d0

            test EAX,EAX
            je .L_42bc76

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_42cb77

            mov RDI,QWORD PTR [RBX+680]
            mov R15D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_42dbb0]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_42bc76:

            mov RDX,QWORD PTR [R13+184]
            test RDX,RDX
            jne .L_42bf99
.L_42bc86:

            mov EAX,DWORD PTR [R13+288]
            and EAX,61440
            cmp EAX,16384
            je .L_42bf84

            mov ESI,DWORD PTR [R13+356]
            mov RDI,QWORD PTR [RSP]
            call .L_446630
.L_42bcad:

            mov RSI,QWORD PTR [R13+56]
            mov RDI,QWORD PTR [RSP]
            call .L_446770

            cmp QWORD PTR [R13+368],0
            jne .L_42c05b
.L_42bcc8:

            mov RSI,QWORD PTR [R13+320]
            mov RDI,QWORD PTR [RSP]
            call .L_446070

            mov EAX,DWORD PTR [R13+28]
            test AH,1
            jne .L_42c042
.L_42bce5:

            test AH,2
            jne .L_42c029
.L_42bcee:

            test AH,4
            jne .L_42bff6

            cmp QWORD PTR [R13+336],0
            jne .L_42c014
.L_42bd05:

            mov RDX,QWORD PTR [R13+56]
            mov RAX,QWORD PTR [R13+40]
            movdqu XMM0,XMMWORD PTR [R13+72]
            mov R14,QWORD PTR [R13+384]
            mov DWORD PTR [RBX+552],1
            mov QWORD PTR [RBX+584],RDX
            mov EDX,DWORD PTR [R13+64]
            movups XMMWORD PTR [RBX+600],XMM0
            test R14,R14
            mov QWORD PTR [RBX+560],0
            mov QWORD PTR [RBX+568],RAX
            movdqu XMM0,XMMWORD PTR [R13+88]
            mov DWORD PTR [RBX+592],EDX
            mov RDX,QWORD PTR [R13+104]
            movups XMMWORD PTR [RBX+616],XMM0
            movdqu XMM0,XMMWORD PTR [R13+112]
            mov QWORD PTR [RBX+632],RDX
            mov RDX,QWORD PTR [R13+144]
            movups XMMWORD PTR [RBX+640],XMM0
            movdqu XMM0,XMMWORD PTR [R13+128]
            mov QWORD PTR [RBX+672],RDX
            movups XMMWORD PTR [RBX+656],XMM0
            je .L_42cbbc

            lea RAX,QWORD PTR [RSP+96]
            lea RBP,QWORD PTR [RSP+88]
            lea R15,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+16],RBX
            mov QWORD PTR [RSP+8],R13
            mov RBX,RAX
            mov R13,R14
            mov R14,QWORD PTR [RSP]
            jmp .L_42be57
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bdc8:

            mov ECX,DWORD PTR [R13+112]
            mov EDX,DWORD PTR [R13+72]
            mov RDI,R12
            mov ESI,DWORD PTR [R13+64]
            call .L_429f40

            test EAX,EAX
            jne .L_42be6b

            mov R8,QWORD PTR [R13+40]
            mov RCX,RBX
            mov RDX,RBP
            mov RSI,R15
            mov RDI,R12
            mov QWORD PTR [RSP+80],0
            call .L_429a50

            test EAX,EAX
            jne .L_42be6b

            mov RAX,QWORD PTR [RSP+88]
            cmp QWORD PTR [R13+56],RAX
            jne .L_42c24d

            mov RDX,QWORD PTR [R13+80]
            mov R8,QWORD PTR [R13+120]
            lea RCX,QWORD PTR [R13+128]
            lea RSI,QWORD PTR [R13+88]
            mov RDI,R12
            call .L_42a370

            test EAX,EAX
            jne .L_42be6b

            mov RSI,QWORD PTR [R13+8]
            mov RCX,QWORD PTR [RSP+88]
            mov RDI,R14
            mov RDX,QWORD PTR [RSP+80]
            call .L_4478f0

            mov R13,QWORD PTR [R13]
            test R13,R13
            je .L_42c273
.L_42be57:

            mov RSI,QWORD PTR [R13+48]
            mov RDI,R12
            call .L_42aac0

            test EAX,EAX
            je .L_42bdc8
.L_42be6b:

            mov R13,QWORD PTR [RSP+8]
            mov R15D,EAX
.L_42be73:

            mov RDI,R13
            call .L_428860

            jmp .L_42ba58
.L_42be80:

            mov RCX,QWORD PTR [RBX+680]
            mov RSI,QWORD PTR [R13+256]
            mov RDI,QWORD PTR [RSP]
            call .L_446040

            test EAX,EAX
            je .L_42bbc9

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_42ce71

            mov RDI,QWORD PTR [RBX+680]
            mov R15D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_42daf8]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_42bbcc
.L_42bedd:

            mov QWORD PTR [RBX+504],0
.L_42bee8:

            mov DWORD PTR [RBX+24],1
            mov R15D,1
            jmp .L_42ba58
.L_42befa:

            test R8D,R8D
            mov R15D,R8D
            je .L_42bac0

            jmp .L_42ba58
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42bf10:

            lea RSI,QWORD PTR [RIP+.L_42e13b]
            mov EDX,1
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [RBX+680],RAX
            je .L_42cb8d

            mov RAX,QWORD PTR [R12+2472]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_42b9af
.L_42bf46:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_42d517

            mov RDI,QWORD PTR [RBX+680]
            mov R15D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_42db50]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_42bc09
.L_42bf84:

            mov EAX,DWORD PTR [R13+24]
            mov RDI,QWORD PTR [RSP]
            lea ESI,DWORD PTR [RAX+2]
            call .L_446630

            jmp .L_42bcad
.L_42bf99:

            mov RCX,QWORD PTR [RBX+680]
            mov RSI,QWORD PTR [R13+176]
            mov RDI,QWORD PTR [RSP]
            call .L_446910

            test EAX,EAX
            je .L_42bc86

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_42d50b

            mov RDI,QWORD PTR [RBX+680]
            mov R15D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_42dc10]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_42bc86
.L_42bff6:

            mov RSI,QWORD PTR [R13+312]
            mov RDI,QWORD PTR [RSP]
            call .L_446420

            cmp QWORD PTR [R13+336],0
            je .L_42bd05
.L_42c014:

            mov RSI,QWORD PTR [R13+328]
            mov RDI,QWORD PTR [RSP]
            call .L_445b30

            jmp .L_42bd05
.L_42c029:

            mov RSI,QWORD PTR [R13+304]
            mov RDI,QWORD PTR [RSP]
            call .L_4463f0

            mov EAX,DWORD PTR [R13+28]
            jmp .L_42bcee
.L_42c042:

            mov RSI,QWORD PTR [R13+296]
            mov RDI,QWORD PTR [RSP]
            call .L_4463c0

            mov EAX,DWORD PTR [R13+28]
            jmp .L_42bce5
.L_42c05b:

            mov RSI,QWORD PTR [R13+360]
            mov RDI,QWORD PTR [RSP]
            call .L_446090

            jmp .L_42bcc8
.L_42c070:

            mov EDX,DWORD PTR [RSP+24]
            xor ECX,ECX
            mov ESI,1
            mov RDI,R12
            call .L_429f40

            test EAX,EAX
            mov R15D,EAX
            jne .L_42ba58

            lea RSI,QWORD PTR [RIP+.L_428850]
            lea RDI,QWORD PTR [RIP+.L_429e70]
            xor R9D,R9D
            xor R8D,R8D
            xor ECX,ECX
            mov RDX,R12
            call xmlReaderForIO@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_42d0ce

            lea RSI,QWORD PTR [RIP+.L_429f10]
            mov RDX,R12
            mov RDI,RAX
            call xmlTextReaderSetErrorHandler@PLT

            mov QWORD PTR [RSP+48],RBX
            nop
.L_42c0d0:

            mov RDI,R13
            call xmlTextReaderRead@PLT

            cmp EAX,1
            jne .L_42ca48

            mov RDI,R13
            call xmlTextReaderNodeType@PLT

            mov RDI,R13
            mov R14D,EAX
            call xmlTextReaderConstLocalName@PLT

            cmp R14D,3
            mov RBP,RAX
            je .L_42c2a4

            cmp R14D,15
            je .L_42c23d

            cmp R14D,1
            jne .L_42c0d0

            mov RDI,R13
            call xmlTextReaderIsEmptyElement@PLT

            mov DWORD PTR [RSP+64],EAX
            lea RAX,QWORD PTR [RSP+96]
            mov RDI,R13
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+104],RAX
            call xmlTextReaderMoveToFirstAttribute@PLT

            cmp EAX,1
            mov R15D,EAX
            je .L_42c1af

            jmp .L_42c30c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c150:

            mov RDI,R13
            call xmlTextReaderConstLocalName@PLT

            mov RDI,RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [R14+8],RAX
            je .L_42c2d2

            mov RDI,R13
            call xmlTextReaderConstValue@PLT

            mov RDI,RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [R14+16],RAX
            je .L_42c2c9

            mov RAX,QWORD PTR [RSP+104]
            mov QWORD PTR [R14],0
            mov RDI,R13
            mov QWORD PTR [RAX],R14
            mov QWORD PTR [RSP+104],R14
            call xmlTextReaderMoveToNextAttribute@PLT

            cmp EAX,1
            jne .L_42c309
.L_42c1af:

            mov EDI,24
            call malloc@PLT

            test RAX,RAX
            mov R14,RAX
            jne .L_42c150
.L_42c1c1:

            lea RDX,QWORD PTR [RIP+.L_42dff5]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            mov R15D,4294967266
            call .L_43f5d0
.L_42c1dd:

            mov RBX,QWORD PTR [RSP+96]
            test RBX,RBX
            je .L_42ba58

            nop
            nop
            nop
            nop
            nop
.L_42c1f0:

            mov RDI,QWORD PTR [RBX+8]
            mov R14,QWORD PTR [RBX]
            call free@PLT

            mov RDI,QWORD PTR [RBX+16]
            call free@PLT

            mov RDI,RBX
            mov RBX,R14
            call free@PLT

            test R14,R14
            jne .L_42c1f0

            mov RAX,QWORD PTR [RSP+32]
            test R15D,R15D
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+104],RAX
            jne .L_42ba58
.L_42c231:

            mov EDX,DWORD PTR [RSP+64]
            test EDX,EDX
            je .L_42c0d0
.L_42c23d:

            mov RSI,RBP
            mov RDI,R12
            call .L_428b10

            jmp .L_42c0d0
.L_42c24d:

            lea RDX,QWORD PTR [RIP+.L_42df73]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov R13,QWORD PTR [RSP+8]
            mov R15D,4294967266
            call .L_43f5d0

            jmp .L_42be73
.L_42c273:

            mov RBX,QWORD PTR [RSP+16]
            mov R13,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RBX+568]
.L_42c284:

            xor R15D,R15D
            test RAX,RAX
            je .L_42be73

            mov RSI,QWORD PTR [R13+48]
            mov RDI,R12
            call .L_42aac0

            mov R15D,EAX
            jmp .L_42be73
.L_42c2a4:

            mov RDI,R13
            call xmlTextReaderConstValue@PLT

            mov RBP,RAX
            mov RDI,RAX
            call strlen@PLT

            mov RSI,RBP
            mov EDX,EAX
            mov RDI,R12
            call .L_42ac50

            jmp .L_42c0d0
.L_42c2c9:

            mov RDI,QWORD PTR [R14+8]
            call free@PLT
.L_42c2d2:

            mov RDI,R14
            call free@PLT
.L_42c2da:

            lea RDX,QWORD PTR [RIP+.L_42dff5]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_42c2f0:

            mov RBX,QWORD PTR [RSP+96]
            test RBX,RBX
            je .L_42cb8d

            mov R15D,4294967266
            jmp .L_42c1f0
.L_42c309:

            mov R15D,EAX
.L_42c30c:

            test R15D,R15D
            jne .L_42c1dd

            mov RAX,QWORD PTR [R12+2472]
            mov R14,QWORD PTR [RAX]
            cmp DWORD PTR [R14+40],77
            mov DWORD PTR [R14+56],0
            ja .L_42c358

            mov EAX,DWORD PTR [R14+40]
            lea RBX,QWORD PTR [RIP+.L_42e39c]
            movsxd RAX,DWORD PTR [RBX+RAX*4]
            add RAX,RBX
            jmp RAX
.L_42c343:

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R12
            call .L_42a810

            test EAX,EAX
            mov R15D,EAX
            jne .L_42c2f0
.L_42c358:

            mov RBX,QWORD PTR [RSP+96]
            test RBX,RBX
            jne .L_42c1f0
.L_42c366:

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSP+104],RAX
            jmp .L_42c231
.L_42c37e:

            lea RDI,QWORD PTR [RIP+.L_42dc70]
            mov ECX,14
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_42cd00

            lea RDI,QWORD PTR [RIP+.L_42dc7e]
            mov ECX,9
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_42cdf2

            lea RSI,QWORD PTR [RIP+.L_42dc93]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cdda

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,R14
            mov RDI,R12
            call .L_42b6f0

            test EAX,EAX
            jne .L_42cdcf

            mov DWORD PTR [R14+40],7
            jmp .L_42c358
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c400:

            lea RDI,QWORD PTR [RIP+.L_42dc6c]
            mov ECX,4
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42cdb6

            mov DWORD PTR [R14+40],2
            jmp .L_42c358
.L_42c42b:

            lea RDI,QWORD PTR [RIP+.L_42dc68]
            mov ECX,4
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            jne .L_42cdb6

            mov DWORD PTR [R14+40],1
            jmp .L_42c358
.L_42c45e:

            lea RDI,QWORD PTR [RIP+.L_42dd52]
            mov ECX,14
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_42cd5d

            lea RDI,QWORD PTR [RIP+.L_42dd43]
            mov ECX,8
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_42cd9b

            lea RSI,QWORD PTR [RIP+.L_42dd4b]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            jne .L_42c343

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],43
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
          .byte 0x90
.L_42c4e0:

            lea RDI,QWORD PTR [RIP+.L_42ddf1]
            mov ECX,15
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42ccc8

            lea RBX,QWORD PTR [RIP+.L_42e0b4]
            mov DWORD PTR [R14+40],57
.L_42c50d:

            mov RAX,QWORD PTR [R14+504]
            cmp QWORD PTR [RAX+336],0
            lea RDI,QWORD PTR [RAX+328]
            jne .L_42c6f8
.L_42c529:

            mov RSI,RBX
            call .L_437310

            jmp .L_42c358
.L_42c536:

            lea RDI,QWORD PTR [RIP+.L_42dd1a]
            mov ECX,6
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_42cd80

            lea RDI,QWORD PTR [RIP+.L_42dd20]
            mov ECX,6
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            jne .L_42c343

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],35
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c5a0:

            lea RDI,QWORD PTR [RIP+.L_42dc9d]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_42cd30

            lea RDI,QWORD PTR [RIP+.L_42dc87]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_42d49f

            lea RSI,QWORD PTR [RIP+.L_42dc8e]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d550

            lea RSI,QWORD PTR [RIP+.L_42dca4]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d523

            lea RSI,QWORD PTR [RIP+.L_42dcad]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d4f0

            lea RSI,QWORD PTR [RIP+.L_42dcbf]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d4d5

            lea RSI,QWORD PTR [RIP+.L_42dcdd]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d4ba

            lea RSI,QWORD PTR [RIP+.L_42dce2]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            jne .L_42c343

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],24
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c6a8:

            lea RDI,QWORD PTR [RIP+.L_42dd66]
            mov ECX,11
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42cc91

            lea RBX,QWORD PTR [RIP+.L_42e05a]
            mov DWORD PTR [R14+40],46
.L_42c6d5:

            mov RAX,QWORD PTR [R14+504]
            or DWORD PTR [RAX+28],4096
            cmp QWORD PTR [RAX+336],0
            lea RDI,QWORD PTR [RAX+328]
            je .L_42c529
.L_42c6f8:

            mov ESI,44
            call .L_437330

            mov RDI,QWORD PTR [R14+504]
            add RDI,328
            jmp .L_42c529
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c718:

            lea RDI,QWORD PTR [RIP+.L_42dc93]
            mov ECX,5
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_42d1c2

            lea RDI,QWORD PTR [RIP+.L_42dc98]
            mov ECX,5
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_42d368

            lea RSI,QWORD PTR [RIP+.L_42dcda]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d2a4

            lea RSI,QWORD PTR [RIP+.L_42dce9]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d297

            lea RSI,QWORD PTR [RIP+.L_42dcef]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d28a

            lea RSI,QWORD PTR [RIP+.L_42dcf5]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d492

            lea RSI,QWORD PTR [RIP+.L_42dcfb]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d485

            lea RSI,QWORD PTR [RIP+.L_42dd01]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d478

            lea RSI,QWORD PTR [RIP+.L_42dd05]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d46b

            lea RSI,QWORD PTR [RIP+.L_42dd0a]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d45e

            lea RSI,QWORD PTR [RIP+.L_42dd0e]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d451

            lea RSI,QWORD PTR [RIP+.L_42dd13]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d444

            lea RSI,QWORD PTR [RIP+.L_42dd26]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d437

            lea RSI,QWORD PTR [RIP+.L_42dd2f]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d589

            lea RSI,QWORD PTR [RIP+.L_42dd35]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_42d56b

            lea RSI,QWORD PTR [RIP+.L_42dd3a]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d0fb

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],39
.L_42c8a3:

            test RBX,RBX
            je .L_42c358

            mov RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42dd35]
            call strcmp@PLT

            test EAX,EAX
            jne .L_42c8fe

            mov RDX,QWORD PTR [RBX+16]
            lea RSI,QWORD PTR [RIP+.L_42e16f]
            mov RDI,RDX
            mov QWORD PTR [RSP+56],RDX
            call strcmp@PLT

            test EAX,EAX
            mov RSI,QWORD PTR [R14+504]
            mov RDX,QWORD PTR [RSP+56]
            jne .L_42d1df

            mov RAX,QWORD PTR [R14+536]
            mov QWORD PTR [RSI+8],RAX
            mov QWORD PTR [R14+536],RSI
.L_42c8fe:

            mov RBX,QWORD PTR [RBX]
            jmp .L_42c8a3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c908:

            lea RDI,QWORD PTR [RIP+.L_42dc87]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            je .L_42cd50

            lea RDI,QWORD PTR [RIP+.L_42dc8e]
            mov ECX,5
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42cdda

            mov DWORD PTR [R14+40],6
            jmp .L_42c358
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c958:

            lea RDI,QWORD PTR [RIP+.L_42dc9d]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_42cd0d

            lea RDI,QWORD PTR [RIP+.L_42dc87]
            mov ECX,7
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta R15B
            sbb R15B,0
            movsx R15D,R15B
            test R15D,R15D
            je .L_42d649

            lea RSI,QWORD PTR [RIP+.L_42dc8e]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d62e

            lea RSI,QWORD PTR [RIP+.L_42dca4]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d601

            lea RSI,QWORD PTR [RIP+.L_42dcad]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d5d4

            lea RSI,QWORD PTR [RIP+.L_42dcbf]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d5a7

            lea RSI,QWORD PTR [RIP+.L_42dcd2]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            jne .L_42c343

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],15
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ca48:

            mov RDI,R13
            mov DWORD PTR [RSP+32],EAX
            mov RBX,QWORD PTR [RSP+48]
            call xmlFreeTextReader@PLT

            call xmlCleanupParser@PLT

            mov EAX,DWORD PTR [RSP+32]
            test EAX,EAX
            jne .L_42cb8d

            mov RDI,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RDI+16],RAX
            mov RAX,RDI
            mov RDI,QWORD PTR [RSP+40]
            cmp QWORD PTR [RAX+72],RDI
            jne .L_42ce26

            mov EAX,DWORD PTR [RSP+24]
            test EAX,EAX
            jne .L_42cbd0
.L_42ca94:

            mov RAX,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RAX+536]
            add RAX,544
            mov QWORD PTR [RSP+16],RAX
            test R14,R14
            je .L_42cb01

            mov QWORD PTR [RSP+24],RBX
.L_42cab5:

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RAX+544]
            test RDX,RDX
            je .L_42caf3

            mov EAX,DWORD PTR [RDX+8]
            mov RSI,QWORD PTR [R14+32]
            cmp RAX,RSI
            jne .L_42caeb

            jmp .L_42cc7b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cae0:

            mov ECX,DWORD PTR [RAX+8]
            cmp RCX,RSI
            je .L_42cb1b

            mov RDX,RAX
.L_42caeb:

            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            jne .L_42cae0
.L_42caf3:

            mov R14,QWORD PTR [R14+8]
            test R14,R14
            jne .L_42cab5

            mov RBX,QWORD PTR [RSP+24]
.L_42cb01:

            lea RAX,QWORD PTR [RIP+.L_42dc68]
            mov DWORD PTR [R12+16],655360
            mov QWORD PTR [R12+24],RAX
            jmp .L_42bac0
.L_42cb1b:

            mov R15,RDX
.L_42cb1e:

            mov EBX,DWORD PTR [RAX+12]
            lea EBP,DWORD PTR [RBX+1]
            mov RBX,QWORD PTR [RAX+16]
            mov DWORD PTR [R14+356],EBP
            test RBX,RBX
            je .L_42cb64

            lea R13,QWORD PTR [R14+152]
.L_42cb3b:

            lea RDI,QWORD PTR [RBX+360]
            mov DWORD PTR [RBX+356],EBP
            mov QWORD PTR [RBX+368],0
            mov RSI,R13
            call .L_434410

            mov RBX,QWORD PTR [RBX+8]
            test RBX,RBX
            jne .L_42cb3b
.L_42cb64:

            mov RDI,QWORD PTR [R15]
            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [R15],RAX
            call free@PLT

            jmp .L_42caf3
.L_42cb77:

            lea RDX,QWORD PTR [RIP+.L_42db88]
.L_42cb7e:

            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_42cb8d:

            mov R15D,4294967266
            jmp .L_42ba58
.L_42cb98:

            movzx ECX,DX
            lea RDX,QWORD PTR [RIP+.L_42da90]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R15D,4294967266
            call .L_43f5d0

            jmp .L_42ba58
.L_42cbbc:

            test R15D,R15D
            je .L_42c284

            jmp .L_42be73
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cbd0:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+80]
            call .L_42aac0

            test EAX,EAX
            mov R15D,EAX
            jne .L_42ba58

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            mov RDI,R12
            mov RSI,QWORD PTR [RAX+88]
            call .L_4049e0

            mov R8,QWORD PTR [RSP+88]
            test R8,R8
            js .L_42befa

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RDI+88]
            cmp RDX,R8
            ja .L_42d0da

            xor R8D,R8D
            xor ECX,ECX
            mov RSI,RAX
            mov RDI,R12
            call .L_42a370

            mov R14,QWORD PTR [RSP+8]
            mov EBP,EAX
            mov RDI,R12
            mov RSI,QWORD PTR [R14+88]
            call .L_404a30

            mov RAX,QWORD PTR [R14+88]
            add QWORD PTR [R14],RAX
            test EBP,EBP
            je .L_42ca94

            jmp .L_42cb8d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cc60:

            lea RDX,QWORD PTR [RIP+.L_42e15a]
.L_42cc67:

            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_42cb8d
.L_42cc7b:

            mov R15,QWORD PTR [RSP+16]
            mov RAX,RDX
            jmp .L_42cb1e
.L_42cc88:

            lea RDX,QWORD PTR [RIP+.L_42e141]
            jmp .L_42cc67
.L_42cc91:

            lea RDI,QWORD PTR [RIP+.L_42dd71]
            mov ECX,14
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42ce4a

            mov DWORD PTR [R14+40],47
            lea RBX,QWORD PTR [RIP+.L_42e061]
            jmp .L_42c6d5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ccc8:

            lea RDI,QWORD PTR [RIP+.L_42de00]
            mov ECX,9
            mov RSI,RBP

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_42cdff

            mov DWORD PTR [R14+40],58
            lea RBX,QWORD PTR [RIP+.L_42e07b]
            jmp .L_42c50d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cd00:

            mov DWORD PTR [R14+40],3
            jmp .L_42c358
.L_42cd0d:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],9
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cd30:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],17
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cd50:

            mov DWORD PTR [R14+40],5
            jmp .L_42c358
.L_42cd5d:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],44
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42cd80:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],34
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42cd9b:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],42
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42cdb6:

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R12
            call .L_42a810

            test EAX,EAX
            mov R15D,EAX
            je .L_42c358
.L_42cdcf:

            mov R15D,4294967266
            jmp .L_42c1dd
.L_42cdda:

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R12
            call .L_42a810

            test EAX,EAX
            je .L_42c358

            jmp .L_42cdcf
.L_42cdf2:

            mov DWORD PTR [R14+40],4
            jmp .L_42c358
.L_42cdff:

            lea RSI,QWORD PTR [RIP+.L_42de09]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42ce7d

            mov DWORD PTR [R14+40],59
            lea RBX,QWORD PTR [RIP+.L_42e0c3]
            jmp .L_42c50d
.L_42ce26:

            lea RDX,QWORD PTR [RIP+.L_42e187]
            or ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            mov R15D,4294967266
            call .L_43f5d0

            jmp .L_42ba58
.L_42ce45:

            call __stack_chk_fail@PLT
.L_42ce4a:

            lea RSI,QWORD PTR [RIP+.L_42dd7f]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cea4

            mov DWORD PTR [R14+40],48
            lea RBX,QWORD PTR [RIP+.L_42e06c]
            jmp .L_42c6d5
.L_42ce71:

            lea RDX,QWORD PTR [RIP+.L_42dad8]
            jmp .L_42cb7e
.L_42ce7d:

            lea RSI,QWORD PTR [RIP+.L_42de12]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cecb

            mov DWORD PTR [R14+40],60
            lea RBX,QWORD PTR [RIP+.L_42e0cc]
            jmp .L_42c50d
.L_42cea4:

            lea RSI,QWORD PTR [RIP+.L_42dd8a]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cef2

            mov DWORD PTR [R14+40],49
            lea RBX,QWORD PTR [RIP+.L_42e074]
            jmp .L_42c6d5
.L_42cecb:

            lea RSI,QWORD PTR [RIP+.L_42de1e]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cf19

            mov DWORD PTR [R14+40],61
            lea RBX,QWORD PTR [RIP+.L_42e08e]
            jmp .L_42c50d
.L_42cef2:

            lea RSI,QWORD PTR [RIP+.L_42dd95]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cf40

            mov DWORD PTR [R14+40],50
            lea RBX,QWORD PTR [RIP+.L_42e07b]
            jmp .L_42c6d5
.L_42cf19:

            lea RSI,QWORD PTR [RIP+.L_42de28]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cf67

            mov DWORD PTR [R14+40],62
            lea RBX,QWORD PTR [RIP+.L_42e099]
            jmp .L_42c50d
.L_42cf40:

            lea RSI,QWORD PTR [RIP+.L_42dda2]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cf8e

            mov DWORD PTR [R14+40],51
            lea RBX,QWORD PTR [RIP+.L_42e085]
            jmp .L_42c6d5
.L_42cf67:

            lea RSI,QWORD PTR [RIP+.L_42de33]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cfb5

            mov DWORD PTR [R14+40],63
            lea RBX,QWORD PTR [RIP+.L_42e05a]
            jmp .L_42c50d
.L_42cf8e:

            lea RSI,QWORD PTR [RIP+.L_42ddb1]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42cfdc

            mov DWORD PTR [R14+40],52
            lea RBX,QWORD PTR [RIP+.L_42e08e]
            jmp .L_42c6d5
.L_42cfb5:

            lea RSI,QWORD PTR [RIP+.L_42de3a]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d003

            mov DWORD PTR [R14+40],64
            lea RBX,QWORD PTR [RIP+.L_42e0d1]
            jmp .L_42c50d
.L_42cfdc:

            lea RSI,QWORD PTR [RIP+.L_42ddc1]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d02a

            mov DWORD PTR [R14+40],53
            lea RBX,QWORD PTR [RIP+.L_42e099]
            jmp .L_42c6d5
.L_42d003:

            lea RSI,QWORD PTR [RIP+.L_42de42]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d051

            mov DWORD PTR [R14+40],65
            lea RBX,QWORD PTR [RIP+.L_42e0d9]
            jmp .L_42c50d
.L_42d02a:

            lea RSI,QWORD PTR [RIP+.L_42ddce]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d078

            mov DWORD PTR [R14+40],54
            lea RBX,QWORD PTR [RIP+.L_42e0a1]
            jmp .L_42c6d5
.L_42d051:

            lea RSI,QWORD PTR [RIP+.L_42de4c]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d0a3

            mov DWORD PTR [R14+40],66
            lea RBX,QWORD PTR [RIP+.L_42e0e3]
            jmp .L_42c50d
.L_42d078:

            lea RSI,QWORD PTR [RIP+.L_42dddd]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42c343

            mov DWORD PTR [R14+40],55
            lea RBX,QWORD PTR [RIP+.L_42e0ab]
            jmp .L_42c6d5
.L_42d0a3:

            lea RSI,QWORD PTR [RIP+.L_42de56]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d664

            mov DWORD PTR [R14+40],67
            lea RBX,QWORD PTR [RIP+.L_42e0ec]
            jmp .L_42c50d
.L_42d0ce:

            lea RDX,QWORD PTR [RIP+.L_42dab0]
            jmp .L_42cb7e
.L_42d0da:

            lea RDX,QWORD PTR [RIP+.L_42deb6]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R15D,4294967266
            call .L_43f5d0

            jmp .L_42ba58
.L_42d0fb:

            lea RSI,QWORD PTR [RIP+.L_42dcdd]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d159

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],40
.L_42d11b:

            test RBX,RBX
            je .L_42c358

            mov RDI,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_42e178]
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d154

            mov RDI,QWORD PTR [RBX+16]
            lea RSI,QWORD PTR [RIP+.L_42e180]
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d154

            mov DWORD PTR [R14+56],1
.L_42d154:

            mov RBX,QWORD PTR [RBX]
            jmp .L_42d11b
.L_42d159:

            lea RSI,QWORD PTR [RIP+.L_42dd3f]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d23c

            lea RSI,QWORD PTR [RIP+.L_42dd60]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            je .L_42d221

            lea RSI,QWORD PTR [RIP+.L_42ddec]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            mov R15D,EAX
            jne .L_42c343

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],56
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d1c2:

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,R14
            mov RDI,R12
            call .L_42b6f0

            test EAX,EAX
            je .L_42c358

            jmp .L_42cdcf
.L_42d1df:

            xor EAX,EAX
            mov RDI,RDX
            or RCX,-1

            repne scasb AL,BYTE PTR [RDI]

            xor R8D,R8D
            mov RAX,RCX
            xor ECX,ECX
            not RAX
            lea RDI,QWORD PTR [RAX-1]
            movsx EAX,BYTE PTR [RDX]
            sub EAX,48
.L_42d1ff:

            cmp EAX,9
            ja .L_42d257

            cmp R8,RDI
            je .L_42d257

            imul RCX,RCX,10
            cdqe 
            add RCX,RAX
            movsx EAX,BYTE PTR [RDX+R8*1+1]
            add R8,1
            sub EAX,48
            jmp .L_42d1ff
.L_42d221:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],45
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d23c:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],41
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d257:

            test ECX,ECX
            mov R8D,ECX
            mov DWORD PTR [RSI+352],ECX
            je .L_42c8fe

            mov RDX,QWORD PTR [R14+544]
            mov RAX,RDX
.L_42d272:

            test RAX,RAX
            je .L_42d3d9

            cmp R8D,DWORD PTR [RAX+8]
            je .L_42d3c4

            mov RAX,QWORD PTR [RAX]
            jmp .L_42d272
.L_42d28a:

            mov DWORD PTR [R14+40],26
            jmp .L_42c358
.L_42d297:

            mov DWORD PTR [R14+40],25
            jmp .L_42c358
.L_42d2a4:

            mov ESI,176
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R8,RAX
            je .L_42c2da

            mov R9,QWORD PTR [RSP+96]
            mov QWORD PTR [R14+512],RAX
            test R9,R9
            je .L_42d375

            lea R10,QWORD PTR [RIP+.L_42e057]
            xor EAX,EAX
            jmp .L_42d2ec
          .byte 0x90
.L_42d2e0:

            mov R9,QWORD PTR [R9]
            test R9,R9
            je .L_42d375
.L_42d2ec:

            mov RSI,QWORD PTR [R9+8]
            mov ECX,3
            mov RDI,R10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_42d2e0

            mov RSI,QWORD PTR [R9+16]
            or RCX,-1
            movsx EDX,BYTE PTR [RSI]
            mov RDI,RSI

            repne scasb AL,BYTE PTR [RDI]

            not RCX
            sub EDX,48
            sub RCX,1
            cmp EDX,9
            ja .L_42d430

            test RCX,RCX
            je .L_42d430

            lea RDI,QWORD PTR [RSI+RCX*1]
            xor ECX,ECX
            jmp .L_42d345
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d340:

            cmp RDI,RSI
            je .L_42d35f
.L_42d345:

            lea RCX,QWORD PTR [RCX+RCX*4]
            movsxd RDX,EDX
            add RSI,1
            lea RCX,QWORD PTR [RDX+RCX*2]
            movsx EDX,BYTE PTR [RSI]
            sub EDX,48
            cmp EDX,9
            jbe .L_42d340
.L_42d35f:

            mov QWORD PTR [R8+32],RCX
            jmp .L_42d2e0
.L_42d368:

            mov DWORD PTR [R14+40],8
            jmp .L_42c358
.L_42d375:

            mov RAX,QWORD PTR [R14+504]
            lea RDX,QWORD PTR [RAX+384]
            mov RAX,QWORD PTR [RAX+384]
            test RAX,RAX
            je .L_42d3b1

            mov RCX,QWORD PTR [R8+32]
            cmp QWORD PTR [RAX+32],RCX
            jbe .L_42d3a6

            jmp .L_42d3b1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d3a0:

            cmp QWORD PTR [RAX+32],RCX
            ja .L_42d3b1
.L_42d3a6:

            mov RDX,RAX
            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_42d3a0
.L_42d3b1:

            mov QWORD PTR [R8],RAX
            mov QWORD PTR [RDX],R8
            mov DWORD PTR [R14+40],16
            jmp .L_42c358
.L_42d3c4:

            mov RDX,QWORD PTR [RAX+16]
            mov QWORD PTR [RSI+8],RDX
            add DWORD PTR [RAX+12],1
            mov QWORD PTR [RAX+16],RSI
            jmp .L_42c8fe
.L_42d3d9:

            mov EDI,24
            mov QWORD PTR [RSP+72],RSI
            mov DWORD PTR [RSP+68],R8D
            mov QWORD PTR [RSP+56],RDX
            call malloc@PLT

            test RAX,RAX
            je .L_42c1c1

            mov RSI,QWORD PTR [RSP+72]
            mov R8D,DWORD PTR [RSP+68]
            mov RDX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSI+8],0
            mov DWORD PTR [RAX+8],R8D
            mov DWORD PTR [RAX+12],1
            mov QWORD PTR [RAX+16],RSI
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [R14+544],RAX
            jmp .L_42c8fe
.L_42d430:

            xor ECX,ECX
            jmp .L_42d35f
.L_42d437:

            mov DWORD PTR [R14+40],36
            jmp .L_42c358
.L_42d444:

            mov DWORD PTR [R14+40],33
            jmp .L_42c358
.L_42d451:

            mov DWORD PTR [R14+40],32
            jmp .L_42c358
.L_42d45e:

            mov DWORD PTR [R14+40],31
            jmp .L_42c358
.L_42d46b:

            mov DWORD PTR [R14+40],30
            jmp .L_42c358
.L_42d478:

            mov DWORD PTR [R14+40],29
            jmp .L_42c358
.L_42d485:

            mov DWORD PTR [R14+40],28
            jmp .L_42c358
.L_42d492:

            mov DWORD PTR [R14+40],27
            jmp .L_42c358
.L_42d49f:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],18
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d4ba:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],23
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d4d5:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],22
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d4f0:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],21
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d50b:

            lea RDX,QWORD PTR [RIP+.L_42dbe8]
            jmp .L_42cb7e
.L_42d517:

            lea RDX,QWORD PTR [RIP+.L_42db30]
            jmp .L_42cb7e
.L_42d523:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],20
            mov RDI,RBX
            call .L_42a6c0

            mov RCX,QWORD PTR [R14+512]
            test RBX,RBX
            mov DWORD PTR [RCX+64],EAX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d550:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],19
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d56b:

            mov RBX,QWORD PTR [RSP+96]
            xor R15D,R15D
            mov DWORD PTR [R14+40],38
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d589:

            mov RBX,QWORD PTR [RSP+96]
            xor R15D,R15D
            mov DWORD PTR [R14+40],37
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d5a7:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],14
            mov RDI,RBX
            call .L_42a5e0

            mov RCX,QWORD PTR [R14+504]
            test RBX,RBX
            mov DWORD PTR [RCX+112],EAX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d5d4:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],13
            mov RDI,RBX
            call .L_42a5e0

            mov RCX,QWORD PTR [R14+504]
            test RBX,RBX
            mov DWORD PTR [RCX+72],EAX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d601:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],12
            mov RDI,RBX
            call .L_42a6c0

            mov RCX,QWORD PTR [R14+504]
            test RBX,RBX
            mov DWORD PTR [RCX+64],EAX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d62e:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],11
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d649:

            mov RBX,QWORD PTR [RSP+96]
            mov DWORD PTR [R14+40],10
            test RBX,RBX
            jne .L_42c1f0

            jmp .L_42c366
.L_42d664:

            lea RSI,QWORD PTR [RIP+.L_42de62]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d68b

            mov DWORD PTR [R14+40],68
            lea RBX,QWORD PTR [RIP+.L_42e0f7]
            jmp .L_42c50d
.L_42d68b:

            lea RSI,QWORD PTR [RIP+.L_42de6c]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d6b2

            mov DWORD PTR [R14+40],69
            lea RBX,QWORD PTR [RIP+.L_42e0ff]
            jmp .L_42c50d
.L_42d6b2:

            lea RSI,QWORD PTR [RIP+.L_42de72]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d6d9

            mov DWORD PTR [R14+40],70
            lea RBX,QWORD PTR [RIP+.L_42e105]
            jmp .L_42c50d
.L_42d6d9:

            lea RSI,QWORD PTR [RIP+.L_42de7e]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d700

            mov DWORD PTR [R14+40],71
            lea RBX,QWORD PTR [RIP+.L_42e10d]
            jmp .L_42c50d
.L_42d700:

            lea RSI,QWORD PTR [RIP+.L_42de85]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d727

            mov DWORD PTR [R14+40],72
            lea RBX,QWORD PTR [RIP+.L_42e114]
            jmp .L_42c50d
.L_42d727:

            lea RSI,QWORD PTR [RIP+.L_42de8f]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d74e

            mov DWORD PTR [R14+40],73
            lea RBX,QWORD PTR [RIP+.L_42e11c]
            jmp .L_42c50d
.L_42d74e:

            lea RSI,QWORD PTR [RIP+.L_42de96]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d775

            mov DWORD PTR [R14+40],74
            lea RBX,QWORD PTR [RIP+.L_42e123]
            jmp .L_42c50d
.L_42d775:

            lea RSI,QWORD PTR [RIP+.L_42de9e]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42d79c

            mov DWORD PTR [R14+40],75
            lea RBX,QWORD PTR [RIP+.L_42e12b]
            jmp .L_42c50d
.L_42d79c:

            lea RSI,QWORD PTR [RIP+.L_42dea5]
            mov RDI,RBP
            call strcmp@PLT

            test EAX,EAX
            jne .L_42c343

            mov DWORD PTR [R14+40],76
            lea RBX,QWORD PTR [RIP+.L_42e132]
            jmp .L_42c50d
.L_42d7c7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d7d0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_42dc48]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,24
            call .L_443f50

            cmp EAX,-30
            je .L_42d864

            mov ESI,688
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_42d86b

            lea RAX,QWORD PTR [RIP+.L_4288e0]
            push 0
            push 0
            lea R9,QWORD PTR [RIP+.L_42b960]
            lea RCX,QWORD PTR [RIP+.L_428ab0]
            lea RDX,QWORD PTR [RIP+.L_42dc68]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_428a50]
            push 0
            xor R8D,R8D
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_42a3f0]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_42d864

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP+12]
.L_42d864:

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_42d86b:

            lea RDX,QWORD PTR [RIP+.L_42e1a3]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_42d864
.L_42d888:
          .string "Failed to clean up zlib decompressor"
          .zero 3
.L_42d8b0:
          .string "Failed to clean up bzip2 decompressor"
          .zero 2
.L_42d8d8:
          .string "Couldn\'t allocate memory for out buffer"
.L_42d900:
          .string "File decompression failed (%d)"
          .zero 1
.L_42d920:
          .string "Failed to clean up decompressor"
.L_42d940:
          .string "Couldn\'t initialize zlib stream."
          .zero 7
.L_42d968:
          .string "Internal error initializing decompressor: %s"
          .zero 3
.L_42d998:
          .string "Internal error initializing compression library: Cannot allocate memory"
.L_42d9e0:
          .string "Internal error initializing compression library: Invalid or unsupported options"
.L_42da30:
          .string "Internal error initializing lzma library"
          .zero 7
.L_42da60:
          .string "%s compression not supported on this platform"
          .zero 2
.L_42da90:
          .string "Unsupported header version(%d)"
          .zero 1
.L_42dab0:
          .string "Couldn\'t allocate memory for xml parser"
.L_42dad8:
          .string "Can\'t allocate memory for Gname"
.L_42daf8:
          .string "Gname cannot be converted from %s to current locale."
          .zero 3
.L_42db30:
          .string "Can\'t allocate memory for Uname"
.L_42db50:
          .string "Uname cannot be converted from %s to current locale."
          .zero 3
.L_42db88:
          .string "Can\'t allocate memory for Pathname"
          .zero 5
.L_42dbb0:
          .string "Pathname cannot be converted from %s to current locale."
.L_42dbe8:
          .string "Can\'t allocate memory for Linkname"
          .zero 5
.L_42dc10:
          .string "Linkname cannot be converted from %s to current locale."
.L_42dc48:
          .string "archive_read_support_format_xar"
.L_42dc68:
          .byte 0x78
          .byte 0x61
          .byte 0x72
          .byte 0x0
.L_42dc6c:
          .byte 0x74
          .byte 0x6f
          .byte 0x63
          .byte 0x0
.L_42dc70:
          .string "creation-time"
.L_42dc7e:
          .string "checksum"
.L_42dc87:
          .string "offset"
.L_42dc8e:
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x0
.L_42dc93:
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x0
.L_42dc98:
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x0
.L_42dc9d:
          .string "length"
.L_42dca4:
          .string "encoding"
.L_42dcad:
          .string "archived-checksum"
.L_42dcbf:
          .string "extracted-checksum"
.L_42dcd2:
          .string "content"
.L_42dcda:
          .byte 0x65
          .byte 0x61
          .byte 0x0
.L_42dcdd:
          .byte 0x6e
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x0
.L_42dce2:
          .string "fstype"
.L_42dce9:
          .string "ctime"
.L_42dcef:
          .string "mtime"
.L_42dcf5:
          .string "atime"
.L_42dcfb:
          .string "group"
.L_42dd01:
          .byte 0x67
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_42dd05:
          .byte 0x75
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x0
.L_42dd0a:
          .byte 0x75
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_42dd0e:
          .byte 0x6d
          .byte 0x6f
          .byte 0x64
          .byte 0x65
          .byte 0x0
.L_42dd13:
          .string "device"
.L_42dd1a:
          .string "major"
.L_42dd20:
          .string "minor"
.L_42dd26:
          .string "deviceno"
.L_42dd2f:
          .string "inode"
.L_42dd35:
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x0
.L_42dd3a:
          .byte 0x74
          .byte 0x79
          .byte 0x70
          .byte 0x65
          .byte 0x0
.L_42dd3f:
          .byte 0x61
          .byte 0x63
          .byte 0x6c
          .byte 0x0
.L_42dd43:
          .string "default"
.L_42dd4b:
          .string "access"
.L_42dd52:
          .string "appleextended"
.L_42dd60:
          .string "flags"
.L_42dd66:
          .string "UserNoDump"
.L_42dd71:
          .string "UserImmutable"
.L_42dd7f:
          .string "UserAppend"
.L_42dd8a:
          .string "UserOpaque"
.L_42dd95:
          .string "UserNoUnlink"
.L_42dda2:
          .string "SystemArchived"
.L_42ddb1:
          .string "SystemImmutable"
.L_42ddc1:
          .string "SystemAppend"
.L_42ddce:
          .string "SystemNoUnlink"
.L_42dddd:
          .string "SystemSnapshot"
.L_42ddec:
          .byte 0x65
          .byte 0x78
          .byte 0x74
          .byte 0x32
          .byte 0x0
.L_42ddf1:
          .string "SecureDeletion"
.L_42de00:
          .string "Undelete"
.L_42de09:
          .string "Compress"
.L_42de12:
          .string "Synchronous"
.L_42de1e:
          .string "Immutable"
.L_42de28:
          .string "AppendOnly"
.L_42de33:
          .string "NoDump"
.L_42de3a:
          .string "NoAtime"
.L_42de42:
          .string "CompDirty"
.L_42de4c:
          .string "CompBlock"
.L_42de56:
          .string "NoCompBlock"
.L_42de62:
          .string "CompError"
.L_42de6c:
          .string "BTree"
.L_42de72:
          .string "HashIndexed"
.L_42de7e:
          .string "iMagic"
.L_42de85:
          .string "Journaled"
.L_42de8f:
          .string "NoTail"
.L_42de96:
          .string "DirSync"
.L_42de9e:
          .string "TopDir"
.L_42dea5:
          .string "Reserved"
.L_42deae:
          .string "xz"
.L_42deb1:
          .string "lzma"
.L_42deb6:
          .string "Truncated archive file"
.L_42decd:
          .string "bzip decompression failed"
.L_42dee7:
          .string "%s decompression failed(%d)"
.L_42df03:
          .string "XML Parsing error: %s"
.L_42df19:
          .string "??"
.L_42df1c:
          .string "out of memory"
.L_42df2a:
          .string "mis-compiled library"
.L_42df3f:
          .string "invalid setup parameter"
.L_42df57:
          .string "bzip2"
.L_42df5d:
          .string "1.2.11"
.L_42df64:
          .string "Sumcheck error"
.L_42df73:
          .string "Decompressed size error"
.L_42df8b:
          .string "style"
.L_42df91:
          .string "application/octet-stream"
.L_42dfaa:
          .string "application/x-gzip"
.L_42dfbd:
          .string "application/x-bzip2"
.L_42dfd1:
          .string "application/x-lzma"
.L_42dfe4:
          .string "application/x-xz"
.L_42dff5:
          .string "Out of memory"
.L_42e003:
          .string "Cannot seek."
.L_42e010:
          .string "hardlink"
.L_42e019:
          .string "directory"
.L_42e023:
          .string "symlink"
.L_42e02b:
          .string "character special"
.L_42e03d:
          .string "block special"
.L_42e04b:
          .string "socket"
.L_42e052:
          .byte 0x66
          .byte 0x69
          .byte 0x66
          .byte 0x6f
          .byte 0x0
.L_42e057:
          .byte 0x69
          .byte 0x64
          .byte 0x0
.L_42e05a:
          .string "nodump"
.L_42e061:
          .string "uimmutable"
.L_42e06c:
          .string "uappend"
.L_42e074:
          .string "opaque"
.L_42e07b:
          .string "nouunlink"
.L_42e085:
          .string "archived"
.L_42e08e:
          .string "simmutable"
.L_42e099:
          .string "sappend"
.L_42e0a1:
          .string "nosunlink"
.L_42e0ab:
          .string "snapshot"
.L_42e0b4:
          .string "securedeletion"
.L_42e0c3:
          .string "compress"
.L_42e0cc:
          .string "sync"
.L_42e0d1:
          .string "noatime"
.L_42e0d9:
          .string "compdirty"
.L_42e0e3:
          .string "comprblk"
.L_42e0ec:
          .string "nocomprblk"
.L_42e0f7:
          .string "comperr"
.L_42e0ff:
          .string "btree"
.L_42e105:
          .string "hashidx"
.L_42e10d:
          .string "imagic"
.L_42e114:
          .string "journal"
.L_42e11c:
          .string "notail"
.L_42e123:

            imul ESI,DWORD PTR FS:[RDX+115],6516345
.L_42e12b:
          .string "topdir"
.L_42e132:
          .string "reserved"
.L_42e13b:
          .string "UTF-8"
.L_42e141:
          .string "Truncated archive header"
.L_42e15a:
          .string "Invalid header magic"
.L_42e16f:

            outsd DX,DWORD PTR [RSI]
          .byte 0x72
          .byte 0x69
          .byte 0x67
          .byte 0x69
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x0
.L_42e178:
          .string "enctype"
.L_42e180:
          .string "base64"
.L_42e187:
          .string "TOC uncompressed size error"
# WARNING: found overlapping blocks at address 2df55
# WARNING: found overlapping blocks at address 2df5a
.L_42e1a3:
          .string "Can\'t allocate xar data"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e1c0:
          .long .L_428b81-.L_42e1c0
          .long .L_429990-.L_42e1c0
          .long .L_429960-.L_42e1c0
          .long .L_429930-.L_42e1c0
          .long .L_429900-.L_42e1c0
          .long .L_4298d0-.L_42e1c0
          .long .L_4298a8-.L_42e1c0
          .long .L_429850-.L_42e1c0
          .long .L_429820-.L_42e1c0
          .long .L_4297f0-.L_42e1c0
          .long .L_4297c0-.L_42e1c0
          .long .L_429790-.L_42e1c0
          .long .L_429760-.L_42e1c0
          .long .L_429730-.L_42e1c0
          .long .L_429700-.L_42e1c0
          .long .L_4296d8-.L_42e1c0
          .long .L_4296a0-.L_42e1c0
          .long .L_429670-.L_42e1c0
          .long .L_429640-.L_42e1c0
          .long .L_429610-.L_42e1c0
          .long .L_4295e0-.L_42e1c0
          .long .L_4295b0-.L_42e1c0
          .long .L_429580-.L_42e1c0
          .long .L_429550-.L_42e1c0
          .long .L_429520-.L_42e1c0
          .long .L_4294f0-.L_42e1c0
          .long .L_4294c0-.L_42e1c0
          .long .L_429490-.L_42e1c0
          .long .L_429460-.L_42e1c0
          .long .L_429430-.L_42e1c0
          .long .L_429400-.L_42e1c0
          .long .L_4293d0-.L_42e1c0
          .long .L_4293a0-.L_42e1c0
          .long .L_429370-.L_42e1c0
          .long .L_429340-.L_42e1c0
          .long .L_429310-.L_42e1c0
          .long .L_4292e0-.L_42e1c0
          .long .L_4292b0-.L_42e1c0
          .long .L_429280-.L_42e1c0
          .long .L_429250-.L_42e1c0
          .long .L_429220-.L_42e1c0
          .long .L_4291f0-.L_42e1c0
          .long .L_4291c0-.L_42e1c0
          .long .L_429190-.L_42e1c0
          .long .L_429160-.L_42e1c0
          .long .L_429130-.L_42e1c0
          .long .L_429100-.L_42e1c0
          .long .L_4290d0-.L_42e1c0
          .long .L_4290a0-.L_42e1c0
          .long .L_429070-.L_42e1c0
          .long .L_429040-.L_42e1c0
          .long .L_429010-.L_42e1c0
          .long .L_428fe0-.L_42e1c0
          .long .L_428fb0-.L_42e1c0
          .long .L_428f80-.L_42e1c0
          .long .L_428f50-.L_42e1c0
          .long .L_428f20-.L_42e1c0
          .long .L_428ef0-.L_42e1c0
          .long .L_428ec0-.L_42e1c0
          .long .L_428e90-.L_42e1c0
          .long .L_428e60-.L_42e1c0
          .long .L_428e30-.L_42e1c0
          .long .L_428e00-.L_42e1c0
          .long .L_428dd0-.L_42e1c0
          .long .L_428da0-.L_42e1c0
          .long .L_428d70-.L_42e1c0
          .long .L_428d40-.L_42e1c0
          .long .L_428d10-.L_42e1c0
          .long .L_428ce0-.L_42e1c0
          .long .L_428cb0-.L_42e1c0
          .long .L_428c80-.L_42e1c0
          .long .L_428c50-.L_42e1c0
          .long .L_428c20-.L_42e1c0
          .long .L_428bf0-.L_42e1c0
          .long .L_428bd0-.L_42e1c0
          .long .L_428bb0-.L_42e1c0
          .long .L_428b90-.L_42e1c0
          .long .L_428b40-.L_42e1c0
.L_42e2f8:
          .long .L_429fd2-.L_42e2f8
          .long .L_429f80-.L_42e2f8
          .long .L_42a070-.L_42e2f8
          .long .L_42a000-.L_42e2f8
          .long .L_42a000-.L_42e2f8
.L_42e30c:
          .long .L_42b359-.L_42e30c
          .long .L_42b309-.L_42e30c
          .long .L_42b2b9-.L_42e30c
          .long .L_42acd3-.L_42e30c
          .long .L_42b2a2-.L_42e30c
          .long .L_42b288-.L_42e30c
          .long .L_42acd3-.L_42e30c
          .long .L_42acd3-.L_42e30c
          .long .L_42b238-.L_42e30c
          .long .L_42b1e8-.L_42e30c
          .long .L_42b18f-.L_42e30c
          .long .L_42acd3-.L_42e30c
          .long .L_42b16a-.L_42e30c
          .long .L_42b142-.L_42e30c
          .long .L_42b119-.L_42e30c
          .long .L_42b0ea-.L_42e30c
          .long .L_42b0cc-.L_42e30c
          .long .L_42b0ae-.L_42e30c
          .long .L_42b5b3-.L_42e30c
          .long .L_42b58c-.L_42e30c
          .long .L_42b543-.L_42e30c
          .long .L_42b51c-.L_42e30c
          .long .L_42b4cf-.L_42e30c
          .long .L_42b45c-.L_42e30c
          .long .L_42acd3-.L_42e30c
          .long .L_42b40c-.L_42e30c
          .long .L_42b3b7-.L_42e30c
          .long .L_42b64b-.L_42e30c
          .long .L_42b5d1-.L_42e30c
          .long .L_42b624-.L_42e30c
          .long .L_42aedb-.L_42e30c
          .long .L_42ad68-.L_42e30c
          .long .L_42acd3-.L_42e30c
          .long .L_42b3a9-.L_42e30c
          .long .L_42b3a9-.L_42e30c
          .long .L_42b3a9-.L_42e30c
.L_42e39c:
          .long .L_42c42b-.L_42e39c
          .long .L_42c400-.L_42e39c
          .long .L_42c37e-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c908-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c718-.L_42e39c
          .long .L_42c958-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c5a0-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c536-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c45e-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c6a8-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c4e0-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .long .L_42c343-.L_42e39c
          .zero 12
.L_42e4e0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_42e8e0:

            mov RAX,QWORD PTR [RDI]
            ret 
.L_42e8e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e8f0:

            xor EAX,EAX
            ret 
.L_42e8f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e900:

            test RDI,RDI
            je .L_42e920

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_42e920

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_42e920

            mov EAX,DWORD PTR [RAX+48]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42e920:

            mov EAX,4294967295
            ret 
.L_42e926:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e930:

            mov EAX,3
            ret 
.L_42e936:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e940:

            mov RAX,QWORD PTR [RSI+32]
            cmp QWORD PTR [RDI+32],RAX
            jg .L_42e958

            setl AL
            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e958:

            mov EAX,4294967295
            ret 
.L_42e95e:

            nop
            nop
.L_42e960:

            mov EAX,1
            ret 
.L_42e966:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e970:

            mov RAX,QWORD PTR [RDI+2472]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RAX+96],0
            xor EAX,EAX
            ret 
.L_42e985:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e990:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_42e99d:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            cmp BYTE PTR [RBP+288],0
            jne .L_42ea78
.L_42e9b4:

            mov RDI,QWORD PTR [RBP+160]
            call free@PLT

            mov RBX,QWORD PTR [RBP+56]
            test RBX,RBX
            je .L_42e9ed

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e9d0:

            mov R12,QWORD PTR [RBX+24]
            lea RDI,QWORD PTR [RBX+72]
            call .L_434290

            mov RDI,RBX
            mov RBX,R12
            call free@PLT

            test R12,R12
            jne .L_42e9d0
.L_42e9ed:

            mov RDI,QWORD PTR [RBP+336]
            call free@PLT

            cmp BYTE PTR [RBP+480],0
            je .L_42ea0f

            lea RDI,QWORD PTR [RBP+392]
            call QWORD PTR [RIP+.L_65ac58]
.L_42ea0f:

            cmp BYTE PTR [RBP+496],0
            je .L_42ea25

            lea RDI,QWORD PTR [RBP+488]
            call QWORD PTR [RIP+.L_65ad38]
.L_42ea25:

            mov RDI,QWORD PTR [RBP+528]
            call free@PLT

            mov RDI,QWORD PTR [RBP+536]
            call free@PLT

            mov RDI,QWORD PTR [RBP+544]
            call free@PLT

            mov RDI,RBP
            call .L_434290

            mov RDI,RBP
            call free@PLT

            mov RAX,QWORD PTR [R13+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_42ea6b:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ea78:

            lea RDI,QWORD PTR [RBP+176]
            call inflateEnd@PLT

            jmp .L_42e9b4
.L_42ea89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ea90:

            sub RSP,8
            xor EDX,EDX
            mov ESI,4
            call .L_4049e0

            test RAX,RAX
            je .L_42eafe

            mov RDX,RAX
            xor EAX,EAX
            cmp BYTE PTR [RDX],80
            je .L_42eab8
.L_42eaaf:

            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42eab8:

            cmp BYTE PTR [RDX+1],75
            jne .L_42eaaf

            movzx ECX,BYTE PTR [RDX+2]
            cmp CL,1
            je .L_42eaf0

            cmp CL,3
            je .L_42eae0

            cmp CL,5
            jne .L_42eb05
.L_42ead1:

            cmp BYTE PTR [RDX+3],6
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42eaaf
          .byte 0x90
.L_42eae0:

            cmp BYTE PTR [RDX+3],4
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42eaaf
          .byte 0x66
          .byte 0x90
.L_42eaf0:

            cmp BYTE PTR [RDX+3],2
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42eaaf
.L_42eafe:

            mov EAX,4294967295
            jmp .L_42eaaf
.L_42eb05:

            cmp CL,6
            je .L_42ead1

            cmp CL,7
            jne .L_42eb1d

            cmp BYTE PTR [RDX+3],8
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42eaaf
.L_42eb1d:

            cmp CL,48
            jne .L_42eaaf

            cmp BYTE PTR [RDX+3],48
            mov EDX,29
            cmove EAX,EDX
            jmp .L_42eaaf
.L_42eb33:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42eb40:

            push R13
            push R12
            xor EDX,EDX
            push RBP
            push RBX
            mov ESI,2
            mov RBX,RDI
            sub RSP,24
.L_42eb54:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBP,QWORD PTR [RAX]
            call .L_4049e0

            test RAX,RAX
            je .L_42ec80

            movzx EAX,WORD PTR [RAX]
            mov R12D,DWORD PTR [RBP+500]
            mov ESI,2
            mov RDI,RBX
            mov DWORD PTR [RBP+500],EAX
            call .L_404a30

            mov ESI,DWORD PTR [RBP+500]
            cmp ESI,R12D
            ja .L_42ecb0
.L_42eb98:

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov RSI,RAX
            je .L_42ec80

            mov RDI,QWORD PTR [RBP+528]
            mov EDX,DWORD PTR [RBP+500]
            test RDI,RDI
            je .L_42ecd8
.L_42ebc4:

            call memcpy@PLT

            mov ESI,DWORD PTR [RBP+500]
            mov RDI,RBX
            call .L_404a30

            xor EDX,EDX
            mov ESI,14
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_42ec80

            mov R12D,DWORD PTR [RAX]
            lea EDX,DWORD PTR [R12-16]
            cmp EDX,262128
            ja .L_42ed28

            movzx ECX,WORD PTR [RAX+4]
            lea RDX,QWORD PTR [RIP+.L_432980]
            cmp CX,3
            jne .L_42ec58

            movzx ECX,WORD PTR [RAX+6]
            cmp CX,26128
            mov DWORD PTR [RBP+504],ECX
            ja .L_42ed38

            cmp CX,26126
            jae .L_42ed55

            cmp CX,26113
            jb .L_42ec51

            cmp CX,26115
            jbe .L_42ed55

            cmp CX,26121
            je .L_42ed55
.L_42ec51:

            lea RDX,QWORD PTR [RIP+.L_4329b0]
.L_42ec58:

            mov RDI,RBX
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            add RSP,24
.L_42ec6b:

            mov EAX,4294967271
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ec80:

            lea RDX,QWORD PTR [RIP+.L_432ffb]
.L_42ec87:

            xor EAX,EAX
            mov ESI,84
            mov RDI,RBX
            call .L_43f5d0

            mov EAX,4294967266
.L_42ec9b:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ecb0:

            mov RDI,QWORD PTR [RBP+528]
            call free@PLT

            mov QWORD PTR [RBP+528],0
            mov ESI,DWORD PTR [RBP+500]
            jmp .L_42eb98
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42ecd8:

            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            mov QWORD PTR [RSP+8],RAX
            call malloc@PLT

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RBP+528],RAX
            mov RDX,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RSP+8]
            jne .L_42ebc4
.L_42ed05:

            lea RDX,QWORD PTR [RIP+.L_43302b]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBX
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_42ec9b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42ed28:

            lea RDX,QWORD PTR [RIP+.L_433013]
            jmp .L_42ec87
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ed38:

            cmp CX,26401
            ja .L_42ef60

            cmp CX,26400
            jae .L_42ed55

            cmp CX,26370
            jne .L_42ec51
.L_42ed55:

            movzx EDX,WORD PTR [RAX+8]
            mov DWORD PTR [RBP+508],EDX
            movzx ECX,WORD PTR [RAX+10]
            mov EDX,ECX
            mov DWORD PTR [RBP+512],ECX
            and DX,61440
            sub EDX,1
            cmp DX,2
            ja .L_42ef50

            test CX,45056
            je .L_42ef50

            movzx EAX,WORD PTR [RAX+12]
            mov R13D,DWORD PTR [RBP+516]
            mov ESI,14
            mov RDI,RBX
            mov DWORD PTR [RBP+516],EAX
            call .L_404a30

            mov EAX,DWORD PTR [RBP+516]
            test AL,15
            jne .L_42ed28

            lea EDX,DWORD PTR [RAX+16]
            cmp EDX,R12D
            ja .L_42ed28

            cmp EAX,-16
            je .L_42ed28

            cmp EAX,R13D
            ja .L_42ef70
.L_42edd2:

            mov ESI,EAX
            xor EDX,EDX
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov RSI,RAX
            je .L_42ec80

            mov RDI,QWORD PTR [RBP+536]
            mov EDX,DWORD PTR [RBP+516]
            test RDI,RDI
            je .L_42ef92
.L_42ee00:

            call memcpy@PLT

            mov ESI,DWORD PTR [RBP+516]
            mov RDI,RBX
            call .L_404a30

            xor EDX,EDX
            mov ESI,4
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_42ec80

            mov EAX,DWORD PTR [RAX]
            test EAX,EAX
            jne .L_42ed28

            mov ESI,4
            mov RDI,RBX
            call .L_404a30

            xor EDX,EDX
            mov ESI,2
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_42ec80

            movzx EAX,WORD PTR [RAX]
            mov R13D,DWORD PTR [RBP+520]
            mov ESI,2
            mov RDI,RBX
            mov DWORD PTR [RBP+520],EAX
            call .L_404a30

            mov EAX,DWORD PTR [RBP+520]
            test AL,15
            jne .L_42ed28

            mov EDX,DWORD PTR [RBP+516]
            add EDX,EAX
            lea ECX,DWORD PTR [RDX+16]
            cmp ECX,R12D
            ja .L_42ed28

            cmp EDX,-17
            ja .L_42ed28

            cmp EAX,R13D
            ja .L_42efe1
.L_42eeab:

            mov ESI,DWORD PTR [RBP+520]
            xor EDX,EDX
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov R13,RAX
            je .L_42ec80

            cmp QWORD PTR [RBP+544],0
            mov R12D,DWORD PTR [RBP+520]
            je .L_42efc4
.L_42eedc:

            mov RDI,QWORD PTR [RBP+544]
            mov RDX,R12
            mov RSI,R13
            call memcpy@PLT

            mov ESI,DWORD PTR [RBP+520]
            mov RDI,RBX
            call .L_404a30

            xor EDX,EDX
            mov ESI,4
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_42ec80

            mov EAX,DWORD PTR [RAX]
            mov ESI,4
            mov RDI,RBX
            mov DWORD PTR [RBP+524],EAX
            call .L_404a30

            lea RDX,QWORD PTR [RIP+.L_432fdd]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBX
            call .L_43f5d0

            mov EAX,4294967271
            jmp .L_42ec9b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ef50:

            lea RDX,QWORD PTR [RIP+.L_432fc1]
            jmp .L_42ec58
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ef60:

            cmp CX,26625
            je .L_42ed55

            jmp .L_42ec51
.L_42ef70:

            mov RDI,QWORD PTR [RBP+536]
            call free@PLT

            mov QWORD PTR [RBP+536],0
            mov EAX,DWORD PTR [RBP+516]
            jmp .L_42edd2
.L_42ef92:

            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            mov QWORD PTR [RSP+8],RAX
            call malloc@PLT

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RBP+536],RAX
            mov RDX,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RSP+8]
            jne .L_42ee00

            jmp .L_42ed05
.L_42efc4:

            mov RDI,R12
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+544],RAX
            jne .L_42eedc

            jmp .L_42ed05
.L_42efe1:

            mov RDI,QWORD PTR [RBP+544]
            call free@PLT

            mov QWORD PTR [RBP+544],0
            jmp .L_42eeab
.L_42effd:

            nop
            nop
            nop
.L_42f000:

            push RBX
            mov RBX,RDI
            mov EDX,1
            sub RSP,32
.L_42f00d:

            mov EDI,DWORD PTR [RDI]
            mov BYTE PTR [RSP+12],SIL
            lea RSI,QWORD PTR [RSP+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            not EDI
            call crc32@PLT

            not EAX
            mov EDI,DWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RSP+23]
            mov DWORD PTR [RBX],EAX
            movzx EAX,AL
            add EAX,DWORD PTR [RBX+4]
            mov EDX,1
            not EDI
            imul EAX,EAX,134775813
            add EAX,1
            mov DWORD PTR [RBX+4],EAX
            shr EAX,24
            mov BYTE PTR [RSP+23],AL
            call crc32@PLT

            not EAX
            mov DWORD PTR [RBX+8],EAX
            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42f07c

            add RSP,32
.L_42f07a:

            pop RBX
            ret 
.L_42f07c:

            call __stack_chk_fail@PLT
.L_42f081:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f090:

            cmp RDX,R8
            cmovb R8D,EDX
            test R8D,R8D
            je .L_42f100

            lea EAX,DWORD PTR [R8-1]
            push R13
            push R12
            push RBP
            push RBX
            mov R13,RDI
            lea RBX,QWORD PTR [RSI+RAX*1+1]
            mov RBP,RSI
            mov R12,RCX
            sub RSP,8
.L_42f0b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f0c0:

            mov EAX,DWORD PTR [R13+8]
            mov RDI,R13
            add RBP,1
            add R12,1
            or EAX,2
            mov ESI,EAX
            xor ESI,1
            imul ESI,EAX
            shr ESI,8
            xor SIL,BYTE PTR [RBP-1]
            mov BYTE PTR [R12-1],SIL
            movzx ESI,SIL
            call .L_42f000

            cmp RBX,RBP
            jne .L_42f0c0

            add RSP,8
.L_42f0f8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_42f100:

            ret 
.L_42f102:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f110:

            jmp crc32@PLT
.L_42f115:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f120:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_42f129:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RDI,QWORD PTR [RAX]
            cmp BYTE PTR [RDI+496],0
            je .L_42f220

            mov RBX,RSI
            add RDI,488
            mov QWORD PTR [RSP+8],20
            lea RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+16]
            call QWORD PTR [RIP+.L_65ad30]

            test RBX,RBX
            je .L_42f1e0
.L_42f178:

            mov RAX,QWORD PTR [RBX]
            cmp QWORD PTR [RSP+16],RAX
            je .L_42f1d0
.L_42f182:

            mov EBX,1
.L_42f187:

            mov ESI,10
            mov RDI,RBP
            call .L_404a30

            test EBX,EBX
            je .L_42f1b3

            lea RDX,QWORD PTR [RIP+.L_433048]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov EBX,4294967276
            call .L_43f5d0
.L_42f1b3:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_42f224

            add RSP,56
.L_42f1c9:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f1d0:

            movzx EAX,WORD PTR [RBX+8]
            xor EBX,EBX
            cmp WORD PTR [RSP+24],AX
            jne .L_42f182

            jmp .L_42f187
          .byte 0x90
.L_42f1e0:

            xor EDX,EDX
            mov ESI,10
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            mov RBX,RAX
            jne .L_42f178

            lea RDX,QWORD PTR [RIP+.L_432ffb]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov EBX,4294967266
            call .L_43f5d0

            jmp .L_42f1b3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f220:

            xor EBX,EBX
            jmp .L_42f1b3
.L_42f224:

            call __stack_chk_fail@PLT
.L_42f229:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f230:

            push R12
            push RBP
            mov R8,RDI
            push RBX
.L_42f237:

            mov RCX,QWORD PTR [RDI+2472]
            lea RDI,QWORD PTR [RIP+.L_433064]
            mov RAX,RSI
            mov RBP,QWORD PTR [RCX]
            mov ECX,10

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_42f340

            lea RDI,QWORD PTR [RIP+.L_43306e]
            mov ECX,11
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_42f2e0

            test RDX,RDX
            mov R12,RDX
            mov RDI,R8
            je .L_42f3a0

            cmp BYTE PTR [RDX],0
            je .L_42f3a0

            xor EDX,EDX
            mov RSI,R12
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [RBP+296],RAX
            je .L_42f3c7

            lea RDI,QWORD PTR [RIP+.L_433079]
            mov ECX,6
            mov RSI,R12

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_42f2d5

            mov QWORD PTR [RBP+312],RAX
.L_42f2d5:

            mov EAX,EBX
            pop RBX
.L_42f2d8:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f2e0:

            lea RDI,QWORD PTR [RIP+.L_450f60-122593]
            mov ECX,12
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            je .L_42f358

            lea RDI,QWORD PTR [RIP+.L_43308b]
            mov ECX,8
            mov RSI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta BL
            sbb BL,0
            movsx EBX,BL
            test EBX,EBX
            jne .L_42f3bd

            xor EAX,EAX
            test RDX,RDX
            je .L_42f32f

            xor EAX,EAX
            cmp BYTE PTR [RDX],0
            setne AL
.L_42f32f:

            mov DWORD PTR [RBP+324],EAX
            mov EAX,EBX
            pop RBX
.L_42f338:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f340:

            xor EAX,EAX
            test RDX,RDX
            setne AL
            mov DWORD PTR [RBP+320],EAX
            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f358:

            test RDX,RDX
            je .L_42f362

            cmp BYTE PTR [RDX],0
            jne .L_42f380
.L_42f362:

            lea RAX,QWORD PTR [RIP+.L_42f110]
            mov BYTE PTR [RBP+152],0
            mov QWORD PTR [RBP+144],RAX
            jmp .L_42f2d5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f380:

            lea RAX,QWORD PTR [RIP+.L_42e8f0]
            mov BYTE PTR [RBP+152],1
            mov QWORD PTR [RBP+144],RAX
            jmp .L_42f2d5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f3a0:

            lea RDX,QWORD PTR [RIP+.L_4329d8]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967271
            call .L_43f5d0

            jmp .L_42f2d5
.L_42f3bd:

            mov EBX,4294967276
            jmp .L_42f2d5
.L_42f3c7:

            mov EBX,4294967266
            jmp .L_42f2d5
.L_42f3d1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f3e0:

            mov RAX,RSI
            mov RSI,QWORD PTR [RDI+72]
            mov RDI,RAX
            jmp strcmp@PLT
.L_42f3ef:

            nop
.L_42f3f0:

            mov RAX,QWORD PTR [RDI+72]
            mov RDI,QWORD PTR [RSI+72]
            mov RSI,RAX
            jmp strcmp@PLT
.L_42f400:

            push RBP
            push RBX
            sub RSP,8
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBX+336]
            test RAX,RAX
            je .L_42f430
.L_42f41c:

            mov QWORD PTR [RBX+344],RAX
            xor EAX,EAX
.L_42f425:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f430:

            mov RBP,RDI
            mov QWORD PTR [RBX+352],262144
            mov EDI,262144
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+336],RAX
            jne .L_42f41c

            lea RDX,QWORD PTR [RIP+.L_43302b]
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_42f425
.L_42f46f:

            nop
.L_42f470:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,136
.L_42f481:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RAX,QWORD PTR [RAX]
            mov RDX,RAX
            mov QWORD PTR [RSP+16],RAX
            xor EAX,EAX
            cmp BYTE PTR [RDX+480],0
            jne .L_42f500

            cmp BYTE PTR [RDX+496],0
            jne .L_42f500

            mov RAX,QWORD PTR [RDX+104]
            mov R12,RDI
            mov EAX,DWORD PTR [RAX+136]
            cmp EAX,2
            je .L_42f750

            cmp EAX,3
            je .L_42f530

            cmp EAX,1
            je .L_42f730
.L_42f4db:

            lea RDX,QWORD PTR [RIP+.L_433013]
.L_42f4e2:

            xor EAX,EAX
            mov ESI,84
            mov RDI,R12
            call .L_43f5d0

            mov EAX,4294967266
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f500:

            mov RSI,QWORD PTR [RSP+120]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42f797

            add RSP,136
.L_42f51b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f530:

            mov QWORD PTR [RSP+40],18
            mov R14D,16
            mov QWORD PTR [RSP+32],32
.L_42f548:

            mov RSI,QWORD PTR [RSP+40]
            xor EDX,EDX
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            mov R13,RAX
            je .L_42f78b

            mov RAX,QWORD PTR [RSP+32]
            xor EBP,EBP
            lea RBX,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RAX+RAX*1+2]
            lea RCX,QWORD PTR [RAX-2]
            mov QWORD PTR [RSP],RAX
            sub RAX,1
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+8],RCX
            jmp .L_42f59f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f590:

            cmp EBP,10001
            je .L_42f76d

            add EBP,1
.L_42f59f:

            mov RDI,R12
            call .L_44acb0

            test RAX,RAX
            mov R15,RAX
            je .L_42f6f0

            pxor XMM0,XMM0
            xor EAX,EAX
            mov RDI,R15
            mov WORD PTR [RBX+64],AX
            movaps XMMWORD PTR [RBX],XMM0
            movaps XMMWORD PTR [RBX+16],XMM0
            movaps XMMWORD PTR [RBX+32],XMM0
            movaps XMMWORD PTR [RBX+48],XMM0
            call strlen@PLT

            sub RSP,8
.L_42f5d8:

            mov RCX,R14
            mov RDX,R13
            push QWORD PTR [RSP+8]
            mov R9,RBX
            mov R8D,1000
            mov RSI,RAX
            mov RDI,R15
            call QWORD PTR [RIP+.L_65ac40]

            test EAX,EAX
            pop RDX
            pop RCX
            jne .L_42f720

            lea RAX,QWORD PTR [R13+R14*1]
            mov RCX,QWORD PTR [RSP+8]
            movzx ESI,BYTE PTR [RAX]
            cmp BYTE PTR [RSP+RCX*1+48],SIL
            jne .L_42f590

            mov RCX,QWORD PTR [RSP+24]
            movzx EAX,BYTE PTR [RAX+1]
            cmp BYTE PTR [RSP+RCX*1+48],AL
            jne .L_42f590

            mov R13,QWORD PTR [RSP+16]
            mov R15,QWORD PTR [RSP+32]
            mov RSI,RBX
            lea RBP,QWORD PTR [R13+392]
            mov RDX,R15
            mov RDI,RBP
            call QWORD PTR [RIP+.L_65ac48]

            test EAX,EAX
            jne .L_42f720

            mov RDX,R15
            lea RSI,QWORD PTR [RBX+R15*1]
            lea RDI,QWORD PTR [R13+488]
            call QWORD PTR [RIP+.L_65ad20]

            test EAX,EAX
            jne .L_42f776

            mov RBX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+40]
            mov RDI,R12
            mov BYTE PTR [RBX+496],1
            mov BYTE PTR [RBX+480],1
            call .L_404a30

            mov RAX,QWORD PTR [RBX+112]
            mov RDX,QWORD PTR [RBX+104]
            mov QWORD PTR [RSP],RAX
            sub RAX,12
            sub RAX,R14
            test BYTE PTR [RDX+126],8
            mov QWORD PTR [RBX+112],RAX
            jne .L_42f6b6

            test RAX,RAX
            js .L_42f4db
.L_42f6b6:

            mov RCX,QWORD PTR [RSP+16]
            mov RDI,R12
            mov RAX,QWORD PTR [RCX+120]
            mov QWORD PTR [RCX+360],0
            lea RAX,QWORD PTR [R14+RAX*1+12]
            mov QWORD PTR [RCX+120],RAX
            movzx EAX,BYTE PTR [RDX+140]
            mov BYTE PTR [RDX+128],AL
            call .L_42f400

            jmp .L_42f500
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f6f0:

            lea RDX,QWORD PTR [RIP+.L_432a10]
            lea RAX,QWORD PTR [RIP+.L_433093]
            test EBP,EBP
            cmovne RDX,RAX
.L_42f704:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R12
            call .L_43f5d0

            mov EAX,4294967271
            jmp .L_42f500
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f720:

            lea RDX,QWORD PTR [RIP+.L_432a38]
            jmp .L_42f704
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f730:

            mov QWORD PTR [RSP+40],10
            mov R14D,8
            mov QWORD PTR [RSP+32],16
            jmp .L_42f548
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f750:

            mov QWORD PTR [RSP+40],14
            mov R14D,12
            mov QWORD PTR [RSP+32],24
            jmp .L_42f548
.L_42f76d:

            lea RDX,QWORD PTR [RIP+.L_432a70]
            jmp .L_42f704
.L_42f776:

            mov RDI,RBP
            call QWORD PTR [RIP+.L_65ac58]

            lea RDX,QWORD PTR [RIP+.L_432a90]
            jmp .L_42f704
.L_42f78b:

            lea RDX,QWORD PTR [RIP+.L_432ffb]
            jmp .L_42f4e2
.L_42f797:

            call __stack_chk_fail@PLT
.L_42f79c:

            nop
            nop
            nop
            nop
.L_42f7a0:

            sub RSP,72
.L_42f7a4:

            movzx EDX,BYTE PTR [RDI]
            movzx ECX,BYTE PTR [RDI+2]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movzx EAX,BYTE PTR [RDI+1]
            pxor XMM0,XMM0
            movups XMMWORD PTR [RSP+24],XMM0
            shl EAX,8
            mov DWORD PTR [RSP+32],4294967295
            add EAX,EDX
            movzx EDX,BYTE PTR [RDI+3]
            mov RDI,RSP
            movups XMMWORD PTR [RDI+40],XMM0
            shl EDX,8
            add EDX,ECX
            mov ECX,EDX
            sar ECX,9
            add ECX,80
            mov DWORD PTR [RSP+20],ECX
            mov ECX,EDX
            and EDX,31
            mov DWORD PTR [RSP+12],EDX
            mov EDX,EAX
            sar ECX,5
            sar EDX,11
            and ECX,15
            mov DWORD PTR [RSP+8],EDX
            mov EDX,EAX
            add EAX,EAX
            sar EDX,5
            sub ECX,1
            and EAX,62
            and EDX,63
            mov DWORD PTR [RSP+16],ECX
            mov DWORD PTR [RSP],EAX
            mov DWORD PTR [RSP+4],EDX
            call mktime@PLT

            mov RSI,QWORD PTR [RSP+56]
            xor RSI,QWORD PTR FS:[40]
            jne .L_42f83e

            add RSP,72
.L_42f83d:

            ret 
.L_42f83e:

            call __stack_chk_fail@PLT
.L_42f843:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f850:

            xor EAX,EAX
            cmp BYTE PTR [RSI+153],0
            jne .L_42f8c0

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            lea RDI,QWORD PTR [RSI+176]
            sub RSP,8
            cmp BYTE PTR [RSI+288],0
            jne .L_42f8b0

            lea RDX,QWORD PTR [RIP+.L_4330a8]
            mov ECX,112
            mov ESI,4294967281
            call inflateInit2_@PLT
.L_42f88d:

            test EAX,EAX
            jne .L_42f8c2

            mov BYTE PTR [RBX+288],1
            mov BYTE PTR [RBX+153],1
.L_42f89f:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f8b0:

            call inflateReset@PLT

            jmp .L_42f88d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42f8c0:

            ret 
.L_42f8c2:

            lea RDX,QWORD PTR [RIP+.L_432ab0]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_42f89f
.L_42f8df:

            nop
.L_42f8e0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_42f8ea:

            mov RAX,QWORD PTR [RDI+2472]
            cmp ESI,32
            mov RBP,QWORD PTR [RAX]
            jg .L_42fa10

            xor ESI,ESI
            mov EDX,2
            mov RBX,RDI
            call .L_404dd0

            test RAX,RAX
            jle .L_42f990

            cmp RAX,16384
            mov EDX,16384
            mov RDI,RBX
            cmovle RDX,RAX
            mov ESI,EDX
            mov R12,RDX
            mov EDX,2
            neg ESI
            movsxd RSI,ESI
            call .L_404dd0

            test RAX,RAX
            mov R13,RAX
            js .L_42f990

            xor EDX,EDX
            mov RSI,R12
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_42f990

            lea EDX,DWORD PTR [R12-22]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f960:

            test EDX,EDX
            jle .L_42f990
.L_42f964:

            movsxd RDI,EDX
            lea RSI,QWORD PTR [RAX+RDI*1]
            movzx ECX,BYTE PTR [RSI]
            cmp CL,6
            je .L_42f9b8

            jle .L_42f9a0

            cmp CL,75
            je .L_42f9b0

            cmp CL,80
            jne .L_42f987

            cmp DWORD PTR [RSI],101010256
            je .L_42f9c0
.L_42f987:

            sub EDX,4
            test EDX,EDX
            jg .L_42f964

            nop
            nop
.L_42f990:

            xor EAX,EAX
.L_42f992:

            add RSP,8
.L_42f996:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f9a0:

            cmp CL,5
            jne .L_42f987

            sub EDX,2
            jmp .L_42f960
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f9b0:

            sub EDX,1
            jmp .L_42f960
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f9b8:

            sub EDX,3
            jmp .L_42f960
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42f9c0:

            cmp WORD PTR [RSI+4],0
            jne .L_42f987

            cmp WORD PTR [RSI+6],0
            jne .L_42f987

            movzx ECX,WORD PTR [RSI+8]
            cmp WORD PTR [RSI+10],CX
            jne .L_42f987

            mov ECX,DWORD PTR [RSI+16]
            lea R8,QWORD PTR [RDI+R13*1]
            mov R9D,ECX
            add R9D,DWORD PTR [RSI+12]
            cmp R8,R9
            jl .L_42f987

            cmp EDX,19
            mov QWORD PTR [RBP+24],RCX
            jle .L_42fa01

            lea RAX,QWORD PTR [RAX+RDI*1-20]
            cmp DWORD PTR [RAX],117853008
            je .L_42fa1a
.L_42fa01:

            mov EAX,32
            jmp .L_42f992
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fa10:

            mov EAX,4294967295
            jmp .L_42f992
.L_42fa1a:

            mov EDX,DWORD PTR [RAX+4]
            test EDX,EDX
            jne .L_42fa01

            cmp DWORD PTR [RAX+16],1
            jne .L_42fa01

            lea RDI,QWORD PTR [RAX+8]
            call .L_42e8e0

            xor EDX,EDX
            mov RSI,RAX
            mov RDI,RBX
            call .L_404dd0

            test RAX,RAX
            js .L_42fa01

            xor EDX,EDX
            mov ESI,56
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_42fa01

            lea RDI,QWORD PTR [RAX+4]
            call .L_42e8e0

            lea RSI,QWORD PTR [RAX+12]
            sub RAX,44
            cmp RAX,16328
            ja .L_42fa01

            xor EDX,EDX
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            mov RDX,RAX
            je .L_42fa01

            cmp DWORD PTR [RAX+16],0
            jne .L_42fa01

            cmp DWORD PTR [RAX+20],0
            jne .L_42fa01

            lea RDI,QWORD PTR [RAX+24]
            call .L_42e8e0

            lea RDI,QWORD PTR [RDX+32]
            mov RCX,RAX
            call .L_42e8e0

            cmp RCX,RAX
            jne .L_42fa01

            lea RDI,QWORD PTR [RDX+48]
            call .L_42e8e0

            mov QWORD PTR [RBP+24],RAX
            jmp .L_42fa01
.L_42fac5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fad0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_42fade:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R12,QWORD PTR [RAX]
            xor EAX,EAX
            cmp BYTE PTR [R12+388],0
            jne .L_42fc32

            mov RAX,QWORD PTR [R12+104]
            mov R14,RDI
            test BYTE PTR [RAX+126],8
            jne .L_42fb26

            mov RCX,QWORD PTR [R12+112]
            cmp RCX,11
            jle .L_42fca4
.L_42fb26:

            xor EDX,EDX
            mov ESI,12
            mov RDI,R14
            call .L_4049e0

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_42fcc1

            lea RAX,QWORD PTR [RSP+28]
            mov RDI,R14
            xor R13D,R13D
            lea RBP,QWORD PTR [R12+376]
            mov QWORD PTR [RSP+8],RAX
            call .L_44acb0

            test RAX,RAX
            mov R15,RAX
            je .L_42fc09

            nop
            nop
            nop
            nop
            nop
.L_42fb70:

            mov RDI,RAX
            call strlen@PLT

            movabs RCX,2541551403134113400
            test RAX,RAX
            mov DWORD PTR [R12+384],878082192
            mov QWORD PTR [R12+376],RCX
            je .L_42fbb6

            lea RBX,QWORD PTR [R15+RAX*1]
            nop
.L_42fba0:

            add R15,1
            movzx ESI,BYTE PTR [R15-1]
            mov RDI,RBP
            call .L_42f000

            cmp R15,RBX
            jne .L_42fba0
.L_42fbb6:

            mov RCX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP]
            mov EDX,12
            mov R8D,12
            mov RDI,RBP
            call .L_42f090

            mov RAX,QWORD PTR [R12+104]
            movzx EDX,BYTE PTR [RSP+39]
            cmp BYTE PTR [RAX+131],DL
            je .L_42fc55

            cmp R13D,10001
            je .L_42fc98

            mov RDI,R14
            add R13D,1
            call .L_44acb0

            test RAX,RAX
            mov R15,RAX
            jne .L_42fb70
.L_42fc09:

            lea RDX,QWORD PTR [RIP+.L_433093]
            lea RAX,QWORD PTR [RIP+.L_432a10]
            test R13D,R13D
            cmove RDX,RAX
.L_42fc1e:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967271
.L_42fc32:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_42fcdf

            add RSP,56
.L_42fc4a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42fc55:

            mov ESI,12
            mov RDI,R14
            call .L_404a30

            mov RAX,QWORD PTR [R12+104]
            mov BYTE PTR [R12+388],1
            test BYTE PTR [RAX+126],8
            jne .L_42fc7c

            sub QWORD PTR [R12+112],12
.L_42fc7c:

            add QWORD PTR [R12+120],12
            mov QWORD PTR [R12+360],0
            mov RDI,R14
            call .L_42f400

            jmp .L_42fc32
.L_42fc98:

            lea RDX,QWORD PTR [RIP+.L_432a70]
            jmp .L_42fc1e
.L_42fca4:

            lea RDX,QWORD PTR [RIP+.L_432ad8]
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_42fc32
.L_42fcc1:

            lea RDX,QWORD PTR [RIP+.L_432ffb]
            mov ESI,84
            mov RDI,R14
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_42fc32
.L_42fcdf:

            call __stack_chk_fail@PLT
.L_42fce4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fcf0:

            mov EAX,3
            ret 
.L_42fcf6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42fd00:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_42fd0a:

            movzx EBP,WORD PTR [RSI+2]
            movzx R9D,WORD PTR [RSI]
            lea EAX,DWORD PTR [RBP+4]
            cmp RDX,RAX
            jb .L_430090

            lea R8,QWORD PTR [RDX-4]
            mov EBX,EBP
            mov EAX,4
            xor R11D,R11D
            mov R12D,4294967295
            jmp .L_42fd89
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42fd38:

            cmp R9W,21589
            je .L_42ffb8

            cmp R9W,22613
            je .L_42ff70

            cmp R9W,1
            je .L_42ff38
.L_42fd5b:

            mov R9D,EBP
            nop
            nop
.L_42fd60:

            add EAX,R9D
            cmp RAX,R8
            mov R11,RAX
            ja .L_42fde8
.L_42fd6b:

            movzx EBP,WORD PTR [RSI+RAX*1+2]
            movzx R9D,WORD PTR [RSI+RAX*1]
            lea EAX,DWORD PTR [R11+4]
            lea R10D,DWORD PTR [RBP+RAX*1]
            mov EBX,EBP
            cmp R10,RDX
            ja .L_430095
.L_42fd89:

            cmp R9W,27768
            je .L_42fec0

            jbe .L_42fd38

            cmp R9W,30837
            je .L_42fe58

            cmp R9W,39169
            je .L_42fe00

            cmp R9W,30805
            jne .L_42fd5b

            cmp BX,1
            mov R9D,EBP
            jbe .L_42fd60

            mov R10D,EAX
            cmp BX,3
            movzx R11D,WORD PTR [RSI+R10*1]
            mov QWORD PTR [RCX+64],R11
            jbe .L_42fd60

            movzx R10D,WORD PTR [RSI+R10*1+2]
            add EAX,R9D
            cmp RAX,R8
            mov R11,RAX
            mov QWORD PTR [RCX+56],R10
            jbe .L_42fd6b

            nop
            nop
            nop
            nop
            nop
.L_42fde8:

            cmp RAX,RDX
            jne .L_43025d

            xor EAX,EAX
.L_42fdf3:

            add RSP,8
.L_42fdf7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x90
.L_42fe00:

            lea R10D,DWORD PTR [R11+6]
            mov R9D,EBP
            cmp BYTE PTR [RSI+R10*1],65
            jne .L_42fd60

            lea R10D,DWORD PTR [R11+7]
            cmp BYTE PTR [RSI+R10*1],69
            jne .L_42fd60

            mov R10D,EAX
            movzx R10D,WORD PTR [RSI+R10*1]
            mov DWORD PTR [RCX+132],R10D
            lea R10D,DWORD PTR [R11+8]
            movsx R10D,BYTE PTR [RSI+R10*1]
            mov DWORD PTR [RCX+136],R10D
            lea R10D,DWORD PTR [R11+9]
            movzx R10D,BYTE PTR [RSI+R10*1]
            mov BYTE PTR [RCX+140],R10B
            jmp .L_42fd60
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42fe58:

            xor R9D,R9D
            test BX,BX
            je .L_42fd60

            mov R10D,EAX
            mov R9D,EBP
            cmp BYTE PTR [RSI+R10*1],1
            jne .L_42fd60

            cmp BX,3
            jbe .L_4301d8

            add R11D,5
            movzx R11D,BYTE PTR [RSI+R11*1]
            cmp R11D,2
            je .L_430230

            cmp R11D,4
            lea R13D,DWORD PTR [R11+4]
            jne .L_4301e1

            cmp BX,5
            jbe .L_4301e1

            mov EBX,DWORD PTR [RSI+R10*1+2]
            mov R13D,8
            mov QWORD PTR [RCX+64],RBX
            jmp .L_4301e1
          .byte 0x66
          .byte 0x90
.L_42fec0:

            xor R9D,R9D
            test BX,BX
            je .L_42fd60

            movzx EBP,BYTE PTR [RSI+RAX*1]
            lea R9D,DWORD PTR [RBX-1]
            lea EAX,DWORD PTR [R11+5]
            test BPL,BPL
            js .L_42fefd

            jmp .L_4300e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fee8:

            mov R10D,EAX
            sub R9D,1
            add EAX,1
            cmp BYTE PTR [RSI+R10*1],0
            jns .L_4300e0
.L_42fefd:

            test R9W,R9W
            jne .L_42fee8

            xor R9D,R9D
            test BPL,1
            jne .L_42fd60

            test BPL,2
            jne .L_42fd60

            and EBP,4
            jne .L_42fd60

            nop
            nop
            nop
            nop
            nop
.L_42ff28:

            movzx R9D,R9W
            jmp .L_42fd60
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42ff38:

            or BYTE PTR [RCX+130],1
            cmp QWORD PTR [RCX+48],R12
            je .L_430040

            cmp QWORD PTR [RCX+40],R12
            je .L_430063
.L_42ff53:

            cmp QWORD PTR [RCX+32],R12
            jne .L_42ff63
.L_42ff59:

            cmp BX,7
            ja .L_4300c0
.L_42ff63:

            movzx R9D,BX
            jmp .L_42fd60
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ff70:

            cmp BX,7
            mov R9D,EBP
            jbe .L_42fd60

            mov R10D,EAX
            cmp BX,11
            mov R11D,DWORD PTR [RSI+R10*1]
            mov QWORD PTR [RCX+104],R11
            mov R11D,DWORD PTR [RSI+R10*1+4]
            mov QWORD PTR [RCX+96],R11
            jbe .L_42fd60

            movzx R11D,WORD PTR [RSI+R10*1+8]
            mov QWORD PTR [RCX+64],R11
            movzx R10D,WORD PTR [RSI+R10*1+10]
            mov QWORD PTR [RCX+56],R10
            jmp .L_42fd60
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42ffb8:

            movzx R10D,BYTE PTR [RSI+RAX*1]
            lea R9D,DWORD PTR [RBX-1]
            lea EAX,DWORD PTR [R11+5]
            test R10B,1
            je .L_42ffe5

            cmp R9W,3
            jbe .L_42ff28

            mov EAX,DWORD PTR [RSI+RAX*1]
            lea R9D,DWORD PTR [RBX-5]
            mov QWORD PTR [RCX+96],RAX
            lea EAX,DWORD PTR [R11+9]
.L_42ffe5:

            test R10B,2
            jne .L_430020
.L_42ffeb:

            and R10D,4
            je .L_42ff28

            cmp R9W,3
            jbe .L_42ff28

            mov R10D,EAX
            sub R9D,4
            add EAX,4
            mov EBX,DWORD PTR [RSI+R10*1]
            movzx R9D,R9W
            mov QWORD PTR [RCX+112],RBX
            jmp .L_42fd60
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430020:

            cmp R9W,3
            jbe .L_42ff28

            mov R11D,EAX
            sub R9D,4
            add EAX,4
            mov EBX,DWORD PTR [RSI+R11*1]
            mov QWORD PTR [RCX+104],RBX
            jmp .L_42ffeb
          .byte 0x90
.L_430040:

            cmp BX,7
            jbe .L_42fd5b

            sub EBX,8
            cmp QWORD PTR [RCX+40],R12
            mov RAX,QWORD PTR [RSI+RAX*1]
            mov QWORD PTR [RCX+48],RAX
            lea EAX,DWORD PTR [R11+12]
            jne .L_42ff53
.L_430063:

            cmp BX,7
            jbe .L_42ff63

            mov R9D,EAX
            sub EBX,8
            add EAX,8
            cmp QWORD PTR [RCX+32],R12
            mov R9,QWORD PTR [RSI+R9*1]
            mov QWORD PTR [RCX+40],R9
            je .L_42ff59

            jmp .L_42ff63
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430090:

            mov EAX,4
.L_430095:

            mov R8D,EDX
            lea RDX,QWORD PTR [RIP+.L_432b10]
            mov ECX,EBP
            sub R8D,EAX
            mov ESI,84
            xor EAX,EAX
            call .L_43f5d0

            add RSP,8
.L_4300b4:

            mov EAX,4294967271
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4300c0:

            mov R9D,EAX
            add EAX,8
            mov R9,QWORD PTR [RSI+R9*1]
            mov QWORD PTR [RCX+32],R9
            lea R9D,DWORD PTR [RBX-8]
            movzx R9D,R9W
            jmp .L_42fd60
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4300e0:

            test BPL,1
            je .L_43010c

            cmp R9W,1
            jbe .L_42ff28

            mov R10D,EAX
            sub R9D,2
            add EAX,2
            movzx R10D,WORD PTR [RSI+R10*1]
            shr R10W,8
            mov BYTE PTR [RCX+129],R10B
.L_43010c:

            test BPL,2
            je .L_430124

            cmp R9W,1
            jbe .L_42ff28

            add EAX,2
            sub R9D,2
.L_430124:

            test BPL,4
            je .L_430189

            cmp R9W,3
            jbe .L_42ff28

            movzx R11D,BYTE PTR [RCX+129]
            mov R10D,EAX
            mov R10D,DWORD PTR [RSI+R10*1]
            cmp R11B,3
            je .L_430242

            test R11B,R11B
            jne .L_430250

            mov R11D,R10D
            and R11D,16
            cmp R11D,1
            sbb R11D,R11D
            and R11W,16311
            add R11W,16893
            and R10D,1
            mov WORD PTR [RCX+124],R11W
            je .L_430182

            and WORD PTR [RCX+124],365
.L_430182:

            add EAX,4
            sub R9D,4
.L_430189:

            and EBP,8
            sete R10B
            cmp R9W,1
            setbe R11B
            or R10D,R11D
            test R10B,R10B
            jne .L_42ff28

            mov R10D,EAX
            sub R9D,2
            add EAX,2
            movzx R10D,WORD PTR [RSI+R10*1]
            cmp R10W,R9W
            ja .L_42ff28

            movzx R11D,R10W
            sub R9D,R10D
            add EAX,R11D
            movzx R9D,R9W
            jmp .L_42fd60
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4301d8:

            mov R13D,4
            xor R11D,R11D
.L_4301e1:

            cmp EBP,R13D
            jle .L_42fd60

            lea EBX,DWORD PTR [RAX+R11*1+2]
            movzx EBX,BYTE PTR [RSI+RBX*1]
            cmp EBX,2
            je .L_43021e

            cmp EBX,4
            jne .L_42fd60

            lea EBX,DWORD PTR [R11+6]
            cmp EBP,EBX
            jle .L_42fd60

            add R10,RSI
            mov EBX,DWORD PTR [R11+R10*1+3]
            mov QWORD PTR [RCX+56],RBX
            jmp .L_42fd60
.L_43021e:

            add R10,RSI
            movzx R10D,WORD PTR [R11+R10*1+3]
            mov QWORD PTR [RCX+56],R10
            jmp .L_42fd60
.L_430230:

            movzx EBX,WORD PTR [RSI+R10*1+2]
            mov R13D,6
            mov QWORD PTR [RCX+64],RBX
            jmp .L_4301e1
.L_430242:

            shr R10D,16
            mov WORD PTR [RCX+124],R10W
            jmp .L_430182
.L_430250:

            xor R10D,R10D
            mov WORD PTR [RCX+124],R10W
            jmp .L_430182
.L_43025d:

            mov R8D,EDX
            lea RDX,QWORD PTR [RIP+.L_432b50]
            mov ECX,EAX
            mov ESI,84
            xor EAX,EAX
            call .L_43f5d0

            mov EAX,4294967271
            jmp .L_42fdf3
.L_43027f:

            nop
.L_430280:

            push R15
            push R14
            xor ECX,ECX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDX
            xor ESI,ESI
            mov R12,RDI
            xor EDI,EDI
            sub RSP,88
.L_43029d:

            mov RBX,QWORD PTR [RDX+104]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RBX+40]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RBX+48]
            mov QWORD PTR [RSP+24],RAX
            mov EAX,DWORD PTR [RBX+120]
            mov WORD PTR [RDX+153],CX
            mov QWORD PTR [RDX+128],0
            mov QWORD PTR [RDX+120],0
            xor EDX,EDX
            mov DWORD PTR [RSP+44],EAX
            call QWORD PTR [RBP+144]

            cmp QWORD PTR [RBP+296],0
            mov QWORD PTR [RBP+136],RAX
            je .L_4308e8
.L_430301:

            xor EDX,EDX
            mov ESI,30
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            mov R14,RAX
            je .L_430b33

            cmp DWORD PTR [RAX],67324752
            jne .L_430b99

            movzx EAX,BYTE PTR [RAX+4]
            mov BYTE PTR [RSP+43],AL
            movzx EAX,BYTE PTR [R14+5]
            mov BYTE PTR [RBX+129],AL
            movzx EAX,WORD PTR [R14+6]
            test AL,65
            mov WORD PTR [RBX+126],AX
            je .L_430372

            mov DWORD PTR [RBP+48],1
            mov ESI,1
            mov RDI,R13
            call .L_4469f0

            movzx EAX,WORD PTR [RBX+126]
            mov EDX,EAX
            and DX,8193
            cmp DX,8193
            je .L_4309c0
.L_430372:

            and EAX,1
            lea RDI,QWORD PTR [R14+10]
            mov BYTE PTR [RBP+328],AL
            movzx EAX,WORD PTR [R14+8]
            mov BYTE PTR [RBX+128],AL
            call .L_42f7a0

            test BYTE PTR [RBX+126],8
            mov QWORD PTR [RBX+96],RAX
            mov EAX,DWORD PTR [R14+14]
            mov DWORD PTR [RBX+120],EAX
            jne .L_4305b0

            movzx EAX,BYTE PTR [R14+17]
            mov BYTE PTR [RBX+131],AL
.L_4303af:

            mov EAX,DWORD PTR [R14+18]
            mov ESI,30
            mov RDI,R12
            mov QWORD PTR [RBX+40],RAX
            mov EAX,DWORD PTR [R14+22]
            mov QWORD PTR [RBX+48],RAX
            movzx R15D,WORD PTR [R14+26]
            movzx EAX,WORD PTR [R14+28]
            mov QWORD PTR [RSP],R15
            mov WORD PTR [RSP+16],AX
            mov QWORD PTR [RSP+8],RAX
            call .L_404a30

            xor EDX,EDX
            mov RSI,R15
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            mov R14,RAX
            je .L_430b33

            test BYTE PTR [RBX+127],8
            je .L_4307a8

            mov R15,QWORD PTR [RBP+312]
            test R15,R15
            je .L_430a60
.L_430417:

            mov RDX,QWORD PTR [RSP]
            mov RSI,R14
            mov RCX,R15
            mov RDI,R13
            call .L_4466d0

            test EAX,EAX
            mov R14D,EAX
            je .L_430465

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_430ba5

            mov RDI,R15
            mov R14D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_432bb0]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_430465:

            mov RSI,QWORD PTR [RSP]
            mov RDI,R12
            call .L_404a30

            mov R15,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov RDI,R12
            mov RSI,R15
            call .L_4049e0

            test RAX,RAX
            je .L_430b33

            cmp WORD PTR [RSP+16],0
            je .L_4304b7

            cmp R15,3
            jbe .L_430bbd

            mov RCX,RBX
            mov RDX,R15
            mov RSI,RAX
            mov RDI,R12
            call .L_42fd00

            test EAX,EAX
            jne .L_4308c0
.L_4304b7:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R12
            call .L_404a30

            movzx EAX,WORD PTR [RBX+124]
            mov EDX,EAX
            and DX,61440
            cmp DX,4096
            je .L_4308d0

            test AX,AX
            jne .L_430a08

            mov EAX,436
            mov WORD PTR [RBX+124],AX
.L_4304ec:

            mov RDI,R13
            call .L_445530

            test RAX,RAX
            mov R15,RAX
            je .L_4305c0

            mov RDI,RAX
            call wcslen@PLT

            test RAX,RAX
            je .L_4305f0

            cmp DWORD PTR [R15+RAX*4-4],47
            jne .L_4305f0
.L_43051d:

            movzx EAX,WORD PTR [RBX+124]
            and AX,4095
            or AX,16457
            mov WORD PTR [RBX+124],AX
.L_43052d:

            mov RDI,R13
            call .L_445530

            test RAX,RAX
            mov R15,RAX
            je .L_430ab0

            mov RDI,RAX
            call wcslen@PLT

            test RAX,RAX
            je .L_43060c

            cmp DWORD PTR [R15+RAX*4-4],47
            je .L_43060c

            lea RDX,QWORD PTR [RSP+48]
            mov RSI,R15
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            call .L_437320

            mov RDX,QWORD PTR [RSP]
            mov ESI,47
            mov RDI,RDX
            call .L_4374b0

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R13
            call .L_446670

            jmp .L_43060c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4305b0:

            movzx EAX,BYTE PTR [R14+11]
            mov BYTE PTR [RBX+131],AL
            jmp .L_4303af
.L_4305c0:

            mov RDI,R13
            call .L_445450

            test RAX,RAX
            mov R15,RAX
            je .L_4305f0

            mov RDI,RAX
            call strlen@PLT

            test RAX,RAX
            je .L_4305f0

            cmp BYTE PTR [R15+RAX*1-1],47
            je .L_43051d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4305f0:

            movzx EAX,WORD PTR [RBX+124]
            mov EDX,EAX
            and DX,61440
            je .L_4309b0

            cmp DX,16384
            je .L_43052d
.L_43060c:

            test BYTE PTR [RBX+130],2
            je .L_430658

            mov EAX,DWORD PTR [RBX+120]
            and WORD PTR [RBX+126],65527
            test EAX,EAX
            jne .L_430978

            mov EAX,DWORD PTR [RSP+44]
            mov DWORD PTR [RBX+120],EAX
.L_43062c:

            mov R8,QWORD PTR [RBX+40]
            mov RAX,QWORD PTR [RSP+32]
            test R8,R8
            jne .L_430948

            mov QWORD PTR [RBX+40],RAX
.L_430642:

            mov R8,QWORD PTR [RBX+48]
            mov RAX,QWORD PTR [RSP+24]
            test R8,R8
            jne .L_430918

            mov QWORD PTR [RBX+48],RAX
.L_430658:

            movzx ESI,WORD PTR [RBX+124]
            mov RDI,R13
            call .L_446590

            mov RSI,QWORD PTR [RBX+64]
            mov RDI,R13
            call .L_446950

            mov RSI,QWORD PTR [RBX+56]
            mov RDI,R13
            call .L_445fa0

            mov RSI,QWORD PTR [RBX+96]
            xor EDX,EDX
            mov RDI,R13
            call .L_4465a0

            mov RSI,QWORD PTR [RBX+112]
            xor EDX,EDX
            mov RDI,R13
            call .L_446330

            mov RSI,QWORD PTR [RBX+104]
            xor EDX,EDX
            mov RDI,R13
            call .L_446210

            mov RDX,QWORD PTR [RBP+104]
            movzx EAX,WORD PTR [RDX+124]
            and AX,61440
            cmp AX,40960
            je .L_4307d8

            test BYTE PTR [RBX+126],8
            mov RSI,QWORD PTR [RBX+48]
            je .L_4306cf

            test RSI,RSI
            jle .L_430a20
.L_4306cf:

            mov RDI,R13
            call .L_446770
.L_4306d7:

            movzx EAX,WORD PTR [RBX+126]
            mov RCX,QWORD PTR [RBX+40]
            mov RDX,QWORD PTR [RBP+104]
            mov QWORD PTR [RBP+112],RCX
            and EAX,8
            test AX,AX
            jne .L_430700

            test RCX,RCX
            jg .L_430700

            mov BYTE PTR [RBP+154],1
            nop
            nop
            nop
            nop
            nop
.L_430700:

            movzx ESI,BYTE PTR [RDX+128]
            xor ECX,ECX
            lea RDX,QWORD PTR [RIP+.L_65aad0]
            xor EAX,EAX
            jmp .L_43072a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430718:

            add EAX,1
            cmp EAX,23
            je .L_4307c8

            mov ECX,DWORD PTR [RDX]
            add RDX,16
.L_43072a:

            cmp ESI,ECX
            jne .L_430718

            cdqe 
            lea RDX,QWORD PTR [RIP+.L_65aac0]
            shl RAX,4
            mov R8,QWORD PTR [RDX+RAX*1+8]
.L_430740:

            movsx DX,BYTE PTR [RSP+43]
            lea RSI,QWORD PTR [RIP+.L_43310d]
            mov EDI,EDX
            imul EDX,EDX,103
            mov EAX,EDI
            mov ECX,EDI
            sar AL,7
            mov RDI,RBP
            sar DX,10
            sub EDX,EAX
            lea EAX,DWORD PTR [RDX+RDX*4]
            movsx EDX,DL
            add EAX,EAX
            sub ECX,EAX
            xor EAX,EAX
            movsx ECX,CL
            call .L_43ee20

            mov RAX,QWORD PTR [RBP]
            mov QWORD PTR [R12+24],RAX
.L_43077f:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_430c02

            add RSP,88
.L_43079a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4307a8:

            mov R15,QWORD PTR [RBP+296]
            test R15,R15
            jne .L_430417

            mov R15,QWORD PTR [RBP+304]
            jmp .L_430417
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4307c8:

            lea R8,QWORD PTR [RIP+.L_4330af]
            jmp .L_430740
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4307d8:

            mov R15,QWORD PTR [RBX+40]
            cmp R15,65536
            jg .L_430bb1

            xor ESI,ESI
            mov RDI,R13
            call .L_446770

            xor EDX,EDX
            mov RSI,R15
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_430be3

            mov R8,QWORD PTR [RBP+296]
            test R8,R8
            je .L_430a30
.L_43081d:

            mov RSI,QWORD PTR [RSP]
            mov RCX,R8
            mov RDX,R15
            mov RDI,R13
            mov QWORD PTR [RSP+8],R8
            call .L_446910

            test EAX,EAX
            je .L_430882

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            mov R9,RAX
            mov R8,QWORD PTR [RSP+8]
            je .L_4309e0

            cmp QWORD PTR [RBP+312],R8
            je .L_430a90
.L_43085b:

            mov RDI,R8
            mov R14D,4294967276
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_432d20]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_430882:

            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+48],0
            mov RSI,R15
            mov RDI,R12
            call .L_404a30

            test RAX,RAX
            jns .L_4306d7

            lea RDX,QWORD PTR [RIP+.L_432d58]
.L_4308ad:

            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            nop
            nop
            nop
            nop
.L_4308c0:

            mov R14D,4294967266
            jmp .L_43077f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4308d0:

            and AX,4095
            or AX,32768
            mov WORD PTR [RBX+124],AX
            jmp .L_4304ec
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4308e8:

            mov EDX,DWORD PTR [RBP+320]
            test EDX,EDX
            jne .L_430301

            mov RDI,R12
            call .L_4378a0

            mov DWORD PTR [RBP+320],1
            mov QWORD PTR [RBP+304],RAX
            jmp .L_430301
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430918:

            cmp R8,RAX
            je .L_430658

            lea RDX,QWORD PTR [RIP+.L_432c80]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967276
            call .L_43f5d0

            jmp .L_430658
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430948:

            cmp R8,RAX
            je .L_430642

            lea RDX,QWORD PTR [RIP+.L_432c30]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967276
            call .L_43f5d0

            jmp .L_430642
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430978:

            cmp BYTE PTR [RBP+152],0
            jne .L_43062c

            cmp EAX,DWORD PTR [RSP+44]
            je .L_43062c

            lea RDX,QWORD PTR [RIP+.L_450f60-122496]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967276
            call .L_43f5d0

            jmp .L_43062c
.L_4309b0:

            or AX,32768
            mov WORD PTR [RBX+124],AX
            jmp .L_43060c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4309c0:

            test AL,64
            je .L_430372

            mov ESI,1
            mov RDI,R13
            mov R14D,4294967266
            call .L_446a10

            jmp .L_43077f
.L_4309e0:

            lea RDX,QWORD PTR [RIP+.L_432cf8]
.L_4309e7:

            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            mov R14D,4294967266
            jmp .L_43077f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430a08:

            cmp DX,16384
            je .L_43052d

            jmp .L_4304ec
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430a20:

            mov RAX,QWORD PTR [RBX+40]
            mov QWORD PTR [RBP+112],RAX
            jmp .L_430700
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430a30:

            mov RAX,QWORD PTR [RBP+104]
            test BYTE PTR [RAX+127],8
            je .L_430a4a

            mov R8,QWORD PTR [RBP+312]
            test R8,R8
            jne .L_43081d
.L_430a4a:

            mov R8,QWORD PTR [RBP+304]
            jmp .L_43081d
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430a60:

            lea RSI,QWORD PTR [RIP+.L_433079]
            mov EDX,1
            mov RDI,R12
            call .L_437870

            test RAX,RAX
            mov R15,RAX
            mov QWORD PTR [RBP+312],RAX
            jne .L_430417

            jmp .L_4308c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_430a90:

            mov RAX,QWORD PTR [RBP+104]
            test BYTE PTR [RAX+127],8
            jne .L_430b54
.L_430a9e:

            test BYTE PTR [RAX+127],8
            jne .L_430882

            jmp .L_43085b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430ab0:

            mov RDI,R13
            call .L_445450

            test RAX,RAX
            mov R15,RAX
            je .L_43060c

            mov RDI,RAX
            call strlen@PLT

            test RAX,RAX
            je .L_43060c

            cmp BYTE PTR [R15+RAX*1-1],47
            je .L_43060c

            lea RDX,QWORD PTR [RSP+48]
            mov RSI,R15
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            call .L_437310

            mov RDX,QWORD PTR [RSP]
            mov ESI,47
            mov RDI,RDX
            call .L_437330

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R13
            call .L_446640

            jmp .L_43060c
.L_430b33:

            lea RDX,QWORD PTR [RIP+.L_4330b2]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967266
            call .L_43f5d0

            jmp .L_43077f
.L_430b54:

            mov RSI,QWORD PTR [RSP]
            xor ECX,ECX
            mov RDX,R15
            mov RDI,R13
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],R8
            call .L_446910

            mov R9,QWORD PTR [RSP+16]
            cmp DWORD PTR [R9],12
            je .L_4309e0

            mov R8,QWORD PTR [RSP+8]
            cmp R8,QWORD PTR [RBP+312]
            jne .L_43085b

            mov RAX,QWORD PTR [RBP+104]
            jmp .L_430a9e
.L_430b99:

            lea RDX,QWORD PTR [RIP+.L_4330cc]
            jmp .L_4308ad
.L_430ba5:

            lea RDX,QWORD PTR [RIP+.L_432b88]
            jmp .L_4309e7
.L_430bb1:

            lea RDX,QWORD PTR [RIP+.L_432cd0]
            jmp .L_4308ad
.L_430bbd:

            movzx ECX,WORD PTR [RSP+16]
            lea RDX,QWORD PTR [RIP+.L_432be8]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            mov R14D,4294967266
            call .L_43f5d0

            jmp .L_43077f
.L_430be3:

            lea RDX,QWORD PTR [RIP+.L_4330fa]
            mov ESI,4294967295
            mov RDI,R12
            mov R14D,4294967266
            call .L_43f5d0

            jmp .L_43077f
.L_430c02:

            call __stack_chk_fail@PLT
.L_430c07:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430c10:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_430c20:

            mov DWORD PTR [RDI+16],327680
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp QWORD PTR [RDI+24],0
            je .L_430e10
.L_430c42:

            mov RAX,QWORD PTR [RBX+2472]
            mov RBP,QWORD PTR [RAX]
            cmp DWORD PTR [RBP+48],-1
            jne .L_430c59

            mov DWORD PTR [RBP+48],0
.L_430c59:

            mov RAX,QWORD PTR [RBP+56]
            test RAX,RAX
            je .L_430dd1
.L_430c66:

            lea RDI,QWORD PTR [RAX+8]
            mov QWORD PTR [RBP+104],RAX
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+136],0
            and RDI,-8
            sub RAX,RDI
            lea ECX,DWORD PTR [RAX+144]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            cmp BYTE PTR [RBP+480],0
            je .L_430cab

            lea RDI,QWORD PTR [RBP+392]
            call QWORD PTR [RIP+.L_65ac58]
.L_430cab:

            cmp BYTE PTR [RBP+496],0
            je .L_430cc1

            lea RDI,QWORD PTR [RBP+488]
            call QWORD PTR [RIP+.L_65ad38]
.L_430cc1:

            mov RDI,RBX
            mov BYTE PTR [RBP+496],0
            mov BYTE PTR [RBP+480],0
            mov BYTE PTR [RBP+388],0
            mov R12,RSP
            call .L_44aca0

            mov RSI,QWORD PTR [RBP+96]
            mov RDI,RBX
            call .L_404a30

            mov QWORD PTR [RBP+96],0
            nop
            nop
            nop
.L_430cf8:

            mov RDX,R12
            mov ESI,4
            mov RDI,RBX
            call .L_4049e0

            test RAX,RAX
            je .L_430e20

            mov RDX,QWORD PTR [RSP]
            lea RCX,QWORD PTR [RAX+4]
            lea RSI,QWORD PTR [RAX+RDX*1]
            cmp RSI,RCX
            jb .L_430d9f

            sub RDX,3
            xor ESI,ESI
            jmp .L_430d39
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430d30:

            add RSI,1
            cmp RSI,RDX
            je .L_430da8
.L_430d39:

            cmp BYTE PTR [RAX+RSI*1],80
            jne .L_430d30

            cmp BYTE PTR [RAX+RSI*1+1],75
            jne .L_430d30

            movzx ECX,BYTE PTR [RAX+RSI*1+2]
            cmp CL,3
            je .L_430d80

            cmp CL,1
            jne .L_430db8

            cmp BYTE PTR [RAX+RSI*1+3],2
            jne .L_430d30
.L_430d5c:

            mov EAX,1
.L_430d61:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_430e2a

            add RSP,24
.L_430d79:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_430d80:

            cmp BYTE PTR [RAX+RSI*1+3],4
            jne .L_430d30

            mov RDI,RBX
            call .L_404a30

            mov RDX,RBP
            mov RSI,R13
            mov RDI,RBX
            call .L_430280

            jmp .L_430d61
.L_430d9f:

            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430da8:

            mov RDI,RBX
            call .L_404a30

            jmp .L_430cf8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430db8:

            sub ECX,5
            cmp CL,1
            ja .L_430d30

            cmp BYTE PTR [RAX+RSI*1+3],6
            jne .L_430d30

            jmp .L_430d5c
.L_430dd1:

            mov EDI,144
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+56],RAX
            jne .L_430c66

            lea RDX,QWORD PTR [RIP+.L_450f60-122432]
            mov ESI,12
            mov RDI,RBX
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_430d61
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_430e10:

            lea RAX,QWORD PTR [RIP+.L_450f60-122436]
            mov QWORD PTR [RDI+24],RAX
            jmp .L_430c42
.L_430e20:

            mov EAX,4294967266
            jmp .L_430d61
.L_430e2a:

            call __stack_chk_fail@PLT
.L_430e2f:

            nop
.L_430e30:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,152
.L_430e44:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+32],RSI
            mov R13,QWORD PTR [RAX]
            cmp DWORD PTR [R13+48],-1
            jne .L_430e75

            mov DWORD PTR [R13+48],0
.L_430e75:

            cmp QWORD PTR [R15+24],0
            mov DWORD PTR [R15+16],327680
            je .L_431130

            cmp QWORD PTR [R13+56],0
            je .L_431146
.L_430e93:

            mov RSI,QWORD PTR [R13+104]
            test RSI,RSI
            je .L_4310f8

            lea RDI,QWORD PTR [R13+64]
            mov EDX,1
            call .L_44a8b0

            mov QWORD PTR [R13+104],RAX
.L_430eb2:

            test RAX,RAX
            je .L_4310f8

            mov RSI,QWORD PTR [RAX+72]
            xor EBP,EBP
            test RSI,RSI
            je .L_430ed2

            lea RDI,QWORD PTR [R13+80]
            call .L_44a590

            mov RBP,RAX
.L_430ed2:

            cmp BYTE PTR [R13+480],0
            je .L_430ee9

            lea RDI,QWORD PTR [R13+392]
            call QWORD PTR [RIP+.L_65ac58]
.L_430ee9:

            cmp BYTE PTR [R13+496],0
            je .L_430f00

            lea RDI,QWORD PTR [R13+488]
            call QWORD PTR [RIP+.L_65ad38]
.L_430f00:

            mov RDI,R15
            mov BYTE PTR [R13+496],0
            mov BYTE PTR [R13+480],0
            mov BYTE PTR [R13+388],0
            call .L_44aca0

            xor ESI,ESI
            mov RDI,R15
            call .L_43f940

            mov RDX,QWORD PTR [R13+104]
            mov RSI,QWORD PTR [RDX+32]
            cmp RSI,RAX
            jg .L_4311d8

            je .L_430f47

            xor EDX,EDX
            mov RDI,R15
            call .L_404dd0
.L_430f47:

            mov RSI,QWORD PTR [RSP+32]
            mov QWORD PTR [R13+96],0
            mov RDX,R13
            mov RDI,R15
            call .L_430280

            test EAX,EAX
            mov EBX,EAX
            jne .L_4310fd

            test RBP,RBP
            je .L_4310fd

            mov RAX,QWORD PTR [R15+2472]
            xor ESI,ESI
            mov RDI,R15
            mov R13,QWORD PTR [RAX]
            call .L_43f940

            movzx EDX,BYTE PTR [RBP+128]
            mov QWORD PTR [RSP+24],RAX
            test DL,DL
            je .L_431240

            xor ECX,ECX
            cmp DL,8
            lea RAX,QWORD PTR [RIP+.L_65aad0]
            jne .L_431202

            mov RDI,QWORD PTR [RBP+48]
.L_430fb0:

            cmp RDI,4194304
            jg .L_431953

            mov RCX,QWORD PTR [RBP+40]
            cmp RCX,4194304
            jg .L_431956

            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_4317ec

            mov RSI,QWORD PTR [RBP+32]
            cmp QWORD PTR [RSP+24],RSI
            jl .L_4318d2

            jne .L_431844
.L_430ff6:

            xor EDX,EDX
            mov ESI,30
            mov RDI,R15
            call .L_4049e0

            test RAX,RAX
            je .L_4319ae

            cmp DWORD PTR [RAX],67324752
            jne .L_43198c

            movzx EDX,WORD PTR [RAX+26]
            movzx EAX,WORD PTR [RAX+28]
            lea RSI,QWORD PTR [RDX+RAX*1+30]
.L_431027:

            mov RDI,R15
            call .L_404a30

            mov R12,QWORD PTR [RBP+40]
            mov R14,QWORD PTR [RBP+48]
            test R12,R12
            je .L_431962

            mov RAX,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+64],EBX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+16],RAX
.L_431058:

            mov RDX,QWORD PTR [RSP+16]
            mov ESI,1
            mov RDI,R15
            call .L_4049e0

            test RAX,RAX
            mov R8,RAX
            je .L_4318f0

            cmp QWORD PTR [RSP+112],R12
            jbe .L_431082

            mov QWORD PTR [RSP+112],R12
.L_431082:

            movzx EAX,BYTE PTR [RBP+128]
            test AL,AL
            je .L_431270

            cmp AL,8
            je .L_4312c0

            test R12,R12
            setne BL
            xor ECX,ECX
.L_4310a1:

            mov RSI,RCX
            mov RDI,R15
            call .L_404a30

            test BL,BL
            jne .L_431058

            mov RDX,QWORD PTR [RBP+48]
            mov EBX,DWORD PTR [RSP+64]
            sub RDX,R14
.L_4310bb:

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+32]
            call .L_446a60

            nop
            nop
            nop
            nop
            nop
            nop
.L_4310d0:

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,R15
            xor EDX,EDX
            call .L_404dd0

            mov RDI,QWORD PTR [RSP+40]
            mov BYTE PTR [R13+153],0
            call free@PLT

            jmp .L_4310fd
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4310f8:

            mov EBX,1
.L_4310fd:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_4319ce

            add RSP,152
.L_43111d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431130:

            cmp QWORD PTR [R13+56],0
            lea RAX,QWORD PTR [RIP+.L_450f60-122436]
            mov QWORD PTR [R15+24],RAX
            jne .L_430e93
.L_431146:

            mov RSI,QWORD PTR [R13+24]
            xor EDX,EDX
            mov RDI,R15
            call .L_404dd0

            test RAX,RAX
            js .L_431800

            lea RBX,QWORD PTR [RSP+104]
.L_431162:

            mov RDX,RBX
            mov ESI,20
            mov RDI,R15
            call .L_4049e0

            test RAX,RAX
            je .L_431800

            mov RCX,QWORD PTR [RSP+104]
            xor ESI,ESI
            sub RCX,4
.L_431186:

            cmp RCX,RSI
            jle .L_4311c8
.L_43118b:

            movzx EDX,BYTE PTR [RAX+RSI*1+3]
            cmp DL,5
            je .L_431728

            jle .L_431368

            cmp DL,75
            je .L_431748

            cmp DL,80
            je .L_431738

            cmp DL,6
            je .L_431708
.L_4311ba:

            add RSI,4
            cmp RCX,RSI
            jg .L_43118b

            nop
            nop
            nop
            nop
            nop
.L_4311c8:

            mov RDI,R15
            call .L_404a30

            jmp .L_431162
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4311d8:

            sub RSI,RAX
            mov RDI,R15
            call .L_404a30

            jmp .L_430f47
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4311f0:

            add EBX,1
            cmp EBX,23
            je .L_4318e4

            mov ECX,DWORD PTR [RAX]
            add RAX,16
.L_431202:

            cmp EDX,ECX
            jne .L_4311f0

            movsxd RBX,EBX
            lea RAX,QWORD PTR [RIP+.L_65aac0]
            shl RBX,4
            mov RCX,QWORD PTR [RAX+RBX*1+8]
.L_431219:

            lea RDX,QWORD PTR [RIP+.L_432de0]
.L_431220:

            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            call .L_43f5d0

            mov EBX,4294967276
            jmp .L_4310fd
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431240:

            mov RDI,QWORD PTR [RBP+40]
            cmp QWORD PTR [RBP+48],RDI
            je .L_430fb0

            lea RDX,QWORD PTR [RIP+.L_432da8]
.L_431255:

            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            call .L_43f5d0

            mov EBX,4294967266
            jmp .L_4310fd
          .byte 0x66

            nop
.L_431270:

            mov RCX,QWORD PTR [RSP+112]
            cmp RCX,R14
            mov R9,RCX
            ja .L_431810

            sub R14,RCX
            setne BL
            sub R12,RCX
            setne AL
            and EBX,EAX
.L_43128f:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R9
            mov RSI,R8
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+48],R9
            call memcpy@PLT

            mov R9,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+56]
            add QWORD PTR [RSP+8],R9
            jmp .L_4310a1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4312c0:

            mov RSI,R13
            mov RDI,R15
            mov QWORD PTR [RSP+48],R8
            call .L_42f850

            cmp EAX,0
            jne .L_431946

            mov RAX,QWORD PTR [RSP+112]
            mov R8,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [R13+176]
            xor ESI,ESI
            mov QWORD PTR [R13+192],0
            mov DWORD PTR [R13+208],R14D
            mov QWORD PTR [R13+216],0
            mov DWORD PTR [R13+184],EAX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R13+176],R8
            mov QWORD PTR [R13+200],RAX
            call inflate@PLT

            test EAX,EAX
            je .L_4318cb

            cmp EAX,1
            je .L_4318a6

            cmp EAX,-4
            je .L_431886

            lea RDX,QWORD PTR [RIP+.L_43313c]
            mov ECX,EAX
            mov ESI,4294967295
            mov RDI,R15
            xor EAX,EAX
            mov EBX,4294967266
            call .L_43f5d0

            jmp .L_4310d0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431368:

            cmp DL,1
            je .L_431728

            cmp DL,2
            jne .L_4311ba

            cmp DWORD PTR [RAX+RSI*1],33639248
            jne .L_4311ba
.L_431387:

            mov RDI,R15
            call .L_404a30

            xor ESI,ESI
            mov RDI,R15
            call .L_43f940

            sub RAX,QWORD PTR [R13+24]
            lea RSI,QWORD PTR [RIP+.L_65aab0]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [R13+64]
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_44a580

            lea RAX,QWORD PTR [R13+80]
            lea RSI,QWORD PTR [RIP+.L_65aaa0]
            mov RDI,RAX
            mov QWORD PTR [RSP+48],RAX
            call .L_44a580

            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [R13+32],0
            mov QWORD PTR [RSP+8],R15
            mov QWORD PTR [RSP+40],RAX
.L_4313e9:

            mov RDI,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov ESI,4
            call .L_4049e0

            test RAX,RAX
            je .L_431800

            cmp DWORD PTR [RAX],101075792
            je .L_431828

            cmp DWORD PTR [RAX],101010256
            je .L_431828

            cmp DWORD PTR [RAX],33639248
            jne .L_431910

            mov RDI,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov ESI,46
            call .L_4049e0

            test RAX,RAX
            mov RBX,RAX
            je .L_431800

            mov ESI,144
            mov EDI,1
            call calloc@PLT

            mov R14,RAX
            mov RAX,QWORD PTR [R13+56]
            or BYTE PTR [R14+130],2
            mov QWORD PTR [R14+24],RAX
            add QWORD PTR [R13+32],1
            mov QWORD PTR [R13+56],R14
            movzx EAX,BYTE PTR [RBX+5]
            mov BYTE PTR [R14+129],AL
            movzx EAX,WORD PTR [RBX+8]
            test AL,65
            mov WORD PTR [R14+126],AX
            je .L_43148f

            mov DWORD PTR [R13+48],1
.L_43148f:

            movzx EAX,WORD PTR [RBX+10]
            lea RDI,QWORD PTR [RBX+12]
            mov BYTE PTR [R14+128],AL
            call .L_42f7a0

            test BYTE PTR [R14+126],8
            mov QWORD PTR [R14+96],RAX
            mov EAX,DWORD PTR [RBX+16]
            mov DWORD PTR [R14+120],EAX
            je .L_4317c0

            movzx EAX,BYTE PTR [RBX+13]
            mov BYTE PTR [R14+131],AL
.L_4314c4:

            mov EAX,DWORD PTR [RBX+20]
            mov QWORD PTR [R14+40],RAX
            mov EAX,DWORD PTR [RBX+24]
            mov QWORD PTR [R14+48],RAX
            movzx EAX,WORD PTR [RBX+32]
            movzx R12D,WORD PTR [RBX+28]
            movzx EBP,WORD PTR [RBX+30]
            mov EDX,DWORD PTR [RBX+38]
            mov QWORD PTR [RSP+64],RAX
            mov EAX,DWORD PTR [RBX+42]
            add RAX,QWORD PTR [RSP+24]
            mov WORD PTR [RSP+86],R12W
            mov RCX,RBP
            mov QWORD PTR [R14+32],RAX
            movzx EAX,BYTE PTR [R14+129]
            cmp AL,3
            je .L_4317d0

            test AL,AL
            jne .L_4317e0

            mov EAX,EDX
            and EAX,16
            cmp EAX,1
            sbb EAX,EAX
            and AX,16311
            add AX,16893
            and EDX,1
            mov WORD PTR [R14+124],AX
            je .L_431540

            and WORD PTR [R14+124],365
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431540:

            mov RBX,QWORD PTR [RSP+8]
            mov ESI,46
            mov DWORD PTR [RSP+56],ECX
            mov RDI,RBX
            call .L_404a30

            lea RAX,QWORD PTR [R12+RBP*1]
            xor EDX,EDX
            mov RDI,RBX
            mov RSI,RAX
            mov QWORD PTR [RSP+72],RAX
            call .L_4049e0

            test RAX,RAX
            mov RBX,RAX
            mov ECX,DWORD PTR [RSP+56]
            je .L_431935

            test CX,CX
            je .L_4315a7

            cmp RBP,3
            jbe .L_431969

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RAX+R12*1]
            mov RCX,R14
            mov RDX,RBP
            call .L_42fd00

            test EAX,EAX
            jne .L_431800
.L_4315a7:

            mov EAX,DWORD PTR [R13+324]
            test EAX,EAX
            je .L_4317a5

            mov QWORD PTR [RSP+56],R13
            mov RBP,RBX
            mov R13,RBX
            jmp .L_4315cc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4315c8:

            lea R13,QWORD PTR [RAX+1]
.L_4315cc:

            mov R15,R13
            mov RBX,R12
            mov ESI,47
            sub R15,RBP
            mov RDI,R13
            sub RBX,R15
            mov RDX,RBX
            call memchr@PLT

            test RAX,RAX
            jne .L_4315c8

            cmp WORD PTR [RSP+86],8
            mov QWORD PTR [RSP+88],RBX
            mov RBX,RBP
            mov RBP,R13
            mov R13,QWORD PTR [RSP+56]
            jbe .L_431758

            lea RSI,QWORD PTR [RIP+.L_43312f]
            mov ECX,9
            mov RDI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_431758

            cmp BYTE PTR [RBX+R12*1-1],47
            je .L_43185d

            cmp R15,2
            jle .L_431643

            cmp BYTE PTR [RBP],46
            je .L_431853
.L_431643:

            mov RSI,R14
            mov R14,QWORD PTR [RSP+16]
            mov RDI,R14
            call .L_44a6f0

            mov RDI,QWORD PTR [RSP+40]
            mov RDX,R12
            mov RSI,RBX
            mov QWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov R12,R14
            mov QWORD PTR [RSP+128],0
            call .L_437290

            mov RBP,QWORD PTR [RSP+48]
            jmp .L_4316c7

            nop
            nop
            nop
            nop
            nop
.L_431690:

            mov BYTE PTR [RAX],0
            mov RSI,QWORD PTR [RSP+112]
            mov RDI,RBP
            call .L_44a590

            test RAX,RAX
            mov RBX,RAX
            je .L_4316db

            mov RSI,RAX
            mov RDI,RBP
            call .L_44a950

            lea RDI,QWORD PTR [RBX+72]
            call .L_434290

            mov RSI,RBX
            mov RDI,R12
            call .L_44a6f0
.L_4316c7:

            mov RDI,QWORD PTR [RSP+112]
            mov ESI,47
            call strrchr@PLT

            test RAX,RAX
            jne .L_431690
.L_4316db:

            mov RDI,QWORD PTR [RSP+40]
            call .L_434290

            nop
            nop
            nop
.L_4316e8:

            mov RSI,QWORD PTR [RSP+64]
            add RSI,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+8]
            call .L_404a30

            jmp .L_4313e9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431708:

            lea RDX,QWORD PTR [RAX+RSI*1]
            cmp DWORD PTR [RDX],101010256
            je .L_431387

            cmp DWORD PTR [RDX],101075792
            je .L_431387

            nop
            nop
            nop
            nop
.L_431728:

            add RSI,1
            jmp .L_431186
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431738:

            add RSI,3
            jmp .L_431186
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431748:

            add RSI,2
            jmp .L_431186
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431758:

            lea R12,QWORD PTR [R14+72]
            lea RSI,QWORD PTR [RIP+.L_43312f]
            mov EDX,9
            mov QWORD PTR [R14+80],0
            mov RDI,R12
            call .L_437290

            mov RDX,R15
            mov RSI,RBX
            mov RDI,R12
            call .L_437290

            lea RSI,QWORD PTR [RIP+.L_433139]
            mov RDI,R12
            call .L_437310

            mov RDX,QWORD PTR [RSP+88]
            mov RSI,RBP
            mov RDI,R12
            call .L_437290
.L_4317a5:

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R14
            call .L_44a6f0

            jmp .L_4316e8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4317c0:

            movzx EAX,BYTE PTR [RBX+19]
            mov BYTE PTR [R14+131],AL
            jmp .L_4314c4
.L_4317d0:

            shr EDX,16
            mov WORD PTR [R14+124],DX
            jmp .L_431540
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4317e0:

            xor EDX,EDX
            mov WORD PTR [R14+124],DX
            jmp .L_431540
.L_4317ec:

            lea RDX,QWORD PTR [RIP+.L_432e38]
            mov ESI,12
            mov RDI,R15
            call .L_43f5d0
.L_431800:

            mov EBX,4294967266
            jmp .L_4310fd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431810:

            mov RCX,R14
            mov QWORD PTR [RSP+112],R14
            sub R12,R14
            mov R9,R14
            xor EBX,EBX
            xor R14D,R14D
            jmp .L_43128f
.L_431828:

            mov RDI,QWORD PTR [RSP+16]
            xor EDX,EDX
            xor ESI,ESI
            mov R15,QWORD PTR [RSP+8]
            call .L_44a8b0

            mov QWORD PTR [R13+104],RAX
            jmp .L_430eb2
.L_431844:

            xor EDX,EDX
            mov RDI,R15
            call .L_404dd0

            jmp .L_430ff6
.L_431853:

            cmp BYTE PTR [RBP+1],95
            jne .L_431643
.L_43185d:

            lea RDI,QWORD PTR [R14+72]
            mov RSI,RBX
            mov QWORD PTR [R14+80],0
            mov RDX,R12
            call .L_437290

            mov RDI,QWORD PTR [RSP+48]
            mov RSI,R14
            call .L_44a6f0

            jmp .L_4316e8
.L_431886:

            lea RDX,QWORD PTR [RIP+.L_432e60]
            mov ESI,12
            mov RDI,R15
            xor EAX,EAX
            mov EBX,4294967266
            call .L_43f5d0

            jmp .L_4310d0
.L_4318a6:

            xor EDX,EDX
.L_4318a8:

            mov RAX,QWORD PTR [R13+216]
            mov RCX,QWORD PTR [R13+192]
            add QWORD PTR [RSP+8],RAX
            sub R14,RAX
            sub R12,RCX
            setne BL
            and EBX,EDX
            jmp .L_4310a1
.L_4318cb:

            mov EDX,1
            jmp .L_4318a8
.L_4318d2:

            sub RSI,QWORD PTR [RSP+24]
            mov RDI,R15
            call .L_404a30

            jmp .L_430ff6
.L_4318e4:

            lea RCX,QWORD PTR [RIP+.L_4330af]
            jmp .L_431219
.L_4318f0:

            lea RDX,QWORD PTR [RIP+.L_4330b2]
            mov ESI,84
            mov RDI,R15
            xor EAX,EAX
            mov EBX,4294967276
            call .L_43f5d0

            jmp .L_4310d0
.L_431910:

            mov R15,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_432d80]
            mov ESI,4294967295
            xor EAX,EAX
            mov EBX,4294967266
            mov RDI,R15
            call .L_43f5d0

            jmp .L_4310fd
.L_431935:

            mov R15,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_4330b2]
            jmp .L_431255
.L_431946:

            mov EBX,0
            cmovle EBX,EAX
            jmp .L_4310d0
.L_431953:

            mov RCX,RDI
.L_431956:

            lea RDX,QWORD PTR [RIP+.L_432e08]
            jmp .L_431220
.L_431962:

            xor EDX,EDX
            jmp .L_4310bb
.L_431969:

            mov R15,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_432be8]
            movzx ECX,CX
            mov ESI,84
            xor EAX,EAX
            mov RDI,R15
            call .L_43f5d0

            jmp .L_431800
.L_43198c:

            lea RDX,QWORD PTR [RIP+.L_4330cc]
            mov ESI,4294967295
            mov RDI,R15
            xor EAX,EAX
            call .L_43f5d0

            mov RSI,-20
            jmp .L_431027
.L_4319ae:

            lea RDX,QWORD PTR [RIP+.L_4330b2]
            mov ESI,84
            mov RDI,R15
            call .L_43f5d0

            mov RSI,-20
            jmp .L_431027
.L_4319ce:

            call __stack_chk_fail@PLT
.L_4319d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4319e0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_4319f7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+160],0
            je .L_431b90
.L_431a1f:

            mov RSI,RBX
            mov RDI,RBP
            call .L_42f850

            test EAX,EAX
            mov R12D,EAX
            je .L_431a60
.L_431a31:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R12D
            jne .L_431ee5

            add RSP,56
.L_431a4c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431a60:

            lea RDX,QWORD PTR [RSP+24]
            mov ESI,1
            mov RDI,RBP
            call .L_4049e0

            mov R15,RAX
            mov RAX,QWORD PTR [RBX+104]
            movzx EAX,WORD PTR [RAX+126]
            and AX,8
            mov EDX,EAX
            je .L_431bd8

            mov RAX,QWORD PTR [RSP+24]
.L_431a8e:

            test RAX,RAX
            js .L_431ec4

            movzx R10D,BYTE PTR [RBX+388]
            test R10B,R10B
            jne .L_431ab0

            cmp BYTE PTR [RBX+480],0
            mov RSI,R15
            je .L_431afe
.L_431ab0:

            mov R8,QWORD PTR [RBX+360]
            mov R9,RAX
            mov RSI,QWORD PTR [RBX+344]
            cmp R8,RAX
            jae .L_431af6

            mov RDI,QWORD PTR [RBX+352]
            add RDI,QWORD PTR [RBX+336]
            lea RCX,QWORD PTR [RSI+R8*1]
            sub RDI,RCX
            cmp RAX,RDI
            jb .L_431d58

            test DX,DX
            je .L_431dc0
.L_431aed:

            test RDI,RDI
            jne .L_431e30
.L_431af6:

            mov RAX,R8
.L_431af9:

            mov QWORD PTR [RSP+24],RAX
.L_431afe:

            mov DWORD PTR [RBX+184],EAX
            mov RAX,QWORD PTR [RBX+160]
            lea RDI,QWORD PTR [RBX+176]
            mov QWORD PTR [RBX+176],RSI
            mov QWORD PTR [RBX+192],0
            xor ESI,ESI
            mov QWORD PTR [RBX+216],0
            mov QWORD PTR [RBX+200],RAX
            mov RAX,QWORD PTR [RBX+168]
            mov DWORD PTR [RBX+208],EAX
            call inflate@PLT

            test EAX,EAX
            je .L_431c07

            cmp EAX,1
            je .L_431c00

            cmp EAX,-4
            je .L_431d30

            lea RDX,QWORD PTR [RIP+.L_43313c]
            mov ECX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967266
            call .L_43f5d0

            jmp .L_431a31
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431b90:

            mov QWORD PTR [RBX+168],262144
            mov EDI,262144
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+160],RAX
            jne .L_431a1f

            lea RDX,QWORD PTR [RIP+.L_432e88]
            mov ESI,12
            mov RDI,RBP
            mov R12D,4294967266
            call .L_43f5d0

            jmp .L_431a31
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431bd8:

            mov RCX,QWORD PTR [RBX+112]
            mov RAX,QWORD PTR [RSP+24]
            cmp RCX,RAX
            jge .L_431a8e

            mov QWORD PTR [RSP+24],RCX
            mov RAX,RCX
            jmp .L_431a8e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431c00:

            mov BYTE PTR [RBX+154],1
.L_431c07:

            cmp BYTE PTR [RBX+388],0
            mov RDX,QWORD PTR [RBX+192]
            mov RSI,RDX
            mov QWORD PTR [RSP+24],RDX
            jne .L_431d08

            cmp BYTE PTR [RBX+480],0
            jne .L_431d08
.L_431c30:

            cmp BYTE PTR [RBX+496],0
            je .L_431c4e

            mov RSI,R15
            lea RDI,QWORD PTR [RBX+488]
            call QWORD PTR [RIP+.L_65ad28]

            mov RSI,QWORD PTR [RSP+24]
.L_431c4e:

            mov RDI,RBP
            call .L_404a30

            mov RAX,QWORD PTR [RSP+24]
            sub QWORD PTR [RBX+112],RAX
            add QWORD PTR [RBX+120],RAX
            mov RAX,QWORD PTR [RBX+216]
            mov QWORD PTR [R14],RAX
            mov RAX,QWORD PTR [RBX+216]
            add QWORD PTR [RBX+128],RAX
            mov RAX,QWORD PTR [RBX+160]
            mov QWORD PTR [R13],RAX
            cmp BYTE PTR [RBX+154],0
            je .L_431a31

            cmp BYTE PTR [RBX+496],0
            jne .L_431e10
.L_431ca0:

            mov RAX,QWORD PTR [RBX+104]
            test BYTE PTR [RAX+126],8
            je .L_431a31

            xor EDX,EDX
            mov ESI,24
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            je .L_431eea

            cmp BYTE PTR [RAX],80
            je .L_431e70
.L_431ccf:

            mov RDX,QWORD PTR [RBX+104]
            mov ESI,DWORD PTR [RAX]
            mov RCX,QWORD PTR [RBX+96]
            test BYTE PTR [RDX+130],1
            mov DWORD PTR [RDX+120],ESI
            jne .L_431e40

            mov ESI,DWORD PTR [RAX+4]
            add RCX,12
            mov QWORD PTR [RDX+40],RSI
            mov EAX,DWORD PTR [RAX+8]
            mov QWORD PTR [RDX+48],RAX
            mov QWORD PTR [RBX+96],RCX
            jmp .L_431a31
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431d08:

            sub QWORD PTR [RBX+360],RDX
            jne .L_431db0

            mov RAX,QWORD PTR [RBX+336]
            mov QWORD PTR [RBX+344],RAX
            jmp .L_431c30
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431d30:

            lea RDX,QWORD PTR [RIP+.L_432e60]
            mov ESI,12
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967266
            call .L_43f5d0

            jmp .L_431a31
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431d58:

            test DX,DX
            je .L_431df8
.L_431d61:

            test R10B,R10B
            jne .L_431ea0

            mov QWORD PTR [RSP+32],R9
            mov RDX,R9
            mov QWORD PTR [RSP+8],R9
            lea RDI,QWORD PTR [RBX+392]
            lea R8,QWORD PTR [RSP+32]
            mov RSI,R15
            call QWORD PTR [RIP+.L_65ac50]

            mov R9,QWORD PTR [RSP+8]
.L_431d91:

            mov RAX,QWORD PTR [RBX+360]
            mov RSI,QWORD PTR [RBX+344]
            add RAX,R9
            mov QWORD PTR [RBX+360],RAX
            jmp .L_431af9
          .byte 0x66
          .byte 0x90
.L_431db0:

            add QWORD PTR [RBX+344],RDX
            jmp .L_431c30
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431dc0:

            mov RDX,QWORD PTR [RBX+112]
            test RDX,RDX
            jle .L_431aed
.L_431dcd:

            lea RAX,QWORD PTR [R8+RDI*1]
            cmp RAX,RDX
            jle .L_431aed

            cmp R8,RDX
            mov RAX,R8
            jg .L_431af9

            sub RDX,R8
            mov RDI,RDX
            jmp .L_431aed
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431df8:

            mov RDX,QWORD PTR [RBX+112]
            mov RDI,RAX
            test RDX,RDX
            jg .L_431dcd

            jmp .L_431d61
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431e10:

            xor ESI,ESI
            mov RDI,RBP
            call .L_42f120

            test EAX,EAX
            jne .L_431e60

            cmp BYTE PTR [RBX+154],0
            jne .L_431ca0

            jmp .L_431a31
.L_431e30:

            mov R9,RDI
            jmp .L_431d61
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431e40:

            mov RSI,QWORD PTR [RAX+4]
            add RCX,20
            mov QWORD PTR [RDX+40],RSI
            mov RAX,QWORD PTR [RAX+12]
            mov QWORD PTR [RDX+48],RAX
            mov QWORD PTR [RBX+96],RCX
            jmp .L_431a31
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431e60:

            mov R12D,EAX
            jmp .L_431a31
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431e70:

            cmp BYTE PTR [RAX+1],75
            jne .L_431ccf

            cmp BYTE PTR [RAX+2],7
            jne .L_431ccf

            cmp BYTE PTR [RAX+3],8
            jne .L_431ccf

            add RAX,4
            mov QWORD PTR [RBX+96],4
            jmp .L_431ccf
          .byte 0x90
.L_431ea0:

            lea RDI,QWORD PTR [RBX+376]
            mov R8,R9
            mov RDX,R9
            mov RSI,R15
            mov QWORD PTR [RSP+8],R9
            call .L_42f090

            mov R9,QWORD PTR [RSP+8]
            jmp .L_431d91
.L_431ec4:

            lea RDX,QWORD PTR [RIP+.L_43315a]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R12D,4294967266
            call .L_43f5d0

            jmp .L_431a31
.L_431ee5:

            call __stack_chk_fail@PLT
.L_431eea:

            lea RDX,QWORD PTR [RIP+.L_432ea8]
            mov ESI,84
            mov RDI,RBP
            mov R12D,4294967266
            call .L_43f5d0

            jmp .L_431a31
.L_431f09:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431f10:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,40
.L_431f1d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+96]
            call .L_404a30

            test RAX,RAX
            mov QWORD PTR [RBX+96],0
            js .L_431fb2

            cmp BYTE PTR [RBX+154],0
            jne .L_431f7b

            mov RAX,QWORD PTR [RBX+104]
            movzx EDX,WORD PTR [RAX+126]
            test DL,8
            je .L_431f6a

            cmp QWORD PTR [RAX+40],0
            jle .L_431fc0
.L_431f6a:

            mov RSI,QWORD PTR [RBX+112]
            mov RDI,R12
            call .L_404a30

            test RAX,RAX
            js .L_431fb2
.L_431f7b:

            xor EAX,EAX
.L_431f7d:

            mov RDI,QWORD PTR [RSP+24]
            xor RDI,QWORD PTR FS:[40]
            jne .L_432159

            add RSP,40
.L_431f95:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_431f9c:

            lea RDX,QWORD PTR [RIP+.L_432ffb]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_431fb2:

            mov EAX,4294967266
            jmp .L_431f7d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_431fc0:

            cmp BYTE PTR [RBX+328],0
            je .L_43205e

            and EDX,64
            mov DWORD PTR [RBX+48],1
            mov RDI,R12
            jne .L_432132

            cmp BYTE PTR [RAX+128],99
            je .L_43213c

            call .L_42fad0
.L_431ff2:

            test EAX,EAX
            jne .L_431f7d

            mov RAX,QWORD PTR [RBX+104]
            mov BYTE PTR [RBX+328],0
            cmp BYTE PTR [RAX+128],8
            jne .L_432067

            cmp BYTE PTR [RBX+154],0
            jne .L_431f7b
.L_432017:

            lea RBP,QWORD PTR [RSP+16]
            lea R13,QWORD PTR [RSP+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432028:

            mov RDX,RBP
            mov RSI,R13
            mov RDI,R12
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            call .L_4319e0

            test EAX,EAX
            jne .L_431f7d

            cmp BYTE PTR [RBX+154],0
            je .L_432028

            jmp .L_431f7b
.L_43205e:

            cmp BYTE PTR [RAX+128],8
            je .L_432017
.L_432067:

            lea RBP,QWORD PTR [RSP+16]
            nop
            nop
            nop
            nop
.L_432070:

            mov RDX,RBP
            mov ESI,16
            mov RDI,R12
            call .L_4049e0

            mov RDX,QWORD PTR [RSP+16]
            cmp RDX,15
            jle .L_431f9c

            lea RCX,QWORD PTR [RAX+RDX*1-16]
            mov RSI,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4320a0:

            cmp RSI,RCX
            ja .L_4320c6
.L_4320a5:

            movzx EDX,BYTE PTR [RSI+3]
            cmp DL,80
            je .L_4320d8

            cmp DL,75
            je .L_4320e0

            cmp DL,7
            je .L_4320f0

            cmp DL,8
            je .L_432100
.L_4320bd:

            add RSI,4
            cmp RSI,RCX
            jbe .L_4320a5
.L_4320c6:

            sub RSI,RAX
            mov RDI,R12
            call .L_404a30

            jmp .L_432070
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4320d8:

            add RSI,3
            jmp .L_4320a0
          .byte 0x66
          .byte 0x90
.L_4320e0:

            add RSI,2
            jmp .L_4320a0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4320f0:

            add RSI,1
            jmp .L_4320a0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432100:

            cmp BYTE PTR [RSI+2],7
            jne .L_4320bd

            cmp BYTE PTR [RSI+1],75
            jne .L_4320bd

            cmp BYTE PTR [RSI],80
            jne .L_4320bd

            sub RSI,RAX
            mov RAX,QWORD PTR [RBX+104]
            test BYTE PTR [RAX+130],1
            je .L_432146

            add RSI,24
            mov RDI,R12
            call .L_404a30

            jmp .L_431f7b
.L_432132:

            call .L_42eb40

            jmp .L_431ff2
.L_43213c:

            call .L_42f470

            jmp .L_431ff2
.L_432146:

            add RSI,16
            mov RDI,R12
            call .L_404a30

            xor EAX,EAX
            jmp .L_431f7d
.L_432159:

            call __stack_chk_fail@PLT
.L_43215e:

            nop
            nop
.L_432160:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RDX
            sub RSP,56
.L_432177:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp DWORD PTR [RBX+48],-1
            jne .L_43219e

            mov DWORD PTR [RBX+48],0
.L_43219e:

            mov RAX,QWORD PTR [RBX+128]
            mov QWORD PTR [RCX],RAX
            mov QWORD PTR [R12],0
            mov EAX,1
            mov QWORD PTR [R13],0
            cmp BYTE PTR [RBX+154],0
            jne .L_4321da

            mov RDX,QWORD PTR [RBX+104]
            movzx EDX,WORD PTR [RDX+124]
            and DX,61440
            cmp DX,32768
            je .L_432200
.L_4321da:

            mov RDI,QWORD PTR [RSP+40]
            xor RDI,QWORD PTR FS:[40]
            jne .L_432705

            add RSP,56
.L_4321f2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432200:

            mov RSI,QWORD PTR [RBX+96]
            mov RDI,RBP
            call .L_404a30

            cmp BYTE PTR [RBX+328],0
            mov QWORD PTR [RBX+96],0
            je .L_432252

            mov RAX,QWORD PTR [RBX+104]
            mov DWORD PTR [RBX+48],1
            mov RDI,RBP
            test BYTE PTR [RAX+126],64
            jne .L_4323a0

            cmp BYTE PTR [RAX+128],99
            je .L_4325b0

            call .L_42fad0
.L_432247:

            test EAX,EAX
            jne .L_4321da

            mov BYTE PTR [RBX+328],0
.L_432252:

            mov RAX,QWORD PTR [RBX+104]
            movzx ECX,BYTE PTR [RAX+128]
            test CL,CL
            je .L_4323b0

            cmp CL,8
            jne .L_432340

            mov RDX,R12
            mov RSI,R13
            mov RDI,RBP
            call .L_4319e0

            test EAX,EAX
            jne .L_4321da

            nop
            nop
            nop
            nop
.L_432288:

            mov RDX,QWORD PTR [R12]
            test RDX,RDX
            je .L_4322ab

            mov EDX,EDX
            mov RDI,QWORD PTR [RBX+136]
            mov RSI,QWORD PTR [R13]
            call QWORD PTR [RBX+144]

            mov QWORD PTR [RBX+136],RAX
.L_4322ab:

            xor EAX,EAX
            cmp BYTE PTR [RBX+154],0
            je .L_4321da

            mov RDX,QWORD PTR [RBX+104]
            mov RCX,QWORD PTR [RBX+120]
            mov R8,QWORD PTR [RDX+40]
            cmp R8,RCX
            jne .L_4326e9

            mov R8,QWORD PTR [RDX+48]
            mov RCX,QWORD PTR [RBX+128]
            cmp R8D,ECX
            jne .L_43272a

            cmp BYTE PTR [RBX+496],0
            je .L_4322f9

            cmp DWORD PTR [RDX+132],2
            je .L_4321da
.L_4322f9:

            mov R8D,DWORD PTR [RDX+120]
            mov RCX,QWORD PTR [RBX+136]
            xor EAX,EAX
            cmp R8,RCX
            je .L_4321da

            cmp BYTE PTR [RBX+152],0
            jne .L_4321da

            lea RDX,QWORD PTR [RIP+.L_432f50]
            or ESI,4294967295
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_4321da
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432340:

            lea RDX,QWORD PTR [RIP+.L_65aad0]
            xor ESI,ESI
            xor EAX,EAX
            jmp .L_432362
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432350:

            add EAX,1
            cmp EAX,23
            je .L_4325c0

            mov ESI,DWORD PTR [RDX]
            add RDX,16
.L_432362:

            cmp ECX,ESI
            jne .L_432350

            cdqe 
            lea RDX,QWORD PTR [RIP+.L_65aac0]
            shl RAX,4
            mov RCX,QWORD PTR [RDX+RAX*1+8]
.L_432378:

            lea RDX,QWORD PTR [RIP+.L_432de0]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967271
            jmp .L_4321da
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4323a0:

            call .L_42eb40

            jmp .L_432247
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4323b0:

            mov RAX,QWORD PTR [RBP+2472]
            mov R14,QWORD PTR [RAX]
            mov RAX,QWORD PTR [R14+104]
            test BYTE PTR [RAX+126],8
            je .L_432570

            cmp BYTE PTR [R14+496],1
            lea RDX,QWORD PTR [RSP+24]
            mov RDI,RBP
            sbb RSI,RSI
            and RSI,-10
            add RSI,34
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RSI
            call .L_4049e0

            mov RSI,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP]
            mov R15,RAX
            cmp RCX,RSI
            jg .L_43270a

            movzx R8D,BYTE PTR [R14+496]
            lea RAX,QWORD PTR [RAX+10]
            test R8B,R8B
            cmove RAX,R15
            cmp BYTE PTR [RAX],80
            mov RDX,RAX
            je .L_432607
.L_432425:

            lea RAX,QWORD PTR [RDX+1]
            lea RCX,QWORD PTR [R15+RSI*1-4]
            nop
            nop
.L_432430:

            cmp RAX,RCX
            jae .L_432466
.L_432435:

            movzx EDX,BYTE PTR [RAX+3]
            cmp DL,80
            je .L_432508

            cmp DL,75
            je .L_432518

            cmp DL,7
            je .L_432528

            cmp DL,8
            je .L_432538
.L_43245d:

            add RAX,4
            cmp RAX,RCX
            jb .L_432435
.L_432466:

            sub RAX,R15
            mov QWORD PTR [RSP+24],RAX
.L_43246e:

            cmp BYTE PTR [R14+388],0
            mov R9,RAX
            jne .L_4325d0

            cmp BYTE PTR [R14+480],0
            je .L_4324e4

            mov RAX,QWORD PTR [R14+352]
            lea RDI,QWORD PTR [R14+488]
            mov RSI,R15
            cmp R9,RAX
            cmova R9,RAX
            mov RDX,R9
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP],R9
            call QWORD PTR [RIP+.L_65ad28]

            mov R9,QWORD PTR [RSP]
            mov RCX,QWORD PTR [R14+336]
            lea RDI,QWORD PTR [R14+392]
            lea R8,QWORD PTR [RSP+32]
            mov RSI,R15
            mov RDX,R9
            call QWORD PTR [RIP+.L_65ac50]

            mov R9,QWORD PTR [RSP]
.L_4324da:

            mov R15,QWORD PTR [R14+336]
            mov RAX,R9
.L_4324e4:

            mov QWORD PTR [R12],R9
            sub QWORD PTR [R14+112],RAX
            add QWORD PTR [R14+128],RAX
            add QWORD PTR [R14+120],RAX
            add QWORD PTR [R14+96],R9
            mov QWORD PTR [R13],R15
            jmp .L_432288
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_432508:

            add RAX,3
            jmp .L_432430
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432518:

            add RAX,2
            jmp .L_432430
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432528:

            add RAX,1
            jmp .L_432430
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432538:

            cmp BYTE PTR [RAX+2],7
            jne .L_43245d

            cmp BYTE PTR [RAX+1],75
            jne .L_43245d

            cmp BYTE PTR [RAX],80
            jne .L_43245d

            test R8B,R8B
            je .L_432466

            sub RAX,10
            jmp .L_432466
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432570:

            cmp QWORD PTR [R14+112],0
            jne .L_4326b0

            cmp BYTE PTR [R14+496],0
            mov BYTE PTR [R14+154],1
            je .L_432288

            xor ESI,ESI
            mov RDI,RBP
            call .L_42f120

            test EAX,EAX
            jne .L_4321da

            jmp .L_432288
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4325b0:

            call .L_42f470

            jmp .L_432247
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4325c0:

            lea RCX,QWORD PTR [RIP+.L_4330af]
            jmp .L_432378
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4325d0:

            mov RAX,QWORD PTR [R14+352]
            mov RCX,QWORD PTR [R14+336]
            lea RDI,QWORD PTR [R14+376]
            mov RSI,R15
            cmp R9,RAX
            cmova R9,RAX
            mov R8,R9
            mov RDX,R9
            mov QWORD PTR [RSP],R9
            call .L_42f090

            mov R9,QWORD PTR [RSP]
            jmp .L_4324da
.L_432607:

            cmp BYTE PTR [RAX+1],75
            jne .L_432425

            cmp BYTE PTR [RAX+2],7
            jne .L_432425

            cmp BYTE PTR [RAX+3],8
            jne .L_432425

            mov ECX,DWORD PTR [RAX+4]
            cmp RCX,QWORD PTR [R14+136]
            mov RAX,RCX
            je .L_432748

            cmp BYTE PTR [R14+152],0
            jne .L_432748

            test R8B,R8B
            je .L_432425

            mov RCX,QWORD PTR [R14+104]
            cmp DWORD PTR [RCX+132],2
            jne .L_432425
.L_432660:

            test BYTE PTR [RCX+130],1
            mov DWORD PTR [RCX+120],EAX
            je .L_432769

            lea RDI,QWORD PTR [RDX+8]
            call .L_42e8e0

            lea RDI,QWORD PTR [RDX+16]
            mov QWORD PTR [RCX+40],RAX
            call .L_42e8e0

            mov QWORD PTR [RCX+48],RAX
            mov QWORD PTR [R14+96],24
.L_432692:

            test R8B,R8B
            jne .L_432751
.L_43269b:

            mov BYTE PTR [R14+154],1
            jmp .L_432288
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4326b0:

            lea RDX,QWORD PTR [RSP+24]
            mov ESI,1
            mov RDI,RBP
            call .L_4049e0

            mov R15,RAX
            mov RAX,QWORD PTR [RSP+24]
            test RAX,RAX
            jle .L_43270a

            mov RDX,QWORD PTR [R14+112]
            cmp RAX,RDX
            jle .L_43246e

            mov QWORD PTR [RSP+24],RDX
            mov RAX,RDX
            jmp .L_43246e
.L_4326e9:

            lea RDX,QWORD PTR [RIP+.L_432ed0]
            or ESI,4294967295
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_4321da
.L_432705:

            call __stack_chk_fail@PLT
.L_43270a:

            lea RDX,QWORD PTR [RIP+.L_432ffb]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_4321da
.L_43272a:

            lea RDX,QWORD PTR [RIP+.L_432f10]
            xor EAX,EAX
            or ESI,4294967295
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967276
            jmp .L_4321da
.L_432748:

            mov RCX,QWORD PTR [R14+104]
            jmp .L_432660
.L_432751:

            mov RSI,R15
            mov RDI,RBP
            call .L_42f120

            test EAX,EAX
            jne .L_4321da

            jmp .L_43269b
.L_432769:

            mov EAX,DWORD PTR [RDX+8]
            mov QWORD PTR [RCX+40],RAX
            mov EAX,DWORD PTR [RDX+12]
            mov QWORD PTR [RCX+48],RAX
            mov QWORD PTR [R14+96],16
            jmp .L_432692
.L_432784:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432790:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_432f78]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_4327aa:

            call .L_443f50

            cmp EAX,-30
            je .L_432855

            mov ESI,552
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_43285c

            mov DWORD PTR [RAX+324],0
            mov DWORD PTR [RAX+48],4294967295
            lea RAX,QWORD PTR [RIP+.L_42f110]
            lea R9,QWORD PTR [RIP+.L_430c10]
            lea R8,QWORD PTR [RIP+.L_42f230]
            lea RCX,QWORD PTR [RIP+.L_42ea90]
            mov QWORD PTR [RBX+144],RAX
            lea RAX,QWORD PTR [RIP+.L_42e900]
            lea RDX,QWORD PTR [RIP+.L_43318a]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
.L_43281c:

            lea RAX,QWORD PTR [RIP+.L_42e930]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_42e990]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_431f10]
            push 0
            push RAX
            lea RAX,QWORD PTR [RIP+.L_432160]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_432855

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_432855:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_43285c:

            lea RDX,QWORD PTR [RIP+.L_433172]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_432855
.L_432879:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_432880:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_432f98]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_43289a:

            call .L_443f50

            cmp EAX,-30
            je .L_432937

            mov ESI,552
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_43293e

            mov DWORD PTR [RAX+48],4294967295
            lea RAX,QWORD PTR [RIP+.L_42f110]
            lea R9,QWORD PTR [RIP+.L_430e30]
            lea R8,QWORD PTR [RIP+.L_42f230]
            lea RCX,QWORD PTR [RIP+.L_42f8e0]
            lea RDX,QWORD PTR [RIP+.L_43318a]
            mov QWORD PTR [RBX+144],RAX
            lea RAX,QWORD PTR [RIP+.L_42e900]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
.L_4328fe:

            lea RAX,QWORD PTR [RIP+.L_42fcf0]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_42e990]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_42e970]
            push 0
            push RAX
            lea RAX,QWORD PTR [RIP+.L_432160]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_432937

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_432937:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_43293e:

            lea RDX,QWORD PTR [RIP+.L_433172]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_432937
.L_43295b:

            nop
            nop
            nop
            nop
            nop
.L_432960:

            push RBX
            mov RBX,RDI
            call .L_432790

            test EAX,EAX
            je .L_432970

            pop RBX
            ret 
          .byte 0x90
.L_432970:

            mov RDI,RBX
            pop RBX
            jmp .L_432880
.L_432979:
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_432980:
          .string "Unsupported encryption format version: %u"
          .zero 6
.L_4329b0:
          .string "Unknown encryption algorithm: %u"
          .zero 7
.L_4329d8:
          .string "zip: hdrcharset option needs a character-set name"
          .zero 6
.L_432a10:
          .string "Passphrase required for this entry"
          .zero 5
.L_432a38:
          .string "Decryption is unsupported due to lack of crypto library"
.L_432a70:
          .string "Too many incorrect passphrases"
          .zero 1
.L_432a90:
          .string "Failed to initialize HMAC-SHA1"
          .zero 1
.L_432ab0:
          .string "Can\'t initialize ZIP decompression."
          .zero 4
.L_432ad8:
          .string "Truncated Zip encrypted body: only %jd bytes available"
          .zero 1
.L_432b10:
          .string "Extra data overflow: Need %d bytes but only found %d bytes"
          .zero 5
.L_432b50:
          .string "Malformed extra data: Consumed %d bytes of %d bytes"
          .zero 4
.L_432b88:
          .string "Can\'t allocate memory for Pathname"
          .zero 5
.L_432bb0:
          .string "Pathname cannot be converted from %s to current locale."
.L_432be8:
          .string "Too-small extra data: Need at least 4 bytes, but only found %d bytes"
          .zero 3
.L_432c30:
          .string "Inconsistent compressed size: %jd in central directory, %jd in local header"
          .zero 4
.L_432c80:
          .string "Inconsistent uncompressed size: %jd in central directory, %jd in local header"
          .zero 2
.L_432cd0:
          .string "Zip file with oversized link entry"
          .zero 5
.L_432cf8:
          .string "Can\'t allocate memory for Symlink"
          .zero 6
.L_432d20:
          .string "Symlink cannot be converted from %s to current locale."
          .zero 1
.L_432d58:
          .string "Read error skipping symlink target name"
.L_432d80:
          .string "Invalid central directory signature"
          .zero 4
.L_432da8:
          .string "Malformed OS X metadata entry: inconsistent size"
          .zero 7
.L_432de0:
          .string "Unsupported ZIP compression method (%s)"
.L_432e08:
          .string "Mac metadata is too large: %jd > 4M bytes"
          .zero 6
.L_432e38:
          .string "Can\'t allocate memory for Mac metadata"
          .zero 1
.L_432e60:
          .string "Out of memory for ZIP decompression"
          .zero 4
.L_432e88:
          .string "No memory for ZIP decompression"
.L_432ea8:
          .string "Truncated ZIP end-of-file record"
          .zero 7
.L_432ed0:
          .string "ZIP compressed data is wrong size (read %jd, expected %jd)"
          .zero 5
.L_432f10:
          .string "ZIP uncompressed data is wrong size (read %jd, expected %jd)\n"
          .zero 2
.L_432f50:
          .string "ZIP bad CRC: 0x%lx should be 0x%lx"
          .zero 5
.L_432f78:
          .string "archive_read_support_format_zip"
.L_432f98:
          .string "archive_read_support_format_zip_seekable"
.L_432fc1:
          .string "Unknown encryption flag: %u"
.L_432fdd:
          .string "Encrypted file is unsupported"
.L_432ffb:
          .string "Truncated ZIP file data"
.L_433013:
          .string "Corrupted ZIP file data"
.L_43302b:
          .string "No memory for ZIP decryption"
.L_433048:
          .string "ZIP bad Authentication code"
.L_433064:
          .string "compat-2x"
.L_43306e:
          .string "hdrcharset"
# WARNING: found overlapping blocks at address 32e30
# WARNING: found overlapping blocks at address 32e32

.L_433079:

            push RBP
            push RSP
            sub EAX,1734934584
            outsb DX,BYTE PTR [RSI]
            outsd DX,DWORD PTR [RSI]
            jb .L_4330ea
          .byte 0x63
          .byte 0x72
          .byte 0x63
          .byte 0x33
          .byte 0x32
          .byte 0x0
.L_43308b:
          .string "mac-ext"
.L_433093:
          .string "Incorrect passphrase"
.L_4330a8:
          .string "1.2.11"
.L_4330af:
          .string "??"
.L_4330b2:
          .string "Truncated ZIP file header"
.L_4330cc:
          .byte 0x44
          .byte 0x61
          .byte 0x6d
          .byte 0x61
          .byte 0x67
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x5a
.L_4330d5:

            imul ESI,DWORD PTR [RAX+32],1751347809
            imul ESI,DWORD PTR [RSI+101],1668172032
            outsd DX,DWORD PTR [RSI]
            outsb DX,BYTE PTR [RSI]
            jae .L_433150
          .byte 0x73
          .byte 0x74
          .byte 0x65
.L_4330ea:

            outsb DX,BYTE PTR [RSI]
            je .L_43310d
          .byte 0x43
          .byte 0x52
          .byte 0x43
          .byte 0x33
          .byte 0x32
          .byte 0x20
          .byte 0x76
          .byte 0x61
          .byte 0x6c
          .byte 0x75
          .byte 0x65
          .byte 0x73
          .byte 0x0
.L_4330fa:
          .string "Truncated Zip file"
.L_43310d:

            pop RDX
            push R8
            and BYTE PTR [RIP+_end+1677894362],AH
            and BYTE PTR [RAX],CH
            and EAX,1509960051
            push R8
            add BYTE PTR [RDI+117],CL
            je .L_433144
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x6d
          .byte 0x65
          .byte 0x6d
          .byte 0x6f
          .byte 0x72
          .byte 0x79
          .byte 0x0
.L_43312f:
          .string "__MACOSX/"
.L_433139:
          .string "._"
.L_43313c:

            pop RDX
            push R8
            and BYTE PTR [RBP+99],AH
            outsd DX,DWORD PTR [RSI]
# WARNING: found overlapping blocks at address 32efe

.L_433144:

            insd DWORD PTR [RDI],DX
            jo .L_4331b9
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x66
          .byte 0x61
.L_433150:

            imul EBP,DWORD PTR [RBP+100],1680156704
            sub DWORD PTR [RAX],EAX
.L_43315a:

            push RSP
            jb .L_4331d2
          .byte 0x6e
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x5a
          .byte 0x49
          .byte 0x50
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x20
          .byte 0x62
          .byte 0x6f
          .byte 0x64
          .byte 0x79
          .byte 0x0
.L_433172:
          .string "Can\'t allocate zip data"
.L_43318a:

            jp .L_4331f5

            jo .L_43318e
.L_43318e:

            jne .L_4331fe
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x73

            jae .L_4331fe
          .byte 0x64
          .byte 0x0
.L_43319b:

            jae .L_433205
          .byte 0x72
          .byte 0x69
          .byte 0x6e
          .byte 0x6b
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x0
.L_4331a5:
          .string "reduced-1"
.L_4331af:
          .string "reduced-2"
.L_4331b9:

            jb .L_433220
          .byte 0x64
          .byte 0x75
          .byte 0x63
          .byte 0x65
          .byte 0x64
          .byte 0x2d
          .byte 0x33
          .byte 0x0
.L_4331c3:

            jb .L_43322a
          .byte 0x64
          .byte 0x75
          .byte 0x63
          .byte 0x65
          .byte 0x64
          .byte 0x2d
          .byte 0x34
          .byte 0x0
.L_4331cd:
          .byte 0x69
          .byte 0x6d
          .byte 0x70
          .byte 0x6c
          .byte 0x6f
.L_4331d2:

            add BYTE PTR FS:[RDX+101],DH
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x76
          .byte 0x65
          .byte 0x64
          .byte 0x0
.L_4331df:
          .string "deflation"
.L_4331e9:
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x6c
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x2d
          .byte 0x36
          .byte 0x34
.L_4331f5:

            sub EAX,7629154
.L_4331fa:
          .byte 0x69
          .byte 0x62
          .byte 0x6d
          .byte 0x2d
.L_4331fe:

            je .L_433265
          .byte 0x72
          .byte 0x73
          .byte 0x65
          .byte 0x0
.L_433204:
          .byte 0x62
.L_433205:

            jp .L_433270

            jo .L_433209
.L_433209:

            insb BYTE PTR [RDI],DX
            jp .L_433279
          .byte 0x61
          .byte 0x0
.L_43320e:
          .string "ibm-terse-new"
.L_43321c:
          .byte 0x69
          .byte 0x62
          .byte 0x6d
          .byte 0x2d
.L_433220:

            insb BYTE PTR [RDI],DX
          .byte 0x7a
          .byte 0x37
          .byte 0x37
          .byte 0x37
          .byte 0x0
.L_433226:
          .string "wav-pack"
# WARNING: found overlapping blocks at address 32fe8
# WARNING: found overlapping blocks at address 32fea
.set .L_43322a, . - 5
# WARNING: found overlapping blocks at address 32fec
.L_43322f:
          .string "ppmd-1"
# WARNING: found overlapping blocks at address 32ff1

.L_43323a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_433240:

            cmp EDX,1114111
            ja .L_433280

            cmp EDX,127
            jbe .L_4332b8

            cmp EDX,2047
            ja .L_4332c7

            xor EAX,EAX
.L_433257:

            cmp RSI,1
            jbe .L_433277

            mov EAX,EDX
            and EDX,63
            shr EAX,6
.L_433265:

            or EDX,4294967168
            or EAX,4294967232
            mov BYTE PTR [RDI+1],DL
            mov BYTE PTR [RDI],AL
.L_433270:

            lea RAX,QWORD PTR [RDI+2]
.L_433274:

            sub RAX,RDI
.L_433277:

            ret 
.L_433279:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433280:

            mov EDX,65533
.L_433285:

            xor EAX,EAX
            cmp RSI,2
            jbe .L_433277
.L_43328d:

            mov EAX,EDX
            shr EAX,12
            or EAX,4294967264
            mov BYTE PTR [RDI],AL
            mov EAX,EDX
            and EDX,63
            shr EAX,6
            or EDX,4294967168
            and EAX,63
            mov BYTE PTR [RDI+2],DL
            or EAX,4294967168
            mov BYTE PTR [RDI+1],AL
            lea RAX,QWORD PTR [RDI+3]
            jmp .L_433274
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4332b8:

            xor EAX,EAX
            test RSI,RSI
            je .L_433277

            lea RAX,QWORD PTR [RDI+1]
            mov BYTE PTR [RDI],DL
            jmp .L_433274
.L_4332c7:

            cmp EDX,65535
            jbe .L_433285

            xor EAX,EAX
            cmp RSI,3
            jbe .L_433277

            mov EAX,EDX
            shr EAX,18
            or EAX,4294967280
            mov BYTE PTR [RDI],AL
            mov EAX,EDX
            shr EAX,12
            and EAX,63
            or EAX,4294967168
            mov BYTE PTR [RDI+1],AL
            mov EAX,EDX
            and EDX,63
            shr EAX,6
            or EDX,4294967168
            and EAX,63
            mov BYTE PTR [RDI+3],DL
            or EAX,4294967168
            mov BYTE PTR [RDI+2],AL
            lea RAX,QWORD PTR [RDI+4]
            jmp .L_433274
.L_43330f:

            nop
.L_433310:

            mov EDX,417
            mov R8D,930
            xor ECX,ECX
            mov EAX,930
            lea R9,QWORD PTR [RIP+.L_43bd20]
            jmp .L_433360
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433330:

            jb .L_433344

            movsxd RDX,EAX
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [R9+RDX*4]
            cmp DWORD PTR [RDX+4],ESI
            jb .L_433366

            jbe .L_433371
.L_433344:

            lea R8D,DWORD PTR [RAX-1]
            cmp ECX,R8D
            jg .L_43336e
.L_43334d:

            lea EAX,DWORD PTR [RCX+R8*1]
            mov EDX,EAX
            sar EDX,1
            movsxd RDX,EDX
            lea RDX,QWORD PTR [RDX+RDX*2]
            mov EDX,DWORD PTR [R9+RDX*4]
.L_433360:

            sar EAX,1
            cmp EDI,EDX
            jbe .L_433330
.L_433366:

            lea ECX,DWORD PTR [RAX+1]
            cmp ECX,R8D
            jle .L_43334d
.L_43336e:

            xor EAX,EAX
            ret 
.L_433371:

            mov EAX,DWORD PTR [RDX+8]
            ret 
.L_433375:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433380:

            push RBX

            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            call free@PLT

            mov RDI,QWORD PTR [RBX+16]
            call free@PLT

            mov RDI,QWORD PTR [RBX+56]
            mov QWORD PTR [RBX+64],0
            mov QWORD PTR [RBX+72],0
            call free@PLT

            mov RDI,QWORD PTR [RBX+40]
            mov QWORD PTR [RBX+56],0
            cmp RDI,-1
            je .L_4333c6

            call iconv_close@PLT
.L_4333c6:

            mov RDI,QWORD PTR [RBX+48]
            cmp RDI,-1
            je .L_4333d5

            call iconv_close@PLT
.L_4333d5:

            mov RDI,RBX
            pop RBX

            jmp free@PLT
.L_4333de:

            nop
            nop
.L_4333e0:

            movzx ECX,BYTE PTR [RSI]
            xor EAX,EAX
            test CL,CL
            je .L_433457

            lea R8,QWORD PTR [RIP+.L_4382c0]
            movzx EAX,CL
            mov R9,RAX
            movsx EAX,BYTE PTR [R8+RAX*1]
            cmp EAX,EDX
            jle .L_433460

            cmp EDX,1
            jle .L_43344d

            movsx ECX,BYTE PTR [RSI+1]
            mov EAX,4294967295
            and ECX,192
            add ECX,-128
            jne .L_433451

            lea R9D,DWORD PTR [RDX-2]
            mov ECX,2
            add R9,2
            jmp .L_433446
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433430:

            movsx R8D,BYTE PTR [RSI+RCX*1]
            add RCX,1
            and R8D,192
            add R8D,-128
            jne .L_43344f
.L_433446:

            cmp RCX,R9
            mov EAX,ECX
            jne .L_433430
.L_43344d:

            mov EAX,EDX
.L_43344f:

            neg EAX
.L_433451:

            mov DWORD PTR [RDI],65533
.L_433457:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433460:

            cmp AL,2
            je .L_4334a0

            jle .L_433490

            cmp AL,3
            je .L_433580

            cmp AL,4
            jne .L_4334d0

            movsx EDX,BYTE PTR [RSI+1]
            mov ECX,EDX
            and ECX,192
            add ECX,-128
            je .L_4335d0
.L_433487:

            mov EAX,4294967295
            jmp .L_433451
          .byte 0x66
          .byte 0x90
.L_433490:

            cmp AL,1
            jne .L_4334d0

            and ECX,127
            mov EAX,1
            mov DWORD PTR [RDI],ECX
            ret 
          .byte 0x90
.L_4334a0:

            movzx EDX,BYTE PTR [RSI+1]
            mov EAX,4294967295
            mov ECX,EDX
            and ECX,192
            add ECX,-128
            jne .L_433451

            shl R9D,6
            and EDX,63
            mov EAX,2
            and R9D,1984
            or EDX,R9D
            mov DWORD PTR [RDI],EDX
            ret 
          .byte 0x90
.L_4334d0:

            lea ECX,DWORD PTR [R9-192]
            mov EAX,2
            cmp ECX,1
            jbe .L_433520

            lea ECX,DWORD PTR [R9-245]
            mov EAX,4
            cmp ECX,2
            jbe .L_433520

            lea ECX,DWORD PTR [R9-248]
            mov EAX,5
            cmp ECX,3
            jbe .L_433520

            sub R9D,252
            cmp R9D,2
            sbb EAX,EAX
            and EAX,5
            add EAX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433520:

            cmp EDX,EAX
            cmovg EDX,EAX
            cmp EDX,1
            jle .L_43344d

            movsx ECX,BYTE PTR [RSI+1]
            mov EAX,4294967295
            and ECX,192
            add ECX,-128
            jne .L_433451

            lea R9D,DWORD PTR [RDX-2]
            mov ECX,2
            add R9,2
            jmp .L_433572
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433558:

            movsx R8D,BYTE PTR [RSI+RCX*1]
            add RCX,1
            and R8D,192
            add R8D,-128
            jne .L_43344f
.L_433572:

            cmp RCX,R9
            mov EAX,ECX
            jne .L_433558

            mov EAX,EDX
            jmp .L_43344f
.L_433580:

            movsx EDX,BYTE PTR [RSI+1]
            mov ECX,EDX
            and ECX,192
            add ECX,-128
            jne .L_433487

            movzx ECX,BYTE PTR [RSI+2]
            mov ESI,ECX
            and ESI,192
            add ESI,-128
            jne .L_4335e4

            shl EDX,6
            and ECX,63
            shl R9D,12
            and EDX,4032
            or EDX,ECX
            movzx ECX,R9W
            or EDX,ECX
            cmp EDX,2047
            jle .L_4335ee
.L_4335c6:

            mov DWORD PTR [RDI],EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4335d0:

            movsx ECX,BYTE PTR [RSI+2]
            mov R8D,ECX
            and R8D,192
            add R8D,-128
            je .L_4335f8
.L_4335e4:

            mov EAX,4294967294
            jmp .L_433451
.L_4335ee:

            mov EAX,4294967293
            jmp .L_433451
.L_4335f8:

            movzx ESI,BYTE PTR [RSI+3]
            mov R8D,ESI
            and R8D,192
            add R8D,-128
            jne .L_4335ee

            shl EDX,12
            shl ECX,6
            and ESI,63
            and ECX,4032
            and EDX,258048
            or EDX,ECX
            mov ECX,R9D
            shl ECX,18
            or EDX,ESI
            and ECX,1835008
            or EDX,ECX
            lea ECX,DWORD PTR [RDX-65536]
            cmp ECX,1048575
            jbe .L_4335c6

            mov EAX,4294967292
            jmp .L_433451
.L_43364b:

            nop
            nop
            nop
            nop
            nop
.L_433650:

            push RBX
            xor ECX,ECX
            mov R11,RDI
            sub RSP,16
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDX,RDX
            mov DWORD PTR [RSP],0
            jne .L_433698
.L_433676:

            mov DWORD PTR [R11],ECX
.L_433679:

            mov RBX,QWORD PTR [RSP+8]
            xor RBX,QWORD PTR FS:[40]
            jne .L_433753

            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433698:

            mov RDI,RSP
            mov RBX,RSI
            mov R10,RDX
            call .L_4333e0

            cmp EAX,3
            mov ECX,DWORD PTR [RSP]
            jne .L_433676

            lea EDX,DWORD PTR [RCX-55296]
            cmp EDX,1023
            ja .L_4336e0

            lea RDX,QWORD PTR [R10-3]
            mov DWORD PTR [RSP+4],0
            cmp RDX,2
            ja .L_433700
.L_4336ce:

            mov DWORD PTR [R11],65533
            mov EAX,4294967293
            jmp .L_433679
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4336e0:

            lea EDX,DWORD PTR [RCX-56320]
            cmp EDX,1023
            ja .L_433676

            mov DWORD PTR [R11],65533
            mov EAX,4294967293
            jmp .L_433679
          .byte 0x90
.L_433700:

            lea RSI,QWORD PTR [RBX+3]
            lea RDI,QWORD PTR [RSP+4]
            call .L_4333e0

            cmp EAX,3
            je .L_433726

            cdq 
            mov DWORD PTR [R11],65533
            xor EAX,EDX
            sub EDX,EAX
            mov EAX,EDX
            jmp .L_433679
.L_433726:

            mov EDX,DWORD PTR [RSP+4]
            lea EAX,DWORD PTR [RDX-56320]
            cmp EAX,1023
            ja .L_4336ce

            mov EAX,DWORD PTR [RSP]
            sub EAX,55296
            shl EAX,10
            lea ECX,DWORD PTR [RDX+RAX*1+9216]
            mov EAX,6
            jmp .L_433676
.L_433753:

            call __stack_chk_fail@PLT
.L_433758:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433760:

            movzx EAX,WORD PTR [RSI]
            mov R8D,EAX
            rol R8W,8
            test ECX,ECX
            movzx R8D,R8W
            cmove R8D,EAX
            lea EAX,DWORD PTR [R8-55296]
            cmp EAX,1023
            ja .L_4337c8

            cmp RDX,3
            jbe .L_4337cf

            movzx ESI,WORD PTR [RSI+2]
            mov EDX,ESI
            rol DX,8
            test ECX,ECX
            movzx R8D,DX
            movzx EDX,SI
            cmovne EDX,R8D
            lea ECX,DWORD PTR [RDX-56320]
            cmp ECX,1023
            ja .L_4337cf

            shl EAX,10
            lea R8D,DWORD PTR [RDX+RAX*1+9216]
            mov EAX,4
.L_4337be:

            mov DWORD PTR [RDI],R8D
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4337c8:

            cmp EAX,2047
            ja .L_4337e0
.L_4337cf:

            mov DWORD PTR [RDI],65533
            mov EAX,4294967294
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4337e0:

            mov EAX,2
            jmp .L_4337be
.L_4337e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4337f0:

            test RDX,RDX
            je .L_433808

            cmp RDX,1
            je .L_433810

            xor ECX,ECX
            jmp .L_433760
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433808:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433810:

            mov DWORD PTR [RDI],65533
            mov EAX,4294967295
            ret 
.L_43381c:

            nop
            nop
            nop
            nop
.L_433820:

            test RDX,RDX
            je .L_433838

            cmp RDX,1
            je .L_433840

            mov ECX,1
            jmp .L_433760
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433838:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433840:

            mov DWORD PTR [RDI],65533
            mov EAX,4294967295
            ret 
.L_43384c:

            nop
            nop
            nop
            nop
.L_433850:

            xor EAX,EAX
            cmp EDX,65535
            jbe .L_433868

            cmp RSI,3
            ja .L_433880
.L_433860:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433868:

            cmp RSI,1
            jbe .L_433860

            mov BYTE PTR [RDI],DH
            mov BYTE PTR [RDI+1],DL
            mov EAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433880:

            sub EDX,65536
            mov EAX,EDX
            and DX,1023
            shr EAX,10
            sub DX,9216
            and AX,1023
            mov BYTE PTR [RDI+3],DL
            sub AX,10240
            mov ECX,EAX
            mov BYTE PTR [RDI+1],AL
            mov EAX,EDX
            shr AX,8
            shr CX,8
            mov BYTE PTR [RDI+2],AL
            mov BYTE PTR [RDI],CL
            mov EAX,4
            ret 
.L_4338ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4338c0:

            xor EAX,EAX
            cmp EDX,65535
            jbe .L_4338d8

            cmp RSI,3
            ja .L_4338f0
.L_4338d0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4338d8:

            cmp RSI,1
            jbe .L_4338d0

            mov BYTE PTR [RDI],DL
            mov BYTE PTR [RDI+1],DH
            mov EAX,2
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4338f0:

            sub EDX,65536
            mov EAX,EDX
            and DX,1023
            shr EAX,10
            sub DX,9216
            and AX,1023
            mov BYTE PTR [RDI+2],DL
            shr DX,8
            sub AX,10240
            mov BYTE PTR [RDI+3],DL
            mov BYTE PTR [RDI],AL
            shr AX,8
            mov BYTE PTR [RDI+1],AL
            mov EAX,4
            ret 
.L_433926:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433930:

            mov EAX,DWORD PTR [RDI+36]
            mov DWORD PTR [RDI+96],0
            test AL,16
            jne .L_4339c0

            test AH,20
            je .L_433970

            test AH,2
            jne .L_433a30

            cmp QWORD PTR [RDI+40],-1
            je .L_433ba0

            lea RAX,QWORD PTR [RIP+.L_436b30]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RAX
            ret 
          .byte 0x66
          .byte 0x90
.L_433970:

            test AH,40
            je .L_4339d8

            test AL,128
            je .L_433af8

            lea RCX,QWORD PTR [RIP+.L_435c90]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RCX
.L_43398f:

            test AH,1
            je .L_433ac8

            test AL,192
            jne .L_433a88

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_433bed

            lea EDX,DWORD PTR [RAX+1]
            lea RCX,QWORD PTR [RIP+.L_436e20]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RCX
            ret 
.L_4339c0:

            lea RAX,QWORD PTR [RIP+.L_437120]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4339d8:

            mov EDX,EAX
            and EDX,512
            je .L_433a90

            test AL,128
            je .L_433b20

            lea RCX,QWORD PTR [RIP+.L_435c90]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RCX
.L_433a00:

            test AH,1
            je .L_433a48

            test AL,192
            jne .L_433a88

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_433bed

            lea EDX,DWORD PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_4344c0]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433a30:

            lea RAX,QWORD PTR [RIP+.L_436e20]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433a48:

            cmp QWORD PTR [RDI+40],-1
            je .L_433bd0

            mov EDX,DWORD PTR [RDI+96]
            cmp EDX,1
            jg .L_433bed

            lea ECX,DWORD PTR [RDX+1]
.L_433a62:

            lea R8,QWORD PTR [RIP+.L_436b30]
            movsxd RSI,EDX
            mov DWORD PTR [RDI+96],ECX
            mov QWORD PTR [RDI+RSI*8+80],R8
            mov ESI,EAX
            and ESI,258
            cmp ESI,258
            je .L_433b40
.L_433a88:

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_433a90:

            cmp QWORD PTR [RDI+40],-1
            mov ECX,1
            jne .L_433a62

            movabs RAX,21474836479
            test QWORD PTR [RDI+32],RAX
            je .L_433b94

            xor EAX,EAX
.L_433ab2:

            lea EDX,DWORD PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_437360]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_433ac8:

            cmp QWORD PTR [RDI+40],-1
            je .L_433b70

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_433bed

            lea EDX,DWORD PTR [RAX+1]
            lea RCX,QWORD PTR [RIP+.L_436b30]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RCX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_433af8:

            test AL,64
            je .L_43398f

            lea RSI,QWORD PTR [RIP+.L_434880]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RSI
            jmp .L_43398f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433b20:

            test AL,64
            je .L_433a00

            lea RCX,QWORD PTR [RIP+.L_434880]
            mov DWORD PTR [RDI+96],1
            mov QWORD PTR [RDI+80],RCX
            jmp .L_433a00
          .byte 0x90
.L_433b40:

            test AL,128
            je .L_433a88

            cmp ECX,2
            je .L_433bed

            lea RAX,QWORD PTR [RIP+.L_435c90]
            add EDX,2
            movsxd RCX,ECX
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RCX*8+80],RAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433b70:

            mov EDX,EAX
            and EDX,2052
            cmp EDX,2052
            je .L_433c00

            and EAX,8196
            cmp EAX,8196
            je .L_433c1c
.L_433b94:

            mov DWORD PTR [RDI+96],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433ba0:

            test AL,4
            je .L_433a88

            test AH,4
            mov DWORD PTR [RDI+96],1
            je .L_433bc0

            lea RAX,QWORD PTR [RIP+.L_436b20]
            mov QWORD PTR [RDI+80],RAX
            ret 
.L_433bc0:

            lea RAX,QWORD PTR [RIP+.L_436b10]
            mov QWORD PTR [RDI+80],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_433bd0:

            movabs RAX,21474836479
            test QWORD PTR [RDI+32],RAX
            je .L_433b94

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jle .L_433ab2
.L_433bed:

            sub RSP,8
.L_433bf1:

            call .L_402da0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433c00:

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_433bed

            lea EDX,DWORD PTR [RAX+1]
            lea RCX,QWORD PTR [RIP+.L_434870]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RCX
            ret 
.L_433c1c:

            movsxd RAX,DWORD PTR [RDI+96]
            cmp EAX,1
            jg .L_433bed

            lea EDX,DWORD PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_434860]
            mov DWORD PTR [RDI+96],EDX
            mov QWORD PTR [RDI+RAX*8+80],RSI
            ret 
.L_433c38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433c40:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_433c48:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call strlen@PLT

            cmp RAX,15
            ja .L_433d78

            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            je .L_433d98

            mov R9,RSP
            mov RCX,RBX
            mov RDX,R9
            nop
            nop
            nop
            nop
            nop
.L_433c80:

            lea R8D,DWORD PTR [RAX-97]
            lea EDI,DWORD PTR [RAX-32]
            add RCX,1
            cmp R8B,26
            cmovb EAX,EDI
            add RDX,1
            mov BYTE PTR [RDX-1],AL
            movzx EAX,BYTE PTR [RCX]
            test AL,AL
            jne .L_433c80
.L_433ca0:

            lea RAX,QWORD PTR [RIP+.L_438200]
            mov BYTE PTR [RDX],0
            mov ECX,6
            mov RSI,R9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_433d7b

            lea RDI,QWORD PTR [RIP+.L_450f60-101698]
            mov ECX,5
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_433d7b

            lea RAX,QWORD PTR [RIP+.L_43820c]
            mov ECX,9
            mov RSI,R9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_433d7b

            lea RDI,QWORD PTR [RIP+.L_438223]
            mov ECX,8
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_433d7b

            lea RAX,QWORD PTR [RIP+.L_450f60-101707]
            mov ECX,9
            mov RSI,R9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_433d7b

            lea RDI,QWORD PTR [RIP+.L_450f60-101685]
            mov ECX,8
            mov RSI,R9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_433d7b

            lea RAX,QWORD PTR [RIP+.L_438206]
            mov ECX,6
            mov RSI,R9
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_433d7b

            nop
            nop
            nop
            nop
.L_433d78:

            mov RAX,RBX
.L_433d7b:

            mov RSI,QWORD PTR [RSP+24]
            xor RSI,QWORD PTR FS:[40]
            jne .L_433da3

            add RSP,32
.L_433d8f:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433d98:

            mov R9,RSP
            mov RDX,R9
            jmp .L_433ca0
.L_433da3:

            call __stack_chk_fail@PLT
.L_433da8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433db0:

            push R15
            push R14
            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov R12,RDI
            mov RBX,RSI
            mov RBP,RDX
            sub RSP,40
.L_433dca:

            test RDI,RDI
            je .L_43415b

            mov R15,QWORD PTR [RDI+104]
            test R15,R15
            je .L_433e0c

            nop
            nop
            nop
            nop
.L_433de0:

            mov RDI,QWORD PTR [R15+8]
            mov RSI,RBX
            call strcmp@PLT

            test EAX,EAX
            jne .L_433e04

            mov RDI,QWORD PTR [R15+16]
            mov RSI,RBP
            call strcmp@PLT

            test EAX,EAX
            je .L_433fde
.L_433e04:

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_433de0
.L_433e0c:

            mov EAX,DWORD PTR [R12+96]
            mov DWORD PTR [RSP+20],EAX
.L_433e15:

            test RBP,RBP
            mov QWORD PTR [RSP+8],0
            je .L_433e32

            cmp BYTE PTR [RBP],0
            mov QWORD PTR [RSP+8],RBP
            jne .L_43403c
.L_433e32:

            xor R14D,R14D
            test RBX,RBX
            je .L_433e46

            cmp BYTE PTR [RBX],0
            mov R14,RBX
            jne .L_43402c
.L_433e46:

            mov ESI,104
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_4340d6

            mov QWORD PTR [RAX],0
            mov RDI,R14
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [R15+8],RAX
            je .L_4340ce

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [R15+16],RAX
            mov RDX,QWORD PTR [RSP+24]
            je .L_4340c6

            mov EAX,R13D
            mov QWORD PTR [R15+56],0
            mov QWORD PTR [R15+64],0
            and EAX,1
            mov QWORD PTR [R15+72],0
            mov DWORD PTR [RSP+24],EAX
            je .L_433ff0

            mov EAX,DWORD PTR [RSP+20]
            mov DWORD PTR [R15+28],4294967295
            mov DWORD PTR [R15+24],EAX
.L_433ed6:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R14
            call strcmp@PLT

            test EAX,EAX
            je .L_43401f

            mov EAX,DWORD PTR [R15+24]
            cmp EAX,-1
            je .L_433efe

            cmp EAX,DWORD PTR [R15+28]
            je .L_43401f
.L_433efe:

            mov DWORD PTR [R15+32],0
.L_433f06:

            lea RAX,QWORD PTR [RIP+.L_438200]
            mov RSI,QWORD PTR [RSP+8]
            mov ECX,6
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_434080

            or R13D,256
.L_433f31:

            mov RDI,RAX
            mov ECX,6
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_434050

            or R13D,512
.L_433f52:

            test R13B,2
            je .L_433f69

            test R13D,10752
            je .L_4340fd

            or R13D,64
.L_433f69:

            mov RAX,-1
            test R13D,5376
            mov QWORD PTR [R15+48],RAX
            jne .L_4340b0
.L_433f81:

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R14
            call iconv_open@PLT

            cmp RAX,-1
            mov QWORD PTR [R15+40],RAX
            je .L_434172

            nop
            nop
            nop
            nop
.L_433fa0:

            mov DWORD PTR [R15+36],R13D
            mov RDI,R15
            call .L_433930

            mov EDX,DWORD PTR [R15+96]
            test EDX,EDX
            je .L_4341cd

            test R12,R12
            je .L_433fde

            mov RDX,QWORD PTR [R12+104]
            test RDX,RDX
            jne .L_433fd3

            jmp .L_434168

            nop
            nop
            nop
            nop
.L_433fd0:

            mov RDX,RAX
.L_433fd3:

            mov RAX,QWORD PTR [RDX]
            test RAX,RAX
            jne .L_433fd0
.L_433fdb:

            mov QWORD PTR [RDX],R15
.L_433fde:

            add RSP,40
.L_433fe2:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_433ff0:

            test R13B,2
            je .L_433ed6

            mov EAX,DWORD PTR [RSP+20]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R14
            mov DWORD PTR [R15+24],4294967295
            mov DWORD PTR [R15+28],EAX
            call strcmp@PLT

            test EAX,EAX
            jne .L_433efe
.L_43401f:

            mov DWORD PTR [R15+32],1
            jmp .L_433f06
.L_43402c:

            mov RDI,RBX
            call .L_433c40

            mov R14,RAX
            jmp .L_433e46
.L_43403c:

            mov RDI,RBP
            call .L_433c40

            mov QWORD PTR [RSP+8],RAX
            jmp .L_433e32
          .byte 0x66
          .byte 0x90
.L_434050:

            lea RDI,QWORD PTR [RIP+.L_43820c]
            mov ECX,9
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_43410a

            or R13D,2048
            jmp .L_433f52
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434080:

            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RIP+.L_43820c]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            jne .L_434131

            or R13D,1024
            jmp .L_433f31
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4340b0:

            test R13D,10752
            je .L_433f81
.L_4340bd:

            mov QWORD PTR [R15+40],RAX
            jmp .L_433fa0
.L_4340c6:

            mov RDI,RDX
            call free@PLT
.L_4340ce:

            mov RDI,R15
            call free@PLT
.L_4340d6:

            xor R15D,R15D
            test R12,R12
            je .L_433fde

            lea RDX,QWORD PTR [RIP+.L_438248]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_433fde
.L_4340fd:

            mov QWORD PTR [R15+48],-1
            jmp .L_433f81
.L_43410a:

            lea RDI,QWORD PTR [RIP+.L_450f60-101707]
            mov ECX,9
            mov RSI,R14
            mov EDX,R13D

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            or DH,32
            test AL,AL
            cmove R13D,EDX
            jmp .L_433f52
.L_434131:

            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RIP+.L_450f60-101707]
            mov ECX,9

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            mov ECX,R13D
            seta DL
            sbb DL,0
            or CH,16
            test DL,DL
            cmove R13D,ECX
            jmp .L_433f31
.L_43415b:

            mov DWORD PTR [RSP+20],4294967295
            jmp .L_433e15
.L_434168:

            lea RDX,QWORD PTR [R12+104]
            jmp .L_433fdb
.L_434172:

            test BYTE PTR [R15+36],4
            je .L_433fa0

            lea RAX,QWORD PTR [RIP+.L_438206]
            mov RSI,QWORD PTR [RSP+8]
            mov ECX,6
            mov RDI,RAX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_434205

            mov RDI,RAX
            mov ECX,6
            mov RSI,R14

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_433fa0

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_450f60-101677]
            call iconv_open@PLT

            jmp .L_4340bd
.L_4341cd:

            test R12,R12
            je .L_4341f5

            mov EAX,DWORD PTR [RSP+24]
            lea RDX,QWORD PTR [RIP+.L_438288]
            mov ESI,4294967295
            mov RDI,R12
            test EAX,EAX
            cmove RBP,RBX
            xor EAX,EAX
            mov RCX,RBP
            call .L_43f5d0
.L_4341f5:

            mov RDI,R15
            xor R15D,R15D
            call .L_433380

            jmp .L_433fde
.L_434205:

            lea RDI,QWORD PTR [RIP+.L_450f60-101677]
            mov RSI,R14
            call iconv_open@PLT

            mov QWORD PTR [R15+40],RAX
            jmp .L_433fa0
.L_43421d:

            nop
            nop
            nop
.L_434220:

            test RDI,RDI
            je .L_434280

            push RBP
            push RBX
            sub RSP,8
            mov RBP,QWORD PTR [RDI+88]
            test RBP,RBP
            je .L_434248

            cmp BYTE PTR [RBP],0
            je .L_434248
.L_43423a:

            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434248:

            mov RBX,RDI
            mov EDI,14
            call nl_langinfo@PLT

            cmp QWORD PTR [RBX+88],0
            mov RBP,RAX
            jne .L_43423a

            mov RDI,RAX
            call strdup@PLT

            mov QWORD PTR [RBX+96],-1
            mov QWORD PTR [RBX+88],RAX
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434280:

            mov EDI,14
            jmp nl_langinfo@PLT
.L_43428a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_434290:

            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov RDI,QWORD PTR [RDI]
            call free@PLT

            mov QWORD PTR [RBX],0
            pop RBX
            ret 
.L_4342b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4342c0:

            push RBX
            mov RBX,RDI
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov RDI,QWORD PTR [RDI]
            call free@PLT

            mov QWORD PTR [RBX],0
            pop RBX
            ret 
.L_4342e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4342f0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            mov RDX,QWORD PTR [RBX+16]
            test RDI,RDI
            je .L_43430a

            cmp RDX,RSI
            jae .L_434330
.L_43430a:

            cmp RDX,31
            ja .L_434340

            mov EAX,32
.L_434315:

            cmp RAX,RSI
            cmovae RSI,RAX
            mov RBP,RSI
            call realloc@PLT

            test RAX,RAX
            je .L_434390

            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+16],RBP
.L_434330:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434340:

            cmp RDX,8191
            ja .L_434350

            lea RAX,QWORD PTR [RDX+RDX*1]
            jmp .L_434315
          .byte 0x90
.L_434350:

            mov RAX,RDX
            shr RAX,2
            add RAX,RDX
            jae .L_434315

            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
.L_43436c:

            call free@PLT

            mov QWORD PTR [RBX],0
            xor EBX,EBX
            call __errno_location@PLT

            mov DWORD PTR [RAX],12
            jmp .L_434330
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434390:

            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RDI,QWORD PTR [RBX]
            jmp .L_43436c
.L_4343a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4343b0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RAX,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov RBP,RDX
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_4342f0

            test RAX,RAX
            je .L_4343f4

            mov RDI,QWORD PTR [RBX+8]
            add RDI,QWORD PTR [RBX]
            mov RDX,RBP
            mov RSI,R12
            call memmove@PLT

            add RBP,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],RBP
            mov BYTE PTR [RAX+RBP*1],0
            mov RAX,RBX
.L_4343f4:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_4343f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434400:

            jmp .L_4343b0
.L_434402:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434410:

            sub RSP,8
            mov RDX,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            call .L_4343b0

            test RAX,RAX
            je .L_43442a

            add RSP,8
            ret 
.L_43442a:

            call .L_402db5
.L_43442f:

            nop
.L_434430:

            shl RSI,2
            jmp .L_4342f0
.L_434439:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434440:

            push R12
            push RBP
            mov R12,RSI
            push RBX
.L_434447:

            mov RAX,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov RBP,RDX
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            shl RSI,2
            call .L_4342f0

            test RAX,RAX
            je .L_43448f

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            mov RSI,R12
            lea RDI,QWORD PTR [RAX+RDX*4]
            mov RDX,RBP
            call wmemmove@PLT

            add RBP,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX+8],RBP
            mov DWORD PTR [RAX+RBP*4],0
            mov RAX,RBX
.L_43448f:

            pop RBX
.L_434490:

            pop RBP
            pop R12
            ret 
.L_434494:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4344a0:

            sub RSP,8
            mov RDX,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            call .L_434440

            test RAX,RAX
            je .L_4344ba

            add RSP,8
            ret 
.L_4344ba:

            call .L_402db5
.L_4344bf:

            nop
.L_4344c0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,56
.L_4344d7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_4342f0

            test RAX,RAX
            je .L_4346c0

            mov RAX,QWORD PTR [R15]
            mov R10,QWORD PTR [R15+8]
            mov RDX,QWORD PTR [R15+16]
            mov DWORD PTR [RSP+20],0
            add R10,RAX
            lea RAX,QWORD PTR [RAX+RDX*1-1]
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+36]
            mov QWORD PTR [RSP+8],RAX
.L_434527:

            test R13,R13
            jne .L_434568
.L_43452c:

            mov RAX,R10
            sub RAX,QWORD PTR [R15]
            mov QWORD PTR [R15+8],RAX
            mov BYTE PTR [R10],0
.L_43453a:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+20]
            jne .L_434735

            add RSP,56
.L_434556:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434568:

            mov R12,RBP
            nop
            nop
            nop
            nop
            nop
.L_434570:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            mov RSI,R12
            call .L_4333e0

            movsxd RBX,EAX
            cmp EBX,3
            je .L_434698

            test EBX,EBX
            jle .L_434724
.L_434594:

            add R12,RBX
            sub R13,RBX
            jne .L_434570

            cmp RBP,R12
            jae .L_43452c

            xor EBX,EBX
.L_4345a3:

            mov RDX,R12
            sub RDX,RBP
            lea R14,QWORD PTR [R10+RDX*1]
            cmp R14,QWORD PTR [RSP]
            jbe .L_4345f9

            sub R10,QWORD PTR [R15]
            mov RAX,QWORD PTR [R15+16]
            mov RDI,R15
            mov QWORD PTR [RSP+24],RDX
            lea RSI,QWORD PTR [R13+RAX*1+1]
            mov QWORD PTR [R15+8],R10
            call .L_4342f0

            test RAX,RAX
            je .L_4346c0

            mov RAX,QWORD PTR [R15]
            mov R10,QWORD PTR [R15+8]
            mov RSI,QWORD PTR [R15+16]
            mov RDX,QWORD PTR [RSP+24]
            add R10,RAX
            lea RAX,QWORD PTR [RAX+RSI*1-1]
            lea R14,QWORD PTR [R10+RDX*1]
            mov QWORD PTR [RSP],RAX
.L_4345f9:

            mov RSI,RBP
            mov RDI,R10
            call memcpy@PLT
.L_434604:

            test EBX,EBX
            je .L_4346b8

            cmp EBX,-3
            mov EDX,DWORD PTR [RSP+36]
            je .L_4346d0

            neg EBX
.L_43461b:

            mov DWORD PTR [RSP+20],4294967295
            jmp .L_434663
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434628:

            mov RAX,QWORD PTR [R15+16]
            mov R11,R14
            sub R11,QWORD PTR [R15]
            mov RDI,R15
            lea RSI,QWORD PTR [R13+RAX*1+1]
            mov QWORD PTR [R15+8],R11
            call .L_4342f0

            test RAX,RAX
            je .L_4346c0

            mov RAX,QWORD PTR [R15]
            mov RDX,QWORD PTR [R15+16]
            mov R14,QWORD PTR [R15+8]
            add R14,RAX
            lea RAX,QWORD PTR [RAX+RDX*1-1]
            mov EDX,DWORD PTR [RSP+36]
            mov QWORD PTR [RSP],RAX
.L_434663:

            mov RSI,QWORD PTR [RSP]
            mov RDI,R14
            sub RSI,R14
            call .L_433240

            test RAX,RAX
            je .L_434628

            lea R10,QWORD PTR [R14+RAX*1]
            movsxd RAX,EBX
            sub R13,RAX
            test EBX,EBX
            lea RBP,QWORD PTR [R12+RAX*1]
            jne .L_434527

            jmp .L_43452c

            nop
            nop
            nop
            nop
            nop
            nop
.L_434698:

            mov EAX,DWORD PTR [RSP+36]
            sub EAX,55296
            cmp EAX,2047
            jbe .L_434705

            mov EBX,3
            jmp .L_434594
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4346b8:

            mov R10,R14
            jmp .L_43452c
.L_4346c0:

            mov DWORD PTR [RSP+20],4294967295
            jmp .L_43453a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4346d0:

            lea EAX,DWORD PTR [RDX-55296]
            mov EBX,3
            cmp EAX,2047
            ja .L_43461b
.L_4346e6:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,R13
            mov RSI,R12
            call .L_433650

            test EAX,EAX
            mov EBX,EAX
            js .L_434714

            mov EDX,DWORD PTR [RSP+36]
            jmp .L_434663
.L_434705:

            cmp RBP,R12
            jae .L_43471f

            mov EBX,4294967293
            jmp .L_4345a3
.L_434714:

            neg EBX
            mov EDX,DWORD PTR [RSP+36]
            jmp .L_43461b
.L_43471f:

            mov R14,R10
            jmp .L_4346e6
.L_434724:

            cmp RBP,R12
            jb .L_4345a3

            mov R14,R10
            jmp .L_434604
.L_434735:

            call __stack_chk_fail@PLT
.L_43473a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_434740:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R12D,ECX
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            sub RSP,16
.L_434758:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_4342f0

            test RAX,RAX
            je .L_434850

            mov RAX,QWORD PTR [RBP]
            mov R9,QWORD PTR [RBP+8]
            xor R10D,R10D
            add R9,RAX
            test RBX,RBX
            je .L_4347b9

            lea R11,QWORD PTR [RSP+4]
            mov R13D,4294967295
            nop
            nop
            nop
.L_4347a0:

            cmp RBX,1
            jne .L_4347f0

            add R9,1
            mov BYTE PTR [R9-1],63
            mov R10D,4294967295
.L_4347b5:

            mov RAX,QWORD PTR [RBP]
.L_4347b9:

            mov RCX,R9
            sub RCX,RAX
            mov QWORD PTR [RBP+8],RCX
            mov BYTE PTR [R9],0
.L_4347c7:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,R10D
            jne .L_43485b

            add RSP,16
.L_4347e2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4347f0:

            mov ECX,R12D
            mov RDX,RBX
            mov RSI,R14
            mov RDI,R11
            call .L_433760

            test EAX,EAX
            je .L_4347b5

            mov EDX,DWORD PTR [RSP+4]
            js .L_434830

            cdqe 
            add R9,1
            sub RBX,RAX
            add R14,RAX
            cmp EDX,127
            ja .L_434846
.L_43481c:

            mov BYTE PTR [R9-1],DL
.L_434820:

            test RBX,RBX
            jne .L_4347a0

            jmp .L_4347b5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434830:

            neg EAX
            add R9,1
            mov R10D,R13D
            cdqe 
            sub RBX,RAX
            add R14,RAX
            cmp EDX,127
            jbe .L_43481c
.L_434846:

            mov BYTE PTR [R9-1],63
            mov R10D,R13D
            jmp .L_434820
.L_434850:

            mov R10D,4294967295
            jmp .L_4347c7
.L_43485b:

            call __stack_chk_fail@PLT
.L_434860:

            xor ECX,ECX
            jmp .L_434740
.L_434867:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434870:

            mov ECX,1
            jmp .L_434740
.L_43487a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_434880:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,264
.L_434897:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+248],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+36]
            mov QWORD PTR [RSP+8],RDX
            mov EDX,EAX
            and EDX,2048
            test AH,4
            je .L_434c70

            xor EDI,EDI
            test EDX,EDX
            mov QWORD PTR [RSP+32],2
            sete DIL
            mov DWORD PTR [RSP+120],2
            mov DWORD PTR [RSP+108],EDI
            lea RDI,QWORD PTR [RIP+.L_433850]
            mov QWORD PTR [RSP+80],RDI
.L_4348ec:

            test EDX,EDX
            jne .L_434ca6
.L_4348f4:

            test AH,32
            je .L_435277

            lea RAX,QWORD PTR [RIP+.L_4337f0]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+52],4
            mov QWORD PTR [RSP+40],RAX
.L_43491f:

            add RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+8]
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            mov DWORD PTR [RSP+104],0
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+152]
            mov QWORD PTR [RSP+96],RAX
.L_434966:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+96]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            test EAX,EAX
            mov R12D,EAX
            je .L_4350c7

            js .L_434f80

            movzx EAX,BYTE PTR [RSP+108]
            and EAX,1
            cmp DWORD PTR [RSP+52],R12D
            mov BYTE PTR [RSP+64],AL
            je .L_4350f8

            test AL,AL
            mov R15,RBP
            jne .L_4350f8
.L_4349ad:

            movsxd RAX,R12D
            sub QWORD PTR [RSP+8],RAX
            add RBP,RAX
            lea RAX,QWORD PTR [RSP+156]
            mov QWORD PTR [RSP+56],RAX
            mov RAX,RBX
            mov EBX,R12D
            mov R12,RAX
            jmp .L_434b50
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4349d8:

            lea RAX,QWORD PTR [RIP+.L_43bb40]
            cmp BYTE PTR [RAX+R11*1],0
            je .L_434bb2

            mov R10D,DWORD PTR [RSP+152]
            lea EAX,DWORD PTR [R10-4352]
            cmp EAX,18
            jbe .L_434e00

            lea ESI,DWORD PTR [R10-44032]
            cmp ESI,11171
            jbe .L_434e90
.L_434a15:

            mov ESI,R9D
            mov EDI,R10D
            mov DWORD PTR [RSP+88],R9D
            call .L_433310

            test EAX,EAX
            mov R9D,DWORD PTR [RSP+88]
            jne .L_434f38

            cmp R9D,119364
            ja .L_434a84

            lea RAX,QWORD PTR [RIP+.L_43afa0]
            lea RDI,QWORD PTR [RIP+.L_43b180]
            mov ESI,R9D
            shr ESI,4
            mov EDX,R9D
            movzx EAX,BYTE PTR [RAX+R11*1]
            and ESI,15
            and EDX,15
            shl RAX,4
            add RAX,RDI
            lea RDI,QWORD PTR [RIP+.L_43b400]
            movzx EAX,BYTE PTR [RAX+RSI*1]
            shl RAX,4
            add RAX,RDI
            movzx R11D,BYTE PTR [RAX+RDX*1]
            test R11D,R11D
            jne .L_4354c0
.L_434a84:

            test R15,R15
            je .L_435100
.L_434a8d:

            movsxd RAX,EBX
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jae .L_434ae7

            mov RAX,QWORD PTR [RSP+8]
            sub R13,QWORD PTR [R12]
            mov RDI,R12
            imul RAX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,RAX
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RAX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+24],RAX
.L_434ae7:

            cmp EBX,2
            je .L_434f50

            jle .L_434d60

            cmp EBX,3
            je .L_434b10

            cmp EBX,4
            jne .L_434b3a

            movzx EAX,BYTE PTR [R15]
            add R13,1
            add R15,1
            mov BYTE PTR [R13-1],AL
.L_434b10:

            movzx EAX,BYTE PTR [R15]
            lea RSI,QWORD PTR [R15+1]
            lea RDX,QWORD PTR [R13+1]
            mov BYTE PTR [R13],AL
.L_434b20:

            lea R15,QWORD PTR [RSI+1]
            movzx ESI,BYTE PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            mov BYTE PTR [RDX],SIL
            nop
            nop
.L_434b30:

            movzx EDX,BYTE PTR [R15]
            lea R13,QWORD PTR [RAX+1]
            mov BYTE PTR [RAX],DL
.L_434b3a:

            mov EAX,DWORD PTR [RSP+156]
            mov R15,QWORD PTR [RSP+16]
            mov EBX,R14D
            mov DWORD PTR [RSP+152],EAX
.L_434b50:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            cmp EAX,0
            mov R14D,EAX
            jle .L_435040

            cmp DWORD PTR [RSP+52],R14D
            je .L_434d48

            cmp BYTE PTR [RSP+64],0
            mov QWORD PTR [RSP+16],RBP
            jne .L_434d48
.L_434b8b:

            mov R9D,DWORD PTR [RSP+156]
            movsxd RAX,R14D
            sub QWORD PTR [RSP+8],RAX
            add RBP,RAX
            mov R11D,R9D
            shr R11D,8
            cmp R11D,466
            jbe .L_4349d8
.L_434bb2:

            test R15,R15
            je .L_434d78

            movsxd RAX,EBX
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jae .L_434c15

            mov RAX,QWORD PTR [RSP+8]
            sub R13,QWORD PTR [R12]
            mov RDI,R12
            imul RAX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,RAX
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RAX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [R12+16]
            mov QWORD PTR [RSP+24],RAX
.L_434c15:

            cmp EBX,2
            je .L_434df8

            jle .L_434d60

            cmp EBX,3
            je .L_434c42

            cmp EBX,4
            jne .L_434b3a

            movzx EAX,BYTE PTR [R15]
            add R13,1
            add R15,1
            mov BYTE PTR [R13-1],AL
.L_434c42:

            movzx EAX,BYTE PTR [R15]
            lea RDX,QWORD PTR [R15+1]
            add R13,1
            mov BYTE PTR [R13-1],AL
.L_434c52:

            lea R15,QWORD PTR [RDX+1]
            movzx EDX,BYTE PTR [RDX]
            lea RAX,QWORD PTR [R13+1]
            mov BYTE PTR [R13],DL
            jmp .L_434b30
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434c70:

            test AH,16
            je .L_434ccd

            xor ECX,ECX
            lea RDI,QWORD PTR [RIP+.L_4338c0]
            test AH,32
            sete CL
            test EDX,EDX
            mov QWORD PTR [RSP+32],2
            mov DWORD PTR [RSP+108],ECX
            mov QWORD PTR [RSP+80],RDI
            mov DWORD PTR [RSP+120],2
            je .L_4348f4
.L_434ca6:

            lea RAX,QWORD PTR [RIP+.L_433820]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+52],4
            mov QWORD PTR [RSP+40],RAX
            jmp .L_43491f
.L_434ccd:

            mov ECX,EAX
            and ECX,256
            mov DWORD PTR [RSP+108],ECX
            jne .L_4352a3

            test EDX,EDX
            jne .L_43536f

            and EAX,8192
            mov DWORD PTR [RSP+108],EAX
            je .L_43525a

            lea RAX,QWORD PTR [RIP+.L_4338c0]
            mov RSI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+108],0
            mov QWORD PTR [RSP+32],2
            mov QWORD PTR [RSP+72],1
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_4337f0]
            mov DWORD PTR [RSP+120],2
            mov DWORD PTR [RSP+52],4
            mov QWORD PTR [RSP+40],RAX
            jmp .L_43491f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434d48:

            mov QWORD PTR [RSP+16],0
            jmp .L_434b8b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434d60:

            cmp EBX,1
            mov RAX,R13
            je .L_434b30

            jmp .L_434b3a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434d78:

            mov R15,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            imul R15,QWORD PTR [RSP+72]
.L_434d88:

            mov RSI,RBX
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            sub RSI,R13
            mov RAX,QWORD PTR [RSP+80]
            call RAX

            test RAX,RAX
            jne .L_434de8

            sub R13,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R12
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,R15
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RBX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            add R13,RBX
            sub RBX,QWORD PTR [RSP+32]
            add RBX,QWORD PTR [R12+16]
            jmp .L_434d88
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434de8:

            mov QWORD PTR [RSP+24],RBX
            add R13,RAX
            jmp .L_434b3a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_434df8:

            mov RDX,R15
            jmp .L_434c52
.L_434e00:

            sub R9D,4449
            cmp R9D,20
            jbe .L_434f60

            test R15,R15
            jne .L_434a8d

            mov R15,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            mov EDX,R10D
            imul R15,QWORD PTR [RSP+72]
.L_434e2d:

            mov RSI,RBX
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            jne .L_434de8

            sub R13,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R12
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,R15
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RBX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+152]
            add R13,RBX
            sub RBX,QWORD PTR [RSP+32]
            add RBX,QWORD PTR [R12+16]
            jmp .L_434e2d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434e90:

            mov EDX,ESI
            mov EDI,613566757
            shr EDX,2
            mov EAX,EDX
            mul EDI
            imul EDX,EDX,28
            cmp ESI,EDX
            jne .L_434a15

            lea EAX,DWORD PTR [R9-4520]
            cmp EAX,26
            jbe .L_435178

            test R15,R15
            jne .L_434a8d

            mov R15,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            mov EDX,R10D
            imul R15,QWORD PTR [RSP+72]
.L_434ed5:

            mov RSI,RBX
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            jne .L_434de8

            sub R13,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R12
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,R15
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RBX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+152]
            add R13,RBX
            sub RBX,QWORD PTR [RSP+32]
            add RBX,QWORD PTR [R12+16]
            jmp .L_434ed5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_434f38:

            mov DWORD PTR [RSP+152],EAX
            xor R15D,R15D
            jmp .L_434b50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434f50:

            mov RSI,R15
            mov RDX,R13
            jmp .L_434b20
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434f60:

            lea EDX,DWORD PTR [RAX+RAX*4]
            xor R15D,R15D
            lea EAX,DWORD PTR [RAX+RDX*4]
            add EAX,R9D
            imul EAX,EAX,28
            add EAX,44032
            mov DWORD PTR [RSP+152],EAX
            jmp .L_434b50
.L_434f80:

            mov R14,QWORD PTR [RSP+8]
            mov R15,QWORD PTR [RSP+24]
            imul R14,QWORD PTR [RSP+72]
.L_434f90:

            mov RSI,R15
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            sub RSI,R13
            mov RAX,QWORD PTR [RSP+80]
            call RAX

            test RAX,RAX
            je .L_435008

            neg R12D
            mov QWORD PTR [RSP+24],R15
            add R13,RAX
            movsxd R12,R12D
            mov DWORD PTR [RSP+104],4294967295
            sub QWORD PTR [RSP+8],R12
            add RBP,R12
            jmp .L_434966
          .byte 0x90
.L_434fd0:

            mov DWORD PTR [RSP+104],4294967295
.L_434fd8:

            mov RDI,QWORD PTR [RSP+248]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+104]
            jne .L_435c83

            add RSP,264
.L_434ffa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435008:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],R13
            add RSI,R14
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov R15,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,R15
            sub R15,QWORD PTR [RSP+32]
            add R15,QWORD PTR [RBX+16]
            jmp .L_434f90
.L_435040:

            mov RAX,R12
            mov R12D,EBX
            mov RBX,RAX
            jne .L_43518f

            test R15,R15
            mov R14D,R12D
            mov R12,R15
            je .L_435448

            movsxd RAX,R14D
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jb .L_435c38
.L_43506f:

            cmp R14D,2
            je .L_4350a9

            jle .L_435c22

            cmp R14D,3
            je .L_435098

            cmp R14D,4
            jne .L_4350c7

            movzx EAX,BYTE PTR [R12]
            add R13,1
            add R12,1
            mov BYTE PTR [R13-1],AL
.L_435098:

            movzx EAX,BYTE PTR [R12]
            add R13,1
            add R12,1
            mov BYTE PTR [R13-1],AL
.L_4350a9:

            movzx EAX,BYTE PTR [R12]
            add R13,1
            add R12,1
            mov BYTE PTR [R13-1],AL
.L_4350ba:

            movzx EAX,BYTE PTR [R12]
            add R13,1
            mov BYTE PTR [R13-1],AL
.L_4350c7:

            mov RAX,R13
            sub RAX,QWORD PTR [RBX]
            cmp DWORD PTR [RSP+120],2
            mov QWORD PTR [RBX+8],RAX
            mov BYTE PTR [R13],0
            jne .L_434fd8

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            mov BYTE PTR [RDX+RAX*1+1],0
            jmp .L_434fd8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4350f8:

            xor R15D,R15D
            jmp .L_4349ad
.L_435100:

            mov R15,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+24]
            mov EDX,R10D
            imul R15,QWORD PTR [RSP+72]
.L_435113:

            mov RSI,RBX
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            jne .L_434de8

            sub R13,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,R12
            add RSI,QWORD PTR [R12+16]
            mov QWORD PTR [R12+8],R13
            add RSI,R15
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RBX,QWORD PTR [R12]
            mov R13,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+152]
            add R13,RBX
            sub RBX,QWORD PTR [RSP+32]
            add RBX,QWORD PTR [R12+16]
            jmp .L_435113
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_435178:

            lea EAX,DWORD PTR [R9+R10*1-4519]
            xor R15D,R15D
            mov DWORD PTR [RSP+152],EAX
            jmp .L_434b50
.L_43518f:

            mov RAX,QWORD PTR [RSP+8]
            imul RAX,QWORD PTR [RSP+72]
            test R15,R15
            mov QWORD PTR [RSP+16],RAX
            je .L_4353b3

            movsxd RAX,R12D
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jb .L_4352d2
.L_4351b9:

            cmp R12D,2
            je .L_43543d

            jle .L_435315

            cmp R12D,3
            je .L_4351e9

            cmp R12D,4
            jne .L_435322

            movzx EAX,BYTE PTR [R15]
            add R13,1
            add R15,1
            mov BYTE PTR [R13-1],AL
.L_4351e9:

            movzx EAX,BYTE PTR [R15]
            lea RSI,QWORD PTR [R15+1]
            lea RDX,QWORD PTR [R13+1]
            mov BYTE PTR [R13],AL
.L_4351f9:

            lea R15,QWORD PTR [RSI+1]
            movzx ESI,BYTE PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            mov BYTE PTR [RDX],SIL
.L_435207:

            movzx EDX,BYTE PTR [R15]
            mov R12,QWORD PTR [RSP+24]
            lea R13,QWORD PTR [RAX+1]
            mov R15,QWORD PTR [RSP+80]
            mov BYTE PTR [RAX],DL
.L_43521b:

            mov RSI,R12
            mov EDX,DWORD PTR [RSP+156]
            mov RDI,R13
            sub RSI,R13
            call R15

            test RAX,RAX
            je .L_435331

            neg R14D
            add R13,RAX
            mov QWORD PTR [RSP+24],R12
            movsxd RAX,R14D
            mov DWORD PTR [RSP+104],4294967295
            sub QWORD PTR [RSP+8],RAX
            add RBP,RAX
            jmp .L_434966
.L_43525a:

            lea RAX,QWORD PTR [RIP+.L_433240]
            mov QWORD PTR [RSP+32],1
            mov DWORD PTR [RSP+120],1
            mov QWORD PTR [RSP+80],RAX
.L_435277:

            mov RAX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+52],6
            imul RSI,RAX
            mov QWORD PTR [RSP+72],RAX
            lea RAX,QWORD PTR [RIP+.L_433650]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_43491f
.L_4352a3:

            xor EDI,EDI
            test AH,2
            mov QWORD PTR [RSP+32],1
            sete DIL
            mov DWORD PTR [RSP+120],1
            mov DWORD PTR [RSP+108],EDI
            lea RDI,QWORD PTR [RIP+.L_433240]
            mov QWORD PTR [RSP+80],RDI
            jmp .L_4348ec
.L_4352d2:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            add RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RBX+8],R13
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_4351b9
.L_435315:

            cmp R12D,1
            mov RAX,R13
            je .L_435207
.L_435322:

            mov R15,QWORD PTR [RSP+80]
            mov R12,QWORD PTR [RSP+24]
            jmp .L_43521b
.L_435331:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            add RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RBX+8],R13
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov R12,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,R12
            sub R12,QWORD PTR [RSP+32]
            add R12,QWORD PTR [RBX+16]
            jmp .L_43521b
.L_43536f:

            lea RAX,QWORD PTR [RIP+.L_433850]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],2
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+120],2
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_433820]
            mov DWORD PTR [RSP+52],4
            mov QWORD PTR [RSP+40],RAX
            jmp .L_43491f
.L_4353b3:

            mov R12,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+56],RBP
            mov DWORD PTR [RSP+24],R14D
            mov R15,QWORD PTR [RSP+32]
            mov R14,RBX
            mov RBP,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP+80]
            jmp .L_43540c
.L_4353d6:

            mov RSI,QWORD PTR [R14+16]
            mov R8,R13
            sub R8,QWORD PTR [R14]
            mov RDI,R14
            add RSI,R15
            add RSI,RBP
            mov QWORD PTR [R14+8],R8
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov R12,QWORD PTR [R14]
            mov R13,QWORD PTR [R14+8]
            add R13,R12
            sub R12,R15
            add R12,QWORD PTR [R14+16]
.L_43540c:

            mov RSI,R12
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            sub RSI,R13
            call RBX

            test RAX,RAX
            je .L_4353d6

            mov RBX,R14
            mov RBP,QWORD PTR [RSP+56]
            mov R14D,DWORD PTR [RSP+24]
            add R13,RAX
            mov R15,QWORD PTR [RSP+80]
            jmp .L_43521b
.L_43543d:

            mov RSI,R15
            mov RDX,R13
            jmp .L_4351f9
.L_435448:

            mov RBP,QWORD PTR [RSP+8]
            imul RBP,QWORD PTR [RSP+72]
            jmp .L_435492
.L_435455:

            sub R13,QWORD PTR [RBX]
            mov R15,QWORD PTR [RSP+32]
            mov RDI,RBX
            mov RSI,QWORD PTR [RBX+16]
            add RSI,R15
            mov QWORD PTR [RBX+8],R13
            add RSI,RBP
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,RAX
            sub RAX,R15
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
.L_435492:

            mov RSI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            je .L_435455

            add R13,RAX
            jmp .L_4350c7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4354c0:

            mov RAX,R12
            mov R12D,EBX
            xor R14D,R14D
            mov RBX,RAX
            lea RAX,QWORD PTR [RSP+160]
            mov RDI,RBP
            mov ECX,1
            mov QWORD PTR [RSP+112],R13
            mov DWORD PTR [RSP+124],R12D
            mov QWORD PTR [RSP+128],R15
            mov QWORD PTR [RSP+136],RBX
            mov EBP,R14D
            mov DWORD PTR [RSP+160],R9D
            mov DWORD PTR [RSP+208],R11D
            mov R13D,R11D
            mov QWORD PTR [RSP+88],RAX
            mov R12,RCX
            mov RBX,QWORD PTR [RSP+8]
            mov R15,RAX
            mov R14,RDI
            jmp .L_435552
.L_435521:

            cmp R13D,228
            jne .L_435a99

            xor EBP,EBP
.L_435530:

            movsxd RDX,EAX
            mov DWORD PTR [RSP+R12*4+208],EBP
            add R12,1
            add R14,RDX
            sub RBX,RDX
            cmp R12,10
            mov R13D,EBP
            je .L_435ad9
.L_435552:

            mov DWORD PTR [RSP+64],R12D
            mov QWORD PTR [RSP+16],R15
            lea RDI,QWORD PTR [R15+R12*4]
            mov RDX,RBX
            mov RSI,R14
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            test EAX,EAX
            jle .L_4355de

            mov EDX,DWORD PTR [R15+R12*4]
            cmp EDX,119364
            ja .L_435521

            lea RCX,QWORD PTR [RIP+.L_43afa0]
            mov EDI,EDX
            mov ESI,EDX
            shr EDX,8
            shr ESI,4
            and EDI,15
            movzx EDX,BYTE PTR [RCX+RDX*1]
            lea RCX,QWORD PTR [RIP+.L_43b180]
            and ESI,15
            shl RDX,4
            add RDX,RCX
            lea RCX,QWORD PTR [RIP+.L_43b400]
            movzx EDX,BYTE PTR [RDX+RSI*1]
            shl RDX,4
            add RDX,RCX
            movzx EBP,BYTE PTR [RDX+RDI*1]
            cmp EBP,R13D
            jg .L_435530

            cmp R13D,228
            je .L_435530

            cmp EBP,228
            je .L_435530
.L_4355de:

            mov R11D,R13D
            mov QWORD PTR [RSP+8],RBX
            mov R13,QWORD PTR [RSP+112]
            mov R12D,DWORD PTR [RSP+124]
            mov R15,QWORD PTR [RSP+128]
            mov RBX,QWORD PTR [RSP+136]
            mov DWORD PTR [RSP+56],EAX
            mov RAX,R14
            mov R14D,EBP
            mov RBP,RAX
.L_43560d:

            cmp DWORD PTR [RSP+64],1
            je .L_43579a
.L_435618:

            mov DWORD PTR [RSP+124],R12D
            mov R12D,R14D
            mov R14,RBX
            mov EBX,DWORD PTR [RSP+64]
            mov QWORD PTR [RSP+112],R13
            mov R10D,1
            mov R13D,R11D
.L_435635:

            movsxd RAX,R10D
            mov EDI,DWORD PTR [RSP+152]
            mov ESI,DWORD PTR [RSP+RAX*4+160]
            call .L_433310

            test EAX,EAX
            lea EDX,DWORD PTR [R10+1]
            je .L_435777

            cmp EBX,EDX
            mov DWORD PTR [RSP+152],EAX
            jle .L_4356a7

            lea EDI,DWORD PTR [RBX-2]
            movsxd RSI,EDX
            mov RCX,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RSI*4]
            sub EDI,R10D
            add RSI,RDI
            lea RAX,QWORD PTR [RCX+RDX*1]
            lea RDX,QWORD PTR [RSP+RDX*1+204]
            lea RDI,QWORD PTR [RCX+RSI*4+4]
            nop
            nop
            nop
            nop
.L_435690:

            mov ECX,DWORD PTR [RAX]
            add RAX,4
            add RDX,4
            mov DWORD PTR [RAX-8],ECX
            mov ECX,DWORD PTR [RDX]
            mov DWORD PTR [RDX-4],ECX
            cmp RDI,RAX
            jne .L_435690
.L_4356a7:

            lea R8D,DWORD PTR [RBX-1]
            test R8D,R8D
            jle .L_435a8b

            cmp R10D,R8D
            jne .L_435a8b

            mov EDX,DWORD PTR [RSP+56]
            test EDX,EDX
            jle .L_435aca

            cmp R13D,R12D
            jne .L_435aca

            lea EAX,DWORD PTR [RBX-2]
            movsxd R15,R8D
            mov QWORD PTR [RSP+64],R14
            cdqe 
            mov R13D,DWORD PTR [RSP+RAX*4+208]
            mov RAX,QWORD PTR [RSP+88]
            lea R9,QWORD PTR [RAX+R15*4]
            mov EAX,10
            mov R14D,R13D
            sub EAX,EBX
            mov RBX,RBP
            mov EBP,R12D
            lea RAX,QWORD PTR [R15+RAX*1+1]
            mov R13,R9
            mov QWORD PTR [RSP+56],RAX
.L_43570d:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,RBX
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+40]
            mov R12D,R15D
            call RAX

            test EAX,EAX
            jle .L_435b1d

            mov EDX,DWORD PTR [R13]
            cmp R14D,228
            setne SIL
            cmp EDX,119364
            jbe .L_4359e0

            test R14D,R14D
            js .L_435ad2

            test SIL,SIL
            je .L_435ad2

            mov R13D,R14D
            mov R14,QWORD PTR [RSP+64]
            mov RBP,RBX
            mov DWORD PTR [RSP+56],EAX
            mov EBX,R15D
            xor R12D,R12D
.L_43576c:

            xor R10D,R10D
            xor R15D,R15D
            jmp .L_435635
.L_435777:

            mov R10D,EDX
.L_43577a:

            cmp EBX,R10D
            jg .L_435635

            mov DWORD PTR [RSP+64],EBX
            mov R11D,R13D
            mov RBX,R14
            mov R13,QWORD PTR [RSP+112]
            mov R14D,R12D
            mov R12D,DWORD PTR [RSP+124]
.L_43579a:

            test R15,R15
            je .L_435ba2

            movsxd RAX,R12D
            add RAX,R13
            cmp QWORD PTR [RSP+24],RAX
            jb .L_435b4c
.L_4357b4:

            cmp R12D,2
            je .L_435c17

            jle .L_435b3a

            cmp R12D,3
            je .L_4357e0

            cmp R12D,4
            jne .L_435808

            movzx EAX,BYTE PTR [R15]
            add R13,1
            add R15,1
            mov BYTE PTR [R13-1],AL
.L_4357e0:

            movzx EAX,BYTE PTR [R15]
            lea RSI,QWORD PTR [R15+1]
            lea RDX,QWORD PTR [R13+1]
            mov BYTE PTR [R13],AL
.L_4357f0:

            lea R15,QWORD PTR [RSI+1]
            movzx ESI,BYTE PTR [RSI]
            lea RAX,QWORD PTR [RDX+1]
            mov BYTE PTR [RDX],SIL
.L_4357fe:

            movzx EDX,BYTE PTR [R15]
            lea R13,QWORD PTR [RAX+1]
            mov BYTE PTR [RAX],DL
.L_435808:

            mov EAX,DWORD PTR [RSP+64]
            test EAX,EAX
            jle .L_4358c0

            mov RDI,QWORD PTR [RSP+88]
            sub EAX,1
            mov R15,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+64],R11D
            imul R15,QWORD PTR [RSP+72]
            lea R12,QWORD PTR [RDI+RAX*4+4]
            mov RAX,RBX
            mov RBX,R13
            mov R13,RAX
            jmp .L_435881

            nop
            nop
            nop
            nop
.L_435840:

            mov RSI,QWORD PTR [RSP+32]
            mov RCX,RBX
            add RSI,QWORD PTR [R13+16]
            sub RCX,QWORD PTR [R13]
            mov RDI,R13
            add RSI,R15
            mov QWORD PTR [R13+8],RCX
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RAX,QWORD PTR [R13]
            mov RBX,QWORD PTR [R13+8]
            add RBX,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+24],RAX
.L_435881:

            mov RAX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,RBX
            sub RSI,RBX
            mov EDX,DWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP+80]
            call RAX

            test RAX,RAX
            je .L_435840

            add QWORD PTR [RSP+16],4
            add RBX,RAX
            mov RAX,QWORD PTR [RSP+16]
            cmp R12,RAX
            jne .L_435881

            mov R11D,DWORD PTR [RSP+64]
            mov RAX,R13
            mov R13,RBX
            mov RBX,RAX
.L_4358c0:

            mov EAX,DWORD PTR [RSP+56]
            test EAX,EAX
            jle .L_434966

            cmp R14D,R11D
            jne .L_434966

            cmp QWORD PTR [RSP+8],0
            je .L_434966

            mov R12,QWORD PTR [RSP+8]
            mov R15D,R11D
.L_4358e9:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            test EAX,EAX
            jle .L_435c79

            mov EDX,DWORD PTR [RSP+160]
            xor R14D,R14D
            cmp EDX,119364
            ja .L_435958

            lea R8,QWORD PTR [RIP+.L_43afa0]
            mov ECX,EDX
            mov ESI,EDX
            shr ECX,8
            shr ESI,4
            mov EDI,EDX
            movzx ECX,BYTE PTR [R8+RCX*1]
            lea R8,QWORD PTR [RIP+.L_43b180]
            and ESI,15
            and EDI,15
            shl RCX,4
            add RCX,R8
            movzx ECX,BYTE PTR [RCX+RSI*1]
            lea RSI,QWORD PTR [RIP+.L_43b400]
            shl RCX,4
            add RCX,RSI
            movzx R14D,BYTE PTR [RCX+RDI*1]
.L_435958:

            cmp R15D,R14D
            jg .L_435c79

            mov R15,QWORD PTR [RSP+72]
            cdqe 
            sub R12,RAX
            add RBP,RAX
            imul R15,R12
            jmp .L_4359bb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435978:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],R13
            add RSI,R15
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            mov EDX,DWORD PTR [RSP+160]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
.L_4359bb:

            mov RSI,QWORD PTR [RSP+24]
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            je .L_435978

            add R13,RAX
            mov R15D,R14D
            jmp .L_4358e9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4359e0:

            lea RCX,QWORD PTR [RIP+.L_43afa0]
            mov R9D,EDX
            mov EDI,EDX
            shr EDX,8
            shr EDI,4
            and R9D,15
            movzx EDX,BYTE PTR [RCX+RDX*1]
            lea RCX,QWORD PTR [RIP+.L_43b180]
            and EDI,15
            shl RDX,4
            add RDX,RCX
            movzx EDX,BYTE PTR [RDX+RDI*1]
            lea RDI,QWORD PTR [RIP+.L_43b400]
            shl RDX,4
            add RDX,RDI
            movzx EBP,BYTE PTR [RDX+R9*1]
            cmp EBP,R14D
            jg .L_435a38

            test SIL,SIL
            je .L_435a38

            cmp EBP,228
            jne .L_435b1d
.L_435a38:

            movsxd RDX,EAX
            mov DWORD PTR [RSP+R15*4+208],EBP
            sub QWORD PTR [RSP+8],RDX
            add RBX,RDX
            add R15,1
            add R13,4
            cmp QWORD PTR [RSP+56],R15
            mov R14D,EBP
            jne .L_43570d

            mov R12D,EBP
            mov DWORD PTR [RSP+56],EAX
            mov RBP,RBX
            mov R14,QWORD PTR [RSP+64]
            mov R13D,R12D
            mov EBX,10
            xor R10D,R10D
            xor R15D,R15D
            mov DWORD PTR [RSP+104],4294967295
            jmp .L_435635
.L_435a8b:

            mov EBX,R8D
            xor R10D,R10D
            xor R15D,R15D
            jmp .L_43577a
.L_435a99:

            mov R11D,R13D
            mov RBP,R14
            mov QWORD PTR [RSP+8],RBX
            mov DWORD PTR [RSP+56],EAX
            mov R13,QWORD PTR [RSP+112]
            xor R14D,R14D
            mov R12D,DWORD PTR [RSP+124]
            mov R15,QWORD PTR [RSP+128]
            mov RBX,QWORD PTR [RSP+136]
            jmp .L_43560d
.L_435aca:

            mov EBX,R8D
            jmp .L_43576c
.L_435ad2:

            xor EBP,EBP
            jmp .L_435a38
.L_435ad9:

            mov DWORD PTR [RSP+56],EAX
            mov RAX,R14
            mov R14D,EBP
            mov QWORD PTR [RSP+8],RBX
            mov R13,QWORD PTR [RSP+112]
            mov RBP,RAX
            mov R12D,DWORD PTR [RSP+124]
            mov R15,QWORD PTR [RSP+128]
            mov R11D,R14D
            mov RBX,QWORD PTR [RSP+136]
            mov DWORD PTR [RSP+64],10
            mov DWORD PTR [RSP+104],4294967295
            jmp .L_435618
.L_435b1d:

            mov DWORD PTR [RSP+56],EAX
            mov RAX,RBX
            mov R13D,R14D
            mov EBX,R12D
            mov R14,QWORD PTR [RSP+64]
            mov R12D,EBP
            mov RBP,RAX
            jmp .L_43576c
.L_435b3a:

            cmp R12D,1
            mov RAX,R13
            je .L_4357fe

            jmp .L_435808
.L_435b4c:

            mov RAX,QWORD PTR [RSP+8]
            sub R13,QWORD PTR [RBX]
            mov RDI,RBX
            imul RAX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+32]
            add RSI,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+112],R11D
            mov QWORD PTR [RBX+8],R13
            add RSI,RAX
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            mov R11D,DWORD PTR [RSP+112]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_4357b4
.L_435ba2:

            mov R12,QWORD PTR [RSP+8]
            mov R15D,R11D
            imul R12,QWORD PTR [RSP+72]
            jmp .L_435bee
.L_435bb2:

            sub R13,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,RBX
            add RSI,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],R13
            add RSI,R12
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RAX,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            add R13,RAX
            sub RAX,QWORD PTR [RSP+32]
            add RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+24],RAX
.L_435bee:

            mov RSI,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+152]
            mov RDI,R13
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R13
            call RAX

            test RAX,RAX
            je .L_435bb2

            mov R11D,R15D
            add R13,RAX
            jmp .L_435808
.L_435c17:

            mov RSI,R15
            mov RDX,R13
            jmp .L_4357f0
.L_435c22:

            cmp R14D,1
            je .L_4350ba

            jmp .L_4350c7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435c38:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+32]
            mov RCX,R13
            imul RAX,QWORD PTR [RSP+72]
            sub RCX,QWORD PTR [RBX]
            add RSI,QWORD PTR [RBX+16]
            mov RDI,RBX
            mov QWORD PTR [RBX+8],RCX
            add RSI,RAX
            call .L_4342f0

            test RAX,RAX
            je .L_434fd0

            mov RCX,QWORD PTR [RBX+8]
            add RCX,QWORD PTR [RBX]
            mov R13,RCX
            jmp .L_43506f
.L_435c79:

            mov QWORD PTR [RSP+8],R12
            jmp .L_434966
.L_435c83:

            call __stack_chk_fail@PLT
.L_435c88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435c90:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,232
.L_435ca4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+216],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+36]
            mov QWORD PTR [RSP+16],RDX
            mov QWORD PTR [RSP],RSI
            mov EDX,EAX
            and EDX,2048
            test AH,4
            je .L_435f00

            xor EBX,EBX
            test EDX,EDX
            mov R12D,2
            sete BL
            mov DWORD PTR [RSP+108],2
            mov DWORD PTR [RSP+96],EBX
            lea RBX,QWORD PTR [RIP+.L_433850]
            mov QWORD PTR [RSP+80],RBX
.L_435cf9:

            test EDX,EDX
            je .L_435f33
.L_435d01:

            lea RAX,QWORD PTR [RIP+.L_433820]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+100],4
            mov QWORD PTR [RSP+32],RAX
.L_435d23:

            add RSI,R12
            add RSI,QWORD PTR [R15+8]
            mov RDI,R15
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov RAX,QWORD PTR [R15]
            mov RBX,QWORD PTR [R15+8]
            mov QWORD PTR [RSP+64],R12
            mov DWORD PTR [RSP+60],0
            add RBX,RAX
            sub RAX,R12
            add RAX,QWORD PTR [R15+16]
            mov QWORD PTR [RSP+40],RBX
            mov R12,R15
            mov R13,RAX
            lea RAX,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+48],RAX
.L_435d6e:

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+32]
            call RAX

            test EAX,EAX
            mov DWORD PTR [RSP+56],EAX
            je .L_4367bd

            movzx EAX,BYTE PTR [RSP+96]
            mov EDX,DWORD PTR [RSP+120]
            mov R14,R12
            and EAX,1
            mov BYTE PTR [RSP+107],AL
            mov EAX,DWORD PTR [RSP+56]
            test EAX,EAX
            js .L_43629b
.L_435dae:

            mov EBX,DWORD PTR [RSP+100]
            cmp DWORD PTR [RSP+56],EBX
            je .L_436328

            cmp BYTE PTR [RSP+107],0
            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [RSP+24],RAX
            jne .L_436328
.L_435dd0:

            movsxd RAX,DWORD PTR [RSP+56]
            lea EBP,DWORD PTR [RDX-44032]
            add QWORD PTR [RSP],RAX
            sub QWORD PTR [RSP+16],RAX
            cmp EBP,11171
            mov QWORD PTR [RSP+88],RAX
            jbe .L_4367ee

            mov EAX,EDX
            shr EAX,8
            cmp EAX,466
            ja .L_435e20

            lea RBX,QWORD PTR [RIP+.L_43bb40]
            cmp BYTE PTR [RBX+RAX*1],0
            je .L_435e20

            cmp EDX,119364
            jbe .L_4365ce

            nop
            nop
            nop
            nop
            nop
            nop
.L_435e20:

            lea EAX,DWORD PTR [RDX-8192]
            cmp EAX,4095
            jbe .L_435fd8

            lea EAX,DWORD PTR [RDX-63744]
            cmp EAX,511
            jbe .L_435fd8

            lea EAX,DWORD PTR [RDX-194560]
            xor R8D,R8D
            cmp EAX,767
            jbe .L_435fe0

            lea EAX,DWORD PTR [RDX-69786]
            and EAX,4294967293
            je .L_435fd8

            cmp EDX,69803
            je .L_435fd8

            mov R9,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+24]
            lea RBP,QWORD PTR [RIP+.L_43b400]
            lea R12,QWORD PTR [RIP+.L_43b180]
            lea RBX,QWORD PTR [RIP+.L_43afa0]
            mov R11D,4294967295
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435ea0:

            mov ECX,7773
            mov R10D,930
            xor ESI,ESI
            mov EAX,930
            jmp .L_435eda
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_435eb8:

            lea ESI,DWORD PTR [RAX+1]
            cmp R10D,ESI
            jl .L_435eef
.L_435ec0:

            lea EAX,DWORD PTR [R10+RSI*1]
            lea R15,QWORD PTR [RIP+.L_4383e0]
            mov ECX,EAX
            sar ECX,1
            movsxd RCX,ECX
            lea RCX,QWORD PTR [RCX+RCX*2]
            mov ECX,DWORD PTR [R15+RCX*4]
.L_435eda:

            sar EAX,1
            cmp EDX,ECX
            ja .L_435eb8

            jae .L_4364d0

            lea R10D,DWORD PTR [RAX-1]
            cmp R10D,ESI
            jge .L_435ec0
.L_435eef:

            mov QWORD PTR [RSP+24],RDI
            jmp .L_435fe0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_435f00:

            test AH,16
            je .L_435f63

            xor EBX,EBX
            test AH,32
            mov R12D,2
            sete BL
            test EDX,EDX
            mov DWORD PTR [RSP+108],2
            mov DWORD PTR [RSP+96],EBX
            lea RBX,QWORD PTR [RIP+.L_4338c0]
            mov QWORD PTR [RSP+80],RBX
            jne .L_435d01
.L_435f33:

            test AH,32
            je .L_4363e1

            lea RAX,QWORD PTR [RIP+.L_4337f0]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+100],4
            mov QWORD PTR [RSP+32],RAX
            jmp .L_435d23
.L_435f63:

            mov EBX,EAX
            and EBX,256
            mov DWORD PTR [RSP+96],EBX
            jne .L_43649f

            test EDX,EDX
            jne .L_436732

            and EAX,8192
            mov DWORD PTR [RSP+96],EAX
            je .L_4363c7

            lea RAX,QWORD PTR [RIP+.L_4338c0]
            mov RSI,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+96],0
            mov R12D,2
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+108],2
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_4337f0]
            mov DWORD PTR [RSP+100],4
            mov QWORD PTR [RSP+32],RAX
            jmp .L_435d23
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_435fd8:

            xor R8D,R8D
            nop
            nop
            nop
            nop
            nop
.L_435fe0:

            lea RAX,QWORD PTR [RSP+124]
            mov R12,QWORD PTR [RSP+16]
            lea R15,QWORD PTR [RSP+128]
            movsxd RBP,R8D
            mov QWORD PTR [RSP+8],RAX
.L_435ffa:

            mov RDX,R12
            mov RSI,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP+32]
            mov EBX,EBP
            call RAX

            test EAX,EAX
            jle .L_436110

            mov EDI,DWORD PTR [RSP+124]
            cmp EDI,119364
            ja .L_436110

            lea R11,QWORD PTR [RIP+.L_43afa0]
            mov EDX,EDI
            mov ESI,EDI
            shr EDX,8
            shr ESI,4
            mov ECX,EDI
            movzx EDX,BYTE PTR [R11+RDX*1]
            lea R11,QWORD PTR [RIP+.L_43b180]
            and ESI,15
            and ECX,15
            shl RDX,4
            add RDX,R11
            movzx EDX,BYTE PTR [RDX+RSI*1]
            lea RSI,QWORD PTR [RIP+.L_43b400]
            shl RDX,4
            add RDX,RSI
            cmp EBP,9
            movzx EDX,BYTE PTR [RDX+RCX*1]
            jg .L_436110

            test EDX,EDX
            je .L_436110

            cdqe 
            add QWORD PTR [RSP],RAX
            sub R12,RAX
            test EBX,EBX
            je .L_4360bb

            cmp EDX,DWORD PTR [RSP+132]
            jl .L_436340

            lea ECX,DWORD PTR [RBP-1]
            mov EAX,1
            mov R9,RCX
            add RCX,1
            jmp .L_4360b3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4360a8:

            add RAX,1
            cmp DWORD PTR [R15+RAX*8-4],EDX
            jg .L_4360d0
.L_4360b3:

            cmp RCX,RAX
            movsxd RSI,EAX
            jne .L_4360a8
.L_4360bb:

            mov DWORD PTR [R15+RBP*8+4],EDX
            mov DWORD PTR [R15+RBP*8],EDI
.L_4360c4:

            add RBP,1
            jmp .L_435ffa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4360d0:

            cmp EBX,ESI
            jle .L_436100
.L_4360d4:

            movsxd RCX,R9D
            sub R9D,ESI
            shl RCX,3
            shl R9,3
            lea RAX,QWORD PTR [R15+RCX*1]
            add RCX,QWORD PTR [RSP+48]
            sub RCX,R9
            nop
            nop
.L_4360f0:

            mov R8,QWORD PTR [RAX]
            sub RAX,8
            mov QWORD PTR [RAX+16],R8
            cmp RCX,RAX
            jne .L_4360f0
.L_436100:

            mov DWORD PTR [RSP+RSI*8+132],EDX
            mov DWORD PTR [RSP+RSI*8+128],EDI
            jmp .L_4360c4
.L_436110:

            cmp QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+16],R12
            mov R12D,EAX
            je .L_436408

            mov RAX,QWORD PTR [RSP+88]
            add RAX,QWORD PTR [RSP+40]
            cmp R13,RAX
            jb .L_43634b

            cmp DWORD PTR [RSP+56],2
            je .L_4363a3
.L_436142:

            jle .L_4363b2

            mov EAX,DWORD PTR [RSP+56]
            cmp EAX,3
            je .L_43617b

            cmp EAX,4
            jne .L_4363bd

            mov RDI,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RDI]
            mov BYTE PTR [RCX],AL
            lea RAX,QWORD PTR [RDI+1]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RCX+1]
            mov QWORD PTR [RSP+40],RAX
.L_43617b:

            mov RDI,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+40]
            movzx ESI,BYTE PTR [RDI]
            lea RDX,QWORD PTR [RDI+1]
            lea RAX,QWORD PTR [RCX+1]
            mov BYTE PTR [RCX],SIL
.L_436193:

            lea RDI,QWORD PTR [RDX+1]
            movzx EDX,BYTE PTR [RDX]
            mov QWORD PTR [RSP+24],RDI
            lea RDI,QWORD PTR [RAX+1]
            mov BYTE PTR [RAX],DL
            mov QWORD PTR [RSP+40],RDI
.L_4361aa:

            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RAX]
            lea R15,QWORD PTR [RDI+1]
            mov BYTE PTR [RDI],AL
.L_4361bd:

            test EBX,EBX
            je .L_436728

            mov RBX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+128]
            lea EAX,DWORD PTR [RBP-1]
            imul RBX,QWORD PTR [RSP+72]
            lea RBP,QWORD PTR [RDI+RAX*8+8]
            mov DWORD PTR [RSP+56],R12D
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+24],RBP
            mov RBP,QWORD PTR [RSP+80]
            mov R12,RBX
            mov RBX,QWORD PTR [RSP+64]
.L_4361fc:

            mov RAX,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RAX]
            mov DWORD PTR [RSP+120],EDX
            jmp .L_43624a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436210:

            sub R15,QWORD PTR [R14]
            mov RSI,QWORD PTR [R14+16]
            mov RDI,R14
            add RSI,RBX
            add RSI,R12
            mov QWORD PTR [R14+8],R15
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov RAX,QWORD PTR [R14]
            mov R15,QWORD PTR [R14+8]
            mov EDX,DWORD PTR [RSP+120]
            add R15,RAX
            sub RAX,RBX
            add RAX,QWORD PTR [R14+16]
            mov R13,RAX
.L_43624a:

            mov RSI,R13
            mov RDI,R15
            sub RSI,R15
            call RBP

            test RAX,RAX
            je .L_436210

            add QWORD PTR [RSP+8],8
            add R15,RAX
            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+24],RAX
            jne .L_4361fc

            mov R12D,DWORD PTR [RSP+56]
            mov QWORD PTR [RSP+40],R15
.L_436279:

            test R12D,R12D
            je .L_4369a6

            mov EDX,DWORD PTR [RSP+124]
            test R12D,R12D
            mov DWORD PTR [RSP+56],R12D
            mov DWORD PTR [RSP+120],EDX
            jns .L_435dae

            mov R12,R14
.L_43629b:

            mov RBX,QWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RSP+40]
            imul RBX,QWORD PTR [RSP+72]
.L_4362ab:

            mov RSI,R13
            mov RDI,RBP
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,RBP
            call RAX

            test RAX,RAX
            je .L_436773

            add RBP,RAX
            mov EAX,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+60],4294967295
            mov QWORD PTR [RSP+40],RBP
            neg EAX
            cdqe 
            add QWORD PTR [RSP],RAX
            sub QWORD PTR [RSP+16],RAX
            jmp .L_435d6e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4362f0:

            mov DWORD PTR [RSP+60],4294967295
.L_4362f8:

            mov RBX,QWORD PTR [RSP+216]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+60]
            jne .L_4369ae

            add RSP,232
.L_43631a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436328:

            mov QWORD PTR [RSP+24],0
            jmp .L_435dd0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436340:

            xor ESI,ESI
            lea R9D,DWORD PTR [RBP-1]
            jmp .L_4360d4
.L_43634b:

            mov RAX,QWORD PTR [RSP+40]
            sub RAX,QWORD PTR [R14]
            mov RDI,R14
            mov R15,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [R14+16]
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [RSP+16]
            add RSI,R15
            imul RAX,QWORD PTR [RSP+72]
            add RSI,RAX
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov R13,QWORD PTR [R14]
            mov RAX,QWORD PTR [R14+8]
            add RAX,R13
            sub R13,R15
            add R13,QWORD PTR [R14+16]
            cmp DWORD PTR [RSP+56],2
            mov QWORD PTR [RSP+40],RAX
            jne .L_436142
.L_4363a3:

            mov RDX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+40]
            jmp .L_436193
.L_4363b2:

            cmp DWORD PTR [RSP+56],1
            je .L_4361aa
.L_4363bd:

            mov R15,QWORD PTR [RSP+40]
            jmp .L_4361bd
.L_4363c7:

            lea RAX,QWORD PTR [RIP+.L_433240]
            mov R12D,1
            mov DWORD PTR [RSP+108],1
            mov QWORD PTR [RSP+80],RAX
.L_4363e1:

            mov RSI,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RIP+.L_433650]
            mov QWORD PTR [RSP+72],R12
            mov DWORD PTR [RSP+100],6
            mov QWORD PTR [RSP+32],RAX
            imul RSI,R12
            jmp .L_435d23
.L_436408:

            mov R15,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RBP
            imul R15,QWORD PTR [RSP+72]
            mov DWORD PTR [RSP+24],EBX
            mov DWORD PTR [RSP+56],EAX
            mov R12,QWORD PTR [RSP+40]
            mov RBP,QWORD PTR [RSP+64]
            mov RBX,R15
            mov R15,QWORD PTR [RSP+80]
            jmp .L_43646e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436438:

            mov RSI,QWORD PTR [R14+16]
            mov R8,R12
            sub R8,QWORD PTR [R14]
            mov RDI,R14
            add RSI,RBP
            add RSI,RBX
            mov QWORD PTR [R14+8],R8
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov R13,QWORD PTR [R14]
            mov R12,QWORD PTR [R14+8]
            add R12,R13
            sub R13,RBP
            add R13,QWORD PTR [R14+16]
.L_43646e:

            mov RSI,R13
            mov EDX,DWORD PTR [RSP+120]
            mov RDI,R12
            sub RSI,R12
            call R15

            test RAX,RAX
            je .L_436438

            mov RDI,R12
            mov RBP,QWORD PTR [RSP+8]
            mov EBX,DWORD PTR [RSP+24]
            add RDI,RAX
            mov R12D,DWORD PTR [RSP+56]
            mov R15,RDI
            jmp .L_4361bd
.L_43649f:

            xor EBX,EBX
            test AH,2
            mov R12D,1
            sete BL
            mov DWORD PTR [RSP+108],1
            mov DWORD PTR [RSP+96],EBX
            lea RBX,QWORD PTR [RIP+.L_433240]
            mov QWORD PTR [RSP+80],RBX
            jmp .L_435cf9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4364d0:

            cdqe 
            lea RCX,QWORD PTR [RIP+.L_4383e0]
            cmp R8D,10
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov EDX,DWORD PTR [RAX+4]
            mov R10D,DWORD PTR [RAX+8]
            je .L_435eef

            test R8D,R8D
            je .L_436520

            lea RSI,QWORD PTR [R9-8]
            mov EAX,R11D
            shl RAX,3
            sub RSI,RAX
            mov RAX,R9
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436510:

            mov RCX,QWORD PTR [RAX]
            sub RAX,8
            mov QWORD PTR [RAX+16],RCX
            cmp RAX,RSI
            jne .L_436510
.L_436520:

            xor EAX,EAX
            cmp R10D,119364
            ja .L_43655a

            mov EAX,R10D
            mov ESI,R10D
            mov ECX,R10D
            shr EAX,8
            shr ESI,4
            and ECX,15
            movzx EAX,BYTE PTR [RBX+RAX*1]
            and ESI,15
            shl RAX,4
            add RAX,R12
            movzx EAX,BYTE PTR [RAX+RSI*1]
            shl RAX,4
            add RAX,RBP
            movzx EAX,BYTE PTR [RAX+RCX*1]
.L_43655a:

            mov DWORD PTR [RSP+132],EAX
            lea EAX,DWORD PTR [RDX-8192]
            add R8D,1
            mov DWORD PTR [RSP+128],R10D
            mov DWORD PTR [RSP+120],EDX
            cmp EAX,4095
            jbe .L_4365c0

            lea EAX,DWORD PTR [RDX-63744]
            cmp EAX,511
            jbe .L_4365c0

            lea EAX,DWORD PTR [RDX-194560]
            cmp EAX,767
            jbe .L_4365c0

            lea EAX,DWORD PTR [RDX-69786]
            add R9,8
            add R11D,1
            xor EDI,EDI
            and EAX,4294967293
            je .L_4365c0

            cmp EDX,69803
            jne .L_435ea0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4365c0:

            mov QWORD PTR [RSP+24],0
            jmp .L_435fe0
.L_4365ce:

            lea R8,QWORD PTR [RIP+.L_43afa0]
            mov ESI,EDX
            mov EDI,EDX
            shr ESI,4
            and EDI,15
            movzx EAX,BYTE PTR [R8+RAX*1]
            and ESI,15
            shl RAX,4
            mov R8,RAX
            lea RAX,QWORD PTR [RIP+.L_43b180]
            add RAX,R8
            movzx EAX,BYTE PTR [RAX+RSI*1]
            shl RAX,4
            mov RSI,RAX
            lea RAX,QWORD PTR [RIP+.L_43b400]
            add RAX,RSI
            cmp BYTE PTR [RAX+RDI*1],0
            je .L_435e20

            cmp QWORD PTR [RSP+24],0
            mov R12,R14
            je .L_4369c3

            mov RAX,QWORD PTR [RSP+88]
            mov RBX,QWORD PTR [RSP+40]
            add RAX,RBX
            cmp R13,RAX
            jae .L_436686

            mov RAX,RBX
            sub RAX,QWORD PTR [R14]
            mov RBX,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [R14+16]
            mov RDI,R14
            mov QWORD PTR [R14+8],RAX
            mov RAX,QWORD PTR [RSP+16]
            add RSI,RBX
            imul RAX,QWORD PTR [RSP+72]
            add RSI,RAX
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov RAX,QWORD PTR [R14]
            mov RDI,QWORD PTR [R14+8]
            add RDI,RAX
            sub RAX,RBX
            add RAX,QWORD PTR [R14+16]
            mov QWORD PTR [RSP+40],RDI
            mov R13,RAX
.L_436686:

            cmp DWORD PTR [RSP+56],2
            je .L_4366e7

            jle .L_4369b3

            mov EAX,DWORD PTR [RSP+56]
            cmp EAX,3
            je .L_4366c6

            cmp EAX,4
            jne .L_435d6e

            mov RBX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RBX]
            mov BYTE PTR [RDI],AL
            lea RAX,QWORD PTR [RBX+1]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RDI+1]
            mov QWORD PTR [RSP+40],RAX
.L_4366c6:

            mov RBX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RBX]
            mov BYTE PTR [RDI],AL
            lea RAX,QWORD PTR [RBX+1]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RDI+1]
            mov QWORD PTR [RSP+40],RAX
.L_4366e7:

            mov RBX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RBX]
            mov BYTE PTR [RDI],AL
            lea RAX,QWORD PTR [RBX+1]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RDI+1]
            mov QWORD PTR [RSP+40],RAX
.L_436708:

            mov RAX,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RSP+40]
            movzx EAX,BYTE PTR [RAX]
            mov BYTE PTR [RBX],AL
            lea RAX,QWORD PTR [RBX+1]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_435d6e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436728:

            mov QWORD PTR [RSP+40],R15
            jmp .L_436279
.L_436732:

            lea RAX,QWORD PTR [RIP+.L_433850]
            mov RSI,QWORD PTR [RSP+16]
            mov R12D,2
            mov QWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+108],2
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [RIP+.L_433820]
            mov DWORD PTR [RSP+100],4
            mov QWORD PTR [RSP+32],RAX
            jmp .L_435d23
.L_436773:

            sub RBP,QWORD PTR [R12]
            mov R14,QWORD PTR [RSP+64]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+16]
            add RSI,R14
            mov QWORD PTR [R12+8],RBP
            add RSI,RBX
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov RAX,QWORD PTR [R12]
            mov RBP,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+120]
            add RBP,RAX
            sub RAX,R14
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
            jmp .L_4362ab
.L_4367bd:

            mov R15,R12
.L_4367c0:

            mov RBX,QWORD PTR [RSP+40]
            mov RAX,RBX
            sub RAX,QWORD PTR [R15]
            cmp DWORD PTR [RSP+108],2
            mov QWORD PTR [R15+8],RAX
            mov BYTE PTR [RBX],0
            jne .L_4362f8

            mov RDX,QWORD PTR [R15]
            mov RAX,QWORD PTR [R15+8]
            mov BYTE PTR [RDX+RAX*1+1],0
            jmp .L_4362f8
.L_4367ee:

            mov EDX,3739835469
            mov EAX,EBP
            mov R12,R14
            mul EDX
            mov RBX,QWORD PTR [RSP+16]
            mov R15,QWORD PTR [RSP+40]
            imul RBX,QWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+64]
            shr EDX,9
            add EDX,4352
            mov DWORD PTR [RSP+120],EDX
            jmp .L_436861
.L_43681e:

            mov RSI,QWORD PTR [R12+16]
            mov RCX,R15
            sub RCX,QWORD PTR [R12]
            mov RDI,R12
            add RSI,R14
            add RSI,RBX
            mov QWORD PTR [R12+8],RCX
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov RAX,QWORD PTR [R12]
            mov R15,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+120]
            add R15,RAX
            sub RAX,R14
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
.L_436861:

            mov RSI,R13
            mov RDI,R15
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R15
            call RAX

            test RAX,RAX
            je .L_43681e

            mov R14,R15
            mov EDX,3739835469
            mov ESI,613566757
            add R14,RAX
            mov EAX,EBP
            mul EDX
            mov EAX,EDX
            mov EDX,EBP
            shr EAX,9
            imul EAX,EAX,588
            sub EDX,EAX
            shr EDX,2
            mov EAX,EDX
            mul ESI
            add EDX,4449
            mov DWORD PTR [RSP+120],EDX
            jmp .L_4368f1
.L_4368ac:

            sub R14,QWORD PTR [R12]
            mov R15,QWORD PTR [RSP+64]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+16]
            add RSI,R15
            mov QWORD PTR [R12+8],R14
            add RSI,RBX
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov RAX,QWORD PTR [R12]
            mov R14,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+120]
            add R14,RAX
            sub RAX,R15
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
.L_4368f1:

            mov RSI,R13
            mov RDI,R14
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,R14
            call RAX

            test RAX,RAX
            je .L_4368ac

            mov EDX,EBP
            mov RSI,RAX
            mov EDI,613566757
            shr EDX,2
            mov EAX,EDX
            mul EDI
            imul EDX,EDX,28
            sub EBP,EDX
            mov EDX,EBP
            lea RBP,QWORD PTR [R14+RSI*1]
            add EDX,4519
            cmp EDX,4519
            mov QWORD PTR [RSP+40],RBP
            je .L_435d6e

            mov DWORD PTR [RSP+120],EDX
            jmp .L_436984
.L_43693f:

            sub RBP,QWORD PTR [R12]
            mov R14,QWORD PTR [RSP+64]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+16]
            add RSI,R14
            mov QWORD PTR [R12+8],RBP
            add RSI,RBX
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov RAX,QWORD PTR [R12]
            mov RBP,QWORD PTR [R12+8]
            mov EDX,DWORD PTR [RSP+120]
            add RBP,RAX
            sub RAX,R14
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
.L_436984:

            mov RSI,R13
            mov RDI,RBP
            mov RAX,QWORD PTR [RSP+80]
            sub RSI,RBP
            call RAX

            test RAX,RAX
            je .L_43693f
.L_436999:

            add RBP,RAX
            mov QWORD PTR [RSP+40],RBP
            jmp .L_435d6e
.L_4369a6:

            mov R15,R14
            jmp .L_4367c0
.L_4369ae:

            call __stack_chk_fail@PLT
.L_4369b3:

            cmp DWORD PTR [RSP+56],1
            je .L_436708

            jmp .L_435d6e
.L_4369c3:

            mov RBX,QWORD PTR [RSP+16]
            mov RBP,QWORD PTR [RSP+40]
            imul RBX,QWORD PTR [RSP+72]
.L_4369d3:

            mov RSI,R13
            mov EDX,DWORD PTR [RSP+120]
            mov RDI,RBP
            sub RSI,RBP
            mov RAX,QWORD PTR [RSP+80]
            call RAX

            test RAX,RAX
            jne .L_436999

            sub RBP,QWORD PTR [R12]
            mov R14,QWORD PTR [RSP+64]
            mov RDI,R12
            mov RSI,QWORD PTR [R12+16]
            add RSI,R14
            mov QWORD PTR [R12+8],RBP
            add RSI,RBX
            call .L_4342f0

            test RAX,RAX
            je .L_4362f0

            mov RAX,QWORD PTR [R12]
            mov RBP,QWORD PTR [R12+8]
            add RBP,RAX
            sub RAX,R14
            add RAX,QWORD PTR [R12+16]
            mov R13,RAX
            jmp .L_4369d3
.L_436a2f:

            nop
.L_436a30:

            push R14
            push R13
            lea R14,QWORD PTR [RDX+RDX*1+2]
            push R12
            mov R12,RSI
            push RBP
            push RBX
.L_436a40:

            mov RSI,QWORD PTR [RDI+8]
            mov RBX,RDI
            mov RBP,RDX
            mov R13D,ECX
            add RSI,R14
            call .L_4342f0

            test RAX,RAX
            je .L_436b04

            mov RDX,QWORD PTR [RBX]
            mov R9,QWORD PTR [RBX+8]
            add R9,RDX
            test RBP,RBP
            je .L_436b00

            xor ESI,ESI
            xor EAX,EAX
            mov ECX,4294967293
            mov EDX,4294967295
            jmp .L_436a9a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436a88:

            mov BYTE PTR [R9+RSI*2],R8B
            mov BYTE PTR [R9+RSI*2+1],R10B
            add RSI,1
            cmp RBP,RSI
            je .L_436ad2
.L_436a9a:

            movsx EDI,BYTE PTR [R12+RSI*1]
            mov R10D,ECX
            cmp EDI,127
            cmovbe R10D,EDI
            cmp EDI,128
            sbb R8D,R8D
            cmp EDI,127
            cmova EAX,EDX
            test R13D,R13D
            not R8D
            jne .L_436a88

            mov BYTE PTR [R9+RSI*2],R10B
            mov BYTE PTR [R9+RSI*2+1],R8B
            add RSI,1
            cmp RBP,RSI
            jne .L_436a9a
.L_436ad2:

            mov RDX,QWORD PTR [RBX]
            lea R9,QWORD PTR [R9+R14*1-2]
.L_436ada:

            mov RCX,R9
            sub RCX,RDX
            mov QWORD PTR [RBX+8],RCX
            mov BYTE PTR [R9],0
            mov RCX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RBX+8]
            mov BYTE PTR [RCX+RDX*1+1],0
.L_436af4:

            pop RBX
.L_436af5:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_436b00:

            xor EAX,EAX
            jmp .L_436ada
.L_436b04:

            mov EAX,4294967295
            jmp .L_436af4
.L_436b0b:

            nop
            nop
            nop
            nop
            nop
.L_436b10:

            xor ECX,ECX
            jmp .L_436a30
.L_436b17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436b20:

            mov ECX,1
            jmp .L_436a30
.L_436b2a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_436b30:

            push R15
            push R14
            mov R15,RCX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,88
.L_436b47:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+36]
            mov QWORD PTR [RSP],RDX
            mov ECX,EAX
            and ECX,5120
            cmp ECX,1
            sbb RDI,RDI
            add RDI,2
            cmp ECX,1
            sbb ECX,ECX
            xor EBP,EBP
            mov QWORD PTR [RSP+16],RDI
            add ECX,2
            test AH,40
            mov RAX,QWORD PTR [RBX+8]
            setne BPL
            mov DWORD PTR [RSP+28],ECX
            add EBP,1
            lea RSI,QWORD PTR [RAX+RDX*2]
            add RSI,RDI
            mov RDI,RBX
            call .L_4342f0

            test RAX,RAX
            mov RDX,QWORD PTR [RSP]
            je .L_436e00

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RBX+16]
            lea R13,QWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RBX]
            mov R14,QWORD PTR [R15+40]
            movsxd RBP,EBP
            mov QWORD PTR [RSP+40],R12
            lea R12,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+48],RDX
            sub RDI,RAX
            mov DWORD PTR [RSP+8],0
            add RCX,RAX
            mov RAX,RDI
            sub RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
.L_436c00:

            cmp RBP,RDX
            ja .L_436ca0
.L_436c09:

            mov RDX,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RSP+40]
            mov R8,R13
            mov RCX,R12
            mov RDI,R14
            call iconv@PLT

            cmp RAX,-1
            jne .L_436ca0

            call __errno_location@PLT

            mov EDX,DWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP+56]
            cmp EDX,84
            je .L_436cf0

            cmp EDX,22
            je .L_436cf0

            sub RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RSP+48]
            mov RDI,RBX
            mov QWORD PTR [RBX+8],RAX
            mov RAX,QWORD PTR [RBX+16]
            lea RSI,QWORD PTR [RAX+RDX*2]
            call .L_4342f0

            test RAX,RAX
            je .L_436e00

            mov RAX,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RBX+16]
            add RDX,RAX
            sub RDI,RAX
            mov QWORD PTR [RSP+56],RDX
            mov RDX,QWORD PTR [RSP+48]
            mov RAX,RDI
            sub RAX,QWORD PTR [RSP+16]
            cmp RBP,RDX
            mov QWORD PTR [RSP+64],RAX
            jbe .L_436c09

            nop
            nop
            nop
            nop
            nop
            nop
.L_436ca0:

            mov RAX,QWORD PTR [RSP+56]
            mov RDX,RAX
            sub RDX,QWORD PTR [RBX]
            cmp DWORD PTR [RSP+28],2
            mov QWORD PTR [RBX+8],RDX
            mov BYTE PTR [RAX],0
            jne .L_436cc5

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            mov BYTE PTR [RDX+RAX*1+1],0
.L_436cc5:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+8]
            jne .L_436e0d

            add RSP,88
.L_436ce1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
.L_436cf0:

            mov EDX,DWORD PTR [R15+36]
            test DH,21
            je .L_436d60

            mov ESI,EDX
            xor ECX,ECX
            and ESI,256
            setne CL
            add RCX,2
            cmp QWORD PTR [RSP+64],RCX
            jb .L_436d78

            test ESI,ESI
            jne .L_436ddf
.L_436d19:

            and EDX,1024
            cmp EDX,1
            sbb EDX,EDX
            and DX,510
            sub DX,513
            mov WORD PTR [RAX],DX
.L_436d31:

            add QWORD PTR [RSP+56],RCX
            sub QWORD PTR [RSP+64],RCX
.L_436d3b:

            mov RDX,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+8],4294967295
            add QWORD PTR [RSP+40],RBP
            sub RDX,RBP
            mov QWORD PTR [RSP+48],RDX
            jmp .L_436c00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436d60:

            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+56],RDX
            mov BYTE PTR [RAX],63
            sub QWORD PTR [RSP+64],1
            jmp .L_436d3b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436d78:

            mov RSI,QWORD PTR [RSP+16]
            sub RAX,QWORD PTR [RBX]
            mov RDI,RBX
            imul RSI,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RBX+8],RAX
            add RSI,QWORD PTR [RBX+16]
            add RSI,RCX
            call .L_4342f0

            test RAX,RAX
            je .L_436e00

            mov RDX,QWORD PTR [RBX+8]
            mov RCX,QWORD PTR [RBX+16]
            mov RAX,QWORD PTR [RBX]
            sub RCX,RDX
            add RAX,RDX
            mov RDX,RCX
            sub RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+56],RAX
            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+64],RDX
            mov EDX,DWORD PTR [R15+36]
            mov ESI,EDX
            and ESI,256
            test ESI,ESI
            je .L_436d19
.L_436ddf:

            movzx EDX,WORD PTR [RIP+.L_4383c0]
            movzx EDI,BYTE PTR [RIP+.L_450f60-101278]
            mov WORD PTR [RAX],DX
            mov BYTE PTR [RAX+2],DIL
            jmp .L_436d31
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436e00:

            mov DWORD PTR [RSP+8],4294967295
            jmp .L_436cc5
.L_436e0d:

            call __stack_chk_fail@PLT
.L_436e12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_436e20:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_436e31:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RCX+36]
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+16],RSI
            mov EDX,EAX
            and EDX,2048
            test AH,4
            jne .L_436f90

            test AH,16
            je .L_436fd8

            test EDX,EDX
            mov EBP,2
            lea R12,QWORD PTR [RIP+.L_4338c0]
            mov DWORD PTR [RSP+60],2
            je .L_436fac
.L_436e84:

            lea RAX,QWORD PTR [RIP+.L_433820]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+40],1
            mov QWORD PTR [RSP+32],RAX
.L_436e9e:

            add RSI,RBP
            add RSI,QWORD PTR [R14+8]
            mov RDI,R14
            call .L_4342f0

            test RAX,RAX
            je .L_437028

            mov RBX,QWORD PTR [R14]
            mov R15,QWORD PTR [R14+8]
            lea RAX,QWORD PTR [RSP+68]
            mov DWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+24],RAX
            mov RAX,R14
            add R15,RBX
            sub RBX,RBP
            add RBX,QWORD PTR [R14+16]
            mov R14,R15
            mov R15,RAX
.L_436ee2:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RSP+32]
            call RAX

            test EAX,EAX
            je .L_4370b0

            jns .L_436f0c

            neg EAX
            mov DWORD PTR [RSP+56],4294967295
.L_436f0c:

            movsxd RCX,EAX
            sub QWORD PTR [RSP+8],RCX
            mov R13,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+48],RCX
            imul R13,RAX
            jmp .L_436f63
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_436f30:

            sub R14,QWORD PTR [R15]
            mov RSI,QWORD PTR [R15+16]
            mov RDI,R15
            add RSI,RBP
            add RSI,R13
            mov QWORD PTR [R15+8],R14
            call .L_4342f0

            test RAX,RAX
            je .L_437028

            mov RBX,QWORD PTR [R15]
            mov R14,QWORD PTR [R15+8]
            add R14,RBX
            sub RBX,RBP
            add RBX,QWORD PTR [R15+16]
.L_436f63:

            mov RSI,RBX
            mov EDX,DWORD PTR [RSP+68]
            mov RDI,R14
            sub RSI,R14
            call R12

            test RAX,RAX
            je .L_436f30

            mov RDX,QWORD PTR [RSP+48]
            add R14,RAX
            add QWORD PTR [RSP+16],RDX
            jmp .L_436ee2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436f90:

            lea R12,QWORD PTR [RIP+.L_433850]
            mov EBP,2
            mov DWORD PTR [RSP+60],2
.L_436fa4:

            test EDX,EDX
            jne .L_436e84
.L_436fac:

            test AH,32
            je .L_437070

            lea RAX,QWORD PTR [RIP+.L_4337f0]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+40],1
            mov QWORD PTR [RSP+32],RAX
            jmp .L_436e9e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_436fd8:

            test AH,1
            jne .L_437090

            test EDX,EDX
            jne .L_4370e3

            test AH,32
            je .L_437057

            lea RAX,QWORD PTR [RIP+.L_4337f0]
            mov RSI,QWORD PTR [RSP+8]
            mov EBP,2
            mov QWORD PTR [RSP+40],1
            lea R12,QWORD PTR [RIP+.L_4338c0]
            mov DWORD PTR [RSP+60],2
            mov QWORD PTR [RSP+32],RAX
            jmp .L_436e9e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437028:

            mov DWORD PTR [RSP+56],4294967295
.L_437030:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+56]
            jne .L_437116

            add RSP,88
.L_43704c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_437057:

            lea R12,QWORD PTR [RIP+.L_433240]
            mov EBP,1
            mov DWORD PTR [RSP+60],1
            nop
            nop
            nop
            nop
            nop
.L_437070:

            mov RSI,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RIP+.L_433650]
            mov QWORD PTR [RSP+40],RBP
            mov QWORD PTR [RSP+32],RAX
            imul RSI,RBP
            jmp .L_436e9e
          .byte 0x90
.L_437090:

            mov EBP,1
            lea R12,QWORD PTR [RIP+.L_433240]
            mov DWORD PTR [RSP+60],1
            jmp .L_436fa4
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4370b0:

            mov RAX,R15
            mov R15,R14
            mov R14,RAX
            mov RAX,R15
            sub RAX,QWORD PTR [R14]
            cmp DWORD PTR [RSP+60],2
            mov QWORD PTR [R14+8],RAX
            mov BYTE PTR [R15],0
            jne .L_437030

            mov RDX,QWORD PTR [R14]
            mov RAX,QWORD PTR [R14+8]
            mov BYTE PTR [RDX+RAX*1+1],0
            jmp .L_437030
.L_4370e3:

            lea RAX,QWORD PTR [RIP+.L_433820]
            mov RSI,QWORD PTR [RSP+8]
            mov EBP,2
            mov QWORD PTR [RSP+40],1
            lea R12,QWORD PTR [RIP+.L_433850]
            mov DWORD PTR [RSP+60],2
            mov QWORD PTR [RSP+32],RAX
            jmp .L_436e9e
.L_437116:

            call __stack_chk_fail@PLT
.L_43711b:

            nop
            nop
            nop
            nop
            nop
.L_437120:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov R13,RDI
            mov RBP,RDX
            sub RSP,72
.L_437137:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+48],0
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_4342f0

            test RAX,RAX
            je .L_437280

            mov R15,QWORD PTR [R13+16]
            mov R14,QWORD PTR [R13]
            mov RBX,QWORD PTR [R13+8]
            call __ctype_get_mb_cur_max@PLT

            sub R15,1
            sub R15,RAX
            add RBX,R14
            add R14,R15
            test RBP,RBP
            je .L_437248

            lea RAX,QWORD PTR [RSP+44]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_4371e2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4371a8:

            test R15D,R15D
            mov ESI,DWORD PTR [RSP+44]
            jns .L_4371b9

            neg R15D
            mov ESI,63
.L_4371b9:

            movsxd RDX,R15D
            mov RDI,RBX
            add R12,RDX
            sub RBP,RDX
            mov RDX,QWORD PTR [RSP+16]
            call wcrtomb@PLT

            cmp EAX,-1
            je .L_437280

            cdqe 
            add RBX,RAX
            test RBP,RBP
            je .L_437248
.L_4371e2:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,RBP
            mov RSI,R12
            call .L_4333e0

            test EAX,EAX
            mov R15D,EAX
            je .L_437248

            cmp RBX,R14
            jb .L_4371a8

            sub RBX,QWORD PTR [R13]
            mov RDI,R13
            lea RSI,QWORD PTR [RBX+RBP*2+1]
            mov QWORD PTR [R13+8],RBX
            call .L_4342f0

            test RAX,RAX
            je .L_437280

            mov RCX,QWORD PTR [R13]
            mov R14,QWORD PTR [R13+16]
            mov RBX,RCX
            mov QWORD PTR [RSP+24],RCX
            add RBX,QWORD PTR [R13+8]
            call __ctype_get_mb_cur_max@PLT

            mov RCX,QWORD PTR [RSP+24]
            sub R14,1
            sub R14,RAX
            add R14,RCX
            jmp .L_4371a8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437248:

            mov RAX,RBX
            sub RAX,QWORD PTR [R13]
            mov QWORD PTR [R13+8],RAX
            mov BYTE PTR [RBX],0
            xor EAX,EAX
.L_437258:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_437287

            add RSP,72
.L_43726c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437280:

            mov EAX,4294967295
            jmp .L_437258
.L_437287:

            call __stack_chk_fail@PLT
.L_43728c:

            nop
            nop
            nop
            nop
.L_437290:

            sub RSP,8
            xor EAX,EAX
            test RDX,RDX
            je .L_4372b7

            cmp BYTE PTR [RSI],0
            jne .L_4372ae

            jmp .L_4372b7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4372a8:

            cmp BYTE PTR [RSI+RAX*1],0
            je .L_4372b7
.L_4372ae:

            add RAX,1
            cmp RDX,RAX
            jne .L_4372a8
.L_4372b7:

            mov RDX,RAX
            call .L_4343b0

            test RAX,RAX
            je .L_4372c9

            add RSP,8
            ret 
.L_4372c9:

            call .L_402db5
.L_4372ce:

            nop
            nop
.L_4372d0:

            sub RSP,8
            xor EAX,EAX
            test RDX,RDX
            je .L_4372f8

            mov R8D,DWORD PTR [RSI]
            test R8D,R8D
            jne .L_4372ef

            jmp .L_4372f8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4372e8:

            mov ECX,DWORD PTR [RSI+RAX*4]
            test ECX,ECX
            je .L_4372f8
.L_4372ef:

            add RAX,1
            cmp RDX,RAX
            jne .L_4372e8
.L_4372f8:

            mov RDX,RAX
            call .L_434440

            test RAX,RAX
            je .L_43730a

            add RSP,8
            ret 
.L_43730a:

            call .L_402db5
.L_43730f:

            nop
.L_437310:

            mov EDX,16777216
            jmp .L_437290
.L_43731a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_437320:

            mov EDX,16777216
            jmp .L_4372d0
.L_437327:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437330:

            sub RSP,24
            mov EDX,1
            mov BYTE PTR [RSP+12],SIL
            lea RSI,QWORD PTR [RSP+12]
            call .L_4343b0

            test RAX,RAX
            je .L_437352

            add RSP,24
            ret 
.L_437352:

            call .L_402db5
.L_437357:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437360:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,32
.L_437375:

            mov R14D,DWORD PTR [RCX+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test R14D,R14D
            jne .L_437438

            test RDX,RDX
            movsx ESI,BYTE PTR [RSI]
            je .L_4373fc

            test SIL,SIL
            mov R13,RCX
            mov EBP,4294967295
            jne .L_4373e3

            jmp .L_4373fc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4373b0:

            test BYTE PTR [R13+37],1
            je .L_437420

            lea RSI,QWORD PTR [RIP+.L_4383c0]
            mov EDX,3
            mov RDI,R12
            call .L_4343b0

            test RAX,RAX
            je .L_437498

            mov R14D,EBP
.L_4373d7:

            add RBX,1
            movsx ESI,BYTE PTR [RBX]
            test SIL,SIL
            je .L_4373fc
.L_4373e3:

            test SIL,SIL
            js .L_4373b0

            add RBX,1
            mov RDI,R12
            call .L_437330

            movsx ESI,BYTE PTR [RBX]
            test SIL,SIL
            jne .L_4373e3
.L_4373fc:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_4374a9

            add RSP,32
.L_437417:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_437420:

            mov ESI,63
            mov RDI,R12
            mov R14D,EBP
            call .L_437330

            jmp .L_4373d7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437438:

            call .L_4343b0

            test RAX,RAX
            je .L_437484

            test RBP,RBP
            mov QWORD PTR [RSP+16],0
            lea R13,QWORD PTR [RSP+16]
            lea R12,QWORD PTR [RSP+12]
            jne .L_43746d

            jmp .L_437490
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437460:

            test RAX,RAX
            je .L_437490

            add RBX,RAX
            sub RBP,RAX
            je .L_437490
.L_43746d:

            mov RCX,R13
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call mbrtowc@PLT

            cmp RAX,-2
            jb .L_437460
.L_437484:

            mov R14D,4294967295
            jmp .L_4373fc
          .byte 0x90
.L_437490:

            xor R14D,R14D
            jmp .L_4373fc
.L_437498:

            lea RSI,QWORD PTR [RIP+.L_450f60-101672]
            mov EDI,1
            call .L_43f6e0
.L_4374a9:

            call __stack_chk_fail@PLT
.L_4374ae:

            nop
            nop
.L_4374b0:

            sub RSP,24
            mov EDX,1
            mov DWORD PTR [RSP+12],ESI
            lea RSI,QWORD PTR [RSP+12]
            call .L_434440

            test RAX,RAX
            je .L_4374d1

            add RSP,24
            ret 
.L_4374d1:

            lea RSI,QWORD PTR [RIP+.L_450f60-101672]
            mov EDI,1
            call .L_43f6e0
.L_4374e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4374f0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            sub RSP,40
.L_437507:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+16],0
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            shl RSI,2
            call .L_4342f0

            test RAX,RAX
            je .L_437650

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            lea R13,QWORD PTR [RSP+16]
            mov R14,RBP
            mov DWORD PTR [RSP+12],0
            lea R15,QWORD PTR [RAX+RDX*4]
.L_437556:

            cmp BYTE PTR [R12],0
            je .L_4375e0
.L_437561:

            test R14,R14
            je .L_4375e0

            test RBP,RBP
            jne .L_4375a8

            mov RAX,R15
            sub RAX,QWORD PTR [RBX]
            mov RDI,RBX
            sar RAX,2
            lea RSI,QWORD PTR [R14+RAX*1+1]
            mov QWORD PTR [RBX+8],RAX
            mov DWORD PTR [R15],0
            shl RSI,2
            call .L_4342f0

            test RAX,RAX
            je .L_437650

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            mov RBP,R14
            lea R15,QWORD PTR [RAX+RDX*4]
.L_4375a8:

            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,R15
            call mbrtowc@PLT

            cmp RAX,-2
            jae .L_437620

            test RAX,RAX
            je .L_4375e0

            cmp R14,RAX
            jb .L_4375e0

            add R12,RAX
            add R15,4
            sub RBP,1
            sub R14,RAX
            cmp BYTE PTR [R12],0
            jne .L_437561

            nop
            nop
.L_4375e0:

            mov RAX,R15
            sub RAX,QWORD PTR [RBX]
            sar RAX,2
            mov QWORD PTR [RBX+8],RAX
            mov DWORD PTR [R15],0
.L_4375f5:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+12]
            jne .L_43765a

            add RSP,40
.L_43760d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437620:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],84
            je .L_437638

            mov DWORD PTR [RSP+12],4294967295
            jmp .L_4375e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437638:

            add R12,1
            sub R14,1
            mov DWORD PTR [RSP+12],4294967295
            jmp .L_437556
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437650:

            mov DWORD PTR [RSP+12],4294967295
            jmp .L_4375f5
.L_43765a:

            call __stack_chk_fail@PLT
.L_43765f:

            nop
.L_437660:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            sub RSP,56
.L_437677:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSP+32],0
            lea RSI,QWORD PTR [RDX+RAX*1+1]
            call .L_4342f0

            test RAX,RAX
            je .L_437808

            mov R13,QWORD PTR [RBP+16]
            mov R12,QWORD PTR [RBP]
            mov R15,QWORD PTR [RBP+8]
            call __ctype_get_mb_cur_max@PLT

            mov EDX,DWORD PTR [R14]
            sub R13,1
            sub R13,RAX
            add R15,R12
            add R12,R13
            test EDX,EDX
            je .L_437821

            test RBX,RBX
            je .L_437821

            lea RAX,QWORD PTR [RSP+32]
            lea R13,QWORD PTR [RBX+RBX*1]
            mov DWORD PTR [RSP+28],0
            mov QWORD PTR [RSP+8],RAX
            jmp .L_437712
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4376f8:

            movsxd RDX,EAX
            mov EAX,DWORD PTR [R14]
            sub RBX,1
            add R15,RDX
            sub R13,2
            test EAX,EAX
            je .L_437770
.L_43770d:

            test RBX,RBX
            je .L_437770
.L_437712:

            cmp R15,R12
            jae .L_4377b0
.L_43771b:

            add R14,4
            mov ESI,DWORD PTR [R14-4]
            mov RDX,QWORD PTR [RSP+8]
            mov RDI,R15
            call wcrtomb@PLT

            cmp EAX,-1
            jne .L_4376f8

            mov QWORD PTR [RSP+16],RAX
            call __errno_location@PLT

            cmp DWORD PTR [RAX],84
            mov RDX,QWORD PTR [RSP+16]
            jne .L_437818

            mov BYTE PTR [R15],63
            mov EAX,DWORD PTR [R14]
            add R15,1
            sub RBX,1
            sub R13,2
            mov DWORD PTR [RSP+28],EDX
            test EAX,EAX
            jne .L_43770d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437770:

            mov RAX,R15
            sub RAX,QWORD PTR [RBP]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [R15],0
.L_43777f:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+28]
            jne .L_43782e

            add RSP,56
.L_43779b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4377b0:

            mov RAX,R15
            sub RAX,QWORD PTR [RBP]
            mov RDI,RBP
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [R15],0
            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [R13+RAX*1+1]
            call .L_4342f0

            test RAX,RAX
            je .L_437808

            mov RDX,QWORD PTR [RBP]
            mov R12,QWORD PTR [RBP+16]
            mov R15,RDX
            mov QWORD PTR [RSP+16],RDX
            add R15,QWORD PTR [RBP+8]
            call __ctype_get_mb_cur_max@PLT

            mov RDX,QWORD PTR [RSP+16]
            sub R12,1
            sub R12,RAX
            add R12,RDX
            jmp .L_43771b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437808:

            mov DWORD PTR [RSP+28],4294967295
            jmp .L_43777f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437818:

            mov DWORD PTR [RSP+28],EDX
            jmp .L_437770
.L_437821:

            mov DWORD PTR [RSP+28],0
            jmp .L_437770
.L_43782e:

            call __stack_chk_fail@PLT
.L_437833:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437840:

            cmp EDX,1
            push R12
            push RBP
            push RBX
            sbb EBX,EBX
            mov R12,RSI
            and EBX,4294967292
            mov RBP,RDI
            add EBX,5
            call .L_434220

            mov ECX,EBX
            mov RDX,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            mov RSI,RAX
            jmp .L_433db0
.L_43786e:

            nop
            nop
.L_437870:

            cmp EDX,1
            push R12
            push RBP
            push RBX
            sbb EBX,EBX
            mov RBP,RDI
            and EBX,4294967292
            mov R12,RSI
            add EBX,6
            call .L_434220

            mov ECX,EBX
            mov RSI,R12
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            mov RDX,RAX
            jmp .L_433db0
.L_43789e:

            nop
            nop
.L_4378a0:

            xor EAX,EAX
            ret 
.L_4378a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4378b0:

            xor EAX,EAX
            ret 
.L_4378b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4378c0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+104]
            test RDI,RDI
            je .L_4378e8

            nop
            nop
            nop
            nop
            nop
            nop
.L_4378d8:

            mov RBX,QWORD PTR [RDI]
            call .L_433380

            test RBX,RBX
            mov RDI,RBX
            jne .L_4378d8
.L_4378e8:

            mov RDI,QWORD PTR [RBP+88]
            mov QWORD PTR [RBP+104],0
            call free@PLT

            mov QWORD PTR [RBP+88],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_437908:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437910:

            test BYTE PTR [RDI+36],1
            mov RAX,QWORD PTR [RDI+16]
            cmove RAX,QWORD PTR [RDI+8]
            ret 
.L_43791e:

            nop
            nop
.L_437920:

            cmp ESI,2
            je .L_437958

            cmp ESI,4
            jne .L_437950

            mov EAX,DWORD PTR [RDI+36]
            test AL,8
            jne .L_437940

            test AH,42
            je .L_437940

            test AH,21
            je .L_437944

            nop
            nop
            nop
            nop
            nop
.L_437940:

            test AL,128
            je .L_437970
.L_437944:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437950:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437958:

            mov EAX,DWORD PTR [RDI+36]
            test AL,64
            jne .L_437944

            and AL,127
            or EAX,64
            mov DWORD PTR [RDI+36],EAX
            jmp .L_433930
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437970:

            and EAX,4294967231
            or AL,128
            mov DWORD PTR [RDI+36],EAX
            jmp .L_433930
.L_43797d:

            nop
            nop
            nop
.L_437980:

            test RSI,RSI
            push R12
            push RBP
            mov RBP,RCX
            push RBX
.L_43798a:

            mov RBX,RDI
            je .L_4379e0

            test RDX,RDX
            je .L_4379e0

            test RCX,RCX
            je .L_437a30

            mov ECX,DWORD PTR [RCX+36]
            test CH,40
            je .L_437a70

            xor EAX,EAX
            shr RDX,1
            je .L_437b0d

            nop
            nop
            nop
            nop
.L_4379b8:

            cmp BYTE PTR [RSI+RAX*2],0
            jne .L_4379c9

            cmp BYTE PTR [RSI+RAX*2+1],0
            je .L_437b08
.L_4379c9:

            add RAX,1
            cmp RDX,RAX
            jne .L_4379b8

            lea RAX,QWORD PTR [RDX+RDX*1]
            jmp .L_437a98
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4379e0:

            test RBP,RBP
            mov RSI,QWORD PTR [RBX+8]
            je .L_437a40

            mov ECX,DWORD PTR [RBP+36]
.L_4379ec:

            and CH,20
            je .L_437a40

            add RSI,2
            mov RDI,RBX
            call .L_4342f0

            test RAX,RAX
            je .L_437b3d

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            xor R12D,R12D
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RBX]
            mov BYTE PTR [RDX+RAX*1+1],0
            mov EAX,R12D
            pop RBX
.L_437a24:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437a30:

            xor EAX,EAX
            cmp BYTE PTR [RSI],0
            jne .L_437a80

            mov RSI,QWORD PTR [RBX+8]
            nop
            nop
            nop
            nop
            nop
.L_437a40:

            add RSI,1
            mov RDI,RBX
            call .L_4342f0

            test RAX,RAX
            je .L_437b3d

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [RBX+8]
            xor R12D,R12D
            mov BYTE PTR [RDX+RAX*1],0
.L_437a63:

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437a70:

            cmp BYTE PTR [RSI],0
            je .L_437b0d

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_437a80:

            add RAX,1
            cmp RDX,RAX
            jbe .L_437a8f

            cmp BYTE PTR [RSI+RAX*1],0
            jne .L_437a80
.L_437a8f:

            test RBP,RBP
            je .L_437b20
.L_437a98:

            cmp DWORD PTR [RBP+96],1
            mov R8,QWORD PTR [RBP+80]
            jle .L_437b00

            mov QWORD PTR [RBP+64],0
            lea RDI,QWORD PTR [RBP+56]
            mov RCX,RBP
            mov RDX,RAX
            call R8

            test EAX,EAX
            mov R12D,EAX
            je .L_437ad4

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_437a63

            test R12D,R12D
            mov EAX,0
            cmovg R12D,EAX
.L_437ad4:

            mov RSI,QWORD PTR [RBP+56]
            mov RAX,QWORD PTR [RBP+64]
            mov R8,QWORD PTR [RBP+88]
.L_437ae0:

            mov RCX,RBP
            mov RDI,RBX
            mov RDX,RAX
            call R8

            cmp R12D,EAX
            cmovg R12D,EAX
            mov EAX,R12D
            pop RBX
.L_437af7:

            pop RBP
            pop R12
            ret 

            nop
            nop
            nop
            nop
            nop
.L_437b00:

            xor R12D,R12D
            jmp .L_437ae0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437b08:

            add RAX,RAX
            jne .L_437a98
.L_437b0d:

            mov RSI,QWORD PTR [RBX+8]
            jmp .L_4379ec
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437b20:

            mov RDX,RAX
            mov RDI,RBX
            xor R12D,R12D
            call .L_4343b0

            test RAX,RAX
            sete R12B
            neg R12D
            jmp .L_437a63
.L_437b3d:

            mov R12D,4294967295
            jmp .L_437a63
.L_437b48:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437b50:

            mov QWORD PTR [RDI+8],0
            jmp .L_437980
.L_437b5d:

            nop
            nop
            nop
.L_437b60:

            push RBX

            mov RBX,RDI
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+64],0
            mov RDI,QWORD PTR [RDI+48]
            call free@PLT

            mov RDI,QWORD PTR [RBX]
            mov QWORD PTR [RBX+48],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            call free@PLT

            mov RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+40],0
            call free@PLT

            mov RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+80],0
            mov QWORD PTR [RBX+88],0
            call free@PLT

            mov QWORD PTR [RBX+72],0
            mov DWORD PTR [RBX+96],0
            pop RBX

            ret 
.L_437bef:

            nop
.L_437bf0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RSI+96]
            mov QWORD PTR [RDI+8],0
            mov DWORD PTR [RDI+96],EAX
            call .L_434410

            lea RSI,QWORD PTR [RBP+24]
            lea RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+32],0
            call .L_434410

            mov QWORD PTR [RBX+56],0
            add RSP,8
            lea RSI,QWORD PTR [RBP+48]
            lea RDI,QWORD PTR [RBX+48]
            pop RBX
            pop RBP
            jmp .L_4344a0
.L_437c3f:

            nop
.L_437c40:

            mov EAX,DWORD PTR [RSI+96]
            test AL,2
            jne .L_437c58

            and EAX,1
            mov QWORD PTR [RDX],0
            jne .L_437c68

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437c58:

            mov RAX,QWORD PTR [RSI+24]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437c68:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,24
.L_437c7b:

            call .L_434220

            lea RDX,QWORD PTR [RIP+.L_438200]
            mov ECX,5
            mov RSI,RAX
            mov RDI,R12
            call .L_433db0

            test RAX,RAX
            mov R13,RAX
            je .L_437cf2

            mov RDX,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RBX+24]
            mov QWORD PTR [RBX+32],0
            mov RCX,RAX
            call .L_437980

            test R12,R12
            je .L_437ce0
.L_437cbf:

            test EAX,EAX
            jne .L_437cf2

            mov RDX,QWORD PTR [RBX+24]
            or DWORD PTR [RBX+96],2
            mov QWORD PTR [RBP],RDX
.L_437ccf:

            add RSP,24
.L_437cd3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437ce0:

            mov RDI,R13
            mov DWORD PTR [RSP+12],EAX
            call .L_433380

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_437cbf
.L_437cf2:

            mov EAX,4294967295
            jmp .L_437ccf
.L_437cf9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437d00:

            mov EAX,DWORD PTR [RSI+96]
            test AL,1
            jne .L_437d18

            and EAX,4
            mov QWORD PTR [RDX],0
            jne .L_437d28

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437d18:

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437d28:

            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,8
            mov QWORD PTR [RSI+8],0
            mov RDX,QWORD PTR [RSI+56]
            mov RSI,QWORD PTR [RSI+48]
            mov RDI,RBX
            call .L_437660

            mov RDX,QWORD PTR [RBX]
            test EAX,EAX
            mov QWORD PTR [RBP],RDX
            jne .L_437d62

            or DWORD PTR [RBX+96],1
.L_437d5b:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_437d62:

            mov EAX,4294967295
            jmp .L_437d5b
.L_437d69:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437d70:

            mov EAX,DWORD PTR [RSI+96]
            test AL,4
            jne .L_437d88

            and EAX,1
            mov QWORD PTR [RDX],0
            jne .L_437d98

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437d88:

            mov RAX,QWORD PTR [RSI+48]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437d98:

            push RBP
            push RBX
            lea RDI,QWORD PTR [RSI+48]
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,8
            mov QWORD PTR [RSI+56],0
            mov RDX,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            call .L_4374f0

            test EAX,EAX
            jne .L_437dd3

            mov RDX,QWORD PTR [RBX+48]
            or DWORD PTR [RBX+96],4
            mov QWORD PTR [RBP],RDX
.L_437dcc:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_437dd3:

            mov EAX,4294967295
            jmp .L_437dcc
.L_437dda:

            nop
            nop
            nop
            nop
            nop
            nop
.L_437de0:

            push R12
            push RBP
            mov RBP,RDX
            push RBX
            xor EAX,EAX
            mov RBX,RDI
            mov R12,RSI
            sub RSP,16
            mov EDX,DWORD PTR [RDI+96]
            and EDX,5
            cmp EDX,4
            je .L_437e90
.L_437e02:

            test BYTE PTR [RBX+96],1
            jne .L_437e30

            test RBP,RBP
            mov QWORD PTR [R12],0
            je .L_437e1d

            mov QWORD PTR [RBP],0
.L_437e1d:

            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437e30:

            test RCX,RCX
            mov RSI,QWORD PTR [RBX]
            je .L_437e70

            mov RDX,QWORD PTR [RBX+8]
            lea RDI,QWORD PTR [RBX+72]
            mov QWORD PTR [RBX+80],0
            call .L_437980

            mov RDX,QWORD PTR [RBX+72]
            test RBP,RBP
            mov QWORD PTR [R12],RDX
            je .L_437e1d

            mov RDX,QWORD PTR [RBX+80]
            mov QWORD PTR [RBP],RDX
            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437e70:

            xor EAX,EAX
            test RBP,RBP
            mov QWORD PTR [R12],RSI
            je .L_437e1d

            mov RDX,QWORD PTR [RBX+8]
            mov QWORD PTR [RBP],RDX
            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437e90:

            mov RDX,QWORD PTR [RDI+56]
            mov RSI,QWORD PTR [RDI+48]
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RSP+8],RCX
            call .L_437660

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+8]
            je .L_437ed8

            mov QWORD PTR [RSP+8],RCX
            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            mov EAX,4294967295
            je .L_437e1d

            mov RCX,QWORD PTR [RSP+8]
            jmp .L_437e02
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_437ed8:

            or DWORD PTR [RBX+96],1
            jmp .L_437e02
.L_437ee1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437ef0:

            test RSI,RSI
            je .L_437f40

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            mov RDI,RSI
            sub RSP,8
            call strlen@PLT

            mov DWORD PTR [RBX+96],1
            mov QWORD PTR [RBX+8],0
            mov RSI,RBP
            mov RDI,RBX
            mov RDX,RAX
            call .L_437290

            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+56],0
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_437f40:

            mov DWORD PTR [RDI+96],0
            xor EAX,EAX
            ret 
.L_437f4a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_437f50:

            test RSI,RSI
            je .L_437f88

            push RBX
            mov DWORD PTR [RDI+96],1
            mov RBX,RDI
            mov QWORD PTR [RDI+8],0
            call .L_437290

            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+56],0
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_437f88:

            mov DWORD PTR [RDI+96],0
            xor EAX,EAX
            ret 
.L_437f92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437fa0:

            push RBX
            xor EDX,EDX
            mov RBX,RDI
            sub RSP,16

            test RSI,RSI
            je .L_437fc4

            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            call wcslen@PLT

            mov RSI,QWORD PTR [RSP+8]
            mov RDX,RAX
.L_437fc4:

            lea RDI,QWORD PTR [RBX+48]
            mov DWORD PTR [RBX+96],4
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+56],0
            call .L_4372d0

            add RSP,16

            xor EAX,EAX
            pop RBX
            ret 
.L_437ff4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438000:

            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,8
.L_43800c:

            mov DWORD PTR [RDI+96],2
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+32],0
            mov RDI,RSI
            call strlen@PLT

            lea RDI,QWORD PTR [RBX+24]
            mov RSI,RBP
            mov RDX,RAX
            call .L_437290

            mov RDI,RBP
            call strlen@PLT

            add RSP,8
.L_43804e:

            pop RBX
            pop RBP
            ret 
.L_438051:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438060:

            sub RSP,8
            add RDI,48
            mov DWORD PTR [RDI+48],4
            mov QWORD PTR [RDI-40],0
            mov QWORD PTR [RDI-16],0
            mov QWORD PTR [RDI+8],0
            call .L_4372d0

            xor EAX,EAX
            add RSP,8
            ret 
.L_438093:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4380a0:

            test RSI,RSI
            je .L_4380d8

            push RBX
            mov QWORD PTR [RDI+8],0
            mov RBX,RDI
            mov QWORD PTR [RDI+56],0
            mov QWORD PTR [RDI+32],0
            call .L_437980

            xor EDX,EDX
            test EAX,EAX
            sete DL
            mov DWORD PTR [RBX+96],EDX
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4380d8:

            mov DWORD PTR [RDI+96],0
            xor EAX,EAX
            ret 
.L_4380e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4380f0:

            test RDX,RDX
            je .L_4381c0

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RDI,RDX
            mov RBX,RSI
            mov RBP,RDX
            sub RSP,24
.L_43810f:

            mov QWORD PTR [RSI+32],0
            call strlen@PLT

            lea RDI,QWORD PTR [RBX+24]
            mov RDX,RAX
            mov RSI,RBP
            call .L_437290

            mov RDI,R12
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+56],0
            mov DWORD PTR [RBX+96],2
            call .L_434220

            lea RSI,QWORD PTR [RIP+.L_438200]
            mov ECX,6
            mov RDX,RAX
            mov RDI,R12
            call .L_433db0

            test RAX,RAX
            mov R13,RAX
            je .L_4381e8

            mov RDI,RBP
            call strlen@PLT

            mov QWORD PTR [RBX+8],0
            mov RCX,R13
            mov RDX,RAX
            mov RSI,RBP
            mov RDI,RBX
            call .L_437980

            test R12,R12
            je .L_4381d0
.L_43818f:

            test EAX,EAX
            jne .L_4381e8

            mov RDX,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RBX]
            lea RDI,QWORD PTR [RBX+48]
            mov DWORD PTR [RBX+96],3
            call .L_4374f0

            test EAX,EAX
            jne .L_4381e8

            mov DWORD PTR [RBX+96],7
.L_4381b5:

            add RSP,24
.L_4381b9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4381c0:

            mov DWORD PTR [RSI+96],0
            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4381d0:

            mov RDI,R13
            mov DWORD PTR [RSP+12],EAX
            call .L_433380

            mov EAX,DWORD PTR [RSP+12]
            jmp .L_43818f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4381e8:

            mov EAX,4294967295
            jmp .L_4381b5
.L_4381ef:

            push RAX
            jb .L_438261
          .byte 0x67
          .byte 0x72
          .byte 0x61
          .byte 0x6d
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x0
.L_438200:

            push RBP
            push RSP
            sub EAX,1346568248
            cmp DWORD PTR [RBX],ESI
            xor AL,BYTE PTR [RAX]
# WARNING: found overlapping blocks at address 37fc6
.set .L_438206, . - 6

.L_43820c:

            push RBP
            push RSP
            sub EAX,1161967153
            add BYTE PTR [RBP+84],DL
            sub EAX,1162622513
            add BYTE PTR [RBP+84],DL
            cmp BYTE PTR [RAX],R8B
.L_438223:

            push RBP
            push RSP
            xor DWORD PTR [RSI],R14D
            add BYTE PTR [R13+84],R10B
            xor DWORD PTR [RSI],R14D
            add BYTE PTR [R11+74],R10B
            push R11
            add BYTE PTR [RDI+117],CL
            je .L_43825c

            outsd DX,DWORD PTR [RSI]
            and BYTE PTR [RBP+101],CH
            insd DWORD PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
            jb .L_4382be
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_438248:
          .byte 0x43
          .byte 0x6f
          .byte 0x75
          .byte 0x6c
          .byte 0x64
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x74
          .byte 0x20
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x6d
.L_43825c:

            insd DWORD PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
            jb .L_4382da
.L_438261:

            and BYTE PTR [RSI+111],AH
            jb .L_438286
          .byte 0x61
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x72
          .byte 0x69
          .byte 0x6e
          .byte 0x67
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x73
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x6f
          .byte 0x62
          .byte 0x6a
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438286:

            add BYTE PTR [RAX],AL
.L_438288:

            imul ESP,DWORD PTR [RBX+111],1868527214
            jo .L_4382f6
          .byte 0x6e
          .byte 0x20
          .byte 0x66
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x3a
          .byte 0x20
          .byte 0x43
          .byte 0x61
          .byte 0x6e
          .byte 0x6e
          .byte 0x6f
          .byte 0x74
          .byte 0x20
          .byte 0x68
          .byte 0x61
          .byte 0x6e
          .byte 0x64
          .byte 0x6c
          .byte 0x65
          .byte 0x20
          .byte 0x60
          .byte 0x60
          .byte 0x25
          .byte 0x73
          .byte 0x27
          .byte 0x27
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
.L_4382be:

            add BYTE PTR [RAX],AL
.L_4382c0:

            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
.L_4382da:

            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
.L_4382f6:

            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add AL,BYTE PTR [RDX]
            add EAX,DWORD PTR [RBX]
            add EAX,DWORD PTR [RBX]
            add EAX,DWORD PTR [RBX]
            add EAX,DWORD PTR [RBX]
            add EAX,DWORD PTR [RBX]
            add EAX,DWORD PTR [RBX]
            add EAX,DWORD PTR [RBX]
            add EAX,DWORD PTR [RBX]
            add AL,4
            add AL,4
            add AL,0
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_4383c0:

            out DX,EAX
            mov EDI,189
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_4383e0:

            rol BYTE PTR [RAX],0
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RBX],AL
            add BYTE PTR [RAX],AL
            rol DWORD PTR [RAX],0
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RBX],EAX
            add BYTE PTR [RAX],AL
            ret 0

            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add AL,BYTE PTR [RBX]
            add BYTE PTR [RAX],AL
            ret 
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x99
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43afa0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b180:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0xf
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x14
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x17
          .byte 0x0
          .byte 0x18
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x42
          .byte 0x0
          .byte 0x43
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x4c
          .byte 0x4d
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x50
          .byte 0x51
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x5c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x5e
          .byte 0x5f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43b400:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe8
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe8
          .byte 0xd8
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xca
          .byte 0xca
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xca
          .byte 0xca
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xf0
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe8
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe9
          .byte 0xea
          .byte 0xea
          .byte 0xe9
          .byte 0xea
          .byte 0xea
          .byte 0xe9
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xde
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xde
          .byte 0xe4
          .byte 0xe6
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x18
          .byte 0x19
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x5b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x67
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x6b
          .byte 0x6b
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x7a
          .byte 0x7a
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x82
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x82
          .byte 0x82
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x9
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x9
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x1
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0xea
          .byte 0xd6
          .byte 0xdc
          .byte 0xca
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xe6
          .byte 0x1
          .byte 0x1
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0x1
          .byte 0x1
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xe4
          .byte 0xe8
          .byte 0xde
          .byte 0xe0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0xd8
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0xd8
          .byte 0xd8
          .byte 0xd8
          .byte 0xd8
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xdc
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0xe6
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43bb40:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX],AL
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX],AL
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_43bd20:

            cmp AL,0
            add BYTE PTR [RAX],AL
            cmp BYTE PTR [RBX],AL
            add BYTE PTR [RAX],AL
            outsb DX,BYTE PTR [RSI]
            and AL,BYTE PTR [RAX]
            add BYTE PTR [RIP+_end+937296017],BH
            add EAX,DWORD PTR [RAX]
            add BYTE PTR [RAX+34],AH
            add BYTE PTR [RAX],AL
            add BYTE PTR DS:[RAX],AL
            add BYTE PTR [RAX],BH
            add EAX,DWORD PTR [RAX]
            add BYTE PTR [RDI+34],CH
            add BYTE PTR [RAX],AL
            add BYTE PTR [R8],AL
            add BYTE PTR [RAX],AL
            add EAX,DWORD PTR [RAX]
            add AL,AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RBX],EAX
            add BYTE PTR [RAX],AL
            rol DWORD PTR [RAX],0
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add AL,BYTE PTR [RBX]
            add BYTE PTR [RAX],AL
            ret 0

            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add EAX,DWORD PTR [RBX]
            add BYTE PTR [RAX],AL
            ret 
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9a
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9b
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x9c
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xa5
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xba
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0xab
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_43e8d0:

            push R12
            push RBP
            mov EBP,EDX
            cmp RBP,RSI
            push RBX
            mov R12,RDI
            mov RBX,RSI
            jbe .L_43e900
.L_43e8e1:

            mov RAX,RBX
            xor EDX,EDX
            mov RDI,R12
            div RBP
            lea RAX,QWORD PTR [RIP+.L_43eed1]
            pop RBX
            pop RBP
            pop R12
            movsx ESI,BYTE PTR [RAX+RDX*1]
            jmp .L_437330
.L_43e900:

            mov RAX,RSI
            xor EDX,EDX
            div RBP
            mov EDX,EBP
            mov RSI,RAX
            call .L_43e8d0

            jmp .L_43e8e1
.L_43e914:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e920:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov ESI,64
            push RBP
            push RBX
            mov R12,RDX
            mov RBX,RDI
            sub RSP,8
.L_43e93c:

            call .L_4342f0

            test RAX,RAX
            je .L_43eda6

            test R15,R15
            je .L_43ed18

            movsx ESI,BYTE PTR [R15]
            lea RBP,QWORD PTR [RIP+.L_43f064]
            test SIL,SIL
            je .L_43ea29

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e970:

            cmp SIL,37
            lea R13,QWORD PTR [R15+1]
            jne .L_43ea45

            movzx EAX,BYTE PTR [R15+1]
            lea ECX,DWORD PTR [RAX-106]
            cmp CL,16
            ja .L_43ea78

            mov EDX,1
            shl RDX,CL
            test EDX,65541
            je .L_43ea78

            movzx ECX,BYTE PTR [R15+2]
            lea R14,QWORD PTR [R15+2]
            lea EDX,DWORD PTR [RCX-37]
            cmp DL,83
            ja .L_43ea40

            lea RDI,QWORD PTR [RIP+.L_43ef14]
            movzx EDX,DL
            movsxd RDX,DWORD PTR [RDI+RDX*4]
            add RDX,RDI
            jmp RDX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e9d0:

            cmp AL,108
            mov EDX,DWORD PTR [R12]
            je .L_43e9e0

            cmp AL,122
            jne .L_43ec20
.L_43e9e0:

            cmp EDX,47
            ja .L_43ed93

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_43e9f7:

            mov R13,R14
            mov RSI,QWORD PTR [RAX]
            movzx EAX,BYTE PTR [R13]
            lea R15,QWORD PTR [R13+1]
            cmp AL,111
            jne .L_43ebfe
.L_43ea0e:

            mov EDX,8
            mov RDI,RBX
            call .L_43e8d0

            movsx ESI,BYTE PTR [R13+1]
            test SIL,SIL
            jne .L_43e970
.L_43ea29:

            add RSP,8
.L_43ea2d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ea40:

            mov ESI,37
.L_43ea45:

            mov RDI,RBX
            call .L_437330

            mov RAX,R13
            mov R13,R15
            mov R15,RAX
.L_43ea56:

            movsx ESI,BYTE PTR [R13+1]
            test SIL,SIL
            jne .L_43e970

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ea78:

            sub EAX,37
            cmp AL,83
            ja .L_43ea40

            movzx EAX,AL
            movsxd RAX,DWORD PTR [RBP+RAX*4]
            add RAX,RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ea90:

            mov R13,R14
            nop
            nop
            nop
            nop
            nop
.L_43ea98:

            mov EAX,DWORD PTR [R12]
            cmp EAX,47
            ja .L_43edf0

            mov EDX,EAX
            add RDX,QWORD PTR [R12+16]
            add EAX,8
            mov DWORD PTR [R12],EAX
.L_43eab3:

            movsx ESI,BYTE PTR [RDX]
            mov RDI,RBX
            lea R15,QWORD PTR [R13+1]
            call .L_437330

            jmp .L_43ea56
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43eac8:

            mov R13,R14
            nop
            nop
            nop
            nop
            nop
.L_43ead0:

            mov EAX,DWORD PTR [R12]
            cmp EAX,47
            ja .L_43eddd

            mov EDX,EAX
            add RDX,QWORD PTR [R12+16]
            add EAX,8
            mov DWORD PTR [R12],EAX
.L_43eaeb:

            mov R14,QWORD PTR [RDX]
            lea RAX,QWORD PTR [RIP+.L_43eef8]
            test R14,R14
            cmove R14,RAX
            mov RDI,R14
            call wcslen@PLT

            mov RSI,R14
            mov RDX,RAX
            mov RDI,RBX
            call .L_437660

            test EAX,EAX
            je .L_43eb24

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43eda6
.L_43eb24:

            lea R15,QWORD PTR [R13+1]
            jmp .L_43ea56
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43eb30:

            mov R13,R14
            nop
            nop
            nop
            nop
            nop
.L_43eb38:

            mov ESI,37
            mov RDI,RBX
            lea R15,QWORD PTR [R13+1]
            call .L_437330

            jmp .L_43ea56
          .byte 0x66
          .byte 0x90
.L_43eb50:

            mov EDX,DWORD PTR [R12]
.L_43eb54:

            cmp EDX,47
            ja .L_43edca

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_43eb6b:

            mov RSI,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RIP+.L_43eee2]
            mov RDI,RBX
            lea R15,QWORD PTR [R13+1]
            test RSI,RSI
            cmove RSI,RAX
            call .L_437310

            jmp .L_43ea56
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43eb90:

            mov EDX,DWORD PTR [R12]
.L_43eb94:

            cmp EDX,47
            ja .L_43edb7

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_43ebab:

            movsxd R15,DWORD PTR [RAX]
            mov R14,R13
            test R15,R15
            jns .L_43ec6a

            mov ESI,45
            mov RDI,RBX
            call .L_437330

            jmp .L_43ed54
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ebd0:

            mov EDX,DWORD PTR [R12]
.L_43ebd4:

            cmp EDX,47
            ja .L_43ee03

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_43ebeb:

            mov ESI,DWORD PTR [RAX]
            movzx EAX,BYTE PTR [R13]
            lea R15,QWORD PTR [R13+1]
            cmp AL,111
            je .L_43ea0e
.L_43ebfe:

            cmp AL,117
            jne .L_43ed00

            mov EDX,10
            mov RDI,RBX
            call .L_43e8d0

            jmp .L_43ea56
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ec20:

            cmp AL,106
            je .L_43e9e0

            mov R13,R14
            jmp .L_43ebd4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ec30:

            cmp AL,108
            mov EDX,DWORD PTR [R12]
            je .L_43ec47

            cmp AL,122
            je .L_43ec47

            cmp AL,106
            mov R13,R14
            jne .L_43eb94
.L_43ec47:

            cmp EDX,47
            ja .L_43ed6d

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_43ec5e:

            mov R15,QWORD PTR [RAX]
            test R15,R15
            js .L_43ed38
.L_43ec6a:

            mov RSI,R15
            mov R13,R14
.L_43ec70:

            mov EDX,10
            mov RDI,RBX
            lea R15,QWORD PTR [R14+1]
            call .L_43e8d0

            jmp .L_43ea56
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ec90:

            cmp AL,108
            mov EDX,DWORD PTR [R12]
            jne .L_43ed2d

            cmp EDX,47
            ja .L_43ed80

            mov EAX,EDX
            add RAX,QWORD PTR [R12+16]
            add EDX,8
            mov DWORD PTR [R12],EDX
.L_43ecb3:

            mov R13,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RIP+.L_43eef8]
            test R13,R13
            cmove R13,RAX
            mov RDI,R13
            call wcslen@PLT

            mov RSI,R13
            mov RDX,RAX
            mov RDI,RBX
            call .L_437660

            test EAX,EAX
            je .L_43ecec

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_43eda6
.L_43ecec:

            add R15,3
            mov R13,R14
            jmp .L_43ea56
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ed00:

            mov EDX,16
            mov RDI,RBX
            call .L_43e8d0

            jmp .L_43ea56
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ed18:

            mov RAX,QWORD PTR [RBX]
            mov BYTE PTR [RAX],0
            add RSP,8
.L_43ed22:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43ed2d:

            mov R13,R14
            jmp .L_43eb54
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43ed38:

            mov ESI,45
            mov RDI,RBX
            call .L_437330

            movabs RAX,-9223372036854775808
            cmp R15,RAX
            je .L_43ed62
.L_43ed54:

            mov RSI,R15
            mov R13,R14
            neg RSI
            jmp .L_43ec70
.L_43ed62:

            mov R13,R14
            mov RSI,R15
            jmp .L_43ec70
.L_43ed6d:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_43ec5e
.L_43ed80:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_43ecb3
.L_43ed93:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_43e9f7
.L_43eda6:

            lea RSI,QWORD PTR [RIP+.L_43eee9]
            mov EDI,1
            call .L_43f6e0
.L_43edb7:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_43ebab
.L_43edca:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_43eb6b
.L_43eddd:

            mov RDX,QWORD PTR [R12+8]
            lea RAX,QWORD PTR [RDX+8]
            mov QWORD PTR [R12+8],RAX
            jmp .L_43eaeb
.L_43edf0:

            mov RDX,QWORD PTR [R12+8]
            lea RAX,QWORD PTR [RDX+8]
            mov QWORD PTR [R12+8],RAX
            jmp .L_43eab3
.L_43ee03:

            mov RAX,QWORD PTR [R12+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R12+8],RDX
            jmp .L_43ebeb
.L_43ee16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ee20:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_43ee76

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_43ee76:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RDX,RSP
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_43e920

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43eecc

            add RSP,216

            ret 
.L_43eecc:

            call __stack_chk_fail@PLT
.L_43eed1:
          .string "0123456789abcdef"
.L_43eee2:
          .string "(null)"
.L_43eee9:
          .string "Out of memory"
          .byte 0x90
.L_43eef8:
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ef14:
          .long .L_43eb30-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43eac8-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43e9d0-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea90-.L_43ef14
          .long .L_43ec30-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43e9d0-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ec90-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43e9d0-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43ea40-.L_43ef14
          .long .L_43e9d0-.L_43ef14
.L_43f064:
          .long .L_43eb38-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ead0-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ebd0-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea98-.L_43f064
          .long .L_43eb90-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ebd0-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43eb50-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ebd0-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ea40-.L_43f064
          .long .L_43ebd0-.L_43f064
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_43f1c0:

            xor EAX,EAX
            cmp ESI,1
            jbe .L_43f368

            push R15
            push R14
            xor R15D,R15D
            push R13
            push R12
            xor R14D,R14D
            push RBP
            push RBX
            xor EBP,EBP
            lea RBX,QWORD PTR [RDI+8]
            xor R13D,R13D
            sub RSP,40
.L_43f1e8:

            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RSP+24],RDI
            mov QWORD PTR [RSP+8],RAX
            lea EAX,DWORD PTR [RSI-2]
            lea RAX,QWORD PTR [RDI+RAX*8+16]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_43f23c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43f208:

            lea ESI,DWORD PTR [RBP+1]
            mov RDI,R14
            mov DWORD PTR [RSP+4],ESI
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov EDX,DWORD PTR [RSP+4]
            je .L_43f340

            add RBX,8
            cmp RBX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX+RBP*8],R12
            mov R14,RAX
            mov EBP,EDX
            je .L_43f286
.L_43f23c:

            mov R12,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R12
            call strcmp@PLT

            test EAX,EAX
            jns .L_43f208

            lea ESI,DWORD PTR [R13+1]
            mov RDI,R15
            mov DWORD PTR [RSP+4],ESI
            shl RSI,3
            call realloc@PLT

            test RAX,RAX
            mov EDX,DWORD PTR [RSP+4]
            je .L_43f340

            add RBX,8
            cmp RBX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX+R13*8],R12
            mov R15,RAX
            mov R13D,EDX
            jne .L_43f23c
.L_43f286:

            mov ESI,R13D
            mov RDI,R15
            call .L_43f1c0

            test R13D,R13D
            mov EBX,EAX
            je .L_43f2c6

            lea EAX,DWORD PTR [R13-1]
            lea RCX,QWORD PTR [RAX*8+8]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f2b0:

            mov RDX,QWORD PTR [R15+RAX*1]
            mov RDI,QWORD PTR [RSP+24]
            mov QWORD PTR [RDI+RAX*1],RDX
            add RAX,8
            cmp RAX,RCX
            jne .L_43f2b0
.L_43f2c6:

            mov RDI,R15
            call free@PLT

            mov RDI,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+24]
            mov EAX,R13D
            mov ESI,EBP
            mov QWORD PTR [RCX+RAX*8],RDI
            mov RDI,R14
            call .L_43f1c0

            test EBP,EBP
            mov R12D,EAX
            je .L_43f31a

            lea EDX,DWORD PTR [R13+1]
            lea R8D,DWORD PTR [R13+RBP*1+1]
            mov RCX,R14
            nop
            nop
            nop
            nop
.L_43f300:

            mov RDI,QWORD PTR [RCX]
            mov RAX,QWORD PTR [RSP+24]
            mov ESI,EDX
            add EDX,1
            add RCX,8
            cmp R8D,EDX
            mov QWORD PTR [RAX+RSI*8],RDI
            jne .L_43f300
.L_43f31a:

            mov RDI,R14
            call free@PLT

            cmp EBX,R12D
            mov EAX,R12D
            cmovle EAX,EBX
            add RSP,40
.L_43f32f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f340:

            mov RDI,R14
            call free@PLT

            mov RDI,R15
            call free@PLT

            add RSP,40
            mov EAX,4294967266
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43f368:

            ret 
.L_43f36a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43f370:

            push RBX
            xor EAX,EAX
            mov ESI,1
            mov EBX,EDI
            call fcntl@PLT

            cmp EAX,-1
            je .L_43f388

            test AL,1
            je .L_43f390
.L_43f388:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f390:

            mov EDI,EBX
            or EAX,1
            mov ESI,2
            pop RBX
            mov EDX,EAX
            xor EAX,EAX
            jmp fcntl@PLT
.L_43f3a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f3b0:

            sub RSP,8
            call .L_4378c0

            xor EAX,EAX
            add RSP,8
            ret 
.L_43f3c0:

            mov EAX,3002002
            ret 
.L_43f3c6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f3d0:

            lea RAX,QWORD PTR [RIP+.L_43f882]
            ret 
.L_43f3d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f3e0:

            push RBP
            push RBX
            sub RSP,8
.L_43f3e6:

            call BZ2_bzlibVersion@PLT

            lea RSI,QWORD PTR [RIP+.L_43f882]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            mov RBX,RAX
            mov QWORD PTR [RIP+.L_65bc50],0
            mov QWORD PTR [RIP+.L_65bc58],0
            mov QWORD PTR [RIP+.L_65bc60],0
            call .L_437310

            lea RSI,QWORD PTR [RIP+.L_43f893]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_437310

            lea RSI,QWORD PTR [RIP+.L_43f89a]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_437310

            lea RSI,QWORD PTR [RIP+.L_43f8a1]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_437310

            lea RSI,QWORD PTR [RIP+.L_43f8ab]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_437310

            test RBX,RBX
            je .L_43f4b0

            mov ESI,44
            mov RDI,RBX
            call strchr@PLT

            test RAX,RAX
            mov RBP,RAX
            je .L_43f4c0
.L_43f488:

            lea RSI,QWORD PTR [RIP+.L_43f8b1]
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            call .L_437310

            mov RDX,RBP
            lea RDI,QWORD PTR [RIP+.L_65bc50]
            mov RSI,RBX
            sub RDX,RBX
            call .L_437290
.L_43f4b0:

            mov RAX,QWORD PTR [RIP+.L_65bc50]
            add RSP,8
.L_43f4bb:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_43f4c0:

            mov RDI,RBX
            call strlen@PLT

            lea RBP,QWORD PTR [RBX+RAX*1]
            jmp .L_43f488
.L_43f4ce:

            nop
            nop
.L_43f4d0:

            lea RAX,QWORD PTR [RIP+.L_43f89a]
            ret 
.L_43f4d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f4e0:

            lea RAX,QWORD PTR [RIP+.L_43f8ab]
            ret 
.L_43f4e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f4f0:

            jmp BZ2_bzlibVersion@PLT
.L_43f4f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f500:

            xor EAX,EAX
            ret 
.L_43f503:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f510:

            mov EAX,DWORD PTR [RDI+52]
            ret 
.L_43f514:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f520:

            mov RAX,QWORD PTR [RDI+56]
            test RAX,RAX
            je .L_43f535

            cmp BYTE PTR [RAX],0
            mov EDX,0
            cmove RAX,RDX
.L_43f535:

            ret 
.L_43f537:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f540:

            mov EAX,DWORD PTR [RDI+48]
            ret 
.L_43f544:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f550:

            mov EAX,DWORD PTR [RDI+16]
            ret 
.L_43f554:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f560:

            mov RAX,QWORD PTR [RDI+24]
            ret 
.L_43f565:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f570:

            xor ESI,ESI
            jmp .L_43f910
.L_43f577:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f580:

            xor ESI,ESI
            jmp .L_43f930
.L_43f587:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f590:

            mov ESI,4294967295
            jmp .L_43f940
.L_43f59a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43f5a0:

            xor ESI,ESI
            jmp .L_43f940
.L_43f5a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f5b0:

            mov QWORD PTR [RDI+72],0
            mov QWORD PTR [RDI+56],0
            mov DWORD PTR [RDI+52],0
            ret 
.L_43f5c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f5d0:

            push RBX
            mov R10,RDX
            mov RBX,RDI
            sub RSP,208
.L_43f5de:

            test AL,AL
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_43f628

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_43f628:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test R10,R10
            mov DWORD PTR [RBX+52],ESI
            je .L_43f6a0

            lea RAX,QWORD PTR [RSP+224]
            lea RDI,QWORD PTR [RBX+64]
            mov QWORD PTR [RBX+72],0
            mov RDX,RSP
            mov RSI,R10
            mov DWORD PTR [RSP],24
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_43e920

            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RBX+56],RAX
.L_43f685:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43f6aa

            add RSP,208
.L_43f69c:

            pop RBX
            ret 
          .byte 0x66
          .byte 0x90
.L_43f6a0:

            mov QWORD PTR [RBX+56],0
            jmp .L_43f685
.L_43f6aa:

            call __stack_chk_fail@PLT
.L_43f6af:

            nop
.L_43f6b0:

            push RBX
            mov EAX,DWORD PTR [RSI+52]
            mov RBX,RDI
            mov QWORD PTR [RDI+72],0
            lea RDI,QWORD PTR [RDI+64]
            add RSI,64
            mov DWORD PTR [RDI-12],EAX
            call .L_434410

            mov RAX,QWORD PTR [RBX+64]
            mov QWORD PTR [RBX+56],RAX
            pop RBX
            ret 
.L_43f6d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f6e0:

            push RBP
            push RBX
            mov RBX,RSI
            lea RSI,QWORD PTR [RIP+.L_43f8e0]
            mov EDX,36
            mov EBP,EDI
            sub RSP,8
            mov EDI,2
            call write@PLT

            mov RDI,RBX
            call strlen@PLT

            mov RSI,RBX
            mov RDX,RAX
            mov EDI,2
            call write@PLT

            lea RSI,QWORD PTR [RIP+.L_43f8ba]
            mov EDI,2
            mov EDX,1
            call write@PLT

            mov EDI,EBP
            call exit@PLT
.L_43f736:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f740:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_43f749:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            test RDI,RDI
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            je .L_43f808
.L_43f77c:

            mov RDI,RBP
            mov RBX,RSP
            call strlen@PLT

            mov RSI,RBP
            mov RDX,RAX
            mov RDI,RBX
            call .L_437290

            mov RDX,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+8]
            cmp BYTE PTR [RDX+RAX*1-1],47
            je .L_43f7b2

            mov ESI,47
            mov RDI,RBX
            call .L_437330
.L_43f7b2:

            lea RSI,QWORD PTR [RIP+.L_43f8c8]
            mov RDI,RBX
            call .L_437310

            mov RDI,QWORD PTR [RSP]
            call mkstemp@PLT

            test EAX,EAX
            mov EBP,EAX
            js .L_43f7e0

            mov EDI,EAX
            call .L_43f370

            mov RDI,QWORD PTR [RSP]
            call unlink@PLT
.L_43f7e0:

            mov RDI,RBX
            call .L_434290

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_43f833

            add RSP,40
.L_43f7fe:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f808:

            lea RDI,QWORD PTR [RIP+.L_43f8c1]
            call getenv@PLT

            mov RBP,RAX
            test RAX,RAX
            lea RAX,QWORD PTR [RIP+.L_43f8bc]
            mov QWORD PTR [RSP+8],0
            cmove RBP,RAX
            jmp .L_43f77c
.L_43f833:

            call __stack_chk_fail@PLT
.L_43f838:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f840:

            test EDI,EDI
            js .L_43f850

            jmp .L_43f370
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43f850:

            ret 
.L_43f852:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f860:

            xor ESI,ESI
            cmp QWORD PTR [RDI],0
            je .L_43f87d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f870:

            lea EAX,DWORD PTR [RSI+1]
            cmp QWORD PTR [RDI+RAX*8],0
            mov RSI,RAX
            jne .L_43f870
.L_43f87d:

            jmp .L_43f1c0
.L_43f882:

            insb BYTE PTR [RDI],DX
            imul ESP,DWORD PTR [RDX+97],1768448882
            jbe .L_43f8f1
          .byte 0x20
          .byte 0x33
          .byte 0x2e
          .byte 0x32
          .byte 0x2e
          .byte 0x32
          .byte 0x0
.L_43f893:
          .string " zlib/"
.L_43f89a:
          .string "1.2.11"
.L_43f8a1:
          .string " liblzma/"
.L_43f8ab:
          .string "5.2.2"
.L_43f8b1:
          .string " bz2lib/"
.L_43f8ba:
          .string "\n"
.L_43f8bc:
          .string "/tmp"
.L_43f8c1:
          .string "TMPDIR"
.L_43f8c8:

            insb BYTE PTR [RDI],DX
            imul ESP,DWORD PTR [RDX+97],1768448882
            jbe .L_43f937
          .byte 0x5f
          .byte 0x58
          .byte 0x58
          .byte 0x58
          .byte 0x58
          .byte 0x58
          .byte 0x58
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43f8e0:
          .byte 0x46
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x49
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x45
          .byte 0x72
.L_43f8f1:

            jb .L_43f962
          .byte 0x72
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x20
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x3a
          .byte 0x20
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_43f910:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+88]
.L_43f917:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f920:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+72]
.L_43f927:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f930:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+96]
.L_43f937:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f940:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+80]
.L_43f947:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f950:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX]
.L_43f956:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f960:

            jmp .L_43f950
.L_43f962:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f970:

            mov DWORD PTR [RDI+4],32768
            mov EAX,32768
            ret 
.L_43f97d:

            nop
            nop
            nop
.L_43f980:

            test RDI,RDI
            je .L_43f990

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+8]
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43f990:

            xor EAX,EAX
            ret 
.L_43f993:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f9a0:

            jmp .L_43f980
.L_43f9a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f9b0:

            jmp .L_43f980
.L_43f9b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f9c0:

            jmp .L_43f980
.L_43f9c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f9d0:

            jmp .L_43f980
.L_43f9d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43f9e0:

            mov RAX,QWORD PTR [RDI+8]
            add DWORD PTR [RDI+48],1
            jmp QWORD PTR [RAX+16]
.L_43f9eb:

            nop
            nop
            nop
            nop
            nop
.L_43f9f0:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+24]
.L_43f9f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fa00:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+32]
.L_43fa07:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fa10:

            mov RAX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RAX+40]
            test RAX,RAX
            je .L_43fa1f

            jmp RAX
.L_43fa1f:

            push RBX
            lea RDX,QWORD PTR [RIP+.L_43fa78]
            mov RBX,RDI
            xor EAX,EAX
            or ESI,4294967295
            call .L_43f5d0

            mov DWORD PTR [RBX+4],32768
            mov RAX,-30
            pop RBX
            ret 
.L_43fa44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fa50:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+48]
.L_43fa57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fa60:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+56]
.L_43fa67:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fa70:

            mov RAX,QWORD PTR [RDI+8]
            jmp QWORD PTR [RAX+64]
.L_43fa77:
          .byte 0x90
.L_43fa78:
          .string "archive_write_data_block not supported"
          .byte 0x90
.L_43faa0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R13,RDX
            push RBX
            mov RBX,RDI
            add RSP,-128
.L_43fab5:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            call .L_444570

            test RAX,RAX
            mov R12,RAX
            je .L_43fccb

            mov RSI,RBX
            mov RDI,RAX
            call .L_444410

            test EAX,EAX
            jne .L_43fccb

            lea RDI,QWORD PTR [RSP+16]
            call pipe@PLT

            cmp EAX,-1
            je .L_43fccb

            cmp DWORD PTR [RSP+16],1
            je .L_43fce0
.L_43fb07:

            lea RDI,QWORD PTR [RSP+24]
            call pipe@PLT

            cmp EAX,-1
            je .L_43fcb9

            mov EAX,DWORD PTR [RSP+28]
            test EAX,EAX
            je .L_43fc60
.L_43fb26:

            lea RBP,QWORD PTR [RSP+32]
            mov RDI,RBP
            call posix_spawn_file_actions_init@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_43fd08

            mov ESI,DWORD PTR [RSP+20]
            mov RDI,RBP
            call posix_spawn_file_actions_addclose@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_43fc98

            mov ESI,DWORD PTR [RSP+24]
            mov RDI,RBP
            call posix_spawn_file_actions_addclose@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_43fc98

            mov ESI,DWORD PTR [RSP+16]
            xor EDX,EDX
            mov RDI,RBP
            call posix_spawn_file_actions_adddup2@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_43fc98

            mov ESI,DWORD PTR [RSP+16]
            test ESI,ESI
            jne .L_43fc80
.L_43fb8d:

            mov ESI,DWORD PTR [RSP+28]
            mov EDX,1
            mov RDI,RBP
            call posix_spawn_file_actions_adddup2@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_43fc98

            mov ESI,DWORD PTR [RSP+28]
            cmp ESI,1
            je .L_43fbc3

            mov RDI,RBP
            call posix_spawn_file_actions_addclose@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_43fc98
.L_43fbc3:

            mov R8,QWORD PTR [R12+8]
            mov RSI,QWORD PTR [R12]
            lea RDI,QWORD PTR [RSP+12]
            xor R9D,R9D
            xor ECX,ECX
            mov RDX,RBP
            call posix_spawnp@PLT

            test EAX,EAX
            mov EBX,EAX
            jne .L_43fc98

            mov RDI,RBP
            call posix_spawn_file_actions_destroy@PLT

            mov EDI,DWORD PTR [RSP+16]
            call close@PLT

            mov EDI,DWORD PTR [RSP+28]
            call close@PLT

            mov EDI,DWORD PTR [RSP+20]
            mov EDX,2048
            mov ESI,4
            xor EAX,EAX
            mov DWORD PTR [R14],EDI
            call fcntl@PLT

            mov EDI,DWORD PTR [RSP+24]
            mov EDX,2048
            mov ESI,4
            xor EAX,EAX
            mov DWORD PTR [R13],EDI
            call fcntl@PLT

            mov RDI,R12
            call .L_444580

            mov EAX,DWORD PTR [RSP+12]
.L_43fc3f:

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            jne .L_43fd11

            sub RSP,-128
.L_43fc57:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_43fc60:

            xor EDI,EDI
            call dup@PLT

            cmp EAX,-1
            mov EBX,EAX
            je .L_43fca7

            mov EDI,DWORD PTR [RSP+28]
            call close@PLT

            mov DWORD PTR [RSP+28],EBX
            jmp .L_43fb26
.L_43fc80:

            mov RDI,RBP
            call posix_spawn_file_actions_addclose@PLT

            test EAX,EAX
            mov EBX,EAX
            je .L_43fb8d

            nop
            nop
            nop
            nop
            nop
            nop
.L_43fc98:

            call __errno_location@PLT

            mov RDI,RBP
            mov DWORD PTR [RAX],EBX
            call posix_spawn_file_actions_destroy@PLT
.L_43fca7:

            mov EDI,DWORD PTR [RSP+24]
            call close@PLT

            mov EDI,DWORD PTR [RSP+28]
            call close@PLT
.L_43fcb9:

            mov EDI,DWORD PTR [RSP+16]
            call close@PLT

            mov EDI,DWORD PTR [RSP+20]
            call close@PLT
.L_43fccb:

            mov RDI,R12
            call .L_444580

            mov EAX,4294967295
            jmp .L_43fc3f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43fce0:

            mov EDI,1
            call dup@PLT

            cmp EAX,-1
            mov EBX,EAX
            je .L_43fcb9

            mov EDI,DWORD PTR [RSP+16]
            call close@PLT

            mov DWORD PTR [RSP+16],EBX
            jmp .L_43fb07
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43fd08:

            call __errno_location@PLT

            mov DWORD PTR [RAX],EBX
            jmp .L_43fca7
.L_43fd11:

            call __stack_chk_fail@PLT
.L_43fd16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fd20:

            sub RSP,40
.L_43fd24:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp EDI,-1
            je .L_43fd4b

            mov DWORD PTR [RSP],EDI
            mov EDI,4
            mov EAX,1
            mov WORD PTR [RSP+4],DI
.L_43fd4b:

            cmp ESI,-1
            je .L_43fd63

            movsxd RDX,EAX
            mov ECX,1
            add EAX,1
            mov DWORD PTR [RSP+RDX*8],ESI
            mov WORD PTR [RSP+RDX*8+4],CX
.L_43fd63:

            movsxd RSI,EAX
            mov RDI,RSP
            mov ECX,16
            mov EDX,4294967295
            call __poll_chk@PLT

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43fd8d

            add RSP,40
.L_43fd8c:

            ret 
.L_43fd8d:

            call __stack_chk_fail@PLT
.L_43fd92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fda0:

            push RBP
            push RBX
            xor EBX,EBX
            mov RBP,RDI
            sub RSP,8
.L_43fdab:

            test ESI,ESI
            js .L_43fdd4

            mov EAX,ESI
            mov EDX,1717986919
            imul EDX
            mov EAX,ESI
            sar EAX,31
            sar EDX,2
            mov EBX,EDX
            sub EBX,EAX
            lea EAX,DWORD PTR [RBX+RBX*4]
            mov EDX,EBX
            mov EBX,ESI
            add EAX,EAX
            sub EBX,EAX
            cmp ESI,9
            jg .L_43fe00
.L_43fdd4:

            mov RAX,QWORD PTR [RBP]
            movsxd RBX,EBX
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RBP],RDX
            lea RDX,QWORD PTR [RIP+.L_443780]
            mov EDX,DWORD PTR [RDX+RBX*4]
            mov DWORD PTR [RAX],EDX
            add RSP,8
.L_43fdf3:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43fe00:

            mov ESI,EDX
            call .L_43fda0

            jmp .L_43fdd4
.L_43fe09:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fe10:

            push RBP
            push RBX
            mov EBP,48
            mov RBX,RDI
            sub RSP,8
.L_43fe1e:

            test ESI,ESI
            js .L_43fe51

            mov EAX,ESI
            mov EDX,1717986919
            mov EDI,ESI
            imul EDX
            mov EAX,ESI
            lea RCX,QWORD PTR [RIP+.L_4437fc]
            sar EAX,31
            sar EDX,2
            sub EDX,EAX
            lea EAX,DWORD PTR [RDX+RDX*4]
            add EAX,EAX
            sub EDI,EAX
            cmp ESI,9
            movsxd RAX,EDI
            movzx EBP,BYTE PTR [RCX+RAX*1]
            jg .L_43fe68
.L_43fe51:

            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],BPL
            add RSP,8
.L_43fe62:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43fe68:

            mov ESI,EDX
            mov RDI,RBX
            call .L_43fe10

            jmp .L_43fe51
.L_43fe74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43fe80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,ESI
            sub RSP,24
            and EBP,15360
            je .L_43fec8

            test DWORD PTR [RDI+48],4294951935
            jne .L_43feb0

            test EDX,2164195334
            je .L_43fee1

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43feb0:

            xor EAX,EAX
.L_43feb2:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43fec8:

            test ESI,768
            je .L_43feb0

            test DWORD PTR [RDI+48],4294966527
            jne .L_43feb0

            test EDX,4294967288
            jne .L_43feb0
.L_43fee1:

            cmp ECX,10006
            jg .L_43ffe8

            cmp ECX,10005
            jge .L_440008

            cmp ECX,10001
            jl .L_43feb0
.L_43ff01:

            mov R15,RDI
            mov RDI,QWORD PTR [RDI+32]
            mov R14D,R8D
            mov R13D,ECX
            mov DWORD PTR [RSP+12],EDX
            mov R12D,ESI
            test RDI,RDI
            je .L_43ff27

            call free@PLT

            mov QWORD PTR [R15+32],0
.L_43ff27:

            mov RDI,QWORD PTR [R15+40]
            test RDI,RDI
            je .L_43ff3d

            call free@PLT

            mov QWORD PTR [R15+40],0
.L_43ff3d:

            mov RBX,QWORD PTR [R15+8]
            test RBX,RBX
            je .L_440019

            mov EDX,R13D
            and EDX,4294967293
            jmp .L_43ff63
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ff58:

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_43ffa0

            mov RBX,RAX
.L_43ff63:

            test EBP,EBP
            jne .L_43ff58

            cmp DWORD PTR [RBX+8],R12D
            jne .L_43ff58

            cmp DWORD PTR [RBX+12],R13D
            jne .L_43ff58

            cmp DWORD PTR [RBX+20],R14D
            jne .L_43ff58

            cmp R14D,-1
            jne .L_43ff87

            cmp EDX,10001
            je .L_43ff58
.L_43ff87:

            mov EAX,DWORD PTR [RSP+12]
            mov DWORD PTR [RBX+16],EAX
            mov RAX,RBX
            jmp .L_43feb2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ffa0:

            mov ESI,128
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_43feb0

            mov QWORD PTR [RBX],RAX
.L_43ffbb:

            mov ECX,DWORD PTR [RSP+12]
            mov DWORD PTR [RAX+8],R12D
            mov DWORD PTR [RAX+12],R13D
            mov DWORD PTR [RAX+20],R14D
            or DWORD PTR [R15+48],R12D
            mov DWORD PTR [RAX+16],ECX
            add RSP,24
.L_43ffd6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43ffe8:

            cmp ECX,10107
            jne .L_43feb0

            test ESI,4294951935
            je .L_43ff01

            jmp .L_43feb0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440008:

            test ESI,4294966527
            je .L_43ff01

            jmp .L_43feb0
.L_440019:

            mov ESI,128
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_43feb0

            mov QWORD PTR [R15+8],RAX
            jmp .L_43ffbb
.L_440037:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440040:

            push R15
            push R14
            mov R15,R9
            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov EBP,ECX
            mov RBX,RDI
            sub RSP,24
.L_440059:

            test RSI,RSI
            mov RCX,QWORD PTR [RDI]
            mov DWORD PTR [RSP+4],R8D
            mov R14D,DWORD PTR [RSP+80]
            mov R13D,DWORD PTR [RSP+88]
            je .L_440094

            mov RDI,RCX
            call wcscpy@PLT

            mov RCX,QWORD PTR [RBX]
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call wcslen@PLT

            mov RCX,QWORD PTR [RSP+8]
            lea RCX,QWORD PTR [RCX+RAX*4]
            mov QWORD PTR [RBX],RCX
.L_440094:

            cmp EBP,10004
            je .L_4405d0

            jle .L_440148

            cmp EBP,10006
            je .L_440560

            jl .L_4402b0

            cmp EBP,10107
            jne .L_440174

            lea RSI,QWORD PTR [RIP+.L_4437b0]
            mov RDI,RCX
            call wcscpy@PLT
.L_4400d3:

            mov R15,QWORD PTR [RBX]
            mov RDI,R15
            call wcslen@PLT

            lea RAX,QWORD PTR [R15+RAX*4]
            mov ECX,R12D
            and ECX,768
            lea R15,QWORD PTR [RAX+4]
            mov QWORD PTR [RBX],R15
            mov DWORD PTR [RAX],58
            jne .L_440138

            mov EAX,EBP
            mov R13D,4294967295
            and EAX,4294967293
            cmp EAX,10001
            jne .L_4402cb
.L_440110:

            mov ESI,R13D
            mov RDI,RBX
            mov DWORD PTR [RSP+8],ECX
            call .L_43fda0

            test R12D,15360
            mov R15,QWORD PTR [RBX]
            mov ECX,DWORD PTR [RSP+8]
            jne .L_4401e1

            nop
            nop
            nop
            nop
            nop
.L_440138:

            mov R13D,4294967295
            jmp .L_4401e1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440148:

            cmp EBP,10002
            je .L_440578

            jg .L_440291

            cmp EBP,10001
            jne .L_440174
.L_440162:

            lea RSI,QWORD PTR [RIP+.L_443884]
            mov RDI,RCX
            call wcscpy@PLT

            mov RCX,QWORD PTR [RBX]
.L_440174:

            mov RDI,RCX
            mov QWORD PTR [RSP+8],RCX
            call wcslen@PLT

            mov RCX,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov ECX,R12D
            and ECX,768
            lea RDI,QWORD PTR [RAX+4]
            mov QWORD PTR [RBX],RDI
            mov DWORD PTR [RAX],58
            jne .L_440510

            mov EAX,EBP
            and EAX,4294967293
            cmp EAX,10001
            jne .L_4402c8

            test R15,R15
            je .L_440110
.L_4401bf:

            mov RSI,R15
            mov DWORD PTR [RSP+8],ECX
            call wcscpy@PLT

            mov R15,QWORD PTR [RBX]
            mov RDI,R15
            call wcslen@PLT

            mov ECX,DWORD PTR [RSP+8]
            lea R15,QWORD PTR [R15+RAX*4]
            mov QWORD PTR [RBX],R15
.L_4401e1:

            test BYTE PTR [RSP+4],4
            je .L_4401f6

            sub EBP,10005
            mov RDI,R15
            cmp EBP,1
            jbe .L_440204
.L_4401f6:

            lea RDI,QWORD PTR [R15+4]
            mov QWORD PTR [RBX],RDI
            mov DWORD PTR [R15],58
.L_440204:

            test ECX,ECX
            je .L_4402ce

            mov EAX,R14D
            mov EDX,R14D
            and EAX,292
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967227
            add EAX,114
            mov DWORD PTR [RDI],EAX
            mov EAX,R14D
            and EAX,146
            cmp EAX,1
            sbb EAX,EAX
            and EDX,73
            and EAX,4294967222
            add EAX,119
            cmp EDX,1
            lea RDX,QWORD PTR [RDI+12]
            mov DWORD PTR [RDI+4],EAX
            sbb EAX,EAX
            and EAX,4294967221
            mov QWORD PTR [RBX],RDX
            add EAX,120
            cmp R13D,-1
            mov DWORD PTR [RDI+8],EAX
            je .L_4404fc
.L_44025c:

            mov RAX,QWORD PTR [RBX]
            mov ESI,R13D
            mov RDI,RBX
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RBX],RDX
            mov DWORD PTR [RAX],58
            add RSP,24
.L_440276:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_43fda0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440288:

            mov R13D,4294967295
            xor R15D,R15D
.L_440291:

            lea RSI,QWORD PTR [RIP+.L_4438b4]
            mov RDI,RCX
            call wcscpy@PLT

            mov RCX,QWORD PTR [RBX]
            jmp .L_440174
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4402b0:

            lea RSI,QWORD PTR [RIP+.L_4438cc]
            mov RDI,RCX
            call wcscpy@PLT

            jmp .L_4400d3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4402c8:

            mov R15,QWORD PTR [RBX]
.L_4402cb:

            mov RDI,R15
.L_4402ce:

            mov EAX,R14D
            mov EDX,R14D
            lea RBP,QWORD PTR [RDI+92]
            and EAX,8
            mov DWORD PTR [RDI+56],58
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967227
            add EAX,114
            mov DWORD PTR [RDI],EAX
            mov EAX,R14D
            and EAX,16
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967222
            add EAX,119
            mov DWORD PTR [RDI+4],EAX
            mov EAX,R14D
            and EAX,1
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967221
            add EAX,120
            mov DWORD PTR [RDI+8],EAX
            mov EAX,R14D
            and EAX,32
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967229
            add EAX,112
            mov DWORD PTR [RDI+12],EAX
            mov EAX,R14D
            and EAX,2048
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967241
            add EAX,100
            mov DWORD PTR [RDI+16],EAX
            mov EAX,R14D
            and EAX,256
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967273
            add EAX,68
            mov DWORD PTR [RDI+20],EAX
            mov EAX,R14D
            and EAX,512
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967244
            add EAX,97
            mov DWORD PTR [RDI+24],EAX
            mov EAX,R14D
            and EAX,1024
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967276
            add EAX,65
            mov DWORD PTR [RDI+28],EAX
            mov EAX,R14D
            and EAX,64
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967259
            add EAX,82
            mov DWORD PTR [RDI+32],EAX
            mov EAX,R14D
            and EAX,128
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967254
            add EAX,87
            mov DWORD PTR [RDI+36],EAX
            mov EAX,R14D
            and EAX,4096
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967242
            add EAX,99
            mov DWORD PTR [RDI+40],EAX
            mov EAX,R14D
            and EAX,8192
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967274
            add EAX,67
            mov DWORD PTR [RDI+44],EAX
            mov EAX,R14D
            and EAX,16384
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967230
            add EAX,111
            mov DWORD PTR [RDI+48],EAX
            mov EAX,R14D
            and EAX,32768
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967226
            add EAX,115
            mov DWORD PTR [RDI+52],EAX
            mov EAX,R14D
            and EAX,33554432
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967239
            add EAX,102
            mov DWORD PTR [RDI+60],EAX
            mov EAX,R14D
            and EAX,67108864
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967241
            add EAX,100
            mov DWORD PTR [RDI+64],EAX
            mov EAX,R14D
            and EAX,268435456
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967236
            add EAX,105
            mov DWORD PTR [RDI+68],EAX
            mov EAX,R14D
            and EAX,134217728
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967231
            add EAX,110
            mov DWORD PTR [RDI+72],EAX
            mov EAX,R14D
            and EAX,536870912
            cmp EAX,1
            sbb EAX,EAX
            and EAX,4294967258
            add EAX,83
            mov DWORD PTR [RDI+76],EAX
            mov EAX,R14D
            and EAX,1073741824
            cmp EAX,1
            sbb EAX,EAX
            and EDX,16777216
            and EAX,4294967271
            add EAX,70
            cmp EDX,1
            mov DWORD PTR [RDI+80],EAX
            sbb EAX,EAX
            and EAX,4294967268
            add EAX,73
            cmp R12D,2048
            mov DWORD PTR [RDI+84],EAX
            mov QWORD PTR [RBX],RBP
            mov DWORD PTR [RDI+88],58
            je .L_440610

            jle .L_440540

            cmp R12D,4096
            je .L_4405f0

            cmp R12D,8192
            jne .L_4404e2

            lea RSI,QWORD PTR [RIP+.L_44393c]
            mov RDI,RBP
            call wcscpy@PLT

            mov RBP,QWORD PTR [RBX]
.L_4404e2:

            mov RDI,RBP
            call wcslen@PLT

            lea RAX,QWORD PTR [RBP+RAX*4]
            cmp R13D,-1
            mov QWORD PTR [RBX],RAX
            jne .L_44025c
.L_4404fc:

            add RSP,24
.L_440500:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440510:

            test R15,R15
            jne .L_4401bf

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440520:

            mov EAX,EBP
            and EAX,4294967293
            cmp EAX,10001
            je .L_440110

            mov R15,QWORD PTR [RBX]
            jmp .L_4401e1
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440540:

            cmp R12D,1024
            jne .L_4404e2

            lea RSI,QWORD PTR [RIP+.L_4438f8]
            mov RDI,RBP
            call wcscpy@PLT

            mov RBP,QWORD PTR [RBX]
            jmp .L_4404e2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440560:

            lea RSI,QWORD PTR [RIP+.L_4438e0]
            mov RDI,RCX
            call wcscpy@PLT

            jmp .L_4400d3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440578:

            test R12D,15360
            je .L_440630

            lea RSI,QWORD PTR [RIP+.L_443868]
            mov RDI,RCX
            call wcscpy@PLT
.L_440594:

            mov R15,QWORD PTR [RBX]
            mov R13D,4294967295
            mov RDI,R15
            call wcslen@PLT

            lea RAX,QWORD PTR [R15+RAX*4]
            mov ECX,R12D
            and ECX,768
            lea RDI,QWORD PTR [RAX+4]
            mov QWORD PTR [RBX],RDI
            mov DWORD PTR [RAX],58
            jne .L_440520

            jmp .L_4402ce
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4405d0:

            test R12D,15360
            je .L_440288

            lea RSI,QWORD PTR [RIP+.L_443898]
            mov RDI,RCX
            call wcscpy@PLT

            jmp .L_440594
          .byte 0x66
          .byte 0x90
.L_4405f0:

            lea RSI,QWORD PTR [RIP+.L_443924]
            mov RDI,RBP
            call wcscpy@PLT

            mov RBP,QWORD PTR [RBX]
            jmp .L_4404e2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440610:

            lea RSI,QWORD PTR [RIP+.L_443910]
            mov RDI,RBP
            call wcscpy@PLT

            mov RBP,QWORD PTR [RBX]
            jmp .L_4404e2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440630:

            mov R13D,4294967295
            xor R15D,R15D
            jmp .L_440162
.L_44063e:

            nop
            nop
.L_440640:

            push R15
            push R14
            mov R15D,R8D
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12D,ECX
            mov RBX,RDI
            sub RSP,24
.L_44065a:

            test RSI,RSI
            mov RDX,QWORD PTR [RDI]
            mov EBP,DWORD PTR [RSP+80]
            mov R14D,DWORD PTR [RSP+88]
            je .L_440696

            mov RDI,RDX
            mov QWORD PTR [RSP+8],R9
            call strcpy@PLT

            mov RDX,QWORD PTR [RBX]
            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            call strlen@PLT

            mov RDX,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            add RDX,RAX
            mov QWORD PTR [RBX],RDX
.L_440696:

            cmp R12D,10004
            je .L_440740

            jle .L_440718

            cmp R12D,10006
            je .L_440c68

            jl .L_440bd8

            cmp R12D,10107
            jne .L_44076a

            movabs RAX,7308901812669871717
            mov EDI,64
            mov QWORD PTR [RDX],RAX
            mov WORD PTR [RDX+8],DI
.L_4406db:

            mov R14,QWORD PTR [RBX]
            mov RDI,R14
            call strlen@PLT

            add R14,RAX
            mov R8D,R13D
            lea RAX,QWORD PTR [R14+1]
            and R8D,768
            mov QWORD PTR [RBX],RAX
            mov BYTE PTR [R14],58
            je .L_4407f0

            mov R14D,4294967295
.L_44070a:

            mov RAX,QWORD PTR [RBX]
            jmp .L_440b27
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440718:

            cmp R12D,10002
            je .L_440c38

            jg .L_440756

            cmp R12D,10001
            jne .L_44076a
.L_440730:

            mov DWORD PTR [RDX],1919251317
            mov BYTE PTR [RDX+4],0
            mov RDX,QWORD PTR [RBX]
            jmp .L_44076a
          .byte 0x90
.L_440740:

            xor R9D,R9D
            test R13D,15360
            mov R14D,4294967295
            jne .L_440cb8
.L_440756:

            mov R10D,112
            mov DWORD PTR [RDX],1970238055
            mov WORD PTR [RDX+4],R10W
            mov RDX,QWORD PTR [RBX]
.L_44076a:

            mov RDI,RDX
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP],RDX
            call strlen@PLT

            mov RDX,QWORD PTR [RSP]
            mov R8D,R13D
            mov R9,QWORD PTR [RSP+8]
            add RDX,RAX
            and R8D,768
            lea RAX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBX],RAX
            mov BYTE PTR [RDX],58
            jne .L_440af0

            mov EAX,R12D
            and EAX,4294967293
            cmp EAX,10001
            jne .L_440803

            test R9,R9
            jne .L_440af9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4407c0:

            mov ESI,R14D
            mov RDI,RBX
            mov DWORD PTR [RSP],R8D
            call .L_43fe10

            test R13D,15360
            mov RAX,QWORD PTR [RBX]
            mov R8D,DWORD PTR [RSP]
            jne .L_440b27

            mov R14D,4294967295
            jmp .L_440b27
          .byte 0x66
          .byte 0x90
.L_4407f0:

            mov EAX,R12D
            mov R14D,4294967295
            and EAX,4294967293
            cmp EAX,10001
            je .L_4407c0
.L_440803:

            mov RAX,QWORD PTR [RBX]
.L_440806:

            mov EDX,EBP
            lea RCX,QWORD PTR [RAX+1]
            and EDX,8
            cmp EDX,1
            mov QWORD PTR [RBX],RCX
            sbb EDX,EDX
            and EDX,4294967227
            add EDX,114
            mov BYTE PTR [RAX],DL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,16
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967222
            add EAX,119
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,1
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967221
            add EAX,120
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,32
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967229
            add EAX,112
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,2048
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967241
            add EAX,100
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,256
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967273
            add EAX,68
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,512
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967244
            add EAX,97
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,1024
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967276
            add EAX,65
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,64
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967259
            add EAX,82
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,128
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967254
            add EAX,87
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,4096
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967242
            add EAX,99
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,8192
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967274
            add EAX,67
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,16384
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967230
            add EAX,111
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,32768
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967226
            add EAX,115
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],58
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,33554432
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967239
            add EAX,102
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,67108864
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967241
            add EAX,100
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,268435456
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967236
            add EAX,105
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,134217728
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967231
            add EAX,110
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,536870912
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967258
            add EAX,83
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,1073741824
            cmp EAX,1
            sbb EAX,EAX
            and EBP,16777216
            lea RCX,QWORD PTR [RDX+1]
            and EAX,4294967271
            add EAX,70
            cmp EBP,1
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            sbb EAX,EAX
            mov RDX,QWORD PTR [RBX]
            and EAX,4294967268
            add EAX,73
            cmp R13D,2048
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            mov RAX,QWORD PTR [RBX]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],58
            je .L_440c80

            jle .L_440c10

            cmp R13D,4096
            je .L_440bf0

            cmp R13D,8192
            jne .L_440ac3

            mov RAX,QWORD PTR [RBX]
            mov EDX,109
            mov DWORD PTR [RAX],1918987361
            mov WORD PTR [RAX+4],DX
.L_440ac3:

            mov RBP,QWORD PTR [RBX]
            mov RDI,RBP
            call strlen@PLT

            add RBP,RAX
            cmp R14D,-1
            mov QWORD PTR [RBX],RBP
            jne .L_440bae
.L_440ade:

            add RSP,24
.L_440ae2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440af0:

            test R9,R9
            je .L_440c9e
.L_440af9:

            mov RDI,QWORD PTR [RBX]
            mov RSI,R9
            mov DWORD PTR [RSP+8],R8D
            call strcpy@PLT

            mov RDX,QWORD PTR [RBX]
            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            call strlen@PLT

            mov RDX,QWORD PTR [RSP]
            mov R8D,DWORD PTR [RSP+8]
            add RAX,RDX
            mov QWORD PTR [RBX],RAX
.L_440b27:

            and R15D,4
            je .L_440b3a

            sub R12D,10005
            cmp R12D,1
            jbe .L_440b47
.L_440b3a:

            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],58
            mov RAX,QWORD PTR [RBX]
.L_440b47:

            test R8D,R8D
            je .L_440806

            mov EDX,EBP
            lea RCX,QWORD PTR [RAX+1]
            and EDX,292
            cmp EDX,1
            mov QWORD PTR [RBX],RCX
            sbb EDX,EDX
            and EDX,4294967227
            add EDX,114
            mov BYTE PTR [RAX],DL
            mov EAX,EBP
            mov RDX,QWORD PTR [RBX]
            and EAX,146
            cmp EAX,1
            sbb EAX,EAX
            lea RCX,QWORD PTR [RDX+1]
            and EBP,73
            and EAX,4294967222
            add EAX,119
            mov QWORD PTR [RBX],RCX
            cmp EBP,1
            mov BYTE PTR [RDX],AL
            mov RDX,QWORD PTR [RBX]
            sbb EAX,EAX
            and EAX,4294967221
            add EAX,120
            cmp R14D,-1
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RDX],AL
            je .L_440ade
.L_440bae:

            mov RAX,QWORD PTR [RBX]
            mov ESI,R14D
            mov RDI,RBX
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX],RDX
            mov BYTE PTR [RAX],58
            add RSP,24
.L_440bc5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_43fe10
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440bd8:

            mov DWORD PTR [RDX],1802723693
            mov BYTE PTR [RDX+4],0
            jmp .L_4406db
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440bf0:

            mov RAX,QWORD PTR [RBX]
            mov ECX,116
            mov DWORD PTR [RAX],1768191329
            mov WORD PTR [RAX+4],CX
            jmp .L_440ac3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440c10:

            cmp R13D,1024
            jne .L_440ac3

            mov RAX,QWORD PTR [RBX]
            mov ESI,119
            mov DWORD PTR [RAX],1869376609
            mov WORD PTR [RAX+4],SI
            jmp .L_440ac3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440c38:

            xor R9D,R9D
            test R13D,15360
            mov R14D,4294967295
            je .L_440730

            mov R14D,16498
            mov DWORD PTR [RDX],1701738351
            mov BYTE PTR [RDX+6],0
            mov WORD PTR [RDX+4],R14W
            jmp .L_440ccd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440c68:

            mov R8D,114
            mov DWORD PTR [RDX],1701344367
            mov WORD PTR [RDX+4],R8W
            jmp .L_4406db
          .byte 0x66
          .byte 0x90
.L_440c80:

            mov RAX,QWORD PTR [RBX]
            mov DWORD PTR [RAX],2037278052
            mov BYTE PTR [RAX+4],0
            jmp .L_440ac3

            nop
            nop
            nop
            nop
            nop
            nop
.L_440c98:

            mov R14D,4294967295
.L_440c9e:

            mov EAX,R12D
            and EAX,4294967293
            cmp EAX,10001
            jne .L_44070a

            jmp .L_4407c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440cb8:

            mov R11D,16496
            mov DWORD PTR [RDX],1970238055
            mov BYTE PTR [RDX+6],0
            mov WORD PTR [RDX+4],R11W
.L_440ccd:

            mov R14,QWORD PTR [RBX]
            mov RDI,R14
            call strlen@PLT

            add R14,RAX
            mov R8D,R13D
            lea RAX,QWORD PTR [R14+1]
            and R8D,768
            mov QWORD PTR [RBX],RAX
            mov BYTE PTR [R14],58
            jne .L_440c98

            mov RAX,QWORD PTR [RBX]
            mov R14D,4294967295
            jmp .L_440806
.L_440d00:

            cmp ESI,256
            mov EAX,1
            je .L_440d10

            ret 
          .byte 0x90
.L_440d10:

            mov EAX,EDX
            and EAX,4294967288
            jne .L_440d2f

            cmp ECX,10004
            je .L_440d38

            cmp ECX,10006
            je .L_440d60

            cmp ECX,10002
            je .L_440d48
.L_440d2f:

            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440d38:

            mov ECX,DWORD PTR [RDI]
            shl EDX,3
            and ECX,4294967239
            or EDX,ECX
            mov DWORD PTR [RDI],EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440d48:

            mov ECX,DWORD PTR [RDI]
            shl EDX,6
            and ECX,4294966847
            or EDX,ECX
            mov DWORD PTR [RDI],EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440d60:

            mov ECX,DWORD PTR [RDI]
            and ECX,4294967288
            or EDX,ECX
            mov DWORD PTR [RDI],EDX
            ret 
.L_440d6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_440d70:

            cmp RSI,RDI
            jbe .L_440dd8

            mov ECX,DWORD PTR [RDI]
            xor EAX,EAX
            lea R8D,DWORD PTR [RCX-48]
            cmp R8D,9
            jbe .L_440db0

            jmp .L_440de0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440d88:

            cmp ECX,55
            jle .L_440d94

            cmp EAX,214748364
            je .L_440db7
.L_440d94:

            lea EAX,DWORD PTR [RAX+RAX*4]
            add RDI,4
            cmp RDI,RSI
            lea EAX,DWORD PTR [R8+RAX*2]
            jae .L_440dc5
.L_440da4:

            mov ECX,DWORD PTR [RDI]
            lea R8D,DWORD PTR [RCX-48]
            cmp R8D,9
            ja .L_440dd0
.L_440db0:

            cmp EAX,214748364
            jle .L_440d88
.L_440db7:

            add RDI,4
            mov EAX,2147483647
            cmp RDI,RSI
            jb .L_440da4
.L_440dc5:

            mov DWORD PTR [RDX],EAX
            mov EAX,1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_440dd0:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440dd8:

            xor EAX,EAX
            jmp .L_440dc5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440de0:

            ret 
.L_440de2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_440df0:

            cmp RSI,RDI
            mov DWORD PTR [RDX],0
            jbe .L_440e28
.L_440dfb:

            add RDI,4
            mov EAX,DWORD PTR [RDI-4]
            cmp EAX,88
            je .L_440e20

            jg .L_440e30

            cmp EAX,82
            je .L_440e3f

            cmp EAX,87
            je .L_440e50

            cmp EAX,45
            je .L_440e23
.L_440e18:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440e20:

            or DWORD PTR [RDX],1
.L_440e23:

            cmp RDI,RSI
            jb .L_440dfb
.L_440e28:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x90
.L_440e30:

            cmp EAX,119
            je .L_440e50

            cmp EAX,120
            je .L_440e20

            cmp EAX,114
            jne .L_440e18
.L_440e3f:

            or DWORD PTR [RDX],4
            cmp RDI,RSI
            jb .L_440dfb

            jmp .L_440e28
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440e50:

            or DWORD PTR [RDX],2
            cmp RDI,RSI
            jb .L_440dfb

            jmp .L_440e28
.L_440e5a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_440e60:

            cmp RSI,RDI
            jbe .L_440ec8

            movsx EAX,BYTE PTR [RDI]
            lea ECX,DWORD PTR [RAX-48]
            cmp CL,9
            ja .L_440ec0

            xor ECX,ECX
            jmp .L_440ea1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_440e78:

            cmp AL,55
            jle .L_440e84

            cmp ECX,214748364
            je .L_440ea9
.L_440e84:

            lea ECX,DWORD PTR [RCX+RCX*4]
            add RDI,1
            cmp RDI,RSI
            lea ECX,DWORD PTR [RAX+RCX*2-48]
            je .L_440eb7
.L_440e94:

            movsx EAX,BYTE PTR [RDI]
            lea R8D,DWORD PTR [RAX-48]
            cmp R8B,9
            ja .L_440ec0
.L_440ea1:

            cmp ECX,214748364
            jle .L_440e78
.L_440ea9:

            add RDI,1
            mov ECX,2147483647
            cmp RDI,RSI
            jne .L_440e94
.L_440eb7:

            mov DWORD PTR [RDX],ECX
            mov EAX,1
            ret 
          .byte 0x90
.L_440ec0:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_440ec8:

            xor ECX,ECX
            jmp .L_440eb7
.L_440ecc:

            nop
            nop
            nop
            nop
.L_440ed0:

            cmp RSI,RDI
            mov DWORD PTR [RDX],0
            jbe .L_440f08
.L_440edb:

            add RDI,1
            movzx EAX,BYTE PTR [RDI-1]
            cmp AL,88
            je .L_440f00

            jg .L_440f10

            cmp AL,82
            je .L_440f1c

            cmp AL,87
            je .L_440f30

            cmp AL,45
            je .L_440f03
.L_440ef5:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440f00:

            or DWORD PTR [RDX],1
.L_440f03:

            cmp RDI,RSI
            jne .L_440edb
.L_440f08:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x90
.L_440f10:

            cmp AL,119
            je .L_440f30

            cmp AL,120
            je .L_440f00

            cmp AL,114
            jne .L_440ef5
.L_440f1c:

            or DWORD PTR [RDX],4
            cmp RDI,RSI
            jne .L_440edb

            jmp .L_440f08
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_440f30:

            or DWORD PTR [RDX],2
            cmp RDI,RSI
            jne .L_440edb

            jmp .L_440f08
.L_440f3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_440f40:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            sub RSP,88
.L_440f54:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test RDI,RDI
            mov DWORD PTR [RSP+4],ECX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP+16],R9
            je .L_44129a

            lea RAX,QWORD PTR [RSP+64]
            mov RBX,RDI
            xor ECX,ECX
            xor R15D,R15D
            mov EBP,3435973837
            mov R12D,EDX
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_441084
          .byte 0x66
          .byte 0x90
.L_440fb0:

            cmp EAX,10002
            je .L_441260

            jg .L_441158

            cmp EAX,10001
            jne .L_4410e2
.L_440fcc:

            add RCX,4
.L_440fd0:

            mov ESI,EAX
            lea R13,QWORD PTR [RCX+1]
            and ESI,4294967293
            cmp ESI,10001
            jne .L_4410eb

            mov EAX,DWORD PTR [RSP+4]
            lea RDI,QWORD PTR [RBX+24]
            test EAX,EAX
            je .L_4411a0

            mov RSI,RDI
            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+8]
            call .L_437d70

            test EAX,EAX
            jne .L_441180

            mov RDI,QWORD PTR [RSP+56]
            test RDI,RDI
            je .L_441190

            call wcslen@PLT

            add R13,RAX
            nop
            nop
            nop
.L_441028:

            mov EAX,DWORD PTR [RBX+12]
            add R13,1
.L_44102f:

            mov ESI,EAX
            and ESI,4294967293
            test R12B,4
            je .L_44104f

            test R14D,768
            je .L_44104f
.L_441043:

            sub EAX,10005
            cmp EAX,2
            sbb R13,0
.L_44104f:

            cmp R14D,15360
            je .L_441168
.L_44105c:

            lea RCX,QWORD PTR [R13+3]
.L_441060:

            add RCX,1
            cmp ESI,10001
            jne .L_441078

            mov ESI,R12D
            and ESI,1
            jne .L_4411e0
.L_441078:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_441218
.L_441084:

            mov EDX,DWORD PTR [RBX+8]
            test EDX,R14D
            je .L_441078

            cmp EDX,256
            mov EAX,DWORD PTR [RBX+12]
            je .L_441120

            add R15D,1
            test R14D,512
            je .L_4410b3

            lea RSI,QWORD PTR [RCX+8]
            test DH,2
            cmovne RCX,RSI
.L_4410b3:

            cmp EAX,10004
            je .L_44114b
.L_4410be:

            jle .L_440fb0

            cmp EAX,10006
            je .L_441158

            jl .L_440fcc

            lea RSI,QWORD PTR [RCX+9]
            cmp EAX,10107
            cmove RCX,RSI
.L_4410e2:

            mov ESI,EAX
            lea R13,QWORD PTR [RCX+1]
            and ESI,4294967293
.L_4410eb:

            mov EDI,R12D
            and EDI,4
            cmp R14D,15360
            je .L_44116b

            test EDI,EDI
            lea R13,QWORD PTR [RCX+2]
            je .L_44105c

            test R14D,768
            jne .L_441043

            jmp .L_44105c
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441120:

            mov ESI,EAX
            and ESI,4294967291
            cmp ESI,10002
            je .L_441078

            cmp EAX,10004
            je .L_441078

            add R15D,1
            cmp EAX,10004
            jne .L_4410be
.L_44114b:

            cmp R14D,15360
            je .L_44126d
.L_441158:

            add RCX,5
            jmp .L_440fd0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441168:

            mov EDX,DWORD PTR [RBX+8]
.L_44116b:

            xor ECX,ECX
            and DH,8
            sete CL
            lea RCX,QWORD PTR [R13+RCX*1+27]
            jmp .L_441060
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441180:

            jns .L_441190

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_441285
.L_441190:

            add R13,13
            jmp .L_441028
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4411a0:

            mov RCX,QWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+32]
            call .L_437de0

            test EAX,EAX
            jne .L_441285

            mov RAX,QWORD PTR [RSP+64]
            test RAX,RAX
            je .L_441190

            cmp QWORD PTR [RSP+48],0
            je .L_441190

            add R13,RAX
            jmp .L_441028
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4411e0:

            mov EDX,DWORD PTR [RBX+20]
            cmp EDX,9
            jle .L_441290

            nop
            nop
            nop
            nop
.L_4411f0:

            mov EAX,EDX
            add ESI,1
            mul EBP
            shr EDX,3
            cmp EDX,9
            jg .L_4411f0

            movsxd RSI,ESI
.L_441202:

            mov RBX,QWORD PTR [RBX]
            lea RCX,QWORD PTR [RSI+RCX*1+1]
            test RBX,RBX
            jne .L_441084

            nop
            nop
            nop
            nop
            nop
.L_441218:

            and R14D,256
            mov R13D,R12D
            je .L_441280
.L_441224:

            mov RAX,RCX
            xor ECX,ECX
            and R13D,4
            sete CL
            lea RCX,QWORD PTR [RCX+RAX*1+31]
.L_441235:

            mov RDI,QWORD PTR [RSP+72]
            xor RDI,QWORD PTR FS:[40]
            mov RAX,RCX
            jne .L_4412aa

            add RSP,88
.L_44124c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441260:

            cmp R14D,15360
            jne .L_440fcc
.L_44126d:

            lea R13,QWORD PTR [RCX+6]
            add R13,1
            jmp .L_44102f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441280:

            test R15D,R15D
            jne .L_441235
.L_441285:

            xor ECX,ECX
            jmp .L_441235
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441290:

            mov ESI,1
            jmp .L_441202
.L_44129a:

            and R14D,256
            je .L_441285

            xor ECX,ECX
            jmp .L_441224
.L_4412aa:

            call __stack_chk_fail@PLT
.L_4412af:

            nop
.L_4412b0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_4412b9:

            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_4412e9

            nop
            nop
            nop
            nop
            nop
            nop
.L_4412c8:

            mov RBP,QWORD PTR [RDI]
            add RDI,24
            call .L_437b60

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            test RBP,RBP
            mov QWORD PTR [RBX+8],RBP
            mov RDI,RBP
            jne .L_4412c8
.L_4412e9:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_4412ff

            call free@PLT

            mov QWORD PTR [RBX+32],0
.L_4412ff:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_441315

            call free@PLT

            mov QWORD PTR [RBX+40],0
.L_441315:

            mov QWORD PTR [RBX+16],0
            mov DWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+24],0
            add RSP,8
.L_44132f:

            pop RBX
            pop RBP
            ret 
.L_441332:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441340:

            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,8
.L_44134c:

            call .L_4412b0

            mov EAX,DWORD PTR [RBX]
            mov RBX,QWORD PTR [RBX+8]
            test RBX,RBX
            mov DWORD PTR [RBP],EAX
            je .L_44138f

            nop
.L_441360:

            mov ECX,DWORD PTR [RBX+12]
            mov EDX,DWORD PTR [RBX+16]
            mov RDI,RBP
            mov ESI,DWORD PTR [RBX+8]
            mov R8D,DWORD PTR [RBX+20]
            call .L_43fe80

            test RAX,RAX
            je .L_441387

            lea RSI,QWORD PTR [RBX+24]
            lea RDI,QWORD PTR [RAX+24]
            call .L_437bf0
.L_441387:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            jne .L_441360
.L_44138f:

            add RSP,8
.L_441393:

            pop RBX
            pop RBP
            ret 
.L_441396:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4413a0:

            push R12
            push RBP
            mov EBP,ECX
            push RBX
            mov EBX,EDX
            call .L_440d00

            test EAX,EAX
            jne .L_4413c0
.L_4413b1:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4413c0:

            mov ECX,EBP
            mov EDX,EBX
            mov R12,R9
            call .L_43fe80

            test RAX,RAX
            je .L_4413fc

            test R12,R12
            lea RDI,QWORD PTR [RAX+24]
            je .L_4413e1

            cmp BYTE PTR [R12],0
            jne .L_4413f0
.L_4413e1:

            call .L_437b60

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4413f0:

            mov RSI,R12
            call .L_437ef0

            xor EAX,EAX
            jmp .L_4413b1
.L_4413fc:

            mov EAX,4294967271
            jmp .L_4413b1
.L_441403:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441410:

            push R12
            push RBP
            mov EBP,ECX
            push RBX
            mov EBX,EDX
            call .L_440d00

            test EAX,EAX
            jne .L_441430
.L_441421:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441430:

            mov ECX,EBP
            mov EDX,EBX
            mov R12,R9
            call .L_43fe80

            test RAX,RAX
            je .L_441481

            test R12,R12
            lea RDI,QWORD PTR [RAX+24]
            je .L_44145a

            mov EAX,DWORD PTR [R12]
            test EAX,EAX
            je .L_44145a

            cmp QWORD PTR [RSP+32],0
            jne .L_441470
.L_44145a:

            call .L_437b60

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441470:

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,R12
            call .L_438060

            xor EAX,EAX
            jmp .L_441421
.L_441481:

            mov EAX,4294967271
            jmp .L_441421
.L_441488:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441490:

            mov RDX,QWORD PTR [RDI+8]
            xor EAX,EAX
            test RDX,RDX
            je .L_4414c8

            nop
            nop
            nop
            nop
            nop
.L_4414a0:

            mov ECX,DWORD PTR [RDX+8]
            mov RDX,QWORD PTR [RDX]
            and ECX,ESI
            cmp ECX,1
            sbb EAX,-1
            test RDX,RDX
            jne .L_4414a0

            test EAX,EAX
            je .L_4414c8

            lea EDX,DWORD PTR [RAX+3]
            and ESI,256
            cmovne EAX,EDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4414c8:

            ret 
.L_4414ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4414d0:

            mov EAX,DWORD PTR [RDI+48]
            ret 
.L_4414d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4414e0:

            mov R8,QWORD PTR [RDI+8]
            test R8,R8
            je .L_441520

            mov RDX,R8
            xor EAX,EAX
            nop
            nop
.L_4414f0:

            mov ECX,DWORD PTR [RDX+8]
            mov RDX,QWORD PTR [RDX]
            and ECX,ESI
            cmp ECX,1
            sbb EAX,-1
            test RDX,RDX
            jne .L_4414f0

            test EAX,EAX
            je .L_441520

            lea EDX,DWORD PTR [RAX+3]
            and ESI,256
            mov DWORD PTR [RDI+24],10002
            mov QWORD PTR [RDI+16],R8
            cmovne EAX,EDX
            ret 
          .byte 0x90
.L_441520:

            mov DWORD PTR [RDI+24],0
            xor EAX,EAX
            mov QWORD PTR [RDI+16],R8
            ret 
.L_44152e:

            nop
            nop
.L_441530:

            push RBP
            push RBX
            sub RSP,8
.L_441536:

            mov R11,QWORD PTR [RSP+32]
            mov RBX,QWORD PTR [RSP+40]
            mov QWORD PTR [RBX],0
            mov DWORD PTR [R11],4294967295
            mov EAX,DWORD PTR [RSI+24]
            test EAX,EAX
            je .L_4416d0

            test DH,1
            jne .L_4415d0
.L_44155e:

            mov RAX,QWORD PTR [RSI+16]
            test RAX,RAX
            je .L_441595

            mov R10D,DWORD PTR [RAX+8]
            test R10D,EDX
            je .L_441585

            jmp .L_441624
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441578:

            mov R10D,DWORD PTR [RAX+8]
            test R10D,EDX
            jne .L_441620
.L_441585:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_441578

            mov QWORD PTR [RSI+16],0
.L_441595:

            mov DWORD PTR [RSI+24],0
            mov DWORD PTR [RCX],0
            mov EAX,1
            mov DWORD PTR [R8],0
            mov DWORD PTR [R9],0
            mov DWORD PTR [R11],4294967295
            mov QWORD PTR [RBX],0
            add RSP,8
.L_4415c7:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4415d0:

            cmp EAX,10004
            je .L_4416a8

            cmp EAX,10006
            je .L_441678

            cmp EAX,10002
            jne .L_44155e

            mov EAX,DWORD PTR [RSI]
            shr EAX,6
            and EAX,7
            mov DWORD PTR [R8],EAX
            mov DWORD PTR [RCX],256
            xor EAX,EAX
            mov DWORD PTR [R9],10002
            mov DWORD PTR [RSI+24],10004
            add RSP,8
.L_441616:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441620:

            mov QWORD PTR [RSI+16],RAX
.L_441624:

            mov DWORD PTR [RCX],R10D
            mov EDX,DWORD PTR [RAX+16]
            mov RBP,RSI
            lea RSI,QWORD PTR [RAX+24]
            mov DWORD PTR [R8],EDX
            mov EDX,DWORD PTR [RAX+12]
            mov DWORD PTR [R9],EDX
            mov EDX,DWORD PTR [RAX+20]
            mov DWORD PTR [R11],EDX
            mov RDX,RBX
            call .L_437d00

            test EAX,EAX
            je .L_441661

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4416d7

            mov QWORD PTR [RBX],0
.L_441661:

            mov RAX,QWORD PTR [RBP+16]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RBP+16],RAX
            xor EAX,EAX
.L_44166e:

            add RSP,8
.L_441672:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_441678:

            mov EAX,DWORD PTR [RSI]
            and EAX,7
            mov DWORD PTR [R8],EAX
            mov RAX,QWORD PTR [RSI+8]
            mov DWORD PTR [RCX],256
            mov DWORD PTR [R9],10006
            mov DWORD PTR [RSI+24],4294967295
            mov QWORD PTR [RSI+16],RAX
            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4416a8:

            mov EAX,DWORD PTR [RSI]
            shr EAX,3
            and EAX,7
            mov DWORD PTR [R8],EAX
            mov DWORD PTR [RCX],256
            xor EAX,EAX
            mov DWORD PTR [R9],10004
            mov DWORD PTR [RSI+24],10006
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4416d0:

            mov EAX,4294967276
            jmp .L_44166e
.L_4416d7:

            mov EAX,4294967266
            jmp .L_44166e
.L_4416de:

            nop
            nop
.L_4416e0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R14,RCX
            push RBP
            push RBX
            mov EBP,EDX
            sub RSP,88
.L_4416f6:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+48]
            mov QWORD PTR [RSP+32],RSI
            test AH,60
            je .L_441920

            test AH,3
            mov EBX,15360
            jne .L_441870
.L_441725:

            mov RDI,QWORD PTR [R15+8]
            xor R9D,R9D
            mov ECX,1
            mov R8,R14
            mov EDX,EBP
            mov ESI,EBX
            call .L_440f40

            test RAX,RAX
            mov RCX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_441870

            mov EAX,EBP
            lea RDI,QWORD PTR [RCX*4]
            and EAX,8
            cmp EAX,1
            sbb R13D,R13D
            and R13D,4294967262
            call malloc@PLT

            add R13D,44
            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+64],RAX
            je .L_441970

            mov R12D,EBX
            and R12D,256
            jne .L_441990
.L_441791:

            mov R15,QWORD PTR [R15+8]
            test R15,R15
            je .L_4418e0

            lea RAX,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+28],R13D
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_44181d
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4417c0:

            test R12D,R12D
            je .L_4417d9

            mov RAX,QWORD PTR [RSP+64]
            mov EDI,DWORD PTR [RSP+28]
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+64],RDX
            mov DWORD PTR [RAX],EDI
.L_4417d9:

            test BPL,1
            mov EAX,4294967295
            je .L_4417e8

            mov EAX,DWORD PTR [R15+20]
.L_4417e8:

            mov EDX,DWORD PTR [R15+8]
            mov ECX,DWORD PTR [R15+12]
            mov R8D,EBP
            push RAX
.L_4417f4:

            mov EAX,DWORD PTR [R15+16]
            mov RSI,R13
            add R12D,1
            push RAX
            mov R9,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+32]
            call .L_440040

            pop RAX
            pop RDX
.L_441811:

            mov R15,QWORD PTR [R15]
            test R15,R15
            je .L_4418e0
.L_44181d:

            mov EAX,DWORD PTR [R15+8]
            test EAX,EBX
            je .L_441811

            cmp EAX,256
            je .L_4418a8

            xor R13D,R13D
            cmp EAX,512
            jne .L_441845

            lea RAX,QWORD PTR [RIP+.L_4437d8]
            test BPL,2
            cmovne R13,RAX
.L_441845:

            mov RDX,QWORD PTR [RSP]
            lea RSI,QWORD PTR [R15+24]
            mov RDI,R14
            call .L_437d70

            test EAX,EAX
            je .L_4417c0

            jns .L_441811

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            jne .L_441811

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441870:

            mov QWORD PTR [RSP+8],0
.L_441879:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+8]
            jne .L_441a33

            add RSP,88
.L_441896:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4418a8:

            mov EAX,DWORD PTR [R15+12]
            mov EDX,EAX
            and EDX,4294967291
            cmp EDX,10002
            je .L_441811

            xor R13D,R13D
            cmp EAX,10004
            jne .L_441845

            mov R15,QWORD PTR [R15]
            test R15,R15
            jne .L_44181d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4418e0:

            mov RAX,QWORD PTR [RSP+64]
            mov RDI,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+64],RDX
            mov DWORD PTR [RAX],0
            call wcslen@PLT

            cmp RAX,QWORD PTR [RSP+40]
            jge .L_441a38

            mov RBX,QWORD PTR [RSP+32]
            test RBX,RBX
            je .L_441879

            mov QWORD PTR [RBX],RAX
            jmp .L_441879
          .byte 0x90
.L_441920:

            mov EAX,EDX
            and EAX,512
            test DH,1
            je .L_441950

            test EAX,EAX
            mov EBX,256
            je .L_441725

            or EBP,2
            mov EBX,768
            jmp .L_441725
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441950:

            test EAX,EAX
            mov EBX,512
            jne .L_441725

            or EBP,2
            mov EBX,768
            jmp .L_441725
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441970:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            jne .L_441870

            lea RSI,QWORD PTR [RIP+.L_443807]
            mov EDI,1
            call .L_43f6e0

            nop
.L_441990:

            lea R12,QWORD PTR [RSP+64]
            push -1
.L_441997:

            mov EAX,DWORD PTR [R15]
            xor R9D,R9D
            mov R8D,EBP
            mov ECX,10002
            mov RDI,R12
            mov EDX,256
            xor ESI,ESI
            and EAX,448
            push RAX
            call .L_440040

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,R12
            xor R9D,R9D
            mov R8D,EBP
            mov ECX,10004
            xor ESI,ESI
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+80],RDX
            mov DWORD PTR [RAX],R13D
            mov EDX,256
            push -1
            mov EAX,DWORD PTR [R15]
            and EAX,56
            push RAX
            call .L_440040

            mov RAX,QWORD PTR [RSP+96]
            mov ECX,10006
            xor ESI,ESI
            mov RDI,R12
            xor R9D,R9D
            mov R8D,EBP
            mov R12D,3
            lea RDX,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+96],RDX
            add RSP,32
            mov DWORD PTR [RAX],R13D
            push -1
            mov EAX,DWORD PTR [R15]
            mov EDX,256
            and EAX,7
            push RAX
            call .L_440040

            pop RCX
            pop RSI
            jmp .L_441791
.L_441a33:

            call __stack_chk_fail@PLT
.L_441a38:

            lea RSI,QWORD PTR [RIP+.L_443811]
            mov EDI,1
            call .L_43f6e0
.L_441a49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441a50:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            mov EBX,EDX
            sub RSP,104
.L_441a63:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+48]
            mov QWORD PTR [RSP+48],RSI
            mov QWORD PTR [RSP+8],RCX
            test AH,60
            je .L_441c50

            test AH,3
            mov R12D,15360
            jne .L_441c16
.L_441a98:

            mov RDI,QWORD PTR [R15+8]
            mov R9,QWORD PTR [RSP+8]
            xor R8D,R8D
            xor ECX,ECX
            mov EDX,EBX
            mov ESI,R12D
            call .L_440f40

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RSP+56],RAX
            je .L_441c16

            mov EAX,EBX
            and EAX,8
            cmp EAX,1
            sbb R13D,R13D
            and R13D,4294967262
            call malloc@PLT

            add R13D,44
            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+80],RAX
            je .L_441c08

            mov EBP,R12D
            and EBP,256
            jne .L_441d20
.L_441afb:

            mov R15,QWORD PTR [R15+8]
            test R15,R15
            je .L_441ca0

            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,R15
            mov R15D,R13D
            mov R13,RAX
            jmp .L_441bcd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_441b38:

            xor R14D,R14D
            cmp EAX,512
            jne .L_441b50

            lea RAX,QWORD PTR [RIP+.L_443820]
            test BL,2
            cmovne R14,RAX
.L_441b50:

            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [R13+24]
            mov RSI,QWORD PTR [RSP+24]
            call .L_437de0

            test EAX,EAX
            jne .L_441c16

            test EBP,EBP
            je .L_441b85

            mov RAX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+80],RDX
            mov BYTE PTR [RAX],R15B
.L_441b85:

            mov R9,QWORD PTR [RSP+72]
            test R9,R9
            je .L_441b99

            test BL,1
            mov EAX,4294967295
            je .L_441b9d
.L_441b99:

            mov EAX,DWORD PTR [R13+20]
.L_441b9d:

            mov EDX,DWORD PTR [R13+8]
            mov ECX,DWORD PTR [R13+12]
            mov R8D,EBX
            push RAX
.L_441ba9:

            mov EAX,DWORD PTR [R13+16]
            mov RSI,R14
            add EBP,1
            push RAX
            mov RDI,QWORD PTR [RSP+48]
            call .L_440640

            pop RAX
            pop RDX
.L_441bc0:

            mov R13,QWORD PTR [R13]
            test R13,R13
            je .L_441ca0
.L_441bcd:

            mov EAX,DWORD PTR [R13+8]
            test EAX,R12D
            je .L_441bc0

            cmp EAX,256
            jne .L_441b38

            mov EAX,DWORD PTR [R13+12]
            mov EDX,EAX
            and EDX,4294967291
            cmp EDX,10002
            je .L_441bc0

            xor R14D,R14D
            cmp EAX,10004
            jne .L_441b50

            jmp .L_441bc0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441c08:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_441dd8
.L_441c16:

            mov QWORD PTR [RSP+40],0
.L_441c1f:

            mov RSI,QWORD PTR [RSP+88]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+40]
            jne .L_441dc2

            add RSP,104
.L_441c3c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441c50:

            mov EAX,EDX
            and EAX,512
            test DH,1
            je .L_441c80

            test EAX,EAX
            mov R12D,256
            je .L_441a98

            or EBX,2
            mov R12D,768
            jmp .L_441a98
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441c80:

            test EAX,EAX
            mov R12D,512
            jne .L_441a98

            or EBX,2
            mov R12D,768
            jmp .L_441a98
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_441ca0:

            mov RAX,QWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+80],RDX
            mov RDX,QWORD PTR [RSP+40]
            mov BYTE PTR [RAX],0
.L_441cb6:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_441cb6

            mov ECX,EAX
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            mov ESI,EAX
            cmove RDX,RCX
            add SIL,AL
            sbb RDX,3
            sub RDX,QWORD PTR [RSP+40]
            cmp RDX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+64],RDX
            jge .L_441dc7

            mov RAX,QWORD PTR [RSP+48]
            test RAX,RAX
            je .L_441c1f

            mov QWORD PTR [RAX],RDX
            jmp .L_441c1f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_441d20:

            lea RBP,QWORD PTR [RSP+80]
            push -1
.L_441d27:

            mov EAX,DWORD PTR [R15]
            xor R9D,R9D
            mov R8D,EBX
            mov ECX,10002
            mov RDI,RBP
            mov EDX,256
            xor ESI,ESI
            and EAX,448
            push RAX
            call .L_440640

            mov RAX,QWORD PTR [RSP+96]
            mov RDI,RBP
            xor R9D,R9D
            mov R8D,EBX
            mov ECX,10004
            xor ESI,ESI
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+96],RDX
            mov BYTE PTR [RAX],R13B
            mov EDX,256
            push -1
            mov EAX,DWORD PTR [R15]
            and EAX,56
            push RAX
            call .L_440640

            mov RAX,QWORD PTR [RSP+112]
            mov ECX,10006
            xor ESI,ESI
            mov RDI,RBP
            xor R9D,R9D
            mov R8D,EBX
            mov EBP,3
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RSP+112],RDX
            add RSP,32
            mov BYTE PTR [RAX],R13B
            push -1
            mov EAX,DWORD PTR [R15]
            mov EDX,256
            and EAX,7
            push RAX
            call .L_440640

            pop RCX
            pop RSI
            jmp .L_441afb
.L_441dc2:

            call __stack_chk_fail@PLT
.L_441dc7:

            lea RSI,QWORD PTR [RIP+.L_443811]
            mov EDI,1
            call .L_43f6e0
.L_441dd8:

            lea RSI,QWORD PTR [RIP+.L_443807]
            mov EDI,1
            call .L_43f6e0
.L_441de9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441df0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,216
.L_441e04:

            mov QWORD PTR [RSP+32],RDI
            mov DWORD PTR [RSP+20],EDX
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RDI
            xor EDI,EDI
            cmp EDX,512
            je .L_442a19

            jle .L_442a11

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,768
            je .L_441f45

            cmp EAX,15360
            mov R14D,6
            jne .L_442a07
.L_441e52:

            test RBX,RBX
            je .L_441f5c
.L_441e5b:

            mov EAX,DWORD PTR [RBX]
            mov DWORD PTR [RSP+28],0
            test EAX,EAX
            je .L_441f64

            lea RDI,QWORD PTR [RSP+96]
            xor R12D,R12D
            mov QWORD PTR [RSP+8],RDI
            lea EDI,DWORD PTR [R14-1]
            mov DWORD PTR [RSP+24],EDI
            nop
            nop
            nop
            nop
            nop
            nop
.L_441e88:

            mov R8,QWORD PTR [RSP+8]
            mov RCX,RBX
            xor EBP,EBP
            jmp .L_441e9e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_441e98:

            add RCX,4
            mov EAX,DWORD PTR [RCX]
.L_441e9e:

            lea EDX,DWORD PTR [RAX-9]
            cmp EDX,1
            jbe .L_441e98

            cmp EAX,32
            je .L_441e98

            test EAX,EAX
            je .L_442211

            cmp EAX,44
            je .L_442211

            cmp EAX,58
            je .L_442211

            mov RBX,RCX
            jmp .L_441ee4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441ed0:

            add RBX,4
            mov EAX,DWORD PTR [RBX]
            test EAX,EAX
            je .L_441ee9

            cmp EAX,44
            je .L_441ee9

            cmp EAX,58
            je .L_441ee9
.L_441ee4:

            cmp EAX,10
            jne .L_441ed0
.L_441ee9:

            mov ESI,DWORD PTR [RBX-4]
            lea RDX,QWORD PTR [RBX-4]
            lea EDI,DWORD PTR [RSI-9]
            cmp EDI,1
            ja .L_441f0e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441f00:

            sub RDX,4
            mov ESI,DWORD PTR [RDX]
            lea EDI,DWORD PTR [RSI-9]
            cmp EDI,1
            jbe .L_441f00
.L_441f0e:

            cmp ESI,32
            je .L_441f00

            add RDX,4
            test EAX,EAX
            je .L_441f70

            add RBX,4
            cmp EBP,R14D
            jge .L_441f2b
.L_441f24:

            mov QWORD PTR [R8],RCX
            mov QWORD PTR [R8+8],RDX
.L_441f2b:

            add EBP,1
            add R8,16
            cmp EAX,58
            jne .L_4421b0

            mov EAX,DWORD PTR [RBX]
            mov RCX,RBX
            jmp .L_441e9e
.L_441f45:

            test RBX,RBX
            mov R14D,5
            mov DWORD PTR [RSP+20],256
            jne .L_441e5b
.L_441f5c:

            mov DWORD PTR [RSP+28],0
.L_441f64:

            xor EBX,EBX
            jmp .L_442172
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_441f70:

            cmp EBP,R14D
            jl .L_441f24

            add EBP,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_441f80:

            mov RCX,QWORD PTR [RSP+96]
            test RCX,RCX
            je .L_441f93

            cmp DWORD PTR [RCX],35
            je .L_442160
.L_441f93:

            mov R15,QWORD PTR [RSP+104]
            mov EAX,DWORD PTR [RSP+20]
            mov DWORD PTR [RSP+92],4294967295
            mov DWORD PTR [RSP+88],0
            mov R11,R15
            sub R11,RCX
            sar R11,2
            cmp EAX,15360
            je .L_442219

            cmp DWORD PTR [RCX],100
            mov R10,QWORD PTR [RSP+120]
            mov R13,QWORD PTR [RSP+112]
            je .L_442658

            lea R8,QWORD PTR [RCX+4]
            mov R15D,EAX
            mov R9D,1
            mov DWORD PTR [RSP+16],0
.L_441fe9:

            cmp R10,R13
            ja .L_4426f1
.L_441ff2:

            mov EAX,DWORD PTR [RSP+16]
            add EAX,3
            cmp EAX,EBP
            jge .L_44204e

            cdqe 
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+104]
            mov RDI,QWORD PTR [RSP+RAX*1+96]
            cmp RSI,RDI
            jbe .L_44204e

            lea RDX,QWORD PTR [RSP+92]
            mov QWORD PTR [RSP+72],R10
            mov QWORD PTR [RSP+64],R8
            mov DWORD PTR [RSP+56],R9D
            mov QWORD PTR [RSP+48],R11
            mov QWORD PTR [RSP+40],RCX
            call .L_440d70

            mov R10,QWORD PTR [RSP+72]
            mov R8,QWORD PTR [RSP+64]
            mov R9D,DWORD PTR [RSP+56]
            mov R11,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+40]
.L_44204e:

            mov EAX,DWORD PTR [RCX]
            cmp EAX,109
            je .L_442749
.L_442059:

            jle .L_4427d0

            cmp EAX,111
            je .L_44283c

            cmp EAX,117
            jne .L_442206

            cmp R11,1
            je .L_4420b1

            cmp R11,4
            mov QWORD PTR [RSP+48],R10
            mov DWORD PTR [RSP+40],R9D
            jne .L_442206

            lea RSI,QWORD PTR [RIP+.L_443970]
            mov EDX,3
            mov RDI,R8
            call wmemcmp@PLT

            test EAX,EAX
            mov R9D,DWORD PTR [RSP+40]
            mov R10,QWORD PTR [RSP+48]
            jne .L_442206
.L_4420b1:

            cmp DWORD PTR [RSP+92],-1
            jne .L_4429ef

            cmp R10,R13
            ja .L_4429ef

            xor EBP,EBP
            xor R13D,R13D
            mov ECX,10002
            xor EAX,EAX
.L_4420d1:

            mov EDX,DWORD PTR [RSP+88]
            test EDX,EDX
            jne .L_44211d

            mov R8D,DWORD PTR [RSP+16]
            mov DWORD PTR [RSP+40],ECX
            add R8D,2
            sub R8D,EAX
            movsxd RAX,R8D
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+104]
            mov RDI,QWORD PTR [RSP+RAX*1+96]
            cmp RSI,RDI
            jbe .L_442206

            lea RDX,QWORD PTR [RSP+88]
            call .L_440df0

            test EAX,EAX
            je .L_442206

            mov EDX,DWORD PTR [RSP+88]
            mov ECX,DWORD PTR [RSP+40]
.L_44211d:

            mov R10,RBP
            sub RSP,8
.L_442124:

            mov R9,R13
            sub R10,R13
            mov ESI,R15D
            sar R10,2
            push R10
            mov R8D,DWORD PTR [RSP+108]
            mov RDI,QWORD PTR [RSP+48]
            call .L_441410

            cmp EAX,-20
            pop RDX
            pop RCX
.L_442147:

            jl .L_442aa9

            test EAX,EAX
            mov EAX,4294967276
            cmovne R12D,EAX
            or DWORD PTR [RSP+28],R15D
            nop
            nop
            nop
.L_442160:

            test RBX,RBX
            je .L_44216f

            mov EAX,DWORD PTR [RBX]
            test EAX,EAX
            jne .L_441e88
.L_44216f:

            mov EBX,R12D
.L_442172:

            mov ESI,DWORD PTR [RSP+28]
            mov RDI,QWORD PTR [RSP+32]
            call .L_4414e0
.L_442180:

            mov EAX,EBX
            mov RBX,QWORD PTR [RSP+200]
            xor RBX,QWORD PTR FS:[40]
            jne .L_442ade

            add RSP,216
.L_4421a0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4421b0:

            cmp EBP,R14D
            jge .L_441f80

            mov EDX,DWORD PTR [RSP+24]
            movsxd RCX,EBP
            mov RDI,QWORD PTR [RSP+8]
            mov RAX,RCX
            shl RAX,4
            sub EDX,EBP
            lea RAX,QWORD PTR [RDI+RAX*1+8]
            add RDX,RCX
            shl RDX,4
            lea RDX,QWORD PTR [RDI+RDX*1+24]
            nop
.L_4421e0:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX-8],0
            add RAX,16
            cmp RDX,RAX
            jne .L_4421e0

            jmp .L_441f80
.L_4421fd:

            test SIL,SIL
            jne .L_442afd
.L_442206:

            mov R12D,4294967276
            jmp .L_442160
.L_442211:

            mov RBX,RCX
            jmp .L_441ee9
.L_442219:

            cmp R11,5
            je .L_44292e

            jle .L_4428c5

            cmp R11,6
            je .L_442956

            cmp R11,9
            jne .L_442206

            lea RSI,QWORD PTR [RIP+.L_4437b0]
            mov EDX,9
            mov RDI,RCX
            call wmemcmp@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            jne .L_442206

            mov R11D,1
            mov ECX,10107
            xor EBP,EBP
            xor R13D,R13D
.L_442265:

            movsxd RAX,R11D
            shl RAX,4
            mov R8,QWORD PTR [RSP+RAX*1+104]
            mov RSI,QWORD PTR [RSP+RAX*1+96]
            cmp R8,RSI
            jbe .L_442206

            mov EDX,DWORD PTR [RSP+88]
            xor EDI,EDI
.L_442281:

            add RSI,4
            mov EAX,DWORD PTR [RSI-4]
            sub EAX,45
            cmp EAX,75
            ja .L_442640

            lea R9,QWORD PTR [RIP+.L_4439b8]
            movsxd RAX,DWORD PTR [R9+RAX*4]
            add RAX,R9
            jmp RAX
.L_4422a4:

            or DH,128
            mov EDI,1
.L_4422ac:

            cmp R8,RSI
            ja .L_442281
.L_4422b1:

            test DIL,DIL
            jne .L_442ad5
.L_4422ba:

            mov EAX,DWORD PTR [RSP+16]
            add EAX,2
            cdqe 
            shl RAX,4
            mov R8,QWORD PTR [RSP+RAX*1+104]
            mov RDI,QWORD PTR [RSP+RAX*1+96]
            cmp R8,RDI
            jbe .L_442206

            mov EAX,DWORD PTR [RSP+88]
            xor ESI,ESI
.L_4422e0:

            add RDI,4
            mov EDX,DWORD PTR [RDI-4]
            sub EDX,45
            cmp EDX,65
            ja .L_4421fd

            lea R15,QWORD PTR [RIP+.L_443ae8]
            movsxd RDX,DWORD PTR [R15+RDX*4]
            add RDX,R15
            jmp RDX
.L_442303:

            or EDX,1
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442320:

            or EDX,8
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442340:

            or EDX,32
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442360:

            or DH,64
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442380:

            or EDX,16
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4423a0:

            or DH,8
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4423c0:

            or DH,16
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4423e0:

            or DH,2
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442400:

            or DL,128
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442420:

            or EDX,64
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442440:

            or DH,1
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442460:

            or DH,32
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442480:

            or DH,4
            cmp R8,RSI
            mov EDI,1
            ja .L_442281

            jmp .L_4422b1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4424a0:

            or EAX,16777216
            mov ESI,1
.L_4424aa:

            cmp R8,RDI
            ja .L_4422e0
.L_4424b3:

            test SIL,SIL
            jne .L_442acc
.L_4424bc:

            mov EAX,DWORD PTR [RSP+16]
            mov DWORD PTR [RSP+40],ECX
            add EAX,3
            cdqe 
            shl RAX,4
            mov R15,QWORD PTR [RSP+RAX*1+96]
            mov RAX,QWORD PTR [RSP+RAX*1+104]
            sub RAX,R15
            sar RAX,2
            cmp RAX,4
            je .L_442a4d

            cmp RAX,5
            jne .L_442206

            lea RSI,QWORD PTR [RIP+.L_4438f8]
            mov EDX,5
            mov RDI,R15
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+40]
            je .L_442a83

            lea RSI,QWORD PTR [RIP+.L_443924]
            mov EDX,5
            mov RDI,R15
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+40]
            je .L_442a78

            lea RSI,QWORD PTR [RIP+.L_44393c]
            mov EDX,5
            mov RDI,R15
            call wmemcmp@PLT

            test EAX,EAX
            jne .L_442206

            mov ECX,DWORD PTR [RSP+40]
            mov R15D,8192
.L_442558:

            mov EAX,DWORD PTR [RSP+16]
            add EAX,4
            cdqe 
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+104]
            mov RDI,QWORD PTR [RSP+RAX*1+96]
            cmp RSI,RDI
            ja .L_442a8e

            mov EDX,DWORD PTR [RSP+88]
            jmp .L_44211d
.L_442581:

            or EAX,134217728
            cmp R8,RDI
            mov ESI,1
            ja .L_4422e0

            jmp .L_4424b3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4425a0:

            or EAX,1073741824
            cmp R8,RDI
            mov ESI,1
            ja .L_4422e0

            jmp .L_4424b3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4425c0:

            or EAX,268435456
            cmp R8,RDI
            mov ESI,1
            ja .L_4422e0

            jmp .L_4424b3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4425e0:

            or EAX,33554432
            cmp R8,RDI
            mov ESI,1
            ja .L_4422e0

            jmp .L_4424b3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442600:

            or EAX,67108864
            cmp R8,RDI
            mov ESI,1
            ja .L_4422e0

            jmp .L_4424b3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442620:

            or EAX,536870912
            cmp R8,RDI
            mov ESI,1
            ja .L_4422e0

            jmp .L_4424b3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442640:

            test DIL,DIL
            je .L_442206

            mov DWORD PTR [RSP+88],EDX
            jmp .L_442206
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442658:

            cmp R11,1
            je .L_4429b5

            cmp R11,6
            lea R8,QWORD PTR [RCX+4]
            jbe .L_4428ad

            lea RSI,QWORD PTR [RIP+.L_443954]
            mov RDI,R8
            mov EDX,6
            mov QWORD PTR [RSP+64],R10
            mov QWORD PTR [RSP+56],R11
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+40],R8
            call wmemcmp@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            mov R8,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+56]
            mov R10,QWORD PTR [RSP+64]
            jne .L_4428ad

            cmp R11,7
            je .L_4429b5

            lea RAX,QWORD PTR [RCX+28]
            lea R8,QWORD PTR [RCX+32]
            mov R9D,1
            sub R15,RAX
            mov QWORD PTR [RSP+96],RAX
            mov RCX,RAX
            mov R11,R15
            mov R15D,512
            sar R11,2
            cmp R10,R13
            jbe .L_441ff2
.L_4426f1:

            lea RDX,QWORD PTR [RSP+92]
            mov RSI,R10
            mov RDI,R13
            mov QWORD PTR [RSP+72],R8
            mov DWORD PTR [RSP+64],R9D
            mov QWORD PTR [RSP+56],R11
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+40],R10
            call .L_440d70

            cmp DWORD PTR [RSP+92],-1
            mov R10,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+48]
            mov R11,QWORD PTR [RSP+56]
            mov R9D,DWORD PTR [RSP+64]
            mov R8,QWORD PTR [RSP+72]
            je .L_441ff2

            mov EAX,DWORD PTR [RCX]
            cmp EAX,109
            jne .L_442059
.L_442749:

            cmp R11,1
            je .L_442a2e

            cmp R11,4
            mov QWORD PTR [RSP+40],R10
            jne .L_442206

            lea RSI,QWORD PTR [RIP+.L_4439a8]
            mov EDX,3
            mov RDI,R8
            call wmemcmp@PLT

            test EAX,EAX
            jne .L_442206

            mov EAX,DWORD PTR [RSP+16]
            mov ECX,10005
            mov R10,QWORD PTR [RSP+40]
            add EAX,2
            cmp EAX,EBP
            jne .L_44288a
.L_442797:

            cmp R10,R13
            jbe .L_4428a1

            lea RDX,QWORD PTR [RSP+88]
            mov RSI,R10
            mov RDI,R13
            mov DWORD PTR [RSP+40],ECX
            call .L_440df0

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+40]
            je .L_442ab0

            xor EBP,EBP
            xor R13D,R13D
            mov EAX,1
            jmp .L_4420d1
          .byte 0x90
.L_4427d0:

            cmp EAX,103
            jne .L_442206

            cmp R11,1
            je .L_442819

            cmp R11,5
            mov QWORD PTR [RSP+48],R10
            mov DWORD PTR [RSP+40],R9D
            jne .L_442206

            lea RSI,QWORD PTR [RIP+.L_443980]
            mov EDX,4
            mov RDI,R8
            call wmemcmp@PLT

            test EAX,EAX
            mov R9D,DWORD PTR [RSP+40]
            mov R10,QWORD PTR [RSP+48]
            jne .L_442206
.L_442819:

            cmp DWORD PTR [RSP+92],-1
            je .L_442ae3
.L_442824:

            movsxd RAX,R9D
            mov ECX,10003
            shl RAX,4
            mov RBP,QWORD PTR [RSP+RAX*1+104]
            xor EAX,EAX
            jmp .L_4420d1
.L_44283c:

            cmp R11,1
            je .L_442a24

            cmp R11,5
            mov QWORD PTR [RSP+40],R10
            jne .L_442206

            lea RSI,QWORD PTR [RIP+.L_443994]
            mov EDX,4
            mov RDI,R8
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,10006
            mov R10,QWORD PTR [RSP+40]
            jne .L_442206
.L_44287b:

            mov EAX,DWORD PTR [RSP+16]
            add EAX,2
            cmp EAX,EBP
            je .L_442797
.L_44288a:

            cmp DWORD PTR [RSP+16],1
            sbb EAX,EAX
            add EAX,4
            cmp EAX,EBP
            jne .L_4428a1

            cmp R10,R13
            ja .L_442206
.L_4428a1:

            xor EBP,EBP
            xor R13D,R13D
            xor EAX,EAX
            jmp .L_4420d1
.L_4428ad:

            mov R15D,DWORD PTR [RSP+20]
            mov R9D,1
            mov DWORD PTR [RSP+16],0
            jmp .L_441fe9
.L_4428c5:

            cmp R11,4
            jne .L_442206

            lea RSI,QWORD PTR [RIP+.L_443884]
            mov RDI,RCX
            mov EDX,4
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,10001
            jne .L_442206
.L_4428f0:

            mov R13,QWORD PTR [RSP+112]
            mov RBP,QWORD PTR [RSP+120]
            mov R11D,2
            mov DWORD PTR [RSP+16],1
            cmp RBP,R13
            jbe .L_442265

            lea RDX,QWORD PTR [RSP+92]
            mov RSI,RBP
            mov RDI,R13
            mov DWORD PTR [RSP+40],ECX
            call .L_440d70

            mov ECX,DWORD PTR [RSP+40]
            jmp .L_442265
.L_44292e:

            lea RSI,QWORD PTR [RIP+.L_4438b4]
            mov RDI,RCX
            mov EDX,5
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,10003
            je .L_4428f0

            mov R12D,4294967276
            jmp .L_442160
.L_442956:

            lea RSI,QWORD PTR [RIP+.L_443868]
            mov EDX,6
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RCX
            call wmemcmp@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            je .L_442a38

            mov RCX,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RIP+.L_443898]
            mov EDX,6
            mov RDI,RCX
            call wmemcmp@PLT

            test EAX,EAX
            mov DWORD PTR [RSP+16],EAX
            jne .L_442206

            mov R11D,1
            mov ECX,10004
            xor EBP,EBP
            xor R13D,R13D
            jmp .L_442265
.L_4429b5:

            sub R10,R13
            lea R8,QWORD PTR [R13+4]
            mov RCX,R13
            sar R10,2
            mov R13,QWORD PTR [RSP+128]
            mov R9D,2
            mov R11,R10
            mov R15D,512
            mov R10,QWORD PTR [RSP+136]
            mov DWORD PTR [RSP+16],1
            jmp .L_441fe9
.L_4429ef:

            movsxd RAX,R9D
            mov ECX,10001
            shl RAX,4
            mov RBP,QWORD PTR [RSP+RAX*1+104]
            xor EAX,EAX
            jmp .L_4420d1
.L_442a07:

            mov EBX,4294967266
            jmp .L_442180
.L_442a11:

            cmp EDX,256
            jne .L_442a07
.L_442a19:

            mov R14D,5
            jmp .L_441e52
.L_442a24:

            mov ECX,10006
            jmp .L_44287b
.L_442a2e:

            mov ECX,10005
            jmp .L_44287b
.L_442a38:

            mov R11D,1
            mov ECX,10002
            xor EBP,EBP
            xor R13D,R13D
            jmp .L_442265
.L_442a4d:

            lea RSI,QWORD PTR [RIP+.L_443910]
            mov RDI,R15
            mov EDX,4
            mov R15D,2048
            call wmemcmp@PLT

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+40]
            je .L_442558

            jmp .L_442206
.L_442a78:

            mov R15D,4096
            jmp .L_442558
.L_442a83:

            mov R15D,1024
            jmp .L_442558
.L_442a8e:

            lea RDX,QWORD PTR [RSP+92]
            mov DWORD PTR [RSP+16],ECX
            call .L_440d70

            mov EDX,DWORD PTR [RSP+88]
            mov ECX,DWORD PTR [RSP+16]
            jmp .L_44211d
.L_442aa9:

            mov EBX,EAX
            jmp .L_442180
.L_442ab0:

            cmp DWORD PTR [RSP+16],1
            sbb EDX,EDX
            add EDX,4
            cmp EBP,EDX
            je .L_442206

            xor EBP,EBP
            xor R13D,R13D
            jmp .L_4420d1
.L_442acc:

            mov DWORD PTR [RSP+88],EAX
            jmp .L_4424bc
.L_442ad5:

            mov DWORD PTR [RSP+88],EDX
            jmp .L_4422ba
.L_442ade:

            call __stack_chk_fail@PLT
.L_442ae3:

            cmp R10,R13
            ja .L_442824

            xor EBP,EBP
            xor R13D,R13D
            mov ECX,10004
            xor EAX,EAX
            jmp .L_4420d1
.L_442afd:

            mov DWORD PTR [RSP+88],EAX
            jmp .L_442206
.L_442b06:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442b10:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,200
.L_442b24:

            mov QWORD PTR [RSP+32],RDI
            mov DWORD PTR [RSP+20],EDX
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RDI
            xor EDI,EDI
            cmp EDX,512
            mov QWORD PTR [RSP+56],RCX
            je .L_4435d1

            jle .L_4435c9

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,768
            je .L_442c5d

            cmp EAX,15360
            mov EBP,6
            jne .L_4435db
.L_442b76:

            test RBX,RBX
            je .L_442c73
.L_442b7f:

            movzx EAX,BYTE PTR [RBX]
            xor R13D,R13D
            mov DWORD PTR [RSP+28],0
            test AL,AL
            je .L_442c7e

            lea R14,QWORD PTR [RSP+80]
            nop
            nop
            nop
            nop
            nop
            nop
.L_442ba0:

            mov R8,R14
            mov RCX,RBX
            xor R9D,R9D
            jmp .L_442bb7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442bb0:

            add RCX,1
            movzx EAX,BYTE PTR [RCX]
.L_442bb7:

            lea EDX,DWORD PTR [RAX-9]
            cmp DL,1
            jbe .L_442bb0

            cmp AL,32
            je .L_442bb0

            cmp AL,44
            je .L_442e2d

            test AL,AL
            je .L_442e2d

            cmp AL,58
            je .L_442e2d

            mov RBX,RCX
            jmp .L_442bf3
.L_442be0:

            add RBX,1
            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            je .L_442bf7

            cmp AL,44
            je .L_442bf7

            cmp AL,58
            je .L_442bf7
.L_442bf3:

            cmp AL,10
            jne .L_442be0
.L_442bf7:

            movzx ESI,BYTE PTR [RBX-1]
            lea RDX,QWORD PTR [RBX-1]
            lea EDI,DWORD PTR [RSI-9]
            cmp DIL,1
            ja .L_442c20

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_442c10:

            sub RDX,1
            movzx ESI,BYTE PTR [RDX]
            lea EDI,DWORD PTR [RSI-9]
            cmp DIL,1
            jbe .L_442c10
.L_442c20:

            cmp SIL,32
            je .L_442c10

            add RDX,1
            test AL,AL
            je .L_442cc0

            add RBX,1
            cmp EBP,R9D
            jle .L_442c42
.L_442c3b:

            mov QWORD PTR [R8],RCX
            mov QWORD PTR [R8+8],RDX
.L_442c42:

            add R9D,1
            add R8,16
            cmp AL,58
            jne .L_442de0

            movzx EAX,BYTE PTR [RBX]
            mov RCX,RBX
            jmp .L_442bb7
.L_442c5d:

            test RBX,RBX
            mov EBP,5
            mov DWORD PTR [RSP+20],256
            jne .L_442b7f
.L_442c73:

            mov DWORD PTR [RSP+28],0
            xor R13D,R13D
.L_442c7e:

            mov ESI,DWORD PTR [RSP+28]
            mov RDI,QWORD PTR [RSP+32]
            call .L_4414e0
.L_442c8c:

            mov RBX,QWORD PTR [RSP+184]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_44373e

            add RSP,200
.L_442cad:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442cc0:

            cmp EBP,R9D
            jg .L_442c3b

            add R9D,1
            nop
            nop
            nop
.L_442cd0:

            mov R10,QWORD PTR [RSP+80]
            test R10,R10
            je .L_442ce4

            cmp BYTE PTR [R10],35
            je .L_442dbe
.L_442ce4:

            mov RAX,QWORD PTR [RSP+88]
            mov R15D,DWORD PTR [RSP+20]
            mov DWORD PTR [RSP+76],4294967295
            mov DWORD PTR [RSP+72],0
            mov R11,RAX
            sub R11,R10
            cmp R15D,15360
            je .L_442e35

            cmp BYTE PTR [R10],100
            mov R12,QWORD PTR [RSP+96]
            mov R8,QWORD PTR [RSP+104]
            je .L_442e98

            lea RAX,QWORD PTR [R10+1]
            mov DWORD PTR [RSP+24],1
            xor ECX,ECX
            mov QWORD PTR [RSP+8],RAX
.L_442d38:

            cmp R8,R12
            ja .L_442ed7
.L_442d41:

            lea EAX,DWORD PTR [RCX+3]
            cmp EAX,R9D
            jge .L_442d7a

            cdqe 
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+88]
            mov RDI,QWORD PTR [RSP+RAX*1+80]
            cmp RSI,RDI
            jbe .L_442d7a

            lea RDX,QWORD PTR [RSP+76]
            mov QWORD PTR [RSP+48],R8
            mov DWORD PTR [RSP+40],ECX
            call .L_440e60

            mov R8,QWORD PTR [RSP+48]
            mov ECX,DWORD PTR [RSP+40]
.L_442d7a:

            movzx EAX,BYTE PTR [R10]
            cmp AL,109
            je .L_442f10
.L_442d86:

            jle .L_442f88

            cmp AL,111
            je .L_443050

            cmp AL,117
            jne .L_442db8

            cmp R11,1
            je .L_44354a

            cmp R11,4
            jne .L_442db8

            mov RAX,QWORD PTR [RSP+8]
            cmp WORD PTR [RAX],25971
            je .L_443540
.L_442db8:

            mov R13D,4294967276
.L_442dbe:

            test RBX,RBX
            je .L_442c7e

            movzx EAX,BYTE PTR [RBX]
            test AL,AL
            jne .L_442ba0

            jmp .L_442c7e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442de0:

            cmp EBP,R9D
            jle .L_442cd0

            lea EDX,DWORD PTR [RBP-1]
            movsxd RCX,R9D
            mov RAX,RCX
            sub EDX,R9D
            shl RAX,4
            add RDX,RCX
            lea RAX,QWORD PTR [R14+RAX*1+8]
            shl RDX,4
            lea RDX,QWORD PTR [R14+RDX*1+24]
            nop
            nop
            nop
            nop
            nop
            nop
.L_442e10:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX-8],0
            add RAX,16
            cmp RDX,RAX
            jne .L_442e10

            jmp .L_442cd0
.L_442e2d:

            mov RBX,RCX
            jmp .L_442bf7
.L_442e35:

            cmp R11,5
            je .L_4435a6

            jle .L_4430aa

            cmp R11,6
            je .L_4434ff

            cmp R11,9
            jne .L_442db8

            movabs RAX,7308901812669871717
            cmp QWORD PTR [R10],RAX
            jne .L_442db8

            cmp BYTE PTR [R10+8],64
            jne .L_442db8

            xor R10D,R10D
            mov R15D,1
            mov R11D,10107
            xor R9D,R9D
            xor R12D,R12D
            jmp .L_4430e6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442e98:

            cmp R11,1
            je .L_443571

            lea RDI,QWORD PTR [R10+1]
            cmp R11,6
            mov QWORD PTR [RSP+8],RDI
            jbe .L_442ebf

            cmp DWORD PTR [R10+1],1969317477
            je .L_44362b
.L_442ebf:

            xor ECX,ECX
            cmp R8,R12
            mov R15D,DWORD PTR [RSP+20]
            mov DWORD PTR [RSP+24],1
            jbe .L_442d41
.L_442ed7:

            lea RDX,QWORD PTR [RSP+76]
            mov RSI,R8
            mov RDI,R12
            mov DWORD PTR [RSP+48],ECX
            mov QWORD PTR [RSP+40],R8
            call .L_440e60

            cmp DWORD PTR [RSP+76],-1
            mov R8,QWORD PTR [RSP+40]
            mov ECX,DWORD PTR [RSP+48]
            je .L_442d41

            movzx EAX,BYTE PTR [R10]
            cmp AL,109
            jne .L_442d86
.L_442f10:

            cmp R11,1
            je .L_442f3a

            cmp R11,4
            jne .L_442db8

            mov RAX,QWORD PTR [RSP+8]
            cmp WORD PTR [RAX],29537
            jne .L_442db8

            cmp BYTE PTR [RAX+2],107
            jne .L_442db8
.L_442f3a:

            lea EAX,DWORD PTR [RCX+2]
            mov R11D,10005
            cmp EAX,R9D
            jne .L_443087
.L_442f4c:

            cmp R8,R12
            jbe .L_44309d

            lea RDX,QWORD PTR [RSP+72]
            mov RSI,R8
            mov RDI,R12
            mov DWORD PTR [RSP+8],ECX
            call .L_440ed0

            test EAX,EAX
            mov ECX,DWORD PTR [RSP+8]
            je .L_4436af

            xor R9D,R9D
            xor R12D,R12D
            mov EAX,1
            jmp .L_442fd2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_442f88:

            cmp AL,103
            jne .L_442db8

            cmp R11,1
            je .L_442fb1

            cmp R11,5
            jne .L_442db8

            mov RAX,QWORD PTR [RSP+8]
            cmp DWORD PTR [RAX],1886744434
            jne .L_442db8
.L_442fb1:

            cmp DWORD PTR [RSP+76],-1
            je .L_44374c
.L_442fbc:

            movsxd RAX,DWORD PTR [RSP+24]
            mov R11D,10003
            shl RAX,4
            mov R9,QWORD PTR [RSP+RAX*1+88]
            xor EAX,EAX
.L_442fd2:

            mov R10D,DWORD PTR [RSP+72]
            test R10D,R10D
            jne .L_44301c

            add ECX,2
            mov QWORD PTR [RSP+8],R9
            sub ECX,EAX
            movsxd RAX,ECX
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+88]
            mov RDI,QWORD PTR [RSP+RAX*1+80]
            cmp RSI,RDI
            jbe .L_442db8

            lea RDX,QWORD PTR [RSP+72]
            call .L_440ed0

            test EAX,EAX
            je .L_442db8
.L_443012:

            mov R10D,DWORD PTR [RSP+72]
            mov R9,QWORD PTR [RSP+8]
.L_44301c:

            mov RDI,QWORD PTR [RSP+32]
            mov ECX,R11D
            mov EDX,R10D
            mov ESI,R15D
            mov QWORD PTR [RSP+8],R9
            mov R8D,DWORD PTR [RSP+76]
            call .L_440d00

            test EAX,EAX
            mov R9,QWORD PTR [RSP+8]
            jne .L_4434b0
.L_443046:

            or DWORD PTR [RSP+28],R15D
            jmp .L_442dbe
.L_443050:

            cmp R11,1
            je .L_443601

            cmp R11,5
            jne .L_442db8

            mov RAX,QWORD PTR [RSP+8]
            mov R11D,10006
            cmp DWORD PTR [RAX],1919248500
            jne .L_442db8
.L_44307b:

            lea EAX,DWORD PTR [RCX+2]
            cmp EAX,R9D
            je .L_442f4c
.L_443087:

            cmp ECX,1
            sbb EAX,EAX
            add EAX,4
            cmp EAX,R9D
            jne .L_44309d

            cmp R8,R12
            ja .L_442db8
.L_44309d:

            xor R9D,R9D
            xor R12D,R12D
            xor EAX,EAX
            jmp .L_442fd2
.L_4430aa:

            cmp R11,4
            jne .L_442db8

            cmp DWORD PTR [R10],1919251317
            mov R11D,10001
            jne .L_442db8
.L_4430c7:

            mov R12,QWORD PTR [RSP+96]
            mov R9,QWORD PTR [RSP+104]
            mov R15D,2
            mov R10D,1
            cmp R12,R9
            jb .L_44360c
.L_4430e6:

            movsxd RAX,R15D
            shl RAX,4
            mov RDI,QWORD PTR [RSP+RAX*1+88]
            mov RCX,QWORD PTR [RSP+RAX*1+80]
            cmp RDI,RCX
            jbe .L_442db8

            mov EDX,DWORD PTR [RSP+72]
            xor ESI,ESI
.L_443106:

            add RCX,1
            movzx EAX,BYTE PTR [RCX-1]
            sub EAX,45
            cmp AL,75
            ja .L_443480

            lea R15,QWORD PTR [RIP+.L_443bf0]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [R15+RAX*4]
            add RAX,R15
            jmp RAX
.L_44312c:

            or DH,128
            mov ESI,1
.L_443134:

            cmp RDI,RCX
            jne .L_443106
.L_443139:

            test SIL,SIL
            jne .L_443743
.L_443142:

            lea EAX,DWORD PTR [R10+2]
            cdqe 
            shl RAX,4
            mov RDI,QWORD PTR [RSP+RAX*1+88]
            mov RSI,QWORD PTR [RSP+RAX*1+80]
            cmp RDI,RSI
            jbe .L_442db8

            mov EAX,DWORD PTR [RSP+72]
            xor ECX,ECX
.L_443165:

            add RSI,1
            movzx EDX,BYTE PTR [RSI-1]
            sub EDX,45
            cmp DL,65
            ja .L_443498

            lea R15,QWORD PTR [RIP+.L_443d20]
            movzx EDX,DL
            movsxd RDX,DWORD PTR [R15+RDX*4]
            add RDX,R15
            jmp RDX
.L_44318c:

            or EDX,1
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x90
.L_4431a0:

            or DH,8
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4431c0:

            or DH,16
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4431e0:

            or DH,2
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443200:

            or DL,128
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443220:

            or EDX,64
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443240:

            or DH,1
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443260:

            or DH,32
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443280:

            or DH,4
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4432a0:

            or EDX,8
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4432c0:

            or EDX,32
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4432e0:

            or DH,64
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443300:

            or EDX,16
            cmp RDI,RCX
            mov ESI,1
            jne .L_443106

            jmp .L_443139
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443320:

            or EAX,16777216
            mov ECX,1
.L_44332a:

            cmp RDI,RSI
            jne .L_443165
.L_443333:

            test CL,CL
            jne .L_443768
.L_44333b:

            lea EDX,DWORD PTR [R10+3]
            movsxd RDX,EDX
            shl RDX,4
            mov RAX,QWORD PTR [RSP+RDX*1+80]
            mov RDX,QWORD PTR [RSP+RDX*1+88]
            sub RDX,RAX
            cmp RDX,4
            je .L_443671

            cmp RDX,5
            jne .L_442db8

            cmp DWORD PTR [RAX],1869376609
            je .L_44370d

            cmp DWORD PTR [RAX],1768191329
            je .L_443729
.L_44337f:

            cmp DWORD PTR [RAX],1918987361
            jne .L_442db8

            cmp BYTE PTR [RAX+4],109
            jne .L_442db8

            mov R15D,8192
.L_44339b:

            lea EAX,DWORD PTR [R10+4]
            cdqe 
            shl RAX,4
            mov RSI,QWORD PTR [RSP+RAX*1+88]
            mov RDI,QWORD PTR [RSP+RAX*1+80]
            cmp RSI,RDI
            ja .L_4436f9

            mov R10D,DWORD PTR [RSP+72]
            jmp .L_44301c
.L_4433c2:

            or EAX,134217728
            cmp RDI,RSI
            mov ECX,1
            jne .L_443165

            jmp .L_443333
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4433e0:

            or EAX,1073741824
            cmp RDI,RSI
            mov ECX,1
            jne .L_443165

            jmp .L_443333
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443400:

            or EAX,268435456
            cmp RDI,RSI
            mov ECX,1
            jne .L_443165

            jmp .L_443333
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443420:

            or EAX,33554432
            cmp RDI,RSI
            mov ECX,1
            jne .L_443165

            jmp .L_443333
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443440:

            or EAX,67108864
            cmp RDI,RSI
            mov ECX,1
            jne .L_443165

            jmp .L_443333
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443460:

            or EAX,536870912
            cmp RDI,RSI
            mov ECX,1
            jne .L_443165

            jmp .L_443333
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443480:

            test SIL,SIL
            je .L_442db8

            mov DWORD PTR [RSP+72],EDX
            jmp .L_442db8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_443498:

            test CL,CL
            je .L_442db8

            mov DWORD PTR [RSP+72],EAX
            jmp .L_442db8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4434b0:

            mov RDI,QWORD PTR [RSP+32]
            mov ECX,R11D
            mov EDX,R10D
            mov ESI,R15D
            mov QWORD PTR [RSP+8],R9
            call .L_43fe80

            test RAX,RAX
            je .L_443771

            test R12,R12
            lea RDI,QWORD PTR [RAX+24]
            je .L_4434f5

            mov R9,QWORD PTR [RSP+8]
            mov RDX,R9
            sub RDX,R12
            cmp BYTE PTR [R12],0
            je .L_4434f5

            test RDX,RDX
            jne .L_4436cb
.L_4434f5:

            call .L_437b60

            jmp .L_443046
.L_4434ff:

            cmp DWORD PTR [R10],1701738351
            je .L_443688
.L_44350c:

            cmp DWORD PTR [R10],1970238055
            jne .L_442db8

            cmp WORD PTR [R10+4],16496
            jne .L_442db8

            xor R10D,R10D
            mov R15D,1
            mov R11D,10004
            xor R9D,R9D
            xor R12D,R12D
            jmp .L_4430e6
.L_443540:

            cmp BYTE PTR [RAX+2],114
            jne .L_442db8
.L_44354a:

            cmp DWORD PTR [RSP+76],-1
            jne .L_4435e6

            cmp R8,R12
            ja .L_4435e6

            xor R9D,R9D
            xor R12D,R12D
            mov R11D,10002
            xor EAX,EAX
            jmp .L_442fd2
.L_443571:

            lea RAX,QWORD PTR [R12+1]
            mov R11,R8
            mov R10,R12
            sub R11,R12
            mov R8,QWORD PTR [RSP+120]
            mov R12,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+8],RAX
            mov DWORD PTR [RSP+24],2
            mov R15D,512
            mov ECX,1
            jmp .L_442d38
.L_4435a6:

            cmp DWORD PTR [R10],1970238055
            jne .L_442db8

            cmp BYTE PTR [R10+4],112
            mov R11D,10003
            jne .L_442db8

            jmp .L_4430c7
.L_4435c9:

            cmp EDX,256
            jne .L_4435db
.L_4435d1:

            mov EBP,5
            jmp .L_442b76
.L_4435db:

            mov R13D,4294967266
            jmp .L_442c8c
.L_4435e6:

            movsxd RAX,DWORD PTR [RSP+24]
            mov R11D,10001
            shl RAX,4
            mov R9,QWORD PTR [RSP+RAX*1+88]
            xor EAX,EAX
            jmp .L_442fd2
.L_443601:

            mov R11D,10006
            jmp .L_44307b
.L_44360c:

            lea RDX,QWORD PTR [RSP+76]
            mov RSI,R9
            mov RDI,R12
            mov QWORD PTR [RSP+8],R9
            call .L_440e60

            mov R9,QWORD PTR [RSP+8]
            jmp .L_4430e6
.L_44362b:

            cmp WORD PTR [RDI+4],29804
            jne .L_442ebf

            xor ECX,ECX
            cmp R11,7
            je .L_443571

            lea RDX,QWORD PTR [R10+7]
            lea RDI,QWORD PTR [R10+8]
            mov DWORD PTR [RSP+24],1
            mov R15D,512
            sub RAX,RDX
            mov QWORD PTR [RSP+80],RDX
            mov QWORD PTR [RSP+8],RDI
            mov R11,RAX
            mov R10,RDX
            jmp .L_442d38
.L_443671:

            cmp DWORD PTR [RAX],2037278052
            mov R15D,2048
            je .L_44339b

            jmp .L_442db8
.L_443688:

            cmp WORD PTR [R10+4],16498
            jne .L_44350c

            xor R10D,R10D
            mov R15D,1
            mov R11D,10002
            xor R9D,R9D
            xor R12D,R12D
            jmp .L_4430e6
.L_4436af:

            cmp ECX,1
            sbb EDX,EDX
            add EDX,4
            cmp R9D,EDX
            je .L_442db8

            xor R9D,R9D
            xor R12D,R12D
            jmp .L_442fd2
.L_4436cb:

            mov RCX,QWORD PTR [RSP+56]
            mov RSI,R12
            call .L_4380a0

            test EAX,EAX
            je .L_443046

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4435db

            mov R13D,4294967276
            jmp .L_443046
.L_4436f9:

            lea RDX,QWORD PTR [RSP+76]
            mov QWORD PTR [RSP+8],R9
            call .L_440e60

            jmp .L_443012
.L_44370d:

            cmp BYTE PTR [RAX+4],119
            mov R15D,1024
            je .L_44339b

            cmp DWORD PTR [RAX],1768191329
            jne .L_44337f
.L_443729:

            cmp BYTE PTR [RAX+4],116
            mov R15D,4096
            jne .L_44337f

            jmp .L_44339b
.L_44373e:

            call __stack_chk_fail@PLT
.L_443743:

            mov DWORD PTR [RSP+72],EDX
            jmp .L_443142
.L_44374c:

            cmp R8,R12
            ja .L_442fbc

            xor R9D,R9D
            xor R12D,R12D
            mov R11D,10004
            xor EAX,EAX
            jmp .L_442fd2
.L_443768:

            mov DWORD PTR [RSP+72],EAX
            jmp .L_44333b
.L_443771:

            mov R13D,4294967271
            jmp .L_442c8c
.L_44377c:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_443780:
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4437b0:
          .string "e"
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4437d8:
          .string "d"
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4437fc:
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x0
.L_443807:
          .string "No memory"
.L_443811:
          .string "Buffer overrun"
.L_443820:
          .string "default:"
          .byte 0x65
          .byte 0x66
          .byte 0x61
          .byte 0x75
          .byte 0x6c
          .byte 0x74
          .byte 0x0
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x0
          .byte 0x61
          .byte 0x73
          .byte 0x6b
          .byte 0x0
          .byte 0x67
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x70
          .byte 0x0
          .byte 0x6f
          .byte 0x77
          .byte 0x6e
          .byte 0x65
          .byte 0x72
          .byte 0x40
          .byte 0x0
          .byte 0x67
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x70
          .byte 0x40
          .byte 0x0
          .byte 0x65
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x79
          .byte 0x6f
          .byte 0x6e
          .byte 0x65
          .byte 0x40
          .byte 0x0
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x77
          .byte 0x0
          .byte 0x61
          .byte 0x75
          .byte 0x64
          .byte 0x69
          .byte 0x74
          .byte 0x0
          .byte 0x61
          .byte 0x6c
          .byte 0x61
          .byte 0x72
          .byte 0x6d
          .byte 0x0
.L_443868:
          .string "o"
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443884:
          .string "u"
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443898:
          .string "g"
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4438b4:
          .string "g"
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4438cc:
          .string "m"
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4438e0:
          .string "o"
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4438f8:
          .string "a"
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443910:
          .string "d"
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443924:
          .string "a"
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44393c:
          .string "a"
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443954:
          .string "e"
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443970:
          .string "s"
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443980:
          .string "r"
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443994:
          .string "t"
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4439a8:
          .string "a"
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4439b8:
          .long .L_4422ac-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442480-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442460-.L_4439b8
          .long .L_442440-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442420-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442400-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_4423e0-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_4423c0-.L_4439b8
          .long .L_4423a0-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442360-.L_4439b8
          .long .L_442340-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442320-.L_4439b8
          .long .L_4422a4-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442640-.L_4439b8
          .long .L_442380-.L_4439b8
          .long .L_442303-.L_4439b8
.L_443ae8:
          .long .L_4424aa-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4425a0-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4424a0-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_442620-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_442600-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4425e0-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4425c0-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_4421fd-.L_443ae8
          .long .L_442581-.L_443ae8
.L_443bf0:
          .long .L_443134-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443280-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443260-.L_443bf0
          .long .L_443240-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443220-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443200-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_4431e0-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_4431c0-.L_443bf0
          .long .L_4431a0-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_4432e0-.L_443bf0
          .long .L_4432c0-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_4432a0-.L_443bf0
          .long .L_44312c-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443480-.L_443bf0
          .long .L_443300-.L_443bf0
          .long .L_44318c-.L_443bf0
.L_443d20:
          .long .L_44332a-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_4433e0-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443320-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443460-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443440-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443420-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443400-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_443498-.L_443d20
          .long .L_4433c2-.L_443d20
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443e30:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_4440fd]
            push RBP
            push RBX
            lea RBP,QWORD PTR [RIP+.L_4440f0]
            lea RBX,QWORD PTR [RIP+.L_4440e7]
            lea R12,QWORD PTR [RIP+.L_4440f7]
            mov R14D,ESI
            sub RSP,8
.L_443e60:

            mov BYTE PTR [RDI],0
.L_443e63:

            mov EAX,R14D
            neg EAX
            and EAX,R14D
            je .L_443f0b
.L_443e71:

            mov EDX,EAX
            mov RSI,RBX
            not EDX
            and R14D,EDX
            cmp EAX,4
            je .L_443eb0

            jbe .L_443f20

            cmp EAX,32
            mov RSI,RBP
            je .L_443eb0

            cmp EAX,32768
            mov RSI,R12
            je .L_443eb0

            cmp EAX,16
            lea RSI,QWORD PTR [RIP+.L_4440ec]
            je .L_443eb0
.L_443ea4:

            mov RSI,R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443eb0:

            mov RDI,R15
.L_443eb3:

            mov EDX,DWORD PTR [RDI]
            add RDI,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_443eb3

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RDI+2]
            mov ECX,EAX
            cmove RDI,RDX
            add CL,AL
            sbb RDI,3
            call stpcpy@PLT

            test R14D,R14D
            je .L_443e63

            mov EDX,47
            mov WORD PTR [RAX],DX
            mov EAX,R14D
            neg EAX
            and EAX,R14D
            jne .L_443e71
.L_443f0b:

            add RSP,8
.L_443f0f:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443f20:

            cmp EAX,1
            lea RSI,QWORD PTR [RIP+.L_4440dc]
            je .L_443eb0

            cmp EAX,2
            lea RSI,QWORD PTR [RIP+.L_4440e0]
            je .L_443eb0

            jmp .L_443ea4
.L_443f41:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_443f50:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,168
.L_443f5c:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI]
            cmp EAX,212668873
            je .L_444010

            jbe .L_443fd0

            cmp EAX,2965749982
            je .L_444000

            cmp EAX,3221336261
            jne .L_44401c

            lea R8,QWORD PTR [RIP+.L_44411b]
.L_443f97:

            cmp EAX,ESI
            jne .L_4440b0

            mov EAX,DWORD PTR [RBX+4]
            test EAX,EDX
            je .L_444050

            xor EAX,EAX
.L_443fac:

            mov RDI,QWORD PTR [RSP+152]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4440d7

            add RSP,168
.L_443fca:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_443fd0:

            cmp EAX,14594245
            je .L_443ff0

            cmp EAX,195932357
            jne .L_44401c

            lea R8,QWORD PTR [RIP+.L_44412e]
            jmp .L_443f97
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_443ff0:

            lea R8,QWORD PTR [RIP+.L_44410e]
            jmp .L_443f97
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444000:

            lea R8,QWORD PTR [RIP+.L_444100]
            jmp .L_443f97
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444010:

            lea R8,QWORD PTR [RIP+.L_444140]
            jmp .L_443f97
.L_44401c:

            lea RDI,QWORD PTR [RIP+.L_44414e]
            mov QWORD PTR [RSP+8],RCX
            call .L_402dca

            mov RCX,QWORD PTR [RSP+8]
            mov RDI,RCX
            call .L_402dca

            lea RDI,QWORD PTR [RIP+.L_444170]
            call .L_402dca

            call abort@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444050:

            cmp EAX,32768
            mov QWORD PTR [RSP+8],RCX
            je .L_444099

            lea RDI,QWORD PTR [RSP+80]
            mov ESI,EDX
            call .L_443e30

            mov ESI,DWORD PTR [RBX+4]
            lea RDI,QWORD PTR [RSP+16]
            mov RBP,RAX
            call .L_443e30

            mov RCX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_450f60-52592]
            mov R8,RAX
            mov R9,RBP
            mov ESI,4294967295
            mov RDI,RBX
            xor EAX,EAX
            call .L_43f5d0
.L_444099:

            mov DWORD PTR [RBX+4],32768
            mov EAX,4294967266
            jmp .L_443fac
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4440b0:

            lea RDX,QWORD PTR [RIP+.L_444198]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBX
            call .L_43f5d0

            mov DWORD PTR [RBX+4],32768
            mov EAX,4294967266
            jmp .L_443fac
.L_4440d7:

            call __stack_chk_fail@PLT
.L_4440dc:
          .string "new"
.L_4440e0:
          .string "header"
.L_4440e7:
          .string "data"
.L_4440ec:
          .string "eof"
.L_4440f0:
          .string "closed"
.L_4440f7:
          .string "fatal"
.L_4440fd:
          .string "??"
.L_444100:
          .string "archive_write"
.L_44410e:
          .string "archive_read"
.L_44411b:
          .string "archive_write_disk"
.L_44412e:
          .string "archive_read_disk"
.L_444140:
          .string "archive_match"
.L_44414e:
          .string "PROGRAMMER ERROR: Function "
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444170:

            and BYTE PTR [RCX+110],CH
            jbe .L_4441e4

            imul ESP,DWORD PTR [RBP+100],32
            ja .L_4441e4
          .byte 0x74
          .byte 0x68
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x61
          .byte 0x6c
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x68
          .byte 0x61
          .byte 0x6e
          .byte 0x64
          .byte 0x6c
          .byte 0x65
          .byte 0x2e
          .byte 0xa
          .byte 0x0
          .byte 0x0
.L_444198:
          .byte 0x50
          .byte 0x52
          .byte 0x4f
          .byte 0x47
          .byte 0x52
          .byte 0x41
          .byte 0x4d
          .byte 0x4d
          .byte 0x45
          .byte 0x52
          .byte 0x20
          .byte 0x45
          .byte 0x52
          .byte 0x52
          .byte 0x4f
          .byte 0x52
          .byte 0x3a
          .byte 0x20
          .byte 0x46
          .byte 0x75
          .byte 0x6e
          .byte 0x63
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x27
          .byte 0x25
          .byte 0x73
          .byte 0x27
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x6f
          .byte 0x6b
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x27
          .byte 0x25
          .byte 0x73
          .byte 0x27
          .byte 0x20
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x6f
          .byte 0x62
          .byte 0x6a
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x2c
          .byte 0x20
          .byte 0x77
          .byte 0x68
          .byte 0x69
          .byte 0x63
          .byte 0x68
          .byte 0x20
          .byte 0x69
          .byte 0x73
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x74
.L_4441e4:

            and BYTE PTR [RBX+117],DH
          .byte 0x70
          .byte 0x70

            outsd DX,DWORD PTR [RSI]
            jb .L_444260

            add BYTE PTR CS:[RCX+78],CL
            push RSP
          .byte 0x45
          .byte 0x52
          .byte 0x4e
          .byte 0x41
          .byte 0x4c
          .byte 0x20
          .byte 0x45
          .byte 0x52
          .byte 0x52
          .byte 0x4f
          .byte 0x52
          .byte 0x3a
          .byte 0x20
          .byte 0x46
          .byte 0x75
          .byte 0x6e
          .byte 0x63
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x27
          .byte 0x25
          .byte 0x73
          .byte 0x27
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x76
          .byte 0x6f
          .byte 0x6b
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x77
          .byte 0x69
          .byte 0x74
          .byte 0x68
          .byte 0x20
          .byte 0x61
          .byte 0x72
          .byte 0x63
          .byte 0x68
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x72
          .byte 0x75
          .byte 0x63
          .byte 0x74
          .byte 0x75
          .byte 0x72
          .byte 0x65
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x27
          .byte 0x25
          .byte 0x73
          .byte 0x27
          .byte 0x2c
          .byte 0x20
          .byte 0x73
          .byte 0x68
          .byte 0x6f
          .byte 0x75
          .byte 0x6c
          .byte 0x64
          .byte 0x20
          .byte 0x62
          .byte 0x65
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x27
          .byte 0x25
          .byte 0x73
          .byte 0x27
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0

            add BYTE PTR [RAX],AL
            nop
            nop
.L_444260:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov QWORD PTR [RDI+8],0
            mov RBX,RDI
            movsx ESI,BYTE PTR [RSI]
            mov R12,RBP
            cmp SIL,32
            jne .L_4442cb

            nop
            nop
            nop
            nop
            nop
            nop
.L_444288:

            add R12,1
            movsx ESI,BYTE PTR [R12]
            cmp SIL,32
            je .L_444288

            test SIL,223
            jne .L_4442d1

            nop
            nop
            nop
.L_4442a0:

            mov RAX,R12
            sub RAX,RBP
.L_4442a6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_4442b0:

            cmp SIL,34
            lea R14,QWORD PTR [R12+1]
            je .L_4442f0

            mov RDI,RBX
            mov R12,R14
            call .L_437330
.L_4442c6:

            movsx ESI,BYTE PTR [R12]
.L_4442cb:

            test SIL,223
            je .L_4442a0
.L_4442d1:

            cmp SIL,92
            jne .L_4442b0

            movsx ESI,BYTE PTR [R12+1]
            test SIL,SIL
            je .L_444360

            mov RDI,RBX
            add R12,2
            call .L_437330

            jmp .L_4442c6
.L_4442f0:

            movsx ESI,BYTE PTR [R12+1]
.L_4442f6:

            test SIL,SIL
            je .L_444320
.L_4442fb:

            cmp SIL,92
            je .L_444330

            cmp SIL,34
            lea R13,QWORD PTR [R14+1]
            je .L_444350

            mov RDI,RBX
            call .L_437330

            movsx ESI,BYTE PTR [R14+1]
            mov R14,R13
            test SIL,SIL
            jne .L_4442fb
.L_444320:

            pop RBX
.L_444321:

            mov RAX,-25
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_444330:

            movsx ESI,BYTE PTR [R14+1]
            test SIL,SIL
            je .L_444320

            mov RDI,RBX
            add R14,2
            call .L_437330

            movsx ESI,BYTE PTR [R14]
            jmp .L_4442f6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_444350:

            cmp R13,R12
            js .L_444320

            mov R12,R13
            jmp .L_4442c6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444360:

            add R12,1
            mov RAX,R12
            sub RAX,RBP
            jmp .L_4442a6
.L_44436f:

            nop
.L_444370:

            cmp QWORD PTR [RDI],0
            je .L_444400

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,8
.L_44438e:

            mov EAX,DWORD PTR [RDI+16]
            mov RDI,QWORD PTR [RDI+8]
            add EAX,2
            cdqe 
            lea RSI,QWORD PTR [RAX*8]
            call realloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_4443f8

            movsxd R15,DWORD PTR [RBX+16]
            mov QWORD PTR [RBX+8],RAX
            mov RDI,RBP
            call strdup@PLT

            test RAX,RAX
            mov R13,R15
            lea R14,QWORD PTR [R15*8]
            mov QWORD PTR [R12+R15*8],RAX
            je .L_4443f8

            add R13D,1
            xor EAX,EAX
            mov DWORD PTR [RBX+16],R13D
            mov QWORD PTR [R12+R14*1+8],0
.L_4443e6:

            add RSP,8
.L_4443ea:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4443f8:

            mov EAX,4294967266
            jmp .L_4443e6
          .byte 0x90
.L_444400:

            mov EAX,4294967271
            ret 
.L_444406:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444410:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RBX,RSI
            sub RSP,32
.L_444422:

            mov R12,RSP
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            mov RDI,R12
            mov QWORD PTR [RSP+16],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_444260

            test RAX,RAX
            js .L_44451a

            cmp QWORD PTR [RSP+8],0
            je .L_44451a

            mov R13,QWORD PTR [RSP]
            mov R14,RAX
            mov RDI,R13
            call strlen@PLT

            mov RDI,QWORD PTR [RBP]
            lea RSI,QWORD PTR [RAX+1]
            call realloc@PLT

            test RAX,RAX
            je .L_444555

            mov RSI,R13
            mov RDI,RAX
            mov QWORD PTR [RBP],RAX
            call strcpy@PLT

            mov R13,QWORD PTR [RSP]
            mov ESI,47
            mov RDI,R13
            call strrchr@PLT

            lea RDX,QWORD PTR [RAX+1]
            test RAX,RAX
            mov RDI,RBP
            cmovne R13,RDX
            mov RSI,R13
            call .L_444370

            test EAX,EAX
            mov R13D,EAX
            jne .L_444520

            add RBX,R14
            mov RDI,R12
            mov RSI,RBX
            call .L_444260

            test RAX,RAX
            js .L_44451a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4444e8:

            je .L_444520

            add RBX,RAX
            cmp QWORD PTR [RSP+8],0
            jne .L_4444fa

            cmp BYTE PTR [RBX],0
            je .L_444520
.L_4444fa:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBP
            call .L_444370

            test EAX,EAX
            jne .L_444550

            mov RSI,RBX
            mov RDI,R12
            call .L_444260

            test RAX,RAX
            jns .L_4444e8
.L_44451a:

            mov R13D,4294967271
.L_444520:

            mov RDI,R12
            call .L_434290

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R13D
            jne .L_44455d

            add RSP,32
.L_44453f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444550:

            mov R13D,EAX
            jmp .L_444520
.L_444555:

            mov R13D,4294967266
            jmp .L_444520
.L_44455d:

            call __stack_chk_fail@PLT
.L_444562:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444570:

            mov ESI,24
            mov EDI,1
            jmp calloc@PLT
.L_44457f:

            nop
.L_444580:

            test RDI,RDI
            je .L_4445e0

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_44458e:

            mov RDI,QWORD PTR [RDI]
            call free@PLT

            mov RAX,QWORD PTR [RBP+8]
            test RAX,RAX
            je .L_4445ce

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_4445c6

            mov EBX,8
            nop
            nop
            nop
            nop
.L_4445b0:

            call free@PLT

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RAX+RBX*1]
            add RBX,8
            test RDI,RDI
            jne .L_4445b0
.L_4445c6:

            mov RDI,RAX
            call free@PLT
.L_4445ce:

            mov RDI,RBP
            call free@PLT

            add RSP,8
.L_4445da:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_4445e0:

            xor EAX,EAX
            ret 
.L_4445e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4445f0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call EVP_CIPHER_CTX_free@PLT

            mov EDX,DWORD PTR [RBX+48]
            lea RDI,QWORD PTR [RBX+16]
            xor ESI,ESI
            call memset@PLT

            pxor XMM0,XMM0
            xor EAX,EAX
            movups XMMWORD PTR [RBX+52],XMM0
            pop RBX
            ret 
.L_444616:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444620:

            push RBX
            lea RCX,QWORD PTR [RDI+16]
            mov RBX,RDI
            xor R8D,R8D
            xor EDX,EDX
            sub RSP,16
.L_444631:

            mov RSI,QWORD PTR [RDI+8]
            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov DWORD PTR [RSP+4],0
            call EVP_EncryptInit_ex@PLT

            test EAX,EAX
            je .L_4446a0

            mov RDI,QWORD PTR [RBX]
            lea RCX,QWORD PTR [RBX+52]
            lea RDX,QWORD PTR [RSP+4]
            lea RSI,QWORD PTR [RBX+68]
            mov R8D,16
            call EVP_EncryptUpdate@PLT

            test EAX,EAX
            je .L_4446a0

            xor EAX,EAX
            cmp DWORD PTR [RSP+4],16
            setne AL
            neg EAX
.L_444684:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_4446a7

            add RSP,16
.L_444698:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4446a0:

            mov EAX,4294967295
            jmp .L_444684
.L_4446a7:

            call __stack_chk_fail@PLT
.L_4446ac:

            nop
            nop
            nop
            nop
.L_4446b0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov EBX,EDX
            sub RSP,40
.L_4446c3:

            mov RCX,QWORD PTR [R8]
            mov EAX,DWORD PTR [RDI+84]
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+24],R8
            cmp RCX,RDX
            cmovbe EBX,ECX
            test EBX,EBX
            mov DWORD PTR [RSP+20],EBX
            je .L_44480d

            lea RCX,QWORD PTR [RDI+52]
            mov R12,RSI
            lea R14,QWORD PTR [RDI+68]
            xor R15D,R15D
            mov QWORD PTR [RSP+8],RCX
            jmp .L_444726
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444700:

            mov EDI,EAX
            add EAX,1
            add RDI,R14
.L_444708:

            mov R9D,R15D
            add R15D,1
            movzx EDX,BYTE PTR [R12+R9*1]
            xor DL,BYTE PTR [RDI]
            cmp DWORD PTR [RSP+20],R15D
            mov BYTE PTR [R13+R9*1],DL
            jbe .L_4447ed
.L_444726:

            cmp EAX,16
            jne .L_444700

            mov RAX,QWORD PTR [RSP]
            lea RBP,QWORD PTR [RAX+60]
            mov RAX,QWORD PTR [RSP+8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444740:

            movzx ESI,BYTE PTR [RAX]
            lea EDX,DWORD PTR [RSI+1]
            test DL,DL
            mov BYTE PTR [RAX],DL
            jne .L_444755

            add RAX,1
            cmp RAX,RBP
            jne .L_444740
.L_444755:

            mov RDI,QWORD PTR [RSP]
            call .L_444620

            test EAX,EAX
            jne .L_4447c3

            mov EBX,DWORD PTR [RSP+20]
            sub EBX,R15D
            and EBX,4294967280
            add EBX,R15D
            nop
.L_444770:

            cmp R15D,EBX
            je .L_4447d7

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444780:

            lea EDI,DWORD PTR [R15+RAX*1]
            movzx EDX,BYTE PTR [R12+RDI*1]
            xor DL,BYTE PTR [R14+RAX*1]
            add RAX,1
            cmp RAX,16
            mov BYTE PTR [R13+RDI*1],DL
            jne .L_444780

            mov RDX,QWORD PTR [RSP+8]
            add R15D,16
            nop
            nop
            nop
.L_4447a8:

            add BYTE PTR [RDX],1
            jne .L_4447b6

            add RDX,1
            cmp RDX,RBP
            jne .L_4447a8
.L_4447b6:

            mov RDI,QWORD PTR [RSP]
            call .L_444620

            test EAX,EAX
            je .L_444770
.L_4447c3:

            add RSP,40
.L_4447c7:

            mov EAX,4294967295
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4447d7:

            cmp R15D,DWORD PTR [RSP+20]
            jae .L_4447eb

            mov RDI,R14
            mov EAX,1
            jmp .L_444708
.L_4447eb:

            xor EAX,EAX
.L_4447ed:

            mov RCX,QWORD PTR [RSP]
            mov DWORD PTR [RCX+84],EAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],R15
            add RSP,40
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_44480d:

            xor R15D,R15D
            jmp .L_4447ed
.L_444812:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444820:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            call EVP_CIPHER_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4448c3

            cmp RBP,24
            je .L_4448b8

            cmp RBP,32
            je .L_444868

            cmp RBP,16
            je .L_4448a8

            mov QWORD PTR [RBX+8],0
            mov EAX,4294967295
.L_44485d:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444868:

            call EVP_aes_256_ecb@PLT

            mov QWORD PTR [RBX+8],RAX
.L_444871:

            lea RDI,QWORD PTR [RBX+16]
            mov DWORD PTR [RBX+48],EBP
            mov RDX,RBP
            mov RSI,R12
            call memcpy@PLT

            pxor XMM0,XMM0
            mov RDI,QWORD PTR [RBX]
            mov DWORD PTR [RBX+84],16
            movups XMMWORD PTR [RBX+52],XMM0
            call EVP_CIPHER_CTX_reset@PLT

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4448a8:

            call EVP_aes_128_ecb@PLT

            mov QWORD PTR [RBX+8],RAX
            jmp .L_444871
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4448b8:

            call EVP_aes_192_ecb@PLT

            mov QWORD PTR [RBX+8],RAX
            jmp .L_444871
.L_4448c3:

            mov EAX,4294967295
            jmp .L_44485d
.L_4448ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4448d0:

            sub RSP,16
            push R9
            mov R9D,DWORD PTR [RSP+32]
            call PKCS5_PBKDF2_HMAC_SHA1@PLT

            xor EAX,EAX
            add RSP,24
            ret 
.L_4448e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4448f0:

            xor EAX,EAX
            ret 
.L_4448f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444900:

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            je .L_444930

            push RBX
            xor EDX,EDX
            mov RBX,RDI
            mov RDI,RAX
            call EVP_DigestFinal@PLT

            mov RDI,QWORD PTR [RBX]
            call EVP_MD_CTX_free@PLT

            mov QWORD PTR [RBX],0
            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_444930:

            xor EAX,EAX
            ret 
.L_444933:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444940:

            jmp .L_444900
.L_444942:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444950:

            jmp .L_444900
.L_444952:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444960:

            jmp .L_444900
.L_444962:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444970:

            jmp .L_444900
.L_444972:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444980:

            jmp .L_444900
.L_444985:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444990:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_4449a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4449b0:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_4449d8

            call EVP_sha512@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4449d8:

            mov EAX,4294967271
            pop RBX
            ret 
.L_4449df:

            nop
.L_4449e0:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_444a08

            call EVP_sha384@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444a08:

            mov EAX,4294967271
            pop RBX
            ret 
.L_444a0f:

            nop
.L_444a10:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_444a38

            call EVP_sha256@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444a38:

            mov EAX,4294967271
            pop RBX
            ret 
.L_444a3f:

            nop
.L_444a40:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_444a68

            call EVP_sha1@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444a68:

            mov EAX,4294967271
            pop RBX
            ret 
.L_444a6f:

            nop
.L_444a70:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_444a98

            call EVP_ripemd160@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444a98:

            mov EAX,4294967271
            pop RBX
            ret 
.L_444a9f:

            nop
.L_444aa0:

            push RBX
            mov RBX,RDI
            call EVP_MD_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_444ac8

            call EVP_md5@PLT

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call EVP_DigestInit@PLT

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_444ac8:

            mov EAX,4294967271
            pop RBX
            ret 
.L_444acf:

            nop
.L_444ad0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_444ae3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444af0:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_444b03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444b10:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_444b23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444b30:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_444b43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444b50:

            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            call EVP_DigestUpdate@PLT

            xor EAX,EAX
            add RSP,8
            ret 
.L_444b63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444b70:

            mov EDX,DWORD PTR [RDI]
            mov EAX,1
            test DH,3
            je .L_444b98

            test DH,4
            je .L_444b86

            or EDX,1
            mov DWORD PTR [RDI],EDX
.L_444b86:

            mov EAX,EDX
            or EAX,2
            test DH,8
            cmovne EDX,EAX
            xor EAX,EAX
            or EDX,8
            mov DWORD PTR [RDI],EDX
.L_444b98:

            ret 
.L_444b9a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_444ba0:

            test RDI,RDI
            push RBX

            mov RBX,RDI
            je .L_444c76

            lea RDI,QWORD PTR [RDI+200]
            call .L_437b60

            lea RDI,QWORD PTR [RBX+320]
            call .L_437b60

            lea RDI,QWORD PTR [RBX+424]
            call .L_437b60

            lea RDI,QWORD PTR [RBX+528]
            call .L_437b60

            lea RDI,QWORD PTR [RBX+840]
            call .L_437b60

            lea RDI,QWORD PTR [RBX+632]
            call .L_437b60

            lea RDI,QWORD PTR [RBX+736]
            call .L_437b60

            mov RDI,QWORD PTR [RBX+952]
            call free@PLT

            lea RDI,QWORD PTR [RBX+968]
            mov QWORD PTR [RBX+952],0
            mov QWORD PTR [RBX+960],0
            call .L_4412b0

            mov RDI,RBX
            call .L_447880

            mov RDI,RBX
            call .L_447670

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            lea RDI,QWORD PTR [RBX+8]
            mov RCX,RBX
            xor EAX,EAX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+1072],0
            and RDI,-8
            sub RCX,RDI
            add ECX,1080
            shr ECX,3

            rep stosq QWORD PTR [RDI]
.L_444c76:

            mov RAX,RBX
            pop RBX

            ret 
.L_444c7b:

            nop
            nop
            nop
            nop
            nop
.L_444c80:

            push RBX
            mov RBX,RDI
            call .L_444ba0

            mov RDI,RBX
            pop RBX
            jmp free@PLT
.L_444c92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444ca0:

            sub RSP,8
            mov ESI,1080
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_444cbf

            mov QWORD PTR [RAX],0
.L_444cbf:

            add RSP,8
            ret 
.L_444cc4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444cd0:

            push RBX
            mov ESI,1080
            mov RBX,RDI
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            je .L_444ceb

            mov QWORD PTR [RAX],RBX
.L_444ceb:

            pop RBX
            ret 
.L_444ced:

            nop
            nop
            nop
.L_444cf0:

            mov RAX,QWORD PTR [RDI+24]
            ret 
.L_444cf5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444d00:

            mov EAX,DWORD PTR [RDI+32]
            ret 
.L_444d04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444d10:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,4
            ret 
.L_444d1a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_444d20:

            mov RAX,QWORD PTR [RDI+72]
            ret 
.L_444d25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444d30:

            mov EAX,DWORD PTR [RDI+80]
            ret 
.L_444d34:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444d40:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,32
            ret 
.L_444d4a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_444d50:

            mov RAX,QWORD PTR [RDI+40]
            ret 
.L_444d55:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444d60:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,8
            ret 
.L_444d6a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_444d70:

            mov EAX,DWORD PTR [RDI+48]
            ret 
.L_444d74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444d80:

            mov EAX,DWORD PTR [RDI+128]
            test EAX,EAX
            jne .L_444d98

            mov RAX,QWORD PTR [RDI+136]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444d98:

            mov RCX,QWORD PTR [RDI+144]
            mov RDX,QWORD PTR [RDI+152]
            movabs RSI,-17592186044416
            mov RAX,RCX
            shl RCX,32
            shl RAX,8
            and RCX,RSI
            movabs RSI,17592184995840
            and EAX,1048320
            or RAX,RCX
            mov RCX,RDX
            shl RCX,12
            and RCX,RSI
            or RCX,RAX
            movzx EAX,DL
            or RAX,RCX
            ret 
.L_444de4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444df0:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,256
            ret 
.L_444dfc:

            nop
            nop
            nop
            nop
.L_444e00:

            mov EAX,DWORD PTR [RDI+128]
            test EAX,EAX
            jne .L_444e30

            mov RDX,QWORD PTR [RDI+136]
            mov RAX,RDX
            shr RAX,8
            mov ECX,EAX
            mov RAX,RDX
            shr RAX,32
            and ECX,4095
            and EAX,4294963200
            or EAX,ECX
            ret 
          .byte 0x90
.L_444e30:

            mov RAX,QWORD PTR [RDI+144]
            ret 
.L_444e38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444e40:

            mov EAX,DWORD PTR [RDI+128]
            test EAX,EAX
            jne .L_444e60

            mov RDX,QWORD PTR [RDI+136]
            mov RAX,RDX
            movzx ECX,DL
            shr RAX,12
            xor AL,AL
            or EAX,ECX
            ret 
.L_444e60:

            mov RAX,QWORD PTR [RDI+152]
            ret 
.L_444e68:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444e70:

            mov EAX,DWORD PTR [RDI+968]
            and EAX,61440
            ret 
.L_444e7c:

            nop
            nop
            nop
            nop
.L_444e80:

            mov RAX,QWORD PTR [RDI+304]
            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RDI+312]
            mov QWORD PTR [RDX],RAX
            ret 
.L_444e95:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_444ea0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_444eb1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDI+200]
            mov RDI,QWORD PTR [RDI]
            lea RDX,QWORD PTR [RSP+32]
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+24],RDX
            call .L_437d00

            test EAX,EAX
            jne .L_444f18

            mov RAX,QWORD PTR [RSP+32]
            test RAX,RAX
            je .L_444f26
.L_444ef0:

            mov RSI,QWORD PTR [RSP+40]
            xor RSI,QWORD PTR FS:[40]
            jne .L_44509a

            add RSP,56
.L_444f08:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_444f18:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44509f
.L_444f26:

            mov R14,QWORD PTR [RBP+304]
            mov R13,QWORD PTR [RBP+312]
            test R14,R14
            jne .L_444f42

            test R13,R13
            je .L_445074
.L_444f42:

            mov RBX,QWORD PTR [RIP+.L_65bc80]
            mov RCX,R14
            or RCX,R13
            test RBX,RBX
            je .L_445074

            lea RDX,QWORD PTR [RIP+.L_65bc80]
            mov RDI,RBX
            xor R12D,R12D
            nop
            nop
            nop
.L_444f68:

            mov R15,QWORD PTR [RDX+16]
            or R15,QWORD PTR [RDX+24]
            test R15,RCX
            je .L_444f97

            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            not R15
            call strlen@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            lea R12,QWORD PTR [R12+RAX*1+1]
            and RCX,R15
.L_444f97:

            add RDX,32
            mov RDI,QWORD PTR [RDX]
            test RDI,RDI
            jne .L_444f68

            test R12,R12
            je .L_445074

            mov RDI,R12
            call malloc@PLT

            test RAX,RAX
            mov R15,RAX
            je .L_445074

            lea RDI,QWORD PTR [RIP+.L_65bc80]
            mov RCX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_444fd0:

            mov RAX,QWORD PTR [RDI+16]
            mov RDX,QWORD PTR [RDI+24]
            test RAX,R14
            jne .L_445080

            test RDX,R13
            jne .L_445080

            test RDX,R14
            jne .L_444ff8

            test RAX,R13
            je .L_44502e

            nop
            nop
            nop
            nop
.L_444ff8:

            or RAX,RDX
            not RAX
            and R14,RAX
            and R13,RAX
            cmp R15,RCX
            jae .L_44501b

            mov BYTE PTR [RCX],44
            add RCX,1
            jmp .L_44501b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445018:

            mov RCX,RDX
.L_44501b:

            add RBX,1
            movzx EAX,BYTE PTR [RBX-1]
            lea RDX,QWORD PTR [RCX+1]
            test AL,AL
            mov BYTE PTR [RDX-1],AL
            jne .L_445018
.L_44502e:

            add RDI,32
            mov RBX,QWORD PTR [RDI]
            test RBX,RBX
            jne .L_444fd0

            mov RBX,QWORD PTR [RSP+16]
            mov BYTE PTR [RCX],0
            mov RSI,R15
            mov RDI,RBX
            call .L_437ef0

            mov RDI,R15
            call free@PLT

            mov RDX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RBP]
            mov RSI,RBX
            call .L_437d00

            test EAX,EAX
            je .L_445090

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44509f
.L_445074:

            xor EAX,EAX
            jmp .L_444ef0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445080:

            add RBX,2
            jmp .L_444ff8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445090:

            mov RAX,QWORD PTR [RSP+32]
            jmp .L_444ef0
.L_44509a:

            call __stack_chk_fail@PLT
.L_44509f:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_4450b0:

            mov RAX,QWORD PTR [RDI+88]
            ret 
.L_4450b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4450c0:

            sub RSP,24
.L_4450c4:

            lea RSI,QWORD PTR [RDI+320]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437d00

            test EAX,EAX
            je .L_445110

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44511b

            xor EAX,EAX
.L_4450f6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_445116

            add RSP,24
.L_44510a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445110:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4450f6
.L_445116:

            call __stack_chk_fail@PLT
.L_44511b:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44512c:

            nop
            nop
            nop
            nop
.L_445130:

            sub RSP,24
.L_445134:

            lea RSI,QWORD PTR [RDI+320]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437c40

            test EAX,EAX
            je .L_445180

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44518b

            xor EAX,EAX
.L_445166:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_445186

            add RSP,24
.L_44517a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445180:

            mov RAX,QWORD PTR [RSP]
            jmp .L_445166
.L_445186:

            call __stack_chk_fail@PLT
.L_44518b:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44519c:

            nop
            nop
            nop
            nop
.L_4451a0:

            sub RSP,24
.L_4451a4:

            lea RSI,QWORD PTR [RDI+320]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437d70

            test EAX,EAX
            je .L_4451f0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4451fb

            xor EAX,EAX
.L_4451d6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4451f6

            add RSP,24
.L_4451ea:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4451f0:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4451d6
.L_4451f6:

            call __stack_chk_fail@PLT
.L_4451fb:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44520c:

            nop
            nop
            nop
            nop
.L_445210:

            add RDI,320
            jmp .L_437de0
.L_44521c:

            nop
            nop
            nop
            nop
.L_445220:

            sub RSP,24
.L_445224:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],1
            je .L_44525d

            lea RSI,QWORD PTR [RDI+424]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_437d00

            test EAX,EAX
            je .L_445278

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44527e
.L_44525d:

            xor EAX,EAX
.L_44525f:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44528f

            add RSP,24
.L_445273:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_445278:

            mov RAX,QWORD PTR [RSP]
            jmp .L_44525f
.L_44527e:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44528f:

            call __stack_chk_fail@PLT
.L_445294:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4452a0:

            sub RSP,24
.L_4452a4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],1
            je .L_4452dd

            lea RSI,QWORD PTR [RDI+424]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_437c40

            test EAX,EAX
            je .L_4452f8

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4452fe
.L_4452dd:

            xor EAX,EAX
.L_4452df:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44530f

            add RSP,24
.L_4452f3:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4452f8:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4452df
.L_4452fe:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44530f:

            call __stack_chk_fail@PLT
.L_445314:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445320:

            sub RSP,24
.L_445324:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],1
            je .L_44535d

            lea RSI,QWORD PTR [RDI+424]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_437d70

            test EAX,EAX
            je .L_445378

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44537e
.L_44535d:

            xor EAX,EAX
.L_44535f:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44538f

            add RSP,24
.L_445373:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_445378:

            mov RAX,QWORD PTR [RSP]
            jmp .L_44535f
.L_44537e:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44538f:

            call __stack_chk_fail@PLT
.L_445394:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4453a0:

            test BYTE PTR [RDI+192],1
            jne .L_4453c0

            mov QWORD PTR [RSI],0
            xor EAX,EAX
            mov QWORD PTR [RDX],0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4453c0:

            add RDI,424
            jmp .L_437de0
.L_4453cc:

            nop
            nop
            nop
            nop
.L_4453d0:

            mov RAX,QWORD PTR [RDI+96]
            ret 
.L_4453d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4453e0:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,128
            ret 
.L_4453ec:

            nop
            nop
            nop
            nop
.L_4453f0:

            mov RAX,QWORD PTR [RDI+96]
            ret 
.L_4453f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445400:

            mov EAX,DWORD PTR [RDI+968]
            ret 
.L_445407:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445410:

            mov RAX,QWORD PTR [RDI+56]
            ret 
.L_445415:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445420:

            mov EAX,DWORD PTR [RDI+64]
            ret 
.L_445424:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445430:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,16
            ret 
.L_44543a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_445440:

            mov EAX,DWORD PTR [RDI+104]
            ret 
.L_445444:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445450:

            sub RSP,24
.L_445454:

            lea RSI,QWORD PTR [RDI+528]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437d00

            test EAX,EAX
            je .L_4454a0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4454ab

            xor EAX,EAX
.L_445486:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4454a6

            add RSP,24
.L_44549a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4454a0:

            mov RAX,QWORD PTR [RSP]
            jmp .L_445486
.L_4454a6:

            call __stack_chk_fail@PLT
.L_4454ab:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_4454bc:

            nop
            nop
            nop
            nop
.L_4454c0:

            sub RSP,24
.L_4454c4:

            lea RSI,QWORD PTR [RDI+528]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437c40

            test EAX,EAX
            je .L_445510

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44551b

            xor EAX,EAX
.L_4454f6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_445516

            add RSP,24
.L_44550a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445510:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4454f6
.L_445516:

            call __stack_chk_fail@PLT
.L_44551b:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44552c:

            nop
            nop
            nop
            nop
.L_445530:

            sub RSP,24
.L_445534:

            lea RSI,QWORD PTR [RDI+528]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437d70

            test EAX,EAX
            je .L_445580

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44558b

            xor EAX,EAX
.L_445566:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_445586

            add RSP,24
.L_44557a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445580:

            mov RAX,QWORD PTR [RSP]
            jmp .L_445566
.L_445586:

            call __stack_chk_fail@PLT
.L_44558b:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44559c:

            nop
            nop
            nop
            nop
.L_4455a0:

            add RDI,528
            jmp .L_437de0
.L_4455ac:

            nop
            nop
            nop
            nop
.L_4455b0:

            mov EAX,DWORD PTR [RDI+968]
            and AH,15
            ret 
.L_4455ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4455c0:

            mov EAX,DWORD PTR [RDI+160]
            test EAX,EAX
            jne .L_4455d8

            mov RAX,QWORD PTR [RDI+168]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4455d8:

            mov RCX,QWORD PTR [RDI+176]
            mov RDX,QWORD PTR [RDI+184]
            movabs RSI,-17592186044416
            mov RAX,RCX
            shl RCX,32
            shl RAX,8
            and RCX,RSI
            movabs RSI,17592184995840
            and EAX,1048320
            or RAX,RCX
            mov RCX,RDX
            shl RCX,12
            and RCX,RSI
            or RCX,RAX
            movzx EAX,DL
            or RAX,RCX
            ret 
.L_445624:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445630:

            mov EAX,DWORD PTR [RDI+160]
            test EAX,EAX
            jne .L_445660

            mov RDX,QWORD PTR [RDI+168]
            mov RAX,RDX
            shr RAX,8
            mov ECX,EAX
            mov RAX,RDX
            shr RAX,32
            and ECX,4095
            and EAX,4294963200
            or EAX,ECX
            ret 
          .byte 0x90
.L_445660:

            mov RAX,QWORD PTR [RDI+176]
            ret 
.L_445668:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445670:

            mov EAX,DWORD PTR [RDI+160]
            test EAX,EAX
            jne .L_445690

            mov RDX,QWORD PTR [RDI+168]
            mov RAX,RDX
            movzx ECX,DL
            shr RAX,12
            xor AL,AL
            or EAX,ECX
            ret 
.L_445690:

            mov RAX,QWORD PTR [RDI+184]
            ret 
.L_445698:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4456a0:

            mov RAX,QWORD PTR [RDI+112]
            ret 
.L_4456a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4456b0:

            mov EAX,DWORD PTR [RDI+192]
            and EAX,64
            ret 
.L_4456ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4456c0:

            sub RSP,24
.L_4456c4:

            lea RSI,QWORD PTR [RDI+840]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437d00

            test EAX,EAX
            je .L_445710

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44571b

            xor EAX,EAX
.L_4456f6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_445716

            add RSP,24
.L_44570a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445710:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4456f6
.L_445716:

            call __stack_chk_fail@PLT
.L_44571b:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44572c:

            nop
            nop
            nop
            nop
.L_445730:

            sub RSP,24
            lea RSI,QWORD PTR [RDI+840]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437d70

            test EAX,EAX
            jne .L_445778

            mov RAX,QWORD PTR [RSP]
.L_44575e:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44577c

            add RSP,24
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445778:

            xor EAX,EAX
            jmp .L_44575e
.L_44577c:

            call __stack_chk_fail@PLT
.L_445781:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445790:

            sub RSP,24
.L_445794:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],2
            je .L_4457cd

            lea RSI,QWORD PTR [RDI+632]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_437d00

            test EAX,EAX
            je .L_4457e8

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4457ee
.L_4457cd:

            xor EAX,EAX
.L_4457cf:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4457ff

            add RSP,24
.L_4457e3:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4457e8:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4457cf
.L_4457ee:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_4457ff:

            call __stack_chk_fail@PLT
.L_445804:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445810:

            sub RSP,24
.L_445814:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],2
            je .L_44584d

            lea RSI,QWORD PTR [RDI+632]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_437c40

            test EAX,EAX
            je .L_445868

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44586e
.L_44584d:

            xor EAX,EAX
.L_44584f:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44587f

            add RSP,24
.L_445863:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_445868:

            mov RAX,QWORD PTR [RSP]
            jmp .L_44584f
.L_44586e:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44587f:

            call __stack_chk_fail@PLT
.L_445884:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445890:

            sub RSP,24
.L_445894:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test BYTE PTR [RDI+192],2
            je .L_4458cd

            lea RSI,QWORD PTR [RDI+632]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            call .L_437d70

            test EAX,EAX
            je .L_4458e8

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4458ee
.L_4458cd:

            xor EAX,EAX
.L_4458cf:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4458ff

            add RSP,24
.L_4458e3:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4458e8:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4458cf
.L_4458ee:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_4458ff:

            call __stack_chk_fail@PLT
.L_445904:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445910:

            test BYTE PTR [RDI+192],2
            jne .L_445930

            mov QWORD PTR [RSI],0
            xor EAX,EAX
            mov QWORD PTR [RDX],0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445930:

            add RDI,632
            jmp .L_437de0
.L_44593c:

            nop
            nop
            nop
            nop
.L_445940:

            mov RAX,QWORD PTR [RDI+120]
            ret 
.L_445945:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445950:

            sub RSP,24
.L_445954:

            lea RSI,QWORD PTR [RDI+736]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437d00

            test EAX,EAX
            je .L_4459a0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4459ab

            xor EAX,EAX
.L_445986:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4459a6

            add RSP,24
.L_44599a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4459a0:

            mov RAX,QWORD PTR [RSP]
            jmp .L_445986
.L_4459a6:

            call __stack_chk_fail@PLT
.L_4459ab:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_4459bc:

            nop
            nop
            nop
            nop
.L_4459c0:

            sub RSP,24
.L_4459c4:

            lea RSI,QWORD PTR [RDI+736]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437c40

            test EAX,EAX
            je .L_445a10

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_445a1b

            xor EAX,EAX
.L_4459f6:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_445a16

            add RSP,24
.L_445a0a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445a10:

            mov RAX,QWORD PTR [RSP]
            jmp .L_4459f6
.L_445a16:

            call __stack_chk_fail@PLT
.L_445a1b:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_445a2c:

            nop
            nop
            nop
            nop
.L_445a30:

            sub RSP,24
.L_445a34:

            lea RSI,QWORD PTR [RDI+736]
            mov RDI,QWORD PTR [RDI]
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_437d70

            test EAX,EAX
            je .L_445a80

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_445a8b

            xor EAX,EAX
.L_445a66:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_445a86

            add RSP,24
.L_445a7a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445a80:

            mov RAX,QWORD PTR [RSP]
            jmp .L_445a66
.L_445a86:

            call __stack_chk_fail@PLT
.L_445a8b:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_445a9c:

            nop
            nop
            nop
            nop
.L_445aa0:

            add RDI,736
            jmp .L_437de0
.L_445aac:

            nop
            nop
            nop
            nop
.L_445ab0:

            movzx EAX,BYTE PTR [RDI+944]
            and EAX,1
            ret 
.L_445abb:

            nop
            nop
            nop
            nop
            nop
.L_445ac0:

            movzx EAX,BYTE PTR [RDI+944]
            shr AL,1
            and EAX,1
            ret 
.L_445acd:

            nop
            nop
            nop
.L_445ad0:

            movzx EAX,BYTE PTR [RDI+944]
            and EAX,3
            ret 
.L_445adb:

            nop
            nop
            nop
            nop
            nop
.L_445ae0:

            mov EAX,DWORD PTR [RDI+968]
            and ESI,61440
            mov DWORD PTR [RDI+16],0
            and AH,15
            or ESI,EAX
            mov DWORD PTR [RDI+968],ESI
            ret 
.L_445aff:

            nop
.L_445b00:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            lea RDI,QWORD PTR [RDI+200]
            mov RBP,RDX
            call .L_437b60

            mov QWORD PTR [RBX+304],R12
            mov QWORD PTR [RBX+312],RBP
            pop RBX
            pop RBP
            pop R12
            ret 
.L_445b2c:

            nop
            nop
            nop
            nop
.L_445b30:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,72
.L_445b44:

            mov QWORD PTR [RSP+40],RDI
            add RDI,200
            call .L_437ef0

            movzx R15D,BYTE PTR [R12]
            mov RAX,RBX
            lea RCX,QWORD PTR [RBX+312]
            add RAX,304
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+56],RAX
            cmp R15B,44
            ja .L_445b9d

            movabs RAX,17596481012224
            nop
            nop
            nop
            nop
.L_445b88:

            bt RAX,R15
            jae .L_445b9d

            add R12,1
            movzx R15D,BYTE PTR [R12]
            cmp R15B,44
            jbe .L_445b88
.L_445b9d:

            mov RAX,QWORD PTR [RIP+.L_65bc80]
            test R15B,R15B
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            je .L_445cba

            nop
            nop
            nop
.L_445bd0:

            cmp R15B,44
            mov R14,R12
            ja .L_445bf0

            movabs RAX,17596481012224
            xor EBP,EBP
            bt RAX,R15
            jb .L_445c14

            nop
            nop
            nop
            nop
            nop
.L_445bf0:

            add R14,1
            movzx R15D,BYTE PTR [R14]
            cmp R15B,44
            ja .L_445bf0

            movabs RAX,17596481012225
            bt RAX,R15
            jae .L_445bf0

            mov RBP,R14
            sub RBP,R12
.L_445c14:

            mov RAX,QWORD PTR [RSP+16]
            test RAX,RAX
            je .L_445d3c

            mov QWORD PTR [RSP],R14
            lea RBX,QWORD PTR [RIP+.L_65bc80]
            mov R14,RAX
            mov R13,RBP
            jmp .L_445c55
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_445c38:

            sub RBP,2
            cmp RBP,R13
            je .L_445d00
.L_445c45:

            add RBX,32
            mov R14,QWORD PTR [RBX]
            test R14,R14
            je .L_445d38
.L_445c55:

            mov RDI,R14
            call strlen@PLT

            cmp RAX,R13
            mov RBP,RAX
            jne .L_445c38

            mov RDX,R13
            mov RSI,R14
            mov RDI,R12
            call memcmp@PLT

            test EAX,EAX
            jne .L_445c38

            mov RCX,QWORD PTR [RBX+16]
            or QWORD PTR [RSP+24],RCX
            mov RCX,QWORD PTR [RBX+24]
            or QWORD PTR [RSP+32],RCX
            mov R14,QWORD PTR [RSP]
            nop
            nop
            nop
.L_445c90:

            movabs RAX,17596481012224
            bt RAX,R15
            jae .L_445cae

            add R14,1
            movzx R15D,BYTE PTR [R14]
            cmp R15B,44
            jbe .L_445c90
.L_445cae:

            test R15B,R15B
            mov R12,R14
            jne .L_445bd0
.L_445cba:

            cmp QWORD PTR [RSP+56],0
            je .L_445cd3

            mov RAX,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX+304],RCX
.L_445cd3:

            cmp QWORD PTR [RSP+48],0
            je .L_445cec

            mov RAX,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+312],RCX
.L_445cec:

            mov RAX,QWORD PTR [RSP+8]
            add RSP,72
.L_445cf5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_445d00:

            lea RSI,QWORD PTR [R14+2]
            mov RDX,R13
            mov RDI,R12
            call memcmp@PLT

            test EAX,EAX
            jne .L_445c45

            mov RCX,QWORD PTR [RBX+16]
            mov R14,QWORD PTR [RSP]
            or QWORD PTR [RSP+32],RCX
            mov RCX,QWORD PTR [RBX+24]
            or QWORD PTR [RSP+24],RCX
            jmp .L_445c90
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445d38:

            mov R14,QWORD PTR [RSP]
.L_445d3c:

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            cmovne R12,RAX
            mov QWORD PTR [RSP+8],R12
            jmp .L_445c90
.L_445d52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445d60:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,72
.L_445d74:

            mov QWORD PTR [RSP+40],RDI
            add RDI,200
            call .L_437fa0

            mov R15D,DWORD PTR [R12]
            mov RAX,RBX
            lea RCX,QWORD PTR [RBX+312]
            add RAX,304
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+56],RAX
            cmp R15D,44
            ja .L_445dcc

            movabs RAX,17596481012224
            nop
            nop
            nop
            nop
            nop
.L_445db8:

            bt RAX,R15
            jae .L_445dcc

            add R12,4
            mov R15D,DWORD PTR [R12]
            cmp R15D,44
            jbe .L_445db8
.L_445dcc:

            mov RAX,QWORD PTR [RIP+.L_65bc88]
            test R15D,R15D
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+16],RAX
            je .L_445ef9

            nop
            nop
            nop
            nop
.L_445e00:

            cmp R15D,44
            mov R14,R12
            ja .L_445e20

            movabs RAX,17596481012224
            xor EBP,EBP
            bt RAX,R15
            jb .L_445e47

            nop
            nop
            nop
            nop
            nop
.L_445e20:

            add R14,4
            mov R15D,DWORD PTR [R14]
            cmp R15D,44
            ja .L_445e20

            movabs RAX,17596481012225
            bt RAX,R15
            jae .L_445e20

            mov RBP,R14
            sub RBP,R12
            sar RBP,2
.L_445e47:

            mov RAX,QWORD PTR [RSP+16]
            test RAX,RAX
            je .L_445f7c

            mov QWORD PTR [RSP],R14
            lea RBX,QWORD PTR [RIP+.L_65bc80]
            mov R14,RAX
            mov R13,RBP
            jmp .L_445e8e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_445e70:

            sub RBP,2
            cmp R13,RBP
            je .L_445f40
.L_445e7d:

            add RBX,32
            mov R14,QWORD PTR [RBX+8]
            test R14,R14
            je .L_445f78
.L_445e8e:

            mov RDI,R14
            call wcslen@PLT

            cmp R13,RAX
            mov RBP,RAX
            jne .L_445e70

            mov RDX,R13
            mov RSI,R14
            mov RDI,R12
            call wmemcmp@PLT

            test EAX,EAX
            jne .L_445e70

            mov RCX,QWORD PTR [RBX+16]
            or QWORD PTR [RSP+24],RCX
            mov RCX,QWORD PTR [RBX+24]
            or QWORD PTR [RSP+32],RCX
            mov R14,QWORD PTR [RSP]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445ed0:

            movabs RAX,17596481012224
            bt RAX,R15
            jae .L_445eed

            add R14,4
            mov R15D,DWORD PTR [R14]
            cmp R15D,44
            jbe .L_445ed0
.L_445eed:

            test R15D,R15D
            mov R12,R14
            jne .L_445e00
.L_445ef9:

            cmp QWORD PTR [RSP+56],0
            je .L_445f12

            mov RAX,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RAX+304],RCX
.L_445f12:

            cmp QWORD PTR [RSP+48],0
            je .L_445f2b

            mov RAX,QWORD PTR [RSP+40]
            mov RCX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+312],RCX
.L_445f2b:

            mov RAX,QWORD PTR [RSP+8]
            add RSP,72
.L_445f34:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_445f40:

            lea RSI,QWORD PTR [R14+8]
            mov RDX,R13
            mov RDI,R12
            call wmemcmp@PLT

            test EAX,EAX
            jne .L_445e7d

            mov RCX,QWORD PTR [RBX+16]
            mov R14,QWORD PTR [RSP]
            or QWORD PTR [RSP+32],RCX
            mov RCX,QWORD PTR [RBX+24]
            or QWORD PTR [RSP+24],RCX
            jmp .L_445ed0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_445f78:

            mov R14,QWORD PTR [RSP]
.L_445f7c:

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            cmovne R12,RAX
            mov QWORD PTR [RSP+8],R12
            jmp .L_445ed0
.L_445f92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_445fa0:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+88],RSI
            ret 
.L_445fac:

            nop
            nop
            nop
            nop
.L_445fb0:

            add RDI,320
            jmp .L_437ef0
.L_445fbc:

            nop
            nop
            nop
            nop
.L_445fc0:

            add RDI,320
            jmp .L_438000
.L_445fcc:

            nop
            nop
            nop
            nop
.L_445fd0:

            add RDI,320
            jmp .L_437ef0
.L_445fdc:

            nop
            nop
            nop
            nop
.L_445fe0:

            add RDI,320
            jmp .L_437fa0
.L_445fec:

            nop
            nop
            nop
            nop
.L_445ff0:

            sub RSP,8
            mov RDX,RSI
            lea RSI,QWORD PTR [RDI+320]
            mov RDI,QWORD PTR [RDI]
            call .L_4380f0

            test EAX,EAX
            je .L_446020

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44602a

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446020:

            mov EAX,1
            add RSP,8
            ret 
.L_44602a:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44603b:

            nop
            nop
            nop
            nop
            nop
.L_446040:

            add RDI,320
            jmp .L_4380a0
.L_44604c:

            nop
            nop
            nop
            nop
.L_446050:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],128
            mov QWORD PTR [RDI+96],RSI
            ret 
.L_446066:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446070:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],128
            mov QWORD PTR [RDI+96],RSI
            ret 
.L_446086:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446090:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,424
            sub RSP,8
            call .L_437ef0

            test RBP,RBP
            je .L_4460c0

            or DWORD PTR [RBX+192],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4460c0:

            and DWORD PTR [RBX+192],4294967294
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4460ce:

            nop
            nop
.L_4460d0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,424
            sub RSP,8
            call .L_438000

            test RBP,RBP
            je .L_446100

            or DWORD PTR [RBX+192],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446100:

            and DWORD PTR [RBX+192],4294967294
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_44610e:

            nop
            nop
.L_446110:

            jmp .L_446090
.L_446115:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446120:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,424
            sub RSP,8
            call .L_437fa0

            test RBP,RBP
            je .L_446150

            or DWORD PTR [RBX+192],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446150:

            and DWORD PTR [RBX+192],4294967294
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_44615e:

            nop
            nop
.L_446160:

            sub RSP,8
.L_446164:

            mov EAX,DWORD PTR [RDI+192]
            mov RDX,RSI
            mov ECX,EAX
            or EAX,1
            and ECX,4294967294
            test RSI,RSI
            lea RSI,QWORD PTR [RDI+424]
            cmove EAX,ECX
            mov DWORD PTR [RDI+192],EAX
            mov RDI,QWORD PTR [RDI]
            call .L_4380f0

            test EAX,EAX
            je .L_4461a8

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4461b2

            xor EAX,EAX
            add RSP,8
.L_4461a4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4461a8:

            mov EAX,1
            add RSP,8
            ret 
.L_4461b2:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_4461c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4461d0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,424
            sub RSP,8
            call .L_4380a0

            test RBP,RBP
            je .L_446200

            test EAX,EAX
            jne .L_446200

            or DWORD PTR [RBX+192],1
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_446200:

            and DWORD PTR [RBX+192],4294967294
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_44620e:

            nop
            nop
.L_446210:

            mov RCX,RDX
            movabs RDX,1237940039285380275
            mov RAX,RCX
            imul RDX
            mov RAX,RCX
            sar RAX,63
            sar RDX,26
            sub RDX,RAX
            add RSI,RDX
            imul RDX,RDX,1000000000
            sub RCX,RDX
            jns .L_44624b

            sub RSI,1
            add RCX,1000000000
.L_44624b:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],4
            mov QWORD PTR [RDI+24],RSI
            mov DWORD PTR [RDI+32],ECX
            ret 
.L_446261:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446270:

            mov EAX,DWORD PTR [RDI+192]
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+24],0
            mov DWORD PTR [RDI+32],0
            and EAX,4294967291
            mov DWORD PTR [RDI+192],EAX
            ret 
.L_446296:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4462a0:

            mov RCX,RDX
            movabs RDX,1237940039285380275
            mov RAX,RCX
            imul RDX
            mov RAX,RCX
            sar RAX,63
            sar RDX,26
            sub RDX,RAX
            add RSI,RDX
            imul RDX,RDX,1000000000
            sub RCX,RDX
            jns .L_4462db

            sub RSI,1
            add RCX,1000000000
.L_4462db:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],32
            mov QWORD PTR [RDI+72],RSI
            mov DWORD PTR [RDI+80],ECX
            ret 
.L_4462f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446300:

            mov EAX,DWORD PTR [RDI+192]
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+72],0
            mov DWORD PTR [RDI+80],0
            and EAX,4294967263
            mov DWORD PTR [RDI+192],EAX
            ret 
.L_446326:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446330:

            mov RCX,RDX
            movabs RDX,1237940039285380275
            mov RAX,RCX
            imul RDX
            mov RAX,RCX
            sar RAX,63
            sar RDX,26
            sub RDX,RAX
            add RSI,RDX
            imul RDX,RDX,1000000000
            sub RCX,RDX
            jns .L_44636b

            sub RSI,1
            add RCX,1000000000
.L_44636b:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],8
            mov QWORD PTR [RDI+40],RSI
            mov DWORD PTR [RDI+48],ECX
            ret 
.L_446381:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446390:

            mov EAX,DWORD PTR [RDI+192]
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+40],0
            mov DWORD PTR [RDI+48],0
            and EAX,4294967287
            mov DWORD PTR [RDI+192],EAX
            ret 
.L_4463b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4463c0:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],256
            mov DWORD PTR [RDI+128],0
            mov QWORD PTR [RDI+136],RSI
            ret 
.L_4463e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4463f0:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],256
            mov DWORD PTR [RDI+128],1
            mov QWORD PTR [RDI+144],RSI
            ret 
.L_446413:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446420:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],256
            mov DWORD PTR [RDI+128],1
            mov QWORD PTR [RDI+152],RSI
            ret 
.L_446443:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446450:

            test BYTE PTR [RDI+192],2
            jne .L_446468

            add RDI,424
            jmp .L_437ef0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_446468:

            add RDI,632
            jmp .L_437ef0
.L_446474:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446480:

            test BYTE PTR [RDI+192],2
            jne .L_446498

            add RDI,424
            jmp .L_438000
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_446498:

            add RDI,632
            jmp .L_438000
.L_4464a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4464b0:

            jmp .L_446450
.L_4464b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4464c0:

            test BYTE PTR [RDI+192],2
            jne .L_4464d8

            add RDI,424
            jmp .L_437fa0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4464d8:

            add RDI,632
            jmp .L_437fa0
.L_4464e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4464f0:

            mov RAX,RDI
            sub RSP,8
            mov RDX,RSI
            test BYTE PTR [RAX+192],2
            mov RDI,QWORD PTR [RDI]
            je .L_446530

            lea RSI,QWORD PTR [RAX+632]
            call .L_4380f0

            test EAX,EAX
            je .L_446540
.L_446516:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_44654a

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446530:

            lea RSI,QWORD PTR [RAX+424]
            call .L_4380f0

            test EAX,EAX
            jne .L_446516
.L_446540:

            mov EAX,1
            add RSP,8
            ret 
.L_44654a:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_44655b:

            nop
            nop
            nop
            nop
            nop
.L_446560:

            test BYTE PTR [RDI+192],2
            jne .L_446578

            add RDI,424
            jmp .L_4380a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_446578:

            add RDI,632
            jmp .L_4380a0
.L_446584:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446590:

            mov DWORD PTR [RDI+16],0
            mov DWORD PTR [RDI+968],ESI
            ret 
.L_44659e:

            nop
            nop
.L_4465a0:

            mov RCX,RDX
            movabs RDX,1237940039285380275
            mov RAX,RCX
            imul RDX
            mov RAX,RCX
            sar RAX,63
            sar RDX,26
            sub RDX,RAX
            add RSI,RDX
            imul RDX,RDX,1000000000
            sub RCX,RDX
            jns .L_4465db

            sub RSI,1
            add RCX,1000000000
.L_4465db:

            mov DWORD PTR [RDI+16],0
            or DWORD PTR [RDI+192],16
            mov QWORD PTR [RDI+56],RSI
            mov DWORD PTR [RDI+64],ECX
            ret 
.L_4465f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446600:

            mov EAX,DWORD PTR [RDI+192]
            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+56],0
            mov DWORD PTR [RDI+64],0
            and EAX,4294967279
            mov DWORD PTR [RDI+192],EAX
            ret 
.L_446626:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446630:

            mov DWORD PTR [RDI+16],0
            mov DWORD PTR [RDI+104],ESI
            ret 
.L_44663b:

            nop
            nop
            nop
            nop
            nop
.L_446640:

            add RDI,528
            jmp .L_437ef0
.L_44664c:

            nop
            nop
            nop
            nop
.L_446650:

            add RDI,528
            jmp .L_438000
.L_44665c:

            nop
            nop
            nop
            nop
.L_446660:

            add RDI,528
            jmp .L_437ef0
.L_44666c:

            nop
            nop
            nop
            nop
.L_446670:

            add RDI,528
            jmp .L_437fa0
.L_44667c:

            nop
            nop
            nop
            nop
.L_446680:

            sub RSP,8
            mov RDX,RSI
            lea RSI,QWORD PTR [RDI+528]
            mov RDI,QWORD PTR [RDI]
            call .L_4380f0

            test EAX,EAX
            je .L_4466b0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4466ba

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4466b0:

            mov EAX,1
            add RSP,8
            ret 
.L_4466ba:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_4466cb:

            nop
            nop
            nop
            nop
            nop
.L_4466d0:

            add RDI,528
            jmp .L_4380a0
.L_4466dc:

            nop
            nop
            nop
            nop
.L_4466e0:

            mov EAX,DWORD PTR [RDI+968]
            and ESI,4294905855
            mov DWORD PTR [RDI+16],0
            and EAX,61440
            or ESI,EAX
            mov DWORD PTR [RDI+968],ESI
            ret 
.L_446701:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446710:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+168],RSI
            mov DWORD PTR [RDI+160],0
            ret 
.L_446729:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446730:

            mov DWORD PTR [RDI+16],0
            mov DWORD PTR [RDI+160],1
            mov QWORD PTR [RDI+176],RSI
            ret 
.L_446749:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446750:

            mov DWORD PTR [RDI+16],0
            mov DWORD PTR [RDI+160],1
            mov QWORD PTR [RDI+184],RSI
            ret 
.L_446769:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446770:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+112],RSI
            or DWORD PTR [RDI+192],64
            ret 
.L_446783:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446790:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+112],0
            and DWORD PTR [RDI+192],4294967231
            ret 
.L_4467a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4467b0:

            add RDI,840
            jmp .L_437ef0
.L_4467bc:

            nop
            nop
            nop
            nop
.L_4467c0:

            add RDI,840
            jmp .L_437fa0
.L_4467cc:

            nop
            nop
            nop
            nop
.L_4467d0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,632
            sub RSP,8
            call .L_437ef0

            test RBP,RBP
            je .L_446800

            or DWORD PTR [RBX+192],2
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446800:

            and DWORD PTR [RBX+192],4294967293
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_44680e:

            nop
            nop
.L_446810:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,632
            sub RSP,8
            call .L_438000

            test RBP,RBP
            je .L_446840

            or DWORD PTR [RBX+192],2
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446840:

            and DWORD PTR [RBX+192],4294967293
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_44684e:

            nop
            nop
.L_446850:

            jmp .L_4467d0
.L_446855:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446860:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,632
            sub RSP,8
            call .L_437fa0

            test RBP,RBP
            je .L_446890

            or DWORD PTR [RBX+192],2
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446890:

            and DWORD PTR [RBX+192],4294967293
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_44689e:

            nop
            nop
.L_4468a0:

            sub RSP,8
.L_4468a4:

            mov EAX,DWORD PTR [RDI+192]
            mov RDX,RSI
            mov ECX,EAX
            or EAX,2
            and ECX,4294967293
            test RSI,RSI
            lea RSI,QWORD PTR [RDI+632]
            cmove EAX,ECX
            mov DWORD PTR [RDI+192],EAX
            mov RDI,QWORD PTR [RDI]
            call .L_4380f0

            test EAX,EAX
            je .L_4468e8

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4468f2

            xor EAX,EAX
            add RSP,8
.L_4468e4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4468e8:

            mov EAX,1
            add RSP,8
            ret 
.L_4468f2:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_446903:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446910:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            add RDI,632
            sub RSP,8
            call .L_4380a0

            test RBP,RBP
            je .L_446940

            test EAX,EAX
            jne .L_446940

            or DWORD PTR [RBX+192],2
            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_446940:

            and DWORD PTR [RBX+192],4294967293
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_44694e:

            nop
            nop
.L_446950:

            mov DWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+120],RSI
            ret 
.L_44695c:

            nop
            nop
            nop
            nop
.L_446960:

            add RDI,736
            jmp .L_437ef0
.L_44696c:

            nop
            nop
            nop
            nop
.L_446970:

            add RDI,736
            jmp .L_438000
.L_44697c:

            nop
            nop
            nop
            nop
.L_446980:

            add RDI,736
            jmp .L_437ef0
.L_44698c:

            nop
            nop
            nop
            nop
.L_446990:

            add RDI,736
            jmp .L_437fa0
.L_44699c:

            nop
            nop
            nop
            nop
.L_4469a0:

            sub RSP,8
            mov RDX,RSI
            lea RSI,QWORD PTR [RDI+736]
            mov RDI,QWORD PTR [RDI]
            call .L_4380f0

            test EAX,EAX
            je .L_4469d0

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4469da

            xor EAX,EAX
            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4469d0:

            mov EAX,1
            add RSP,8
            ret 
.L_4469da:

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_4469eb:

            nop
            nop
            nop
            nop
            nop
.L_4469f0:

            movzx EAX,BYTE PTR [RDI+944]
            mov EDX,EAX
            or EAX,1
            and EDX,4294967294
            test SIL,SIL
            cmove EAX,EDX
            mov BYTE PTR [RDI+944],AL
            ret 
.L_446a0c:

            nop
            nop
            nop
            nop
.L_446a10:

            movzx EAX,BYTE PTR [RDI+944]
            mov EDX,EAX
            or EAX,2
            and EDX,4294967293
            test SIL,SIL
            cmove EAX,EDX
            mov BYTE PTR [RDI+944],AL
            ret 
.L_446a2c:

            nop
            nop
            nop
            nop
.L_446a30:

            add RDI,736
            jmp .L_4380a0
.L_446a3c:

            nop
            nop
            nop
            nop
.L_446a40:

            mov RAX,QWORD PTR [RDI+960]
            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RDI+952]
            ret 
.L_446a52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446a60:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+952]
            mov RBP,RDX
            call free@PLT

            test R12,R12
            je .L_446ab0

            test RBP,RBP
            je .L_446ab0

            mov QWORD PTR [RBX+960],RBP
            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+952],RAX
            je .L_446acb

            pop RBX
            mov RDX,RBP
            mov RSI,R12
            mov RDI,RAX
            pop RBP
            pop R12
            jmp memcpy@PLT
.L_446ab0:

            mov QWORD PTR [RBX+952],0
            mov QWORD PTR [RBX+960],0
            pop RBX
            pop RBP
            pop R12
            ret 
.L_446acb:

            call abort@PLT
.L_446ad0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_446ad7:

            mov ESI,1080
            mov RBP,QWORD PTR [RDI]
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_446cd9

            movdqu XMM0,XMMWORD PTR [R12+24]
            lea RSI,QWORD PTR [R12+200]
            lea RDI,QWORD PTR [RBX+200]
            mov QWORD PTR [RAX],RBP
            movups XMMWORD PTR [RAX+24],XMM0
            movdqu XMM0,XMMWORD PTR [R12+40]
            movups XMMWORD PTR [RAX+40],XMM0
            movdqu XMM0,XMMWORD PTR [R12+56]
            movups XMMWORD PTR [RAX+56],XMM0
            movdqu XMM0,XMMWORD PTR [R12+72]
            movups XMMWORD PTR [RAX+72],XMM0
            movdqu XMM0,XMMWORD PTR [R12+88]
            movups XMMWORD PTR [RAX+88],XMM0
            movdqu XMM0,XMMWORD PTR [R12+104]
            movups XMMWORD PTR [RAX+104],XMM0
            movdqu XMM0,XMMWORD PTR [R12+120]
            movups XMMWORD PTR [RAX+120],XMM0
            movdqu XMM0,XMMWORD PTR [R12+136]
            movups XMMWORD PTR [RAX+136],XMM0
            movdqu XMM0,XMMWORD PTR [R12+152]
            movups XMMWORD PTR [RAX+152],XMM0
            movdqu XMM0,XMMWORD PTR [R12+168]
            movups XMMWORD PTR [RAX+168],XMM0
            mov RAX,QWORD PTR [R12+184]
            mov QWORD PTR [RBX+184],RAX
            mov RAX,QWORD PTR [R12+304]
            mov QWORD PTR [RBX+304],RAX
            mov RAX,QWORD PTR [R12+312]
            mov QWORD PTR [RBX+312],RAX
            call .L_437bf0

            lea RSI,QWORD PTR [R12+320]
            lea RDI,QWORD PTR [RBX+320]
            call .L_437bf0

            lea RSI,QWORD PTR [R12+424]
            lea RDI,QWORD PTR [RBX+424]
            call .L_437bf0

            lea RSI,QWORD PTR [R12+528]
            lea RDI,QWORD PTR [RBX+528]
            call .L_437bf0

            lea RSI,QWORD PTR [R12+840]
            lea RDI,QWORD PTR [RBX+840]
            call .L_437bf0

            lea RSI,QWORD PTR [R12+632]
            lea RDI,QWORD PTR [RBX+632]
            call .L_437bf0

            mov EAX,DWORD PTR [R12+192]
            lea RSI,QWORD PTR [R12+736]
            lea RDI,QWORD PTR [RBX+736]
            mov DWORD PTR [RBX+192],EAX
            call .L_437bf0

            movzx EAX,BYTE PTR [R12+944]
            lea RSI,QWORD PTR [R12+968]
            lea RDI,QWORD PTR [RBX+968]
            mov BYTE PTR [RBX+944],AL
            call .L_441340

            mov RDX,QWORD PTR [R12+960]
            mov RSI,QWORD PTR [R12+952]
            mov RDI,RBX
            call .L_446a60

            mov RBP,QWORD PTR [R12+1024]
            test RBP,RBP
            je .L_446cad

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446c90:

            mov RCX,QWORD PTR [RBP+24]
            mov RDX,QWORD PTR [RBP+16]
            mov RDI,RBX
            mov RSI,QWORD PTR [RBP+8]
            call .L_4478f0

            mov RBP,QWORD PTR [RBP]
            test RBP,RBP
            jne .L_446c90
.L_446cad:

            mov RBP,QWORD PTR [R12+1040]
            test RBP,RBP
            je .L_446cd9

            nop
            nop
            nop
            nop
            nop
            nop
.L_446cc0:

            mov RDX,QWORD PTR [RBP+16]
            mov RSI,QWORD PTR [RBP+8]
            mov RDI,RBX
            call .L_4476c0

            mov RBP,QWORD PTR [RBP]
            test RBP,RBP
            jne .L_446cc0
.L_446cd9:

            mov RAX,RBX
            pop RBX
.L_446cdd:

            pop RBP
            pop R12
            ret 
.L_446ce1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446cf0:

            lea RAX,QWORD PTR [RDI+968]
            ret 
.L_446cf8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446d00:

            add RDI,968
            jmp .L_4412b0
.L_446d0c:

            nop
            nop
            nop
            nop
.L_446d10:

            add RDI,968
            jmp .L_4413a0
.L_446d1c:

            nop
            nop
            nop
            nop
.L_446d20:

            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov RBX,RDI
            mov RDI,R9
            mov EBP,ESI
            mov R12D,EDX
            sub RSP,24
            mov DWORD PTR [RSP+12],R8D
            mov QWORD PTR [RSP],R9
            call wcslen@PLT

            sub RSP,8
            lea RDI,QWORD PTR [RBX+968]
            mov ECX,R13D
            push RAX
            mov R9,QWORD PTR [RSP+16]
            mov EDX,R12D
            mov R8D,DWORD PTR [RSP+28]
            mov ESI,EBP
            call .L_441410

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_446d74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446d80:

            add RDI,968
            jmp .L_4414d0
.L_446d8c:

            nop
            nop
            nop
            nop
.L_446d90:

            add RDI,968
            jmp .L_441490
.L_446d9c:

            nop
            nop
            nop
            nop
.L_446da0:

            add RDI,968
            jmp .L_4414e0
.L_446dac:

            nop
            nop
            nop
            nop
.L_446db0:

            push RBX
            mov EAX,ESI
            lea RSI,QWORD PTR [RDI+968]
            mov RDI,QWORD PTR [RDI]
            push QWORD PTR [RSP+16]
            push R9
            mov R9,R8
            mov R8,RCX
            mov RCX,RDX
            mov EDX,EAX
            call .L_441530

            cmp EAX,-30
            mov EBX,EAX
            pop RDX
            pop RCX
            je .L_446de0
.L_446ddc:

            mov EAX,EBX
            pop RBX
            ret 
.L_446de0:

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            jne .L_446ddc

            lea RSI,QWORD PTR [RIP+.L_446fcf]
            mov EDI,1
            call .L_43f6e0
.L_446dfb:

            nop
            nop
            nop
            nop
            nop
.L_446e00:

            mov RAX,RDI
            lea RDI,QWORD PTR [RDI+968]
            mov RCX,QWORD PTR [RAX]
            jmp .L_4416e0
.L_446e12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446e20:

            add RDI,968
            xor ECX,ECX
            jmp .L_441a50
.L_446e2e:

            nop
            nop
.L_446e30:

            add RDI,968
            jmp .L_441a50
.L_446e3c:

            nop
            nop
            nop
            nop
.L_446e40:

            add RDI,968
            jmp .L_441df0
.L_446e4c:

            nop
            nop
            nop
            nop
.L_446e50:

            add RDI,968
            xor ECX,ECX
            jmp .L_442b10
.L_446e5e:

            nop
            nop
.L_446e60:

            add RDI,968
            jmp .L_442b10
.L_446e6c:

            nop
            nop
            nop
            nop
.L_446e70:

            push RBX
            mov RBX,RDI
            sub RSP,16
            mov RDI,QWORD PTR [RDI+1000]
            mov DWORD PTR [RSP+12],ESI
            test RDI,RDI
            je .L_446e98

            call free@PLT

            mov QWORD PTR [RBX+1000],0
.L_446e98:

            lea RDI,QWORD PTR [RSP+12]
            call .L_444b70

            test EAX,EAX
            je .L_446eb8

            mov RAX,QWORD PTR [RBX+1000]
            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446eb8:

            mov RCX,QWORD PTR [RBX]
            mov EDX,DWORD PTR [RSP+12]
            lea RDI,QWORD PTR [RBX+968]
            xor ESI,ESI
            call .L_4416e0

            mov QWORD PTR [RBX+1000],RAX
            add RSP,16
            pop RBX
            ret 
.L_446eda:

            nop
            nop
            nop
            nop
            nop
            nop
.L_446ee0:

            push RBX
            mov RBX,RDI
            sub RSP,16
            mov RDI,QWORD PTR [RDI+1008]
            mov DWORD PTR [RSP+12],ESI
            test RDI,RDI
            je .L_446f08

            call free@PLT

            mov QWORD PTR [RBX+1008],0
.L_446f08:

            lea RDI,QWORD PTR [RSP+12]
            call .L_444b70

            test EAX,EAX
            je .L_446f28

            mov RAX,QWORD PTR [RBX+1008]
            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_446f28:

            mov EDX,DWORD PTR [RSP+12]
            lea RDI,QWORD PTR [RBX+968]
            xor ECX,ECX
            xor ESI,ESI
            call .L_441a50

            mov QWORD PTR [RBX+1008],RAX
            add RSP,16
            pop RBX
            ret 
.L_446f49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_446f50:

            push R13
            push R12
            mov R13,R8
            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RDX
            mov R12,RCX
            sub RSP,24
            mov RDI,QWORD PTR [RDI+1008]
            mov DWORD PTR [RSP+12],ESI
            test RDI,RDI
            je .L_446f86

            call free@PLT

            mov QWORD PTR [RBX+1008],0
.L_446f86:

            lea RDI,QWORD PTR [RSP+12]
            call .L_444b70

            test EAX,EAX
            je .L_446fb0

            mov RAX,QWORD PTR [RBX+1008]
.L_446f9b:

            mov QWORD PTR [RBP],RAX
            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_446fb0:

            mov EDX,DWORD PTR [RSP+12]
            lea RDI,QWORD PTR [RBX+968]
            mov RCX,R13
            mov RSI,R12
            call .L_441a50

            mov QWORD PTR [RBX+1008],RAX
            jmp .L_446f9b
.L_446fcf:
          .string "No memory"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_446fe0:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            sub RSP,8
.L_446feb:

            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_44701b

            mov RDI,QWORD PTR [RAX+16]
            call .L_444c80

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RAX+24]
            call .L_444c80

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            mov QWORD PTR [RBX+8],0
.L_44701b:

            mov RCX,QWORD PTR [RBX+24]
            test RCX,RCX
            je .L_447090

            mov RSI,QWORD PTR [RBX]
            mov EDX,EBP
            xor EDI,EDI
            and EDX,2
            and EBP,1
.L_447031:

            mov RAX,QWORD PTR [RSI]
            test RAX,RAX
            je .L_44707c
.L_447039:

            cmp QWORD PTR [RAX+24],0
            je .L_447070

            test EBP,EBP
            je .L_447074
.L_447044:

            mov RCX,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RAX+8]
            test RCX,RCX
            je .L_447058

            mov QWORD PTR [RCX+8],RDX
            mov RDX,QWORD PTR [RAX+8]
.L_447058:

            test RDX,RDX
            je .L_447098

            mov QWORD PTR [RDX],RCX
.L_447060:

            sub QWORD PTR [RBX+16],1
            mov QWORD PTR [RBX+8],RAX
.L_447069:

            add RSP,8
.L_44706d:

            pop RBX
            pop RBP
            ret 
.L_447070:

            test EDX,EDX
            jne .L_447044
.L_447074:

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            jne .L_447039
.L_44707c:

            add RDI,1
            add RSI,8
            cmp RCX,RDI
            jne .L_447031

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447090:

            xor EAX,EAX
            jmp .L_447069
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_447098:

            mov QWORD PTR [RSI],RCX
            jmp .L_447060
.L_44709d:

            nop
            nop
            nop
.L_4470a0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,8
.L_4470b4:

            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_4470e7

            mov RDI,QWORD PTR [RAX+16]
            call .L_444c80

            mov RAX,QWORD PTR [R12+8]
            mov RDI,QWORD PTR [RAX+24]
            call .L_444c80

            mov RDI,QWORD PTR [R12+8]
            call free@PLT

            mov QWORD PTR [R12+8],0
.L_4470e7:

            mov RDI,RBX
            call .L_444d80

            mov RDI,RBX
            mov R13,RAX
            call .L_4453f0

            mov RBP,RAX
            mov R14,RAX
            mov RAX,QWORD PTR [R12+24]
            mov RDX,QWORD PTR [R12]
            xor RBP,R13
            sub RAX,1
            and RAX,RBP
            mov RBX,QWORD PTR [RDX+RAX*8]
            lea R15,QWORD PTR [RAX*8]
            test RBX,RBX
            jne .L_447138

            jmp .L_447198
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447130:

            mov RBX,QWORD PTR [RBX]
            test RBX,RBX
            je .L_447198
.L_447138:

            cmp QWORD PTR [RBX+32],RBP
            jne .L_447130

            mov RDI,QWORD PTR [RBX+16]
            call .L_444d80

            cmp RAX,R13
            jne .L_447130

            mov RDI,QWORD PTR [RBX+16]
            call .L_4453f0

            cmp RAX,R14
            jne .L_447130

            sub DWORD PTR [RBX+40],1
            jne .L_44719a

            mov RDX,QWORD PTR [RBX+8]
            mov RAX,QWORD PTR [RBX]
            test RDX,RDX
            je .L_447172

            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [RBX]
.L_447172:

            test RAX,RAX
            je .L_44717b

            mov QWORD PTR [RAX+8],RDX
.L_44717b:

            add R15,QWORD PTR [R12]
            cmp QWORD PTR [R15],RBX
            jne .L_447187

            mov QWORD PTR [R15],RAX
.L_447187:

            sub QWORD PTR [R12+16],1
            mov QWORD PTR [R12+8],RBX
            jmp .L_44719a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_447198:

            xor EBX,EBX
.L_44719a:

            add RSP,8
.L_44719e:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4471ac:

            nop
            nop
            nop
            nop
.L_4471b0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov EDI,1
            mov ESI,48
            sub RSP,8
.L_4471ce:

            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_44725f

            mov RDI,RBP
            call .L_446ad0

            mov R15,QWORD PTR [R12+24]
            mov QWORD PTR [RBX+16],RAX
            lea R14,QWORD PTR [R15+R15*1]
            cmp QWORD PTR [R12+16],R14
            jbe .L_447200

            cmp R15,R14
            jbe .L_447278
.L_447200:

            mov RDI,RBP
            call .L_444d80

            mov RDI,RBP
            mov R13,RAX
            call .L_4453f0

            mov RDI,QWORD PTR [R12+24]
            mov RCX,QWORD PTR [R12]
            xor RAX,R13
            lea RDX,QWORD PTR [RDI-1]
            and RDX,RAX
            lea RCX,QWORD PTR [RCX+RDX*8]
            mov RDX,QWORD PTR [RCX]
            test RDX,RDX
            je .L_447239

            mov QWORD PTR [RDX+8],RBX
            mov RDX,QWORD PTR [RCX]
.L_447239:

            add QWORD PTR [R12+16],1
            mov QWORD PTR [RBX],RDX
            mov RDI,RBP
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RCX],RBX
            mov QWORD PTR [RBX+32],RAX
            call .L_445440

            sub EAX,1
            mov DWORD PTR [RBX+40],EAX
.L_44725f:

            add RSP,8
.L_447263:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_447278:

            mov ESI,8
            mov RDI,R14
            call calloc@PLT

            test RAX,RAX
            mov R13,RAX
            je .L_447200

            test R15,R15
            mov RDI,QWORD PTR [R12]
            je .L_4472f0

            mov R8,RDI
            lea R9,QWORD PTR [RDI+R15*8]
            lea RAX,QWORD PTR [R14-1]
            jmp .L_4472df
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4472b0:

            mov RCX,QWORD PTR [RDX]
            mov QWORD PTR [R8],RCX
            mov RCX,QWORD PTR [RDX+32]
            and RCX,RAX
            lea RSI,QWORD PTR [R13+RCX*8]
            mov RCX,QWORD PTR [RSI]
            test RCX,RCX
            je .L_4472d1

            mov QWORD PTR [RCX+8],RDX
            mov RCX,QWORD PTR [RSI]
.L_4472d1:

            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDX+8],0
            mov QWORD PTR [RSI],RDX
.L_4472df:

            mov RDX,QWORD PTR [R8]
            test RDX,RDX
            jne .L_4472b0

            add R8,8
            cmp R9,R8
            jne .L_4472df
.L_4472f0:

            call free@PLT

            mov QWORD PTR [R12],R13
            mov QWORD PTR [R12+24],R14
            jmp .L_447200
.L_447303:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447310:

            push RBX
            mov ESI,40
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_447347

            mov QWORD PTR [RAX+24],1024
            mov ESI,8
            mov EDI,1024
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_447350
.L_447347:

            mov RAX,RBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_447350:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            jmp .L_447347
.L_44735c:

            nop
            nop
            nop
            nop
.L_447360:

            mov EAX,ESI
            and EAX,16711680
            cmp EAX,196608
            je .L_4473a7

            jle .L_4473b0

            cmp EAX,524288
            jne .L_447380

            mov DWORD PTR [RDI+32],1
            ret 
          .byte 0x90
.L_447380:

            cmp EAX,655360
            je .L_4473a7

            cmp EAX,262144
            je .L_4473a7
.L_44738e:

            mov DWORD PTR [RDI+32],2
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4473a0:

            cmp EAX,131072
            jne .L_44738e
.L_4473a7:

            mov DWORD PTR [RDI+32],0
            ret 
          .byte 0x90
.L_4473b0:

            cmp EAX,65536
            jne .L_4473a0

            sub ESI,65540
            cmp ESI,1
            ja .L_44738e

            mov DWORD PTR [RDI+32],3
            ret 
.L_4473ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4473d0:

            test RDI,RDI
            je .L_447410

            push RBX
            mov RBX,RDI
            jmp .L_4473e9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4473e0:

            mov RDI,QWORD PTR [RAX+24]
            call .L_444c80
.L_4473e9:

            mov ESI,3
            mov RDI,RBX
            call .L_446fe0

            test RAX,RAX
            jne .L_4473e0

            mov RDI,QWORD PTR [RBX]
            call free@PLT

            mov RDI,RBX
            pop RBX
            jmp free@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_447410:

            ret 
.L_447412:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447420:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,8
.L_447430:

            mov QWORD PTR [RDX],0
            mov RDI,QWORD PTR [RSI]
            test RDI,RDI
            je .L_447550

            mov RBP,RDX
            call .L_445440

            cmp EAX,1
            je .L_447541

            mov RDI,QWORD PTR [RBX]
            call .L_444e70

            cmp EAX,16384
            je .L_447541

            mov RDI,QWORD PTR [RBX]
            call .L_444e70

            cmp EAX,24576
            je .L_447541

            mov RDI,QWORD PTR [RBX]
            call .L_444e70

            cmp EAX,8192
            je .L_447541

            mov EAX,DWORD PTR [R12+32]
            cmp EAX,1
            je .L_447580

            cmp EAX,3
            je .L_4474e8

            test EAX,EAX
            jne .L_447541

            mov RSI,QWORD PTR [RBX]
            mov RDI,R12
            call .L_4470a0

            test RAX,RAX
            mov RBP,RAX
            je .L_4475a0

            mov RDI,QWORD PTR [RBX]
            call .L_446790

            mov RDI,QWORD PTR [RBP+16]
.L_4474cb:

            call .L_445450

            mov RDI,QWORD PTR [RBX]
            add RSP,8
.L_4474d7:

            mov RSI,RAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_446110
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4474e8:

            mov RSI,QWORD PTR [RBX]
            mov RDI,R12
            call .L_4470a0

            test RAX,RAX
            mov R13,RAX
            je .L_4475b5

            mov RDX,QWORD PTR [R13+24]
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RBX],RDX
            mov QWORD PTR [R13+24],RAX
            mov RDI,QWORD PTR [RBX]
            call .L_446790

            mov RDI,QWORD PTR [R13+16]
            call .L_445450

            mov RDI,QWORD PTR [RBX]
            mov RSI,RAX
            call .L_446110

            mov EAX,DWORD PTR [R13+40]
            test EAX,EAX
            jne .L_447541

            mov RAX,QWORD PTR [R13+24]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [R13+24],0
.L_447541:

            add RSP,8
.L_447545:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_447550:

            mov ESI,1
            mov RDI,R12
            call .L_446fe0

            test RAX,RAX
            je .L_447541

            mov RDX,QWORD PTR [RAX+24]
            mov QWORD PTR [RBX],RDX
            mov QWORD PTR [RAX+24],0
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_447580:

            mov RSI,QWORD PTR [RBX]
            mov RDI,R12
            call .L_4470a0

            test RAX,RAX
            je .L_4475a0

            mov RDI,QWORD PTR [RAX+16]
            jmp .L_4474cb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4475a0:

            mov RSI,QWORD PTR [RBX]
            add RSP,8
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_4471b0
.L_4475b5:

            mov RSI,QWORD PTR [RBX]
            mov RDI,R12
            call .L_4471b0

            test RAX,RAX
            je .L_447541

            mov RDX,QWORD PTR [RBX]
            mov QWORD PTR [RAX+24],RDX
            mov QWORD PTR [RBX],0
            jmp .L_447541
.L_4475dc:

            nop
            nop
            nop
            nop
.L_4475e0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_4475ec:

            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_44761c

            mov RDI,QWORD PTR [RAX+16]
            call .L_444c80

            mov RAX,QWORD PTR [RBX+8]
            mov RDI,QWORD PTR [RAX+24]
            call .L_444c80

            mov RDI,QWORD PTR [RBX+8]
            call free@PLT

            mov QWORD PTR [RBX+8],0
.L_44761c:

            mov ESI,2
            mov RDI,RBX
            call .L_446fe0

            test RAX,RAX
            mov RDX,RAX
            je .L_447650

            test RBP,RBP
            mov RAX,QWORD PTR [RAX+16]
            je .L_447640

            mov ECX,DWORD PTR [RDX+40]
            mov DWORD PTR [RBP],ECX
.L_447640:

            mov QWORD PTR [RDX+16],0
.L_447648:

            add RSP,8
.L_44764c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_447650:

            xor EAX,EAX
            test RBP,RBP
            je .L_447648

            mov DWORD PTR [RBP],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_447665:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447670:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+1040]
            test RDI,RDI
            je .L_44769f

            nop
            nop
            nop
.L_447688:

            mov RBX,QWORD PTR [RDI]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RBP+1040],RBX
            mov RDI,RBX
            jne .L_447688
.L_44769f:

            mov QWORD PTR [RBP+1048],0
            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_4476b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4476c0:

            test RSI,RSI
            js .L_4476dc

            test RDX,RDX
            js .L_4476dc

            movabs RAX,9223372036854775807
            sub RAX,RDX
            cmp RAX,RSI
            jge .L_4476e0
.L_4476dc:

            ret 
          .byte 0x66
          .byte 0x90
.L_4476e0:

            push R13
            push R12
            lea R13,QWORD PTR [RSI+RDX*1]
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            mov R12,RDI
            sub RSP,8
            call .L_4456a0

            cmp R13,RAX
            jg .L_447727

            mov R13,QWORD PTR [R12+1048]
            test R13,R13
            je .L_447738

            mov RDX,QWORD PTR [R13+16]
            mov RAX,QWORD PTR [R13+8]
            add RAX,RDX
            cmp RAX,RBX
            jg .L_447727

            jne .L_447738

            add RDX,RBP
            mov QWORD PTR [R13+16],RDX
.L_447727:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447738:

            mov EDI,24
            call malloc@PLT

            test RAX,RAX
            je .L_447727

            cmp QWORD PTR [R12+1040],0
            mov QWORD PTR [RAX+8],RBX
            mov QWORD PTR [RAX+16],RBP
            mov QWORD PTR [RAX],0
            je .L_447774

            test R13,R13
            je .L_44776a

            mov QWORD PTR [R13],RAX
.L_44776a:

            mov QWORD PTR [R12+1048],RAX
            jmp .L_447727
.L_447774:

            mov QWORD PTR [R12+1048],RAX
            mov QWORD PTR [R12+1040],RAX
            jmp .L_447727
.L_447786:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447790:

            push R12
            push RBP
            push RBX
            mov RDX,QWORD PTR [RDI+1040]
            test RDX,RDX
            je .L_447810

            mov RAX,RDX
            xor EBX,EBX
            nop
            nop
            nop
.L_4477a8:

            mov RAX,QWORD PTR [RAX]
            add EBX,1
            test RAX,RAX
            jne .L_4477a8

            cmp EBX,1
            je .L_4477c0
.L_4477b8:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_4477c0:

            cmp QWORD PTR [RDX+8],0
            jne .L_4477b8

            mov R12,QWORD PTR [RDX+16]
            mov RBP,RDI
            call .L_4456a0

            cmp R12,RAX
            jl .L_4477b8

            mov RDI,QWORD PTR [RBP+1040]
            test RDI,RDI
            je .L_4477ff

            nop
            nop
            nop
            nop
.L_4477e8:

            mov RBX,QWORD PTR [RDI]
            call free@PLT

            test RBX,RBX
            mov QWORD PTR [RBP+1040],RBX
            mov RDI,RBX
            jne .L_4477e8
.L_4477ff:

            mov QWORD PTR [RBP+1048],0
            xor EBX,EBX
            jmp .L_4477b8
          .byte 0x66
          .byte 0x90
.L_447810:

            xor EBX,EBX
            mov EAX,EBX
            pop RBX
.L_447815:

            pop RBP
            pop R12
            ret 
.L_447819:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447820:

            mov RAX,QWORD PTR [RDI+1040]
            mov QWORD PTR [RDI+1056],RAX
            jmp .L_447790
.L_447833:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447840:

            mov RAX,QWORD PTR [RDI+1056]
            test RAX,RAX
            je .L_447867

            mov RCX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSI],RCX
            mov RCX,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RDX],RCX
            mov QWORD PTR [RDI+1056],RAX
            xor EAX,EAX
            ret 
.L_447867:

            mov QWORD PTR [RSI],0
            mov EAX,4294967276
            mov QWORD PTR [RDX],0
            ret 
.L_44787b:

            nop
            nop
            nop
            nop
            nop
.L_447880:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_447889:

            mov RAX,QWORD PTR [RDI+1024]
            test RAX,RAX
            je .L_4478cf

            nop
            nop
            nop
.L_447898:

            mov RDI,QWORD PTR [RAX+8]
            mov RBP,QWORD PTR [RAX]
            call free@PLT

            mov RAX,QWORD PTR [RBX+1024]
            mov RDI,QWORD PTR [RAX+16]
            call free@PLT

            mov RDI,QWORD PTR [RBX+1024]
            call free@PLT

            test RBP,RBP
            mov QWORD PTR [RBX+1024],RBP
            mov RAX,RBP
            jne .L_447898
.L_4478cf:

            mov QWORD PTR [RBX+1024],0
            add RSP,8
.L_4478de:

            pop RBX
            pop RBP
            ret 
.L_4478e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4478f0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_4478fe:

            mov EDI,32
            mov R13,RDX
            mov R12,RCX
            call malloc@PLT

            test RAX,RAX
            je .L_447974

            mov RDI,R14
            mov RBX,RAX
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_447974

            mov RDI,R12
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            jne .L_447960

            mov QWORD PTR [RBX+24],0
.L_447940:

            mov RAX,QWORD PTR [RBP+1024]
            mov QWORD PTR [RBP+1024],RBX
            mov QWORD PTR [RBX],RAX
            pop RBX
.L_447952:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447960:

            mov RDX,R12
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov QWORD PTR [RBX+24],R12
            jmp .L_447940
.L_447974:

            lea RSI,QWORD PTR [RIP+.L_447a40]
            mov EDI,1
            call .L_43f6e0
.L_447985:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447990:

            mov RDX,QWORD PTR [RDI+1024]
            xor EAX,EAX
            test RDX,RDX
            je .L_4479b0

            nop
            nop
.L_4479a0:

            mov RDX,QWORD PTR [RDX]
            add EAX,1
            test RDX,RDX
            jne .L_4479a0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4479b0:

            ret 
.L_4479b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4479c0:

            mov RDX,QWORD PTR [RDI+1024]
            xor EAX,EAX
            test RDX,RDX
            mov QWORD PTR [RDI+1032],RDX
            je .L_4479e8

            nop
            nop
            nop
.L_4479d8:

            mov RDX,QWORD PTR [RDX]
            add EAX,1
            test RDX,RDX
            jne .L_4479d8

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4479e8:

            ret 
.L_4479ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4479f0:

            mov RAX,QWORD PTR [RDI+1032]
            test RAX,RAX
            je .L_447a25

            mov R8,QWORD PTR [RAX+8]
            mov QWORD PTR [RSI],R8
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [RDI+1032]
            mov RDX,QWORD PTR [RAX+24]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RCX],RDX
            mov QWORD PTR [RDI+1032],RAX
            xor EAX,EAX
            ret 
.L_447a25:

            mov QWORD PTR [RSI],0
            mov EAX,4294967276
            mov QWORD PTR [RDX],0
            mov QWORD PTR [RCX],0
            ret 
.L_447a40:

            jne .L_447ab7
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x6d
          .byte 0x65
          .byte 0x6d
          .byte 0x6f
          .byte 0x72
          .byte 0x79
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_447a50:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            call HMAC_CTX_free@PLT

            mov QWORD PTR [RBX],0
            pop RBX
            ret 
.L_447a65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447a70:

            push RBX
            mov RBX,RDX
            sub RSP,16
            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDX]
            lea RDX,QWORD PTR [RSP+4]
            mov DWORD PTR [RSP+4],EAX
            call HMAC_Final@PLT

            mov EAX,DWORD PTR [RSP+4]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_447ab9

            add RSP,16
.L_447ab7:

            pop RBX
            ret 
.L_447ab9:

            call __stack_chk_fail@PLT
.L_447abe:

            nop
            nop
.L_447ac0:

            mov RDI,QWORD PTR [RDI]
            jmp HMAC_Update@PLT
.L_447ac8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447ad0:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            call HMAC_CTX_new@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_447b10

            call EVP_sha1@PLT

            mov RDI,QWORD PTR [RBX]
            xor R8D,R8D
            mov RCX,RAX
            mov EDX,R12D
            mov RSI,RBP
            call HMAC_Init_ex@PLT

            xor EAX,EAX
.L_447b05:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447b10:

            mov EAX,4294967295
            jmp .L_447b05
.L_447b17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447b20:

            xor EAX,EAX
            ret 
.L_447b23:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447b30:

            cmp EDI,2
            je .L_447b48

            lea RAX,QWORD PTR [RIP+.L_448090]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_447b41:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447b48:

            mov R8,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            movabs RDI,-17592186044416
            mov RAX,RSI
            mov RCX,RSI
            shl RAX,8
            shl RCX,32
            and RCX,RDI
            and EAX,1048320
            movabs RDI,17592184995840
            or RAX,RCX
            mov RCX,R8
            shl RCX,12
            and RCX,RDI
            or RCX,RAX
            movzx EAX,R8B
            or RAX,RCX
            mov RCX,RAX
            shr RCX,8
            mov EDI,ECX
            mov RCX,RAX
            shr RCX,32
            and EDI,4095
            and ECX,4294963200
            or ECX,EDI
            cmp RSI,RCX
            je .L_447bc0

            lea RSI,QWORD PTR [RIP+.L_4480d0]
            mov QWORD PTR [RDX],RSI
            ret 
          .byte 0x66
          .byte 0x90
.L_447bc0:

            mov RCX,RAX
            movzx ESI,AL
            shr RCX,12
            xor CL,CL
            or ECX,ESI
            cmp R8,RCX
            je .L_447b41

            lea RSI,QWORD PTR [RIP+.L_450f60-36528]
            mov QWORD PTR [RDX],RSI
            ret 
.L_447be2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447bf0:

            cmp EDI,2
            je .L_447c08

            lea RAX,QWORD PTR [RIP+.L_448090]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_447c01:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447c08:

            mov RDI,QWORD PTR [RSI]
            mov RSI,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RCX,RSI
            shl RAX,8
            shl RCX,12
            and ECX,4293918720
            and EAX,1048320
            or RAX,RCX
            movzx ECX,SIL
            or RAX,RCX
            mov RCX,RAX
            shr RCX,8
            and ECX,4095
            cmp RDI,RCX
            je .L_447c50

            lea RSI,QWORD PTR [RIP+.L_4480d0]
            mov QWORD PTR [RDX],RSI
            ret 
          .byte 0x90
.L_447c50:

            mov RCX,RAX
            movzx EDI,AL
            shr RCX,12
            and ECX,1048320
            or ECX,EDI
            cmp RSI,RCX
            je .L_447c01

            lea RSI,QWORD PTR [RIP+.L_450f60-36528]
            mov QWORD PTR [RDX],RSI
            ret 
.L_447c72:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447c80:

            cmp EDI,2
            je .L_447c98

            lea RAX,QWORD PTR [RIP+.L_448090]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_447c91:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447c98:

            mov RCX,QWORD PTR [RSI]
            mov RSI,QWORD PTR [RSI+8]
            mov RAX,RCX
            mov RDI,RSI
            shl RAX,8
            and EDI,4294902015
            movzx EAX,AX
            or RAX,RDI
            movzx EDI,AH
            cmp RCX,RDI
            je .L_447cc7

            lea RCX,QWORD PTR [RIP+.L_4480d0]
            mov QWORD PTR [RDX],RCX
.L_447cc7:

            mov ECX,EAX
            xor CH,AH
            movsxd RCX,ECX
            cmp RSI,RCX
            je .L_447c91

            lea RSI,QWORD PTR [RIP+.L_450f60-36528]
            mov QWORD PTR [RDX],RSI
            ret 
.L_447cde:

            nop
            nop
.L_447ce0:

            cmp EDI,2
            je .L_447cf8

            lea RAX,QWORD PTR [RIP+.L_448090]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_447cf1:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447cf8:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            movzx ESI,CL
            shl RAX,8
            movzx EAX,AX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,8
            cmp RDI,RSI
            je .L_447d25

            lea RDI,QWORD PTR [RIP+.L_4480d0]
            mov QWORD PTR [RDX],RDI
.L_447d25:

            movzx ESI,AL
            cmp RCX,RSI
            je .L_447cf1

            lea RCX,QWORD PTR [RIP+.L_450f60-36528]
            mov QWORD PTR [RDX],RCX
            ret 
.L_447d38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447d40:

            cmp EDI,2
            je .L_447d58

            lea RAX,QWORD PTR [RIP+.L_448090]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_447d51:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447d58:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RSI,RCX
            shl RAX,20
            and ESI,1048575
            mov EAX,EAX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,20
            cmp RDI,RSI
            je .L_447d8a

            lea RDI,QWORD PTR [RIP+.L_4480d0]
            mov QWORD PTR [RDX],RDI
.L_447d8a:

            mov RSI,RAX
            and ESI,1048575
            cmp RCX,RSI
            je .L_447d51

            lea RCX,QWORD PTR [RIP+.L_450f60-36528]
            mov QWORD PTR [RDX],RCX
            ret 
.L_447da3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447db0:

            cmp EDI,2
            je .L_447dc8

            lea RAX,QWORD PTR [RIP+.L_448090]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_447dc1:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447dc8:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RSI,RCX
            shl RAX,18
            and ESI,262143
            mov EAX,EAX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,18
            cmp RDI,RSI
            je .L_447dfa

            lea RDI,QWORD PTR [RIP+.L_4480d0]
            mov QWORD PTR [RDX],RDI
.L_447dfa:

            mov RSI,RAX
            and ESI,262143
            cmp RCX,RSI
            je .L_447dc1

            lea RCX,QWORD PTR [RIP+.L_450f60-36528]
            mov QWORD PTR [RDX],RCX
            ret 
.L_447e13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447e20:

            cmp EDI,2
            je .L_447e38

            lea RAX,QWORD PTR [RIP+.L_448090]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_447e31:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447e38:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RSI,RCX
            shl RAX,24
            and ESI,16777215
            mov EAX,EAX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,24
            cmp RDI,RSI
            je .L_447e6a

            lea RDI,QWORD PTR [RIP+.L_4480d0]
            mov QWORD PTR [RDX],RDI
.L_447e6a:

            mov RSI,RAX
            and ESI,16777215
            cmp RCX,RSI
            je .L_447e31

            lea RCX,QWORD PTR [RIP+.L_450f60-36528]
            mov QWORD PTR [RDX],RCX
            ret 
.L_447e83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_447e90:

            cmp EDI,2
            je .L_447f20

            cmp EDI,3
            je .L_447eb0

            lea RAX,QWORD PTR [RIP+.L_448090]
            mov QWORD PTR [RDX],RAX
            xor EAX,EAX
.L_447eaa:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_447eb0:

            mov R8,QWORD PTR [RSI]
            mov RDI,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI+16]
            mov RAX,R8
            mov RCX,RDI
            shl RAX,20
            shl RCX,8
            and ECX,1048320
            mov EAX,EAX
            or RAX,RCX
            movzx ECX,SIL
            or RAX,RCX
            mov RCX,RAX
            shr RCX,20
            cmp R8,RCX
            je .L_447ef1

            lea RCX,QWORD PTR [RIP+.L_4480d0]
            mov QWORD PTR [RDX],RCX
.L_447ef1:

            mov RCX,RAX
            shr RCX,8
            and ECX,4095
            cmp RDI,RCX
            je .L_447f0d

            lea RDI,QWORD PTR [RIP+.L_447ff9]
            mov QWORD PTR [RDX],RDI
.L_447f0d:

            movzx ECX,AL
            cmp RSI,RCX
            je .L_447eaa

            lea RCX,QWORD PTR [RIP+.L_44800d]
            mov QWORD PTR [RDX],RCX
            ret 
.L_447f20:

            mov RDI,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            mov RAX,RDI
            mov RSI,RCX
            shl RAX,20
            and ESI,1048575
            mov EAX,EAX
            or RAX,RSI
            mov RSI,RAX
            shr RSI,20
            cmp RDI,RSI
            je .L_447f52

            lea RDI,QWORD PTR [RIP+.L_4480d0]
            mov QWORD PTR [RDX],RDI
.L_447f52:

            mov RSI,RAX
            and ESI,1048575
            cmp RCX,RSI
            je .L_447eaa

            lea RDI,QWORD PTR [RIP+.L_450f60-36528]
            mov QWORD PTR [RDX],RDI
            ret 
.L_447f6f:

            nop
.L_447f70:

            push R15
            push R14
            mov R15D,16
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            xor R12D,R12D
            lea R13,QWORD PTR [RIP+.L_65b5e0]
            sub RSP,8
.L_447f91:

            jmp .L_447fa0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_447f98:

            cmp RBX,R12
            jbe .L_447fe8
.L_447f9d:

            mov R15,RBX
.L_447fa0:

            lea RBX,QWORD PTR [R12+R15*1]
            mov RDI,R14
            shr RBX,1
            mov RBP,RBX
            shl RBP,4
            add RBP,R13
            mov RSI,QWORD PTR [RBP]
            call strcmp@PLT

            test EAX,EAX
            js .L_447f98

            je .L_447fd1

            lea R12,QWORD PTR [RBX+1]
            cmp R12,R15
            jae .L_447fe8

            mov RBX,R15
            jmp .L_447f9d
.L_447fd1:

            mov RAX,QWORD PTR [RBP+8]
            add RSP,8
.L_447fd9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_447fe8:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_447ff9:
          .string "invalid unit number"
.L_44800d:
          .string "invalid subunit number"
.L_448024:
          .string "386bsd"
.L_44802b:
          .string "4bsd"
.L_448030:
          .string "bsdos"
.L_448036:
          .string "freebsd"
.L_44803e:

            push 7894384
.L_448043:

            imul ESI,DWORD PTR [RBX+99],1852402688
            jne .L_4480c4

            add BYTE PTR [RSI+97],CH
          .byte 0x74
          .byte 0x69
          .byte 0x76
          .byte 0x65
          .byte 0x0
.L_448054:
          .string "netbsd"
# WARNING: found overlapping blocks at address 47e18
# WARNING: found overlapping blocks at address 47e1a

            outsd DX,DWORD PTR [RSI]
            jae 294532
            xor DWORD PTR [RAX],EAX
.L_448060:
          .string "sco"
.L_448064:
          .string "solaris"
.L_44806c:

            jae .L_4480e3
          .byte 0x6e
          .byte 0x6f
          .byte 0x73
          .byte 0x0
.L_448072:
          .string "svr3"
# WARNING: found overlapping blocks at address 47e34
# WARNING: found overlapping blocks at address 47e36

            jae 294575
            jb .L_4480af

            add BYTE PTR [RBP+108],DH
          .byte 0x74
          .byte 0x72

            imul EDI,DWORD PTR [RAX],521088614
            test BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            nop
            nop
            nop
.L_448090:

            je .L_448101
          .byte 0x6f
          .byte 0x20
          .byte 0x6d
          .byte 0x61
          .byte 0x6e
          .byte 0x79
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x65
          .byte 0x6c
          .byte 0x64
          .byte 0x73
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x6d
          .byte 0x61
.L_4480a9:

            je .L_4480ab
.L_4480ab:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_4480af:

            add BYTE PTR [RCX+110],CH
            jbe .L_448115
          .byte 0x6c
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x6d
          .byte 0x69
          .byte 0x6e
          .byte 0x6f
          .byte 0x72
          .byte 0x20
.L_4480be:

            outsb DX,BYTE PTR [RSI]
            jne .L_44812e
          .byte 0x62
          .byte 0x65
          .byte 0x72
.L_4480c4:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_4480d0:

            imul EBP,DWORD PTR [RSI+118],1684630625
            and BYTE PTR [RBP+97],CH
            push 111
            jb .L_4480fe
          .byte 0x6e
          .byte 0x75
          .byte 0x6d
          .byte 0x62
          .byte 0x65
.L_4480e3:

            jb .L_4480e5
.L_4480e5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4480f0:

            push RBX
            mov RAX,RSI
            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+64]
            mov RDI,RAX
.L_4480fe:

            call QWORD PTR [RAX+8]
.L_448101:

            mov DWORD PTR [RBX+52],0
            mov QWORD PTR [RBX+64],0
            pop RBX
            ret 
.L_448112:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
.L_448115:

            add BYTE PTR [RSI+46],AH
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448120:

            push R12
            mov R12D,ESI
            push RBP
            push RBX
.L_448127:

            mov RSI,QWORD PTR [RDI+64]
            test RSI,RSI
.L_44812e:

            je .L_44813b

            cmp DWORD PTR [RDI+52],R12D
            mov EAX,1
            je .L_448189
.L_44813b:

            cmp R12D,11
            jbe .L_448190

            mov RBX,RDI
            mov RBP,RDX
            mov RDI,RDX
            call QWORD PTR [RDX+8]

            mov EDX,R12D
            mov EAX,4
            mov DWORD PTR [RBX+52],0
            and EDX,3
            mov QWORD PTR [RBX+64],0
            mov RDI,RBP
            sub EAX,EDX
            mov DWORD PTR [RBX+104],EAX
            lea ESI,DWORD PTR [RAX+R12*1+12]
            call QWORD PTR [RBP]

            test RAX,RAX
            mov QWORD PTR [RBX+64],RAX
            je .L_448190

            mov DWORD PTR [RBX+52],R12D
            mov EAX,1
.L_448189:

            pop RBX
.L_44818a:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_448190:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_448197:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4481a0:

            mov ECX,ECX
            mov EDX,EDX
            mov R9,QWORD PTR [RDI+64]
            movzx EAX,BYTE PTR [RDI+RCX*1+108]
            movzx EDX,BYTE PTR [RDI+RDX*1+108]
            sub EDX,EAX
            lea EAX,DWORD PTR [RAX+RAX*2]
            shl EAX,2
            add RSI,RAX
            lea EAX,DWORD PTR [RDX-1]
            movzx ECX,BYTE PTR [RDI+RAX*1+146]
            mov R8,RAX
            movzx R10D,BYTE PTR [RDI+RCX*1+108]
            cmp R10D,EDX
            je .L_448201

            lea ECX,DWORD PTR [RCX-1]
            movzx EDX,BYTE PTR [RDI+RCX*1+108]
            sub R8D,EDX
            lea EAX,DWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RDI+R8*4]
            shl EAX,2
            mov R8D,DWORD PTR [RDX+276]
            add RAX,RSI
            mov DWORD PTR [RAX],R8D
            sub RAX,R9
            mov DWORD PTR [RDX+276],EAX
.L_448201:

            lea RAX,QWORD PTR [RDI+RCX*4]
            mov EDX,DWORD PTR [RAX+276]
            mov DWORD PTR [RSI],EDX
            sub RSI,R9
            mov DWORD PTR [RAX+276],ESI
            ret 
.L_448217:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448220:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,24
.L_448231:

            mov R9,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+64]
            mov RDX,QWORD PTR [RDI+16]
            mov EBP,DWORD PTR [R9+4]
            mov QWORD PTR [RSP+8],RAX
            movzx R10D,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RDX+1]
            movzx R8D,WORD PTR [RDX+2]
            movzx EDI,WORD PTR [RDX+4]
            mov DWORD PTR [RSP+20],EBP
            add RBP,RAX
            cmp RBP,RDX
            je .L_4482b9

            lea RAX,QWORD PTR [RDX-6]
            movabs R11,3074457345618258603
            mov RCX,RAX
            sub RCX,RBP
            shr RCX,1
            imul RCX,R11
            movabs R11,9223372036854775807
            and RCX,R11
            add RCX,1
            lea R11,QWORD PTR [RCX*4]
            sub RCX,R11
            lea R11,QWORD PTR [RDX+RCX*2]
            jmp .L_4482a4
          .byte 0x90
.L_4482a0:

            sub RAX,6
.L_4482a4:

            mov ECX,DWORD PTR [RDX-6]
            cmp RAX,R11
            mov DWORD PTR [RDX],ECX
            movzx ECX,WORD PTR [RDX-2]
            mov WORD PTR [RDX+4],CX
            mov RDX,RAX
            jne .L_4482a0
.L_4482b9:

            movzx EBX,WORD PTR [R9+2]
            movzx EAX,SIL
            lea R11D,DWORD PTR [RSI+4]
            mov WORD PTR [RDX+4],DI
            xor EDI,EDI
            mov BYTE PTR [RDX],R10B
            movzx R11D,R11B
            mov WORD PTR [RDX+2],R8W
            sub EBX,EAX
            mov EAX,DWORD PTR [R12+24]
            test EAX,EAX
            setne DIL
            add R11D,EDI
            shr R11D,1
            mov BYTE PTR [RDX+1],R11B
            movzx R10D,WORD PTR [R9]
            mov EAX,R11D
            lea ECX,DWORD PTR [R10-2]
            mov WORD PTR [RSP+18],R10W
            lea RCX,QWORD PTR [RCX+RCX*2+3]
            lea R8,QWORD PTR [RDX+RCX*2]
            jmp .L_448319
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448310:

            cmp R8,RDX
            je .L_448386
.L_448315:

            movzx EAX,BYTE PTR [RDX+1]
.L_448319:

            add RDX,6
            movzx ECX,BYTE PTR [RDX+1]
            sub EBX,ECX
            add ECX,EDI
            shr ECX,1
            add R11D,ECX
            cmp AL,CL
            mov ESI,ECX
            mov BYTE PTR [RDX+1],CL
            jae .L_448310

            movzx R15D,BYTE PTR [RDX]
            movzx R14D,WORD PTR [RDX+2]
            mov RAX,RDX
            movzx R13D,WORD PTR [RDX+4]
            mov QWORD PTR [RSP],RDX
            jmp .L_448356
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448350:

            cmp SIL,BYTE PTR [RAX-5]
            jbe .L_44836d
.L_448356:

            mov EDX,DWORD PTR [RAX-6]
            sub RAX,6
            mov DWORD PTR [RAX+6],EDX
            movzx EDX,WORD PTR [RAX+4]
            mov WORD PTR [RAX+10],DX
            cmp RBP,RAX
            jne .L_448350
.L_44836d:

            mov RDX,QWORD PTR [RSP]
            mov BYTE PTR [RAX],R15B
            mov BYTE PTR [RAX+1],CL
            mov WORD PTR [RAX+2],R14W
            mov WORD PTR [RAX+4],R13W
            cmp R8,RDX
            jne .L_448315
.L_448386:

            cmp BYTE PTR [RDX+1],0
            jne .L_4483c8

            xor EAX,EAX
            nop
            nop
.L_448390:

            sub RDX,6
            add EAX,1
            cmp BYTE PTR [RDX+1],0
            je .L_448390

            movzx EDI,WORD PTR [RSP+18]
            add EBX,EAX
            add R10D,1
            shr R10D,1
            sub EDI,EAX
            movzx EAX,DI
            cmp AX,1
            mov WORD PTR [R9],AX
            je .L_4483f0

            add EAX,1
            sar EAX,1
            cmp EAX,R10D
            jne .L_448460
.L_4483c8:

            add R11D,EBX
            shr EBX,1
            sub R11D,EBX
            mov WORD PTR [R9+2],R11W
            mov QWORD PTR [R12+16],RBP
            add RSP,24
.L_4483de:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4483f0:

            movzx EDI,BYTE PTR [RBP]
            movzx EAX,BYTE PTR [RBP+1]
            movzx ESI,WORD PTR [RBP+2]
            movzx ECX,WORD PTR [RBP+4]
.L_448400:

            mov EDX,EAX
            shr EBX,1
            shr DL,1
            sub EAX,EDX
            cmp EBX,1
            ja .L_448400

            lea EDX,DWORD PTR [R10-1]
            mov EBX,DWORD PTR [RSP+20]
            movzx EDX,BYTE PTR [R12+RDX*1+146]
            lea RDX,QWORD PTR [R12+RDX*4]
            mov R8D,DWORD PTR [RDX+276]
            mov DWORD PTR [RBP],R8D
            mov DWORD PTR [RDX+276],EBX
            lea RDX,QWORD PTR [R9+2]
            mov QWORD PTR [R12+16],RDX
            mov BYTE PTR [R9+2],DIL
            mov BYTE PTR [R9+3],AL
            mov WORD PTR [R9+4],SI
            mov WORD PTR [R9+6],CX
            add RSP,24
.L_448452:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_448460:

            lea EDX,DWORD PTR [R10-1]
            lea R8D,DWORD PTR [RAX-1]
            movzx EDX,BYTE PTR [R12+RDX*1+146]
            movzx ECX,BYTE PTR [R12+R8*1+146]
            cmp EDX,ECX
            mov RDI,RDX
            je .L_4484f0

            lea R10,QWORD PTR [R12+RCX*4]
            mov EAX,DWORD PTR [R10+276]
            test EAX,EAX
            je .L_448506

            mov RSI,QWORD PTR [RSP+8]
            add RSI,RAX
            mov EAX,DWORD PTR [RSI]
            mov RDX,RSI
            mov DWORD PTR [R10+276],EAX
            lea RAX,QWORD PTR [R8+R8*2+3]
            lea R8,QWORD PTR [RBP+RAX*4]
            mov RAX,RBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4484b8:

            mov ECX,DWORD PTR [RAX]
            add RAX,12
            add RDX,12
            mov DWORD PTR [RDX-12],ECX
            mov ECX,DWORD PTR [RAX-8]
            mov DWORD PTR [RDX-8],ECX
            mov ECX,DWORD PTR [RAX-4]
            mov DWORD PTR [RDX-4],ECX
            cmp RAX,R8
            jne .L_4484b8

            lea RAX,QWORD PTR [R12+RDI*4]
            mov EDI,DWORD PTR [RSP+20]
            mov EDX,DWORD PTR [RAX+276]
            mov DWORD PTR [RBP],EDX
            mov DWORD PTR [RAX+276],EDI
            mov RBP,RSI
.L_4484f0:

            mov RAX,QWORD PTR [RSP+8]
            sub RBP,RAX
            mov DWORD PTR [R9+4],EBP
            mov EBP,EBP
            add RBP,RAX
            jmp .L_4483c8
.L_448506:

            mov RSI,RBP
            mov RDI,R12
            call .L_4481a0

            mov RAX,QWORD PTR [R12+64]
            mov R9,QWORD PTR [R12]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_4484f0
.L_448521:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448530:

            mov R8,QWORD PTR [RDI]
            movzx EAX,WORD PTR [R8]
            cmp AX,256
            je .L_4485d0

            mov R10D,EAX
            push RBX

            mov R11,QWORD PTR [RDI+64]
            sub R10D,ESI
            lea ECX,DWORD PTR [R10-1]
            movzx R9D,BYTE PTR [RDI+RCX*1+428]
            mov ECX,DWORD PTR [R8+8]
            movzx R8D,WORD PTR [R8+2]
            movzx ECX,WORD PTR [R11+RCX*1]
            shl R9,6
            xor R11D,R11D
            sub ECX,EAX
            cmp ECX,R10D
            mov ECX,DWORD PTR [RDI+40]
            seta R11B
            cmp ESI,R10D
            lea ESI,DWORD PTR [RAX+RAX*4]
            lea ESI,DWORD PTR [RAX+RSI*2]
            lea RBX,QWORD PTR [RCX+4]
            cmova RCX,RBX
            cmp R8D,ESI
            lea RAX,QWORD PTR [RCX+2]
            cmovl RCX,RAX
            shl RCX,2
            lea RAX,QWORD PTR [RCX+R11*4]
            lea RAX,QWORD PTR [R9+RAX*1+1200]
            add RAX,RDI
            movzx ESI,WORD PTR [RAX]
            movzx ECX,BYTE PTR [RAX+2]
            mov EDI,ESI
            sar ESI,CL
            mov ECX,ESI
            sub EDI,ESI
            xor ESI,ESI
            test ECX,ECX
            mov WORD PTR [RAX],DI
            sete SIL
            add ECX,ESI
            mov DWORD PTR [RDX],ECX
            pop RBX

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4485d0:

            lea RAX,QWORD PTR [RDI+1196]
            mov DWORD PTR [RDX],1
            ret 
.L_4485de:

            nop
            nop
.L_4485e0:

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_4485e7:

            mov EBX,DWORD PTR [RDI+28]
            mov EBP,4
            mov QWORD PTR [RDI+32],0
            mov DWORD PTR [RDI+24],4294967295
.L_4485fe:

            mov RAX,QWORD PTR [R12+40]
            shl EBX,8
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            movzx EAX,AL
            or EBX,EAX
            sub EBP,1
            mov DWORD PTR [R12+28],EBX
            jne .L_4485fe

            xor EAX,EAX
            cmp EBX,-1
            je .L_448630

            mov DWORD PTR [R12+36],32768
            mov EAX,1
.L_448630:

            pop RBX
.L_448631:

            pop RBP
            pop R12
            ret 
.L_448635:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448640:

            mov EAX,DWORD PTR [RDI+24]
            xor EDX,EDX
            mov ECX,DWORD PTR [RDI+28]
            sub ECX,DWORD PTR [RDI+32]
            div ESI
            xor EDX,EDX
            mov ESI,EAX
            mov DWORD PTR [RDI+24],EAX
            mov EAX,ECX
            div ESI
            ret 
.L_448659:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448660:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_448669:

            mov EAX,DWORD PTR [RDI+32]
            mov EDX,DWORD PTR [RDI+24]
            jmp .L_4486a2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448678:

            mov EBP,DWORD PTR [RBX+28]
            mov RAX,QWORD PTR [RBX+40]
            shl EBP,8
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            movzx EAX,AL
            mov EDX,DWORD PTR [RBX+24]
            or EAX,EBP
            mov DWORD PTR [RBX+28],EAX
            mov EAX,DWORD PTR [RBX+32]
            shl EDX,8
            mov DWORD PTR [RBX+24],EDX
            shl EAX,8
            mov DWORD PTR [RBX+32],EAX
.L_4486a2:

            lea ECX,DWORD PTR [RAX+RDX*1]
            xor ECX,EAX
            cmp ECX,16777215
            jbe .L_448678

            mov ECX,DWORD PTR [RBX+36]
            cmp ECX,EDX
            jbe .L_4486c8

            neg EAX
            sub ECX,1
            and EAX,ECX
            mov DWORD PTR [RBX+24],EAX
            jmp .L_448678
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4486c8:

            add RSP,8
.L_4486cc:

            pop RBX
            pop RBP
            ret 
.L_4486cf:

            nop
.L_4486d0:

            mov EAX,DWORD PTR [RDI+24]
            imul ESI,EAX
            sub DWORD PTR [RDI+28],ESI
            imul EAX,EDX
            mov DWORD PTR [RDI+24],EAX
            jmp .L_448660
.L_4486e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4486f0:

            mov EAX,DWORD PTR [RDI+24]
            imul ESI,EAX
            add DWORD PTR [RDI+32],ESI
            imul EAX,EDX
            mov DWORD PTR [RDI+24],EAX
            jmp .L_448660
.L_448704:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448710:

            mov EDX,DWORD PTR [RDI+24]
            push RBX
            mov EAX,EDX
            shr EAX,14
            imul ESI,EAX
            mov EAX,DWORD PTR [RDI+28]
            cmp EAX,ESI
            jb .L_448740

            sub EAX,ESI
            sub EDX,ESI
            mov EBX,1
            mov DWORD PTR [RDI+28],EAX
            mov DWORD PTR [RDI+24],EDX
            call .L_448660

            mov EAX,EBX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448740:

            xor EBX,EBX
            mov DWORD PTR [RDI+24],ESI
            call .L_448660

            mov EAX,EBX
            pop RBX
            ret 
.L_44874e:

            nop
            nop
.L_448750:

            lea RAX,QWORD PTR [RIP+.L_448640]
            mov QWORD PTR [RDI],RAX
            lea RAX,QWORD PTR [RIP+.L_4486d0]
            mov QWORD PTR [RDI+8],RAX
            lea RAX,QWORD PTR [RIP+.L_448710]
            mov QWORD PTR [RDI+16],RAX
            ret 
.L_448771:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448780:

            lea RAX,QWORD PTR [RIP+.L_448640]
            mov QWORD PTR [RDI],RAX
            lea RAX,QWORD PTR [RIP+.L_4486f0]
            mov QWORD PTR [RDI+8],RAX
            lea RAX,QWORD PTR [RIP+.L_449170]
            mov QWORD PTR [RDI+16],RAX
            ret 
.L_4487a1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4487b0:

            mov QWORD PTR [RDI],0
            mov DWORD PTR [RDI+8],4294967295
            mov BYTE PTR [RDI+12],0
            mov QWORD PTR [RDI+16],1
            ret 
.L_4487cb:

            nop
            nop
            nop
            nop
            nop
.L_4487d0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_4487d9:

            mov RAX,QWORD PTR [RDI]
            cmp EAX,4278190079
            jbe .L_4487ef

            mov RCX,RAX
            shr RCX,32
            test RCX,RCX
            je .L_448850
.L_4487ef:

            movzx ESI,BYTE PTR [RBX+12]
            mov EBP,4294967295
            jmp .L_448805
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448800:

            mov RAX,QWORD PTR [RBX]
            mov ESI,EBP
.L_448805:

            mov RDX,QWORD PTR [RBX+24]
            shr RAX,32
            add ESI,EAX
            movzx ESI,SIL
            mov RDI,RDX
            call QWORD PTR [RDX+8]

            mov RAX,QWORD PTR [RBX+16]
            sub RAX,1
            test RAX,RAX
            mov QWORD PTR [RBX+16],RAX
            jne .L_448800

            mov RCX,QWORD PTR [RBX]
            mov EDX,ECX
            shr ECX,24
            mov BYTE PTR [RBX+12],CL
.L_448835:

            add RAX,1
            shl EDX,8
            mov QWORD PTR [RBX+16],RAX
            mov EAX,EDX
            mov QWORD PTR [RBX],RAX
            add RSP,8
.L_448849:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_448850:

            mov EDX,EAX
            mov RAX,QWORD PTR [RDI+16]
            jmp .L_448835
.L_448858:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448860:

            push RBX
            mov RBX,RDI
            call .L_4487d0

            mov RDI,RBX
            call .L_4487d0

            mov RDI,RBX
            call .L_4487d0

            mov RDI,RBX
            call .L_4487d0

            mov RDI,RBX
            pop RBX
            jmp .L_4487d0
.L_44888a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_448890:

            mov R8,RDI
            mov QWORD PTR [RDI+64],0
            xor ESI,ESI
            xor EAX,EAX
            mov R9D,4
            nop
            nop
            nop
.L_4488a8:

            mov ECX,ESI
            mov EDI,ESI
            mov EDX,EAX
            shr ECX,2
            add ECX,1
            cmp RSI,12
            cmovae ECX,R9D
            add ECX,EAX
.L_4488be:

            add EAX,1
            mov BYTE PTR [R8+RDX*1+146],DIL
            cmp ECX,EAX
            mov EDX,EAX
            jne .L_4488be

            mov BYTE PTR [R8+RSI*1+108],CL
            add RSI,1
            cmp RSI,38
            jne .L_4488a8

            lea RDI,QWORD PTR [R8+703]
            mov EDX,R8D
            mov EAX,512
            mov WORD PTR [R8+684],AX
            movabs RAX,289360691352306692
            mov BYTE PTR [R8+694],4
            and RDI,-8
            mov QWORD PTR [R8+686],RAX
            movabs RAX,434041037028460038
            sub EDX,EDI
            mov QWORD PTR [R8+695],RAX
            mov QWORD PTR [R8+932],RAX
            lea ECX,DWORD PTR [RDX+940]
            lea RSI,QWORD PTR [R8+684]
            mov EDX,256
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            lea RAX,QWORD PTR [R8+431]
            mov WORD PTR [R8+428],DX
            mov BYTE PTR [R8+430],2
            mov ECX,3
            mov EDX,1
            nop
            nop
            nop
.L_448968:

            sub EDX,1
            mov BYTE PTR [RAX],CL
            jne .L_448975

            lea EDX,DWORD PTR [RCX-1]
            add ECX,1
.L_448975:

            add RAX,1
            cmp RSI,RAX
            jne .L_448968

            pxor XMM0,XMM0
            movups XMMWORD PTR [R8+940],XMM0
            movups XMMWORD PTR [R8+956],XMM0
            movups XMMWORD PTR [R8+972],XMM0
            movups XMMWORD PTR [R8+988],XMM0
            movdqa XMM0,XMMWORD PTR [RIP+.L_44a340]
            movups XMMWORD PTR [R8+1004],XMM0
            movups XMMWORD PTR [R8+1020],XMM0
            movups XMMWORD PTR [R8+1036],XMM0
            movups XMMWORD PTR [R8+1052],XMM0
            movups XMMWORD PTR [R8+1068],XMM0
            movups XMMWORD PTR [R8+1084],XMM0
            movups XMMWORD PTR [R8+1100],XMM0
            movups XMMWORD PTR [R8+1116],XMM0
            movups XMMWORD PTR [R8+1132],XMM0
            movups XMMWORD PTR [R8+1148],XMM0
            movups XMMWORD PTR [R8+1164],XMM0
            movups XMMWORD PTR [R8+1180],XMM0
            ret 
.L_448a0b:

            nop
            nop
            nop
            nop
            nop
.L_448a10:

            mov R8,RDI
            push RBX

            lea RDI,QWORD PTR [RDI+284]
            mov QWORD PTR [RDI-8],0
            mov QWORD PTR [RDI+136],0
            mov EAX,R8D
            and RDI,-8
            mov R9D,257
            sub EAX,EDI
            lea ECX,DWORD PTR [RAX+428]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [R8+56],0
            mov DWORD PTR [R8+32],0
            mov ECX,DWORD PTR [R8+104]
            mov EDX,DWORD PTR [R8+52]
            mov RSI,QWORD PTR [R8+64]
            mov EDI,DWORD PTR [R8+36]
            add RCX,RSI
            mov RAX,RDX
            mov DWORD PTR [R8+24],EDI
            mov QWORD PTR [R8+88],RCX
            add RCX,RDX
            mov EDX,2863311531
            mul EDX
            mov RBX,RCX
            mov EAX,EDX
            mov EDX,EDI
            shr EAX,6
            not EDX
            imul EAX,EAX,84
            sub RBX,RAX
            cmp EDI,12
            mov EDI,4294967283
            cmovae EDX,EDI
            mov EDI,256
            mov QWORD PTR [R8+96],RBX
            mov DWORD PTR [R8+48],EDX
            mov DWORD PTR [R8+44],EDX
            lea RDX,QWORD PTR [RCX-12]
            mov RAX,RBX
            mov QWORD PTR [R8+80],RDX
            mov QWORD PTR [R8+8],RDX
            mov QWORD PTR [R8],RDX
            lea RDX,QWORD PTR [RBX+1536]
            mov DWORD PTR [RCX-4],0
            mov WORD PTR [RCX-12],DI
            mov WORD PTR [RCX-10],R9W
            mov QWORD PTR [R8+72],RDX
            mov RDX,RBX
            mov QWORD PTR [R8+16],RBX
            sub RDX,RSI
            mov DWORD PTR [RCX-8],EDX
            xor EDX,EDX
            nop
            nop
            nop
.L_448af0:

            mov BYTE PTR [RAX],DL
            xor ECX,ECX
            xor ESI,ESI
            add EDX,1
            mov BYTE PTR [RAX+1],1
            mov WORD PTR [RAX+2],CX
            mov WORD PTR [RAX+4],SI
            add RAX,6
            cmp EDX,256
            jne .L_448af0

            lea RBX,QWORD PTR [R8+2800]
            mov R9D,2
            mov R11D,16384
            nop
            nop
            nop
            nop
.L_448b28:

            lea RDI,QWORD PTR [RIP+.L_44a330]
            lea R10,QWORD PTR [RBX+16]
            mov RSI,RBX
            mov EAX,15581
            nop
            nop
            nop
            nop
            nop
.L_448b40:

            xor EDX,EDX
            mov ECX,R11D
            div R9D
            lea RDX,QWORD PTR [RSI+128]
            sub ECX,EAX
            mov RAX,RSI
            nop
            nop
            nop
            nop
.L_448b58:

            mov WORD PTR [RAX],CX
            add RAX,16
            cmp RDX,RAX
            jne .L_448b58

            add RSI,2
            add RDI,2
            cmp R10,RSI
            je .L_448b80

            movzx EAX,WORD PTR [RDI]
            jmp .L_448b40
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448b80:

            add R9D,1
            sub RBX,-128
            cmp R9D,130
            jne .L_448b28

            lea RAX,QWORD PTR [R8+1200]
            mov EDX,80
.L_448b9d:

            lea RCX,QWORD PTR [RAX+64]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448ba8:

            mov BYTE PTR [RAX+2],3
            mov WORD PTR [RAX],DX
            add RAX,4
            mov BYTE PTR [RAX-1],4
            cmp RAX,RCX
            jne .L_448ba8

            add EDX,40
            cmp DX,1080
            jne .L_448b9d

            pop RBX

            ret 
.L_448bc8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448bd0:

            push RBX
            mov DWORD PTR [RDI+36],ESI
            mov RBX,RDI
            call .L_448a10

            mov DWORD PTR [RBX+1196],1074200576
            pop RBX
            ret 
.L_448be8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448bf0:

            push R14
            push RBP
            push RBX
            sub RSP,8
.L_448bf8:

            mov EAX,DWORD PTR [RDI+56]
            test EAX,EAX
            je .L_448c58
.L_448bff:

            mov EDX,ESI
            jmp .L_448c1c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448c08:

            mov R8D,EDX
            add R8,68
            mov EAX,DWORD PTR [RDI+R8*4+4]
            test EAX,EAX
            jne .L_448e78
.L_448c1c:

            add EDX,1
            cmp EDX,38
            jne .L_448c08

            mov ESI,ESI
            movzx EAX,BYTE PTR [RDI+RSI*1+108]
            sub DWORD PTR [RDI+56],1
            lea EDX,DWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [RDI+96]
            shl EDX,2
            mov RCX,RAX
            sub RCX,QWORD PTR [RDI+88]
            cmp EDX,ECX
            jae .L_448e9e

            sub RAX,RDX
            mov QWORD PTR [RDI+96],RAX
.L_448c4f:

            add RSP,8
.L_448c53:

            pop RBX
            pop RBP
            pop R14
            ret 
.L_448c58:

            mov ECX,DWORD PTR [RDI+52]
            add ECX,DWORD PTR [RDI+104]
            xor EBP,EBP
            mov R10,QWORD PTR [RDI+64]
            mov DWORD PTR [RDI+56],255
            mov R11D,ECX
            mov EDX,ECX
            add R11,R10
            nop
            nop
            nop
            nop
            nop
.L_448c78:

            mov R8D,DWORD PTR [RDI+RBP*4+276]
            movzx EBX,BYTE PTR [RDI+RBP*1+108]
            mov DWORD PTR [RDI+RBP*4+276],0
            test R8D,R8D
            jne .L_448ca3

            jmp .L_448e60
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_448ca0:

            mov R8D,R9D
.L_448ca3:

            mov EAX,R8D
            xor R14D,R14D
            add RAX,R10
            mov DWORD PTR [RAX+4],EDX
            mov DWORD PTR [R10+RDX*1+8],R8D
            mov EDX,R8D
            mov R9D,DWORD PTR [RAX]
            mov WORD PTR [RAX],R14W
            mov WORD PTR [RAX+2],BX
            test R9D,R9D
            jne .L_448ca0

            add RBP,1
            cmp RBP,38
            jne .L_448c78
.L_448cd1:

            mov R9D,1
            mov DWORD PTR [R11+4],EDX
            mov WORD PTR [R11],R9W
            mov DWORD PTR [RAX+8],ECX
            mov RAX,QWORD PTR [RDI+72]
            cmp RAX,QWORD PTR [RDI+80]
            je .L_448cf6

            mov R8D,1
            mov WORD PTR [RAX],R8W
.L_448cf6:

            cmp ECX,EDX
            je .L_448e30

            nop
            nop
.L_448d00:

            lea RBX,QWORD PTR [R10+RDX*1]
            movzx R8D,WORD PTR [RBX+2]
            mov RAX,R8
            jmp .L_448d35
          .byte 0x66
          .byte 0x90
.L_448d10:

            cmp R8D,65535
            ja .L_448d4e

            mov EBP,DWORD PTR [RAX+8]
            mov R14D,DWORD PTR [RAX+4]
            mov DWORD PTR [R10+RBP*1+4],R14D
            mov EAX,DWORD PTR [RAX+4]
            mov DWORD PTR [R10+RAX*1+8],EBP
            mov WORD PTR [RBX+2],R8W
            mov EAX,R8D
.L_448d35:

            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RDX+RAX*4]
            add RAX,R10
            movzx R9D,WORD PTR [RAX+2]
            add R8D,R9D
            cmp WORD PTR [RAX],0
            je .L_448d10
.L_448d4e:

            mov EDX,DWORD PTR [RBX+4]
            cmp ECX,EDX
            jne .L_448d00

            mov EBX,DWORD PTR [R11+4]
            cmp EDX,EBX
            je .L_448e30

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448d68:

            mov EAX,EBX
            add RAX,R10
            movzx EBP,WORD PTR [RAX+2]
            mov EBX,DWORD PTR [RAX+4]
            cmp EBP,128
            jbe .L_448dc9

            lea R11D,DWORD PTR [RBP-129]
            mov R8D,DWORD PTR [RDI+424]
            shr R11D,7
            mov ECX,R11D
            lea R9,QWORD PTR [RCX+RCX*2+3]
            shl R9,9
            add R9,RAX
            nop
            nop
            nop
.L_448da0:

            mov DWORD PTR [RAX],R8D
            mov RCX,RAX
            add RAX,1536
            sub RCX,R10
            cmp RAX,R9
            mov R8D,ECX
            mov DWORD PTR [RDI+424],ECX
            jne .L_448da0

            neg R11D
            shl R11D,7
            lea EBP,DWORD PTR [RBP+R11*1-128]
.L_448dc9:

            lea ECX,DWORD PTR [RBP-1]
            mov R8,RCX
            movzx ECX,BYTE PTR [RDI+RCX*1+146]
            movzx R11D,BYTE PTR [RDI+RCX*1+108]
            cmp R11D,EBP
            je .L_448e11

            lea ECX,DWORD PTR [RCX-1]
            movzx R9D,BYTE PTR [RDI+RCX*1+108]
            mov R11,R9
            lea R9,QWORD PTR [R9+R9*2]
            sub R8D,R11D
            lea R8,QWORD PTR [RDI+R8*4]
            lea R9,QWORD PTR [RAX+R9*4]
            mov R11D,DWORD PTR [R8+276]
            mov DWORD PTR [R9],R11D
            sub R9,R10
            mov DWORD PTR [R8+276],R9D
.L_448e11:

            lea RCX,QWORD PTR [RDI+RCX*4]
            mov R8D,DWORD PTR [RCX+276]
            mov DWORD PTR [RAX],R8D
            sub RAX,R10
            cmp EDX,EBX
            mov DWORD PTR [RCX+276],EAX
            jne .L_448d68
.L_448e30:

            mov EAX,ESI
            lea RDX,QWORD PTR [RDI+RAX*4]
            mov EAX,DWORD PTR [RDX+276]
            test EAX,EAX
            je .L_448bff

            add RAX,R10
            mov ECX,DWORD PTR [RAX]
            mov DWORD PTR [RDX+276],ECX
            add RSP,8
.L_448e53:

            pop RBX
            pop RBP
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448e60:

            mov EAX,EDX
            add RBP,1
            add RAX,R10
            cmp RBP,38
            jne .L_448c78

            jmp .L_448cd1
.L_448e78:

            add RAX,QWORD PTR [RDI+64]
            mov ECX,ESI
            mov ESI,DWORD PTR [RAX]
            mov QWORD PTR [RSP],RAX
            mov DWORD PTR [RDI+R8*4+4],ESI
            mov RSI,RAX
            call .L_4481a0

            mov RAX,QWORD PTR [RSP]
            add RSP,8
            pop RBX
            pop RBP
            pop R14
            ret 
.L_448e9e:

            xor EAX,EAX
            jmp .L_448c4f
.L_448ea5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448eb0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,552
.L_448ec4:

            mov R10,QWORD PTR [RDI+16]
            mov R12,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            xor EDI,EDI
            test ESI,ESI
            mov R13D,DWORD PTR [R10+2]
            jne .L_448ef2

            mov QWORD PTR [RSP+16],R10
            mov EDI,1
.L_448ef2:

            mov EAX,DWORD PTR [R12+8]
            mov R8,QWORD PTR [RBP+64]
            test EAX,EAX
            je .L_4490fb

            nop
            nop
            nop
            nop
            nop
.L_448f08:

            lea R12,QWORD PTR [R8+RAX*1]
            movzx R9D,WORD PTR [R12]
            mov ESI,DWORD PTR [R12+4]
            lea RCX,QWORD PTR [R12+2]
            cmp R9W,1
            je .L_448f47

            mov EDX,ESI
            movzx EAX,BYTE PTR [R10]
            add RDX,R8
            cmp AL,BYTE PTR [RDX]
            jne .L_448f3b

            jmp .L_4490e0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_448f38:

            mov RDX,RCX
.L_448f3b:

            cmp BYTE PTR [RDX+6],AL
            lea RCX,QWORD PTR [RDX+6]
            jne .L_448f38

            mov ESI,DWORD PTR [RDX+8]
.L_448f47:

            cmp R13D,ESI
            jne .L_448f68

            mov EAX,DWORD PTR [R12+8]
            lea ESI,DWORD PTR [RDI+1]
            mov QWORD PTR [RSP+RDI*8+16],RCX
            test EAX,EAX
            je .L_448f7e

            mov EDI,ESI
            jmp .L_448f08
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_448f68:

            mov EAX,ESI
            add RAX,R8
            test EDI,EDI
            je .L_449088

            movzx R9D,WORD PTR [RAX]
            mov ESI,EDI
            mov R12,RAX
.L_448f7e:

            mov EAX,R13D
            add R13D,1
            mov R15D,R13D
            shr R13D,16
            cmp R9W,1
            movzx R14D,BYTE PTR [R8+RAX*1]
            je .L_4490f0

            mov EAX,DWORD PTR [R12+4]
            add RAX,R8
            cmp BYTE PTR [RAX],R14B
            je .L_448fb9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_448fb0:

            add RAX,6
            cmp R14B,BYTE PTR [RAX]
            jne .L_448fb0
.L_448fb9:

            movzx EDX,BYTE PTR [RAX+1]
            movzx EAX,WORD PTR [R12+2]
            sub EDX,1
            sub EAX,R9D
            lea ECX,DWORD PTR [RDX+RDX*1]
            sub EAX,EDX
            cmp ECX,EAX
            jbe .L_449070

            lea EDI,DWORD PTR [RAX+RAX*1]
            xor EDX,EDX
            add EAX,EDI
            lea EAX,DWORD PTR [RCX+RAX*1-1]
            div EDI
            lea ECX,DWORD PTR [RAX+1]
.L_448fe6:

            test ESI,ESI
            je .L_449080

            lea EAX,DWORD PTR [RSI-1]
            lea R9,QWORD PTR [RSP+8]
            lea RBX,QWORD PTR [RSP+RAX*8+16]
            jmp .L_449048
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449000:

            sub RAX,12
            mov QWORD PTR [RBP+80],RAX
.L_449008:

            mov RSI,QWORD PTR [RBX]
            mov EDX,1
            sub R12,R8
            mov WORD PTR [RAX],DX
            mov RDX,RAX
            sub RBX,8
            sub RDX,R8
            mov DWORD PTR [RAX+8],R12D
            mov BYTE PTR [RAX+2],R14B
            mov BYTE PTR [RAX+3],CL
            mov WORD PTR [RAX+4],R15W
            mov R12,RAX
            mov WORD PTR [RAX+6],R13W
            mov WORD PTR [RSI+2],DX
            shr EDX,16
            cmp RBX,R9
            mov WORD PTR [RSI+4],DX
            je .L_449088
.L_449048:

            mov RAX,QWORD PTR [RBP+80]
            cmp RAX,QWORD PTR [RBP+72]
            jne .L_449000

            mov EAX,DWORD PTR [RBP+276]
            test EAX,EAX
            je .L_4490b0

            add RAX,R8
            mov EDX,DWORD PTR [RAX]
            mov DWORD PTR [RBP+276],EDX
            jmp .L_449008
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449070:

            lea EDX,DWORD PTR [RDX+RDX*4]
            cmp EDX,EAX
            seta CL
            add ECX,1
            jmp .L_448fe6
.L_449080:

            mov RAX,R12
            nop
            nop
            nop
            nop
            nop
.L_449088:

            mov RBX,QWORD PTR [RSP+536]
            xor RBX,QWORD PTR FS:[40]
            jne .L_449107

            add RSP,552
.L_4490a2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4490b0:

            xor ESI,ESI
            mov RDI,RBP
            mov QWORD PTR [RSP+8],R9
            mov BYTE PTR [RSP+7],CL
            call .L_448bf0

            test RAX,RAX
            je .L_449088

            mov R8,QWORD PTR [RBP+64]
            mov R9,QWORD PTR [RSP+8]
            movzx ECX,BYTE PTR [RSP+7]
            jmp .L_449008
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4490e0:

            mov ESI,DWORD PTR [RDX+2]
            mov RCX,RDX
            jmp .L_448f47
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4490f0:

            movzx ECX,BYTE PTR [R12+3]
            jmp .L_448fe6
.L_4490fb:

            movzx R9D,WORD PTR [R12]
            mov ESI,EDI
            jmp .L_448f7e
.L_449107:

            call __stack_chk_fail@PLT
.L_44910c:

            nop
            nop
            nop
            nop
.L_449110:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
.L_449117:

            mov RAX,QWORD PTR [RDI+40]
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            xor EDX,EDX
            test AL,AL
            jne .L_449162

            mov EBX,DWORD PTR [RBP+28]
            mov QWORD PTR [RBP+32],0
            mov R12D,4
            mov DWORD PTR [RBP+24],4294967295
.L_44913f:

            mov RAX,QWORD PTR [RBP+40]
            shl EBX,8
            mov RDI,RAX
            call QWORD PTR [RAX+8]

            movzx EAX,AL
            or EBX,EAX
            sub R12D,1
            mov DWORD PTR [RBP+28],EBX
            jne .L_44913f

            xor EDX,EDX
            cmp EBX,-1
            setne DL
.L_449162:

            pop RBX
.L_449163:

            mov EAX,EDX
            pop RBP
            pop R12
            ret 
.L_449169:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449170:

            push RBP
            push RBX
            mov EBP,ESI
            mov RBX,RDI
            mov ESI,16384
            sub RSP,8
            call QWORD PTR [RDI]

            cmp EAX,EBP
            jb .L_4491a8

            mov EDX,16384
            mov ESI,EBP
            mov RDI,RBX
            sub EDX,EBP
            call QWORD PTR [RBX+8]

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4491a8:

            mov EDX,EBP
            mov RDI,RBX
            xor ESI,ESI
            call QWORD PTR [RBX+8]

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_4491bb:

            nop
            nop
            nop
            nop
            nop
.L_4491c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,40
.L_4491d1:

            mov RAX,QWORD PTR [RDI+16]
            cmp BYTE PTR [RAX+1],30
            mov ESI,DWORD PTR [RAX+2]
            mov DWORD PTR [RSP+4],ESI
            ja .L_4491f0

            mov RDX,QWORD PTR [RDI]
            mov ECX,DWORD PTR [RDX+8]
            test ECX,ECX
            jne .L_449430
.L_4491f0:

            mov EDX,DWORD PTR [RBP+24]
            test EDX,EDX
            je .L_4495e0

            mov RDX,QWORD PTR [RBP+88]
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [RBP+88],RCX
            movzx EAX,BYTE PTR [RAX]
            mov BYTE PTR [RDX],AL
            mov RAX,QWORD PTR [RBP+88]
            cmp RAX,QWORD PTR [RBP+96]
            jae .L_4494c0

            mov RSI,QWORD PTR [RBP+64]
            mov EDI,DWORD PTR [RSP+4]
            sub RAX,RSI
            test EDI,EDI
            mov R8D,EAX
            je .L_449690

            cmp EDI,EAX
            jbe .L_4496f0
.L_449238:

            mov EAX,DWORD PTR [RBP+24]
            mov RBX,QWORD PTR [RBP+8]
            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBP+16]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [RBP+24],EAX
            je .L_4496b8
.L_449255:

            movzx R14D,WORD PTR [RDX]
            movzx EAX,WORD PTR [RDX+2]
            movzx ECX,BYTE PTR [RCX+1]
            sub EAX,R14D
            sub EAX,ECX
            cmp RDX,RBX
            lea R10D,DWORD PTR [RAX+1]
            je .L_449762

            mov EAX,R8D
            shr EAX,16
            mov R9D,EAX
            nop
            nop
            nop
            nop
.L_449280:

            movzx R13D,WORD PTR [RBX]
            cmp R13D,1
            mov R12D,R13D
            je .L_449538

            test R13B,1
            jne .L_4494e0

            mov EAX,R13D
            shr EAX,1
            lea EDX,DWORD PTR [RAX-1]
            movzx R15D,BYTE PTR [RBP+RDX*1+146]
            cmp R15B,BYTE PTR [RBP+RAX*1+146]
            je .L_4494e0

            movzx ESI,R15B
            lea EDI,DWORD PTR [RSI+1]
            lea RCX,QWORD PTR [RBP+RDI*4]
            mov RSI,RDI
            mov EAX,DWORD PTR [RCX+276]
            test EAX,EAX
            je .L_449620

            mov RSI,QWORD PTR [RBP+64]
            add RAX,RSI
            mov EDI,DWORD PTR [RAX]
            mov DWORD PTR [RCX+276],EDI
.L_4492e6:

            mov ECX,DWORD PTR [RBX+4]
            lea RDX,QWORD PTR [RDX+RDX*2+3]
            mov QWORD PTR [RSP+16],RAX
            lea R11,QWORD PTR [RAX+RDX*4]
            mov RDX,RAX
            mov RDI,RCX
            add RCX,RSI
            mov QWORD PTR [RSP+8],RCX
            nop
            nop
            nop
.L_449308:

            mov EAX,DWORD PTR [RCX]
            add RDX,12
            add RCX,12
            mov DWORD PTR [RDX-12],EAX
            mov EAX,DWORD PTR [RCX-8]
            mov DWORD PTR [RDX-8],EAX
            mov EAX,DWORD PTR [RCX-4]
            mov DWORD PTR [RDX-4],EAX
            cmp RDX,R11
            jne .L_449308

            lea RDX,QWORD PTR [RBP+R15*4]
            mov RAX,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RDX+276]
            sub RAX,RSI
            mov DWORD PTR [R11],ECX
            mov DWORD PTR [RDX+276],EDI
            mov EDI,EAX
            mov DWORD PTR [RBX+4],EAX
.L_44934c:

            movzx R11D,WORD PTR [RBX+2]
            lea EDX,DWORD PTR [R13*4]
            lea ECX,DWORD PTR [R13*8]
            cmp EDX,R14D
            setbe DL
            cmp R11D,ECX
            mov EAX,R11D
            setbe CL
            add R13D,R13D
            and EDX,ECX
            cmp R13D,R14D
            movzx EDX,DL
            adc AX,0
            lea EAX,DWORD PTR [RAX+RDX*2]
            mov WORD PTR [RBX+2],AX
.L_449386:

            mov R11,QWORD PTR [RBP+16]
            movzx EDX,AX
            lea R13D,DWORD PTR [RDX+6]
            add EDX,R10D
            movzx ECX,BYTE PTR [R11+1]
            add ECX,ECX
            imul ECX,R13D
            lea R13D,DWORD PTR [RDX+RDX*2]
            lea R15D,DWORD PTR [R13+R13*1]
            cmp R15D,ECX
            jbe .L_4494f0

            xor R13D,R13D
            cmp ECX,EDX
            seta R13B
            shl EDX,2
            cmp EDX,ECX
            setbe DL
            add EAX,3
            movzx EDX,DL
            mov WORD PTR [RBX+2],AX
            lea EDX,DWORD PTR [R13+RDX*1+1]
.L_4493d1:

            movzx EAX,R12W
            add R12D,1
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RDI+RAX*2]
            add RAX,RSI
            mov WORD PTR [RAX+2],R8W
            mov WORD PTR [RAX+4],R9W
            movzx ECX,BYTE PTR [R11]
            mov BYTE PTR [RAX+1],DL
            mov BYTE PTR [RAX],CL
            mov WORD PTR [RBX],R12W
            mov EBX,DWORD PTR [RBX+8]
            add RBX,RSI
            cmp QWORD PTR [RBP],RBX
            jne .L_449280
.L_44940b:

            mov EAX,DWORD PTR [RSP+4]
            add RSI,RAX
            mov QWORD PTR [RBP],RSI
            mov QWORD PTR [RBP+8],RSI
            add RSP,40
.L_44941e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449430:

            mov RDX,QWORD PTR [RDI+64]
            lea RSI,QWORD PTR [RDX+RCX*1]
            cmp WORD PTR [RSI],1
            je .L_4496d0

            mov ECX,DWORD PTR [RSI+4]
            movzx EDI,BYTE PTR [RAX]
            add RDX,RCX
            cmp BYTE PTR [RDX],DIL
            jne .L_44945b

            jmp .L_449755
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449458:

            mov RDX,RCX
.L_44945b:

            cmp DIL,BYTE PTR [RDX+6]
            lea RCX,QWORD PTR [RDX+6]
            jne .L_449458

            movzx R8D,BYTE PTR [RCX+1]
            cmp R8B,BYTE PTR [RDX+1]
            jb .L_44949e

            mov R11D,DWORD PTR [RDX]
            movzx R10D,WORD PTR [RCX+2]
            movzx R9D,WORD PTR [RCX+4]
            mov DWORD PTR [RCX],R11D
            movzx R11D,WORD PTR [RDX+4]
            mov WORD PTR [RCX+4],R11W
            mov BYTE PTR [RDX],DIL
            mov RCX,RDX
            mov BYTE PTR [RDX+1],R8B
            mov WORD PTR [RDX+2],R10W
            mov WORD PTR [RDX+4],R9W
.L_44949e:

            cmp R8B,114
            ja .L_4491f0

            add R8D,2
            mov BYTE PTR [RCX+1],R8B
            add WORD PTR [RSI+2],2
            jmp .L_4491f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4494c0:

            add RSP,40
.L_4494c4:

            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_448a10
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4494e0:

            mov EDI,DWORD PTR [RBX+4]
            mov RSI,QWORD PTR [RBP+64]
            jmp .L_44934c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4494f0:

            lea R15D,DWORD PTR [RDX+RDX*8]
            cmp R15D,ECX
            setbe R15B
            shl R13D,2
            cmp R13D,ECX
            movzx R15D,R15B
            setbe R13B
            movzx R13D,R13B
            lea R15D,DWORD PTR [R15+R13*1+4]
            mov R13D,EDX
            shl R13D,4
            sub R13D,EDX
            xor EDX,EDX
            cmp R13D,ECX
            setbe DL
            add EDX,R15D
            add EAX,EDX
            mov WORD PTR [RBX+2],AX
            jmp .L_4493d1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449538:

            mov EAX,DWORD PTR [RBP+276]
            test EAX,EAX
            je .L_4495a8

            mov RSI,QWORD PTR [RBP+64]
            add RAX,RSI
            mov EDX,DWORD PTR [RAX]
            mov DWORD PTR [RBP+276],EDX
.L_449551:

            mov EDX,DWORD PTR [RBX+2]
            mov DWORD PTR [RAX],EDX
            movzx EDX,WORD PTR [RBX+6]
            mov WORD PTR [RAX+4],DX
            mov RDX,RAX
            sub RDX,RSI
            mov EDI,EDX
            mov DWORD PTR [RBX+4],EDX
            movzx EDX,BYTE PTR [RAX+1]
            cmp DL,29
            ja .L_449598

            add EDX,EDX
            mov BYTE PTR [RAX+1],DL
            movzx EDX,DL
.L_44957a:

            xor EAX,EAX
            cmp R14D,3
            seta AL
            add AX,WORD PTR [RBP+28]
            add EAX,EDX
            mov WORD PTR [RBX+2],AX
            jmp .L_449386
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_449598:

            mov BYTE PTR [RAX+1],120
            mov EDX,120
            jmp .L_44957a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4495a8:

            movzx EAX,BYTE PTR [RBP+108]
            mov RCX,QWORD PTR [RBP+80]
            lea EDX,DWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [RBP+72]
            shl EDX,2
            sub RCX,RAX
            cmp EDX,ECX
            ja .L_449660

            add RDX,RAX
            mov QWORD PTR [RBP+72],RDX
.L_4495cc:

            test RAX,RAX
            je .L_4494c0

            mov RSI,QWORD PTR [RBP+64]
            jmp .L_449551
          .byte 0x66
          .byte 0x90
.L_4495e0:

            mov ESI,1
            mov RDI,RBP
            call .L_448eb0

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            mov QWORD PTR [RBP],RAX
            je .L_4494c0

            sub RAX,QWORD PTR [RBP+64]
            mov RDX,QWORD PTR [RBP+16]
            mov WORD PTR [RDX+2],AX
            shr EAX,16
            mov WORD PTR [RDX+4],AX
            add RSP,40
.L_449615:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_449620:

            movzx EAX,BYTE PTR [RBP+RDI*1+108]
            mov RDI,QWORD PTR [RBP+80]
            lea ECX,DWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [RBP+72]
            shl ECX,2
            sub RDI,RAX
            cmp ECX,EDI
            ja .L_449720

            add RCX,RAX
            mov QWORD PTR [RBP+72],RCX
.L_449645:

            test RAX,RAX
            je .L_4494c0

            mov RSI,QWORD PTR [RBP+64]
            jmp .L_4492e6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449660:

            xor ESI,ESI
            mov RDI,RBP
            mov DWORD PTR [RSP+24],R9D
            mov DWORD PTR [RSP+16],R10D
            mov DWORD PTR [RSP+8],R8D
            call .L_448bf0

            mov R9D,DWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+16]
            mov R8D,DWORD PTR [RSP+8]
            jmp .L_4495cc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449690:

            mov RCX,QWORD PTR [RBP+16]
            mov RDX,QWORD PTR [RBP]
            mov RBX,QWORD PTR [RBP+8]
            mov WORD PTR [RCX+2],AX
            shr EAX,16
            mov WORD PTR [RCX+4],AX
            mov EAX,EDX
            sub EAX,ESI
            mov DWORD PTR [RSP+4],EAX
            jmp .L_449255
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4496b8:

            xor EAX,EAX
            cmp RBX,RDX
            mov R8D,DWORD PTR [RSP+4]
            setne AL
            sub QWORD PTR [RBP+88],RAX
            jmp .L_449255
          .byte 0x66
          .byte 0x90
.L_4496d0:

            movzx EDX,BYTE PTR [RSI+3]
            cmp DL,31
            ja .L_4491f0

            add EDX,1
            mov BYTE PTR [RSI+3],DL
            jmp .L_4491f0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4496f0:

            xor ESI,ESI
            mov RDI,RBP
            mov DWORD PTR [RSP+8],EAX
            call .L_448eb0

            test RAX,RAX
            je .L_4494c0

            sub EAX,DWORD PTR [RBP+64]
            mov R8D,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+4],EAX
            jmp .L_449238
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449720:

            mov RDI,RBP
            mov DWORD PTR [RSP+28],R9D
            mov DWORD PTR [RSP+24],R10D
            mov DWORD PTR [RSP+16],R8D
            mov QWORD PTR [RSP+8],RDX
            call .L_448bf0

            mov R9D,DWORD PTR [RSP+28]
            mov R10D,DWORD PTR [RSP+24]
            mov R8D,DWORD PTR [RSP+16]
            mov RDX,QWORD PTR [RSP+8]
            jmp .L_449645
.L_449755:

            movzx R8D,BYTE PTR [RDX+1]
            mov RCX,RDX
            jmp .L_44949e
.L_449762:

            mov RSI,QWORD PTR [RBP+64]
            jmp .L_44940b
.L_44976b:

            nop
            nop
            nop
            nop
            nop
.L_449770:

            mov EDX,DWORD PTR [RDI+24]
            mov RAX,QWORD PTR [RDI+16]
            test EDX,EDX
            jne .L_449788

            mov EAX,DWORD PTR [RAX+2]
            add RAX,QWORD PTR [RDI+64]
            cmp QWORD PTR [RDI+88],RAX
            jb .L_449790
.L_449788:

            jmp .L_4491c0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449790:

            mov QWORD PTR [RDI+8],RAX
            mov QWORD PTR [RDI],RAX
            ret 
.L_449798:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4497a0:

            push RBX
.L_4497a1:

            mov RAX,QWORD PTR [RDI+16]
            mov RBX,RDI
            movzx ESI,BYTE PTR [RAX+1]
            lea EDX,DWORD PTR [RSI+4]
            mov BYTE PTR [RAX+1],DL
            mov RCX,QWORD PTR [RDI]
            add WORD PTR [RCX+2],4
            cmp DL,BYTE PTR [RAX-5]
            jbe .L_4497f7

            mov R8D,DWORD PTR [RAX-6]
            movzx EDI,BYTE PTR [RAX]
            sub RAX,6
            movzx ESI,WORD PTR [RAX+8]
            movzx ECX,WORD PTR [RAX+10]
            mov BYTE PTR [RAX+1],DL
            mov DWORD PTR [RAX+6],R8D
            movzx R8D,WORD PTR [RAX+4]
            mov BYTE PTR [RAX],DIL
            mov WORD PTR [RAX+2],SI
            mov WORD PTR [RAX+4],CX
            mov WORD PTR [RAX+10],R8W
            cmp DL,124
            mov QWORD PTR [RBX+16],RAX
            ja .L_449800
.L_4497f7:

            mov RDI,RBX
            pop RBX
.L_4497fb:

            jmp .L_449770
.L_449800:

            mov RDI,RBX
            call .L_448220

            mov RDI,RBX
            pop RBX
            jmp .L_449770
.L_449811:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449820:

            push RBX

            mov RSI,QWORD PTR [RDI+16]
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            movzx ECX,BYTE PTR [RSI+1]
            movzx R8D,WORD PTR [RDI+2]
            mov EAX,ECX
            add ECX,ECX
            cmp ECX,R8D
            mov EDX,R8D
            setg CL
            add EAX,4
            add EDX,4
            movzx ECX,CL
            add DWORD PTR [RBX+44],ECX
            cmp AL,124
            mov DWORD PTR [RBX+32],ECX
            mov WORD PTR [RDI+2],DX
            mov BYTE PTR [RSI+1],AL
            jbe .L_449863

            mov RDI,RBX
            call .L_448220
.L_449863:

            mov RDI,RBX
            pop RBX

            jmp .L_449770
.L_44986c:

            nop
            nop
            nop
            nop
.L_449870:

            mov RDX,QWORD PTR [RDI+16]
            movzx ECX,BYTE PTR [RDX+1]
            mov EAX,ECX
            not EAX
            shr AL,7
            add EAX,ECX
            mov BYTE PTR [RDX+1],AL
            add DWORD PTR [RDI+44],1
            mov DWORD PTR [RDI+32],1
            jmp .L_449770
.L_449894:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4498a0:

            push RBX
            mov RAX,QWORD PTR [RDI]
            mov RBX,RDI
            mov RDX,QWORD PTR [RDI+16]
            add WORD PTR [RAX+2],4
            movzx EAX,BYTE PTR [RDX+1]
            add EAX,4
            cmp AL,124
            mov BYTE PTR [RDX+1],AL
            jbe .L_4498c3

            call .L_448220
.L_4498c3:

            mov EAX,DWORD PTR [RBX+48]
            mov RDI,RBX
            mov DWORD PTR [RBX+44],EAX
            pop RBX
            jmp .L_4491c0
.L_4498d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4498e0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,2360
.L_4498f7:

            mov RBP,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+2344],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI]
            cmp WORD PTR [RAX],1
            je .L_449980

            mov EDX,DWORD PTR [RAX+4]
            movzx ESI,WORD PTR [RAX+2]
            mov RDI,R13
            add RBP,RDX
            call QWORD PTR [R13]

            movzx ESI,BYTE PTR [RBP+1]
            cmp EAX,ESI
            jae .L_449b80

            mov EDX,ESI
            mov RDI,R13
            xor ESI,ESI
            call QWORD PTR [R13+8]

            mov QWORD PTR [RBX+16],RBP
            movzx EBP,BYTE PTR [RBP]
            mov RDI,RBX
            call .L_449820

            movzx EAX,BPL
.L_449953:

            mov RCX,QWORD PTR [RSP+2344]
            xor RCX,QWORD PTR FS:[40]
            jne .L_449d53

            add RSP,2360
.L_449971:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_449980:

            mov EDX,DWORD PTR [RAX+8]
            movzx ECX,BYTE PTR [RAX+3]
            movzx EDX,WORD PTR [RBP+RDX*1]
            sub ECX,1
            sub EDX,1
            movsxd RDX,EDX
            movzx EDI,BYTE PTR [RDI+RDX*1+684]
            mov RDX,QWORD PTR [RBX+16]
            movzx EDX,BYTE PTR [RDX]
            movzx ESI,BYTE PTR [RBX+RDX*1+940]
            mov EDX,DWORD PTR [RBX+44]
            sar EDX,26
            mov DWORD PTR [RBX+40],ESI
            movzx EAX,BYTE PTR [RAX+2]
            and EDX,32
            add EDX,DWORD PTR [RBX+32]
            movzx EAX,BYTE PTR [RBX+RAX*1+940]
            add EDX,ESI
            lea EAX,DWORD PTR [RDX+RAX*2]
            lea EDX,DWORD PTR [RAX+RDI*1]
            movsxd RAX,ECX
            mov RDI,R13
            shl RAX,6
            add RAX,RDX
            lea RBP,QWORD PTR [RBX+RAX*2]
            movzx ESI,WORD PTR [RBP+2800]
            call QWORD PTR [R13+16]

            test EAX,EAX
            je .L_449be0

            movzx EDX,WORD PTR [RBP+2800]
            lea RCX,QWORD PTR [RSP+288]
            mov EAX,EDX
            add EDX,32
            sar EDX,7
            sub EAX,EDX
            lea RDX,QWORD PTR [RIP+.L_44a320]
            mov WORD PTR [RBP+2800],AX
            shr AX,10
            and EAX,63
            movzx EAX,BYTE PTR [RDX+RAX*1]
            mov RDX,-1
            mov DWORD PTR [RBX+28],EAX
            lea RAX,QWORD PTR [RSP+32]
.L_449a34:

            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            add RAX,64
            mov QWORD PTR [RAX-48],RDX
            mov QWORD PTR [RAX-40],RDX
            mov QWORD PTR [RAX-32],RDX
            mov QWORD PTR [RAX-24],RDX
            mov QWORD PTR [RAX-16],RDX
            mov QWORD PTR [RAX-8],RDX
            cmp RCX,RAX
            jne .L_449a34

            mov RAX,QWORD PTR [RBX]
            movzx EDX,BYTE PTR [RAX+2]
            movzx ESI,WORD PTR [RAX]
            mov DWORD PTR [RBX+32],0
            mov BYTE PTR [RSP+RDX*1+32],0
.L_449a72:

            lea RCX,QWORD PTR [RSP+28]
            lea R14,QWORD PTR [RSP+280]
            mov QWORD PTR [RSP],RCX
            lea RCX,QWORD PTR [RSP+288]
            mov QWORD PTR [RSP+8],RCX
.L_449a90:

            mov EDX,DWORD PTR [RBX+24]
            jmp .L_449aaa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449a98:

            mov RDI,QWORD PTR [RBX+64]
            add RAX,RDI
            movzx ECX,WORD PTR [RAX]
            mov QWORD PTR [RBX],RAX
            cmp CX,SI
            jne .L_449ac8
.L_449aaa:

            mov EAX,DWORD PTR [RAX+8]
            add EDX,1
            test EAX,EAX
            jne .L_449a98

            mov DWORD PTR [RBX+24],EDX
            mov EAX,4294967295
            jmp .L_449953
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449ac8:

            mov EAX,DWORD PTR [RAX+4]
            sub ECX,ESI
            mov DWORD PTR [RBX+24],EDX
            mov EBP,ECX
            xor EDX,EDX
            xor R12D,R12D
            add RAX,RDI
            nop
            nop
            nop
            nop
            nop
            nop
.L_449ae0:

            movzx R9D,BYTE PTR [RAX]
            movzx EDI,BYTE PTR [RAX+1]
            movsx R9D,BYTE PTR [RSP+R9*1+32]
            and EDI,R9D
            add R12D,EDI
            mov EDI,EDX
            sub EDX,R9D
            mov QWORD PTR [RSP+RDI*8+288],RAX
            add RAX,6
            cmp EBP,EDX
            jne .L_449ae0

            mov RDX,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_448530

            mov ESI,DWORD PTR [RSP+28]
            mov R15,RAX
            mov RDI,R13
            add ESI,R12D
            mov DWORD PTR [RSP+28],ESI
            call QWORD PTR [R13]

            cmp R12D,EAX
            ja .L_449cc7

            mov EDX,DWORD PTR [RSP+28]
            cmp EDX,EAX
            jbe .L_449d43

            sub EDX,R12D
            mov ESI,R12D
            mov RDI,R13
            call QWORD PTR [R13+8]

            mov RCX,QWORD PTR [RSP+8]
            mov EAX,DWORD PTR [RSP+28]
            add WORD PTR [R15],AX
            lea EAX,DWORD PTR [RBP-1]
            lea RAX,QWORD PTR [RCX+RAX*8]
.L_449b60:

            mov RDX,QWORD PTR [RAX]
            sub RAX,8
            cmp R14,RAX
            movzx EDX,BYTE PTR [RDX]
            mov BYTE PTR [RSP+RDX*1+32],0
            jne .L_449b60

            mov RAX,QWORD PTR [RBX]
            movzx ESI,WORD PTR [RAX]
            jmp .L_449a90
          .byte 0x90
.L_449b80:

            mov R8,QWORD PTR [RBX]
            mov DWORD PTR [RBX+32],0
            movzx EDX,WORD PTR [R8]
            sub EDX,2
            lea RDX,QWORD PTR [RDX+RDX*2+3]
            lea RDI,QWORD PTR [RBP+RDX*2]
            jmp .L_449ba7
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449ba0:

            cmp RBP,RDI
            mov ESI,ECX
            je .L_449c20
.L_449ba7:

            add RBP,6
            movzx EDX,BYTE PTR [RBP+1]
            lea ECX,DWORD PTR [RDX+RSI*1]
            cmp EAX,ECX
            jae .L_449ba0

            mov RDI,R13
            call QWORD PTR [R13+8]

            mov QWORD PTR [RBX+16],RBP
            movzx EBP,BYTE PTR [RBP]
            mov RDI,RBX
            call .L_4497a0

            movzx EAX,BPL
            jmp .L_449953
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449be0:

            movzx EAX,WORD PTR [RBP+2800]
            mov RDI,RBX
            lea EDX,DWORD PTR [RAX+128]
            add EAX,32
            sar EAX,7
            sub EDX,EAX
            mov RAX,QWORD PTR [RBX]
            mov WORD PTR [RBP+2800],DX
            lea RDX,QWORD PTR [RAX+2]
            mov QWORD PTR [RBX+16],RDX
            movzx EBP,BYTE PTR [RAX+2]
            call .L_449870

            movzx EAX,BPL
            jmp .L_449953
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_449c20:

            movzx EDX,WORD PTR [R8+2]
            cmp EDX,EAX
            jbe .L_449d43

            mov RAX,QWORD PTR [RBX+16]
            sub EDX,ECX
            mov RDI,R13
            movzx EAX,BYTE PTR [RAX]
            movzx EAX,BYTE PTR [RBX+RAX*1+940]
            mov DWORD PTR [RBX+40],EAX
            call QWORD PTR [R13+8]

            lea RAX,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RSP+288]
            mov RDX,-1
.L_449c5c:

            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            add RAX,64
            mov QWORD PTR [RAX-48],RDX
            mov QWORD PTR [RAX-40],RDX
            mov QWORD PTR [RAX-32],RDX
            mov QWORD PTR [RAX-24],RDX
            mov QWORD PTR [RAX-16],RDX
            mov QWORD PTR [RAX-8],RDX
            cmp RCX,RAX
            jne .L_449c5c

            movzx EAX,BYTE PTR [RBP]
            mov BYTE PTR [RSP+RAX*1+32],0
            mov RAX,QWORD PTR [RBX]
            movzx EDX,WORD PTR [RAX]
            mov ESI,EDX
            sub EDX,2
            add RDX,1
            lea RCX,QWORD PTR [RDX*4]
            sub RDX,RCX
            lea RCX,QWORD PTR [RBP+RDX*2]
            nop
            nop
            nop
            nop
.L_449cb0:

            sub RBP,6
            movzx EDX,BYTE PTR [RBP]
            cmp RBP,RCX
            mov BYTE PTR [RSP+RDX*1+32],0
            jne .L_449cb0

            jmp .L_449a72
.L_449cc7:

            mov RBP,QWORD PTR [RSP+288]
            movzx ESI,BYTE PTR [RBP+1]
            cmp ESI,EAX
            ja .L_449d4d

            lea RCX,QWORD PTR [RSP+288]
            jmp .L_449cea
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449ce8:

            mov ESI,EDI
.L_449cea:

            add RCX,8
            mov RBP,QWORD PTR [RCX]
            movzx EDX,BYTE PTR [RBP+1]
            lea EDI,DWORD PTR [RSI+RDX*1]
            cmp EAX,EDI
            jae .L_449ce8
.L_449cfc:

            mov RDI,R13
            call QWORD PTR [R13+8]

            movzx ECX,BYTE PTR [R15+2]
            cmp CL,6
            ja .L_449d2a

            sub BYTE PTR [R15+3],1
            jne .L_449d2a

            lea EAX,DWORD PTR [RCX+1]
            shl WORD PTR [R15],1
            mov BYTE PTR [R15+2],AL
            mov EAX,3
            shl EAX,CL
            mov BYTE PTR [R15+3],AL
.L_449d2a:

            mov QWORD PTR [RBX+16],RBP
            movzx EBP,BYTE PTR [RBP]
            mov RDI,RBX
            call .L_4498a0

            movzx EAX,BPL
            jmp .L_449953
.L_449d43:

            mov EAX,4294967294
            jmp .L_449953
.L_449d4d:

            mov EDX,ESI
            xor ESI,ESI
            jmp .L_449cfc
.L_449d53:

            call __stack_chk_fail@PLT
.L_449d58:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_449d60:

            push R15
            push R14
            mov R14D,EDX
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,344
.L_449d7a:

            mov RBX,QWORD PTR [RDI]
            mov R13,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+328],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RBP+8]
            movzx ESI,WORD PTR [RBX]
            cmp SI,1
            je .L_449eb0

            mov EDX,DWORD PTR [RBX+4]
            movzx EDI,WORD PTR [RBX+2]
            add R13,RDX
            xor EDX,EDX
            div EDI
            movzx EDX,BYTE PTR [R13]
            movzx R8D,BYTE PTR [R13+1]
            cmp EDX,R14D
            je .L_449e70

            movzx EDX,SI
            mov DWORD PTR [R12+32],0
            lea R10D,DWORD PTR [RDX-2]
            add R10,1
            lea RDX,QWORD PTR [R10+R10*2]
            lea RCX,QWORD PTR [R13+RDX*2]
            jmp .L_449df4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_449de8:

            add R8D,EDX
            cmp R13,RCX
            je .L_449f98
.L_449df4:

            add R13,6
            movzx EDX,BYTE PTR [R13]
            cmp EDX,R14D
            mov R9,RDX
            movzx EDX,BYTE PTR [R13+1]
            jne .L_449de8

            imul R8D,EAX
            add QWORD PTR [RBP],R8
            imul EAX,EDX
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_449e38

            nop
.L_449e20:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_4487d0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_449e20
.L_449e38:

            mov QWORD PTR [R12+16],R13
            mov RDI,R12
            call .L_4497a0
.L_449e45:

            mov RAX,QWORD PTR [RSP+328]
            xor RAX,QWORD PTR FS:[40]
            jne .L_44a318

            add RSP,344
.L_449e63:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_449e70:

            imul EAX,R8D
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_449e98

            nop
            nop
.L_449e80:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_4487d0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_449e80
.L_449e98:

            mov QWORD PTR [R12+16],R13
            mov RDI,R12
            call .L_449820

            jmp .L_449e45
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_449eb0:

            movzx EDX,BYTE PTR [RBX+3]
            mov R15,RBX
            lea ECX,DWORD PTR [RDX-1]
            mov EDX,DWORD PTR [RBX+8]
            movzx EDX,WORD PTR [R13+RDX*1]
            sub EDX,1
            movsxd RDX,EDX
            movzx R8D,BYTE PTR [RDI+RDX*1+684]
            mov RDX,QWORD PTR [RDI+16]
            movzx EDX,BYTE PTR [RDX]
            movzx EDI,BYTE PTR [RDI+RDX*1+940]
            mov EDX,DWORD PTR [R12+44]
            sar EDX,26
            mov DWORD PTR [R12+40],EDI
            and EDX,32
            movzx ESI,BYTE PTR [RBX+2]
            add EDX,DWORD PTR [R12+32]
            add EDX,EDI
            movsxd RDI,ESI
            movzx EDI,BYTE PTR [R12+RDI*1+940]
            lea EDX,DWORD PTR [RDX+RDI*2]
            lea EDI,DWORD PTR [RDX+R8*1]
            movsxd RDX,ECX
            shl RDX,6
            add RDX,RDI
            lea R13,QWORD PTR [R12+RDX*2]
            mov EDX,EAX
            shr EDX,14
            movzx EDI,WORD PTR [R13+2800]
            imul EDX,EDI
            cmp ESI,R14D
            mov ECX,EDI
            jne .L_44a1e8

            cmp EDX,16777215
            mov DWORD PTR [RBP+8],EDX
            ja .L_449f6b

            nop
            nop
            nop
            nop
            nop
.L_449f48:

            shl EDX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EDX
            call .L_4487d0

            mov EDX,DWORD PTR [RBP+8]
            cmp EDX,16777215
            jbe .L_449f48

            movzx EDI,WORD PTR [R13+2800]
            mov ECX,EDI
.L_449f6b:

            add EDI,32
            sub CX,-128
            add R15,2
            sar EDI,7
            sub ECX,EDI
            mov RDI,R12
            mov WORD PTR [R13+2800],CX
            mov QWORD PTR [R12+16],R15
            call .L_449870

            jmp .L_449e45
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_449f98:

            mov RDX,QWORD PTR [R12+16]
            lea RCX,QWORD PTR [RSP+64]
            lea R11,QWORD PTR [RCX+256]
            mov QWORD PTR [RSP+16],RCX
            movzx EDX,BYTE PTR [RDX]
            movzx EDX,BYTE PTR [R12+RDX*1+940]
            mov DWORD PTR [R12+40],EDX
            mov RDX,-1
.L_449fc6:

            mov QWORD PTR [RCX],RDX
            mov QWORD PTR [RCX+8],RDX
            add RCX,64
            mov QWORD PTR [RCX-48],RDX
            mov QWORD PTR [RCX-40],RDX
            mov QWORD PTR [RCX-32],RDX
            mov QWORD PTR [RCX-24],RDX
            mov QWORD PTR [RCX-16],RDX
            mov QWORD PTR [RCX-8],RDX
            cmp R11,RCX
            jne .L_449fc6

            lea RDX,QWORD PTR [R10*4]
            mov BYTE PTR [RSP+R9*1+64],0
            sub R10,RDX
            lea RCX,QWORD PTR [R13+R10*2]
            nop
            nop
            nop
            nop
.L_44a008:

            sub R13,6
            movzx EDX,BYTE PTR [R13]
            cmp R13,RCX
            mov BYTE PTR [RSP+RDX*1+64],0
            jne .L_44a008

            sub EDI,R8D
            mov EDX,R8D
            imul EDX,EAX
            add QWORD PTR [RBP],RDX
            imul EAX,EDI
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_44a057

            nop
            nop
            nop
.L_44a038:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_4487d0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_44a038

            mov RBX,QWORD PTR [R12]
            movzx ESI,WORD PTR [RBX]
.L_44a057:

            lea RAX,QWORD PTR [RSP+60]
            mov QWORD PTR [RSP+8],RAX
.L_44a061:

            mov EAX,DWORD PTR [R12+24]
            add EAX,1
            jmp .L_44a083
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a070:

            add RBX,QWORD PTR [R12+64]
            lea EDX,DWORD PTR [RAX+1]
            cmp WORD PTR [RBX],SI
            mov QWORD PTR [R12],RBX
            jne .L_44a098

            mov EAX,EDX
.L_44a083:

            mov EBX,DWORD PTR [RBX+8]
            test EBX,EBX
            jne .L_44a070

            mov DWORD PTR [R12+24],EAX
            jmp .L_449e45
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a098:

            mov RDX,QWORD PTR [RSP+8]
            mov DWORD PTR [R12+24],EAX
            mov RDI,R12
            call .L_448530

            mov RBX,QWORD PTR [R12]
            mov QWORD PTR [RSP+24],RAX
            xor R8D,R8D
            movzx R9D,WORD PTR [RBX]
            mov R13D,DWORD PTR [RBX+4]
            add R13,QWORD PTR [R12+64]
            mov QWORD PTR [RSP+32],RBX
            mov RBX,QWORD PTR [RSP+16]
            lea EAX,DWORD PTR [R9-1]
            mov ESI,R9D
            mov WORD PTR [RSP+46],SI
            mov R9,RAX
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            lea RAX,QWORD PTR [R13+RAX*2]
            mov RSI,RAX
            jmp .L_44a106
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a0f0:

            cmp RSI,R10
            mov BYTE PTR [RCX],0
            mov R13,R10
            mov R8D,R15D
            je .L_44a2b0

            sub R9D,1
.L_44a106:

            movzx ECX,BYTE PTR [R13]
            movzx R11D,BYTE PTR [R13+1]
            lea R10,QWORD PTR [R13+6]
            mov RDX,RCX
            add RCX,RBX
            mov R15D,R11D
            movsx EDI,BYTE PTR [RCX]
            mov EAX,R11D
            and R15D,EDI
            add R15D,R8D
            cmp R14D,EDX
            jne .L_44a0f0

            lea RDX,QWORD PTR [R9+R9*2+3]
            mov ECX,R8D
            mov ESI,EDI
            lea R9,QWORD PTR [R13+RDX*2]
            mov RDX,R13
            jmp .L_44a154
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a148:

            movzx ESI,BYTE PTR [RDX]
            movzx EAX,BYTE PTR [RDX+1]
            movsx ESI,BYTE PTR [RSP+RSI*1+64]
.L_44a154:

            movzx EDI,AL
            add RDX,6
            and EDI,ESI
            add ECX,EDI
            cmp RDX,R9
            jne .L_44a148

            add ECX,DWORD PTR [RSP+60]
            mov EAX,DWORD PTR [RBP+8]
            xor EDX,EDX
            div ECX
            imul R8D,EAX
            add QWORD PTR [RBP],R8
            imul EAX,R11D
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_44a1a0

            nop
            nop
            nop
.L_44a188:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_4487d0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_44a188
.L_44a1a0:

            mov RSI,QWORD PTR [RSP+24]
            movzx ECX,BYTE PTR [RSI+2]
            cmp CL,6
            ja .L_44a1d3

            movzx EAX,BYTE PTR [RSI+3]
            mov BYTE PTR [RSP+8],AL
            sub EAX,1
            test AL,AL
            mov BYTE PTR [RSI+3],AL
            jne .L_44a1d3

            lea EAX,DWORD PTR [RCX+1]
            shl WORD PTR [RSI],1
            mov BYTE PTR [RSI+2],AL
            mov EAX,3
            shl EAX,CL
            mov BYTE PTR [RSI+3],AL
.L_44a1d3:

            mov QWORD PTR [R12+16],R13
            mov RDI,R12
            call .L_4498a0

            jmp .L_449e45
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44a1e8:

            sub EAX,EDX
            mov ESI,EDX
            add QWORD PTR [RBP],RSI
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_44a226

            nop
            nop
            nop
            nop
            nop
            nop
.L_44a200:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_4487d0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_44a200

            movzx EDI,WORD PTR [R13+2800]
            mov R15,QWORD PTR [R12]
            mov ECX,EDI
.L_44a226:

            add EDI,32
            lea RAX,QWORD PTR [RIP+.L_44a320]
            mov RDX,-1
            sar EDI,7
            sub ECX,EDI
            mov WORD PTR [R13+2800],CX
            shr CX,10
            and ECX,63
            movzx EAX,BYTE PTR [RAX+RCX*1]
            mov DWORD PTR [R12+28],EAX
            lea RAX,QWORD PTR [RSP+64]
            lea RCX,QWORD PTR [RAX+256]
            mov QWORD PTR [RSP+16],RAX
.L_44a265:

            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],RDX
            add RAX,64
            mov QWORD PTR [RAX-48],RDX
            mov QWORD PTR [RAX-40],RDX
            mov QWORD PTR [RAX-32],RDX
            mov QWORD PTR [RAX-24],RDX
            mov QWORD PTR [RAX-16],RDX
            mov QWORD PTR [RAX-8],RDX
            cmp RCX,RAX
            jne .L_44a265

            movzx EAX,BYTE PTR [RBX+2]
            mov DWORD PTR [R12+32],0
            mov RBX,R15
            mov BYTE PTR [RSP+RAX*1+64],0
            movzx ESI,WORD PTR [R15]
            jmp .L_44a057
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a2b0:

            mov ECX,DWORD PTR [RSP+60]
            mov EAX,DWORD PTR [RBP+8]
            xor EDX,EDX
            mov RBX,QWORD PTR [RSP+32]
            movzx ESI,WORD PTR [RSP+46]
            lea EDI,DWORD PTR [RCX+R15*1]
            div EDI
            imul R8D,EAX
            add QWORD PTR [RBP],R8
            imul EAX,ECX
            cmp EAX,16777215
            mov DWORD PTR [RBP+8],EAX
            ja .L_44a303

            nop
            nop
.L_44a2e0:

            shl EAX,8
            mov RDI,RBP
            mov DWORD PTR [RBP+8],EAX
            call .L_4487d0

            mov EAX,DWORD PTR [RBP+8]
            cmp EAX,16777215
            jbe .L_44a2e0

            mov RBX,QWORD PTR [R12]
            mov ECX,DWORD PTR [RSP+60]
            movzx ESI,WORD PTR [RBX]
.L_44a303:

            mov RAX,QWORD PTR [RSP+24]
            add R15W,WORD PTR [RAX]
            add R15D,ECX
            mov WORD PTR [RAX],R15W
            jmp .L_44a061
.L_44a318:

            call __stack_chk_fail@PLT
.L_44a31d:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44a320:
          .byte 0x19
          .byte 0xe
          .byte 0x9
          .byte 0x7
          .byte 0x5
          .byte 0x5
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x2
          .byte 0x2
.L_44a330:
          .byte 0xdd
          .byte 0x3c
          .byte 0x3f
          .byte 0x1f
          .byte 0xbf
          .byte 0x59
          .byte 0xf3
          .byte 0x48
          .byte 0xa1
          .byte 0x64
          .byte 0xbc
          .byte 0x5a
          .byte 0x32
          .byte 0x66
          .byte 0x51
          .byte 0x60
.L_44a340:

            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
.L_44a350:

            mov EAX,ESI
            lea RCX,QWORD PTR [RDI+RAX*8]
            mov RDX,QWORD PTR [RCX]
            test RDX,RDX
            je .L_44a3f0

            mov RAX,QWORD PTR [RDI+16]
            mov R8,RAX
            shr RAX,1
            and R8,-4
            and EAX,1
            mov QWORD PTR [R8+RAX*8],RDX
            mov EAX,ESI
            xor EAX,1
            lea RAX,QWORD PTR [RDX+RAX*8]
            mov R9,QWORD PTR [RAX]
            mov QWORD PTR [RCX],R9
            mov QWORD PTR [RAX],RDI
            mov RAX,QWORD PTR [RDX+16]
            and EAX,3
            or RAX,R8
            mov QWORD PTR [RDX+16],RAX
            mov RAX,QWORD PTR [RDI+16]
            and EAX,3
            or RAX,RDX
            mov QWORD PTR [RDI+16],RAX
            mov R8,QWORD PTR [RDX+16]
            xor RAX,R8
            and EAX,3
            xor R8,RAX
            mov QWORD PTR [RDX+16],R8
            xor RAX,QWORD PTR [RDI+16]
            cmp ESI,1
            mov QWORD PTR [RDI+16],RAX
            je .L_44a3f8

            or RAX,2
            mov QWORD PTR [RDI+16],RAX
            mov RAX,QWORD PTR [RCX]
            test RAX,RAX
            je .L_44a428

            mov RDX,QWORD PTR [RAX+16]
            and EDX,3
            or RDI,RDX
            test ESI,ESI
            jne .L_44a430

            and RDI,-3
            mov QWORD PTR [RAX+16],RDI
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a3f0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a3f8:

            and RAX,-3
            mov QWORD PTR [RDI+16],RAX
            mov RAX,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_44a420

            mov RDX,QWORD PTR [RAX+16]
            and EDX,3
            or RDI,RDX
            mov QWORD PTR [RAX+16],RDI
.L_44a417:

            or RDI,2
            mov QWORD PTR [RAX+16],RDI
            ret 
.L_44a420:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a428:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a430:

            mov QWORD PTR [RAX+16],RDI
            jmp .L_44a417
.L_44a436:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a440:

            mov EAX,EDX
            mov R10,RSI
            mov RAX,QWORD PTR [RSI+RAX*8]
            test RAX,RAX
            je .L_44a454

            test BYTE PTR [RAX+16],1
            jne .L_44a4d2
.L_44a454:

            push RBX
            sub RSP,8
.L_44a459:

            mov EBX,EDX
            xor EBX,1
            mov R11D,EBX
            mov RAX,QWORD PTR [R10+R11*8]
            test RAX,RAX
            je .L_44a4cc

            mov RCX,QWORD PTR [R10+16]
            test CL,1
            jne .L_44a548

            mov RCX,QWORD PTR [RAX]
            test RCX,RCX
            je .L_44a485

            test BYTE PTR [RCX+16],1
            jne .L_44a4fc
.L_44a485:

            mov RCX,QWORD PTR [RAX+8]
            test RCX,RCX
            je .L_44a494

            test BYTE PTR [RCX+16],1
            jne .L_44a4fc
.L_44a494:

            mov RCX,QWORD PTR [RAX+16]
            test CL,1
            jne .L_44a4d8

            or RCX,1
            cmp R10,QWORD PTR [RDI]
            mov QWORD PTR [RAX+16],RCX
            je .L_44a4cc

            mov R10,QWORD PTR [R10+16]
            mov RDX,R10
            and R10,-4
            shr RDX,1
            and EDX,1
            mov EAX,EDX
            mov RAX,QWORD PTR [R10+RAX*8]
            test RAX,RAX
            je .L_44a459

            test BYTE PTR [RAX+16],1
            je .L_44a459
.L_44a4cc:

            add RSP,8
.L_44a4d0:

            pop RBX
            ret 
.L_44a4d2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a4d8:

            mov ESI,EBX
            mov RDI,R10
            mov DWORD PTR [RSP+4],EDX
            call .L_44a350

            mov RAX,QWORD PTR [R10+R11*8]
            mov EDX,DWORD PTR [RSP+4]
            test RAX,RAX
            je .L_44a4cc

            mov RCX,QWORD PTR [R10+16]
            test CL,1
            jne .L_44a548
.L_44a4fc:

            mov RCX,QWORD PTR [RAX+R11*8]
            test RCX,RCX
            je .L_44a50f

            mov RSI,QWORD PTR [RCX+16]
            test SIL,1
            jne .L_44a52a
.L_44a50f:

            mov RDI,RAX
            mov ESI,EDX
            call .L_44a350

            mov RAX,QWORD PTR [R10+R11*8]
            mov RCX,QWORD PTR [RAX+R11*8]
            test RCX,RCX
            je .L_44a4cc

            mov RSI,QWORD PTR [RCX+16]
.L_44a52a:

            and RSI,-2
            mov RDI,R10
            mov QWORD PTR [RCX+16],RSI
            add RSP,8
.L_44a539:

            mov ESI,EBX
            pop RBX
            jmp .L_44a350
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a548:

            test BYTE PTR [RAX+16],1
            jne .L_44a4fc

            mov RSI,QWORD PTR [RAX]
            test RSI,RSI
            je .L_44a55c

            test BYTE PTR [RSI+16],1
            jne .L_44a4fc
.L_44a55c:

            mov RSI,QWORD PTR [RAX+8]
            test RSI,RSI
            je .L_44a56b

            test BYTE PTR [RSI+16],1
            jne .L_44a4fc
.L_44a56b:

            and RCX,-2
            mov QWORD PTR [R10+16],RCX
            or QWORD PTR [RAX+16],1
            jmp .L_44a4cc
.L_44a57d:

            nop
            nop
            nop
.L_44a580:

            mov QWORD PTR [RDI+8],RSI
            mov QWORD PTR [RDI],0
            ret 
.L_44a58c:

            nop
            nop
            nop
            nop
.L_44a590:

            push R12
            push RBP
            push RBX
            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            test RBX,RBX
            mov RBP,QWORD PTR [RAX+8]
            je .L_44a5d8

            mov R12,RSI
            jmp .L_44a5bf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a5b0:

            setg AL
            movzx EAX,AL
            mov RBX,QWORD PTR [RBX+RAX*8]
            test RBX,RBX
            je .L_44a5d8
.L_44a5bf:

            mov RSI,R12
            mov RDI,RBX
            call RBP

            cmp EAX,0
            jne .L_44a5b0

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a5d8:

            xor EBX,EBX
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_44a5e2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a5f0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_44a5fa:

            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            test RBX,RBX
            mov R13,QWORD PTR [RAX+8]
            je .L_44a639

            mov R12,RSI
            xor EBP,EBP
            jmp .L_44a62b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a618:

            setg AL
            cmovl RBP,RBX
            movzx EAX,AL
            mov RBX,QWORD PTR [RBX+RAX*8]
            test RBX,RBX
            je .L_44a650
.L_44a62b:

            mov RSI,R12
            mov RDI,RBX
            call R13

            cmp EAX,0
            jne .L_44a618
.L_44a639:

            add RSP,8
.L_44a63d:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a650:

            add RSP,8
            mov RBX,RBP
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_44a661:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a670:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_44a67a:

            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            test RBX,RBX
            mov R13,QWORD PTR [RAX+8]
            je .L_44a6b9

            mov R12,RSI
            xor EBP,EBP
            jmp .L_44a6ab
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a698:

            setg AL
            cmovg RBP,RBX
            movzx EAX,AL
            mov RBX,QWORD PTR [RBX+RAX*8]
            test RBX,RBX
            je .L_44a6d0
.L_44a6ab:

            mov RSI,R12
            mov RDI,RBX
            call R13

            cmp EAX,0
            jne .L_44a698
.L_44a6b9:

            add RSP,8
.L_44a6bd:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a6d0:

            add RSP,8
            mov RBX,RBP
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_44a6e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a6f0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,8
            mov RBX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            test RBX,RBX
            mov R12,QWORD PTR [RAX]
            jne .L_44a72a

            jmp .L_44a798
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a718:

            setg CL
            movzx ECX,CL
            mov RDX,QWORD PTR [RBX+RCX*8]
            test RDX,RDX
            je .L_44a748

            mov RBX,RDX
.L_44a72a:

            mov RSI,RBP
            mov RDI,RBX
            call R12

            cmp EAX,0
            jne .L_44a718

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44a748:

            mov R10,QWORD PTR [RBP+16]
            and R10D,3
            or R10,RBX
            test EAX,EAX
            jle .L_44a7a8

            or R10,2
            cmp R13,RBX
            mov QWORD PTR [RBP+16],R10
            jne .L_44a7b5
.L_44a764:

            lea RAX,QWORD PTR [R13+RCX*8]
            and R10,-2
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+16],R10
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RBP+8],RDX
            mov QWORD PTR [RAX],RBP
            add RSP,8
            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a798:

            mov R10,QWORD PTR [RSI+16]
            mov RBX,RDI
            xor ECX,ECX
            and R10D,3
            or R10,RDI
.L_44a7a8:

            and R10,-3
            cmp R13,RBX
            mov QWORD PTR [RBP+16],R10
            je .L_44a764
.L_44a7b5:

            mov RAX,R10
            or RAX,1
            mov QWORD PTR [RBP+16],RAX
            test BYTE PTR [RBX+16],1
            je .L_44a880

            lea RAX,QWORD PTR [RBX+RCX*8]
            mov QWORD PTR [RBP],0
            and R10,-4
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RBP+8],RDX
            mov QWORD PTR [RAX],RBP
            mov RAX,QWORD PTR [R10+16]
            jmp .L_44a831
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44a7f0:

            mov RAX,QWORD PTR [RDX+16]
            test AL,1
            je .L_44a850

            and RAX,-2
            mov QWORD PTR [RDX+16],RAX
            and QWORD PTR [R10+16],-2
            cmp R11,QWORD PTR [R13]
            je .L_44a870

            mov RAX,QWORD PTR [R11+16]
            mov RDX,RAX
            and RAX,-4
            or RDX,1
            test RAX,RAX
            mov R10,RAX
            mov QWORD PTR [R11+16],RDX
            je .L_44a870

            mov RAX,QWORD PTR [RAX+16]
            mov RBP,R11
            test AL,1
            je .L_44a870
.L_44a831:

            and RAX,-4
            xor ECX,ECX
            mov RBX,QWORD PTR [RAX+8]
            mov R11,RAX
            cmp R10,RBX
            setne CL
            mov RDX,QWORD PTR [RAX+RCX*8]
            mov RSI,RCX
            test RDX,RDX
            jne .L_44a7f0
.L_44a850:

            cmp QWORD PTR [R10+RCX*8],RBP
            je .L_44a8a6
.L_44a856:

            xor ESI,ESI
            cmp R10,RBX
            mov RDI,R11
            sete SIL
            call .L_44a350

            mov RAX,QWORD PTR [R13]
            and QWORD PTR [RAX+16],-2
.L_44a870:

            add RSP,8
.L_44a874:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_44a880:

            lea RAX,QWORD PTR [RBX+RCX*8]
            mov QWORD PTR [RBP],0
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RBP+8],RDX
            mov QWORD PTR [RAX],RBP
            add RSP,8
            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            ret 
.L_44a8a6:

            mov RDI,R10
            call .L_44a350

            jmp .L_44a856
.L_44a8b0:

            test RSI,RSI
            je .L_44a920

            mov R8D,EDX
            mov EDX,EDX
            mov RAX,QWORD PTR [RSI+RDX*8]
            xor R8D,1
            mov ECX,R8D
            test RAX,RAX
            jne .L_44a913

            mov RDI,QWORD PTR [RDI]
            cmp RSI,RDI
            je .L_44a91c

            mov RDX,QWORD PTR [RSI+16]
            mov RCX,RDX
            shr RCX,1
            and ECX,1
            cmp R8D,ECX
            jne .L_44a902

            jmp .L_44a940
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44a8f0:

            mov RDX,QWORD PTR [RDX+16]
            mov RCX,RDX
            shr RCX,1
            and ECX,1
            cmp ECX,R8D
            je .L_44a940
.L_44a902:

            and RDX,-4
            cmp RDX,RDI
            jne .L_44a8f0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44a910:

            mov RAX,RDX
.L_44a913:

            mov RDX,QWORD PTR [RAX+RCX*8]
            test RDX,RDX
            jne .L_44a910
.L_44a91c:

            ret 
          .byte 0x66
          .byte 0x90
.L_44a920:

            mov RAX,QWORD PTR [RDI]
            mov EDX,EDX
            test RAX,RAX
            jne .L_44a933

            jmp .L_44a91c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44a930:

            mov RAX,RCX
.L_44a933:

            mov RCX,QWORD PTR [RAX+RDX*8]
            test RCX,RCX
            jne .L_44a930

            ret 
          .byte 0x66
          .byte 0x90
.L_44a940:

            mov RAX,RDX
            and RAX,-4
            ret 
.L_44a948:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44a950:

            mov RCX,QWORD PTR [RSI]
            mov RAX,QWORD PTR [RSI+16]
            mov RDX,QWORD PTR [RSI+8]
            test RCX,RCX
            je .L_44aa48

            test RDX,RDX
            je .L_44aab0

            shr RAX,1
            push RBX
.L_44a971:

            mov R9,RSI
            mov RDX,RAX
            mov R10,RDI
            not EDX
            and EDX,1
            call .L_44a8b0

            mov R8,QWORD PTR [RAX+16]
            mov RCX,R8
            mov RBX,R8
            not R8
            shr RCX,1
            and RBX,-4
            and R8D,1
            mov EDX,ECX
            not ECX
            mov RSI,RBX
            and EDX,1
            and ECX,1
            cmp R9,RBX
            je .L_44aac8

            mov RDI,QWORD PTR [RAX+RCX*8]
            test RDI,RDI
            je .L_44a9c9

            mov R11,QWORD PTR [RDI+16]
            test R11B,1
            jne .L_44aaf0
.L_44a9c9:

            mov R11D,EDX
            mov QWORD PTR [RBX+R11*8],RDI
            mov RDI,QWORD PTR [R9+RCX*8]
            mov QWORD PTR [RAX+RCX*8],RDI
            mov RCX,QWORD PTR [RDI+16]
            and ECX,3
            or RCX,RAX
            mov QWORD PTR [RDI+16],RCX
            mov ECX,EDX
.L_44a9e8:

            mov RDI,QWORD PTR [R9+RCX*8]
            mov QWORD PTR [RAX+RCX*8],RDI
            mov RCX,QWORD PTR [RDI+16]
            and ECX,3
            or RCX,RAX
            mov QWORD PTR [RDI+16],RCX
            mov RCX,QWORD PTR [RAX+16]
            mov RDI,QWORD PTR [R9+16]
            xor RDI,RCX
            and EDI,3
            xor RDI,RCX
            mov QWORD PTR [RAX+16],RDI
            mov RCX,QWORD PTR [R9+16]
            and EDI,3
            and RCX,-4
            or RCX,RDI
            mov QWORD PTR [RAX+16],RCX
            mov RDI,RCX
            shr RCX,1
            and RDI,-4
            and ECX,1
            test R8D,R8D
            mov QWORD PTR [RDI+RCX*8],RAX
            jne .L_44aae0

            pop RBX
.L_44aa40:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44aa48:

            mov R8,RAX
            and R8,-4
            test RDX,RDX
            je .L_44aa88
.L_44aa54:

            xor EDX,EDX
            test RCX,RCX
            sete DL
            mov RDX,QWORD PTR [RSI+RDX*8]
            mov RSI,QWORD PTR [RDX+16]
            xor RAX,RSI
            and EAX,3
            xor RAX,RSI
            mov RCX,RAX
            and EAX,3
            shr RCX,1
            or RAX,R8
            and ECX,1
            mov QWORD PTR [R8+RCX*8],RDX
            mov QWORD PTR [RDX+16],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44aa88:

            mov RDX,RAX
            shr RDX,1
            and EDX,1
            test AL,1
            jne .L_44aac0

            cmp QWORD PTR [RDI],RSI
            je .L_44aac0

            mov EAX,EDX
            mov RSI,R8
            mov QWORD PTR [R8+RAX*8],0
            jmp .L_44a440
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44aab0:

            mov R8,RAX
            and R8,-4
            jmp .L_44aa54
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44aac0:

            mov QWORD PTR [R8+RDX*8],RCX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44aac8:

            mov ESI,EDX
            mov RSI,QWORD PTR [RAX+RSI*8]
            test RSI,RSI
            jne .L_44ab20
.L_44aad3:

            mov RSI,RAX
            jmp .L_44a9e8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44aae0:

            pop RBX
            mov RDI,R10
            jmp .L_44a440
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44aaf0:

            and R11D,2
            or R11,RBX
            test EDX,EDX
            mov QWORD PTR [RDI+16],R11
            je .L_44ab10

            or R11,2
            xor R8D,R8D
            mov QWORD PTR [RDI+16],R11
            jmp .L_44a9c9
          .byte 0x90
.L_44ab10:

            and R11,-3
            xor R8D,R8D
            mov QWORD PTR [RDI+16],R11
            jmp .L_44a9c9
.L_44ab20:

            mov RDI,QWORD PTR [RSI+16]
            test DIL,1
            je .L_44aad3

            and RDI,-2
            xor R8D,R8D
            mov QWORD PTR [RSI+16],RDI
            mov RSI,RAX
            jmp .L_44a9e8
.L_44ab3d:

            nop
            nop
            nop
.L_44ab40:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov EDI,16
            mov RBP,RSI
            call malloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_44ab78

            mov RDI,RBP
            call strdup@PLT

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_44ab90
.L_44ab6c:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44ab78:

            lea RDX,QWORD PTR [RIP+.L_44ae14]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44ab6c
.L_44ab90:

            mov RDI,RBX
            xor EBX,EBX
            call free@PLT

            lea RDX,QWORD PTR [RIP+.L_44ae14]
            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44ab6c
.L_44abb2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44abc0:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_44ae2a]
            mov RBP,RSI
            mov EDX,1
            mov ESI,14594245
            sub RSP,8
.L_44abda:

            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_44ac50

            test RBP,RBP
            je .L_44ac30

            cmp BYTE PTR [RBP],0
            je .L_44ac30

            mov RSI,RBP
            mov RDI,RBX
            call .L_44ab40

            test RAX,RAX
            je .L_44ac50

            mov RDX,QWORD PTR [RBX+2504]
            mov QWORD PTR [RDX],RAX
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBX+2504],RDX
            mov QWORD PTR [RAX+8],0
            xor EAX,EAX
.L_44ac21:

            add RSP,8
.L_44ac25:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ac30:

            lea RDX,QWORD PTR [RIP+.L_44ae48]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBX
            call .L_43f5d0

            mov EAX,4294967271
            jmp .L_44ac21
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44ac50:

            mov EAX,4294967266
            jmp .L_44ac21
.L_44ac57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44ac60:

            push R12
            lea RCX,QWORD PTR [RIP+.L_44ae70]
            push RBP
            push RBX
            mov RBP,RSI
            mov R12,RDX
            mov ESI,14594245
            mov EDX,1
            mov RBX,RDI
            call .L_443f50

            cmp EAX,-30
            je .L_44ac98

            mov QWORD PTR [RBX+2520],R12
            mov QWORD PTR [RBX+2528],RBP
            xor EAX,EAX
.L_44ac98:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_44ac9d:

            nop
            nop
            nop
.L_44aca0:

            mov DWORD PTR [RDI+2512],4294967295
            ret 
.L_44acab:

            nop
            nop
            nop
            nop
            nop
.L_44acb0:

            push RBP
            push RBX
            sub RSP,8
.L_44acb6:

            mov EAX,DWORD PTR [RDI+2512]
            test EAX,EAX
            js .L_44ad80

            cmp EAX,1
            jle .L_44ad20

            sub EAX,1
            mov DWORD PTR [RDI+2512],EAX
            mov RAX,QWORD PTR [RDI+2496]
            test RAX,RAX
            je .L_44ace9

            mov RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RDI+2496],RDX
.L_44ace9:

            mov RDX,QWORD PTR [RDI+2504]
            mov QWORD PTR [RDX],RAX
            lea RDX,QWORD PTR [RAX+8]
            mov RCX,QWORD PTR [RDI+2496]
            mov QWORD PTR [RDI+2504],RDX
            mov QWORD PTR [RAX+8],0
.L_44ad0d:

            test RCX,RCX
            je .L_44ad26

            mov RBP,QWORD PTR [RCX]
            add RSP,8
.L_44ad19:

            pop RBX
            mov RAX,RBP
            pop RBP
            ret 
          .byte 0x90
.L_44ad20:

            je .L_44adc0
.L_44ad26:

            mov RAX,QWORD PTR [RDI+2520]
            test RAX,RAX
            je .L_44adb0

            mov RBX,RDI
            mov RSI,QWORD PTR [RDI+2528]
            call RAX

            test RAX,RAX
            mov RBP,RAX
            je .L_44adb0

            mov RSI,RAX
            mov RDI,RBX
            call .L_44ab40

            test RAX,RAX
            je .L_44adb0

            mov RDX,QWORD PTR [RBX+2496]
            mov QWORD PTR [RAX+8],RDX
            mov QWORD PTR [RBX+2496],RAX
            mov RAX,RBP
            mov DWORD PTR [RBX+2512],1
            add RSP,8
.L_44ad79:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44ad80:

            mov RCX,QWORD PTR [RDI+2496]
            test RCX,RCX
            je .L_44ae10

            mov RAX,RCX
            xor EDX,EDX
            nop
            nop
            nop
.L_44ad98:

            mov RAX,QWORD PTR [RAX+8]
            add EDX,1
            test RAX,RAX
            jne .L_44ad98
.L_44ada4:

            mov DWORD PTR [RDI+2512],EDX
            jmp .L_44ad0d
          .byte 0x90
.L_44adb0:

            xor EBP,EBP
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44adc0:

            mov RAX,QWORD PTR [RDI+2496]
            mov DWORD PTR [RDI+2512],0
            mov RDX,QWORD PTR [RAX+8]
            test RDX,RDX
            je .L_44ad26

            mov QWORD PTR [RDI+2496],RDX
            mov RDX,QWORD PTR [RDI+2504]
            mov QWORD PTR [RDX],RAX
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RDI+2504],RDX
            mov QWORD PTR [RAX+8],0
            jmp .L_44ad26
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ae10:

            xor EDX,EDX
            jmp .L_44ada4
.L_44ae14:
          .string "Can\'t allocate memory"
.L_44ae2a:
          .string "archive_read_add_passphrase"
          .byte 0x66
          .byte 0x90
.L_44ae48:
          .string "Empty passphrase is unacceptable"
          .zero 7
.L_44ae70:
          .string "archive_read_set_passphrase_callback"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_44aea0:

            mov EAX,3
            ret 
.L_44aea6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44aeb0:

            test RDI,RDI
            je .L_44aed0

            mov RAX,QWORD PTR [RDI+2472]
            test RAX,RAX
            je .L_44aed0

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_44aed0

            mov EAX,DWORD PTR [RAX+20728]
            ret 
.L_44aed0:

            mov EAX,4294967295
            ret 
.L_44aed6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44aee0:

            mov RDX,QWORD PTR [RDI+56]
            mov RAX,QWORD PTR [RDI+16]
            lea ESI,DWORD PTR [RDX-1]
            lea R8D,DWORD PTR [RAX-1]
            movsxd RDX,EDX
            sub RDX,1
            mov R9D,EAX
            shl R8,4
            test ESI,ESI
            js .L_44af4b
.L_44af01:

            test R9D,R9D
            je .L_44af2f

            mov RAX,QWORD PTR [RDI+24]
            cmp QWORD PTR [RAX+8],RDX
            je .L_44af40

            add RAX,24
            lea RCX,QWORD PTR [RAX+R8*1]
            jmp .L_44af2a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44af20:

            add RAX,16
            cmp QWORD PTR [RAX-16],RDX
            je .L_44af40
.L_44af2a:

            cmp RAX,RCX
            jne .L_44af20
.L_44af2f:

            mov RAX,QWORD PTR [RDI+64]
            mov RAX,QWORD PTR [RAX+RDX*8]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44af40:

            sub ESI,1
            sub RDX,1
            test ESI,ESI
            jns .L_44af01
.L_44af4b:

            xor EAX,EAX
            ret 
.L_44af4e:

            nop
            nop
.L_44af50:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_44af5e:

            mov RCX,QWORD PTR [RDI+20032]
            mov R13D,DWORD PTR [RDI+19972]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+20064]
            mov R15,QWORD PTR [RDI+20112]
            mov RBX,QWORD PTR [RDI+20088]
            mov R12,QWORD PTR [RDI+20104]
            mov R11,QWORD PTR [RDI+20016]
            mov R9,QWORD PTR [RDI+20040]
            mov QWORD PTR [RSP+40],RAX
            mov RAX,QWORD PTR [RDI+20072]
            mov R10,QWORD PTR [RDI+20024]
            mov R8,QWORD PTR [RDI+20048]
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RDI+20056]
            mov R14,RAX
            sub R14,QWORD PTR [RDI+20080]
            add RAX,RCX
            mov QWORD PTR [RSP+8],RAX
            add R14,RCX
            test R13D,R13D
            jne .L_44b076

            lea RAX,QWORD PTR [RDI+20120]
            lea RCX,QWORD PTR [RDI+20636]
            mov BYTE PTR [RDI+20636],0
            nop
            nop
.L_44b000:

            mov EBP,1024
            add RAX,2
            mov WORD PTR [RAX-2],BP
            cmp RCX,RAX
            jne .L_44b000

            cmp R14,QWORD PTR [RSP+8]
            mov EAX,4294967295
            mov QWORD PTR [RDI+20640],RAX
            je .L_44b2e2

            movzx EAX,BYTE PTR [R14]
            mov RCX,QWORD PTR [RSP+8]
            lea RBP,QWORD PTR [R14+1]
            add R14,5
            mov DWORD PTR [RDI+20644],EAX
.L_44b040:

            cmp RCX,RBP
            je .L_44b2e2

            add RBP,1
            mov EAX,DWORD PTR [RDI+20644]
            movzx R13D,BYTE PTR [RBP-1]
            shl EAX,8
            or EAX,R13D
            cmp RBP,R14
            mov DWORD PTR [RDI+20644],EAX
            jne .L_44b040

            mov DWORD PTR [RDI+19972],1
            mov R14,RBP
.L_44b076:

            cmp QWORD PTR [RDI+19976],0
            je .L_44b481

            test RDX,RDX
            je .L_44b481

            xor ECX,ECX
            jmp .L_44b09d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b098:

            cmp RDX,RCX
            jbe .L_44b0b7
.L_44b09d:

            add RCX,1
            movzx EAX,BYTE PTR [RDI+RCX*1+19983]
            mov BYTE PTR [RSI+RCX*1-1],AL
            sub QWORD PTR [RDI+19976],1
            jne .L_44b098
.L_44b0b7:

            sub R9,QWORD PTR [RSP+40]
            sub R12,R15
            sub R8,QWORD PTR [RSP]
            add R12,RBX
            lea RBX,QWORD PTR [RDI+20632]
            mov QWORD PTR [RSP+16],RBX
            lea RBX,QWORD PTR [RDI+20634]
            lea RAX,QWORD PTR [R11+R9*1]
            xor R11D,R11D
            mov QWORD PTR [RSP+24],RBX
            lea RBX,QWORD PTR [RDI+20120]
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [R10+R8*1]
            mov QWORD PTR [RSP+48],RBX
            mov QWORD PTR [RSP+32],RAX
            mov EAX,DWORD PTR [RDI+19972]
            jmp .L_44b16c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b110:

            mov R10D,2048
            mov DWORD PTR [RDI+20640],EAX
            sub R10D,EBX
            shr R10D,5
            add R11D,R10D
            cmp EAX,16777215
            mov WORD PTR [R13],R11W
            ja .L_44b15d

            cmp R14,QWORD PTR [RSP+8]
            je .L_44b2e2

            shl EAX,8
            shl R9D,8
            add R14,1
            mov DWORD PTR [RDI+20640],EAX
            movzx EAX,BYTE PTR [R14-1]
            or R9D,EAX
            mov DWORD PTR [RDI+20644],R9D
.L_44b15d:

            mov BYTE PTR [RDI+20636],BPL
            mov EAX,1
.L_44b169:

            mov R11,R8
.L_44b16c:

            mov R8,R15
            mov R9,RDX
            sub R8,R11
            sub R9,RCX
            cmp R9,R8
            cmova R9,R8
            cmp EAX,1
            je .L_44b340
.L_44b188:

            test R9,R9
            je .L_44b43c

            cmp RCX,RDX
            je .L_44b43c

            mov DWORD PTR [RDI+19972],1
            movzx EBP,BYTE PTR [R12+R11*1]
            lea R8,QWORD PTR [R11+1]
            cmp BPL,232
            je .L_44b328

            cmp BPL,233
            mov R13,QWORD PTR [RSP+16]
            cmovne R13,QWORD PTR [RSP+24]
.L_44b1c6:

            mov R10D,DWORD PTR [RDI+20640]
            movzx EBX,WORD PTR [R13]
            mov R9D,DWORD PTR [RDI+20644]
            mov EAX,R10D
            shr EAX,11
            mov R11D,EBX
            imul EAX,EBX
            cmp R9D,EAX
            jb .L_44b110

            sub R10D,EAX
            shr EBX,5
            sub R9D,EAX
            sub R11D,EBX
            cmp R10D,16777215
            mov DWORD PTR [RDI+20640],R10D
            mov DWORD PTR [RDI+20644],R9D
            mov WORD PTR [R13],R11W
            ja .L_44b243

            cmp R14,QWORD PTR [RSP+8]
            je .L_44b2e2

            shl R10D,8
            shl R9D,8
            add R14,1
            mov DWORD PTR [RDI+20640],R10D
            movzx EAX,BYTE PTR [R14-1]
            or R9D,EAX
            mov DWORD PTR [RDI+20644],R9D
.L_44b243:

            cmp BPL,232
            je .L_44b3d0

            mov RAX,QWORD PTR [RSP]
            cmp RAX,3
            jbe .L_44b2e2

            mov RBX,QWORD PTR [RSP+32]
            sub RAX,4
            mov QWORD PTR [RSP],RAX
            mov RAX,RBX
            add RBX,4
            mov QWORD PTR [RSP+32],RBX
.L_44b274:

            mov EAX,DWORD PTR [RAX]
            bswap EAX
            mov R9D,EAX
            mov EAX,4294967292
            sub EAX,DWORD PTR [RDI+20648]
            sub EAX,ECX
            add EAX,R9D
            mov R10D,EAX
            mov R9D,EAX
            mov BYTE PTR [RSP+68],AL
            shr R10D,16
            mov BYTE PTR [RSP+69],AH
            shr EAX,24
            cmp RCX,RDX
            mov BYTE PTR [RSP+70],R10B
            mov BYTE PTR [RDI+20636],AL
            mov BYTE PTR [RSP+71],AL
            jae .L_44b400

            mov EAX,1
            nop
            nop
            nop
.L_44b2c0:

            add RCX,1
            cmp EAX,3
            mov R10D,EAX
            mov BYTE PTR [RSI+RCX*1-1],R9B
            ja .L_44b310

            cmp RDX,RCX
            jbe .L_44b310

            movzx R9D,BYTE PTR [RSP+RAX*1+68]
            add RAX,1
            jmp .L_44b2c0
.L_44b2e2:

            mov RAX,-25
.L_44b2e9:

            mov RSI,QWORD PTR [RSP+72]
            xor RSI,QWORD PTR FS:[40]
            jne .L_44b4af

            add RSP,88
.L_44b301:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44b310:

            cmp R10D,4
            jne .L_44b492

            mov EAX,DWORD PTR [RDI+19972]
            jmp .L_44b169
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44b328:

            movzx EAX,BYTE PTR [RDI+20636]
            mov RBX,QWORD PTR [RSP+48]
            lea R13,QWORD PTR [RBX+RAX*2]
            jmp .L_44b1c6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44b340:

            test R9,R9
            je .L_44b43c

            movzx R10D,BYTE PTR [R12+R11*1]
            lea RAX,QWORD PTR [RCX+1]
            mov R8D,R10D
            mov BYTE PTR [RSI+RCX*1],R10B
            and R8D,4294967294
            cmp R8B,232
            mov R8,R11
            je .L_44b3b5

            sub RCX,R11
            add RCX,RSI
            jmp .L_44b39f
          .byte 0x66
          .byte 0x90
.L_44b370:

            add R8,1
            sub R9,1
            mov BYTE PTR [RDI+20636],R10B
            je .L_44b448

            movzx R10D,BYTE PTR [R12+R8*1]
            add RAX,1
            mov R11D,R10D
            mov BYTE PTR [RCX+R8*1],R10B
            and R11D,4294967294
            cmp R11B,232
            je .L_44b3b5
.L_44b39f:

            cmp BYTE PTR [RDI+20636],15
            jne .L_44b370

            mov R11D,R10D
            and R11D,4294967280
            cmp R11B,128
            jne .L_44b370
.L_44b3b5:

            mov DWORD PTR [RDI+19972],2
            mov RCX,RAX
            mov R11,R8
            jmp .L_44b188
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b3d0:

            mov RAX,QWORD PTR [RSP+40]
            cmp RAX,3
            jbe .L_44b2e2

            mov RBX,QWORD PTR [RSP+56]
            sub RAX,4
            mov QWORD PTR [RSP+40],RAX
            mov RAX,RBX
            add RBX,4
            mov QWORD PTR [RSP+56],RBX
            jmp .L_44b274
          .byte 0x66
          .byte 0x90
.L_44b400:

            mov EDX,4
            xor R10D,R10D
            xor EAX,EAX
.L_44b40a:

            lea ESI,DWORD PTR [R10+1]
            mov QWORD PTR [RDI+19976],RDX
            mov RDX,RDI
            sub RDX,RAX
            sub RSI,RAX
            lea RSI,QWORD PTR [RSP+RSI*1+68]
.L_44b423:

            mov BYTE PTR [RDX+RAX*1+19984],R9B
            add RAX,1
            cmp EAX,3
            ja .L_44b48d

            movzx R9D,BYTE PTR [RSI+RAX*1-1]
            jmp .L_44b423
.L_44b43c:

            mov RAX,RCX
            mov R8,R11
            nop
            nop
            nop
            nop
            nop
            nop
.L_44b448:

            mov RSI,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+8]
            sub QWORD PTR [RDI+20112],R8
            add QWORD PTR [RDI+20648],RAX
            mov QWORD PTR [RDI+20064],RSI
            mov RSI,QWORD PTR [RSP]
            sub RDX,R14
            mov QWORD PTR [RDI+20072],RSI
            mov QWORD PTR [RDI+20080],RDX
            jmp .L_44b2e9
.L_44b481:

            test RDX,RDX
            jne .L_44b4a8

            xor EAX,EAX
            jmp .L_44b2e9
.L_44b48d:

            mov RAX,RCX
            jmp .L_44b448
.L_44b492:

            mov EDX,4
            mov EAX,R10D
            sub EDX,R10D
            movzx R9D,BYTE PTR [RSP+RAX*1+68]
            jmp .L_44b40a
.L_44b4a8:

            xor ECX,ECX
            jmp .L_44b0b7
.L_44b4af:

            call __stack_chk_fail@PLT
.L_44b4b4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44b4c0:

            cmp ESI,10
            ja .L_44b578

            lea RDX,QWORD PTR [RIP+.L_450be0]
            mov ESI,ESI
            movsxd RAX,DWORD PTR [RDX+RSI*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b4e0:

            lea RDX,QWORD PTR [RIP+.L_450810]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b4f8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b500:

            lea RDX,QWORD PTR [RIP+.L_450730]
            mov ESI,12
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b518:

            lea RDX,QWORD PTR [RIP+.L_450760]
            mov ESI,12
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b530:

            lea RDX,QWORD PTR [RIP+.L_450788]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b548:

            lea RDX,QWORD PTR [RIP+.L_4507b8]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b560:

            lea RDX,QWORD PTR [RIP+.L_4507e0]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44b578:

            lea RDX,QWORD PTR [RIP+.L_450840]
            mov ESI,4294967295
            xor EAX,EAX
            jmp .L_43f5d0
.L_44b58b:

            nop
            nop
            nop
            nop
            nop
.L_44b590:

            push RBX
.L_44b591:

            mov RDI,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RBX+19920]
            test RDX,RDX
            je .L_44b5d8

            mov RAX,QWORD PTR [RBX+19912]
            sub RDX,1
            lea RCX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBX+19912],RCX
            movzx EAX,BYTE PTR [RAX]
            add QWORD PTR [RBX+19928],1
            mov QWORD PTR [RBX+19920],RDX
            pop RBX
.L_44b5d3:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44b5d8:

            lea RDX,QWORD PTR [RIP+.L_450c88]
            xor EAX,EAX
            mov ESI,84
            call .L_43f5d0

            mov DWORD PTR [RBX+19960],1
            xor EAX,EAX
            pop RBX
            ret 
.L_44b5f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44b600:

            mov RDI,RSI
            jmp free@PLT
.L_44b608:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44b610:

            mov RDI,RSI
            jmp malloc@PLT
.L_44b618:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44b620:

            mov RAX,QWORD PTR [RDI+2472]
            push RBX
            mov RBX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RBX+288]
            test RSI,RSI
            jne .L_44b640

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b640:

            call .L_404a30

            mov RAX,QWORD PTR [RBX+288]
            add QWORD PTR [RBX+248],RAX
            mov QWORD PTR [RBX+288],0
            pop RBX
            ret 
.L_44b660:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_44b671:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP+32],RSI
            mov R13,QWORD PTR [RAX]
            cmp QWORD PTR [R13+296],0
            jne .L_44b6a8

            cmp QWORD PTR [R13+304],-1
            je .L_44be50
.L_44b6a8:

            mov RDI,QWORD PTR [R13+216]
            test RDI,RDI
            je .L_44bd80

            mov RAX,QWORD PTR [RSP+32]
            cmp QWORD PTR [R13+232],RAX
            jae .L_44b730

            mov RAX,QWORD PTR [R13+224]
            mov ESI,0
            mov RBX,RAX
            sub RBX,RDI
            test RAX,RAX
            mov RAX,QWORD PTR [RSP+32]
            cmove RBX,RSI
            lea RBP,QWORD PTR [RAX+1023]
            and RBP,-1024
            mov RSI,RBP
            call realloc@PLT

            test RAX,RAX
            je .L_44bdb4

            test RBX,RBX
            mov QWORD PTR [R13+216],RAX
            mov QWORD PTR [R13+232],RBP
            je .L_44b748
.L_44b716:

            mov RDI,QWORD PTR [R13+216]
            mov RDX,QWORD PTR [R13+240]
            lea RSI,QWORD PTR [RDI+RBX*1]
            call memmove@PLT

            jmp .L_44b748
          .byte 0x90
.L_44b730:

            cmp QWORD PTR [R13+240],RAX
            jb .L_44bed0
.L_44b73d:

            mov QWORD PTR [R13+240],0
.L_44b748:

            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP],R14
            mov QWORD PTR [R13+224],0
            mov R14,R13
            mov QWORD PTR [RSP+8],RAX
.L_44b764:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_4049e0

            mov RBX,QWORD PTR [RSP+64]
            mov R15,RAX
            test RBX,RBX
            jle .L_44c300

            mov R9,QWORD PTR [R14+232]
            mov RAX,QWORD PTR [R14+240]
            mov RDX,QWORD PTR [R14+280]
            mov R12,QWORD PTR [R14+216]
            mov RCX,QWORD PTR [R14+304]
            mov RBP,R9
            add R12,RAX
            sub RBP,RAX
            cmp RBX,RDX
            cmova RBX,RDX
            cmp QWORD PTR [R14+296],33
            je .L_44b878

            cmp RCX,50528515
            mov R13,RBP
            mov RDI,R12
            je .L_44b8c0
.L_44b7dc:

            cmp RCX,50528539
            mov QWORD PTR [RSP+16],R13
            mov QWORD PTR [RSP+24],RDI
            je .L_44b895
.L_44b7f3:

            mov RAX,QWORD PTR [R14+296]
            cmp RAX,196865
            je .L_44bae0

            jbe .L_44b908

            cmp RAX,262408
            je .L_44bd30

            cmp RAX,262658
            je .L_44bcb8

            cmp RAX,197633
            je .L_44bb50
.L_44b830:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_450d04]
.L_44b83b:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_43f5d0

            mov RAX,-30
.L_44b851:

            mov RBX,QWORD PTR [RSP+72]
            xor RBX,QWORD PTR FS:[40]
            jne .L_44c396

            add RSP,88
.L_44b869:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44b878:

            cmp RCX,50528539
            mov QWORD PTR [RSP+16],RBP
            mov QWORD PTR [RSP+24],R12
            mov RDI,R12
            mov R13,RBP
            jne .L_44bae0
.L_44b895:

            mov R13,QWORD PTR [R14+20112]
            test R13,R13
            jne .L_44bf80
.L_44b8a5:

            mov RDI,QWORD PTR [R14+20088]
            mov R13,QWORD PTR [R14+20096]
            jmp .L_44b7f3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44b8c0:

            test RBX,RBX
            mov RCX,QWORD PTR [R14+19976]
            je .L_44bde0

            cmp RBP,4
            ja .L_44bde0

            xor R11D,R11D
            test RCX,RCX
            jne .L_44bf30
.L_44b8e6:

            test R13,R13
            je .L_44bffb

            test R11B,R11B
            jne .L_44bffb

            mov RCX,QWORD PTR [R14+304]
            jmp .L_44b7dc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44b908:

            test RAX,RAX
            jne .L_44bad0

            cmp R13,RBX
            mov RCX,RBX
            mov RSI,R15
            cmovbe RCX,R13
            mov RDX,RCX
            mov QWORD PTR [RSP+40],RCX
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+40]
            mov RDI,RBX
            mov R10,R13
            xor R11D,R11D
            mov RSI,RBP
            sub R10,RCX
            sub RDI,RCX
            test RBX,RBX
            sete R11B
            sub RSI,R10
.L_44b94c:

            mov R13,RBX
            mov RAX,QWORD PTR [R14+304]
            sub R13,RDI
            cmp QWORD PTR [R14+296],33
            je .L_44b96f

            cmp RAX,50528515
            je .L_44c028
.L_44b96f:

            cmp RAX,50528539
            je .L_44ba50
.L_44b97b:

            mov RDX,QWORD PTR [R14+280]
            mov RAX,QWORD PTR [R14+240]
            cmp R11D,1
            mov R9,QWORD PTR [R14+232]
            mov ECX,0
            cmovne R11D,ECX
.L_44b99d:

            mov RCX,QWORD PTR [R14+264]
            sub RDX,R13
            mov QWORD PTR [R14+280],RDX
            cmp RCX,RSI
            cmovbe RSI,RCX
.L_44b9b5:

            add RAX,RSI
            sub RCX,RSI
            mov QWORD PTR [R14+288],R13
            cmp RAX,R9
            mov QWORD PTR [R14+264],RCX
            mov QWORD PTR [R14+240],RAX
            je .L_44c338

            cmp QWORD PTR [R14+304],50528515
            je .L_44ba10
.L_44b9e6:

            or RCX,RDX
            je .L_44ba23

            test R11D,R11D
            jne .L_44c2f0

            or RSI,R13
            je .L_44c2f0

            mov RDI,QWORD PTR [RSP]
            call .L_44b620

            jmp .L_44b764
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ba10:

            cmp QWORD PTR [R14+19976],0
            je .L_44b9e6

            lea RDI,QWORD PTR [RAX+5]
            cmp RDI,R9
            jbe .L_44b9e6
.L_44ba23:

            mov R13,R14
            mov R14,QWORD PTR [RSP]
            mov R9,RAX
.L_44ba2d:

            cmp QWORD PTR [RSP+32],R9
            ja .L_44c2f4

            mov RAX,QWORD PTR [R13+216]
            mov QWORD PTR [R13+224],RAX
            xor EAX,EAX
            jmp .L_44b851
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44ba50:

            mov RAX,QWORD PTR [R14+20096]
            mov RDX,QWORD PTR [R14+20008]
            sub RAX,R10
            cmp RAX,RDX
            mov QWORD PTR [R14+20104],RAX
            ja .L_44be40
.L_44ba71:

            mov RBX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,R14
            mov QWORD PTR [R14+20112],RAX
            mov DWORD PTR [RSP+40],R11D
            mov RDX,RBX
            call .L_44af50

            test RAX,RAX
            js .L_44c344

            mov RDX,QWORD PTR [R14+20112]
            add RDX,QWORD PTR [R14+20008]
            sub RBX,RAX
            sub RDX,QWORD PTR [R14+20104]
            mov RSI,RBP
            mov R11D,DWORD PTR [RSP+40]
            sub RSI,RBX
            mov QWORD PTR [R14+20008],RDX
            jmp .L_44b97b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44bad0:

            cmp RAX,33
            jne .L_44b830

            nop
            nop
            nop
            nop
            nop
            nop
.L_44bae0:

            mov QWORD PTR [R14+344],R13
            lea R13,QWORD PTR [R14+312]
            mov QWORD PTR [R14+336],RDI
            xor ESI,ESI
            mov QWORD PTR [R14+312],R15
            mov QWORD PTR [R14+320],RBX
            mov RDI,R13
            call lzma_code@PLT

            test EAX,EAX
            je .L_44bf70

            cmp EAX,1
            jne .L_44c268

            mov RDI,R13
            call lzma_end@PLT

            mov DWORD PTR [R14+448],0
            mov R11D,1
.L_44bb37:

            mov R10,QWORD PTR [R14+344]
            mov RSI,RBP
            mov RDI,QWORD PTR [R14+320]
            sub RSI,R10
            jmp .L_44b94c
.L_44bb50:

            mov EDX,DWORD PTR [R14+19968]
            test EDX,EDX
            je .L_44b830

            mov EAX,DWORD PTR [R14+660]
            test EAX,EAX
            js .L_44b830

            test R13,R13
            je .L_44b830

            test EAX,EAX
            mov QWORD PTR [R14+19912],R15
            mov QWORD PTR [R14+19920],RBX
            mov QWORD PTR [R14+19936],RDI
            mov QWORD PTR [R14+19944],R13
            lea R15,QWORD PTR [R14+19848]
            jne .L_44bbf0

            mov RAX,QWORD PTR [RSP]
            mov RDI,R15
            mov QWORD PTR [R14+19896],RAX
            lea RAX,QWORD PTR [RIP+.L_44b590]
            mov QWORD PTR [R14+19904],RAX
            lea RAX,QWORD PTR [R14+19896]
            mov QWORD PTR [R14+19888],RAX
            call QWORD PTR [RIP+.L_65ad70]

            test EAX,EAX
            je .L_44c354

            mov EAX,DWORD PTR [R14+19960]
            test EAX,EAX
            jne .L_44c290

            mov DWORD PTR [R14+660],1
.L_44bbf0:

            xor R13D,R13D
            test RBX,RBX
            je .L_44bef8
.L_44bbfc:

            lea RAX,QWORD PTR [R14+664]
            mov QWORD PTR [RSP+40],RBX
            mov RBX,R13
            mov R13,RAX
            jmp .L_44bc6f
.L_44bc10:

            mov R11D,DWORD PTR [R14+19960]
            test R11D,R11D
            jne .L_44c290

            mov RCX,QWORD PTR [R14+19936]
            lea RSI,QWORD PTR [RCX+1]
            mov QWORD PTR [R14+19936],RSI
            mov BYTE PTR [RCX],AL
            mov RAX,QWORD PTR [R14+19944]
            add QWORD PTR [R14+19952],1
            mov RDI,QWORD PTR [R14+19920]
            sub RAX,1
            cmp RBX,1
            adc RBX,-1
            test RAX,RAX
            mov QWORD PTR [R14+19944],RAX
            je .L_44c2b0

            or RDI,RBX
            je .L_44c310
.L_44bc6f:

            mov RSI,R15
            mov RDI,R13
            call QWORD PTR [RIP+.L_65ad80]

            test EAX,EAX
            jns .L_44bc10

            mov R13,R14
            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_450d21]
            mov DWORD PTR [R13+660],4294967295
.L_44bc98:

            xor EAX,EAX
            mov ESI,84
            mov RDI,R14
            call .L_43f5d0

            mov RAX,-30
            jmp .L_44b851
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44bcb8:

            mov DWORD PTR [R14+488],R13D
            lea R13,QWORD PTR [R14+456]
            mov QWORD PTR [R14+480],RDI
            mov QWORD PTR [R14+456],R15
            mov DWORD PTR [R14+464],EBX
            mov RDI,R13
            call BZ2_bzDecompress@PLT

            test EAX,EAX
            mov R11D,EAX
            je .L_44bd14

            cmp EAX,4
            jne .L_44c280

            mov RDI,R13
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            jne .L_44c386

            mov DWORD PTR [R14+536],0
            mov R11D,1
.L_44bd14:

            mov R10D,DWORD PTR [R14+488]
            mov RSI,RBP
            mov EDI,DWORD PTR [R14+464]
            sub RSI,R10
            jmp .L_44b94c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44bd30:

            mov QWORD PTR [R14+568],RDI
            lea RDI,QWORD PTR [R14+544]
            xor ESI,ESI
            mov QWORD PTR [R14+544],R15
            mov DWORD PTR [R14+552],EBX
            mov DWORD PTR [R14+576],R13D
            call inflate@PLT

            cmp EAX,1
            mov R11D,EAX
            ja .L_44bf48

            mov R10D,DWORD PTR [R14+576]
            mov RSI,RBP
            mov EDI,DWORD PTR [R14+552]
            sub RSI,R10
            jmp .L_44b94c
          .byte 0x90
.L_44bd80:

            cmp QWORD PTR [RSP+32],65536
            ja .L_44bf08

            mov QWORD PTR [R13+232],65536
            mov EDI,65536
.L_44bd9f:

            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R13+216],RAX
            jne .L_44b73d
.L_44bdb4:

            lea RDX,QWORD PTR [RIP+.L_450870]
            xor EAX,EAX
            mov ESI,12
            mov RDI,R14
            call .L_43f5d0

            mov RAX,-30
            jmp .L_44b851
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bde0:

            test RBX,RBX
            sete R11B
            test RCX,RCX
            je .L_44c39b

            test RBP,RBP
            lea RCX,QWORD PTR [R14+19984]
            mov R13,RBP
            mov RDI,R12
            jne .L_44be1d

            jmp .L_44c015
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44be10:

            add RCX,1
            test R13,R13
            je .L_44c000
.L_44be1d:

            movzx EAX,BYTE PTR [RCX]
            add RDI,1
            sub R13,1
            mov BYTE PTR [RDI-1],AL
            sub QWORD PTR [R14+19976],1
            jne .L_44be10

            jmp .L_44b8e6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44be40:

            mov QWORD PTR [R14+20104],RDX
            mov RAX,RDX
            jmp .L_44ba71
          .byte 0x90
.L_44be50:

            test RSI,RSI
            mov EAX,1
            lea RDX,QWORD PTR [RSP+64]
            cmovne RAX,RSI
            mov RSI,RAX
            call .L_4049e0

            test RAX,RAX
            je .L_44c304

            mov RDX,QWORD PTR [RSP+64]
            test RDX,RDX
            jle .L_44c304

            mov RAX,QWORD PTR [R13+280]
            xor ESI,ESI
            cmp RDX,RAX
            mov RCX,RAX
            jg .L_44be9d

            sub RAX,RDX
            mov RCX,RDX
            mov RSI,RAX
            mov RAX,RDX
.L_44be9d:

            mov RDX,QWORD PTR [R13+264]
            mov QWORD PTR [R13+280],RSI
            xor ESI,ESI
            cmp RDX,RCX
            jl .L_44bebb

            sub RDX,RAX
            mov RSI,RDX
            mov RDX,RAX
.L_44bebb:

            mov QWORD PTR [R13+264],RSI
            mov QWORD PTR [R13+240],RDX
            xor EAX,EAX
            jmp .L_44b851
.L_44bed0:

            mov RAX,QWORD PTR [R13+224]
            mov RBX,RAX
            sub RBX,RDI
            test RAX,RAX
            je .L_44b748

            test RBX,RBX
            je .L_44b748

            jmp .L_44b716
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44bef8:

            mov R13,QWORD PTR [R14+264]
            jmp .L_44bbfc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44bf08:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RAX+1023]
            and RDI,-1024
            mov QWORD PTR [R13+232],RDI
            jmp .L_44bd9f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bf30:

            mov RCX,QWORD PTR [R14+264]
            xor R13D,R13D
            xor R11D,R11D
            xor ESI,ESI
            jmp .L_44b9b5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44bf48:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4508b8]
            mov ECX,EAX
.L_44bf55:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R14
            call .L_43f5d0

            mov RAX,-30
            jmp .L_44b851
.L_44bf70:

            xor R11D,R11D
            jmp .L_44bb37
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44bf80:

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,R14
            call .L_44af50

            test RAX,RAX
            js .L_44c344

            mov RDX,QWORD PTR [R14+20112]
            mov RCX,RDX
            sub RCX,R13
            add QWORD PTR [R14+20008],RCX
            test RBX,RBX
            sete CL
            sub QWORD PTR [RSP+16],RAX
            je .L_44bfc9

            add QWORD PTR [RSP+24],RAX
            test CL,CL
            je .L_44b8a5
.L_44bfc9:

            xor R11D,R11D
            mov RSI,RBP
            sub RSI,QWORD PTR [RSP+16]
            test RDX,RDX
            mov RAX,QWORD PTR [R14+240]
            setne R11B
            mov RDX,QWORD PTR [R14+280]
            xor R13D,R13D
            and R11D,ECX
            mov R9,QWORD PTR [R14+232]
            jmp .L_44b99d
.L_44bffb:

            sub RBP,R13
            nop
            nop
.L_44c000:

            mov RDX,QWORD PTR [R14+280]
            mov RAX,QWORD PTR [R14+240]
            mov R9,QWORD PTR [R14+232]
.L_44c015:

            movzx R11D,R11B
            mov RSI,RBP
            xor R13D,R13D
            jmp .L_44b99d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44c028:

            cmp RSI,4
            jbe .L_44c2e0

            mov EAX,DWORD PTR [R14+20004]
            mov RDX,QWORD PTR [R14+19992]
            lea R15,QWORD PTR [R12+RSI*1-4]
            mov R8D,DWORD PTR [R14+20000]
            mov DWORD PTR [RSP+40],R11D
            mov DWORD PTR [RSP+56],EAX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c060:

            add RAX,R12
            cmp RAX,R15
            jb .L_44c07d

            jmp .L_44c328
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44c070:

            add RAX,1
            cmp RAX,R15
            je .L_44c190
.L_44c07d:

            movzx ECX,BYTE PTR [RAX]
            and ECX,4294967294
            cmp CL,232
            jne .L_44c070

            mov RDI,RAX
            sub RDI,R12
            mov RCX,RDI
            sub RCX,RDX
            cmp RCX,3
            ja .L_44c2c0

            sub ECX,1
            shl R8D,CL
            and R8D,7
            je .L_44c220

            lea RDX,QWORD PTR [RIP+.L_450c48]
            mov ECX,R8D
            lea R11,QWORD PTR [RIP+.L_450c40]
            movzx R9D,BYTE PTR [RDX+RCX*1]
            mov EDX,4
            sub EDX,R9D
            cmp BYTE PTR [R11+RCX*1],0
            movsxd RDX,EDX
            movzx EDX,BYTE PTR [RAX+RDX*1]
            je .L_44c0f0

            sub EDX,1
            cmp DL,253
            ja .L_44c0f0

            movzx EDX,BYTE PTR [RAX+4]
            sub EDX,1
            cmp DL,253
            ja .L_44c107

            nop
            nop
.L_44c0f0:

            add R8D,R8D
            lea RAX,QWORD PTR [RDI+1]
            and R8D,6
            or R8D,1
.L_44c0ff:

            mov RDX,RDI
            jmp .L_44c060
.L_44c107:

            mov EDX,DWORD PTR [RSP+56]
            lea ECX,DWORD PTR [R9*8]
            mov R9D,ECX
            mov ECX,24
            lea R11D,DWORD PTR [RDX+RDI*1]
            mov EDX,DWORD PTR [RAX+1]
            sub ECX,R9D
            mov DWORD PTR [RSP+48],R9D
            mov DWORD PTR [RSP+60],ECX
            sub EDX,R11D
            mov R9D,EDX
            shr R9D,CL
            mov ECX,R9D
            sub ECX,1
            cmp CL,253
            jbe .L_44c23d

            mov R9D,32
            sub R9D,DWORD PTR [RSP+48]
            mov QWORD PTR [RSP+48],RBP
            mov ECX,R9D
            mov R9D,1
            shl R9D,CL
            mov ECX,DWORD PTR [RSP+60]
            sub R9D,1
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c170:

            xor EDX,R9D
            sub EDX,R11D
            mov EBP,EDX
            shr EBP,CL
            sub EBP,1
            cmp BPL,253
            ja .L_44c170

            mov RBP,QWORD PTR [RSP+48]
            jmp .L_44c23d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44c190:

            mov R11D,DWORD PTR [RSP+40]
.L_44c195:

            sub R15,R12
            add DWORD PTR [R14+20004],R15D
            mov QWORD PTR [R14+19992],RDX
            mov RDX,RSI
            mov DWORD PTR [R14+20000],R8D
            sub RDX,R15
.L_44c1b3:

            lea RAX,QWORD PTR [RDX-1]
            mov QWORD PTR [R14+19976],RDX
            cmp RAX,3
            ja .L_44c208

            test RBX,RBX
            je .L_44c208

            test R11B,1
            jne .L_44c208

            lea RSI,QWORD PTR [R12+R15*1]
            lea RDI,QWORD PTR [R14+19984]
            mov DWORD PTR [RSP+56],R11D
            mov QWORD PTR [RSP+40],R10
            call memcpy@PLT

            mov RAX,QWORD PTR [R14+304]
            mov RSI,R15
            mov R10,QWORD PTR [RSP+40]
            mov R11D,DWORD PTR [RSP+56]
            jmp .L_44b96f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c208:

            mov QWORD PTR [R14+19976],0
            mov RAX,QWORD PTR [R14+304]
            jmp .L_44b96f
          .byte 0x90
.L_44c220:

            movzx EDX,BYTE PTR [RAX+4]
            sub EDX,1
            cmp DL,253
            jbe .L_44c0f0
.L_44c230:

            mov EDX,DWORD PTR [RSP+56]
            mov ECX,DWORD PTR [RAX+1]
            add EDX,EDI
            sub ECX,EDX
            mov EDX,ECX
.L_44c23d:

            mov ECX,EDX
            mov BYTE PTR [RAX+2],DH
            mov BYTE PTR [RAX+1],DL
            shr ECX,24
            and ECX,1
            neg ECX
            mov BYTE PTR [RAX+4],CL
            mov ECX,EDX
            shr ECX,16
            mov BYTE PTR [RAX+3],CL
            lea RAX,QWORD PTR [RDI+5]
            jmp .L_44c0ff
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c268:

            mov R14,QWORD PTR [RSP]
            mov ECX,EAX
            lea RDX,QWORD PTR [RIP+.L_450cd1]
            jmp .L_44bf55
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c280:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_450cea]
            jmp .L_44b83b
.L_44c290:

            mov DWORD PTR [R14+660],4294967295
            mov RAX,-30
            jmp .L_44b851
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c2b0:

            mov RBX,QWORD PTR [RSP+40]
            mov RSI,RBP
            xor R10D,R10D
            jmp .L_44b94c
.L_44c2c0:

            movzx EDX,BYTE PTR [RAX+4]
            xor R8D,R8D
            sub EDX,1
            cmp DL,253
            jbe .L_44c0f0

            jmp .L_44c230
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c2e0:

            mov RDX,RSI
            xor R15D,R15D
            jmp .L_44c1b3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c2f0:

            mov R14,QWORD PTR [RSP]
.L_44c2f4:

            lea RDX,QWORD PTR [RIP+.L_450d37]
            jmp .L_44b83b
.L_44c300:

            mov R14,QWORD PTR [RSP]
.L_44c304:

            lea RDX,QWORD PTR [RIP+.L_450ca0]
            jmp .L_44bc98
.L_44c310:

            mov RSI,RBP
            mov RBX,QWORD PTR [RSP+40]
            mov R10,RAX
            sub RSI,RAX
            xor EDI,EDI
            jmp .L_44b94c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44c328:

            mov R11D,DWORD PTR [RSP+40]
            mov R15,RAX
            jmp .L_44c195
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44c338:

            mov R13,R14
            mov R14,QWORD PTR [RSP]
            jmp .L_44ba2d
.L_44c344:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_450cba]
            jmp .L_44b83b
.L_44c354:

            mov R13,R14
            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_4508d8]
            mov DWORD PTR [R13+660],4294967295
            mov ESI,4294967295
            mov RDI,R14
            call .L_43f5d0

            mov RAX,-30
            jmp .L_44b851
.L_44c386:

            mov R14,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_450898]
            jmp .L_44b83b
.L_44c396:

            call __stack_chk_fail@PLT
.L_44c39b:

            test RBP,RBP
            je .L_44c3ba

            test R11B,R11B
            jne .L_44c3ba

            mov QWORD PTR [RSP+16],RBP
            mov QWORD PTR [RSP+24],R12
            mov R13,RBP
            mov RDI,R12
            jmp .L_44b7f3
.L_44c3ba:

            xor EBP,EBP
            jmp .L_44c015
.L_44c3c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c3d0:

            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov R12,RDI
            mov RBP,RDX
            sub RSP,24
.L_44c3e3:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+296],0
            jne .L_44c415

            cmp QWORD PTR [RBX+304],-1
            je .L_44c4a0
.L_44c415:

            mov RDI,QWORD PTR [RBX+224]
            test RDI,RDI
            je .L_44c4e9

            mov RDX,QWORD PTR [RBX+240]
            cmp RDX,RCX
            jb .L_44c480
.L_44c431:

            cmp RBP,RDX
            ja .L_44c478

            mov RCX,RDX
            mov RAX,RBP
            mov RDX,RBP
            sub RCX,RBP
.L_44c442:

            mov QWORD PTR [R13],RDI
            add QWORD PTR [RBX+224],RDX
.L_44c44d:

            mov QWORD PTR [RBX+240],RCX
.L_44c454:

            mov RSI,QWORD PTR [RSP+8]
            xor RSI,QWORD PTR FS:[40]
            jne .L_44c539

            add RSP,24
.L_44c46c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44c478:

            mov RAX,RDX
            xor ECX,ECX
            jmp .L_44c442
          .byte 0x90
.L_44c480:

            mov RSI,RCX
            mov RDI,R12
            call .L_44b660

            test RAX,RAX
            js .L_44c50b

            mov RDX,QWORD PTR [RBX+240]
            mov RDI,QWORD PTR [RBX+224]
            jmp .L_44c431
.L_44c4a0:

            mov RDX,RSP
            mov ESI,1
            call .L_4049e0

            mov QWORD PTR [R13],RAX
            mov RAX,QWORD PTR [RSP]
            test RAX,RAX
            jle .L_44c517

            mov RCX,QWORD PTR [RBX+240]
            mov RDX,RAX
            cmp RCX,RAX
            jae .L_44c4cf

            mov RAX,RCX
            mov RDX,RCX
.L_44c4cf:

            cmp RBP,RDX
            jae .L_44c4da

            mov RAX,RBP
            mov RDX,RBP
.L_44c4da:

            mov QWORD PTR [RBX+288],RDX
            sub RCX,RDX
            jmp .L_44c44d
.L_44c4e9:

            lea RDX,QWORD PTR [RIP+.L_450d37]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,R12
            call .L_43f5d0

            mov RAX,-30
            jmp .L_44c454
.L_44c50b:

            mov RAX,-30
            jmp .L_44c454
.L_44c517:

            lea RDX,QWORD PTR [RIP+.L_450d4d]
            xor EAX,EAX
            mov ESI,84
            mov RDI,R12
            call .L_43f5d0

            mov RAX,-30
            jmp .L_44c454
.L_44c539:

            call __stack_chk_fail@PLT
.L_44c53e:

            nop
            nop
.L_44c540:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,8
.L_44c54d:

            mov RDI,QWORD PTR [RDI+16]
            call free@PLT

            mov RDI,QWORD PTR [R12+40]
            call free@PLT

            mov RDI,QWORD PTR [R12+24]
            call free@PLT

            mov RDI,QWORD PTR [R12+32]
            call free@PLT

            mov RDI,QWORD PTR [R12+56]
            test RDI,RDI
            je .L_44c605

            cmp QWORD PTR [R12+48],0
            je .L_44c600

            xor R13D,R13D
            xor EAX,EAX
            nop
.L_44c590:

            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RDX*4]
            lea RBX,QWORD PTR [RDI+RAX*8]
            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_44c5d2

            cmp QWORD PTR [RBX],0
            je .L_44c5cd

            xor EBP,EBP
            xor EAX,EAX
            nop
.L_44c5b0:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RDI,QWORD PTR [RDI+RAX*8+32]
            call free@PLT

            lea EAX,DWORD PTR [RBP+1]
            cmp RAX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RBX+8]
            mov RBP,RAX
            jb .L_44c5b0
.L_44c5cd:

            call free@PLT
.L_44c5d2:

            mov RDI,QWORD PTR [RBX+24]
            call free@PLT

            mov RDI,QWORD PTR [RBX+40]
            call free@PLT

            mov RDI,QWORD PTR [RBX+64]
            call free@PLT

            lea EAX,DWORD PTR [R13+1]
            cmp RAX,QWORD PTR [R12+48]
            mov RDI,QWORD PTR [R12+56]
            mov R13,RAX
            jb .L_44c590
.L_44c600:

            call free@PLT
.L_44c605:

            mov RDI,QWORD PTR [R12+80]
            call free@PLT

            mov RDI,QWORD PTR [R12+88]
            call free@PLT

            mov RDI,QWORD PTR [R12+96]
            add RSP,8
.L_44c622:

            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp free@PLT
.L_44c62d:

            nop
            nop
            nop
.L_44c630:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_44c639:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov RDI,RBX
            call .L_44c540

            mov RDI,QWORD PTR [RBX+160]
            call free@PLT

            mov RDI,QWORD PTR [RBX+176]
            call free@PLT

            mov ESI,DWORD PTR [RBX+448]
            test ESI,ESI
            jne .L_44c710

            mov ECX,DWORD PTR [RBX+536]
            test ECX,ECX
            jne .L_44c72a
.L_44c67f:

            mov EDX,DWORD PTR [RBX+656]
            test EDX,EDX
            jne .L_44c752
.L_44c68d:

            mov EAX,DWORD PTR [RBX+19968]
            test EAX,EAX
            je .L_44c6ab

            lea RDI,QWORD PTR [RBX+664]
            lea RSI,QWORD PTR [RIP+.L_65b6e0]
            call QWORD PTR [RIP+.L_65ad50]
.L_44c6ab:

            mov RDI,QWORD PTR [RBX+216]
            call free@PLT

            mov RDI,QWORD PTR [RBX+20016]
            call free@PLT

            mov RDI,QWORD PTR [RBX+20024]
            call free@PLT

            mov RDI,QWORD PTR [RBX+20032]
            call free@PLT

            mov RDI,QWORD PTR [RBX+20088]
            call free@PLT

            mov RDI,RBX
            call free@PLT

            mov RAX,QWORD PTR [RBP+2472]
            mov QWORD PTR [RAX],0
            add RSP,8
.L_44c701:

            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c710:

            lea RDI,QWORD PTR [RBX+312]
            call lzma_end@PLT

            mov ECX,DWORD PTR [RBX+536]
            test ECX,ECX
            je .L_44c67f
.L_44c72a:

            lea RDI,QWORD PTR [RBX+456]
            call BZ2_bzDecompressEnd@PLT

            test EAX,EAX
            jne .L_44c790
.L_44c73a:

            mov EDX,DWORD PTR [RBX+656]
            mov DWORD PTR [RBX+536],0
            test EDX,EDX
            je .L_44c68d
.L_44c752:

            lea RDI,QWORD PTR [RBX+544]
            call inflateEnd@PLT

            test EAX,EAX
            jne .L_44c778
.L_44c762:

            mov DWORD PTR [RBX+656],0
            jmp .L_44c68d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c778:

            lea RDX,QWORD PTR [RIP+.L_450930]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44c762
.L_44c790:

            lea RDX,QWORD PTR [RIP+.L_450908]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44c73a
.L_44c7a8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44c7b0:

            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RBX,RSI
            sub RSP,144
.L_44c7c5:

            mov R8,QWORD PTR [RDX]
            mov QWORD PTR [RSI+304],-1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            cmp R8,197633
            mov QWORD PTR [RSI+296],R8
            je .L_44c8c9

            jbe .L_44c8c0

            cmp R8,262408
            je .L_44c8c9

            cmp R8,262658
            je .L_44c8c9
.L_44c81a:

            cmp R8,50528539
            je .L_44cca0

            ja .L_44c980

            cmp R8,196865
            je .L_44cb50

            jbe .L_44c930

            cmp R8,262408
            je .L_44ccb0

            jbe .L_44ca18

            cmp R8,262658
            jne .L_44cc90

            mov ECX,DWORD PTR [RBX+536]
            lea R12,QWORD PTR [RBX+456]
            test ECX,ECX
            jne .L_44cd78
.L_44c875:

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,R12
            call BZ2_bzDecompressInit@PLT

            cmp EAX,-3
            je .L_44ce18
.L_44c88a:

            test EAX,EAX
            jne .L_44cf84

            mov DWORD PTR [RBX+536],1
            mov QWORD PTR [RBX+468],0
            mov QWORD PTR [RBX+492],0
            jmp .L_44c950
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c8c0:

            test R8,R8
            jne .L_44c81a
.L_44c8c9:

            test RCX,RCX
            je .L_44c81a

            mov RAX,QWORD PTR [RCX]
            cmp RAX,50528515
            je .L_44c8e9

            cmp RAX,50528539
            jne .L_44cd4f
.L_44c8e9:

            cmp RAX,50528515
            mov QWORD PTR [RBX+304],RAX
            mov DWORD PTR [RBX+19972],0
            jne .L_44c81a

            movabs RAX,21474836480
            mov QWORD PTR [RBX+19992],-1
            mov QWORD PTR [RBX+20000],RAX
            jmp .L_44c81a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c930:

            cmp R8,3
            je .L_44cca0

            cmp R8,33
            je .L_44cb50

            xor EAX,EAX
            test R8,R8
            jne .L_44cb37

            nop
.L_44c950:

            mov RSI,QWORD PTR [RSP+136]
            xor RSI,QWORD PTR FS:[40]
            jne .L_44cfeb

            add RSP,144
.L_44c96e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44c980:

            cmp R8,50530049
            je .L_44cca0

            jbe .L_44cb10

            cmp R8,116457729
            je .L_44c9b8

            jbe .L_44ce00

            cmp R8,116458243
            je .L_44c9b8

            cmp R8,116459265
            jne .L_44cb37
.L_44c9b8:

            mov RDI,QWORD PTR [RBP+160]
            test RDI,RDI
            je .L_44c9f0

            mov ESI,1
            call .L_446a10

            mov RDI,QWORD PTR [RBP+160]
            mov ESI,1
            call .L_4469f0

            mov R8,QWORD PTR [RBX+296]
            mov DWORD PTR [RBX+20728],1
.L_44c9f0:

            lea RDX,QWORD PTR [RIP+.L_4509f8]
            mov RCX,R8
.L_44c9fa:

            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0
.L_44ca09:

            mov EAX,4294967271
            jmp .L_44c950
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ca18:

            cmp R8,197633
            jne .L_44cb37

            mov EAX,DWORD PTR [RBX+19968]
            test EAX,EAX
            je .L_44ca55

            mov QWORD PTR [RSP],RDX
            lea RDI,QWORD PTR [RBX+664]
            lea RSI,QWORD PTR [RIP+.L_65b6e0]
            call QWORD PTR [RIP+.L_65ad50]

            mov RDX,QWORD PTR [RSP]
            mov DWORD PTR [RBX+19968],0
.L_44ca55:

            cmp QWORD PTR [RDX+24],4
            jbe .L_44cf64

            mov RAX,QWORD PTR [RDX+32]
            movzx R13D,BYTE PTR [RAX]
            mov R14D,DWORD PTR [RAX+1]
            lea EAX,DWORD PTR [R13-2]
            cmp EAX,62
            ja .L_44cf64

            lea EAX,DWORD PTR [R14-2048]
            cmp EAX,4294965211
            ja .L_44cf64

            lea R12,QWORD PTR [RBX+664]
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad40]

            lea RDX,QWORD PTR [RIP+.L_65b6e0]
            mov ESI,R14D
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad48]

            test EAX,EAX
            je .L_44cff0

            mov ESI,R13D
            mov RDI,R12
            call QWORD PTR [RIP+.L_65ad58]

            lea RDI,QWORD PTR [RBX+19848]
            call QWORD PTR [RIP+.L_65ad60]

            mov DWORD PTR [RBX+19968],1
            mov DWORD PTR [RBX+660],0
            xor EAX,EAX
            mov DWORD PTR [RBX+19960],0
            mov QWORD PTR [RBX+19928],0
            mov QWORD PTR [RBX+19952],0
            jmp .L_44c950
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44cb10:

            cmp R8,50529281
            je .L_44cca0

            cmp R8,50529537
            je .L_44cca0

            cmp R8,50528773
            je .L_44cca0
.L_44cb37:

            mov RCX,R8
            lea RDX,QWORD PTR [RIP+.L_450dde]
            jmp .L_44c9fa
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44cb50:

            mov ESI,DWORD PTR [RBX+448]
            test ESI,ESI
            jne .L_44cd90
.L_44cb5e:

            test RCX,RCX
            je .L_44cdf0

            mov RCX,QWORD PTR [RCX]
            mov QWORD PTR [RSP+72],0
            cmp RCX,50528773
            mov QWORD PTR [RBX+304],RCX
            je .L_44cf38

            jbe .L_44cd10

            cmp RCX,50529537
            je .L_44cefe

            jbe .L_44ce30

            cmp RCX,50530049
            je .L_44cf1b

            cmp RCX,50530309
            jne .L_44cd34

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],9
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            nop
            nop
            nop
            nop
            nop
            nop
.L_44cbd8:

            cmp QWORD PTR [RBX+296],33
            je .L_44cdd8
.L_44cbe6:

            movsxd R12,R13D
            movabs RSI,4611686018427387905
            mov RAX,R12
            shl RAX,4
            mov QWORD PTR [RSP+RAX*1+64],RSI
.L_44cbff:

            mov RCX,QWORD PTR [RDX+24]
            mov RDX,QWORD PTR [RDX+32]
            shl R12,4
            xor ESI,ESI
            mov QWORD PTR [RSP+R12*1+72],0
            call lzma_properties_decode@PLT

            test EAX,EAX
            jne .L_44cf55

            lea EAX,DWORD PTR [R13+1]
            lea RDI,QWORD PTR [RBX+312]
            mov RSI,R14
            cdqe 
            shl RAX,4
            mov QWORD PTR [RSP+RAX*1+64],-1
            mov QWORD PTR [RSP+RAX*1+72],0
            call lzma_raw_decoder@PLT

            mov RDI,QWORD PTR [RSP+R12*1+72]
            mov DWORD PTR [RSP],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP]
            test EAX,EAX
            jne .L_44cf55

            mov DWORD PTR [RBX+448],1
            mov QWORD PTR [RBX+328],0
            mov QWORD PTR [RBX+352],0
            jmp .L_44c950
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44cc90:

            cmp R8,50528515
            jne .L_44cb37

            nop
            nop
            nop
.L_44cca0:

            mov RCX,R8
            lea RDX,QWORD PTR [RIP+.L_450da5]
            jmp .L_44c9fa
          .byte 0x90
.L_44ccb0:

            mov EDX,DWORD PTR [RBX+656]
            lea RDI,QWORD PTR [RBX+544]
            test EDX,EDX
            je .L_44ccf8

            call inflateReset@PLT
.L_44ccc6:

            test EAX,EAX
            jne .L_44cfd4

            mov DWORD PTR [RBX+656],1
            mov QWORD PTR [RBX+560],0
            mov QWORD PTR [RBX+584],0
            jmp .L_44c950
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ccf8:

            lea RDX,QWORD PTR [RIP+.L_450dbe]
            mov ECX,112
            mov ESI,4294967281
            call inflateInit2_@PLT

            jmp .L_44ccc6
.L_44cd10:

            cmp RCX,50528515
            je .L_44ceba

            cmp RCX,50528539
            je .L_44cea0

            cmp RCX,3
            je .L_44ce5a
.L_44cd34:

            lea RDX,QWORD PTR [RIP+.L_450da5]
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44ca09
.L_44cd4f:

            lea RDX,QWORD PTR [RIP+.L_450958]
            mov RCX,RAX
            mov ESI,4294967295
            xor EAX,EAX
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967271
            jmp .L_44c950
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44cd78:

            mov RDI,R12
            call BZ2_bzDecompressEnd@PLT

            mov DWORD PTR [RBX+536],0
            jmp .L_44c875
          .byte 0x90
.L_44cd90:

            lea RDI,QWORD PTR [RBX+312]
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call lzma_end@PLT

            mov DWORD PTR [RBX+448],0
            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            jmp .L_44cb5e
.L_44cdbd:

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],4
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            nop
            nop
            nop
.L_44cdd8:

            movsxd R12,R13D
            mov RAX,R12
            shl RAX,4
            mov QWORD PTR [RSP+RAX*1+64],33
            jmp .L_44cbff
.L_44cdf0:

            lea R14,QWORD PTR [RSP+64]
            xor R13D,R13D
            mov RDI,R14
            jmp .L_44cbd8
.L_44ce00:

            cmp R8,50530309
            je .L_44cca0

            jmp .L_44cb37
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ce18:

            mov EDX,1
            xor ESI,ESI
            mov RDI,R12
            call BZ2_bzDecompressInit@PLT

            jmp .L_44c88a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44ce30:

            cmp RCX,50529281
            jne .L_44cd34

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],6
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            jmp .L_44cbd8
.L_44ce5a:

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RSP+16]
            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],3
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+72],RAX
            mov R13D,1
            movaps XMMWORD PTR [RSP+16],XMM0
            lea RDI,QWORD PTR [R14+16]
            mov DWORD PTR [RSP+20],1
            movaps XMMWORD PTR [RSP+32],XMM0
            jmp .L_44cbd8
.L_44cea0:

            lea R14,QWORD PTR [RSP+64]
            mov DWORD PTR [RBX+19972],0
            xor R13D,R13D
            mov RDI,R14
            jmp .L_44cbd8
.L_44ceba:

            cmp QWORD PTR [RBX+296],33
            je .L_44cdbd

            lea R14,QWORD PTR [RSP+64]
            movabs RAX,21474836480
            mov DWORD PTR [RBX+19972],0
            mov QWORD PTR [RBX+19992],-1
            mov QWORD PTR [RBX+20000],RAX
            xor R13D,R13D
            mov RDI,R14
            jmp .L_44cbe6
.L_44cefe:

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],7
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            jmp .L_44cbd8
.L_44cf1b:

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],8
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            jmp .L_44cbd8
.L_44cf38:

            lea R14,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+64],5
            mov R13D,1
            lea RDI,QWORD PTR [R14+16]
            jmp .L_44cbd8
.L_44cf55:

            mov ESI,EAX
            mov RDI,RBP
            call .L_44b4c0

            jmp .L_44ca09
.L_44cf64:

            lea RDX,QWORD PTR [RIP+.L_450dc5]
.L_44cf6b:

            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967271
            jmp .L_44c950
.L_44cf84:

            cmp EAX,-3
            je .L_44cfdd

            cmp EAX,-2
            mov ESI,4294967295
            lea RCX,QWORD PTR [RIP+.L_450d67]
            je .L_44cfaf

            cmp EAX,-9
            lea RCX,QWORD PTR [RIP+.L_450d82]
            lea RAX,QWORD PTR [RIP+.L_450d7f]
            cmovne RCX,RAX
.L_44cfaf:

            lea RDX,QWORD PTR [RIP+.L_450978]
            xor EAX,EAX
            mov RDI,RBP
            call .L_43f5d0

            mov DWORD PTR [RBX+536],0
            mov EAX,4294967271
            jmp .L_44c950
.L_44cfd4:

            lea RDX,QWORD PTR [RIP+.L_4509a8]
            jmp .L_44cf6b
.L_44cfdd:

            mov ESI,12
            lea RCX,QWORD PTR [RIP+.L_450d97]
            jmp .L_44cfaf
.L_44cfeb:

            call __stack_chk_fail@PLT
.L_44cff0:

            lea RDX,QWORD PTR [RIP+.L_4509d0]
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_44c950
.L_44d00e:

            nop
            nop
.L_44d010:

            push RBP
            push RBX
            sub RSP,8
.L_44d016:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            mov EAX,DWORD PTR [RBX+276]
            test EAX,EAX
            je .L_44d09b

            mov ECX,DWORD PTR [RBX+272]
            mov RSI,QWORD PTR [RBX+16]
            mov RSI,QWORD PTR [RSI+RCX*8]
            mov RDX,RCX
            mov QWORD PTR [RBX+280],RSI
            mov RSI,QWORD PTR [RBX+40]
            mov RBP,QWORD PTR [RSI+RCX*8]
            cmp QWORD PTR [RBX+248],RBP
            jne .L_44d070
.L_44d053:

            sub EAX,1
            add EDX,1
            mov DWORD PTR [RBX+276],EAX
            mov DWORD PTR [RBX+272],EDX
            xor EAX,EAX
.L_44d067:

            add RSP,8
.L_44d06b:

            pop RBX
            pop RBP
            ret 

            nop
            nop
.L_44d070:

            mov RSI,QWORD PTR [RBX+136]
            xor EDX,EDX
            add RSI,RBP
            call .L_404dd0

            test RAX,RAX
            js .L_44d0b3

            mov QWORD PTR [RBX+248],RBP
            mov EDX,DWORD PTR [RBX+272]
            mov EAX,DWORD PTR [RBX+276]
            jmp .L_44d053
.L_44d09b:

            lea RDX,QWORD PTR [RIP+.L_450d37]
            mov ESI,4294967295
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_44d067
.L_44d0b3:

            mov EAX,4294967266
            jmp .L_44d067
.L_44d0ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_44d0c0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            lea R13,QWORD PTR [RIP+.L_450e03]
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,216
.L_44d0de:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            test EDX,EDX
            mov RBX,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RIP+.L_450df4]
            cmovne R13,RAX
            lea R12,QWORD PTR [RBX+20016]
            lea R14,QWORD PTR [RBX+20040]
.L_44d116:

            mov RDI,QWORD PTR [R12]
            test RDI,RDI
            je .L_44d124

            call free@PLT
.L_44d124:

            mov QWORD PTR [R12],0
            add R12,8
            cmp R12,R14
            jne .L_44d116

            mov R11,QWORD PTR [R15+32]
            mov EAX,DWORD PTR [R15+88]
            mov RDI,R15
            mov DWORD PTR [RBX+276],R11D
            mov DWORD PTR [RBX+272],EAX
            call .L_44aee0

            mov RCX,QWORD PTR [R15]
            mov QWORD PTR [RBX+264],RAX
            mov QWORD PTR [RBX+240],0
            mov R14,QWORD PTR [R15+8]
            test RCX,RCX
            je .L_44d340

            xor ESI,ESI
            xor EDX,EDX
            xor EAX,EAX
.L_44d17a:

            lea RAX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [R14+RAX*8]
            cmp RAX,116457729
            je .L_44d2c4

            ja .L_44d2b0

            cmp RAX,50528539
            sete AL
            movzx EAX,AL
            add ESI,EAX
.L_44d1a2:

            lea EAX,DWORD PTR [RDX+1]
            cmp RAX,RCX
            mov RDX,RAX
            jb .L_44d17a

            cmp DWORD PTR [RBX+20728],-1
            jne .L_44d1c0

            mov DWORD PTR [RBX+20728],0
.L_44d1c0:

            cmp RCX,2
            jbe .L_44d658

            test ESI,ESI
            je .L_44d678

            cmp ESI,1
            jg .L_44d678

            xor R8D,R8D
.L_44d1de:

            lea RAX,QWORD PTR [RIP+.L_450c60]
            cmp RCX,4
            mov QWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+88],RAX
            mov QWORD PTR [RSP+96],RAX
            mov RAX,-1
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+144],RAX
            mov QWORD PTR [RSP+152],RAX
            mov QWORD PTR [RSP+160],RAX
            movabs RAX,4294967296
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+68],RAX
            mov DWORD PTR [RSP+76],2
            je .L_44d5e0
.L_44d276:

            test R8,R8
            je .L_44d28e

            cmp QWORD PTR [R8],50528539
            jne .L_44d28e

            cmp R11D,4
            je .L_44d374
.L_44d28e:

            lea RDX,QWORD PTR [RIP+.L_450aa8]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_44d313
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d2b0:

            cmp RAX,116458243
            je .L_44d2c4

            cmp RAX,116459265
            jne .L_44d1a2
.L_44d2c4:

            mov RDI,QWORD PTR [RBP+160]
            mov DWORD PTR [RBX+20728],1
            test RDI,RDI
            je .L_44d2f5

            mov ESI,1
            call .L_4469f0

            mov RDI,QWORD PTR [RBP+160]
            mov ESI,1
            call .L_446a10
.L_44d2f5:

            lea RDX,QWORD PTR [RIP+.L_450a28]
            mov RCX,R13
.L_44d2ff:

            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            call .L_43f5d0
.L_44d30e:

            mov EAX,4294967266
.L_44d313:

            mov RCX,QWORD PTR [RSP+200]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44d717

            add RSP,216
.L_44d331:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44d340:

            xor R8D,R8D
            cmp DWORD PTR [RBX+20728],-1
            je .L_44d368
.L_44d34c:

            mov RCX,R8
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBP
            call .L_44c7b0

            test EAX,EAX
            je .L_44d313

            jmp .L_44d30e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d368:

            mov DWORD PTR [RBX+20728],0
            jmp .L_44d34c
.L_44d374:

            cmp QWORD PTR [R15+48],5
            jne .L_44d28e

            cmp QWORD PTR [R15+56],2
            jne .L_44d28e

            mov RAX,QWORD PTR [R15+64]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RBX+20008],RAX
.L_44d398:

            mov RDI,RBP
            mov QWORD PTR [RSP],R8
            call .L_44d010

            test EAX,EAX
            js .L_44d313

            mov RAX,QWORD PTR [RBX+280]
            mov RDI,RBP
            lea R13,QWORD PTR [RSP+176]
            xor R12D,R12D
            mov QWORD PTR [RBX+288],RAX
            call .L_44b620

            lea RAX,QWORD PTR [RSP+80]
            mov R8,QWORD PTR [RSP]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+16],RAX
.L_44d3e5:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,RBP
            mov QWORD PTR [RSP+24],R8
            mov RDX,QWORD PTR [RAX+R12*1]
            mov QWORD PTR [RSP],RDX
            call .L_44d010

            test EAX,EAX
            mov RDX,QWORD PTR [RSP]
            mov R8,QWORD PTR [RSP+24]
            js .L_44d6a4

            mov RAX,QWORD PTR [RSP+R12*1+144]
            cmp RAX,-1
            je .L_44d691

            mov QWORD PTR [RBX+264],RAX
.L_44d429:

            xor ECX,ECX
            mov RSI,RBX
            mov RDI,RBP
            mov QWORD PTR [RSP],R8
            call .L_44c7b0

            test EAX,EAX
            mov R8,QWORD PTR [RSP]
            jne .L_44d7c6

            mov RDI,QWORD PTR [RBX+264]
            mov QWORD PTR [RSP+24],R8
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+R12*1+112],RAX
            mov R8,QWORD PTR [RSP+24]
            jne .L_44d50c

            jmp .L_44d785
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d478:

            xor ESI,ESI
            mov RDI,RBP
            mov QWORD PTR [RSP+24],R8
            call .L_44b660

            test EAX,EAX
            mov R8,QWORD PTR [RSP+24]
            js .L_44d6a4

            mov RDX,QWORD PTR [RBX+240]
            mov RSI,QWORD PTR [RSP+16]
            xor ECX,ECX
            mov RDI,RBP
            mov QWORD PTR [RSP+24],R8
            call .L_44c3d0

            test RAX,RAX
            mov RCX,RAX
            mov R8,QWORD PTR [RSP+24]
            js .L_44d6e7

            mov R11,QWORD PTR [R13]
            mov RAX,QWORD PTR [RSP]
            mov RDX,RCX
            mov RSI,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+40],R8
            mov QWORD PTR [RSP+24],RCX
            lea RDI,QWORD PTR [RAX+R11*1]
            mov QWORD PTR [RSP+32],R11
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+40]
            add RCX,R11
            cmp QWORD PTR [RBX+288],0
            mov QWORD PTR [R13],RCX
            jne .L_44d6d0
.L_44d50c:

            cmp QWORD PTR [RBX+280],0
            jne .L_44d478

            add R12,8
            add R13,8
            cmp R12,24
            jne .L_44d3e5

            lea RCX,QWORD PTR [RSP+68]
            xor EAX,EAX
.L_44d533:

            movsxd RDX,DWORD PTR [RCX+RAX*4]
            mov RSI,QWORD PTR [RSP+RDX*8+112]
            mov RDX,QWORD PTR [RSP+RDX*8+176]
            mov QWORD PTR [RBX+RAX*8+20016],RSI
            mov QWORD PTR [RBX+RAX*8+20040],RDX
            mov QWORD PTR [RBX+RAX*8+20064],RDX
            add RAX,1
            cmp RAX,3
            jne .L_44d533

            cmp QWORD PTR [RBX+20088],0
            je .L_44d7f1
.L_44d574:

            mov EAX,DWORD PTR [R15+88]
            mov QWORD PTR [RBX+20104],0
            mov RDI,R15
            mov QWORD PTR [RBX+20112],0
            mov QWORD PTR [RBX+19976],0
            mov QWORD PTR [RBX+20648],0
            mov DWORD PTR [RBX+276],1
            mov DWORD PTR [RBX+272],EAX
            mov QWORD PTR [RSP],R8
            call .L_44aee0

            mov QWORD PTR [RBX+240],0
            mov QWORD PTR [RBX+264],RAX
            mov R8,QWORD PTR [RSP]
            jmp .L_44d34c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d5e0:

            cmp QWORD PTR [R14+120],50528539
            jne .L_44d276

            cmp QWORD PTR [R15+48],7
            jne .L_44d276

            cmp QWORD PTR [R15+56],4
            jne .L_44d276

            cmp R11D,4
            jne .L_44d276

            mov RAX,QWORD PTR [R15+24]
            cmp QWORD PTR [RAX],5
            je .L_44d73c

            cmp QWORD PTR [R14],0
            mov RAX,QWORD PTR [R14+40]
            jne .L_44d71c

            test RAX,RAX
            jne .L_44d83c

            mov RAX,QWORD PTR [R15+64]
            lea RDX,QWORD PTR [R14+80]
.L_44d63b:

            mov RAX,QWORD PTR [RAX+16]
            lea R8,QWORD PTR [R14+120]
            mov R14,RDX
            mov QWORD PTR [RBX+20008],RAX
            jmp .L_44d398
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44d658:

            cmp ESI,1
            jg .L_44d678

            cmp RCX,2
            jne .L_44d687

            lea R8,QWORD PTR [R14+40]
.L_44d667:

            test ESI,ESI
            jne .L_44d1de

            jmp .L_44d34c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44d678:

            mov RCX,R13
            lea RDX,QWORD PTR [RIP+.L_450a60]
            jmp .L_44d2ff
.L_44d687:

            mov ECX,1
            xor R8D,R8D
            jmp .L_44d667
.L_44d691:

            mov RAX,QWORD PTR [RBX+280]
            mov QWORD PTR [RBX+264],RAX
            jmp .L_44d429
.L_44d6a4:

            mov RDI,QWORD PTR [RSP+112]
            mov DWORD PTR [RSP],EAX
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            mov EAX,DWORD PTR [RSP]
            jmp .L_44d313
.L_44d6d0:

            mov RDI,RBP
            mov QWORD PTR [RSP+24],R8
            call .L_44b620

            mov R8,QWORD PTR [RSP+24]
            jmp .L_44d50c
.L_44d6e7:

            mov RDI,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP],RAX
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            mov RCX,QWORD PTR [RSP]
            mov EAX,ECX
            jmp .L_44d313
.L_44d717:

            call __stack_chk_fail@PLT
.L_44d71c:

            test RAX,RAX
            jne .L_44d28e

            cmp QWORD PTR [R14+80],0
            jne .L_44d28e

            mov RDX,R14
            mov RAX,QWORD PTR [R15+64]
            jmp .L_44d63b
.L_44d73c:

            movabs RAX,8589934593
            mov DWORD PTR [RSP+76],0
            mov QWORD PTR [RSP+96],R14
            mov QWORD PTR [RSP+68],RAX
            lea RAX,QWORD PTR [R14+40]
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [R15+64]
            mov RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+152],RDX
            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+160],RDX
            lea RDX,QWORD PTR [R14+80]
            jmp .L_44d63b
.L_44d785:

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            lea RDX,QWORD PTR [RIP+.L_450870]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_44d313
.L_44d7c6:

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            mov EAX,4294967266
            jmp .L_44d313
.L_44d7f1:

            mov QWORD PTR [RBX+20096],32768
            mov EDI,32768
            mov QWORD PTR [RSP],R8
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBX+20088],RAX
            mov R8,QWORD PTR [RSP]
            jne .L_44d574

            lea RDX,QWORD PTR [RIP+.L_450870]
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_44d313
.L_44d83c:

            cmp QWORD PTR [R14+80],0
            jne .L_44d28e

            lea RDX,QWORD PTR [R14+40]
            mov RAX,QWORD PTR [R15+64]
            jmp .L_44d63b
.L_44d854:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44d860:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_44d86e:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+240],0
            jne .L_44d95c

            cmp QWORD PTR [RBX+280],0
            mov R15,RCX
            mov R14,RDX
            mov R12,RSI
            mov RBP,RDI
            jne .L_44d930

            mov R13,QWORD PTR [RBX+264]
            test R13,R13
            jne .L_44d930

            mov R8D,DWORD PTR [RBX+276]
            test R8D,R8D
            jne .L_44d999

            mov EDI,DWORD PTR [RBX+104]
            test EDI,EDI
            jne .L_44da59

            mov EAX,DWORD PTR [RBX+256]
            test EAX,EAX
            jne .L_44d90c

            mov RAX,QWORD PTR [RBX+168]
            mov RSI,QWORD PTR [RBX+56]
            mov EAX,DWORD PTR [RAX+16]
            lea RDX,QWORD PTR [RAX+RAX*2]
            test EAX,EAX
            mov RCX,RAX
            lea RDX,QWORD PTR [RAX+RDX*4]
            lea RDX,QWORD PTR [RSI+RDX*8]
            mov RDX,QWORD PTR [RDX+96]
            jne .L_44d903

            test RDX,RDX
            je .L_44da30
.L_44d903:

            mov DWORD PTR [RBX+256],ECX
            mov R13,RDX
.L_44d90c:

            cmp QWORD PTR [RBX+48],RAX
            ja .L_44d970

            mov QWORD PTR [R12],0
            add RSP,8
.L_44d91e:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
            nop
            nop
.L_44d930:

            xor ESI,ESI
            mov RDI,RBP
            call .L_44b660

            test RAX,RAX
            jns .L_44d950
.L_44d93f:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_44d950:

            mov RCX,R15
            mov RDX,R14
            mov RSI,R12
            mov RDI,RBP
.L_44d95c:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_44c3d0
          .byte 0x90
.L_44d970:

            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RDI,RBP
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RAX,QWORD PTR [RBX+56]
            lea RSI,QWORD PTR [RAX+RDX*8]
            xor EDX,EDX
            call .L_44d0c0

            test EAX,EAX
            jne .L_44da7b

            add DWORD PTR [RBX+256],1
.L_44d999:

            mov RDI,RBP
            call .L_44d010

            cdqe 
            test RAX,RAX
            js .L_44d93f

            xor ESI,ESI
            mov RDI,RBP
            call .L_44b660

            test RAX,RAX
            js .L_44d93f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44d9c0:

            test R13,R13
            je .L_44d950

            cmp QWORD PTR [RBX+240],0
            jne .L_44d9f6

            cmp QWORD PTR [RBX+280],0
            jne .L_44d9e3

            cmp QWORD PTR [RBX+264],0
            je .L_44da37
.L_44d9e3:

            xor ESI,ESI
            mov RDI,RBP
            call .L_44b660

            test RAX,RAX
            js .L_44d93f
.L_44d9f6:

            xor ECX,ECX
            mov RDX,R13
            mov RSI,R12
            mov RDI,RBP
            call .L_44c3d0

            test RAX,RAX
            js .L_44d93f

            sub R13,RAX
            cmp QWORD PTR [RBX+288],0
            je .L_44d9c0

            mov RDI,RBP
            call .L_44b620

            jmp .L_44d9c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44da30:

            xor EAX,EAX
            jmp .L_44d90c
.L_44da37:

            lea RDX,QWORD PTR [RIP+.L_450ca0]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_43f5d0

            mov RAX,-30
            jmp .L_44d93f
.L_44da59:

            lea RDX,QWORD PTR [RIP+.L_450e10]
            xor EAX,EAX
            mov ESI,4294967295
            mov RDI,RBP
            call .L_43f5d0

            mov RAX,-30
            jmp .L_44d93f
.L_44da7b:

            mov RAX,-30
            jmp .L_44d93f
.L_44da87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44da90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,24
.L_44daa1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov R12,QWORD PTR [RAX]
            cmp QWORD PTR [R12+288],0
            jne .L_44db68
.L_44daca:

            xor EAX,EAX
            cmp BYTE PTR [R12+208],0
            je .L_44db00
.L_44dad7:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44dbe8

            add RSP,24
.L_44daef:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44db00:

            mov RAX,QWORD PTR [RBP+2472]
            mov R15,QWORD PTR [R12+192]
            mov R13,QWORD PTR [RAX]
            mov EAX,DWORD PTR [R13+256]
            test EAX,EAX
            je .L_44db78

            test R15,R15
            mov RBX,R15
            mov R14,RSP
            jne .L_44db35

            jmp .L_44db98
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44db30:

            test RBX,RBX
            je .L_44db93
.L_44db35:

            xor ECX,ECX
            mov RDX,RBX
            mov RSI,R14
            mov RDI,RBP
            call .L_44d860

            test RAX,RAX
            js .L_44dbb8

            je .L_44dbc8

            sub RBX,RAX
            cmp QWORD PTR [R13+288],0
            je .L_44db30

            mov RDI,RBP
            call .L_44b620

            jmp .L_44db30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44db68:

            call .L_44b620

            jmp .L_44daca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44db78:

            mov RAX,QWORD PTR [R13+168]
            mov EAX,DWORD PTR [RAX+16]
            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RAX,QWORD PTR [R13+56]
            add QWORD PTR [RAX+RDX*8+96],R15
.L_44db93:

            test R15,R15
            js .L_44dbb8
.L_44db98:

            mov QWORD PTR [R12+192],0
            xor EAX,EAX
            mov BYTE PTR [R12+208],1
            jmp .L_44dad7
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44dbb8:

            mov EAX,4294967266
            jmp .L_44dad7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44dbc8:

            lea RDX,QWORD PTR [RIP+.L_450ca0]
            xor EAX,EAX
            mov ESI,84
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_44dad7
.L_44dbe8:

            call __stack_chk_fail@PLT
.L_44dbed:

            nop
            nop
            nop
.L_44dbf0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            mov R14,RCX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RSI
            sub RSP,24
.L_44dc0a:

            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp DWORD PTR [RBX+20728],-1
            jne .L_44dc27

            mov DWORD PTR [RBX+20728],0
.L_44dc27:

            cmp QWORD PTR [RBX+288],0
            jne .L_44dcd0
.L_44dc35:

            mov RAX,QWORD PTR [RBX+184]
            mov R13D,1
            mov QWORD PTR [R14],RAX
            mov QWORD PTR [R15],0
            mov QWORD PTR [R12],0
            cmp BYTE PTR [RBX+208],0
            je .L_44dc70
.L_44dc5d:

            add RSP,24
.L_44dc61:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_44dc70:

            mov RDX,QWORD PTR [RBX+192]
            xor ECX,ECX
            mov RSI,R12
            mov RDI,RBP
            call .L_44d860

            test RAX,RAX
            mov R9,RAX
            mov R13D,EAX
            js .L_44dc5d

            je .L_44dd53

            sub QWORD PTR [RBX+192],RAX
            jne .L_44dca5

            mov BYTE PTR [RBX+208],1
.L_44dca5:

            mov RAX,QWORD PTR [RBX+168]
            xor R13D,R13D
            test BYTE PTR [RAX+24],8
            jne .L_44dce0
.L_44dcb5:

            mov QWORD PTR [R15],R9
            mov RAX,QWORD PTR [RBX+184]
            mov QWORD PTR [R14],RAX
            add QWORD PTR [RBX+184],R9
            jmp .L_44dc5d
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44dcd0:

            mov RDI,RBP
            call .L_44b620

            jmp .L_44dc35
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44dce0:

            mov RDI,QWORD PTR [RBX+200]
            mov RSI,QWORD PTR [R12]
            mov EDX,R9D
            mov QWORD PTR [RSP+8],R9
            call crc32@PLT

            cmp BYTE PTR [RBX+208],0
            mov QWORD PTR [RBX+200],RAX
            mov R9,QWORD PTR [RSP+8]
            je .L_44dcb5

            mov RDX,QWORD PTR [RBX+168]
            test BYTE PTR [RDX+24],8
            je .L_44dcb5

            mov ECX,DWORD PTR [RDX+20]
            mov RDX,QWORD PTR [RBX+96]
            mov R8D,DWORD PTR [RDX+RCX*4]
            cmp RAX,R8
            je .L_44dcb5

            lea RDX,QWORD PTR [RIP+.L_450ad0]
            mov RCX,RAX
            mov ESI,4294967295
            mov RDI,RBP
            xor EAX,EAX
            mov R13D,4294967276
            call .L_43f5d0

            mov R9,QWORD PTR [RSP+8]
            jmp .L_44dcb5
.L_44dd53:

            lea RDX,QWORD PTR [RIP+.L_450ca0]
            mov ESI,84
            mov RDI,RBP
            xor EAX,EAX
            mov R13D,4294967266
            call .L_43f5d0

            jmp .L_44dc5d
.L_44dd74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44dd80:

            push R12
            push RBP
            push RBX
            sub RSP,16
.L_44dd88:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RBX,QWORD PTR [RAX]
            cmp QWORD PTR [RBX+112],RSI
            jb .L_44de48

            cmp QWORD PTR [RBX+288],0
            mov R12,RDI
            mov RBP,RSI
            jne .L_44de38
.L_44ddbc:

            mov EAX,DWORD PTR [RBX+108]
            test EAX,EAX
            je .L_44de10

            mov RSI,RSP
            mov RCX,RBP
            mov RDX,RBP
            mov RDI,R12
            call .L_44d860

            test RAX,RAX
            jle .L_44de48

            sub QWORD PTR [RBX+112],RAX
            mov R12,QWORD PTR [RSP]
.L_44dde1:

            mov RDI,QWORD PTR [RBX+120]
            mov EDX,EBP
            mov RSI,R12
            call crc32@PLT

            mov QWORD PTR [RBX+120],RAX
.L_44ddf3:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_44de4d

            add RSP,16
.L_44de0a:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_44de10:

            xor EDX,EDX
            mov RDI,R12
            mov RSI,RBP
            call .L_4049e0

            test RAX,RAX
            mov R12,RAX
            je .L_44de48

            sub QWORD PTR [RBX+112],RBP
            mov QWORD PTR [RBX+288],RBP
            jmp .L_44dde1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44de38:

            call .L_44b620

            jmp .L_44ddbc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44de48:

            xor R12D,R12D
            jmp .L_44ddf3
.L_44de4d:

            call __stack_chk_fail@PLT
.L_44de52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44de60:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov ESI,1
            push RBX
.L_44de70:

            mov R12,RDI
            call .L_44dd80

            test RAX,RAX
            je .L_44def0

            movzx R13D,BYTE PTR [RAX]
            xor EBX,EBX
            mov QWORD PTR [R14],0
            mov EBP,4294967168
            nop
.L_44de90:

            test R13B,BPL
            je .L_44ded0

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44def0

            movzx EAX,BYTE PTR [RAX]
            lea ECX,DWORD PTR [RBX*8]
            add EBX,1
            shr BPL,1
            shl RAX,CL
            or QWORD PTR [R14],RAX
            cmp EBX,8
            jne .L_44de90
.L_44dec2:

            xor EAX,EAX
.L_44dec4:

            pop RBX
.L_44dec5:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44ded0:

            sub EBP,1
            lea ECX,DWORD PTR [RBX*8]
            and EBP,R13D
            movzx EAX,BPL
            shl RAX,CL
            add QWORD PTR [R14],RAX
            jmp .L_44dec2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44def0:

            mov EAX,4294967295
            jmp .L_44dec4
.L_44def7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44df00:

            test RDX,RDX
            je .L_44df7e

            push R14
            xor EAX,EAX
            push R13
            mov R14,RSI
            push R12
            mov R13,RDI
            push RBP
            mov R12,RDX
            push RBX
.L_44df18:

            xor EDX,EDX
            xor EBP,EBP
            xor EBX,EBX
            jmp .L_44df36
.L_44df20:

            mov ECX,EAX
            shr EAX,1
.L_44df24:

            test ECX,EDX
            setne BYTE PTR [R14+RBX*1]
            lea EBX,DWORD PTR [RBP+1]
            cmp RBX,R12
            mov RBP,RBX
            jae .L_44df60
.L_44df36:

            test EAX,EAX
            jne .L_44df20

            mov ESI,1
            mov RDI,R13
            call .L_44dd80

            test RAX,RAX
            je .L_44df70

            movzx EDX,BYTE PTR [RAX]
            mov ECX,128
            mov EAX,64
            jmp .L_44df24
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44df60:

            pop RBX
.L_44df61:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44df70:

            pop RBX
            mov EAX,4294967295
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_44df7e:

            xor EAX,EAX
            ret 
.L_44df81:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44df90:

            test RDX,RDX
            je .L_44e081

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov RDI,RDX
            push RBX
.L_44dfa7:

            mov QWORD PTR [RSI+8],0
            mov R12,RSI
            mov R13,RDX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12],RAX
            je .L_44e073

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e073

            cmp BYTE PTR [RAX],0
            mov RDI,QWORD PTR [R12]
            mov RDX,R13
            je .L_44e060

            mov ESI,1
            call memset@PLT
.L_44dff3:

            mov ESI,4
            mov RDI,R13
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R12+8],RAX
            je .L_44e073

            xor EBP,EBP
            xor EBX,EBX
            jmp .L_44e01b
.L_44e010:

            lea EBX,DWORD PTR [RBP+1]
            cmp RBX,R13
            mov RBP,RBX
            jae .L_44e04c
.L_44e01b:

            mov RAX,QWORD PTR [R12]
            cmp BYTE PTR [RAX+RBX*1],0
            je .L_44e010

            mov ESI,4
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e073

            mov EDX,DWORD PTR [RAX]
            mov RAX,QWORD PTR [R12+8]
            mov DWORD PTR [RAX+RBX*4],EDX
            lea EBX,DWORD PTR [RBP+1]
            cmp RBX,R13
            mov RBP,RBX
            jb .L_44e01b
.L_44e04c:

            pop RBX
.L_44e04d:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e060:

            mov RSI,RDI
            mov RDI,R14
            call .L_44df00

            test EAX,EAX
            jns .L_44dff3
.L_44e073:

            pop RBX
            mov EAX,4294967295
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_44e081:

            mov EAX,4294967295
            ret 
.L_44e087:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44e090:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov RCX,RSI
            push RBP
            push RBX
            lea RBP,QWORD PTR [RSI+8]
            mov R13,RSI
            sub RSP,104
.L_44e0ab:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov RDI,RBP
            and RDI,-8
            sub RCX,RDI
            add ECX,104
            mov RBX,QWORD PTR [RAX]
            xor EAX,EAX
            shr ECX,3
            mov QWORD PTR [RSI],0
            mov QWORD PTR [RSI+96],0

            rep stosq QWORD PTR [RDI]

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            cmp AL,6
            je .L_44e160

            cmp AL,7
            je .L_44e2f8
.L_44e10a:

            cmp AL,8
            je .L_44e460
.L_44e112:

            test AL,AL
            setne AL
            movzx EAX,AL
            neg EAX
.L_44e11c:

            mov RBX,QWORD PTR [RSP+88]
            xor RBX,QWORD PTR FS:[40]
            jne .L_44eec7

            add RSP,104
.L_44e134:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_44e13f:

            mov RDI,QWORD PTR [RSP+64]
            call free@PLT

            mov RDI,QWORD PTR [RSP+72]
            call free@PLT

            nop
            nop
            nop
            nop
            nop
.L_44e158:

            mov EAX,4294967295
            jmp .L_44e11c
          .byte 0x90
.L_44e160:

            pxor XMM0,XMM0
            mov RSI,R13
            mov RDI,R14
            movups XMMWORD PTR [R13],XMM0
            movups XMMWORD PTR [R13+16],XMM0
            movups XMMWORD PTR [R13+32],XMM0
            call .L_44de60

            test EAX,EAX
            js .L_44e158

            mov RSI,RBP
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            js .L_44e158

            mov RAX,QWORD PTR [R13+8]
            sub RAX,1
            cmp RAX,99999999
            ja .L_44e158

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            je .L_44e274

            cmp AL,9
            jne .L_44e158

            mov RBP,QWORD PTR [R13+8]
            mov ESI,8
            mov RDI,RBP
            call calloc@PLT

            mov ESI,8
            mov QWORD PTR [R13+16],RAX
            mov RDI,RBP
            mov R12,RAX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R13+40],RAX
            je .L_44e158

            test R12,R12
            je .L_44e158

            test RBP,RBP
            je .L_44ebef

            xor EBP,EBP
            xor EAX,EAX
            jmp .L_44e224
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44e210:

            lea EAX,DWORD PTR [RBP+1]
            cmp RAX,QWORD PTR [R13+8]
            mov RBP,RAX
            jae .L_44ebef

            mov R12,QWORD PTR [R13+16]
.L_44e224:

            lea RSI,QWORD PTR [R12+RAX*8]
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            jns .L_44e210

            jmp .L_44e158
.L_44e239:

            mov R12,QWORD PTR [R13+8]
            mov ESI,1
            mov RDI,R12
            call calloc@PLT

            mov ESI,4
            mov RBP,RAX
            mov QWORD PTR [R13+24],RAX
            mov RDI,R12
            call calloc@PLT

            test RBP,RBP
            mov QWORD PTR [R13+32],RAX
            je .L_44e158

            test RAX,RAX
            je .L_44e158
.L_44e274:

            mov RSI,QWORD PTR [R13+40]
            test RSI,RSI
            je .L_44e158

            mov RDI,QWORD PTR [R13+16]
            test RDI,RDI
            je .L_44e158

            cmp QWORD PTR [R13+8],0
            mov RAX,QWORD PTR [R13]
            je .L_44e2d1

            mov QWORD PTR [RSI],RAX
            add RAX,QWORD PTR [RDI]
            cmp QWORD PTR [RBX+128],RAX
            jb .L_44e158

            xor ECX,ECX
            jmp .L_44e2c5
.L_44e2b0:

            mov QWORD PTR [RSI+RDX*8],RAX
            add RAX,QWORD PTR [RDI+RDX*8]
            cmp QWORD PTR [RBX+128],RAX
            jb .L_44e158
.L_44e2c5:

            lea EDX,DWORD PTR [RCX+1]
            cmp RDX,QWORD PTR [R13+8]
            mov RCX,RDX
            jb .L_44e2b0
.L_44e2d1:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            cmp AL,7
            jne .L_44e10a

            nop
            nop
            nop
            nop
            nop
            nop
.L_44e2f8:

            pxor XMM0,XMM0
            mov QWORD PTR [R13+64],0
            mov ESI,1
            mov RDI,R14
            lea RBX,QWORD PTR [R13+48]
            movups XMMWORD PTR [R13+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            call .L_44dd80

            test RAX,RAX
            je .L_44e438

            cmp BYTE PTR [RAX],11
            jne .L_44e438

            mov RSI,RBX
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            js .L_44e438

            cmp QWORD PTR [R13+48],100000000
            ja .L_44e158

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e438

            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            je .L_44e815

            cmp AL,1
            jne .L_44e7fa

            lea RSI,QWORD PTR [R13+64]
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            js .L_44e158

            cmp QWORD PTR [R13+64],100000000
            ja .L_44e158

            cmp QWORD PTR [R13+48],0
            jne .L_44e7fa
.L_44e3a8:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e438

            cmp BYTE PTR [RAX],12
            jne .L_44e438

            cmp QWORD PTR [R13+48],0
            je .L_44e65b

            xor R12D,R12D
            xor EAX,EAX
.L_44e3cf:

            lea RDX,QWORD PTR [RAX+RAX*2]
            mov ESI,8
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RAX,QWORD PTR [R13+56]
            lea RBP,QWORD PTR [RAX+RDX*8]
            mov RBX,QWORD PTR [RBP+56]
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+64],RAX
            je .L_44e438

            test RBX,RBX
            je .L_44e649

            xor EBX,EBX
            xor EDX,EDX
            jmp .L_44e424
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e410:

            lea EDX,DWORD PTR [RBX+1]
            cmp RDX,QWORD PTR [RBP+56]
            mov RBX,RDX
            jae .L_44e649

            mov RAX,QWORD PTR [RBP+64]
.L_44e424:

            lea RSI,QWORD PTR [RAX+RDX*8]
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            jns .L_44e410

            nop
            nop
            nop
            nop
.L_44e438:

            mov RDI,QWORD PTR [RSP+64]
            call free@PLT

            mov RDI,QWORD PTR [RSP+72]
            call free@PLT

            mov EAX,4294967295
            jmp .L_44e11c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e460:

            mov RBX,QWORD PTR [R13+48]
            pxor XMM0,XMM0
            mov RBP,QWORD PTR [R13+56]
            test RBX,RBX
            movups XMMWORD PTR [R13+72],XMM0
            movups XMMWORD PTR [R13+88],XMM0
            je .L_44e49c

            xor EDX,EDX
            xor EAX,EAX
            nop
.L_44e480:

            lea RCX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RCX*4]
            mov QWORD PTR [RBP+RAX*8+80],1
            lea EAX,DWORD PTR [RDX+1]
            cmp RBX,RAX
            mov RDX,RAX
            ja .L_44e480
.L_44e49c:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            mov QWORD PTR [RSP+32],RBX
            cmp EAX,13
            mov DWORD PTR [RSP+8],EAX
            je .L_44e786
.L_44e4c7:

            mov RAX,QWORD PTR [RSP+32]
            test RAX,RAX
            mov QWORD PTR [R13+72],RAX
            jne .L_44ec58

            mov R15,QWORD PTR [R13+80]
.L_44e4dd:

            test RBX,RBX
            je .L_44e599

            xor EDI,EDI
            mov QWORD PTR [RSP+40],R13
            xor EAX,EAX
            mov R13,R15
            mov QWORD PTR [RSP+16],RBX
            mov QWORD PTR [RSP+24],R14
            mov R15D,EDI
            jmp .L_44e529
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e508:

            mov RDI,R14
            add R13,8
            call .L_44aee0

            sub RAX,R12
            mov QWORD PTR [R13-8],RAX
.L_44e51b:

            lea EAX,DWORD PTR [R15+1]
            cmp QWORD PTR [RSP+16],RAX
            mov R15,RAX
            jbe .L_44e58a
.L_44e529:

            lea RCX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RCX*4]
            lea R14,QWORD PTR [RBP+RAX*8]
            mov RAX,QWORD PTR [R14+80]
            test RAX,RAX
            je .L_44e51b

            xor R12D,R12D
            cmp DWORD PTR [RSP+8],9
            jne .L_44e508

            cmp RAX,1
            jbe .L_44e508

            mov EBX,1
            jmp .L_44e574
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e560:

            add R13,8
            lea EAX,DWORD PTR [RBX+1]
            add R12,QWORD PTR [R13-8]
            cmp RAX,QWORD PTR [R14+80]
            mov RBX,RAX
            jae .L_44e508
.L_44e574:

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R13
            call .L_44de60

            test EAX,EAX
            jns .L_44e560

            jmp .L_44e158
.L_44e58a:

            mov RBX,QWORD PTR [RSP+16]
            mov R14,QWORD PTR [RSP+24]
            mov R13,QWORD PTR [RSP+40]
.L_44e599:

            cmp DWORD PTR [RSP+8],9
            je .L_44ee60
.L_44e5a4:

            mov RSI,QWORD PTR [RSP+32]
            test RSI,RSI
            je .L_44e5d6

            xor EDX,EDX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_44e5b8:

            mov RCX,QWORD PTR [R13+88]
            mov BYTE PTR [RCX+RAX*1],0
            mov RCX,QWORD PTR [R13+96]
            mov DWORD PTR [RCX+RAX*4],0
            lea EAX,DWORD PTR [RDX+1]
            cmp RSI,RAX
            mov RDX,RAX
            ja .L_44e5b8
.L_44e5d6:

            test RBX,RBX
            je .L_44eeae

            xor EDX,EDX
            xor EDI,EDI
            xor EAX,EAX
            nop
            nop
            nop
.L_44e5e8:

            lea RCX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RCX*4]
            lea RCX,QWORD PTR [RBP+RAX*8]
            mov RAX,QWORD PTR [RCX+80]
            cmp RAX,1
            je .L_44e641
.L_44e5ff:

            add EDI,EAX
.L_44e601:

            lea EAX,DWORD PTR [RDX+1]
            cmp RBX,RAX
            mov RDX,RAX
            ja .L_44e5e8
.L_44e60c:

            cmp DWORD PTR [RSP+8],10
            je .L_44ed60
.L_44e617:

            mov EAX,DWORD PTR [RSP+8]
            test EAX,EAX
            jne .L_44e158

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            jmp .L_44e112
.L_44e641:

            cmp BYTE PTR [RCX+72],0
            jne .L_44e601

            jmp .L_44e5ff
.L_44e649:

            lea EAX,DWORD PTR [R12+1]
            cmp RAX,QWORD PTR [R13+48]
            mov R12,RAX
            jb .L_44e3cf
.L_44e65b:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e438

            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            je .L_44e711

            cmp AL,10
            jne .L_44e438

            mov RDX,QWORD PTR [R13+48]
            lea RSI,QWORD PTR [RSP+64]
            mov RDI,R14
            call .L_44df90

            test EAX,EAX
            js .L_44e438

            mov RCX,QWORD PTR [R13+48]
            test RCX,RCX
            je .L_44e6de

            mov R9,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [R13+56]
            xor EDX,EDX
            mov RDI,QWORD PTR [RSP+72]
            xor EAX,EAX
.L_44e6b8:

            lea RSI,QWORD PTR [RAX+RAX*2]
            movzx R10D,BYTE PTR [R9+RAX*1]
            lea RSI,QWORD PTR [RAX+RSI*4]
            lea RSI,QWORD PTR [R8+RSI*8]
            mov BYTE PTR [RSI+72],R10B
            mov EAX,DWORD PTR [RDI+RAX*4]
            mov DWORD PTR [RSI+76],EAX
            lea EAX,DWORD PTR [RDX+1]
            cmp RAX,RCX
            mov RDX,RAX
            jb .L_44e6b8
.L_44e6de:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e438

            cmp BYTE PTR [RAX],0
            mov RDI,QWORD PTR [RSP+64]
            jne .L_44e438

            call free@PLT

            mov RDI,QWORD PTR [RSP+72]
            call free@PLT
.L_44e711:

            mov R8,QWORD PTR [R13+48]
            mov RDI,QWORD PTR [R13+56]
            test R8,R8
            je .L_44e768

            mov RAX,QWORD PTR [RDI+32]
            mov R9,QWORD PTR [R13+8]
            mov DWORD PTR [RDI+88],0
            mov EDX,EAX
            mov EAX,EAX
            cmp RAX,R9
            ja .L_44e158

            xor ECX,ECX
            jmp .L_44e75d
          .byte 0x66
          .byte 0x90
.L_44e740:

            lea RSI,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RSI*4]
            lea RAX,QWORD PTR [RDI+RAX*8]
            mov DWORD PTR [RAX+88],EDX
            add EDX,DWORD PTR [RAX+32]
            mov EAX,EDX
            cmp RAX,R9
            ja .L_44e158
.L_44e75d:

            lea EAX,DWORD PTR [RCX+1]
            cmp RAX,R8
            mov RCX,RAX
            jb .L_44e740
.L_44e768:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            jmp .L_44e10a
.L_44e786:

            test RBX,RBX
            je .L_44eec0

            xor R15D,R15D
            mov QWORD PTR [RSP+8],R13
            xor R12D,R12D
            xor EAX,EAX
            mov R13D,R15D
            jmp .L_44e7d8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44e7a8:

            mov RAX,QWORD PTR [R15+80]
            cmp RAX,100000000
            ja .L_44e158

            cmp R12,-100000001
            ja .L_44e158

            add R12,RAX
            lea EAX,DWORD PTR [R13+1]
            cmp RBX,RAX
            mov R13,RAX
            jbe .L_44ee82
.L_44e7d8:

            lea RCX,QWORD PTR [RAX+RAX*2]
            mov RDI,R14
            lea RAX,QWORD PTR [RAX+RCX*4]
            lea R15,QWORD PTR [RBP+RAX*8]
            lea RSI,QWORD PTR [R15+80]
            call .L_44de60

            test EAX,EAX
            jns .L_44e7a8

            jmp .L_44e158
.L_44e7fa:

            lea RDX,QWORD PTR [RIP+.L_450e10]
            mov ESI,4294967295
            mov RDI,R14
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44e438
.L_44e815:

            mov RBX,QWORD PTR [R13+48]
            mov ESI,104
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [R13+56],RAX
            je .L_44e158

            test RBX,RBX
            je .L_44e3a8

            mov DWORD PTR [RSP+40],0
            xor EDX,EDX
            mov QWORD PTR [RSP+56],R13
            nop
            nop
            nop
            nop
            nop
.L_44e850:

            lea RCX,QWORD PTR [RDX+RDX*2]
            lea RDX,QWORD PTR [RDX+RCX*4]
            lea RBP,QWORD PTR [RAX+RDX*8]
            mov RAX,QWORD PTR [R14+2472]
            lea RDI,QWORD PTR [RBP+8]
            mov RCX,RBP
            mov RSI,RBP
            mov RAX,QWORD PTR [RAX]
            and RDI,-8
            sub RCX,RDI
            add ECX,104
            mov QWORD PTR [RSP+48],RAX
            xor EAX,EAX
            shr ECX,3
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+96],0

            rep stosq QWORD PTR [RDI]

            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            js .L_44e438

            mov RBX,QWORD PTR [RBP]
            cmp RBX,4
            ja .L_44e438

            mov ESI,40
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_44e438

            test RBX,RBX
            je .L_44e438

            xor R12D,R12D
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+8],0
            xor EBX,EBX
            nop
.L_44e8f0:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e438

            movzx EAX,BYTE PTR [RAX]
            mov R13D,EAX
            mov EDI,EAX
            mov ESI,EAX
            and R13D,15
            and EDI,16
            and ESI,32
            test AL,AL
            movzx R15D,R13B
            mov BYTE PTR [RSP+16],DIL
            mov BYTE PTR [RSP+32],SIL
            js .L_44e438

            mov RSI,R15
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e438

            lea RBX,QWORD PTR [RBX+RBX*4]
            mov RSI,QWORD PTR [RBP+8]
            shl RBX,3
            add RSI,RBX
            test R13B,R13B
            je .L_44eb70

            xor EDI,EDI
            xor ECX,ECX
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_44e968:

            movzx ECX,BYTE PTR [RAX+RCX*1]
            shl RDX,8
            add RDX,RCX
            lea ECX,DWORD PTR [RDI+1]
            cmp R15,RCX
            mov RDI,RCX
            ja .L_44e968
.L_44e97e:

            cmp BYTE PTR [RSP+16],0
            mov QWORD PTR [RSI],RDX
            jne .L_44ea98

            cmp BYTE PTR [RSP+32],0
            mov QWORD PTR [RSI+8],1
            mov QWORD PTR [RSI+16],1
            jne .L_44eaf5
.L_44e9a7:

            mov R13,QWORD PTR [RSP+8]
            mov R15,QWORD PTR [RSP+24]
            lea EBX,DWORD PTR [R12+1]
            add R13,QWORD PTR [RSI+8]
            add R15,QWORD PTR [RSI+16]
            cmp RBX,QWORD PTR [RBP]
            mov R12,RBX
            mov QWORD PTR [RSP+8],R13
            mov QWORD PTR [RSP+24],R15
            jb .L_44e8f0

            test R15,R15
            mov RDI,R15
            je .L_44e438

            sub RDI,1
            cmp R13,RDI
            jb .L_44e438

            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RBP+16],RDI
            cmp RDI,QWORD PTR [RAX+112]
            ja .L_44e438

            test RDI,RDI
            jne .L_44ecd2

            mov RBX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBP+24],0
            xor EDX,EDX
.L_44ea19:

            mov QWORD PTR [RBP+32],RBX
            mov ESI,8
            mov RDI,RBX
            mov QWORD PTR [RSP+8],RDX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RBP+40],RAX
            je .L_44e438

            cmp RBX,1
            mov RDX,QWORD PTR [RSP+8]
            je .L_44eb77

            xor EDX,EDX
            xor R12D,R12D
            test RBX,RBX
            je .L_44ebc6

            mov EBX,EDX
            jmp .L_44ea80
.L_44ea5d:

            mov RAX,QWORD PTR [RBP+40]
            cmp QWORD PTR [RAX+R12*8],100000000
            ja .L_44e438

            lea R12D,DWORD PTR [RBX+1]
            cmp R12,QWORD PTR [RBP+32]
            mov RBX,R12
            jae .L_44ebc6
.L_44ea80:

            lea RSI,QWORD PTR [RAX+R12*8]
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            jns .L_44ea5d

            jmp .L_44e438
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44ea98:

            add RSI,8
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            js .L_44e438

            mov RSI,QWORD PTR [RBP+8]
            add RSI,RBX
            cmp QWORD PTR [RSI+8],100000000
            ja .L_44e438

            add RSI,16
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            js .L_44e438

            mov RSI,QWORD PTR [RBP+8]
            add RSI,RBX
            cmp QWORD PTR [RSI+16],100000000
            ja .L_44e438

            cmp BYTE PTR [RSP+32],0
            je .L_44e9a7
.L_44eaf5:

            add RSI,24
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            js .L_44e438

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,R14
            mov RSI,QWORD PTR [RAX+RBX*1+24]
            call .L_44dd80

            test RAX,RAX
            mov R13,RAX
            je .L_44e438

            mov R15,QWORD PTR [RBP+8]
            add R15,RBX
            mov RDX,QWORD PTR [R15+24]
            mov RDI,RDX
            mov QWORD PTR [RSP+16],RDX
            call malloc@PLT

            test RAX,RAX
            mov QWORD PTR [R15+32],RAX
            je .L_44e438

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            add RBX,QWORD PTR [RBP+8]
            mov RSI,RBX
            jmp .L_44e9a7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44eb70:

            xor EDX,EDX
            jmp .L_44e97e
.L_44eb77:

            test R13,R13
            je .L_44e438

            xor R9D,R9D
            xor EDI,EDI
.L_44eb85:

            test RDX,RDX
            je .L_44ebba

            mov R8,QWORD PTR [RBP+24]
            cmp RDI,QWORD PTR [R8]
            je .L_44ebae

            xor ESI,ESI
            jmp .L_44eba1
.L_44eb97:

            shl RCX,4
            cmp QWORD PTR [R8+RCX*1],RDI
            je .L_44ebae
.L_44eba1:

            lea ECX,DWORD PTR [RSI+1]
            cmp RCX,RDX
            mov RSI,RCX
            jb .L_44eb97

            je .L_44ebba
.L_44ebae:

            lea EDI,DWORD PTR [R9+1]
            cmp R13,RDI
            mov R9,RDI
            ja .L_44eb85
.L_44ebba:

            cmp R13,RDI
            je .L_44e438

            mov QWORD PTR [RAX],RDI
.L_44ebc6:

            mov RAX,QWORD PTR [RSP+56]
            add DWORD PTR [RSP+40],1
            mov EDX,DWORD PTR [RSP+40]
            mov QWORD PTR [RBP+48],R13
            mov QWORD PTR [RBP+56],R15
            cmp RDX,QWORD PTR [RAX+48]
            jae .L_44ecc8

            mov RAX,QWORD PTR [RAX+56]
            jmp .L_44e850
.L_44ebef:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            test AL,AL
            je .L_44e239

            cmp AL,9
            jne .L_44e158

            mov RDX,QWORD PTR [R13+8]
            lea RSI,QWORD PTR [R13+24]
            mov RDI,R14
            call .L_44df90

            test EAX,EAX
            js .L_44e158

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            cmp BYTE PTR [RAX],0
            je .L_44e274

            jmp .L_44e158
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44ec58:

            mov R12,QWORD PTR [RSP+32]
            mov ESI,8
            mov RDI,R12
            call calloc@PLT

            mov RDI,R12
            mov ESI,1
            mov QWORD PTR [R13+80],RAX
            mov R15,RAX
            mov QWORD PTR [RSP+32],R12
            call calloc@PLT

            mov RDI,QWORD PTR [RSP+32]
            mov ESI,4
            mov QWORD PTR [R13+88],RAX
            mov R12,RAX
            call calloc@PLT

            test R15,R15
            mov QWORD PTR [R13+96],RAX
            sete SIL
            test R12,R12
            sete CL
            or SIL,CL
            jne .L_44e158

            test RAX,RAX
            jne .L_44e4dd

            jmp .L_44e158
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ecc8:

            mov R13,QWORD PTR [RSP+56]
            jmp .L_44e3a8
.L_44ecd2:

            mov ESI,16
            call calloc@PLT

            test RAX,RAX
            mov RSI,RAX
            mov QWORD PTR [RBP+24],RAX
            je .L_44e438

            xor R12D,R12D
            xor EBX,EBX
            jmp .L_44ed48
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ecf8:

            mov RSI,QWORD PTR [RBP+24]
            add RSI,RBX
            cmp QWORD PTR [RSI],100000000
            ja .L_44e438

            add RSI,8
            mov RDI,R14
            call .L_44de60

            test EAX,EAX
            js .L_44e438

            mov RSI,QWORD PTR [RBP+24]
            cmp QWORD PTR [RSI+RBX*1+8],100000000
            ja .L_44e438

            mov RDX,QWORD PTR [RBP+16]
            lea EBX,DWORD PTR [R12+1]
            mov R12,RBX
            cmp RBX,RDX
            jae .L_44eeb5
.L_44ed48:

            shl RBX,4
            mov RDI,R14
            add RSI,RBX
            call .L_44de60

            test EAX,EAX
            jns .L_44ecf8

            jmp .L_44e438
.L_44ed60:

            pxor XMM0,XMM0
            lea RSI,QWORD PTR [RSP+64]
            mov EDX,EDI
            mov RDI,R14
            mov R15,QWORD PTR [R13+88]
            mov R12,QWORD PTR [R13+96]
            movaps XMMWORD PTR [RSP+64],XMM0
            call .L_44df90

            test EAX,EAX
            js .L_44e13f

            test RBX,RBX
            je .L_44ee2a

            xor ECX,ECX
            xor R9D,R9D
            xor EAX,EAX
            jmp .L_44edc0
.L_44ed9a:

            cmp BYTE PTR [RSI+72],0
            je .L_44eddc

            mov BYTE PTR [R15],1
            mov EAX,DWORD PTR [RSI+76]
            add R12,4
            add R15,1
            mov DWORD PTR [R12-4],EAX
.L_44edb4:

            lea EAX,DWORD PTR [R9+1]
            cmp RBX,RAX
            mov R9,RAX
            jbe .L_44ee2a
.L_44edc0:

            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RAX+RDX*4]
            lea RSI,QWORD PTR [RBP+RAX*8]
            mov RAX,QWORD PTR [RSI+80]
            cmp RAX,1
            je .L_44ed9a

            test RAX,RAX
            je .L_44edb4
.L_44eddc:

            movsxd RDI,ECX
            mov RAX,R15
            lea R8,QWORD PTR [RDI*4]
            sub RDI,R15
            sub R8,R12
.L_44edf0:

            lea RDX,QWORD PTR [RAX+RDI*1]
            add RDX,QWORD PTR [RSP+64]
            add RAX,1
            add ECX,1
            movzx EDX,BYTE PTR [RDX]
            mov BYTE PTR [RAX-1],DL
            lea RDX,QWORD PTR [R12+R8*1]
            add RDX,QWORD PTR [RSP+72]
            add R12,4
            mov EDX,DWORD PTR [RDX]
            mov DWORD PTR [R12-4],EDX
            mov EDX,EAX
            sub EDX,R15D
            cmp RDX,QWORD PTR [RSI+80]
            jb .L_44edf0

            mov R15,RAX
            jmp .L_44edb4
.L_44ee2a:

            mov RDI,QWORD PTR [RSP+64]
            call free@PLT

            mov RDI,QWORD PTR [RSP+72]
            call free@PLT

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            mov DWORD PTR [RSP+8],EAX
            jmp .L_44e617
.L_44ee60:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            mov DWORD PTR [RSP+8],EAX
            jmp .L_44e5a4
.L_44ee82:

            mov R13,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],R12
.L_44ee8c:

            mov ESI,1
            mov RDI,R14
            call .L_44dd80

            test RAX,RAX
            je .L_44e158

            movzx EAX,BYTE PTR [RAX]
            mov DWORD PTR [RSP+8],EAX
            jmp .L_44e4c7
.L_44eeae:

            xor EDI,EDI
            jmp .L_44e60c
.L_44eeb5:

            mov RBX,R13
            sub RBX,RDX
            jmp .L_44ea19
.L_44eec0:

            mov QWORD PTR [RSP+32],RBX
            jmp .L_44ee8c
.L_44eec7:

            call __stack_chk_fail@PLT
.L_44eecc:

            nop
            nop
            nop
            nop
.L_44eed0:

            push RBP
            push RBX
            sub RSP,8
            movzx EAX,BYTE PTR [RDI+5]
            cmp AL,55
            je .L_44ef60

            jbe .L_44ef10

            cmp AL,175
            mov EBX,2
            je .L_44ef04

            cmp AL,188
            mov EBX,3
            je .L_44ef04

            cmp AL,122
            mov EBX,4
            je .L_44ef04
.L_44eeff:

            mov EBX,6
.L_44ef04:

            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44ef10:

            cmp AL,28
            je .L_44ef30

            cmp AL,39
            mov EBX,1
            jne .L_44eeff

            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44ef30:

            cmp DWORD PTR [RDI],2948364855
            jne .L_44eeff

            cmp WORD PTR [RDI+4],7207
            jne .L_44eeff

            lea RSI,QWORD PTR [RDI+12]
            mov RBP,RDI
            mov EDX,20
            xor EDI,EDI
            xor EBX,EBX
            call crc32@PLT

            mov EDX,DWORD PTR [RBP+8]
            cmp RAX,RDX
            je .L_44ef04

            jmp .L_44eeff
          .byte 0x90
.L_44ef60:

            mov EBX,5
            add RSP,8
            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_44ef6e:

            nop
            nop
.L_44ef70:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,16
.L_44ef7c:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            cmp ESI,32
            jg .L_44f090

            xor EDX,EDX
            mov ESI,6
            mov RBP,RDI
            call .L_4049e0

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_44f038

            cmp DWORD PTR [RDX],2948364855
            je .L_44f058
.L_44efbe:

            cmp BYTE PTR [RDX],77
            je .L_44f080
.L_44efc7:

            xor EAX,EAX
            cmp DWORD PTR [RDX],1179403647
            jne .L_44f038
.L_44efd1:

            mov EBX,159744
            mov R12D,4096
            mov ESI,163840
            mov R13,RSP
.L_44efe4:

            mov RDX,R13
            mov RDI,RBP
            call .L_4049e0

            test RAX,RAX
            mov R14,RAX
            je .L_44f070

            add RBX,RAX
            jmp .L_44f011
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44f000:

            mov RDI,RBX
            call .L_44eed0

            test EAX,EAX
            je .L_44f064

            cdqe 
            add RBX,RAX
.L_44f011:

            mov RAX,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RBX+32]
            add RAX,R14
            cmp RDX,RAX
            jb .L_44f000

            sub RBX,R14
.L_44f024:

            lea RSI,QWORD PTR [RBX+R12*1]
            cmp RSI,393216
            jle .L_44efe4

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_44f038:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_44f097

            add RSP,16
.L_44f04c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44f058:

            cmp WORD PTR [RDX+4],7207
            jne .L_44efbe
.L_44f064:

            mov EAX,48
            jmp .L_44f038
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f070:

            sar R12,1
            cmp R12,63
            jg .L_44f024

            xor EAX,EAX
            jmp .L_44f038
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44f080:

            cmp BYTE PTR [RDX+1],90
            jne .L_44efc7

            jmp .L_44efd1
          .byte 0x90
.L_44f090:

            mov EAX,4294967295
            jmp .L_44f038
.L_44f097:

            call __stack_chk_fail@PLT
.L_44f09c:

            nop
            nop
            nop
            nop
.L_44f0a0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,152
.L_44f0b4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+2472]
            mov QWORD PTR [RSP],RSI
            mov R15,QWORD PTR [RAX]
            cmp DWORD PTR [R15+20728],-1
            jne .L_44f0ea

            mov DWORD PTR [R15+20728],0
.L_44f0ea:

            cmp QWORD PTR [R12+24],0
            mov DWORD PTR [R12+16],917504
            je .L_44f330

            cmp QWORD PTR [R15+160],0
            je .L_44f34a
.L_44f10d:

            mov RAX,QWORD PTR [R15+168]
            lea RBX,QWORD PTR [RAX+88]
            mov RAX,QWORD PTR [R15+144]
            mov QWORD PTR [R15+168],RBX
.L_44f126:

            test RAX,RAX
            je .L_44f130

            test RBX,RBX
            jne .L_44f168
.L_44f130:

            mov DWORD PTR [RSP+8],1
.L_44f138:

            mov RCX,QWORD PTR [RSP+136]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+8]
            jne .L_450628

            add RSP,152
.L_44f15a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44f168:

            sub RAX,1
            xor EDX,EDX
            xor ESI,ESI
            xor EDI,EDI
            mov QWORD PTR [R15+144],RAX
            mov QWORD PTR [R15+184],0
            mov BYTE PTR [R15+208],0
            call crc32@PLT

            cmp QWORD PTR [R15+20656],0
            mov QWORD PTR [R15+200],RAX
            je .L_44f6e0
.L_44f1a6:

            mov EAX,DWORD PTR [RBX+16]
            cmp RAX,QWORD PTR [R15+48]
            jae .L_44f228

            lea RDX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RAX,QWORD PTR [R15+56]
            lea R13,QWORD PTR [RAX+RDX*8]
            test R13,R13
            je .L_44f228

            cmp QWORD PTR [R13],0
            je .L_44f228

            xor R14D,R14D
            xor EBP,EBP
            jmp .L_44f1f6
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f1d8:

            cmp RAX,116459265
            je .L_44f206

            cmp RAX,116457729
            je .L_44f206
.L_44f1e8:

            add RBP,1
            add R14,40
            cmp QWORD PTR [R13],RBP
            jbe .L_44f228
.L_44f1f6:

            mov RAX,QWORD PTR [R13+8]
            mov RAX,QWORD PTR [RAX+R14*1]
            cmp RAX,116458243
            jne .L_44f1d8
.L_44f206:

            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_4469f0

            mov DWORD PTR [R15+20728],1
            jmp .L_44f1e8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f228:

            cmp DWORD PTR [R15+20728],-1
            je .L_44f4f0
.L_44f236:

            mov RCX,QWORD PTR [R15+20656]
            mov RSI,QWORD PTR [RBX+8]
            mov RDX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RSP]
            call .L_4466d0

            test EAX,EAX
            mov DWORD PTR [RSP+8],EAX
            je .L_44f290

            call __errno_location@PLT

            cmp DWORD PTR [RAX],12
            je .L_4504b3

            mov RDI,QWORD PTR [R15+20656]
            call .L_437910

            lea RDX,QWORD PTR [RIP+.L_450b40]
            mov RCX,RAX
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            mov DWORD PTR [RSP+8],4294967276
.L_44f290:

            mov ESI,DWORD PTR [RBX+80]
            mov RDI,QWORD PTR [RSP]
            call .L_446590

            mov EAX,DWORD PTR [RBX+24]
            test AL,1
            jne .L_44f540
.L_44f2a7:

            test AL,4
            jne .L_44f520
.L_44f2af:

            test AL,2
            jne .L_44f560
.L_44f2b7:

            mov EAX,DWORD PTR [RBX+20]
            cmp EAX,-1
            je .L_44f500

            mov RDX,QWORD PTR [R15+80]
            mov RDI,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RDX+RAX*8]
            mov QWORD PTR [R15+192],RSI
            call .L_446770
.L_44f2db:

            mov ESI,DWORD PTR [RBX+80]
            mov EAX,ESI
            and EAX,61440
            cmp QWORD PTR [R15+192],0
            jne .L_44f580

            cmp EAX,40960
            mov BYTE PTR [R15+208],1
            je .L_4501e9
.L_44f306:

            lea RAX,QWORD PTR [R15+20664]
            mov EDX,112
            mov DWORD PTR [R15+20664],1767517495
            mov WORD PTR [R15+20668],DX
            mov QWORD PTR [R12+24],RAX
            jmp .L_44f138
          .byte 0x90
.L_44f330:

            cmp QWORD PTR [R15+160],0
            lea RAX,QWORD PTR [RIP+.L_450e2f]
            mov QWORD PTR [R12+24],RAX
            jne .L_44f10d
.L_44f34a:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RSP+80]
            mov ESI,32
            mov RDI,R12
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+16],RDX
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            call .L_4049e0

            test RAX,RAX
            mov RBX,RAX
            je .L_44f4b4

            cmp BYTE PTR [RAX],77
            je .L_44f640
.L_44f390:

            cmp DWORD PTR [RBX],1179403647
            jne .L_44f48a
.L_44f39c:

            cmp QWORD PTR [RSP+80],159744
            jg .L_44f650

            xor EDX,EDX
            mov ESI,159744
            mov RDI,R12
            call .L_404dd0

            test RAX,RAX
            js .L_44f4b4
.L_44f3c3:

            lea R14,QWORD PTR [RSP+88]
            xor R13D,R13D
            mov EBP,1
            mov ESI,1
            mov QWORD PTR [RSP+24],R15
.L_44f3da:

            mov RDX,R14
            mov RDI,R12
            call .L_4049e0

            test RAX,RAX
            mov R15,RAX
            je .L_44f6d0

            mov RBX,QWORD PTR [RSP+88]
            cmp RBX,5
            jle .L_44f688

            add RBX,RAX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RAX+32]
            cmp RBX,RAX
            ja .L_44f432

            jmp .L_4501c0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f420:

            cdqe 
            add R15,RAX
            lea RAX,QWORD PTR [R15+32]
            cmp RBX,RAX
            jbe .L_44f668
.L_44f432:

            mov RDI,R15
            call .L_44eed0

            test EAX,EAX
            jne .L_44f420

            mov R14,R15
            sub R14,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [R12+2472]
            mov RDI,R12
            mov R15,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RAX]
            mov RSI,R14
            call .L_404a30

            lea RAX,QWORD PTR [R14+R13*1+159744]
            mov RDX,QWORD PTR [RSP+16]
            mov ESI,32
            mov RDI,R12
            mov QWORD PTR [RBX+136],RAX
            call .L_4049e0

            test RAX,RAX
            mov RBX,RAX
            je .L_44f4b4
.L_44f48a:

            add QWORD PTR [R15+136],32
            cmp DWORD PTR [RBX],2948364855
            je .L_44f780
.L_44f49e:

            lea RDX,QWORD PTR [RIP+.L_450e35]
.L_44f4a5:

            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_44f4b4:

            mov DWORD PTR [RSP+8],4294967266
.L_44f4bc:

            mov RDI,QWORD PTR [RSP+104]
            call free@PLT

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            jmp .L_44f138
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44f4f0:

            mov DWORD PTR [R15+20728],0
            jmp .L_44f236
.L_44f500:

            mov RDI,QWORD PTR [RSP]
            mov QWORD PTR [R15+192],0
            xor ESI,ESI
            call .L_446770

            jmp .L_44f2db
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f520:

            mov RDX,QWORD PTR [RBX+72]
            mov RSI,QWORD PTR [RBX+48]
            mov RDI,QWORD PTR [RSP]
            call .L_446330

            mov EAX,DWORD PTR [RBX+24]
            jmp .L_44f2af
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f540:

            mov RDX,QWORD PTR [RBX+56]
            mov RSI,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RSP]
            call .L_4465a0

            mov EAX,DWORD PTR [RBX+24]
            jmp .L_44f2a7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f560:

            mov RDX,QWORD PTR [RBX+64]
            mov RSI,QWORD PTR [RBX+40]
            mov RDI,QWORD PTR [RSP]
            call .L_446210

            jmp .L_44f2b7
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f580:

            cmp EAX,40960
            jne .L_44f306

            lea RAX,QWORD PTR [RSP+80]
            xor EBP,EBP
            xor R13D,R13D
            mov QWORD PTR [RSP+48],RBX
            mov QWORD PTR [RSP+24],R12
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+40],RAX
            jmp .L_44f606
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f5c0:

            mov R12,QWORD PTR [RSP+88]
            mov RDI,R13
            lea RBX,QWORD PTR [R12+RBP*1]
            lea RSI,QWORD PTR [RBX+1]
            call realloc@PLT

            test RAX,RAX
            mov R14,RAX
            je .L_44f718

            mov RSI,QWORD PTR [RSP+80]
            lea RDI,QWORD PTR [RAX+RBP*1]
            mov RDX,R12
            mov R13,R14
            mov RBP,RBX
            call memcpy@PLT

            cmp QWORD PTR [R15+192],0
            je .L_44f740
.L_44f606:

            mov RCX,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+24]
            call .L_44dbf0

            cmp EAX,-20
            jge .L_44f5c0

            mov RDI,R13
            mov DWORD PTR [RSP],EAX
            call free@PLT

            mov EAX,DWORD PTR [RSP]
            mov DWORD PTR [RSP+8],EAX
            jmp .L_44f138

            nop
            nop
            nop
            nop
            nop
.L_44f640:

            cmp BYTE PTR [RAX+1],90
            jne .L_44f390

            jmp .L_44f39c
          .byte 0x90
.L_44f650:

            mov ESI,159744
            mov RDI,R12
            call .L_404a30

            jmp .L_44f3c3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f668:

            mov RSI,R15
            sub RSI,QWORD PTR [RSP+8]
            add R13,RSI
.L_44f673:

            mov RDI,R12
            call .L_404a30

            cmp RBP,1
            jne .L_44f6d9

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44f688:

            mov ESI,4096
            mov EBP,4096
.L_44f692:

            lea RAX,QWORD PTR [R13+RSI*1]
            cmp RAX,233472
            jbe .L_44f3da
.L_44f6a3:

            lea RDX,QWORD PTR [RIP+.L_450af8]
            mov ESI,84
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            mov DWORD PTR [RSP+8],4294967266
            jmp .L_44f4bc
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44f6d0:

            sar RBP,1
            cmp RBP,63
            jle .L_44f6a3
.L_44f6d9:

            mov RSI,RBP
            jmp .L_44f692
          .byte 0x66
          .byte 0x90
.L_44f6e0:

            lea RSI,QWORD PTR [RIP+.L_450eaa]
            mov EDX,1
            mov RDI,R12
            call .L_437870

            test RAX,RAX
            mov QWORD PTR [R15+20656],RAX
            jne .L_44f1a6

            nop
            nop
            nop
            nop
.L_44f708:

            mov DWORD PTR [RSP+8],4294967266
            jmp .L_44f138
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44f718:

            mov RDI,R13
            mov R12,QWORD PTR [RSP+24]
            call free@PLT

            lea RDX,QWORD PTR [RIP+.L_450b78]
.L_44f72c:

            mov ESI,12
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44f708
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44f740:

            test RBP,RBP
            mov RBX,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+24]
            je .L_450138

            mov RDI,QWORD PTR [RSP]
            mov BYTE PTR [R14+RBP*1],0
            mov RSI,R14
            call .L_446850
.L_44f764:

            mov RDI,R14
            call free@PLT

            mov RDI,QWORD PTR [RSP]
            xor ESI,ESI
            call .L_446770

            jmp .L_44f306
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_44f780:

            cmp WORD PTR [RBX+4],7207
            jne .L_44f49e

            lea RSI,QWORD PTR [RBX+12]
            mov EDX,20
            xor EDI,EDI
            mov DWORD PTR [RSP+60],0
            call crc32@PLT

            mov EDX,DWORD PTR [RBX+8]
            cmp RAX,RDX
            jne .L_45049f

            mov R13,QWORD PTR [RBX+20]
            test R13,R13
            je .L_44f950

            mov RBP,QWORD PTR [RBX+12]
            test RBP,RBP
            js .L_4504bf

            mov EAX,DWORD PTR [RBX+28]
            mov ESI,32
            mov RDI,R12
            mov DWORD PTR [RSP+16],EAX
            call .L_404a30

            test RBP,RBP
            je .L_44f7f9

            cmp RBP,QWORD PTR [RSP+80]
            mov RSI,RBP
            jg .L_44f960

            mov RDI,R12
            call .L_404a30
.L_44f7f9:

            mov QWORD PTR [R15+248],RBP
            mov QWORD PTR [R15+128],RBP
            mov ESI,1
            mov QWORD PTR [R15+112],R13
            mov QWORD PTR [R15+120],0
            mov RDI,R12
            mov QWORD PTR [R15+104],1
            mov DWORD PTR [R15+20728],0
            call .L_44dd80

            test RAX,RAX
            je .L_45063a

            movzx ECX,BYTE PTR [RAX]
            cmp CL,1
            je .L_44f9a0

            cmp CL,23
            jne .L_44f980

            mov RAX,QWORD PTR [R12+2472]
            mov RBX,QWORD PTR [RAX]
            call __errno_location@PLT

            mov RSI,R15
            mov DWORD PTR [RAX],0
            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            call .L_44e090

            test EAX,EAX
            js .L_450279

            cmp QWORD PTR [R15+8],0
            je .L_450287

            cmp QWORD PTR [R15+48],0
            je .L_450287

            mov RDX,QWORD PTR [R15+16]
            mov RAX,QWORD PTR [R15]
            mov RDX,QWORD PTR [RDX]
            lea RCX,QWORD PTR [RAX+RDX*1]
            cmp QWORD PTR [RBX+128],RCX
            jb .L_4505f8

            test RCX,RCX
            js .L_4505f8

            test RDX,RDX
            je .L_4505f8

            test RAX,RAX
            js .L_4505f8

            mov EAX,DWORD PTR [RSP+16]
            cmp QWORD PTR [R15+120],RAX
            je .L_4501f1

            lea RDX,QWORD PTR [RIP+.L_450d37]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0
.L_44f8ef:

            mov RDI,R15
            call .L_44c540

            lea RDI,QWORD PTR [R15+8]
            mov RCX,R15
            xor EAX,EAX
            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+96],0
            and RDI,-8
            sub RCX,RDI
            add ECX,104
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov RDI,QWORD PTR [RSP+104]
            call free@PLT

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            jmp .L_44f708
          .byte 0x90
.L_44f950:

            mov DWORD PTR [RSP+8],1
            jmp .L_44f4bc
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44f960:

            add RSI,QWORD PTR [R15+136]
            xor EDX,EDX
            mov RDI,R12
            call .L_404dd0

            test RAX,RAX
            jns .L_44f7f9

            jmp .L_44f4b4
          .byte 0x90
.L_44f980:

            lea RDX,QWORD PTR [RIP+.L_450e8e]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44f4b4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44f9a0:

            call __errno_location@PLT

            mov DWORD PTR [RSP+32],1
            mov QWORD PTR [RSP+8],RAX
.L_44f9b2:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],0
            mov R8D,DWORD PTR [R15+108]
            mov RAX,QWORD PTR [R12+2472]
            test R8D,R8D
            mov R13,QWORD PTR [RAX]
            je .L_44f9f0

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            cmp BYTE PTR [RAX],1
            jne .L_44faf0
.L_44f9f0:

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            movzx EAX,BYTE PTR [RAX]
            cmp AL,2
            je .L_450160
.L_44fa11:

            cmp AL,4
            je .L_4502a2
.L_44fa19:

            test AL,AL
            je .L_450080

            cmp AL,5
            jne .L_44faf0

            lea RSI,QWORD PTR [R13+152]
            mov RDI,R12
            call .L_44de60

            test EAX,EAX
            js .L_44faf0

            mov RDI,QWORD PTR [R13+152]
            cmp RDI,100000000
            ja .L_44faf0

            mov ESI,88
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [R13+160],RAX
            je .L_44faf0

            mov QWORD PTR [RSP+64],R15
            mov DWORD PTR [RSP+24],0
            mov R15,R13
.L_44fa83:

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            movzx EBX,BYTE PTR [RAX]
            test BL,BL
            je .L_44ff90

            lea RSI,QWORD PTR [RSP+88]
            mov RDI,R12
            call .L_44de60

            test EAX,EAX
            js .L_44faf0

            mov RBP,QWORD PTR [RSP+88]
            cmp QWORD PTR [R15+112],RBP
            jb .L_44faf0

            lea EAX,DWORD PTR [RBX-14]
            cmp AL,11
            ja .L_44fadb

            lea RCX,QWORD PTR [RIP+.L_450c0c]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RCX+RAX*4]
            add RAX,RCX
            jmp RAX
.L_44fad6:

            test RBP,RBP
            je .L_44fa83
.L_44fadb:

            mov RSI,RBP
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            jne .L_44fa83

            nop
            nop
            nop
            nop
            nop
.L_44faf0:

            mov RAX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RIP+.L_450e5d]
            cmp DWORD PTR [RAX],12
            je .L_44f4a5

            lea RDX,QWORD PTR [RIP+.L_450d37]
            jmp .L_44f4a5
.L_44fb11:

            mov ESI,2
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            cmp QWORD PTR [RSP+128],0
            movzx EBP,BYTE PTR [RAX]
            jne .L_44faf0

            mov RBX,QWORD PTR [R15+152]
            mov ESI,1
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+128],RAX
            je .L_44faf0

            test BPL,BPL
            mov RDX,RBX
            je .L_45033d

            mov ESI,1
            mov RDI,RAX
            call memset@PLT
.L_44fb6b:

            xor EBP,EBP
            xor EBX,EBX
            cmp QWORD PTR [R15+152],0
            mov R13,QWORD PTR [RSP+48]
            jne .L_44fb9b

            jmp .L_44fa83
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44fb88:

            lea EBX,DWORD PTR [RBP+1]
            cmp RBX,QWORD PTR [R15+152]
            mov RBP,RBX
            jae .L_44fa83
.L_44fb9b:

            mov RAX,QWORD PTR [RSP+128]
            cmp BYTE PTR [RAX+RBX*1],0
            je .L_44fb88

            mov ESI,4
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            mov EDX,DWORD PTR [RAX]
            lea RAX,QWORD PTR [RBX+RBX*4]
            lea RAX,QWORD PTR [RBX+RAX*2]
            mov DWORD PTR [R13+RAX*8+84],EDX
            jmp .L_44fb88
.L_44fbd0:

            mov RAX,QWORD PTR [R12+2472]
            mov ESI,1
            mov RBP,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RBP+160]
            mov RDI,QWORD PTR [RBP+152]
            mov QWORD PTR [RSP+40],RAX
            call calloc@PLT

            test RAX,RAX
            mov R14,RAX
            je .L_44faf0

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_450330

            cmp BYTE PTR [RAX],0
            mov RDX,QWORD PTR [RBP+152]
            je .L_45031d

            mov ESI,1
            mov RDI,R14
            call memset@PLT
.L_44fc37:

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_450330

            cmp BYTE PTR [RAX],0
            jne .L_45039e
.L_44fc56:

            xor ECX,ECX
            xor R13D,R13D
            cmp QWORD PTR [RBP+152],0
            je .L_4502db

            mov QWORD PTR [RSP+72],R15
            mov R15,R14
            mov R14,RBP
            mov EBP,EBX
            mov EBX,ECX
            jmp .L_44fcc4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44fc80:

            cmp BPL,20
            jne .L_4501c7

            cmp RAX,RDX
            ja .L_4503d0

            mov QWORD PTR [RCX+32],0
            mov QWORD PTR [RCX+56],0
.L_44fca3:

            or DWORD PTR [RCX+24],1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44fcb0:

            lea R13D,DWORD PTR [RBX+1]
            cmp R13,QWORD PTR [R14+152]
            mov RBX,R13
            jae .L_4502d3
.L_44fcc4:

            cmp BYTE PTR [R15+R13*1],0
            je .L_44fcb0

            mov ESI,8
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_4504ab

            lea RDX,QWORD PTR [R13+R13*4]
            mov RCX,QWORD PTR [RSP+40]
            cmp BPL,19
            mov RAX,QWORD PTR [RAX]
            lea RDX,QWORD PTR [R13+RDX*2]
            lea RCX,QWORD PTR [RCX+RDX*8]
            movabs RDX,116444735999999999
            jne .L_44fc80

            cmp RAX,RDX
            ja .L_45045a

            mov QWORD PTR [RCX+40],0
            mov QWORD PTR [RCX+64],0
.L_44fd24:

            or DWORD PTR [RCX+24],2
            jmp .L_44fcb0
.L_44fd2a:

            mov EDI,DWORD PTR [RSP+24]
            test EDI,EDI
            je .L_4502e8

            cmp QWORD PTR [RSP+112],0
            jne .L_44faf0

            movsxd RBX,DWORD PTR [RSP+24]
            mov ESI,1
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+112],RAX
            je .L_44faf0
.L_44fd62:

            mov RDX,RBX
            mov RSI,RAX
            mov RDI,R12
            call .L_44df00

            test EAX,EAX
            jns .L_44fa83

            jmp .L_44faf0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_44fd80:

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            lea RCX,QWORD PTR [RBP-1]
            mov R13,RCX
            mov RBP,RCX
            mov QWORD PTR [RSP+40],RCX
            and R13D,1
            jne .L_44faf0

            mov RBX,QWORD PTR [R15+152]
            lea RAX,QWORD PTR [RBX*4]
            cmp RCX,RAX
            jb .L_44faf0

            cmp QWORD PTR [R15+176],0
            jne .L_44faf0

            mov RDI,RCX
            call malloc@PLT

            test RAX,RAX
            mov R14,RAX
            mov QWORD PTR [R15+176],RAX
            je .L_44faf0

            test RBP,RBP
            je .L_450611

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44fe00:

            cmp RBP,65536
            mov EBX,65536
            mov RDI,R12
            cmovbe RBX,RBP
            mov RSI,RBX
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            mov RDI,R14
            mov RDX,RBX
            mov RSI,RAX
            call memcpy@PLT

            add R14,RBX
            sub RBP,RBX
            jne .L_44fe00

            mov R9,QWORD PTR [R15+152]
            mov RSI,QWORD PTR [R15+176]
            test R9,R9
            je .L_44fa83

            mov R10,QWORD PTR [RSP+48]
            mov RDX,QWORD PTR [RSP+40]
            xor EDI,EDI
            nop
            nop
            nop
.L_44fe60:

            lea RAX,QWORD PTR [R13+R13*4]
            cmp RDX,1
            lea RAX,QWORD PTR [R13+RAX*2]
            lea R8,QWORD PTR [R10+RAX*8]
            mov QWORD PTR [R8+8],RSI
            jbe .L_44faf0

            sub RDX,2
            mov RAX,RSI
            mov RCX,RDX
            and ECX,1
            jmp .L_44fea1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44fe90:

            add RAX,2
            cmp RCX,RDX
            je .L_44faf0

            sub RDX,2
.L_44fea1:

            cmp BYTE PTR [RAX],0
            jne .L_44fe90

            cmp BYTE PTR [RAX+1],0
            jne .L_44fe90

            lea R13D,DWORD PTR [RDI+1]
            mov RCX,RAX
            sub RCX,RSI
            lea RSI,QWORD PTR [RAX+2]
            cmp R13,R9
            mov QWORD PTR [R8],RCX
            mov RDI,R13
            jb .L_44fe60

            jmp .L_44fa83
.L_44feca:

            cmp QWORD PTR [RSP+104],0
            jne .L_44faf0

            mov RBX,QWORD PTR [R15+152]
            mov ESI,1
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+104],RAX
            je .L_44faf0

            mov RDX,RBX
            mov RSI,RAX
            mov RDI,R12
            call .L_44df00

            test EAX,EAX
            js .L_44faf0

            mov RCX,QWORD PTR [R15+152]
            test RCX,RCX
            je .L_4502fc

            mov RSI,QWORD PTR [RSP+104]
            xor EDI,EDI
            xor EDX,EDX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_44ff30:

            cmp BYTE PTR [RSI+RAX*1],0
            je .L_44ff39

            add EDI,1
.L_44ff39:

            lea EAX,DWORD PTR [RDX+1]
            cmp RAX,RCX
            mov RDX,RAX
            jb .L_44ff30

            mov DWORD PTR [RSP+24],EDI
            jmp .L_44fa83
.L_44ff4d:

            mov ESI,DWORD PTR [RSP+24]
            test ESI,ESI
            je .L_4502e8

            cmp QWORD PTR [RSP+120],0
            jne .L_44faf0

            movsxd RBX,DWORD PTR [RSP+24]
            mov ESI,1
            mov RDI,RBX
            call calloc@PLT

            test RAX,RAX
            mov QWORD PTR [RSP+120],RAX
            jne .L_44fd62

            jmp .L_44faf0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_44ff90:

            mov R13,R15
            mov R15,QWORD PTR [RSP+64]
            cmp QWORD PTR [R13+152],0
            mov R10,QWORD PTR [R13+56]
            je .L_450080

            xor R14D,R14D
            xor EDX,EDX
            xor EBP,EBP
            xor EBX,EBX
            xor ECX,ECX
.L_44ffb5:

            lea RAX,QWORD PTR [RCX+RCX*4]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+104]
            lea RAX,QWORD PTR [RCX+RAX*2]
            test RDI,RDI
            lea RAX,QWORD PTR [RSI+RAX*8]
            mov ESI,DWORD PTR [RAX+24]
            mov R8D,ESI
            je .L_4504cb

            cmp BYTE PTR [RDI+RCX*1],0
            je .L_4504cb

            mov R11D,DWORD PTR [RAX+84]
            mov R9D,ESI
            mov ECX,R11D
            mov EDI,R11D
            shr ECX,16
            and R9D,16
            mov DWORD PTR [RAX+80],ECX
            jne .L_4504e5

            mov RDI,QWORD PTR [RSP+112]
            test RDI,RDI
            je .L_450585

            movsxd R8,DWORD PTR [RSP+60]
            mov R9,R8
            add R9D,1
            cmp BYTE PTR [RDI+R8*1],0
            mov DWORD PTR [RSP+60],R9D
            je .L_450585

            test ECX,ECX
            jne .L_4505a2

            mov DWORD PTR [RAX+80],33206
.L_45003a:

            and ESI,16
            mov DWORD PTR [RAX+20],4294967295
            mov EDI,R11D
            mov R9D,ESI
.L_45004a:

            and EDI,1
            je .L_450056

            and DWORD PTR [RAX+80],4294967149
.L_450056:

            test R9D,R9D
            jne .L_450524

            test EBX,EBX
            mov ECX,4294967295
            cmovne ECX,EDX
            mov DWORD PTR [RAX+16],ECX
.L_45006c:

            lea ECX,DWORD PTR [RBP+1]
            cmp RCX,QWORD PTR [R13+152]
            mov RBP,RCX
            jb .L_44ffb5

            nop
.L_450080:

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_4504bf

            cmp BYTE PTR [RAX],0
            jne .L_4504bf

            mov ECX,DWORD PTR [RSP+32]
            test ECX,ECX
            je .L_4500b5

            mov EAX,DWORD PTR [RSP+16]
            cmp QWORD PTR [R15+120],RAX
            jne .L_4504bf
.L_4500b5:

            mov QWORD PTR [R15+264],0
            mov QWORD PTR [R15+272],0
            mov RDI,QWORD PTR [RSP+104]
            mov QWORD PTR [R15+240],0
            mov QWORD PTR [R15+288],0
            mov DWORD PTR [R15+104],0
            call free@PLT

            mov RDI,QWORD PTR [RSP+112]
            call free@PLT

            mov RDI,QWORD PTR [RSP+120]
            call free@PLT

            mov RDI,QWORD PTR [RSP+128]
            call free@PLT

            mov RAX,QWORD PTR [R15+152]
            mov RBX,QWORD PTR [R15+160]
            mov QWORD PTR [R15+144],RAX
            mov QWORD PTR [R15+168],RBX
            jmp .L_44f126
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_450138:

            mov ESI,DWORD PTR [RBX+80]
.L_45013b:

            and ESI,4294905855
            mov RDI,QWORD PTR [RSP]
            or ESI,32768
            mov DWORD PTR [RBX+80],ESI
            call .L_446590

            jmp .L_44f764
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_450160:

            lea RBX,QWORD PTR [RSP+88]
            jmp .L_450183
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_450170:

            mov RSI,RBX
            mov RDI,R12
            call .L_44de60

            test EAX,EAX
            js .L_44faf0
.L_450183:

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            cmp BYTE PTR [RAX],0
            jne .L_450170

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            movzx EAX,BYTE PTR [RAX]
            jmp .L_44fa11
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4501c0:

            xor ESI,ESI
            jmp .L_44f673
.L_4501c7:

            cmp RAX,RDX
            ja .L_450415

            mov QWORD PTR [RCX+48],0
            mov QWORD PTR [RCX+72],0
.L_4501e0:

            or DWORD PTR [RCX+24],4
            jmp .L_44fcb0
.L_4501e9:

            xor R14D,R14D
            jmp .L_45013b
.L_4501f1:

            mov RSI,QWORD PTR [R15+56]
            cmp BYTE PTR [RSI+72],0
            jne .L_450309

            mov DWORD PTR [RSP+32],0
.L_450207:

            cmp QWORD PTR [R15+288],0
            jne .L_450373
.L_450215:

            mov EDX,1
            mov RDI,R12
            call .L_44d0c0

            test EAX,EAX
            mov EBX,EAX
            je .L_450384
.L_45022c:

            mov RDI,R15
            call .L_44c540

            lea RDI,QWORD PTR [R15+8]
            mov RCX,R15
            xor EAX,EAX
            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+96],0
            and RDI,-8
            sub RCX,RDI
            add ECX,104
            shr ECX,3
            test EBX,EBX

            rep stosq QWORD PTR [RDI]

            js .L_44f4b4

            mov DWORD PTR [R15+108],1
            mov QWORD PTR [R15+120],0
            jmp .L_44f9b2
.L_450279:

            mov RAX,QWORD PTR [RSP+8]
            cmp DWORD PTR [RAX],12
            je .L_450358
.L_450287:

            lea RDX,QWORD PTR [RIP+.L_450e10]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44f8ef
.L_4502a2:

            mov RSI,R13
            mov RDI,R12
            call .L_44e090

            test EAX,EAX
            js .L_44faf0

            mov ESI,1
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0

            movzx EAX,BYTE PTR [RAX]
            jmp .L_44fa19
.L_4502d3:

            mov R14,R15
            mov R15,QWORD PTR [RSP+72]
.L_4502db:

            mov RDI,R14
            call free@PLT

            jmp .L_44fa83
.L_4502e8:

            mov RSI,RBP
            mov RDI,R12
            call .L_44dd80

            test RAX,RAX
            je .L_44faf0
.L_4502fc:

            mov DWORD PTR [RSP+24],0
            jmp .L_44fa83
.L_450309:

            mov EAX,DWORD PTR [RSI+76]
            mov DWORD PTR [RSP+32],1
            mov DWORD PTR [RSP+16],EAX
            jmp .L_450207
.L_45031d:

            mov RSI,R14
            mov RDI,R12
            call .L_44df00

            test EAX,EAX
            jns .L_44fc37
.L_450330:

            mov RDI,R14
            call free@PLT

            jmp .L_44faf0
.L_45033d:

            mov RSI,RAX
            mov RDI,R12
            call .L_44df00

            test EAX,EAX
            jns .L_44fb6b

            jmp .L_44faf0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_450358:

            lea RDX,QWORD PTR [RIP+.L_450e5d]
            mov ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44f8ef
.L_450373:

            mov RDI,R12
            call .L_44b620

            mov RSI,QWORD PTR [R15+56]
            jmp .L_450215
.L_450384:

            mov RAX,QWORD PTR [R15+264]
            mov RDI,R12
            mov QWORD PTR [R15+112],RAX
            call .L_44d010

            mov EBX,EAX
            jmp .L_45022c
.L_45039e:

            lea RSI,QWORD PTR [RSP+96]
            mov RDI,R12
            call .L_44de60

            test EAX,EAX
            js .L_450330

            cmp QWORD PTR [RSP+96],100000000
            jbe .L_44fc56

            jmp .L_450330
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4503d0:

            movabs RDX,-116444736000000000
            lea RSI,QWORD PTR [RAX+RDX*1]
            movabs RAX,-2972493582642298179
            mul RSI
            mov RAX,RSI
            shr RDX,23
            mov QWORD PTR [RCX+32],RDX
            imul RDX,RDX,10000000
            sub RAX,RDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RCX+56],RAX
            jmp .L_44fca3
.L_450415:

            movabs RDX,-116444736000000000
            lea RSI,QWORD PTR [RAX+RDX*1]
            movabs RAX,-2972493582642298179
            mul RSI
            mov RAX,RSI
            shr RDX,23
            mov QWORD PTR [RCX+48],RDX
            imul RDX,RDX,10000000
            sub RAX,RDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RCX+72],RAX
            jmp .L_4501e0
.L_45045a:

            movabs RDX,-116444736000000000
            lea RSI,QWORD PTR [RAX+RDX*1]
            movabs RAX,-2972493582642298179
            mul RSI
            mov RAX,RSI
            shr RDX,23
            mov QWORD PTR [RCX+40],RDX
            imul RDX,RDX,10000000
            sub RAX,RDX
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,2
            mov QWORD PTR [RCX+64],RAX
            jmp .L_44fd24
.L_45049f:

            lea RDX,QWORD PTR [RIP+.L_450e4c]
            jmp .L_44f4a5
.L_4504ab:

            mov R14,R15
            jmp .L_450330
.L_4504b3:

            lea RDX,QWORD PTR [RIP+.L_450b18]
            jmp .L_44f72c
.L_4504bf:

            lea RDX,QWORD PTR [RIP+.L_450e10]
            jmp .L_44f4a5
.L_4504cb:

            mov EDI,DWORD PTR [RAX+84]
            or ESI,16
            mov R9D,16
            mov R8D,ESI
            mov DWORD PTR [RAX+24],ESI
            mov ECX,EDI
            shr ECX,16
            mov DWORD PTR [RAX+80],ECX
.L_4504e5:

            movsxd RSI,R14D
            cmp RSI,QWORD PTR [R13+72]
            jae .L_44faf0

            test ECX,ECX
            jne .L_4504fd

            mov DWORD PTR [RAX+80],33206
.L_4504fd:

            mov RCX,QWORD PTR [R13+88]
            cmp BYTE PTR [RCX+RSI*1],0
            je .L_450517

            mov ECX,R8D
            mov R9D,R8D
            or ECX,8
            and R9D,16
            mov DWORD PTR [RAX+24],ECX
.L_450517:

            mov DWORD PTR [RAX+20],R14D
            add R14D,1
            jmp .L_45004a
.L_450524:

            test EBX,EBX
            mov ECX,EDX
            jne .L_45055f

            mov RDI,QWORD PTR [R13+48]
            cmp RCX,RDI
            jb .L_45054f

            jmp .L_44faf0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_450540:

            lea ECX,DWORD PTR [RDX+1]
            cmp RCX,RDI
            mov RDX,RCX
            jae .L_44faf0
.L_45054f:

            lea RSI,QWORD PTR [RCX+RCX*2]
            lea RSI,QWORD PTR [RCX+RSI*4]
            cmp QWORD PTR [R10+RSI*8+80],0
            je .L_450540
.L_45055f:

            mov DWORD PTR [RAX+16],EDX
            lea RAX,QWORD PTR [RCX+RCX*2]
            lea ESI,DWORD PTR [RBX+1]
            lea RAX,QWORD PTR [RCX+RAX*4]
            mov RBX,RSI
            cmp RSI,QWORD PTR [R10+RAX*8+80]
            jb .L_45006c

            add EDX,1
            xor EBX,EBX
            jmp .L_45006c
.L_450585:

            test ECX,ECX
            je .L_4505ef

            mov EDI,ECX
            and EDI,61440
            cmp EDI,16384
            je .L_4505b7

            and CH,15
            or CH,64
            mov DWORD PTR [RAX+80],ECX
.L_4505a2:

            mov ECX,DWORD PTR [RAX+80]
            and ECX,61440
            cmp ECX,16384
            jne .L_45003a
.L_4505b7:

            mov RCX,QWORD PTR [RAX]
            cmp RCX,1
            jbe .L_45003a

            mov RDI,QWORD PTR [RAX+8]
            cmp BYTE PTR [RDI+RCX*1-2],47
            je .L_45062d
.L_4505cf:

            mov BYTE PTR [RDI+RCX*1],47
            mov RSI,QWORD PTR [RAX+8]
            mov RCX,QWORD PTR [RAX]
            mov BYTE PTR [RSI+RCX*1+1],0
            add QWORD PTR [RAX],2
            mov ESI,DWORD PTR [RAX+24]
            mov R11D,DWORD PTR [RAX+84]
            jmp .L_45003a
.L_4505ef:

            mov DWORD PTR [RAX+80],16895
            jmp .L_4505b7
.L_4505f8:

            lea RDX,QWORD PTR [RIP+.L_450e76]
            or ESI,4294967295
            mov RDI,R12
            xor EAX,EAX
            call .L_43f5d0

            jmp .L_44f8ef
.L_450611:

            test RBX,RBX
            je .L_44fa83

            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RAX+8],R14
            jmp .L_44faf0
.L_450628:

            call __stack_chk_fail@PLT
.L_45062d:

            cmp BYTE PTR [RDI+RCX*1-1],0
            je .L_45003a

            jmp .L_4505cf
.L_45063a:

            lea RDX,QWORD PTR [RIP+.L_450ca0]
            mov ESI,84
            mov RDI,R12
            call .L_43f5d0

            mov DWORD PTR [RSP+8],4294967266
            jmp .L_44f4bc
.L_45065b:

            nop
            nop
            nop
            nop
            nop
.L_450660:

            push RBP
            push RBX
            lea RCX,QWORD PTR [RIP+.L_450ba0]
            mov EDX,1
            mov ESI,14594245
            mov RBP,RDI
            sub RSP,8
.L_45067a:

            call .L_443f50

            cmp EAX,-30
            je .L_450708

            mov ESI,20736
            mov EDI,1
            call calloc@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_45070f

            mov DWORD PTR [RAX+20728],4294967295
            lea RAX,QWORD PTR [RIP+.L_44aeb0]
            lea R9,QWORD PTR [RIP+.L_44f0a0]
            lea RCX,QWORD PTR [RIP+.L_44ef70]
            lea RDX,QWORD PTR [RIP+.L_450ecc]
            xor R8D,R8D
            push RAX
.L_4506c9:

            lea RAX,QWORD PTR [RIP+.L_44aea0]
            mov RSI,RBX
            mov RDI,RBP
            push RAX
            lea RAX,QWORD PTR [RIP+.L_44c630]
            push RAX
            lea RAX,QWORD PTR [RIP+.L_44da90]
            push 0
            push RAX
            lea RAX,QWORD PTR [RIP+.L_44dbf0]
            push RAX
            call .L_404820

            add RSP,48
            test EAX,EAX
            je .L_450708

            mov RDI,RBX
            call free@PLT

            xor EAX,EAX
.L_450708:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_45070f:

            lea RDX,QWORD PTR [RIP+.L_450eb3]
            xor EAX,EAX
            mov ESI,12
            mov RDI,RBP
            call .L_43f5d0

            mov EAX,4294967266
            jmp .L_450708
.L_45072c:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_450730:
          .string "Lzma library error: Cannot allocate memory"
          .zero 5
.L_450760:
          .string "Lzma library error: Out of memory"
          .zero 6
.L_450788:
          .string "Lzma library error: format not recognized"
          .zero 6
.L_4507b8:
          .string "Lzma library error: Invalid options"
          .zero 4
.L_4507e0:
          .string "Lzma library error: Corrupted input data"
          .zero 7
.L_450810:
          .string "Lzma library error:  No progress is possible"
          .zero 3
.L_450840:
          .string "Lzma decompression failed:  Unknown error"
          .zero 6
.L_450870:
          .string "No memory for 7-Zip decompression"
          .zero 6
.L_450898:
          .string "Failed to clean up decompressor"
.L_4508b8:
          .string "File decompression failed (%d)"
          .zero 1
.L_4508d8:
          .string "Failed to initialize PPMd range decorder"
          .zero 7
.L_450908:
          .string "Failed to clean up bzip2 decompressor"
          .zero 2
.L_450930:
          .string "Failed to clean up zlib decompressor"
          .zero 3
.L_450958:
          .string "Unsupported filter %lx for %lx"
          .zero 1
.L_450978:
          .string "Internal error initializing decompressor: %s"
          .zero 3
.L_4509a8:
          .string "Couldn\'t initialize zlib stream."
          .zero 7
.L_4509d0:
          .string "Coludn\'t allocate memory for PPMd"
          .zero 6
.L_4509f8:
          .string "Crypto codec not supported yet (ID: 0x%lX)"
          .zero 5
.L_450a28:
          .string "The %s is encrypted, but currently not supported"
          .zero 7
.L_450a60:
          .string "The %s is encoded with many filters, but currently not supported"
          .zero 7
.L_450aa8:
          .string "Unsupported form of BCJ2 streams"
          .zero 7
.L_450ad0:
          .string "7-Zip bad CRC: 0x%lx should be 0x%lx"
          .zero 3
.L_450af8:
          .string "Couldn\'t find out 7-Zip header"
          .zero 1
.L_450b18:
          .string "Can\'t allocate memory for Pathname"
          .zero 5
.L_450b40:
          .string "Pathname cannot be converted from %s to current locale."
.L_450b78:
          .string "Can\'t allocate memory for Symname"
          .zero 6
.L_450ba0:
          .string "archive_read_support_format_7zip"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_450be0:
          .long .L_44b4f8-.L_450be0
          .long .L_44b4f8-.L_450be0
          .long .L_44b578-.L_450be0
          .long .L_44b578-.L_450be0
          .long .L_44b578-.L_450be0
          .long .L_44b500-.L_450be0
          .long .L_44b518-.L_450be0
          .long .L_44b530-.L_450be0
          .long .L_44b548-.L_450be0
          .long .L_44b560-.L_450be0
          .long .L_44b4e0-.L_450be0
.L_450c0c:
          .long .L_44feca-.L_450c0c
          .long .L_44fd2a-.L_450c0c
          .long .L_44ff4d-.L_450c0c
          .long .L_44fd80-.L_450c0c
          .long .L_44fbd0-.L_450c0c
          .long .L_44fbd0-.L_450c0c
          .long .L_44fbd0-.L_450c0c
          .long .L_44fb11-.L_450c0c
          .long .L_44fadb-.L_450c0c
          .long .L_44fadb-.L_450c0c
          .long .L_44fadb-.L_450c0c
          .long .L_44fad6-.L_450c0c
          .zero 4
.L_450c40:
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_450c48:
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_450c60:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_450c88:
          .string "Truncated RAR file data"
.L_450ca0:
          .string "Truncated 7-Zip file body"
.L_450cba:
          .string "BCJ2 conversion Failed"
.L_450cd1:
          .string "Decompression failed(%d)"
.L_450cea:
          .string "bzip decompression failed"
.L_450d04:
          .string "Decompression internal error"
.L_450d21:
          .string "Failed to decode PPMd"
.L_450d37:
          .string "Damaged 7-Zip archive"
.L_450d4d:
          .string "Truncated 7-Zip file data"
.L_450d67:
          .string "invalid setup parameter"
.L_450d7f:
          .string "??"
.L_450d82:
          .string "mis-compiled library"
.L_450d97:
          .string "out of memory"
.L_450da5:
          .string "Unexpected codec ID: %lX"
.L_450dbe:
          .string "1.2.11"
.L_450dc5:
          .string "Malformed PPMd parameter"
.L_450dde:
          .string "Unknown codec ID: %lX"
.L_450df4:
          .string "archive header"
.L_450e03:

            imul BP,WORD PTR [RBP+32],28515
            outsb DX,BYTE PTR [RSI]
            je .L_450e72
          .byte 0x6e
          .byte 0x74
          .byte 0x0
.L_450e10:
          .string "Malformed 7-Zip archive"
          .byte 0x37
          .byte 0x7a
          .byte 0xbc
          .byte 0xaf
          .byte 0x27
          .byte 0x1c
          .byte 0x0
.L_450e2f:
          .string "7-Zip"
.L_450e35:
          .string "Not 7-Zip archive file"
.L_450e4c:
          .string "Header CRC error"
.L_450e5d:
          .byte 0x43
          .byte 0x6f
          .byte 0x75
          .byte 0x6c
          .byte 0x64
          .byte 0x6e
          .byte 0x27
          .byte 0x74
          .byte 0x20
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x6f
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x20
          .byte 0x6d
          .byte 0x65
          .byte 0x6d
.L_450e72:

            outsd DX,DWORD PTR [RSI]
          .byte 0x72
          .byte 0x79
          .byte 0x0
.L_450e76:
          .string "Malformed Header offset"
.L_450e8e:
          .string "Unexpected Property ID = %X"
.L_450eaa:
          .string "UTF-16LE"
.L_450eb3:
          .string "Can\'t allocate 7zip data"
.L_450ecc:
          .string "7zip"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_450ee0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_65aa70]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_65aa78]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 9040

            test RBP,RBP
            je .L_450f36

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_450f20:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_450f20
.L_450f36:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_450f45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_450f50:

            ret 
.L_450f52:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

.L_450f60:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_450f64:
          .string "rb"
.L_450f67:
          .string "malloc error!\n"
.L_450f76:
          .string "read error!\n"
#===================================
# end section .rodata
#===================================

#===================================
.section .gcc_except_table ,"a",@progbits
.align 8
#===================================

.L_45a858:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_45a86b-.L_45a85c
.L_45a85c:
          .uleb128 .L_403020-.L_403000
          .uleb128 .L_403075-.L_403020
          .zero 2
          .uleb128 .L_40309e-.L_403000
          .uleb128 .L_4030d1-.L_40309e
          .uleb128 .L_4030fb-.L_403000
          .zero 1
          .uleb128 .L_40310e-.L_403000
          .uleb128 .L_403113-.L_40310e
          .zero 2
.L_45a86b:
#===================================
# end section .gcc_except_table
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_65aa70:
          .quad .L_402fd0
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_65aa78:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

.L_65aa80:
          .quad .L_4108e2
          .quad .L_4108e7
          .quad .L_4108ed
          .quad .L_4108f5
.L_65aaa0:
          .quad .L_42f3f0
          .quad .L_42f3e0
.L_65aab0:
          .quad .L_42e940
          .quad .L_42e960
.L_65aac0:
          .zero 8
          .quad .L_43318e
.L_65aad0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43319b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4331a5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4331af
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4331b9
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4331c3
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4331cd
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x31
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4331df
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4331e9
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4331fa
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x31
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_433204
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x31
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_433209
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x31
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x31
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x31
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43320e
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43321c
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_433226
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_43322f
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .string "62C"
          .zero 20
.L_65ac40:
          .quad .L_4448d0
.L_65ac48:
          .quad .L_444820
.L_65ac50:
          .quad .L_4446b0
.L_65ac58:
          .quad .L_4445f0
          .quad .L_444820
          .quad .L_4446b0
          .quad .L_4445f0
          .zero 8
.L_65ac80:
          .quad .L_444aa0
.L_65ac88:
          .quad .L_444990
.L_65ac90:
          .quad .L_444900
          .quad .L_444a70
          .quad .L_444af0
          .quad .L_444940
.L_65acb0:
          .quad .L_444a40
.L_65acb8:
          .quad .L_444b10
.L_65acc0:
          .quad .L_444950
          .quad .L_444a10
          .quad .L_444b30
          .quad .L_444960
          .quad .L_4449e0
          .quad .L_444b50
          .quad .L_444970
          .quad .L_4449b0
          .quad .L_444ad0
          .quad .L_444980
          .zero 16
.L_65ad20:
          .quad .L_447ad0
.L_65ad28:
          .quad .L_447ac0
.L_65ad30:
          .quad .L_447a70
.L_65ad38:
          .quad .L_447a50
.L_65ad40:
          .quad .L_448890
.L_65ad48:
          .quad .L_448120
.L_65ad50:
          .quad .L_4480f0
.L_65ad58:
          .quad .L_448bd0
.L_65ad60:
          .quad .L_448750
.L_65ad68:
          .quad .L_448780
.L_65ad70:
          .quad .L_449110
.L_65ad78:
          .quad .L_4485e0
.L_65ad80:
          .quad .L_4498e0
          .quad .L_4487b0
          .quad .L_448860
          .quad .L_449d60
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 16
.L_65b430:
          .quad __gxx_personality_v0
          .zero 8
.L_65b440:
          .quad .L_41e11c
          .quad .L_41e120
          .zero 16
.L_65b460:
          .quad .L_41e0f4
          .quad .L_41e0f9
          .quad .L_41e0fe
          .zero 8
.L_65b480:
          .quad .L_41e0a3
          .quad .L_41e0a8
          .quad .L_41e0b3
          .quad .L_41e0ba
          .quad .L_41e0c7
          .quad .L_41e0ce
          .quad .L_41e0db
          .quad .L_41e0e2
          .quad .L_41e0ef
          .zero 24
.L_65b4e0:
          .quad .L_41e085
          .quad .L_41e08f
          .quad .L_41e096
          .zero 8
.L_65b500:
          .quad .L_41e07f
          .quad .L_41dffc
          .quad .L_41e005
          .zero 8
.L_65b520:
          .quad .L_41e06c
          .quad .L_41e070
          .quad .L_41e07a
          .zero 8
.L_65b540:
          .quad .L_41e00e
          .quad .L_41e061
          .quad .L_41e067
          .zero 8
.L_65b560:
          .quad .L_41e057
          .quad .L_41e05b
          .zero 16
.L_65b580:
          .quad .L_41e04a
          .quad .L_41e051
          .zero 16
.L_65b5a0:
          .quad .L_41e033
          .quad .L_41e03b
          .quad .L_41e044
          .zero 8
.L_65b5c0:
          .quad .L_41e760
          .quad .L_41e750
          .zero 16
.L_65b5e0:
          .quad .L_448024
          .quad .L_447ce0
          .quad .L_44802b
          .quad .L_447ce0
          .quad .L_448030
          .quad .L_447e90
          .quad .L_448036
          .quad .L_447c80
          .quad .L_44803e
          .quad .L_447e20
          .quad .L_448043
          .quad .L_447ce0
          .byte 0x47
          .byte 0x80
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447ce0
          .byte 0x4d
          .byte 0x80
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447b30
          .quad .L_448054
          .quad .L_447bf0
          .byte 0x5b
          .byte 0x80
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447d40
          .quad .L_448060
          .quad .L_447ce0
          .quad .L_448064
          .quad .L_447db0
          .quad .L_44806c
          .quad .L_447ce0
          .quad .L_448072
          .quad .L_447ce0
          .byte 0x77
          .byte 0x80
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447db0
          .byte 0x7c
          .byte 0x80
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_447ce0
.L_65b6e0:
          .quad .L_44b610
          .quad .L_44b600
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

.L_65b700:
          .zero 32
.L_65b720:
          .zero 8
.L_65b728:
          .zero 40
.L_65b750:
          .zero 8
.L_65b758:
          .zero 8
.L_65b760:
          .zero 8
.L_65b768:
          .zero 8
.L_65b770:
          .zero 8
.L_65b778:
          .zero 8
.L_65b780:
          .zero 8
.L_65b788:
          .zero 4
.L_65b78c:
          .zero 20
.L_65b7a0:
          .zero 32
.L_65b7c0:
          .zero 1024
.L_65bbc0:
          .zero 66
.L_65bc02:
          .zero 62
.L_65bc40:
          .zero 4
.L_65bc44:
          .zero 12
.L_65bc50:
          .zero 8
.L_65bc58:
          .zero 8
.L_65bc60:
          .zero 32
.L_65bc80:
          .zero 8
.L_65bc88:
          .zero 24
#-----------------------------------
.align 16
.globl _end
.type _end, @notype
#-----------------------------------
_end:
#===================================
# end section .bss
#===================================
