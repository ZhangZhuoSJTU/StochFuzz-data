#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 16
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

.L_401560:

            lea RCX,QWORD PTR [RIP+.L_415320]
            lea RSI,QWORD PTR [RIP+.L_41313e]
            lea RDI,QWORD PTR [RIP+.L_413153]
            sub RSP,8
            mov EDX,120
            call __assert_fail@PLT
.L_401583:

            nop
.L_401584:

            lea RCX,QWORD PTR [RIP+.L_427960]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_42734b]
            sub RSP,8
            mov EDX,62
            call __assert_fail@PLT
.L_4015a7:

            nop
.L_4015a8:

            lea RCX,QWORD PTR [RIP+.L_427840]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_42734b]
            sub RSP,8
            mov EDX,126
            call __assert_fail@PLT
.L_4015cb:

            nop
            nop
            nop
            nop
            nop
#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_4015d4:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_43e9b8]
            call fopen@PLT

            test RAX,RAX
            je .L_401658

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_40167f

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_401662

            mov RSI,RBP
            mov RDI,R12
            call .L_401790

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_401652:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_401658:

            mov EDI,1
            call exit@PLT
.L_401662:

            lea RSI,QWORD PTR [RIP+.L_43e9ca]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,3
            call exit@PLT
.L_40167f:

            lea RSI,QWORD PTR [RIP+.L_43e9bb]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,2
            call exit@PLT
.L_40169c:

            nop
            nop
            nop
            nop
.L_4016d0:

            ret 
.L_4016d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4016e0:

            push RBP
            mov EAX,OFFSET .L_6442e8
            cmp RAX,OFFSET .L_6442e8
            mov RBP,RSP
            je .L_401708

            mov EAX,0
            test RAX,RAX
            je .L_401708

            pop RBP
            mov EDI,OFFSET .L_6442e8
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401708:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401710:

            mov ESI,OFFSET .L_6442e8
            push RBP
            sub RSI,OFFSET .L_6442e8
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_401748

            mov EAX,0
            test RAX,RAX
            je .L_401748

            pop RBP
            mov EDI,OFFSET .L_6442e8
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401748:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401780:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_401710
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401790:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,376
.L_4017a3:

            lea RBP,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+360],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,RDI
            add RAX,RSI
            je .L_4017d5

            test RDI,RDI
            je .L_401d4f
.L_4017d5:

            cmp RBX,15
            mov QWORD PTR [RSP],RBX
            ja .L_401c80

            cmp RBX,1
            jne .L_401d30

            movzx EAX,BYTE PTR [R13]
            lea RDX,QWORD PTR [RBP+16]
            mov BYTE PTR [RSP+32],AL
            mov EAX,1
.L_4017ff:

            lea R12,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+24],RAX
            mov BYTE PTR [RDX+RAX*1],0
            movabs RAX,4294967296
            xor EDX,EDX
            mov RSI,RBX
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [R12+240]
            mov RCX,R12
            mov RDI,R13
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+96],1
            mov QWORD PTR [RSP+104],0
            mov QWORD PTR [RSP+112],0
            mov QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+136],0
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+152],0
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+224],0
            mov QWORD PTR [RSP+232],0
            mov QWORD PTR [RSP+240],0
            mov QWORD PTR [RSP+248],0
            mov QWORD PTR [RSP+256],0
            mov QWORD PTR [RSP+264],0
            mov QWORD PTR [RSP+272],0
            mov QWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+288],0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+304],RAX
            mov QWORD PTR [RSP+312],0
            mov BYTE PTR [RSP+320],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov DWORD PTR [RSP+352],0
.L_4019a3:

            call .L_404200
.L_4019a8:

            test AL,AL
            je .L_4019c6

            movsxd RAX,DWORD PTR [RSP+80]
            movsxd RDX,DWORD PTR [RSP+84]
            imul RAX,RDX
            cmp RAX,10000
            jle .L_401cc0
.L_4019c6:

            mov RDI,QWORD PTR [RSP+304]
            add R12,240
            cmp RDI,R12
            je .L_4019df

            call _ZdlPv@PLT
.L_4019df:

            mov R12,QWORD PTR [RSP+288]
            mov RBX,QWORD PTR [RSP+280]
            cmp R12,RBX
            je .L_401a1a

            nop
            nop
            nop
            nop
.L_4019f8:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_401a09

            call _ZdlPv@PLT
.L_401a09:

            add RBX,32
            cmp R12,RBX
            jne .L_4019f8

            mov RBX,QWORD PTR [RSP+280]
.L_401a1a:

            test RBX,RBX
            je .L_401a27

            mov RDI,RBX
            call _ZdlPv@PLT
.L_401a27:

            mov RDI,QWORD PTR [RSP+256]
            test RDI,RDI
            je .L_401a39

            call _ZdlPv@PLT
.L_401a39:

            mov RAX,QWORD PTR [RSP+240]
            mov RDI,QWORD PTR [RSP+232]
            cmp RAX,RDI
            je .L_401a82

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea R12,QWORD PTR [RDI+RAX*8+40]
            jmp .L_401a64
.L_401a60:

            add RBX,40
.L_401a64:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            je .L_401a72

            call _ZdlPv@PLT
.L_401a72:

            cmp RBX,R12
            mov RDI,RBX
            jne .L_401a60

            mov RDI,QWORD PTR [RSP+232]
.L_401a82:

            test RDI,RDI
            je .L_401a8c

            call _ZdlPv@PLT
.L_401a8c:

            mov R12,QWORD PTR [RSP+216]
            mov RBX,QWORD PTR [RSP+208]
            cmp R12,RBX
            je .L_401ac7

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401aa8:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_401ab6

            call _ZdlPv@PLT
.L_401ab6:

            add RBX,64
            cmp R12,RBX
            jne .L_401aa8

            mov RBX,QWORD PTR [RSP+208]
.L_401ac7:

            test RBX,RBX
            je .L_401ad4

            mov RDI,RBX
            call _ZdlPv@PLT
.L_401ad4:

            mov RAX,QWORD PTR [RSP+192]
            mov RBX,QWORD PTR [RSP+184]
            cmp RAX,RBX
            je .L_401b57

            lea R12,QWORD PTR [RBX+56]
            movabs RDX,988218432520154551
            sub RAX,R12
            shr RAX,3
            imul RAX,RDX
            movabs RDX,2305843009213693951
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX*8]
            sub RDX,RAX
            lea R13,QWORD PTR [RBX+RDX*8]
            jmp .L_401b2c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_401b28:

            add R12,56
.L_401b2c:

            mov RDI,QWORD PTR [RBX+24]
            test RDI,RDI
            je .L_401b3a

            call _ZdlPv@PLT
.L_401b3a:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_401b47

            call _ZdlPv@PLT
.L_401b47:

            cmp R13,R12
            mov RBX,R12
            jne .L_401b28

            mov RBX,QWORD PTR [RSP+184]
.L_401b57:

            test RBX,RBX
            je .L_401b64

            mov RDI,RBX
            call _ZdlPv@PLT
.L_401b64:

            mov RAX,QWORD PTR [RSP+168]
            mov RDI,QWORD PTR [RSP+160]
            cmp RAX,RDI
            je .L_401bb1

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea R12,QWORD PTR [RDI+RAX*8+40]
            jmp .L_401b94
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401b90:

            add RBX,40
.L_401b94:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_401ba1

            call _ZdlPv@PLT
.L_401ba1:

            cmp RBX,R12
            mov RDI,RBX
            jne .L_401b90

            mov RDI,QWORD PTR [RSP+160]
.L_401bb1:

            test RDI,RDI
            je .L_401bbb

            call _ZdlPv@PLT
.L_401bbb:

            mov R12,QWORD PTR [RSP+144]
            mov RBX,QWORD PTR [RSP+136]
            cmp R12,RBX
            je .L_401bf2
.L_401bd0:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_401be1

            call _ZdlPv@PLT
.L_401be1:

            add RBX,32
            cmp R12,RBX
            jne .L_401bd0

            mov RBX,QWORD PTR [RSP+136]
.L_401bf2:

            test RBX,RBX
            je .L_401bff

            mov RDI,RBX
            call _ZdlPv@PLT
.L_401bff:

            mov R12,QWORD PTR [RSP+120]
            mov RBX,QWORD PTR [RSP+112]
            cmp R12,RBX
            je .L_401c2f

            nop
            nop
.L_401c10:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_401c21

            call _ZdlPv@PLT
.L_401c21:

            add RBX,32
            cmp R12,RBX
            jne .L_401c10

            mov RBX,QWORD PTR [RSP+112]
.L_401c2f:

            test RBX,RBX
            je .L_401c3c

            mov RDI,RBX
            call _ZdlPv@PLT
.L_401c3c:

            mov RDI,QWORD PTR [RSP+16]
            add RBP,16
            cmp RDI,RBP
            je .L_401c4f

            call _ZdlPv@PLT
.L_401c4f:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+360]
            xor RCX,QWORD PTR FS:[40]
            jne .L_401d41

            add RSP,376
.L_401c6f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401c80:

            xor EDX,EDX
            mov RSI,RSP
            mov RDI,RBP
.L_401c88:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_401c8d:

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+32],RDX
.L_401c9b:

            mov RDX,RBX
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+16]
            jmp .L_4017ff
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401cc0:

            lea RBX,QWORD PTR [RSP+48]
            mov RDI,RSP
            mov RDX,RBP
            xor ESI,ESI
            mov DWORD PTR [RSP],1065353216
            mov BYTE PTR [RSP+4],1
            lea RAX,QWORD PTR [RBX+16]
            mov RCX,RBX
            mov BYTE PTR [RSP+5],0
            mov BYTE PTR [RSP+6],0
            mov BYTE PTR [RSP+7],0
            mov DWORD PTR [RSP+8],3
            mov BYTE PTR [RSP+12],1
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+56],0
            mov BYTE PTR [RSP+64],0
.L_401d0f:

            call .L_412920
.L_401d14:

            mov RDI,QWORD PTR [RSP+48]
            add RBX,16
            cmp RDI,RBX
            je .L_4019c6

            call _ZdlPv@PLT

            jmp .L_4019c6
.L_401d30:

            test RBX,RBX
            jne .L_401d46

            xor EAX,EAX
            mov RDX,QWORD PTR [RSP+16]
            jmp .L_4017ff
.L_401d41:

            call __stack_chk_fail@PLT
.L_401d46:

            lea RAX,QWORD PTR [RBP+16]
            jmp .L_401c9b
.L_401d4f:

            lea RDI,QWORD PTR [RIP+.L_43e988]
.L_401d56:

            call _ZSt19__throw_logic_errorPKc@PLT
.L_401d5b:

            mov R13,RAX
.L_401d5e:

            mov RDI,R12
            add RBP,16
            call .L_401da0

            mov RDI,QWORD PTR [RSP+16]
            cmp RDI,RBP
            je .L_401d79

            call _ZdlPv@PLT
.L_401d79:

            mov RDI,R13
            call _Unwind_Resume@PLT
.L_401d81:

            mov RDI,QWORD PTR [RSP+48]
            add RBX,16
            mov R13,RAX
            cmp RDI,RBX
            je .L_401d5e

            call _ZdlPv@PLT

            jmp .L_401d5e
.L_401d99:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401da0:

            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            lea RAX,QWORD PTR [RBP+240]
            sub RSP,8
.L_401db4:

            mov RDI,QWORD PTR [RDI+224]
            cmp RDI,RAX
            je .L_401dc5

            call _ZdlPv@PLT
.L_401dc5:

            mov R12,QWORD PTR [RBP+208]
            mov RBX,QWORD PTR [RBP+200]
            cmp R12,RBX
            je .L_401e01

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401de0:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_401df1

            call _ZdlPv@PLT
.L_401df1:

            add RBX,32
            cmp R12,RBX
            jne .L_401de0

            mov RBX,QWORD PTR [RBP+200]
.L_401e01:

            test RBX,RBX
            je .L_401e0e

            mov RDI,RBX
            call _ZdlPv@PLT
.L_401e0e:

            mov RDI,QWORD PTR [RBP+176]
            test RDI,RDI
            je .L_401e1f

            call _ZdlPv@PLT
.L_401e1f:

            mov RAX,QWORD PTR [RBP+160]
            mov RDI,QWORD PTR [RBP+152]
            cmp RAX,RDI
            je .L_401e69

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea R12,QWORD PTR [RDI+RAX*8+40]
            jmp .L_401e4c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_401e48:

            add RBX,40
.L_401e4c:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            je .L_401e5a

            call _ZdlPv@PLT
.L_401e5a:

            cmp RBX,R12
            mov RDI,RBX
            jne .L_401e48

            mov RDI,QWORD PTR [RBP+152]
.L_401e69:

            test RDI,RDI
            je .L_401e73

            call _ZdlPv@PLT
.L_401e73:

            mov R12,QWORD PTR [RBP+136]
            mov RBX,QWORD PTR [RBP+128]
            cmp R12,RBX
            je .L_401eae

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401e90:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_401e9e

            call _ZdlPv@PLT
.L_401e9e:

            add RBX,64
            cmp R12,RBX
            jne .L_401e90

            mov RBX,QWORD PTR [RBP+128]
.L_401eae:

            test RBX,RBX
            je .L_401ebb

            mov RDI,RBX
            call _ZdlPv@PLT
.L_401ebb:

            mov RAX,QWORD PTR [RBP+112]
            mov RBX,QWORD PTR [RBP+104]
            cmp RAX,RBX
            je .L_401f33

            lea R12,QWORD PTR [RBX+56]
            movabs RDX,988218432520154551
            sub RAX,R12
            shr RAX,3
            imul RAX,RDX
            movabs RDX,2305843009213693951
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX*8]
            sub RDX,RAX
            lea R13,QWORD PTR [RBX+RDX*8]
            jmp .L_401f0c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401f08:

            add R12,56
.L_401f0c:

            mov RDI,QWORD PTR [RBX+24]
            test RDI,RDI
            je .L_401f1a

            call _ZdlPv@PLT
.L_401f1a:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_401f27

            call _ZdlPv@PLT
.L_401f27:

            cmp R13,R12
            mov RBX,R12
            jne .L_401f08

            mov RBX,QWORD PTR [RBP+104]
.L_401f33:

            test RBX,RBX
            je .L_401f40

            mov RDI,RBX
            call _ZdlPv@PLT
.L_401f40:

            mov RAX,QWORD PTR [RBP+88]
            mov RDI,QWORD PTR [RBP+80]
            cmp RAX,RDI
            je .L_401f7d

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea R12,QWORD PTR [RDI+RAX*8+40]
            jmp .L_401f64
          .byte 0x90
.L_401f60:

            add RBX,40
.L_401f64:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_401f71

            call _ZdlPv@PLT
.L_401f71:

            cmp RBX,R12
            mov RDI,RBX
            jne .L_401f60

            mov RDI,QWORD PTR [RBP+80]
.L_401f7d:

            test RDI,RDI
            je .L_401f87

            call _ZdlPv@PLT
.L_401f87:

            mov R12,QWORD PTR [RBP+64]
            mov RBX,QWORD PTR [RBP+56]
            cmp R12,RBX
            je .L_401fb6

            nop
            nop
            nop
            nop
.L_401f98:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_401fa9

            call _ZdlPv@PLT
.L_401fa9:

            add RBX,32
            cmp R12,RBX
            jne .L_401f98

            mov RBX,QWORD PTR [RBP+56]
.L_401fb6:

            test RBX,RBX
            je .L_401fc3

            mov RDI,RBX
            call _ZdlPv@PLT
.L_401fc3:

            mov R12,QWORD PTR [RBP+40]
            mov RBX,QWORD PTR [RBP+32]
            cmp R12,RBX
            je .L_401fee
.L_401fd0:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_401fe1

            call _ZdlPv@PLT
.L_401fe1:

            add RBX,32
            cmp R12,RBX
            jne .L_401fd0

            mov RBX,QWORD PTR [RBP+32]
.L_401fee:

            test RBX,RBX
            je .L_402008

            add RSP,8
.L_401ff7:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp _ZdlPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402008:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_402013:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402020:

            mov R8D,DWORD PTR [RDI+32]
            cmp R8D,56
            jg .L_40209e

            mov ESI,56
            mov RAX,QWORD PTR [RDI+24]
            mov RCX,QWORD PTR [RDI+16]
            sub ESI,R8D
            mov R9,QWORD PTR [RDI+40]
            lea EDX,DWORD PTR [R8+8]
            and ESI,4294967288
            lea R11D,DWORD PTR [R8+RSI*1+16]
            jmp .L_402066
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402050:

            mov QWORD PTR [RDI+16],RSI
            mov RCX,RSI
.L_402057:

            mov DWORD PTR [RDI+32],EDX
            add EDX,8
            mov QWORD PTR [RDI+24],RAX
            cmp EDX,R11D
            je .L_40209e
.L_402066:

            shl RAX,8
            cmp RCX,R9
            lea RSI,QWORD PTR [RCX+1]
            mov QWORD PTR [RDI+24],RAX
            jae .L_402050

            mov R10,QWORD PTR [RDI]
            mov QWORD PTR [RDI+16],RSI
            movzx R8D,BYTE PTR [R10+RCX*1]
            cmp R8B,255
            je .L_4020a0

            mov DWORD PTR [RDI+32],EDX
            add EDX,8
            or RAX,R8
            cmp EDX,R11D
            mov RCX,RSI
            mov QWORD PTR [RDI+24],RAX
            jne .L_402066
.L_40209e:

            ret 
.L_4020a0:

            or AL,255
            cmp BYTE PTR [R10+RSI*1],0
            jne .L_4020b8

            add RCX,2
            mov QWORD PTR [RDI+16],RCX
            jmp .L_402057
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4020b8:

            mov QWORD PTR [RDI+40],RCX
            mov R9,RCX
            mov RCX,RSI
            jmp .L_402057
.L_4020c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4020d0:

            mov R9D,DWORD PTR [RSI+32]
            push R13
            mov RDX,QWORD PTR [RSI+24]
            push R12
            push RBP
            push RBX
.L_4020de:

            cmp R9D,16
            jle .L_402148
.L_4020e4:

            lea R8D,DWORD PTR [R9-8]
            mov RAX,RDX
            mov ECX,R8D
            shr RAX,CL
            movzx EAX,AL
            lea R10,QWORD PTR [RDI+RAX*4]
            movzx ECX,BYTE PTR [R10]
            movzx EAX,WORD PTR [R10+2]
            lea R11D,DWORD PTR [RCX-8]
            test R11D,R11D
            jle .L_4021d0

            mov ECX,R8D
            mov EDI,1
            sub ECX,R11D
            shr RDX,CL
            mov ECX,R11D
            shl EDI,CL
            sub EDI,1
            and EDX,EDI
            movsxd RDX,EDX
            add RDX,RAX
            lea RAX,QWORD PTR [R10+RDX*4]
            pop RBX
.L_402131:

            movzx ECX,BYTE PTR [RAX]
            movzx EAX,WORD PTR [RAX+2]
            pop RBP
            pop R12
            pop R13
            sub R8D,ECX
            mov DWORD PTR [RSI+32],R8D
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402148:

            mov R12D,56
            lea R13D,DWORD PTR [R9+8]
            mov RCX,QWORD PTR [RSI+16]
            sub R12D,R9D
            mov R11,QWORD PTR [RSI+40]
            mov R8D,R12D
            mov EAX,R13D
            and R8D,4294967288
            lea EBX,DWORD PTR [R9+R8*1+16]
            jmp .L_402185
          .byte 0x66
          .byte 0x90
.L_402170:

            mov QWORD PTR [RSI+16],R8
            mov RCX,R8
.L_402177:

            mov DWORD PTR [RSI+32],EAX
            add EAX,8
            mov QWORD PTR [RSI+24],RDX
            cmp EBX,EAX
            je .L_4021bd
.L_402185:

            shl RDX,8
            cmp RCX,R11
            lea R8,QWORD PTR [RCX+1]
            mov QWORD PTR [RSI+24],RDX
            jae .L_402170

            mov RBP,QWORD PTR [RSI]
            mov QWORD PTR [RSI+16],R8
            movzx R10D,BYTE PTR [RBP+RCX*1]
            cmp R10B,255
            je .L_4021e8

            mov DWORD PTR [RSI+32],EAX
            add EAX,8
            or RDX,R10
            cmp EBX,EAX
            mov RCX,R8
            mov QWORD PTR [RSI+24],RDX
            jne .L_402185
.L_4021bd:

            and R12D,4294967288
            lea R9D,DWORD PTR [R12+R13*1]
            jmp .L_4020e4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4021d0:

            mov R8D,R9D
            sub R8D,ECX
            pop RBX
.L_4021d7:

            mov DWORD PTR [RSI+32],R8D
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4021e8:

            or DL,255
            cmp BYTE PTR [RBP+R8*1],0
            jne .L_402200

            add RCX,2
            mov QWORD PTR [RSI+16],RCX
            jmp .L_402177
.L_402200:

            mov QWORD PTR [RSI+40],RCX
            mov R11,RCX
            mov RCX,R8
            jmp .L_402177
.L_40220f:

            nop
.L_402210:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,376
.L_402221:

            mov RAX,QWORD PTR [RSP+432]
            mov QWORD PTR [RSP+96],RCX
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+360],RBX
            xor EBX,EBX
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+88],RDX
            mov RBX,QWORD PTR [RAX]
            mov QWORD PTR [RSP],R8
            mov QWORD PTR [RSP+24],RAX
            mov R14,QWORD PTR [RSP+440]
            lea RCX,QWORD PTR [RBX+3]
            cmp RSI,RCX
            jb .L_402ce0

            movzx EAX,BYTE PTR [RDI+RBX*1]
            movzx R15D,BYTE PTR [RDI+RBX*1+1]
            mov R12,RDI
            mov BYTE PTR [RSP+20],AL
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX],RCX
            movzx EBP,BYTE PTR [RDI+RBX*1+2]
            test EBP,EBP
            mov RSI,RBP
            je .L_4022a7

            mov RAX,QWORD PTR [R14+136]
            sub RAX,QWORD PTR [R14+128]
            sar RAX,6
            cmp EBP,EAX
            jle .L_402310
.L_4022a7:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408a7f]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov R8D,EBP
            mov ESI,1
            xor EAX,EAX
.L_4022c6:

            call __fprintf_chk@PLT
.L_4022cb:

            mov DWORD PTR [R14+272],15
            mov BYTE PTR [RSP+8],0
.L_4022db:

            mov RBX,QWORD PTR [RSP+360]
            xor RBX,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+8]
            jne .L_40405b

            add RSP,376
.L_4022fe:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402310:

            pxor XMM0,XMM0
            test RBP,RBP
            mov R13D,R9D
            mov QWORD PTR [RSP+288],0
            movaps XMMWORD PTR [RSP+272],XMM0
            jne .L_402d70
.L_402334:

            lea R8D,DWORD PTR [RBP+RBP*1]
            mov RDI,QWORD PTR [RSP+40]
            movsxd RAX,R8D
            add RAX,RCX
            cmp RDI,RAX
            jb .L_402d20

            mov EDI,32
            mov QWORD PTR [RSP+304],0
            mov DWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            mov DWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
.L_40238c:

            call _Znwm@PLT
.L_402391:

            lea ESI,DWORD PTR [RBP-1]
            mov RDI,QWORD PTR [RSP+272]
            mov R11,QWORD PTR [RSP+24]
            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RAX+32]
            lea RSI,QWORD PTR [RSI+RSI*2]
            mov QWORD PTR [RSP+8],RBX
            mov BYTE PTR [RSP+32],R15B
            mov QWORD PTR [RSP+336],RDX
            mov QWORD PTR [RSP+320],RDX
            mov RDX,RDI
            mov QWORD PTR [RSP+48],RDI
            mov RCX,QWORD PTR [R11]
            lea RDI,QWORD PTR [RDI+RSI*4+12]
            movups XMMWORD PTR [RAX],XMM0
            mov QWORD PTR [RSP+304],RAX
            mov DWORD PTR [RSP+312],0
            mov R10D,1
            movups XMMWORD PTR [RAX+16],XMM0
            mov R15,RDI
            mov RBX,R11
            mov DWORD PTR [RSP+328],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402410:

            lea RSI,QWORD PTR [RCX+1]
            mov RDI,R10
            mov QWORD PTR [RBX],RSI
            movzx R8D,BYTE PTR [R12+RCX*1]
            mov ECX,R8D
            mov RSI,RCX
            and ECX,63
            shr RSI,3
            shl RDI,CL
            and ESI,24
            mov RCX,RDI
            add RSI,RAX
            mov RDI,QWORD PTR [RSI]
            test RCX,RDI
            jne .L_4039f9

            or RCX,RDI
            mov R9,QWORD PTR [R14+136]
            mov QWORD PTR [RSI],RCX
            mov RCX,QWORD PTR [R14+128]
            sub R9,RCX
            sar R9,6
            test R9,R9
            je .L_402d90

            xor EDI,EDI
            xor ESI,ESI
            nop
            nop
            nop
            nop
.L_402470:

            cmp R8D,DWORD PTR [RCX]
            jne .L_40247c

            mov DWORD PTR [RDX],ESI
            mov EDI,1
.L_40247c:

            add RSI,1
            add RCX,64
            cmp RSI,R9
            jne .L_402470

            test DIL,DIL
            je .L_402d90

            mov R9,QWORD PTR [RBX]
            lea RCX,QWORD PTR [R9+1]
            mov QWORD PTR [RBX],RCX
            movzx R8D,BYTE PTR [R12+R9*1]
            mov ESI,R8D
            sar R8D,4
            and ESI,15
            cmp R8D,3
            movzx R11D,SIL
            jg .L_403a2b

            cmp SIL,3
            ja .L_403a68

            mov DWORD PTR [RDX+4],R8D
            mov DWORD PTR [RDX+8],R11D
            add RDX,12
            cmp R15,RDX
            jne .L_402410

            lea RAX,QWORD PTR [R9+4]
            cmp QWORD PTR [RSP+40],RAX
            mov RBX,QWORD PTR [RSP+8]
            movzx R15D,BYTE PTR [RSP+32]
            jb .L_403bd1

            mov RSI,QWORD PTR [RSP+24]
            lea RDX,QWORD PTR [R9+2]
            mov QWORD PTR [RSI],RDX
            movzx R8D,BYTE PTR [R12+RCX*1]
            lea RCX,QWORD PTR [R9+3]
            mov QWORD PTR [RSI],RCX
            mov DWORD PTR [RSP+256],R8D
            movzx ESI,BYTE PTR [R12+R9*1+2]
            cmp R8B,63
            mov DWORD PTR [RSP+8],ESI
            mov DWORD PTR [RSP+260],ESI
            ja .L_403cfe

            cmp R8D,ESI
            setg CL
            cmp ESI,63
            setg DL
            or CL,DL
            je .L_403da3

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408ad9]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov R8D,ESI
            xor EAX,EAX
            mov ESI,1
.L_402560:

            call __fprintf_chk@PLT
.L_402565:

            mov DWORD PTR [R14+272],13
            mov BYTE PTR [RSP+8],0
            nop
            nop
            nop
.L_402578:

            mov RDI,QWORD PTR [RSP+304]
            test RDI,RDI
            je .L_40258a

            call _ZdlPv@PLT
.L_40258a:

            mov RDI,QWORD PTR [RSP+272]
            test RDI,RDI
            je .L_40259c

            call _ZdlPv@PLT
.L_40259c:

            cmp BYTE PTR [RSP+8],0
            je .L_4022db

            mov RAX,QWORD PTR [R14+160]
            movabs RDX,-6148914691236517205
            mov RBX,QWORD PTR [RAX-24]
            mov QWORD PTR [RSP+128],RAX
            mov RAX,QWORD PTR [RAX-16]
            mov QWORD PTR [RSP+32],RBX
            mov QWORD PTR [RSP+104],RAX
            sub RAX,RBX
            sar RAX,2
            imul RAX,RDX
            cmp RAX,1
            mov QWORD PTR [RSP+64],RAX
            jbe .L_402eb0

            mov EAX,DWORD PTR [R14+24]
            mov DWORD PTR [RSP+152],EAX
            mov EAX,DWORD PTR [R14+20]
            mov DWORD PTR [RSP+156],EAX
.L_402602:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+304],R12
            mov DWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+328],0
            mov RCX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP+40]
            lea R9,QWORD PTR [RAX-2]
            mov QWORD PTR [RSP+312],RAX
            xor EAX,EAX
            lea RDX,QWORD PTR [RCX+1]
            cmp RCX,R9
            mov QWORD PTR [RSP+344],R9
            jae .L_40266e

            mov QWORD PTR [RSP+320],RDX
            movzx EAX,BYTE PTR [R12+RCX*1]
            cmp AL,255
            je .L_402f60
.L_40266e:

            shl RAX,8
            cmp R9,RDX
            mov DWORD PTR [RSP+336],8
            mov QWORD PTR [RSP+328],RAX
            lea RCX,QWORD PTR [RDX+1]
            jbe .L_4026a8

            mov QWORD PTR [RSP+320],RCX
            movzx ESI,BYTE PTR [R12+RDX*1]
            cmp SIL,255
            je .L_402f48

            or RAX,RSI
.L_4026a8:

            shl RAX,8
            cmp R9,RCX
            mov DWORD PTR [RSP+336],16
            mov QWORD PTR [RSP+328],RAX
            lea RDX,QWORD PTR [RCX+1]
            jbe .L_4026e2

            mov QWORD PTR [RSP+320],RDX
            movzx ESI,BYTE PTR [R12+RCX*1]
            cmp SIL,255
            je .L_402f80

            or RAX,RSI
.L_4026e2:

            shl RAX,8
            cmp R9,RDX
            mov DWORD PTR [RSP+336],24
            mov QWORD PTR [RSP+328],RAX
            lea RCX,QWORD PTR [RDX+1]
            jbe .L_40271c

            mov QWORD PTR [RSP+320],RCX
            movzx ESI,BYTE PTR [R12+RDX*1]
            cmp SIL,255
            je .L_402fa0

            or RAX,RSI
.L_40271c:

            shl RAX,8
            cmp R9,RCX
            mov DWORD PTR [RSP+336],32
            mov QWORD PTR [RSP+328],RAX
            lea RDX,QWORD PTR [RCX+1]
            jbe .L_402756

            mov QWORD PTR [RSP+320],RDX
            movzx ESI,BYTE PTR [R12+RCX*1]
            cmp SIL,255
            je .L_402fb8

            or RAX,RSI
.L_402756:

            shl RAX,8
            cmp R9,RDX
            mov DWORD PTR [RSP+336],40
            mov QWORD PTR [RSP+328],RAX
            lea RCX,QWORD PTR [RDX+1]
            jbe .L_402790

            mov QWORD PTR [RSP+320],RCX
            movzx ESI,BYTE PTR [R12+RDX*1]
            cmp SIL,255
            je .L_402fd0

            or RAX,RSI
.L_402790:

            shl RAX,8
            cmp R9,RCX
            mov DWORD PTR [RSP+336],48
            mov QWORD PTR [RSP+328],RAX
            lea RDX,QWORD PTR [RCX+1]
            jbe .L_4027ca

            mov QWORD PTR [RSP+320],RDX
            movzx ESI,BYTE PTR [R12+RCX*1]
            cmp SIL,255
            je .L_402f08

            or RAX,RSI
.L_4027ca:

            lea RBX,QWORD PTR [RDX+1]
            shl RAX,8
            cmp R9,RDX
            mov DWORD PTR [RSP+336],56
            mov QWORD PTR [RSP+328],RAX
            mov QWORD PTR [RSP+80],RBX
            mov QWORD PTR [RSP+320],RBX
            jbe .L_402808

            movzx ECX,BYTE PTR [R12+RDX*1]
            cmp CL,255
            je .L_402f20

            or RAX,RCX
.L_402808:

            mov QWORD PTR [RSP+328],RAX
            mov EAX,DWORD PTR [R14+28]
            test R13B,R13B
            mov DWORD PTR [RSP+336],64
            mov DWORD PTR [RSP+148],EAX
            je .L_402dc8

            mov RAX,QWORD PTR [RSP+128]
            mov EBX,DWORD PTR [RAX-28]
            mov ECX,DWORD PTR [RAX-40]
            mov EDI,DWORD PTR [RAX-32]
            mov R15D,DWORD PTR [RAX-36]
            mov EAX,1
            mov DWORD PTR [RSP+20],ECX
            mov ECX,EBX
            mov DWORD PTR [RSP+124],EBX
            shl EAX,CL
            test EDI,EDI
            mov DWORD PTR [RSP+120],EDI
            mov EBX,EAX
            mov DWORD PTR [RSP+48],EAX
            mov WORD PTR [RSP+172],AX
            lea R10D,DWORD PTR [RBX-1]
            mov ESI,EAX
            je .L_402fe8
.L_402875:

            cmp QWORD PTR [RSP+64],0
            je .L_402921

            movsxd RBX,DWORD PTR [RSP+20]
            mov R13,QWORD PTR [RSP+32]
            lea EAX,DWORD PTR [RBX+1]
            mov RBP,RBX
            mov QWORD PTR [RSP+56],RBX
            xor EBX,EBX
            mov DWORD PTR [RSP+72],EAX
            cdqe 
            sub RBP,RAX
            add RBP,RBP
.L_4028a4:

            cmp R15D,DWORD PTR [RSP+20]
            mov ECX,DWORD PTR [R13]
            jl .L_402912

            movsxd RDI,ECX
            mov RAX,QWORD PTR [RSP+56]
            shl RDI,7
            add RDI,QWORD PTR [RSP]
            movzx EAX,WORD PTR [RDI+RAX*2]
            test SI,AX
            jne .L_402e08

            test AX,R10W
            jne .L_402e59

            movsxd RDX,DWORD PTR [RSP+72]
            lea R11,QWORD PTR [RDI+RBP*1]
            jmp .L_402903
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4028e8:

            movzx EAX,WORD PTR [RDI+RDX*2]
            test AX,SI
            jne .L_402e10

            add RDX,1
            test AX,R10W
            jne .L_402e60
.L_402903:

            or EAX,ESI
            cmp R15D,EDX
            mov R8D,EDX
            mov WORD PTR [R11+RDX*2],AX
            jge .L_4028e8
.L_402912:

            add RBX,1
            add R13,12
            cmp RBX,QWORD PTR [RSP+64]
            jne .L_4028a4
.L_402921:

            cmp DWORD PTR [RSP+124],10
            jg .L_403b0b

            mov EAX,DWORD PTR [RSP+156]
            test EAX,EAX
            jle .L_403f4a

            mov EBX,DWORD PTR [RSP+20]
            mov EAX,1
            mov RDX,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+104]
            mov DWORD PTR [RSP+208],4294967295
            mov DWORD PTR [RSP+244],0
            mov DWORD PTR [RSP+236],0
            test EBX,EBX
            mov QWORD PTR [RSP+248],R12
            mov QWORD PTR [RSP+176],R14
            cmovne EAX,EBX
            mov DWORD PTR [RSP+140],EAX
.L_40298b:

            mov R13D,DWORD PTR [RSP+152]
            test R13D,R13D
            jle .L_403948

            mov DWORD PTR [RSP+232],0
.L_4029a7:

            mov RAX,QWORD PTR [RSP+176]
            mov R12D,DWORD PTR [RAX+28]
            test R12D,R12D
            jle .L_4029cf

            mov EBP,DWORD PTR [RSP+148]
            test EBP,EBP
            je .L_403c1b
.L_4029c7:

            sub DWORD PTR [RSP+148],1
.L_4029cf:

            cmp RDX,RCX
            je .L_40392c

            mov QWORD PTR [RSP+224],0
            mov DWORD PTR [RSP+104],R15D
.L_4029e9:

            mov RAX,QWORD PTR [RSP+224]
            mov RDI,QWORD PTR [RSP+176]
            mov RSI,QWORD PTR [RSP+88]
            lea RAX,QWORD PTR [RAX+RAX*2]
            mov RSI,QWORD PTR [RSI]
            lea RBX,QWORD PTR [RDX+RAX*4]
            movsxd RAX,DWORD PTR [RBX]
            mov QWORD PTR [RSP+200],RBX
            shl RAX,6
            add RAX,QWORD PTR [RDI+128]
            mov RDI,RAX
            mov QWORD PTR [RSP+160],RAX
            imul EAX,DWORD PTR [RBX+4],758
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov QWORD PTR [RSP+192],RAX
            imul EAX,DWORD PTR [RBX+8],758
            mov RBX,QWORD PTR [RSP+96]
            cmp QWORD PTR [RSP+64],1
            mov RSI,QWORD PTR [RBX]
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov QWORD PTR [RSP+112],RAX
            jbe .L_403b4b

            mov EAX,DWORD PTR [RDI+8]
            mov EBX,DWORD PTR [RDI+4]
            test EAX,EAX
            mov DWORD PTR [RSP+240],EAX
            mov DWORD PTR [RSP+212],EBX
            jle .L_4038f5

            mov EDI,DWORD PTR [RSP+236]
            imul EDI,EAX
            mov EAX,DWORD PTR [RSP+232]
            imul EAX,EBX
            mov DWORD PTR [RSP+216],EDI
            mov DWORD PTR [RSP+220],EAX
.L_402aa3:

            mov QWORD PTR [RSP+184],0
.L_402aaf:

            mov EAX,DWORD PTR [RSP+212]
            test EAX,EAX
            jle .L_4038c7

            mov EBX,DWORD PTR [RSP+216]
            add EBX,DWORD PTR [RSP+184]
            lea R15,QWORD PTR [RIP+.L_408da0]
            mov DWORD PTR [RSP+144],EBX
            mov EBX,DWORD PTR [RSP+220]
            add EAX,EBX
            mov DWORD PTR [RSP+32],EBX
            mov DWORD PTR [RSP+168],EAX
            jmp .L_402b3e
.L_402af0:

            mov R10D,DWORD PTR [RSP+20]
            test R10D,R10D
            je .L_403118
.L_402afe:

            mov EBX,DWORD PTR [RSP+140]
            cmp DWORD PTR [RSP+104],EBX
            jl .L_402b28

            mov EAX,DWORD PTR [RSP+208]
            test EAX,EAX
            jle .L_4035a8

            sub EAX,1
            mov DWORD PTR [RSP+208],EAX
            nop
            nop
            nop
            nop
.L_402b28:

            add DWORD PTR [RSP+32],1
            mov EAX,DWORD PTR [RSP+32]
            cmp DWORD PTR [RSP+168],EAX
            je .L_4038c7
.L_402b3e:

            mov RBX,QWORD PTR [RSP+160]
            mov EAX,DWORD PTR [RSP+144]
            mov R11D,DWORD PTR [RSP+120]
            imul EAX,DWORD PTR [RBX+24]
            mov RDX,QWORD PTR [RBX+40]
            add EAX,DWORD PTR [RSP+32]
            shl EAX,6
            test R11D,R11D
            cdqe 
            lea R12,QWORD PTR [RDX+RAX*2]
            je .L_402af0

            mov R8D,DWORD PTR [RSP+20]
            test R8D,R8D
            jne .L_402baa

            mov ECX,DWORD PTR [RSP+336]
            mov RAX,QWORD PTR [RSP+328]
            cmp ECX,16
            jle .L_403780
.L_402b8e:

            sub ECX,1
            mov DWORD PTR [RSP+336],ECX
            shr RAX,CL
            movzx ECX,BYTE PTR [RSP+124]
            and EAX,1
            shl EAX,CL
            or WORD PTR [R12],AX
.L_402baa:

            mov R13D,DWORD PTR [RSP+140]
            cmp DWORD PTR [RSP+104],R13D
            jl .L_402b28

            mov EAX,DWORD PTR [RSP+48]
            mov EDI,DWORD PTR [RSP+208]
            neg EAX
            test EDI,EDI
            mov DWORD PTR [RSP+136],EAX
            jle .L_403200
.L_402bd9:

            mov R14,QWORD PTR [RSP+304]
            movsxd RAX,R13D
            jmp .L_402c39
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402bf0:

            sub EDX,1
            bt RCX,RDX
            mov DWORD PTR [RSP+336],EDX
            jae .L_402c27

            movsx EDX,DI
            test DWORD PTR [RSP+48],EDX
            jne .L_402c27

            movzx EBX,WORD PTR [RSP+172]
            test DI,DI
            lea EDX,DWORD PTR [RDI+RBX*1]
            movzx EBX,WORD PTR [RSP+136]
            lea ECX,DWORD PTR [RDI+RBX*1]
            mov EDI,EDX
            cmovs EDI,ECX
.L_402c27:

            mov WORD PTR [R9],DI
.L_402c2b:

            add RAX,1
            cmp DWORD PTR [RSP+104],EAX
            jl .L_403108
.L_402c39:

            movsxd RDX,DWORD PTR [R15+RAX*4]
            lea R9,QWORD PTR [R12+RDX*2]
            movzx EDI,WORD PTR [R9]
            test DI,DI
            je .L_402c2b

            mov EDX,DWORD PTR [RSP+336]
            mov RCX,QWORD PTR [RSP+328]
            cmp EDX,16
            jg .L_402bf0

            mov EBP,56
            lea R13D,DWORD PTR [RDX+8]
            mov RSI,QWORD PTR [RSP+320]
            sub EBP,EDX
            mov RBX,QWORD PTR [RSP+344]
            mov R11D,EBP
            and R11D,4294967288
            add R11D,R13D
            jmp .L_402cb8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402c88:

            movzx R10D,BYTE PTR [R14+RSI*1]
            cmp R10B,255
            je .L_4031d0

            or RCX,R10
            mov RSI,R8
.L_402c9d:

            add EDX,8
            mov QWORD PTR [RSP+328],RCX
            cmp EDX,R11D
            mov DWORD PTR [RSP+336],EDX
            je .L_4031f0
.L_402cb8:

            lea R8,QWORD PTR [RSI+1]
            shl RCX,8
            cmp RSI,RBX
            mov QWORD PTR [RSP+328],RCX
            mov QWORD PTR [RSP+320],R8
            jb .L_402c88
.L_402cd5:

            mov RSI,R8
            jmp .L_402c9d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402ce0:

            mov R9D,DWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408528]
            mov R8D,3
            mov ECX,EBX
            mov ESI,1
            xor EAX,EAX
.L_402d02:

            call __fprintf_chk@PLT
.L_402d07:

            mov DWORD PTR [R14+272],3
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402d20:

            mov R9D,EDI
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408528]
            mov ESI,1
            xor EAX,EAX
.L_402d38:

            call __fprintf_chk@PLT

            mov RDI,QWORD PTR [RSP+272]
            mov DWORD PTR [R14+272],3
            mov BYTE PTR [RSP+8],0
            test RDI,RDI
            je .L_4022db

            call _ZdlPv@PLT

            jmp .L_4022db
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402d70:

            lea RDI,QWORD PTR [RSP+272]
            call .L_406ca0
.L_402d7d:

            mov RAX,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RAX]
            jmp .L_402334
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402d90:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408558]
            mov ECX,R8D
            mov ESI,1
            xor EAX,EAX
.L_402da8:

            call __fprintf_chk@PLT
.L_402dad:

            mov DWORD PTR [R14+272],33
            mov BYTE PTR [RSP+8],0
            jmp .L_402578
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402dc8:

            mov EDI,1
            xor R10D,R10D
            mov DWORD PTR [RSP+48],1
            mov WORD PTR [RSP+172],DI
            mov ESI,4294967295
            mov DWORD PTR [RSP+20],0
            mov DWORD PTR [RSP+124],0
            mov R15D,63
.L_402dfb:

            mov DWORD PTR [RSP+120],0
            jmp .L_402875
.L_402e08:

            mov R8D,DWORD PTR [RSP+20]
            nop
            nop
            nop
.L_402e10:

            shl RBX,7
            add RBX,QWORD PTR [RSP]
            movsxd RAX,R8D
            sub RSP,8
.L_402e1f:

            movzx ESI,SI
            mov RDI,QWORD PTR [RIP+stderr]
            push RSI
            lea RDX,QWORD PTR [RIP+.L_408640]
            mov ESI,1
            movzx R9D,WORD PTR [RBX+RAX*2]
            xor EAX,EAX
.L_402e3d:

            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],26
            pop RCX
            pop RSI
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
.L_402e59:

            mov R8D,DWORD PTR [RSP+20]
            nop
            nop
.L_402e60:

            shl RBX,7
            add RBX,QWORD PTR [RSP]
            movsxd RAX,R8D
            sub RSP,8
            movzx ESI,SI
            mov RDI,QWORD PTR [RIP+stderr]
            push RSI
            lea RDX,QWORD PTR [RIP+.L_408680]
            mov ESI,1
            movzx R9D,WORD PTR [RBX+RAX*2]
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],27
            pop RAX
            pop RDX
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402eb0:

            movsxd RCX,DWORD PTR [RBX]
            mov EAX,DWORD PTR [R14+12]
            lea ESI,DWORD PTR [RAX*8]
            mov EAX,DWORD PTR [R14]
            shl RCX,6
            add RCX,QWORD PTR [R14+128]
            imul EAX,DWORD PTR [RCX+4]
            lea EAX,DWORD PTR [RSI+RAX*1-1]
            cdq 
            idiv ESI
            mov DWORD PTR [RSP+152],EAX
            mov EAX,DWORD PTR [R14+16]
            lea ESI,DWORD PTR [RAX*8]
            mov EAX,DWORD PTR [R14+4]
            imul EAX,DWORD PTR [RCX+8]
            lea EAX,DWORD PTR [RSI+RAX*1-1]
            cdq 
            idiv ESI
            mov DWORD PTR [RSP+156],EAX
            jmp .L_402602
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_402f08:

            or AL,255
            cmp BYTE PTR [R12+RDX*1],0
            jne .L_40306e

            lea RDX,QWORD PTR [RCX+2]
            jmp .L_4027ca
          .byte 0x66
          .byte 0x90
.L_402f20:

            or AL,255
            cmp BYTE PTR [R12+RBX*1],0
            jne .L_40305e

            lea RBX,QWORD PTR [RDX+2]
            mov QWORD PTR [RSP+80],RBX
            mov QWORD PTR [RSP+320],RBX
            jmp .L_402808
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402f48:

            or AL,255
            cmp BYTE PTR [R12+RCX*1],0
            jne .L_40304e

            lea RCX,QWORD PTR [RDX+2]
            jmp .L_4026a8
          .byte 0x66
          .byte 0x90
.L_402f60:

            cmp BYTE PTR [R12+RCX*1+1],0
            jne .L_403039

            lea RDX,QWORD PTR [RCX+2]
            mov EAX,255
            jmp .L_40266e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402f80:

            or AL,255
            cmp BYTE PTR [R12+RDX*1],0
            jne .L_403029

            lea RDX,QWORD PTR [RCX+2]
            jmp .L_4026e2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402fa0:

            or AL,255
            cmp BYTE PTR [R12+RCX*1],0
            jne .L_403019

            lea RCX,QWORD PTR [RDX+2]
            jmp .L_40271c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402fb8:

            or AL,255
            cmp BYTE PTR [R12+RDX*1],0
            jne .L_403009

            lea RDX,QWORD PTR [RCX+2]
            jmp .L_402756
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402fd0:

            or AL,255
            cmp BYTE PTR [R12+RCX*1],0
            jne .L_402ff9

            lea RCX,QWORD PTR [RDX+2]
            jmp .L_402790
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402fe8:

            movzx ECX,BYTE PTR [RSP+124]
            mov ESI,65535
            shl ESI,CL
            jmp .L_402dfb
.L_402ff9:

            mov QWORD PTR [RSP+344],RDX
            mov R9,RDX
            jmp .L_402790
.L_403009:

            mov QWORD PTR [RSP+344],RCX
            mov R9,RCX
            jmp .L_402756
.L_403019:

            mov QWORD PTR [RSP+344],RDX
            mov R9,RDX
            jmp .L_40271c
.L_403029:

            mov QWORD PTR [RSP+344],RCX
            mov R9,RCX
            jmp .L_4026e2
.L_403039:

            mov QWORD PTR [RSP+344],RCX
            mov R9,RCX
            mov EAX,255
            jmp .L_40266e
.L_40304e:

            mov QWORD PTR [RSP+344],RDX
            mov R9,RDX
            jmp .L_4026a8
.L_40305e:

            mov QWORD PTR [RSP+344],RDX
            mov R9,RDX
            jmp .L_402808
.L_40306e:

            mov QWORD PTR [RSP+344],RCX
            mov R9,RCX
            jmp .L_4027ca
.L_40307e:

            mov EAX,1
            mov ECX,EBX
            shl EAX,CL
            test EBX,EBX
            mov DWORD PTR [RSP+208],EAX
            jle .L_4030e0

            mov ESI,DWORD PTR [RSP+20]
            test ESI,ESI
            jle .L_403f20

            mov EAX,DWORD PTR [RSP+336]
            cmp EAX,16
            jle .L_403f34
.L_4030ae:

            mov RDX,QWORD PTR [RSP+328]
            sub EAX,EBX
            mov RSI,-1
            mov ECX,EAX
            mov DWORD PTR [RSP+336],EAX
            shr RDX,CL
            mov ECX,EBX
            shl RSI,CL
            mov RCX,RSI
            not RCX
            and RDX,RCX
            add DWORD PTR [RSP+208],EDX
.L_4030e0:

            cmp BYTE PTR [RSP+175],0
            jne .L_403359

            mov EDX,DWORD PTR [RSP+208]
            test EDX,EDX
            jle .L_403108

            cmp DWORD PTR [RSP+104],R13D
            jge .L_402bd9

            nop
            nop
            nop
            nop
.L_403108:

            sub DWORD PTR [RSP+208],1
            jmp .L_402b28
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403118:

            mov RAX,QWORD PTR [RSP+200]
            mov RDI,QWORD PTR [RSP+192]
            movsxd RBX,DWORD PTR [RAX]
            lea RAX,QWORD PTR [RSP+304]
            mov RSI,RAX
            call .L_4020d0

            cmp EAX,11
            jg .L_4039b0

            test EAX,EAX
            jle .L_40319d

            mov EDX,DWORD PTR [RSP+336]
            mov RSI,QWORD PTR [RSP+328]
            cmp EDX,16
            jle .L_403a74
.L_403160:

            sub EDX,EAX
            mov ECX,EAX
            mov RDI,-1
            shl RDI,CL
            mov ECX,EDX
            mov DWORD PTR [RSP+336],EDX
            shr RSI,CL
            not RDI
            lea ECX,DWORD PTR [RAX-1]
            mov EDX,1
            and RSI,RDI
            mov EDI,EDX
            shl EDI,CL
            cmp ESI,EDI
            jge .L_403a61

            mov ECX,EAX
            shl EDX,CL
            sub ESI,EDX
            lea EAX,DWORD PTR [RSI+1]
.L_40319d:

            movsx EDX,WORD PTR [RSP+RBX*2+352]
            movzx ECX,BYTE PTR [RSP+124]
            add EAX,EDX
            mov EDI,EAX
            shl EDI,CL
            movsx EDX,DI
            mov ECX,EDI
            mov WORD PTR [R12],DI
            cmp EDI,EDX
            jne .L_403890

            mov WORD PTR [RSP+RBX*2+352],AX
            jmp .L_402afe
          .byte 0x90
.L_4031d0:

            or CL,255
            cmp BYTE PTR [R14+R8*1],0
            jne .L_403880

            add RSI,2
            mov QWORD PTR [RSP+320],RSI
            jmp .L_402c9d
          .byte 0x90
.L_4031f0:

            and EBP,4294967288
            lea EDX,DWORD PTR [RBP+R13*1]
            jmp .L_402bf0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403200:

            lea RAX,QWORD PTR [RSP+304]
            mov R14D,DWORD PTR [RSP+104]
            mov BYTE PTR [RSP+175],0
            mov QWORD PTR [RSP+80],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_403220:

            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+112]
            call .L_4020d0

            cmp EAX,255
            jg .L_403844

            mov EBX,EAX
            sar EBX,4
            and EAX,15
            mov DWORD PTR [RSP+56],EAX
            je .L_4034b0

            cmp EAX,1
            jne .L_403844

            mov EAX,DWORD PTR [RSP+336]
            mov RDI,QWORD PTR [RSP+304]
            mov RDX,QWORD PTR [RSP+328]
            cmp EAX,16
            mov QWORD PTR [RSP],RDI
            jle .L_4034f8
.L_403279:

            sub EAX,1
            bt RDX,RAX
            mov DWORD PTR [RSP+336],EAX
            jb .L_4034e0

            mov EAX,DWORD PTR [RSP+136]
            mov BYTE PTR [RSP+175],0
            mov DWORD PTR [RSP+56],EAX
.L_4032a0:

            movsxd RAX,R13D
            jmp .L_40330b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4032a8:

            mov EDX,DWORD PTR [RSP+336]
            mov RCX,QWORD PTR [RSP+328]
            cmp EDX,16
            jle .L_403390
.L_4032c0:

            sub EDX,1
            bt RCX,RDX
            mov DWORD PTR [RSP+336],EDX
            jae .L_4032f6

            movsx EDX,DI
            test DWORD PTR [RSP+48],EDX
            jne .L_4032f6

            movzx ECX,WORD PTR [RSP+172]
            lea EDX,DWORD PTR [RDI+RCX*1]
            movzx ECX,WORD PTR [RSP+136]
            add ECX,EDI
            test DI,DI
            mov EDI,EDX
            cmovs EDI,ECX
.L_4032f6:

            mov WORD PTR [R10],DI
.L_4032fa:

            lea R13D,DWORD PTR [RAX+1]
            add RAX,1
            cmp R14D,EAX
            jl .L_403458
.L_40330b:

            movsxd RDX,DWORD PTR [R15+RAX*4]
            mov R13D,EAX
            lea R10,QWORD PTR [R12+RDX*2]
            movzx EDI,WORD PTR [R10]
            test DI,DI
            jne .L_4032a8

            sub EBX,1
            jns .L_4032fa

            mov ECX,DWORD PTR [RSP+56]
            test ECX,ECX
            je .L_40333e

            cmp R14D,EAX
            jl .L_403464

            movzx EAX,WORD PTR [RSP+56]
            mov WORD PTR [R10],AX
.L_40333e:

            add R13D,1
            cmp R14D,R13D
            jge .L_403220

            cmp BYTE PTR [RSP+175],0
            je .L_403108
.L_403359:

            mov R14,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408888]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],28
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
.L_403390:

            mov R11D,56
            lea R13D,DWORD PTR [RDX+8]
            mov RSI,QWORD PTR [RSP+320]
            sub R11D,EDX
            mov RBP,QWORD PTR [RSP+344]
            mov DWORD PTR [RSP+72],R11D
            and R11D,4294967288
            add R11D,R13D
            jmp .L_4033ec
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4033c0:

            mov R9,QWORD PTR [RSP]
            movzx R9D,BYTE PTR [R9+RSI*1]
            cmp R9B,255
            je .L_403410

            or RCX,R9
            mov RSI,R8
.L_4033d5:

            add EDX,8
            mov QWORD PTR [RSP+328],RCX
            cmp EDX,R11D
            mov DWORD PTR [RSP+336],EDX
            je .L_403430
.L_4033ec:

            lea R8,QWORD PTR [RSI+1]
            shl RCX,8
            cmp RSI,RBP
            mov QWORD PTR [RSP+328],RCX
            mov QWORD PTR [RSP+320],R8
            jb .L_4033c0

            mov RSI,R8
            jmp .L_4033d5
          .byte 0x66
          .byte 0x90
.L_403410:

            mov R9,QWORD PTR [RSP]
            or CL,255
            cmp BYTE PTR [R9+R8*1],0
            jne .L_403440

            add RSI,2
            mov QWORD PTR [RSP+320],RSI
            jmp .L_4033d5
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403430:

            mov EDX,DWORD PTR [RSP+72]
            and EDX,4294967288
            add EDX,R13D
            jmp .L_4032c0
          .byte 0x90
.L_403440:

            mov QWORD PTR [RSP+344],RSI
            mov RBP,RSI
            mov RSI,R8
            jmp .L_4033d5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403458:

            mov EAX,DWORD PTR [RSP+56]
            test EAX,EAX
            je .L_40333e
.L_403464:

            mov R15D,R14D
.L_403467:

            mov R14,QWORD PTR [RSP+176]
            mov R8D,DWORD PTR [RSP+140]
            lea RDX,QWORD PTR [RIP+.L_4087f8]
            mov RDI,QWORD PTR [RIP+stderr]
            mov R9D,R15D
            mov ECX,R13D
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],39
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4034b0:

            cmp EBX,15
            jne .L_40307e

            mov RAX,QWORD PTR [RSP+304]
            mov QWORD PTR [RSP],RAX
            movzx EAX,BYTE PTR [RSP+8]
            mov BYTE PTR [RSP+175],AL
            jmp .L_4032a0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4034e0:

            mov EAX,DWORD PTR [RSP+48]
            mov BYTE PTR [RSP+175],0
            mov DWORD PTR [RSP+56],EAX
            jmp .L_4032a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4034f8:

            mov R11D,56
            lea R10D,DWORD PTR [RAX+8]
            mov RCX,QWORD PTR [RSP+320]
            sub R11D,EAX
            mov R9,QWORD PTR [RSP+344]
            mov RBP,RDI
            mov R8D,R11D
            and R8D,4294967288
            add R8D,R10D
            jmp .L_403550
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403528:

            movzx EDI,BYTE PTR [RBP+RCX*1]
            cmp DIL,255
            je .L_403578

            or RDX,RDI
            mov RCX,RSI
.L_403539:

            add EAX,8
            mov QWORD PTR [RSP+328],RDX
            cmp EAX,R8D
            mov DWORD PTR [RSP+336],EAX
            je .L_403598
.L_403550:

            lea RSI,QWORD PTR [RCX+1]
            shl RDX,8
            cmp RCX,R9
            mov QWORD PTR [RSP+328],RDX
            mov QWORD PTR [RSP+320],RSI
            jb .L_403528
.L_40356d:

            mov RCX,RSI
            jmp .L_403539
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403578:

            or DL,255
            cmp BYTE PTR [RBP+RSI*1],0
            jne .L_403831

            add RCX,2
            mov QWORD PTR [RSP+320],RCX
            jmp .L_403539

            nop
            nop
            nop
            nop
.L_403598:

            and R11D,4294967288
            lea EAX,DWORD PTR [R11+R10*1]
            jmp .L_403279
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4035a8:

            lea RAX,QWORD PTR [RSP+304]
            mov R14D,EBX
            mov QWORD PTR [RSP],R12
            mov R13,-1
            mov EBP,1
            mov EBX,DWORD PTR [RSP+104]
            mov QWORD PTR [RSP+80],RAX
            mov R12D,DWORD PTR [RSP+124]
            jmp .L_40366f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4035e0:

            add R14D,EDX
            cmp EBX,R14D
            jl .L_403b82

            lea EDX,DWORD PTR [RAX+R12*1]
            cmp EDX,11
            jg .L_403b8d

            mov ECX,DWORD PTR [RSP+336]
            mov RDX,QWORD PTR [RSP+328]
            cmp ECX,16
            jle .L_4036c0
.L_403611:

            mov EDI,ECX
            mov RSI,R13
            mov ECX,EAX
            sub EDI,EAX
            shl RSI,CL
            mov ECX,EDI
            not RSI
            mov DWORD PTR [RSP+336],EDI
            shr RDX,CL
            lea ECX,DWORD PTR [RAX-1]
            mov EDI,EBP
            and RDX,RSI
            shl EDI,CL
            mov ESI,EDX
            cmp EDX,EDI
            jge .L_4036b0

            mov ECX,EAX
            mov EDI,EBP
            shl EDI,CL
            mov ECX,R12D
            sub EDX,EDI
            lea EAX,DWORD PTR [RDX+1]
            mov ESI,EDX
            shl EAX,CL
            add ESI,1
            jns .L_4036b0
.L_403653:

            movsxd RDX,R14D
            mov RDI,QWORD PTR [RSP]
            movsxd RDX,DWORD PTR [R15+RDX*4]
            mov WORD PTR [RDI+RDX*2],AX
.L_403662:

            add R14D,1
            cmp EBX,R14D
            jl .L_403108
.L_40366f:

            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+112]
            call .L_4020d0

            cmp EAX,255
            jg .L_403841

            mov EDX,EAX
            sar EDX,4
            and EAX,15
            jne .L_4035e0

            cmp EDX,15
            jne .L_403d34

            add R14D,15
            jmp .L_403662
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4036b0:

            mov EAX,ESI
            mov ECX,R12D
            shl EAX,CL
            jmp .L_403653
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4036c0:

            mov EDI,56
            lea R8D,DWORD PTR [RCX+8]
            mov R11,QWORD PTR [RSP+304]
            sub EDI,ECX
            mov RSI,QWORD PTR [RSP+320]
            mov R10,QWORD PTR [RSP+344]
            mov DWORD PTR [RSP+56],EDI
            and EDI,4294967288
            mov DWORD PTR [RSP+72],R8D
            mov R9D,EDI
            add R9D,R8D
            jmp .L_403728
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403700:

            movzx R8D,BYTE PTR [R11+RSI*1]
            cmp R8B,255
            je .L_403750

            or RDX,R8
            mov RSI,RDI
.L_403711:

            add ECX,8
            mov QWORD PTR [RSP+328],RDX
            cmp ECX,R9D
            mov DWORD PTR [RSP+336],ECX
            je .L_403770
.L_403728:

            lea RDI,QWORD PTR [RSI+1]
            shl RDX,8
            cmp RSI,R10
            mov QWORD PTR [RSP+328],RDX
            mov QWORD PTR [RSP+320],RDI
            jb .L_403700
.L_403745:

            mov RSI,RDI
            jmp .L_403711
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403750:

            or DL,255
            cmp BYTE PTR [R11+RDI*1],0
            jne .L_403815

            add RSI,2
            mov QWORD PTR [RSP+320],RSI
            jmp .L_403711
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403770:

            mov ECX,DWORD PTR [RSP+56]
            and ECX,4294967288
            add ECX,DWORD PTR [RSP+72]
            jmp .L_403611
.L_403780:

            mov EBX,56
            lea R11D,DWORD PTR [RCX+8]
            mov R10,QWORD PTR [RSP+304]
            sub EBX,ECX
            mov RDX,QWORD PTR [RSP+320]
            mov R9,QWORD PTR [RSP+344]
            mov R8D,EBX
            and R8D,4294967288
            add R8D,R11D
            jmp .L_4037d8
          .byte 0x90
.L_4037b0:

            movzx EDI,BYTE PTR [R10+RDX*1]
            cmp DIL,255
            je .L_4037fa

            or RAX,RDI
            mov RDX,RSI
.L_4037c1:

            add ECX,8
            mov QWORD PTR [RSP+328],RAX
            cmp ECX,R8D
            mov DWORD PTR [RSP+336],ECX
            je .L_403825
.L_4037d8:

            lea RSI,QWORD PTR [RDX+1]
            shl RAX,8
            cmp RDX,R9
            mov QWORD PTR [RSP+328],RAX
            mov QWORD PTR [RSP+320],RSI
            jb .L_4037b0
.L_4037f5:

            mov RDX,RSI
            jmp .L_4037c1
.L_4037fa:

            or AL,255
            cmp BYTE PTR [R10+RSI*1],0
            jne .L_4039e9

            add RDX,2
            mov QWORD PTR [RSP+320],RDX
            jmp .L_4037c1
.L_403815:

            mov QWORD PTR [RSP+344],RSI
            mov R10,RSI
            jmp .L_403745
.L_403825:

            and EBX,4294967288
            lea ECX,DWORD PTR [RBX+R11*1]
            jmp .L_402b8e
.L_403831:

            mov QWORD PTR [RSP+344],RCX
            mov R9,RCX
            jmp .L_40356d
.L_403841:

            mov R13D,R14D
.L_403844:

            mov R14,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_4087c0]
            mov ECX,EAX
            mov R8D,R13D
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],22
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
.L_403880:

            mov QWORD PTR [RSP+344],RSI
            mov RBX,RSI
            jmp .L_402cd5
.L_403890:

            mov R14,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408b1b]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],23
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
.L_4038c7:

            add QWORD PTR [RSP+184],1
            mov RAX,QWORD PTR [RSP+184]
            cmp DWORD PTR [RSP+240],EAX
            jg .L_402aaf

            mov RAX,QWORD PTR [RSP+128]
            mov RDX,QWORD PTR [RAX-24]
            mov RCX,QWORD PTR [RAX-16]
.L_4038f5:

            mov RAX,RCX
            movabs RSI,-6148914691236517205
            add QWORD PTR [RSP+224],1
            sub RAX,RDX
            mov RBX,QWORD PTR [RSP+224]
            sar RAX,2
            imul RAX,RSI
            cmp RBX,RAX
            jb .L_4029e9

            mov R15D,DWORD PTR [RSP+104]
.L_40392c:

            add DWORD PTR [RSP+232],1
            mov EAX,DWORD PTR [RSP+232]
            cmp DWORD PTR [RSP+152],EAX
            jne .L_4029a7
.L_403948:

            add DWORD PTR [RSP+236],1
            mov EAX,DWORD PTR [RSP+236]
            cmp DWORD PTR [RSP+156],EAX
            jne .L_40298b

            cmp DWORD PTR [RSP+208],0
            mov R14,QWORD PTR [RSP+176]
            lea RDX,QWORD PTR [RIP+.L_408aff]
            jle .L_4041c1
.L_403981:

            mov RDI,QWORD PTR [RIP+stderr]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],40
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4039b0:

            mov R14,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408790]
            mov ECX,EAX
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_4039d4:

            mov DWORD PTR [R14+272],22
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
.L_4039e9:

            mov QWORD PTR [RSP+344],RDX
            mov R9,RDX
            jmp .L_4037f5
.L_4039f9:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408a9d]
            mov ECX,R8D
            mov ESI,1
            xor EAX,EAX
.L_403a11:

            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],32
            mov BYTE PTR [RSP+8],0
            jmp .L_402578
.L_403a2b:

            lea RCX,QWORD PTR [RIP+.L_408ab6]
.L_403a32:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_403a4c:

            mov DWORD PTR [R14+272],16
            mov BYTE PTR [RSP+8],0
            jmp .L_402578
.L_403a61:

            mov EAX,ESI
            jmp .L_40319d
.L_403a68:

            mov R8D,R11D
            lea RCX,QWORD PTR [RIP+.L_408ac1]
            jmp .L_403a32
.L_403a74:

            mov R13D,56
            lea EBP,DWORD PTR [RDX+8]
            mov R11,QWORD PTR [RSP+304]
            sub R13D,EDX
            mov RDI,QWORD PTR [RSP+320]
            mov R9,QWORD PTR [RSP+344]
            mov R10D,R13D
            and R10D,4294967288
            add R10D,EBP
            jmp .L_403acc
.L_403aa4:

            movzx R8D,BYTE PTR [R11+RDI*1]
            cmp R8B,255
            je .L_403aee

            or RSI,R8
            mov RDI,RCX
.L_403ab5:

            add EDX,8
            mov QWORD PTR [RSP+328],RSI
            cmp EDX,R10D
            mov DWORD PTR [RSP+336],EDX
            je .L_403b3e
.L_403acc:

            lea RCX,QWORD PTR [RDI+1]
            shl RSI,8
            cmp RDI,R9
            mov QWORD PTR [RSP+328],RSI
            mov QWORD PTR [RSP+320],RCX
            jb .L_403aa4
.L_403ae9:

            mov RDI,RCX
            jmp .L_403ab5
.L_403aee:

            or SIL,255
            cmp BYTE PTR [R11+RCX*1],0
            jne .L_403c0b

            add RDI,2
            mov QWORD PTR [RSP+320],RDI
            jmp .L_403ab5
.L_403b0b:

            mov ECX,DWORD PTR [RSP+124]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_4086e8]
            mov ESI,1
            xor EAX,EAX
.L_403b24:

            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],24
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
.L_403b3e:

            mov EDX,R13D
            and EDX,4294967288
            add EDX,EBP
            jmp .L_403160
.L_403b4b:

            mov EAX,DWORD PTR [RSP+232]
            mov DWORD PTR [RSP+240],1
            mov DWORD PTR [RSP+212],1
            mov DWORD PTR [RSP+220],EAX
            mov EAX,DWORD PTR [RSP+236]
            mov DWORD PTR [RSP+216],EAX
            jmp .L_402aa3
.L_403b82:

            mov R15D,EBX
            mov R13D,R14D
            jmp .L_403467
.L_403b8d:

            mov R13D,R14D
            mov R8D,DWORD PTR [RSP+124]
            mov R14,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408828]
            mov ECX,EAX
            mov R9D,R13D
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_403bbc:

            mov DWORD PTR [R14+272],24
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
.L_403bd1:

            mov R9D,DWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408528]
            mov R8D,3
            mov ESI,1
            xor EAX,EAX
.L_403bf1:

            call __fprintf_chk@PLT
.L_403bf6:

            mov DWORD PTR [R14+272],3
            mov BYTE PTR [RSP+8],0
            jmp .L_402578
.L_403c0b:

            mov QWORD PTR [RSP+344],RDI
            mov R9,RDI
            jmp .L_403ae9
.L_403c1b:

            mov ECX,DWORD PTR [RSP+336]
            mov RSI,QWORD PTR [RSP+344]
            mov RDI,QWORD PTR [RSP+304]
            mov RAX,QWORD PTR [RSP+320]
            sar ECX,3
            jmp .L_403c73
.L_403c3f:

            lea RDX,QWORD PTR [RAX-1]
            cmp RDX,RSI
            mov QWORD PTR [RSP+320],RDX
            jae .L_403c6d

            cmp BYTE PTR [RDI+RAX*1-1],0
            jne .L_403c6d

            cmp BYTE PTR [RDI+RAX*1-2],255
            lea R8,QWORD PTR [RAX-2]
            jne .L_403c6d

            mov QWORD PTR [RSP+320],R8
            mov RDX,R8
.L_403c6d:

            sub ECX,1
            mov RAX,RDX
.L_403c73:

            test ECX,ECX
            jg .L_403c3f

            cmp RSI,RAX
            jb .L_403ee9

            lea RDX,QWORD PTR [RAX+2]
            cmp QWORD PTR [RSP+40],RDX
            jb .L_403c9d

            mov RBX,QWORD PTR [RSP+248]
            cmp BYTE PTR [RBX+RAX*1],255
            je .L_404060
.L_403c9d:

            cmp QWORD PTR [RSP+40],RAX
            mov R12,QWORD PTR [RSP+248]
            mov R8D,EAX
            mov R14,QWORD PTR [RSP+176]
            jbe .L_403cc3

            movzx EAX,BYTE PTR [R12+RAX*1]
            mov DWORD PTR [RSP+148],EAX
.L_403cc3:

            mov R9D,DWORD PTR [RSP+40]
            mov ECX,DWORD PTR [RSP+148]
            lea RDX,QWORD PTR [RIP+.L_408720]
            mov RDI,QWORD PTR [RIP+stderr]
            mov ESI,1
            xor EAX,EAX
.L_403ce4:

            call __fprintf_chk@PLT
.L_403ce9:

            mov DWORD PTR [R14+272],4
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
.L_403cfe:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408acc]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov ESI,1
            xor EAX,EAX
.L_403d1a:

            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],12
            mov BYTE PTR [RSP+8],0
            jmp .L_402578
.L_403d34:

            mov EAX,1
            mov ECX,EDX
            mov EBX,EDX
            shl EAX,CL
            test EDX,EDX
            mov DWORD PTR [RSP+208],EAX
            jle .L_403108

            mov R9D,DWORD PTR [RSP+20]
            test R9D,R9D
            jle .L_403f20

            mov EAX,DWORD PTR [RSP+336]
            cmp EAX,16
            jle .L_40415d
.L_403d6c:

            mov RDX,QWORD PTR [RSP+328]
            sub EAX,EBX
            mov RSI,-1
            mov ECX,EAX
            mov DWORD PTR [RSP+336],EAX
            shr RDX,CL
            mov ECX,EBX
            shl RSI,CL
            mov RCX,RSI
            not RCX
            and RDX,RCX
            add DWORD PTR [RSP+208],EDX
            jmp .L_403108
.L_403da3:

            mov RSI,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+72],RBX
            mov QWORD PTR [RSI],RAX
            movzx EDX,BYTE PTR [R12+R9*1+3]
            mov RSI,QWORD PTR [R14+112]
            mov EAX,EDX
            sar EDX,4
            and EAX,15
            mov DWORD PTR [RSP+264],EDX
            mov DWORD PTR [RSP+268],EAX
            mov RAX,QWORD PTR [R14+104]
            sub RSI,RAX
            lea R10,QWORD PTR [RAX+48]
            test R8D,R8D
            setne BYTE PTR [RSP+64]
            lea R8,QWORD PTR [RCX+4]
            xor EAX,EAX
            mov QWORD PTR [RSP+56],R10
            mov QWORD PTR [RSP+32],RSI
            add R10,RSI
            mov EBX,EAX
.L_403dfd:

            cmp QWORD PTR [RSP+32],0
            je .L_403ee2

            mov R9D,DWORD PTR [R8]
            mov RAX,QWORD PTR [RSP+56]
            xor ESI,ESI
            xor R11D,R11D
            jmp .L_403e35
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403e20:

            mov ECX,DWORD PTR [R8+4]
            add ECX,16
            cmp EDX,ECX
            cmove ESI,EDI
.L_403e2c:

            add RAX,56
            cmp R10,RAX
            je .L_403e41
.L_403e35:

            mov EDX,DWORD PTR [RAX]
            cmp EDX,R9D
            jne .L_403e20

            mov R11D,EDI
            jmp .L_403e2c
.L_403e41:

            test R11B,R11B
            jne .L_403e51
.L_403e46:

            cmp BYTE PTR [RSP+64],0
            je .L_40402f
.L_403e51:

            mov R9D,DWORD PTR [RSP+8]
            test R9D,R9D
            sete AL
            or SIL,AL
            je .L_403ff0

            add EBX,1
            add R8,12
            cmp EBP,EBX
            jg .L_403dfd

            mov BYTE PTR [RSP+8],SIL
            lea RDI,QWORD PTR [R14+152]
            lea RSI,QWORD PTR [RSP+256]
            mov RBX,QWORD PTR [RSP+72]
            call .L_4072f0

            movzx ECX,BYTE PTR [RSP+20]
            mov RAX,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RAX]
            shl ECX,8
            add ECX,R15D
            movsxd RAX,ECX
            add RAX,RBX
            cmp RAX,R8
            je .L_402578

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408610]
            sub R8D,EBX
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_403ecd:

            mov DWORD PTR [R14+272],6
            mov BYTE PTR [RSP+8],0
            jmp .L_402578
.L_403ee2:

            xor ESI,ESI
            jmp .L_403e46
.L_403ee9:

            mov R14,QWORD PTR [RSP+176]
.L_403ef1:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408ae6]
            mov ESI,1
            xor EAX,EAX
.L_403f06:

            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],25
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
.L_403f20:

            mov R14,QWORD PTR [RSP+176]
            lea RDX,QWORD PTR [RIP+.L_408860]
            jmp .L_403981
.L_403f34:

            mov RDI,QWORD PTR [RSP+80]
            call .L_402020

            mov EAX,DWORD PTR [RSP+336]
            jmp .L_4030ae
.L_403f4a:

            mov EAX,64
.L_403f4f:

            sar EAX,3
            mov RDX,QWORD PTR [RSP+80]
            jmp .L_403f88
.L_403f59:

            lea RCX,QWORD PTR [RDX-1]
            cmp RCX,R9
            mov QWORD PTR [RSP+320],RCX
            jae .L_403f82

            cmp BYTE PTR [R12+RDX*1-1],0
            jne .L_403f82

            cmp BYTE PTR [R12+RDX*1-2],255
            lea RSI,QWORD PTR [RDX-2]
            je .L_4041b1
.L_403f82:

            sub EAX,1
            mov RDX,RCX
.L_403f88:

            test EAX,EAX
            jg .L_403f59

            cmp R9,RDX
            mov QWORD PTR [RSP+80],RDX
            jb .L_403ef1

            mov RAX,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+40],RAX
            mov RBX,QWORD PTR [RSP+24]
            mov QWORD PTR [RBX],RAX
            jae .L_4022db

            mov R8D,DWORD PTR [RSP+40]
            mov ECX,DWORD PTR [RSP+80]
            lea RDX,QWORD PTR [RIP+.L_4088b0]
            mov RDI,QWORD PTR [RIP+stderr]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_403fd5:

            mov DWORD PTR [R14+272],3
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403ff0:

            movsxd RAX,EBX
            mov RBX,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RDX,QWORD PTR [RIP+.L_4085d0]
            mov ESI,1
            mov ECX,DWORD PTR [RBX+RAX*4+8]
            xor EAX,EAX
.L_404015:

            call __fprintf_chk@PLT
.L_40401a:

            mov DWORD PTR [R14+272],34
            mov BYTE PTR [RSP+8],0
            jmp .L_402578
.L_40402f:

            movsxd RAX,EBX
            mov RBX,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RIP+stderr]
            imul RAX,RAX,12
            lea RDX,QWORD PTR [RIP+.L_408590]
            mov ESI,1
            mov ECX,DWORD PTR [RBX+RAX*1+4]
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_404059:

            jmp .L_40401a
.L_40405b:

            call __stack_chk_fail@PLT
.L_404060:

            mov EBX,DWORD PTR [RSP+244]
            lea ECX,DWORD PTR [RBX+208]
            mov RBX,QWORD PTR [RSP+248]
            movzx R8D,BYTE PTR [RBX+RAX*1+1]
            cmp ECX,R8D
            je .L_4040c0

            mov R14,QWORD PTR [RSP+176]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408758]
            mov ESI,1
            xor EAX,EAX
.L_40409d:

            call __fprintf_chk@PLT

            mov DWORD PTR [R14+272],31
            mov BYTE PTR [RSP+8],0
            jmp .L_4022db
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4040c0:

            mov RAX,QWORD PTR [RSP+312]
            lea RDI,QWORD PTR [RSP+304]
            mov QWORD PTR [RSP+320],RDX
            mov QWORD PTR [RSP+328],0
            mov DWORD PTR [RSP+336],0
            sub RAX,2
            mov QWORD PTR [RSP+344],RAX
            call .L_402020

            mov EAX,DWORD PTR [RSP+244]
            mov EBX,DWORD PTR [RSP+208]
            mov QWORD PTR [RSP+352],0
            add EAX,1
            and EAX,7
            test EBX,EBX
            mov DWORD PTR [RSP+244],EAX
            mov RAX,QWORD PTR [RSP+176]
            mov EAX,DWORD PTR [RAX+28]
            mov DWORD PTR [RSP+148],EAX
            jg .L_40419d

            mov RAX,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+208],4294967295
            mov RDX,QWORD PTR [RAX-24]
            mov RCX,QWORD PTR [RAX-16]
            jmp .L_4029c7
.L_40415d:

            mov RDI,QWORD PTR [RSP+80]
            call .L_402020

            mov EAX,DWORD PTR [RSP+336]
            jmp .L_403d6c
.L_404173:

            lea RDI,QWORD PTR [RSP+304]
            mov RBX,RAX
            call .L_4084e0
.L_404183:

            mov RDI,QWORD PTR [RSP+272]
            test RDI,RDI
            je .L_404195

            call _ZdlPv@PLT
.L_404195:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40419d:

            mov R14,QWORD PTR [RSP+176]
            lea RDX,QWORD PTR [RIP+.L_408aff]
            jmp .L_403981
.L_4041b1:

            mov QWORD PTR [RSP+320],RSI
            mov RCX,RSI
            jmp .L_403f82
.L_4041c1:

            mov RBX,QWORD PTR [RSP+320]
            mov EAX,DWORD PTR [RSP+336]
            mov R9,QWORD PTR [RSP+344]
            mov R12,QWORD PTR [RSP+304]
            mov QWORD PTR [RSP+80],RBX
            jmp .L_403f4f
.L_4041ea:

            jmp .L_404173
.L_4041ec:

            mov RBX,RAX
            jmp .L_404183
.L_4041f1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404200:

            push RBP
            mov RAX,RSI
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            mov R15,RCX
            push RBX
            mov R12,RDI
            sub RSP,1112
.L_40421d:

            mov QWORD PTR [RBP-968],RSI
            mov DWORD PTR [RBP-972],EDX
            mov RSI,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RSI
            xor ESI,ESI
            cmp RAX,1
            mov QWORD PTR [RBP-960],0
            jbe .L_4042f8

            movzx ECX,BYTE PTR [RDI]
            mov R9D,EAX
            cmp CL,255
            je .L_4042b0
.L_404259:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408720]
            xor R8D,R8D
            mov ESI,1
            xor EAX,EAX
            xor R14D,R14D
.L_404274:

            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],4
.L_404284:

            mov RSI,QWORD PTR [RBP-56]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_4063c8

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_4042a8:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4042b0:

            movzx ECX,BYTE PTR [RDI+1]
            mov QWORD PTR [RBP-960],2
            cmp ECX,216
            je .L_404310

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_4088e8]
            mov ESI,1
            xor EAX,EAX
            xor R14D,R14D
            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],1
            jmp .L_404284
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4042f8:

            test RAX,RAX
            mov R9D,EAX
            jne .L_4065a0

            xor R9D,R9D
            xor ECX,ECX
            jmp .L_404259
          .byte 0x66
          .byte 0x90
.L_404310:

            pxor XMM0,XMM0
            mov EDI,12128
            mov QWORD PTR [RBP-896],0
            movaps XMMWORD PTR [RBP-912],XMM0
            call _Znwm@PLT
.L_404330:

            lea RDX,QWORD PTR [RAX+12128]
            mov QWORD PTR [RBP-984],RAX
            mov RBX,QWORD PTR [RBP-968]
            movq XMM0,QWORD PTR [RBP-984]
            mov QWORD PTR [RBP-896],RDX
            punpcklqdq XMM0,XMM0
            mov RSI,RBX
            movaps XMMWORD PTR [RBP-912],XMM0
.L_404362:

            test RAX,RAX
            je .L_4056a0
.L_40436b:

            mov R11D,4294967295
            add RAX,4
            mov BYTE PTR [RAX-4],0
            mov WORD PTR [RAX-2],R11W
            cmp RDX,RAX
            jne .L_404362
.L_404383:

            pxor XMM0,XMM0
            mov EDI,12128
            mov QWORD PTR [RBP-968],RSI
            mov QWORD PTR [RBP-904],RDX
            mov QWORD PTR [RBP-864],0
            movaps XMMWORD PTR [RBP-880],XMM0
.L_4043ac:

            call _Znwm@PLT
.L_4043b1:

            lea RDX,QWORD PTR [RAX+12128]
            mov QWORD PTR [RBP-984],RAX
            mov RBX,QWORD PTR [RBP-968]
            movq XMM0,QWORD PTR [RBP-984]
            mov QWORD PTR [RBP-864],RDX
            punpcklqdq XMM0,XMM0
            mov RSI,RBX
            movaps XMMWORD PTR [RBP-880],XMM0
.L_4043e3:

            test RAX,RAX
            je .L_405688
.L_4043ec:

            mov R10D,4294967295
            add RAX,4
            mov BYTE PTR [RAX-4],0
            mov WORD PTR [RAX-2],R10W
            cmp RDX,RAX
            jne .L_4043e3
.L_404404:

            lea RDI,QWORD PTR [RBP-576]
            mov ECX,64
            xor EAX,EAX
            mov QWORD PTR [RBP-968],RSI
            mov QWORD PTR [RBP-872],RDX
            xor R14D,R14D
            mov QWORD PTR [RBP-1016],RDI
            mov BYTE PTR [RBP-1008],0

            rep stosq QWORD PTR [RDI]

            nop
            nop
            nop
            nop
.L_404438:

            mov RSI,QWORD PTR [RBP-960]
            mov RAX,QWORD PTR [RBP-968]
            lea RCX,QWORD PTR [RSI+1]
            cmp RAX,RCX
            jbe .L_4044a4

            xor EBX,EBX
            lea RDX,QWORD PTR [R12+RSI*1]
            mov R10,RAX
            jmp .L_404471
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404460:

            add RBX,1
            lea RAX,QWORD PTR [RBX+RCX*1]
            cmp R10,RAX
            jbe .L_4055b0
.L_404471:

            cmp BYTE PTR [RDX+RBX*1],255
            jne .L_404460

            movzx EAX,BYTE PTR [RDX+RBX*1+1]
            cmp AL,191
            jbe .L_404460

            sub EAX,192
            lea RDI,QWORD PTR [RIP+.L_408d60]
            cdqe 
            cmp BYTE PTR [RDI+RAX*1],0
            je .L_404460

            test RBX,RBX
            mov QWORD PTR [RBP-968],R10
            jne .L_4055b7
.L_4044a4:

            lea RAX,QWORD PTR [RSI+2]
            cmp RAX,QWORD PTR [RBP-968]
            mov QWORD PTR [RBP-984],RAX
            ja .L_405766

            cmp BYTE PTR [R12+RSI*1],255
            jne .L_405766

            lea RBX,QWORD PTR [R12+RSI*1+1]
            mov RDX,RAX
            mov QWORD PTR [RBP-960],RDX
            movzx ECX,BYTE PTR [RBX]
            mov EAX,ECX
            mov BYTE PTR [RBP-985],CL
            mov DWORD PTR [RBP-976],ECX
            add EAX,64
            cmp AL,62
            ja .L_405500

            lea RDI,QWORD PTR [RIP+.L_408c60]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDI+RAX*4]
            add RAX,RDI
            jmp RAX
.L_404505:

            cmp DWORD PTR [RBP-972],1
            je .L_404698

            lea RCX,QWORD PTR [RSI+4]
            cmp QWORD PTR [RBP-968],RCX
            jb .L_40556b

            mov RAX,RDX
            movzx R8D,BYTE PTR [R12+RSI*1+3]
            mov QWORD PTR [RBP-960],RCX
            add RAX,R12
            mov QWORD PTR [RBP-1000],RAX
            movzx EAX,BYTE PTR [RAX]
            shl EAX,8
            add R8D,EAX
            movsxd RBX,R8D
            lea RAX,QWORD PTR [RBX-2]
            cmp RAX,65533
            ja .L_405c1e

            mov RAX,QWORD PTR [RBP-984]
            mov RSI,QWORD PTR [RBP-968]
            add RAX,RBX
            cmp RSI,RAX
            jb .L_405ec2

            lea R13,QWORD PTR [RBP-608]
            cmp RBX,15
            mov QWORD PTR [RBP-928],RBX
            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RBP-608],RAX
            ja .L_40611a
.L_404596:

            mov RSI,QWORD PTR [RBP-1000]
            mov RDX,RBX
            mov RDI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP-928]
            mov RDX,QWORD PTR [RBP-608]
            mov QWORD PTR [RBP-600],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RBP-960]
            lea RAX,QWORD PTR [RBX+RAX*1-2]
            mov RBX,QWORD PTR [R15+64]
            cmp RBX,QWORD PTR [R15+72]
            mov QWORD PTR [RBP-960],RAX
            je .L_4061f7

            test RBX,RBX
            je .L_404678

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RBP-608]
            mov RDX,QWORD PTR [RBP-600]
            mov RSI,RAX
            mov QWORD PTR [RBP-1000],RAX
            add RAX,RDX
            mov QWORD PTR [RBP-984],RDX
            je .L_40461f

            test RSI,RSI
            je .L_40673d
.L_40461f:

            mov RAX,QWORD PTR [RBP-984]
            cmp RAX,15
            mov QWORD PTR [RBP-920],RAX
            ja .L_40620b

            cmp QWORD PTR [RBP-984],1
            mov RAX,QWORD PTR [RBX]
            jne .L_406388

            mov RSI,QWORD PTR [RBP-1000]
            movzx EDX,BYTE PTR [RSI]
            mov BYTE PTR [RAX],DL
            mov RAX,QWORD PTR [RBP-920]
            mov QWORD PTR [RBP-984],RAX
            mov RAX,QWORD PTR [RBX]
.L_404665:

            mov RSI,QWORD PTR [RBP-984]
            mov QWORD PTR [RBX+8],RSI
            mov BYTE PTR [RAX+RSI*1],0
            mov RBX,QWORD PTR [R15+64]
.L_404678:

            add RBX,32
            mov QWORD PTR [R15+64],RBX
.L_404680:

            mov RDI,QWORD PTR [RBP-608]
            add R13,16
            cmp RDI,R13
            je .L_404698
.L_404690:

            call _ZdlPv@PLT

            nop
            nop
            nop
.L_404698:

            movzx EAX,BYTE PTR [RBP-985]
            lea R13,QWORD PTR [RBP-704]
            lea RDI,QWORD PTR [R15+176]
            mov RSI,R13
            mov BYTE PTR [RBP-704],AL
.L_4046b6:

            call .L_4080b0

            mov EAX,DWORD PTR [RBP-972]
            test EAX,EAX
            sete AL
            test AL,R14B
            jne .L_405bc7

            cmp DWORD PTR [RBP-976],217
            jne .L_404438

            test R14B,R14B
            jne .L_405f5b

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408c18]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],2
            jmp .L_405540
.L_404712:

            lea RCX,QWORD PTR [RSI+4]
            cmp QWORD PTR [RBP-968],RCX
            jb .L_40556b

            movzx EAX,BYTE PTR [R12+RDX*1]
            movzx EDX,BYTE PTR [R12+RSI*1+3]
            mov QWORD PTR [RBP-960],RCX
            shl EAX,8
            add EDX,EAX
            cmp EDX,2
            mov DWORD PTR [RBP-1120],EDX
            movsxd RAX,EDX
            je .L_405cc5

            add RAX,QWORD PTR [RBP-984]
            cmp RCX,RAX
            mov QWORD PTR [RBP-1032],RAX
            jae .L_406320

            add RSI,21
            cmp QWORD PTR [RBP-968],RSI
            jb .L_405b90

            lea RAX,QWORD PTR [RBP-704]
            mov QWORD PTR [RBP-1136],RAX
.L_404782:

            pxor XMM1,XMM1
            mov EDI,68
            mov QWORD PTR [RBP-688],0
            movaps XMMWORD PTR [RBP-704],XMM1
            call _Znwm@PLT
.L_4047a2:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RAX+68]
            mov EDI,1028
            mov DWORD PTR [RAX+64],0
            mov QWORD PTR [RBP-704],RAX
            movups XMMWORD PTR [RAX],XMM0
            mov QWORD PTR [RBP-688],RDX
            mov QWORD PTR [RBP-696],RDX
            movups XMMWORD PTR [RAX+16],XMM0
            movups XMMWORD PTR [RAX+32],XMM0
            movups XMMWORD PTR [RAX+48],XMM0
            mov QWORD PTR [RBP-680],0
            mov QWORD PTR [RBP-672],0
            mov QWORD PTR [RBP-664],0
.L_4047fb:

            call _Znwm@PLT
.L_404800:

            lea RDI,QWORD PTR [RAX+8]
            lea RDX,QWORD PTR [RAX+1028]
            mov QWORD PTR [RBP-680],RAX
            and RDI,-8
            mov QWORD PTR [RBP-664],RDX
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+1020],0
            sub RAX,RDI
            lea ECX,DWORD PTR [RAX+1028]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov QWORD PTR [RBP-672],RDX
            mov BYTE PTR [RBP-652],1
            mov RAX,QWORD PTR [RBP-960]
            movzx R8D,BYTE PTR [R12+RAX*1]
            lea RDX,QWORD PTR [RAX+1]
            mov QWORD PTR [RBP-960],RDX
            mov EBX,R8D
            mov DWORD PTR [RBP-656],R8D
            and EBX,16
            mov BYTE PTR [RBP-1000],BL
            je .L_4057ad

            sub R8D,16
            cmp R8D,3
            ja .L_406278

            imul R8D,R8D,758
            mov RCX,QWORD PTR [RBP-880]
            movsxd RDX,R8D
            lea RBX,QWORD PTR [RCX+RDX*4]
            mov QWORD PTR [RBP-1128],RBX
.L_4048a8:

            mov RDX,QWORD PTR [RBP-704]
            mov DWORD PTR [RDX],0
            movzx ECX,BYTE PTR [R12+RAX*1+1]
            mov DWORD PTR [RDX+4],ECX
            movzx ESI,BYTE PTR [R12+RAX*1+2]
            mov DWORD PTR [RBP-992],ECX
            cmp ESI,1
            mov DWORD PTR [RDX+8],ESI
            mov DWORD PTR [RBP-1048],ESI
            sbb EDI,EDI
            mov EBX,ESI
            and EDI,16384
            add EDI,16384
            cmp ESI,1
            movzx ESI,BYTE PTR [R12+RAX*1+3]
            sbb R13,R13
            add EBX,ECX
            mov ECX,8192
            and R13,-4
            add R13,8
            test ESI,ESI
            mov DWORD PTR [RDX+12],ESI
            mov DWORD PTR [RBP-1060],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,12
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+4]
            mov ECX,4096
            test ESI,ESI
            mov DWORD PTR [RDX+16],ESI
            mov DWORD PTR [RBP-1068],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,16
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+5]
            mov ECX,2048
            test ESI,ESI
            mov DWORD PTR [RDX+20],ESI
            mov DWORD PTR [RBP-1064],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,20
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+6]
            mov ECX,1024
            test ESI,ESI
            mov DWORD PTR [RDX+24],ESI
            mov DWORD PTR [RBP-1072],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,24
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+7]
            mov ECX,512
            test ESI,ESI
            mov DWORD PTR [RDX+28],ESI
            mov DWORD PTR [RBP-1076],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,28
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+8]
            mov ECX,256
            test ESI,ESI
            mov DWORD PTR [RDX+32],ESI
            mov DWORD PTR [RBP-1080],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,32
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+9]
            mov ECX,128
            test ESI,ESI
            mov DWORD PTR [RBP-1084],ESI
            mov DWORD PTR [RDX+36],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,36
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+10]
            mov ECX,64
            test ESI,ESI
            mov DWORD PTR [RBP-1088],ESI
            mov DWORD PTR [RDX+40],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,40
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+11]
            mov ECX,32
            test ESI,ESI
            mov DWORD PTR [RDX+44],ESI
            mov DWORD PTR [RBP-1092],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,44
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+12]
            mov ECX,16
            test ESI,ESI
            mov DWORD PTR [RDX+48],ESI
            mov DWORD PTR [RBP-1096],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,48
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+13]
            mov ECX,8
            test ESI,ESI
            mov DWORD PTR [RDX+52],ESI
            mov DWORD PTR [RBP-1100],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,52
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+14]
            mov ECX,4
            test ESI,ESI
            mov DWORD PTR [RDX+56],ESI
            mov DWORD PTR [RBP-1104],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,56
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+15]
            mov ECX,2
            test ESI,ESI
            mov DWORD PTR [RBP-1108],ESI
            mov DWORD PTR [RDX+60],ESI
            cmove ECX,EDI
            mov EDI,ECX
            mov ECX,60
            cmovne R13,RCX
            add EBX,ESI
            movzx ESI,BYTE PTR [R12+RAX*1+16]
            lea RCX,QWORD PTR [RAX+17]
            mov EAX,1
            mov QWORD PTR [RBP-960],RCX
            test ESI,ESI
            mov DWORD PTR [RBP-1112],ESI
            mov DWORD PTR [RDX+64],ESI
            cmove EAX,EDI
            mov DWORD PTR [RBP-1116],EAX
            mov EAX,64
            cmovne R13,RAX
            add EBX,ESI
            cmp BYTE PTR [RBP-1000],0
            je .L_4057d8

            cmp EBX,256
            jg .L_4057e1
.L_404b32:

            movsxd RAX,EBX
            mov QWORD PTR [RBP-1056],RAX
            add RAX,RCX
            cmp QWORD PTR [RBP-968],RAX
            jb .L_4061c3

            mov EDI,32
            mov QWORD PTR [RBP-800],0
            mov DWORD PTR [RBP-792],0
            mov QWORD PTR [RBP-784],0
            mov DWORD PTR [RBP-776],0
            mov QWORD PTR [RBP-768],0
.L_404b86:

            call _Znwm@PLT
.L_404b8b:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RAX+32]
            test EBX,EBX
            mov QWORD PTR [RBP-800],RAX
            mov DWORD PTR [RBP-792],0
            mov QWORD PTR [RBP-768],RDX
            mov QWORD PTR [RBP-784],RDX
            mov DWORD PTR [RBP-776],0
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            je .L_406145

            mov RDX,QWORD PTR [RBP-960]
            cmp BYTE PTR [RBP-1000],0
            movzx R8D,BYTE PTR [R12+RDX*1]
            lea R11,QWORD PTR [RDX+1]
            sete BYTE PTR [RBP-1000]
            movzx ESI,BYTE PTR [RBP-1000]
            mov QWORD PTR [RBP-960],R11
            cmp R8B,11
            mov ECX,R8D
            seta R9B
            and R9B,SIL
            jne .L_405c59

            mov RSI,QWORD PTR [RBP-680]
            lea RDI,QWORD PTR [RDX+2]
            lea R10D,DWORD PTR [RBX-1]
            neg RDX
            mov QWORD PTR [RBP-1144],R13
            lea RBX,QWORD PTR [R10+RDI*1]
            lea R10,QWORD PTR [RSI+RDX*4]
            mov RDX,QWORD PTR [RBP-968]
            mov QWORD PTR [RBP-1040],RSI
            mov QWORD PTR [RBP-1024],RBX
            mov RSI,QWORD PTR [RBP-1024]
            mov EBX,1
            mov QWORD PTR [RBP-1024],RDX
            movzx EDX,BYTE PTR [RBP-1000]
            mov BYTE PTR [RBP-968],DL
            jmp .L_404ca8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404c68:

            or RCX,R13
            cmp RSI,RDI
            mov QWORD PTR [RDX],RCX
            mov DWORD PTR [R10+RDI*4-8],R8D
            je .L_40586b

            movzx R8D,BYTE PTR [R12+RDI*1-1]
            lea RDX,QWORD PTR [RDI+1]
            mov R11,RDI
            mov R9D,1
            cmp R8B,11
            mov ECX,R8D
            jbe .L_404ca5

            cmp BYTE PTR [RBP-968],0
            jne .L_405c52
.L_404ca5:

            mov RDI,RDX
.L_404ca8:

            mov RDX,RCX
            mov R13,RBX
            and ECX,63
            shr RDX,3
            shl R13,CL
            and EDX,24
            mov RCX,R13
            add RDX,RAX
            mov R13,QWORD PTR [RDX]
            test RCX,R13
            je .L_404c68

            test R9B,R9B
            jne .L_4067be
.L_404cd2:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408968]
            mov ECX,R8D
            mov ESI,1
            xor EAX,EAX
            lea R13,QWORD PTR [RBP-704]
.L_404cf1:

            call __fprintf_chk@PLT
.L_404cf6:

            mov RDI,QWORD PTR [RBP-800]
            mov DWORD PTR [R15+272],21
            test RDI,RDI
            je .L_404d12

            call _ZdlPv@PLT
.L_404d12:

            mov RDI,QWORD PTR [RBP-680]
            test RDI,RDI
            je .L_404d23

            call _ZdlPv@PLT
.L_404d23:

            mov RDI,QWORD PTR [RBP-704]
            test RDI,RDI
            je .L_404d34
.L_404d2f:

            call _ZdlPv@PLT
.L_404d34:

            xor R14D,R14D
            jmp .L_405540
.L_404d3c:

            mov R9D,DWORD PTR [R15]
            test R9D,R9D
            jne .L_405730

            lea RCX,QWORD PTR [RSI+10]
            cmp QWORD PTR [RBP-968],RCX
            jb .L_405c06

            movzx R8D,BYTE PTR [R12+RSI*1+4]
            movzx EAX,BYTE PTR [R12+RDX*1]
            movzx R14D,BYTE PTR [R12+RSI*1+3]
            movzx EDI,BYTE PTR [R12+RSI*1+6]
            movzx EDX,BYTE PTR [R12+RSI*1+7]
            movzx R9D,BYTE PTR [R12+RSI*1+8]
            mov QWORD PTR [RBP-960],RCX
            cmp R8D,8
            mov BYTE PTR [RBP-1000],AL
            movzx EAX,BYTE PTR [R12+RSI*1+5]
            jne .L_405bd2

            shl EAX,8
            add EAX,EDI
            lea EDI,DWORD PTR [RAX-1]
            cmp EDI,65534
            ja .L_405f24

            shl EDX,8
            add EDX,R9D
            lea EDI,DWORD PTR [RDX-1]
            cmp EDI,65534
            ja .L_4060b6

            movzx R8D,BYTE PTR [R12+RSI*1+9]
            lea EDI,DWORD PTR [R8-1]
            mov ESI,R8D
            cmp EDI,3
            ja .L_40618f

            lea R8D,DWORD PTR [R8+R8*2]
            mov RBX,QWORD PTR [RBP-968]
            movsxd RDI,R8D
            add RDI,RCX
            cmp RBX,RDI
            jb .L_406187

            mov DWORD PTR [R15],EDX
            mov RDX,QWORD PTR [R15+136]
            mov R13,QWORD PTR [R15+128]
            mov DWORD PTR [R15+4],EAX
            movzx EAX,SIL
            mov RCX,RDX
            sub RCX,R13
            sar RCX,6
            cmp RAX,RCX
            ja .L_4063f3

            jae .L_404e5f

            shl RAX,6
            add R13,RAX
            cmp RDX,R13
            je .L_404e58

            mov RBX,R13
.L_404e2f:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_406108

            mov QWORD PTR [RBP-1008],RDX
            add RBX,64
            call _ZdlPv@PLT

            mov RDX,QWORD PTR [RBP-1008]
            cmp RDX,RBX
            jne .L_404e2f
.L_404e58:

            mov QWORD PTR [R15+136],R13
.L_404e5f:

            mov EDI,32
            mov QWORD PTR [RBP-848],0
            mov DWORD PTR [RBP-840],0
            mov QWORD PTR [RBP-832],0
            mov DWORD PTR [RBP-824],0
            mov QWORD PTR [RBP-816],0
.L_404e99:

            call _Znwm@PLT
.L_404e9e:

            mov RBX,QWORD PTR [R15+136]
            mov R10,QWORD PTR [R15+128]
            lea RDX,QWORD PTR [RAX+32]
            pxor XMM0,XMM0
            mov QWORD PTR [RBP-848],RAX
            mov QWORD PTR [RBP-816],RDX
            mov DWORD PTR [RBP-840],0
            mov QWORD PTR [RBP-1008],RBX
            sub RBX,R10
            mov QWORD PTR [RBP-832],RDX
            mov R11,RBX
            mov DWORD PTR [RBP-824],0
            sar R11,6
            test R11,R11
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            je .L_40655e

            mov EBX,1
            mov R13,QWORD PTR [RBP-960]
            movzx R8D,BYTE PTR [R12+R13*1]
            lea RDX,QWORD PTR [R13+1]
            mov QWORD PTR [RBP-960],RDX
            mov EDX,R8D
            mov RSI,RDX
            and EDX,63
            shr RSI,3
            mov ECX,EDX
            and ESI,24
            shl RBX,CL
            add RSI,RAX
            mov RCX,QWORD PTR [RSI]
            test RCX,RBX
            jne .L_40639b

            lea R11,QWORD PTR [R11+R11*2]
            lea RDX,QWORD PTR [R13+2]
            mov R9,R10
            mov QWORD PTR [RBP-1024],R10
            lea R11,QWORD PTR [R13+R11*1-1]
            mov R13D,1
            jmp .L_404fed
.L_404f60:

            lea ECX,DWORD PTR [R8-1]
            cmp ECX,14
            ja .L_4064ae

            lea RCX,QWORD PTR [RDX+1]
            mov DWORD PTR [R9+4],ESI
            mov DWORD PTR [R9+8],R8D
            cmp DWORD PTR [R15+12],ESI
            mov QWORD PTR [RBP-960],RCX
            movzx ECX,BYTE PTR [R12+RDX*1]
            cmovge ESI,DWORD PTR [R15+12]
            cmp DWORD PTR [R15+16],R8D
            mov QWORD PTR [R9+16],RCX
            mov ECX,R8D
            cmovge ECX,DWORD PTR [R15+16]
            cmp R11,RDX
            mov DWORD PTR [R15+12],ESI
            mov DWORD PTR [R15+16],ECX
            je .L_40640a

            movzx R8D,BYTE PTR [R12+RDX*1+1]
            lea RCX,QWORD PTR [RDX+2]
            mov RBX,R13
            add R9,64
            add RDX,3
            mov QWORD PTR [RBP-960],RCX
            mov ECX,R8D
            mov RSI,RCX
            and ECX,63
            shr RSI,3
            shl RBX,CL
            and ESI,24
            add RSI,RAX
            mov RCX,QWORD PTR [RSI]
            test RBX,RCX
            jne .L_40639b
.L_404fed:

            or RCX,RBX
            mov QWORD PTR [RSI],RCX
            mov DWORD PTR [R9],R8D
            movzx ESI,BYTE PTR [R12+RDX*1-1]
            mov QWORD PTR [RBP-960],RDX
            mov R8D,ESI
            sar ESI,4
            lea ECX,DWORD PTR [RSI-1]
            and R8D,15
            cmp ECX,14
            jbe .L_404f60

            lea RCX,QWORD PTR [RIP+.L_408b8c]
            xor R8D,R8D
.L_405023:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov ESI,1
            xor EAX,EAX
.L_405038:

            call __fprintf_chk@PLT
.L_40503d:

            mov DWORD PTR [R15+272],11
.L_405048:

            xor EBX,EBX
.L_40504a:

            mov RAX,QWORD PTR [RBP-848]
            test RAX,RAX
            je .L_40505e

            mov RDI,RAX
            call _ZdlPv@PLT
.L_40505e:

            cmp DWORD PTR [RBP-976],194
            mov R14D,1
            sete BYTE PTR [RBP-1008]
            jmp .L_4054ec
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405080:

            cmp DWORD PTR [RBP-972],1
            je .L_404698

            lea RCX,QWORD PTR [RSI+4]
            cmp QWORD PTR [RBP-968],RCX
            jb .L_40556b

            movzx R8D,BYTE PTR [R12+RDX*1]
            movzx EAX,BYTE PTR [R12+RSI*1+3]
            mov QWORD PTR [RBP-960],RCX
            shl R8D,8
            add R8D,EAX
            movsxd R13,R8D
            lea RAX,QWORD PTR [R13-2]
            cmp RAX,65533
            ja .L_405c1e

            mov RAX,QWORD PTR [RBP-984]
            mov RSI,QWORD PTR [RBP-968]
            add RAX,R13
            cmp RSI,RAX
            jb .L_405f18

            lea RSI,QWORD PTR [R13+1]
            lea RAX,QWORD PTR [RBP-640]
            mov QWORD PTR [RBP-984],RAX
            add RAX,16
            cmp RSI,15
            mov QWORD PTR [RBP-1000],RSI
            mov QWORD PTR [RBP-640],RAX
            mov QWORD PTR [RBP-944],RSI
            ja .L_406158
.L_405119:

            mov RDX,QWORD PTR [RBP-1000]
            mov RSI,RBX
            mov RDI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP-944]
            mov RDX,QWORD PTR [RBP-640]
            mov QWORD PTR [RBP-632],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RBP-960]
            mov RBX,QWORD PTR [R15+40]
            cmp RBX,QWORD PTR [R15+48]
            lea RAX,QWORD PTR [R13+RAX*1-2]
            mov QWORD PTR [RBP-960],RAX
            je .L_406308

            test RBX,RBX
            je .L_4051d8

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX],RAX
            mov RAX,QWORD PTR [RBP-640]
            mov R13,QWORD PTR [RBP-632]
            mov RSI,RAX
            mov QWORD PTR [RBP-1000],RAX
            add RAX,R13
            je .L_405197

            test RSI,RSI
            je .L_40676c
.L_405197:

            cmp R13,15
            mov QWORD PTR [RBP-936],R13
            ja .L_4062c8

            cmp R13,1
            mov RAX,QWORD PTR [RBX]
            jne .L_406342

            mov RSI,QWORD PTR [RBP-1000]
            movzx EDX,BYTE PTR [RSI]
            mov BYTE PTR [RAX],DL
            mov R13,QWORD PTR [RBP-936]
            mov RAX,QWORD PTR [RBX]
.L_4051cb:

            mov QWORD PTR [RBX+8],R13
            mov BYTE PTR [RAX+R13*1],0
            mov RBX,QWORD PTR [R15+40]
.L_4051d8:

            add RBX,32
            mov QWORD PTR [R15+40],RBX
.L_4051e0:

            mov RAX,QWORD PTR [RBP-984]
            mov RDI,QWORD PTR [RBP-640]
            add RAX,16
            cmp RDI,RAX
            jne .L_404690

            jmp .L_404698
.L_405200:

            mov EDX,DWORD PTR [R15+28]
            test EDX,EDX
            jg .L_405703

            lea RDX,QWORD PTR [RSI+6]
            cmp QWORD PTR [RBP-968],RDX
            jb .L_405c86

            mov RBX,QWORD PTR [RBP-984]
            movzx EAX,BYTE PTR [R12+RSI*1+3]
            mov QWORD PTR [RBP-960],RDX
            movzx ECX,BYTE PTR [R12+RBX*1]
            shl ECX,8
            add ECX,EAX
            movzx EAX,BYTE PTR [R12+RSI*1+4]
            movzx ESI,BYTE PTR [R12+RSI*1+5]
            shl EAX,8
            add EAX,ESI
            mov DWORD PTR [R15+28],EAX
            movsxd RAX,ECX
            add RAX,RBX
            cmp RDX,RAX
            je .L_404698

            mov R8D,4
.L_405265:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408610]
            mov ESI,1
            xor EAX,EAX
.L_40527a:

            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],6
            xor R14D,R14D
            jmp .L_405540
.L_405292:

            lea RAX,QWORD PTR [RSI+4]
            cmp QWORD PTR [RBP-968],RAX
            jb .L_40556b

            movzx EDX,BYTE PTR [R12+RDX*1]
            mov QWORD PTR [RBP-960],RAX
            shl EDX,8
            mov ECX,EDX
            movzx EDX,BYTE PTR [R12+RSI*1+3]
            lea EBX,DWORD PTR [RCX+RDX*1]
            cmp EBX,2
            mov DWORD PTR [RBP-1032],EBX
            movsxd RDX,EBX
            je .L_405c98

            add RDX,QWORD PTR [RBP-984]
            cmp RAX,RDX
            mov QWORD PTR [RBP-1024],RDX
            jae .L_406256

            mov RDX,QWORD PTR [R15+88]
            sub RDX,QWORD PTR [R15+80]
            movabs RBX,-3689348814741910323
            sar RDX,3
            imul RDX,RBX
            cmp RDX,3
            ja .L_406263

            lea RCX,QWORD PTR [RSI+5]
            cmp QWORD PTR [RBP-968],RCX
            jb .L_4064ba

            movzx R13D,BYTE PTR [R12+RAX*1]
            mov QWORD PTR [RBP-960],RCX
            mov EAX,R13D
            sar R13D,4
            and EAX,15
            movzx EBX,AL
            cmp AL,3
            mov DWORD PTR [RBP-1000],EBX
            ja .L_405e8a

            lea RAX,QWORD PTR [RBP-752]
            lea RBX,QWORD PTR [RIP+.L_408d9c]
            mov QWORD PTR [RBP-1040],RAX
.L_405357:

            cmp R13D,1
            sbb RAX,RAX
            and RAX,-64
            lea RAX,QWORD PTR [RCX+RAX*1+128]
            cmp QWORD PTR [RBP-968],RAX
            jb .L_40636c

            pxor XMM0,XMM0
            mov EDI,256
            mov QWORD PTR [RBP-736],0
            movaps XMMWORD PTR [RBP-752],XMM0
            call _Znwm@PLT
.L_405397:

            lea RDI,QWORD PTR [RAX+8]
            mov RCX,RAX
            lea RDX,QWORD PTR [RAX+256]
            mov R8,RAX
            and RDI,-8
            mov QWORD PTR [RBP-752],RAX
            mov QWORD PTR [RBP-736],RDX
            sub RCX,RDI
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+248],0
            add ECX,256
            xor EAX,EAX
            shr ECX,3
            test R13D,R13D

            rep stosq QWORD PTR [RDI]

            mov QWORD PTR [RBP-744],RDX
            mov BYTE PTR [RBP-720],1
            mov DWORD PTR [RBP-728],R13D
            mov EAX,DWORD PTR [RBP-1000]
            mov RSI,QWORD PTR [RBP-960]
            mov DWORD PTR [RBP-724],EAX
            jne .L_405818

            mov RDX,QWORD PTR [RBP-968]
            lea RAX,QWORD PTR [RSI+1]
            lea RDI,QWORD PTR [RSI+65]
            mov R11,RDX
            jmp .L_405446
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405428:

            mov RCX,RAX
            sub RCX,RSI
            movsxd RCX,DWORD PTR [RBX+RCX*4]
            mov DWORD PTR [R8+RCX*4],EDX
            lea RDX,QWORD PTR [RAX+1]
            cmp RDI,RDX
            je .L_405cf2

            mov RAX,RDX
.L_405446:

            movzx EDX,BYTE PTR [R12+RAX*1-1]
            lea ECX,DWORD PTR [RDX-1]
            cmp ECX,65534
            jbe .L_405428
.L_405457:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408bec]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov QWORD PTR [RBP-960],RAX
            xor R8D,R8D
            mov ESI,1
            xor EAX,EAX
.L_40547d:

            call __fprintf_chk@PLT
.L_405482:

            mov RDI,QWORD PTR [RBP-752]
            mov DWORD PTR [R15+272],18
            test RDI,RDI
            jne .L_404d2f

            jmp .L_404d34
.L_4054a2:

            cmp DWORD PTR [RBP-972],2
            jne .L_404698

            lea RAX,QWORD PTR [RBP-960]
            mov R9D,DWORD PTR [RBP-1008]
            mov R8,QWORD PTR [RBP-1016]
            mov RSI,QWORD PTR [RBP-968]
            push R15
            lea RCX,QWORD PTR [RBP-880]
            lea RDX,QWORD PTR [RBP-912]
            push RAX
            mov RDI,R12
            and R9D,1
.L_4054e3:

            call .L_402210

            pop RCX
            pop RSI
            mov EBX,EAX
.L_4054ec:

            test BL,BL
            jne .L_404698

            jmp .L_404d34
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405500:

            mov R9D,DWORD PTR [RBP-968]
            mov R8D,DWORD PTR [RBP-984]
            lea RDX,QWORD PTR [RIP+.L_408a00]
            mov ECX,DWORD PTR [RBP-976]
            mov RDI,QWORD PTR [RIP+stderr]
            mov ESI,1
            xor EAX,EAX

            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],5
            xor R14D,R14D
            nop
            nop
            nop
            nop
.L_405540:

            mov RDI,QWORD PTR [RBP-880]
            test RDI,RDI
            je .L_405551

            call _ZdlPv@PLT
.L_405551:

            mov RDI,QWORD PTR [RBP-912]
            test RDI,RDI
            je .L_404284

            call _ZdlPv@PLT

            jmp .L_404284
.L_40556b:

            mov R9D,DWORD PTR [RBP-968]
            mov R8D,2
.L_405578:

            mov ECX,DWORD PTR [RBP-984]
.L_40557e:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408528]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],3
            xor R14D,R14D
            jmp .L_405540
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4055b0:

            mov QWORD PTR [RBP-968],R10
.L_4055b7:

            lea R13,QWORD PTR [RBP-704]
            lea RDI,QWORD PTR [R15+176]
            mov BYTE PTR [RBP-704],255
            mov RSI,R13
            call .L_4080b0
.L_4055d4:

            mov RAX,QWORD PTR [RBP-960]
            lea R13,QWORD PTR [RBP-608]
            add RAX,R12
            mov RSI,RAX
            mov QWORD PTR [RBP-984],RAX
            lea RAX,QWORD PTR [R13+16]
            mov QWORD PTR [RBP-608],RAX
            mov RAX,RSI
            add RSI,RBX
            je .L_40560b

            test RAX,RAX
            je .L_406538
.L_40560b:

            cmp RBX,15
            mov QWORD PTR [RBP-952],RBX
            ja .L_4056b8

            cmp RBX,1
            jne .L_40575d

            mov RAX,QWORD PTR [RBP-984]
            lea RDX,QWORD PTR [R13+16]
            movzx EAX,BYTE PTR [RAX]
            mov BYTE PTR [RBP-592],AL
            mov EAX,1
.L_40563f:

            lea RDI,QWORD PTR [R15+200]
            mov QWORD PTR [RBP-600],RAX
            mov RSI,R13
            mov BYTE PTR [RDX+RAX*1],0
.L_405654:

            call .L_408200
.L_405659:

            mov RDI,QWORD PTR [RBP-608]
            add R13,16
            cmp RDI,R13
            je .L_40566e

            call _ZdlPv@PLT
.L_40566e:

            mov RSI,QWORD PTR [RBP-960]
            add RSI,RBX
            mov QWORD PTR [RBP-960],RSI
            jmp .L_4044a4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405688:

            cmp RDX,4
            je .L_404404

            mov EAX,4
            jmp .L_4043ec
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4056a0:

            cmp RDX,4
            je .L_404383

            mov EAX,4
            jmp .L_40436b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4056b8:

            lea RSI,QWORD PTR [RBP-952]
            xor EDX,EDX
            mov RDI,R13
.L_4056c4:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RBP-952]
            mov QWORD PTR [RBP-608],RAX
            mov QWORD PTR [RBP-592],RDX
.L_4056de:

            mov RSI,QWORD PTR [RBP-984]
            mov RDX,RBX
            mov RDI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP-952]
            mov RDX,QWORD PTR [RBP-608]
            jmp .L_40563f
.L_405703:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408bf6]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],29
            xor R14D,R14D
            jmp .L_405540
.L_405730:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408b36]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],30
            xor R14D,R14D
            jmp .L_405540
.L_40575d:

            lea RAX,QWORD PTR [R13+16]
            jmp .L_4056de
.L_405766:

            xor ECX,ECX
            cmp QWORD PTR [RBP-968],RSI
            mov R8D,ESI
            jbe .L_405779

            movzx ECX,BYTE PTR [R12+RSI*1]
.L_405779:

            mov R9D,DWORD PTR [RBP-968]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408720]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_40579a:

            mov DWORD PTR [R15+272],4
            xor R14D,R14D
            jmp .L_405540
.L_4057ad:

            cmp R8B,3
            ja .L_406278

            imul EDX,R8D,758
            mov RCX,QWORD PTR [RBP-912]
            movsxd RDX,EDX
            lea RBX,QWORD PTR [RCX+RDX*4]
            mov QWORD PTR [RBP-1128],RBX
            jmp .L_4048a8
.L_4057d8:

            cmp EBX,12
            jle .L_404b32
.L_4057e1:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408bc8]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov R8D,EBX
            mov ESI,1
            xor EAX,EAX
.L_405800:

            call __fprintf_chk@PLT
.L_405805:

            mov DWORD PTR [R15+272],21
            jmp .L_404d12
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405818:

            mov RDX,QWORD PTR [RBP-968]
            lea RDI,QWORD PTR [RSI+128]
            mov RAX,RSI
            mov R11,RDX
            jmp .L_405847
          .byte 0x66
          .byte 0x90
.L_405830:

            mov RCX,RAX
            sub RCX,RSI
            cmp RAX,RDI
            movsxd RCX,DWORD PTR [RBX+RCX*2]
            mov DWORD PTR [R8+RCX*4],EDX
            je .L_405cf2
.L_405847:

            movzx EDX,BYTE PTR [R12+RAX*1]
            movzx ECX,BYTE PTR [R12+RAX*1+1]
            add RAX,2
            shl EDX,8
            add EDX,ECX
            lea ECX,DWORD PTR [RDX-1]
            cmp ECX,65534
            jbe .L_405830

            jmp .L_405457
.L_40586b:

            mov RAX,QWORD PTR [RBP-1024]
            test R9B,R9B
            mov R13,QWORD PTR [RBP-1144]
            mov QWORD PTR [RBP-968],RAX
            jne .L_4067b2
.L_405889:

            mov RDI,QWORD PTR [RBP-704]
            mov RAX,QWORD PTR [RBP-1040]
            mov RBX,QWORD PTR [RBP-1056]
            mov EDX,DWORD PTR [RBP-992]
            add DWORD PTR [RDI+R13*1],1
            shl EDX,15
            mov DWORD PTR [RAX+RBX*4],256
            mov EAX,65536
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1048]
            shl EDX,14
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1060]
            shl EDX,13
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1068]
            shl EDX,12
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1064]
            shl EDX,11
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1072]
            shl EDX,10
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1076]
            shl EDX,9
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1080]
            shl EDX,8
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1084]
            shl EDX,7
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1088]
            shl EDX,6
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1092]
            shl EDX,5
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1096]
            shl EDX,4
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1100]
            shl EDX,3
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1104]
            shl EDX,2
            sub EAX,EDX
            mov EDX,DWORD PTR [RBP-1108]
            add EDX,EDX
            sub EAX,EDX
            sub EAX,DWORD PTR [RBP-1112]
            cmp EAX,DWORD PTR [RBP-1116]
            js .L_4063cd

            je .L_4059ae

            mov RBX,QWORD PTR [RBP-1128]
            cmp WORD PTR [RBX+2],-1
            mov RAX,RBX
            je .L_4059ae

            lea RDX,QWORD PTR [RBX+3032]
            mov RBX,QWORD PTR [RBP-968]
            mov RSI,RBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405990:

            mov R8D,4294967295
            mov BYTE PTR [RAX],0
            add RAX,4
            mov WORD PTR [RAX-2],R8W
            cmp RDX,RAX
            jne .L_405990

            mov QWORD PTR [RBP-968],RSI
.L_4059ae:

            mov RAX,QWORD PTR [RBP-1032]
            cmp QWORD PTR [RBP-960],RAX
            sete BYTE PTR [RBP-652]
            cmp DWORD PTR [RBP-972],2
            je .L_405ece
.L_4059d0:

            mov RBX,QWORD PTR [R15+112]
            cmp RBX,QWORD PTR [R15+120]
            je .L_4060ed

            test RBX,RBX
            je .L_405b30

            mov RAX,QWORD PTR [RBP-696]
            sub RAX,QWORD PTR [RBP-704]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov QWORD PTR [RBP-1000],RAX
            sar RAX,2
            test RAX,RAX
            je .L_405a47

            movabs RSI,4611686018427387903
            cmp RAX,RSI
            ja .L_4067a6

            mov RDI,QWORD PTR [RBP-1000]
            mov R13,QWORD PTR [RBP-1136]
.L_405a3f:

            call _Znwm@PLT
.L_405a44:

            mov RCX,RAX
.L_405a47:

            mov RAX,QWORD PTR [RBP-1000]
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            add RAX,RCX
            mov QWORD PTR [RBX+16],RAX
            mov RAX,QWORD PTR [RBP-696]
            mov RSI,QWORD PTR [RBP-704]
            mov R13,RAX
            sub R13,RSI
            cmp RAX,RSI
            je .L_405a83

            mov RDI,RCX
            mov RDX,R13
            call memmove@PLT

            mov RCX,RAX
.L_405a83:

            add RCX,R13
            mov QWORD PTR [RBX+8],RCX
            mov R13,QWORD PTR [RBP-672]
            xor ECX,ECX
            sub R13,QWORD PTR [RBP-680]
            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+40],0
            mov RAX,R13
            sar RAX,2
            test RAX,RAX
            je .L_405adc

            movabs RSI,4611686018427387903
            cmp RAX,RSI
            ja .L_40679c

            mov RDI,R13
.L_405ad4:

            call _Znwm@PLT
.L_405ad9:

            mov RCX,RAX
.L_405adc:

            add R13,RCX
            mov QWORD PTR [RBX+24],RCX
            mov QWORD PTR [RBX+32],RCX
            mov QWORD PTR [RBX+40],R13
            mov RAX,QWORD PTR [RBP-672]
            mov RSI,QWORD PTR [RBP-680]
            mov R13,RAX
            sub R13,RSI
            cmp RAX,RSI
            je .L_405b12

            mov RDI,RCX
            mov RDX,R13
            call memmove@PLT

            mov RCX,RAX
.L_405b12:

            mov EAX,DWORD PTR [RBP-656]
            add RCX,R13
            mov QWORD PTR [RBX+32],RCX
            mov DWORD PTR [RBX+48],EAX
            movzx EAX,BYTE PTR [RBP-652]
            mov BYTE PTR [RBX+52],AL
            mov RBX,QWORD PTR [R15+112]
.L_405b30:

            add RBX,56
            mov QWORD PTR [R15+112],RBX
.L_405b38:

            mov RDI,QWORD PTR [RBP-800]
            test RDI,RDI
            je .L_405b49

            call _ZdlPv@PLT
.L_405b49:

            mov RDI,QWORD PTR [RBP-680]
            test RDI,RDI
            je .L_405b5a

            call _ZdlPv@PLT
.L_405b5a:

            mov RDI,QWORD PTR [RBP-704]
            test RDI,RDI
            je .L_405b6b

            call _ZdlPv@PLT
.L_405b6b:

            mov RCX,QWORD PTR [RBP-960]
            cmp RCX,QWORD PTR [RBP-1032]
            jae .L_406320

            lea RAX,QWORD PTR [RCX+17]
            cmp QWORD PTR [RBP-968],RAX
            jae .L_404782
.L_405b90:

            mov R9D,DWORD PTR [RBP-968]
            mov R8D,17
.L_405b9d:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408528]
            mov ESI,1
            xor EAX,EAX
.L_405bb2:

            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],3
            jmp .L_404d34
.L_405bc7:

            mov R14D,1
            jmp .L_405540
.L_405bd2:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408b4d]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],7
            xor R14D,R14D
            jmp .L_405540
.L_405c06:

            mov R9D,DWORD PTR [RBP-968]
            mov R8D,8
            mov ECX,DWORD PTR [RBP-984]
            jmp .L_40557e
.L_405c1e:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408c0d]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_405c3f:

            mov DWORD PTR [R15+272],19
            xor R14D,R14D
            jmp .L_405540
.L_405c52:

            mov QWORD PTR [RBP-960],RDI
.L_405c59:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408bd4]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov ESI,1
            xor EAX,EAX
            lea R13,QWORD PTR [RBP-704]
.L_405c7c:

            call __fprintf_chk@PLT
.L_405c81:

            jmp .L_404cf6
.L_405c86:

            mov R9D,DWORD PTR [RBP-968]
            mov R8D,4
            jmp .L_405578
.L_405c98:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_4089d0]
            mov ESI,1
            xor EAX,EAX
.L_405cad:

            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],38
            xor R14D,R14D
            jmp .L_405540
.L_405cc5:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408940]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_405cdf:

            mov DWORD PTR [R15+272],37
            xor R14D,R14D
            jmp .L_405540
.L_405cf2:

            cmp RAX,QWORD PTR [RBP-1024]
            mov R13,QWORD PTR [R15+88]
            mov QWORD PTR [RBP-968],R11
            mov QWORD PTR [RBP-960],RAX
            sete BYTE PTR [RBP-720]
            cmp R13,QWORD PTR [R15+96]
            je .L_4062a9

            test R13,R13
            je .L_405e05

            mov RAX,QWORD PTR [RBP-744]
            sub RAX,QWORD PTR [RBP-752]
            xor ECX,ECX
            mov QWORD PTR [R13],0
            mov QWORD PTR [R13+8],0
            mov QWORD PTR [R13+16],0
            mov QWORD PTR [RBP-1000],RAX
            sar RAX,2
            test RAX,RAX
            je .L_405d7f

            movabs RSI,4611686018427387903
            cmp RAX,RSI
            ja .L_406778

            mov RDI,QWORD PTR [RBP-1000]
.L_405d77:

            call _Znwm@PLT
.L_405d7c:

            mov RCX,RAX
.L_405d7f:

            mov RAX,QWORD PTR [RBP-1000]
            mov QWORD PTR [R13],RCX
            mov QWORD PTR [R13+8],RCX
            mov R8,QWORD PTR [RBP-752]
            add RAX,RCX
            mov QWORD PTR [R13+16],RAX
            mov RAX,QWORD PTR [RBP-744]
            mov R9,RAX
            sub R9,R8
            cmp RAX,R8
            je .L_405ddb

            mov RDX,R9
            mov RSI,R8
            mov RDI,RCX
            mov QWORD PTR [RBP-1048],R9
            mov QWORD PTR [RBP-1000],R8
            call memmove@PLT

            mov R9,QWORD PTR [RBP-1048]
            mov R8,QWORD PTR [RBP-1000]
            mov RCX,RAX
.L_405ddb:

            mov EAX,DWORD PTR [RBP-728]
            add RCX,R9
            mov QWORD PTR [R13+8],RCX
            mov DWORD PTR [R13+24],EAX
            mov EAX,DWORD PTR [RBP-724]
            mov DWORD PTR [R13+28],EAX
            movzx EAX,BYTE PTR [RBP-720]
            mov BYTE PTR [R13+32],AL
            mov R13,QWORD PTR [R15+88]
.L_405e05:

            add R13,40
            mov QWORD PTR [R15+88],R13
.L_405e0d:

            test R8,R8
            je .L_405e1a

            mov RDI,R8
            call _ZdlPv@PLT
.L_405e1a:

            mov RAX,QWORD PTR [RBP-960]
            cmp RAX,QWORD PTR [RBP-1024]
            jae .L_406256

            mov RDX,QWORD PTR [R15+88]
            sub RDX,QWORD PTR [R15+80]
            movabs RSI,-3689348814741910323
            sar RDX,3
            imul RDX,RSI
            cmp RDX,3
            ja .L_406263

            lea RCX,QWORD PTR [RAX+1]
            cmp QWORD PTR [RBP-968],RCX
            jb .L_4064ba

            movzx R13D,BYTE PTR [R12+RAX*1]
            mov QWORD PTR [RBP-960],RCX
            mov EAX,R13D
            sar R13D,4
            and EAX,15
            movzx ESI,AL
            cmp AL,3
            mov DWORD PTR [RBP-1000],ESI
            jbe .L_405357
.L_405e8a:

            mov R8D,DWORD PTR [RBP-1000]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408bda]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov ESI,1
            xor EAX,EAX
.L_405ead:

            call __fprintf_chk@PLT
.L_405eb2:

            mov DWORD PTR [R15+272],17
            jmp .L_404d34
.L_405ec2:

            mov R9D,ESI
            lea R8D,DWORD PTR [RBX-2]
            jmp .L_40557e
.L_405ece:

            mov RDX,QWORD PTR [RBP-1128]
            mov RSI,QWORD PTR [RBP-1040]
            mov R13,QWORD PTR [RBP-1136]
.L_405ee3:

            call .L_408ee0

            test EAX,EAX
            jne .L_4059d0

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_4089b0]
            mov ESI,1
            lea R13,QWORD PTR [RBP-704]
            call __fprintf_chk@PLT
.L_405f0f:

            jmp .L_404cf6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405f18:

            mov R9D,ESI
            lea R8D,DWORD PTR [R13-2]
            jmp .L_40557e
.L_405f24:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408b57]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            xor R8D,R8D
            mov ESI,1
            xor EAX,EAX
.L_405f43:

            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],9
            xor R14D,R14D
            jmp .L_405540
.L_405f5b:

            cmp DWORD PTR [RBP-972],2
            jne .L_405bc7

            mov RAX,QWORD PTR [RBP-960]
            cmp RAX,QWORD PTR [RBP-968]
            jae .L_405f9b

            mov R8,QWORD PTR [RBP-968]
            mov RDX,QWORD PTR [R15+232]
            lea RCX,QWORD PTR [R12+RAX*1]
            lea RDI,QWORD PTR [R15+224]
            xor ESI,ESI
            sub R8,RAX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm@PLT
.L_405f9b:

            mov R8,QWORD PTR [R15+128]
            mov R9,QWORD PTR [R15+136]
            sub R9,R8
            sar R9,6
            test R9,R9
            je .L_406054

            mov R11,QWORD PTR [R15+80]
            mov RSI,QWORD PTR [R15+88]
            movabs RAX,-3689348814741910323
            add R8,16
            xor R10D,R10D
            sub RSI,R11
            sar RSI,3
            imul RSI,RAX
.L_405fdd:

            test RSI,RSI
            mov RCX,QWORD PTR [R8]
            je .L_406015

            movsxd RAX,DWORD PTR [R11+28]
            cmp RAX,RCX
            je .L_406042

            lea RDX,QWORD PTR [R11+68]
            xor EAX,EAX
            jmp .L_40600c
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406000:

            movsxd RDI,DWORD PTR [RDX]
            add RDX,40
            cmp RDI,RCX
            je .L_406044
.L_40600c:

            add RAX,1
            cmp RAX,RSI
            jne .L_406000
.L_406015:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408a28]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],36
            xor R14D,R14D
            jmp .L_405540
.L_406042:

            xor EAX,EAX
.L_406044:

            add R10,1
            mov QWORD PTR [R8],RAX
            add R8,64
            cmp R10,R9
            jne .L_405fdd
.L_406054:

            mov RCX,QWORD PTR [R15+112]
            mov RDX,QWORD PTR [R15+104]
            movabs RSI,7905747460161236407
            mov RAX,RCX
            sub RAX,RDX
            sar RAX,3
            imul RAX,RSI
            cmp RCX,RDX
            je .L_40634d

            cmp RAX,511
            jbe .L_405bc7

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408c2d]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_4060a3:

            mov DWORD PTR [R15+272],35
            xor R14D,R14D
            jmp .L_405540
.L_4060b6:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408b5e]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            xor R8D,R8D
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_4060da:

            mov DWORD PTR [R15+272],8
            xor R14D,R14D
            jmp .L_405540
.L_4060ed:

            mov RDX,QWORD PTR [RBP-1136]
            lea RDI,QWORD PTR [R15+104]
            mov RSI,RBX
            mov R13,RDX
.L_4060fe:

            call .L_4073e0
.L_406103:

            jmp .L_405b38
.L_406108:

            add RBX,64
            cmp RDX,RBX
            jne .L_404e2f

            jmp .L_404e58
.L_40611a:

            lea RSI,QWORD PTR [RBP-928]
            xor EDX,EDX
            mov RDI,R13
.L_406126:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RBP-928]
            mov QWORD PTR [RBP-608],RAX
            mov QWORD PTR [RBP-592],RDX
            jmp .L_404596
.L_406145:

            mov RAX,QWORD PTR [RBP-680]
            mov QWORD PTR [RBP-1040],RAX
            jmp .L_405889
.L_406158:

            mov RDI,QWORD PTR [RBP-984]
            lea RSI,QWORD PTR [RBP-944]
            xor EDX,EDX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RBP-944]
            mov QWORD PTR [RBP-640],RAX
            mov QWORD PTR [RBP-624],RDX
            jmp .L_405119
.L_406187:

            mov R9D,EBX
            jmp .L_40557e
.L_40618f:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408b64]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_4061b0:

            mov DWORD PTR [R15+272],10
            xor R14D,R14D
            jmp .L_405540
.L_4061c3:

            mov R9D,DWORD PTR [RBP-968]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408528]
            mov R8D,EBX
            mov ESI,1
            xor EAX,EAX
.L_4061e2:

            call __fprintf_chk@PLT
.L_4061e7:

            mov DWORD PTR [R15+272],3
            jmp .L_404d12
.L_4061f7:

            lea RDI,QWORD PTR [R15+56]
            mov RDX,R13
            mov RSI,RBX
.L_406201:

            call .L_407d20

            jmp .L_404680
.L_40620b:

            lea RSI,QWORD PTR [RBP-920]
            xor EDX,EDX
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_40621c:

            mov RDX,QWORD PTR [RBP-920]
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+16],RDX
.L_40622a:

            mov RDX,QWORD PTR [RBP-984]
            mov RSI,QWORD PTR [RBP-1000]
            mov RDI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP-920]
            mov QWORD PTR [RBP-984],RAX
            mov RAX,QWORD PTR [RBX]
            jmp .L_404665
.L_406256:

            cmp RAX,QWORD PTR [RBP-1024]
            je .L_404698
.L_406263:

            mov R8D,EAX
            mov ECX,DWORD PTR [RBP-1032]
            sub R8D,DWORD PTR [RBP-984]
            jmp .L_405265
.L_406278:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RCX,QWORD PTR [RIP+.L_408bba]
            lea RDX,QWORD PTR [RIP+.L_408a8d]
            mov ESI,1
            xor EAX,EAX
.L_406294:

            call __fprintf_chk@PLT
.L_406299:

            mov DWORD PTR [R15+272],16
            jmp .L_404d12
.L_4062a9:

            mov RDX,QWORD PTR [RBP-1040]
            lea RDI,QWORD PTR [R15+80]
            mov RSI,R13
.L_4062b7:

            call .L_407930
.L_4062bc:

            mov R8,QWORD PTR [RBP-752]
            jmp .L_405e0d
.L_4062c8:

            lea RSI,QWORD PTR [RBP-936]
            xor EDX,EDX
            mov RDI,RBX
.L_4062d4:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RBP-936]
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+16],RDX
.L_4062e7:

            mov RSI,QWORD PTR [RBP-1000]
            mov RDX,R13
            mov RDI,RAX
            call memcpy@PLT

            mov R13,QWORD PTR [RBP-936]
            mov RAX,QWORD PTR [RBX]
            jmp .L_4051cb
.L_406308:

            mov RDX,QWORD PTR [RBP-984]
            lea RDI,QWORD PTR [R15+32]
            mov RSI,RBX
            call .L_407d20
.L_40631b:

            jmp .L_4051e0
.L_406320:

            cmp RCX,QWORD PTR [RBP-1032]
            je .L_404698

            mov R8D,ECX
            mov ECX,DWORD PTR [RBP-1120]
            sub R8D,DWORD PTR [RBP-984]
            jmp .L_405265
.L_406342:

            test R13,R13
            je .L_4051cb

            jmp .L_4062e7
.L_40634d:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408a58]
            mov ESI,1
            xor EAX,EAX
.L_406362:

            call __fprintf_chk@PLT
.L_406367:

            jmp .L_4060a3
.L_40636c:

            cmp R13D,1
            mov R9D,DWORD PTR [RBP-968]
            sbb EAX,EAX
            and EAX,4294967232
            lea R8D,DWORD PTR [RAX+128]
            jmp .L_405b9d
.L_406388:

            cmp QWORD PTR [RBP-984],0
            je .L_404665

            jmp .L_40622a
.L_40639b:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408b73]
            mov ECX,R8D
            mov ESI,1
            xor EAX,EAX
.L_4063b3:

            call __fprintf_chk@PLT
.L_4063b8:

            mov DWORD PTR [R15+272],32
            jmp .L_405048
.L_4063c8:

            call __stack_chk_fail@PLT
.L_4063cd:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408990]
            mov ESI,1
            xor EAX,EAX
            lea R13,QWORD PTR [RBP-704]
.L_4063e9:

            call __fprintf_chk@PLT
.L_4063ee:

            jmp .L_404cf6
.L_4063f3:

            sub RAX,RCX
            lea RDI,QWORD PTR [R15+128]
            mov RSI,RAX
.L_406400:

            call .L_406830
.L_406405:

            jmp .L_404e5f
.L_40640a:

            mov EAX,DWORD PTR [R15+4]
            lea R8D,DWORD PTR [RCX*8]
            mov RDI,QWORD PTR [RBP-1024]
            add EAX,R8D
            sub EAX,1
            cdq 
            idiv R8D
            lea R8D,DWORD PTR [RSI*8]
            mov DWORD PTR [R15+20],EAX
            mov EAX,DWORD PTR [R15]
            add EAX,R8D
            sub EAX,1
            cdq 
            idiv R8D
            cmp DWORD PTR [RBP-972],2
            mov DWORD PTR [R15+24],EAX
            je .L_4065c4
.L_406451:

            movzx ECX,BYTE PTR [RBP-1000]
            mov R8,QWORD PTR [RBP-960]
            mov EBX,1
            shl ECX,8
            add ECX,R14D
            movsxd RAX,ECX
            add RAX,QWORD PTR [RBP-984]
            cmp RAX,R8
            je .L_40504a

            sub R8D,DWORD PTR [RBP-984]
            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408610]
            mov ESI,1
            xor EAX,EAX
.L_406499:

            call __fprintf_chk@PLT
.L_40649e:

            mov DWORD PTR [R15+272],6
            jmp .L_405048
.L_4064ae:

            lea RCX,QWORD PTR [RIP+.L_408b9a]
            jmp .L_405023
.L_4064ba:

            mov R9D,DWORD PTR [RBP-968]
            mov R8D,1
            mov ECX,EAX
            jmp .L_405b9d
.L_4064ce:

            mov RBX,RAX
.L_4064d1:

            lea RDI,QWORD PTR [RBP-800]
            call .L_4084e0
.L_4064dd:

            mov RDI,R13
            call .L_4067f0
.L_4064e5:

            mov RDI,QWORD PTR [RBP-880]
            test RDI,RDI
            je .L_4064f6

            call _ZdlPv@PLT
.L_4064f6:

            mov RDI,QWORD PTR [RBP-912]
            test RDI,RDI
            je .L_406507

            call _ZdlPv@PLT
.L_406507:

            mov RDI,RBX
.L_40650a:

            call _Unwind_Resume@PLT
.L_40650f:

            lea RDI,QWORD PTR [RBP-800]
            mov RBX,RAX
            lea R13,QWORD PTR [RBP-704]
            call .L_4084e0

            jmp .L_4064dd
.L_406527:

            lea RDI,QWORD PTR [RBP-848]
            mov RBX,RAX
            call .L_4084e0

            jmp .L_4064e5
.L_406538:

            lea RDI,QWORD PTR [RIP+.L_407cf0]
.L_40653f:

            call _ZSt19__throw_logic_errorPKc@PLT
.L_406544:

            mov RDI,QWORD PTR [RBP-608]
            add R13,16
            mov RBX,RAX
            cmp RDI,R13
            je .L_4064e5
.L_406557:

            call _ZdlPv@PLT

            jmp .L_4064e5
.L_40655e:

            mov EAX,DWORD PTR [R15+16]
            lea ECX,DWORD PTR [RAX*8]
            mov EAX,DWORD PTR [R15+4]
            add EAX,ECX
            sub EAX,1
            cdq 
            idiv ECX
            mov DWORD PTR [R15+20],EAX
            mov EAX,DWORD PTR [R15+12]
            lea ECX,DWORD PTR [RAX*8]
            mov EAX,DWORD PTR [R15]
            add EAX,ECX
            sub EAX,1
            cdq 
            idiv ECX
            mov DWORD PTR [R15+24],EAX
            jmp .L_406451
.L_406598:

            mov RBX,RAX
            jmp .L_4064f6
.L_4065a0:

            movzx ECX,BYTE PTR [RDI]
            jmp .L_404259
.L_4065a8:

            mov RBX,RAX
            lea R13,QWORD PTR [RBP-704]
            jmp .L_4064dd
.L_4065b7:

            mov RBX,RAX
            jmp .L_4064e5
.L_4065bf:

            jmp .L_406527
.L_4065c4:

            mov R8D,DWORD PTR [R10+4]
            mov EAX,ESI
            cdq 
            idiv R8D
            test EDX,EDX
            jne .L_4066e1

            mov ESI,DWORD PTR [R10+8]
            mov EAX,ECX
            cdq 
            idiv ESI
            test EDX,EDX
            jne .L_4066e1

            xor EBX,EBX
            jmp .L_406647
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4065f0:

            jae .L_4065fc

            add RAX,RAX
            add RAX,RCX
            mov QWORD PTR [RDI+48],RAX
.L_4065fc:

            mov RAX,QWORD PTR [RBP-1008]
            add RBX,1
            sub RAX,R10
            sar RAX,6
            cmp RAX,RBX
            jbe .L_406451

            mov RDI,RBX
            mov EAX,DWORD PTR [R15+12]
            shl RDI,6
            add RDI,R10
            mov R8D,DWORD PTR [RDI+4]
            cdq 
            idiv R8D
            test EDX,EDX
            jne .L_4066e1

            mov EAX,DWORD PTR [R15+16]
            mov ESI,DWORD PTR [RDI+8]
            cdq 
            idiv ESI
            test EDX,EDX
            jne .L_4066e1
.L_406647:

            imul R8D,DWORD PTR [R15+24]
            imul ESI,DWORD PTR [R15+20]
            mov DWORD PTR [RDI+24],R8D
            movsxd R8,R8D
            mov DWORD PTR [RDI+28],ESI
            mov RAX,R8
            movsxd RSI,ESI
            imul RAX,RSI
            cmp RAX,2097152
            ja .L_4066b5

            mov RCX,QWORD PTR [RDI+40]
            mov RDX,QWORD PTR [RDI+48]
            mov DWORD PTR [RDI+32],EAX
            shl EAX,6
            cdqe 
            sub RDX,RCX
            sar RDX,1
            cmp RAX,RDX
            jbe .L_4065f0

            sub RAX,RDX
            add RDI,40
            mov RSI,RAX
.L_406696:

            call .L_406b20

            mov RAX,QWORD PTR [R15+136]
            mov R10,QWORD PTR [R15+128]
            mov QWORD PTR [RBP-1008],RAX
            jmp .L_4065fc
.L_4066b5:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408ba8]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT

            mov DWORD PTR [R15+272],41
            xor EBX,EBX
            jmp .L_40504a
.L_4066e1:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_408918]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_4066fb:

            mov DWORD PTR [R15+272],20
            xor EBX,EBX
            jmp .L_40504a
.L_40670d:

            mov RDI,QWORD PTR [RBP-704]
            mov RBX,RAX
            test RDI,RDI
            jne .L_406557

            jmp .L_4064e5
.L_406725:

            mov RDI,QWORD PTR [RBP-752]
            mov RBX,RAX
            test RDI,RDI
            jne .L_406557

            jmp .L_4064e5
.L_40673d:

            lea RDI,QWORD PTR [RIP+.L_407cf0]
.L_406744:

            call _ZSt19__throw_logic_errorPKc@PLT
.L_406749:

            mov RBX,RAX
            mov RAX,QWORD PTR [RBP-984]
            mov RDI,QWORD PTR [RBP-640]
            add RAX,16
            cmp RDI,RAX
            jne .L_406557

            jmp .L_4064e5
.L_40676c:

            lea RDI,QWORD PTR [RIP+.L_407cf0]
.L_406773:

            call _ZSt19__throw_logic_errorPKc@PLT
.L_406778:

            call _ZSt17__throw_bad_allocv@PLT
.L_40677d:

            mov RDI,QWORD PTR [RBX]
            mov R14,RAX
            test RDI,RDI
            je .L_40678d

            call _ZdlPv@PLT
.L_40678d:

            mov RBX,R14
            lea R13,QWORD PTR [RBP-704]
            jmp .L_4064d1
.L_40679c:

            call _ZSt17__throw_bad_allocv@PLT
.L_4067a1:

            jmp .L_406544
.L_4067a6:

            lea R13,QWORD PTR [RBP-704]
.L_4067ad:

            call _ZSt17__throw_bad_allocv@PLT
.L_4067b2:

            mov QWORD PTR [RBP-960],R11
            jmp .L_405889
.L_4067be:

            mov QWORD PTR [RBP-960],R11
            jmp .L_404cd2
.L_4067ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4067d0:

            mov RCX,RDX
            mov EDX,ESI
            mov RSI,QWORD PTR [RDI+8]
            mov RDI,QWORD PTR [RDI]
            jmp .L_404200
.L_4067e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4067f0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+24]
            test RDI,RDI
            je .L_406802

            call _ZdlPv@PLT
.L_406802:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_406810

            pop RBX
            jmp _ZdlPv@PLT
.L_406810:

            pop RBX
            ret 
.L_406812:
          .string "vector::_M_default_append"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406830:

            test RSI,RSI
            je .L_4068e0

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_406847:

            mov R15,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            sub RAX,R15
            sar RAX,6
            cmp RAX,RSI
            jb .L_4068e8

            mov RDX,RSI
            mov RAX,R15
.L_406865:

            test RAX,RAX
            je .L_4068d0
.L_40686a:

            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+4],1
            add RAX,64
            mov DWORD PTR [RAX-56],1
            mov QWORD PTR [RAX-48],0
            mov DWORD PTR [RAX-40],0
            mov DWORD PTR [RAX-36],0
            mov QWORD PTR [RAX-24],0
            mov QWORD PTR [RAX-16],0
            mov QWORD PTR [RAX-8],0
            sub RDX,1
            jne .L_406865
.L_4068b6:

            shl RSI,6
            add RSI,R15
            mov QWORD PTR [RDI+8],RSI
            add RSP,24
.L_4068c5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4068d0:

            sub RDX,1
            je .L_4068b6

            mov EAX,64
            jmp .L_40686a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4068e0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4068e8:

            mov R13,QWORD PTR [RDI]
            mov RCX,R15
            mov RBX,RSI
            mov RBP,RDI
            sub RCX,R13
            mov RAX,RCX
            sar RAX,6
            mov RSI,RAX
            mov QWORD PTR [RSP],RAX
            movabs RAX,288230376151711743
            mov RDX,RAX
            sub RDX,RSI
            cmp RBX,RDX
            ja .L_406b07

            cmp RBX,RSI
            mov R12,RSI
            cmovae R12,RBX
            add R12,RSI
            jb .L_406af0

            cmp R12,RAX
            ja .L_406af0

            test R12,R12
            je .L_406afc

            shl R12,6
.L_406947:

            mov RDI,R12
            mov QWORD PTR [RSP+8],RCX
            call _Znwm@PLT

            mov R15,QWORD PTR [RBP+8]
            mov R13,QWORD PTR [RBP]
            mov R14,RAX
            mov RCX,QWORD PTR [RSP+8]
            add R12,RAX
.L_406967:

            lea RAX,QWORD PTR [R14+RCX*1]
            mov RDX,RBX
.L_40696e:

            test RAX,RAX
            je .L_406ac0
.L_406977:

            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+4],1
            add RAX,64
            mov DWORD PTR [RAX-56],1
            mov QWORD PTR [RAX-48],0
            mov DWORD PTR [RAX-40],0
            mov DWORD PTR [RAX-36],0
            mov QWORD PTR [RAX-24],0
            mov QWORD PTR [RAX-16],0
            mov QWORD PTR [RAX-8],0
            sub RDX,1
            jne .L_40696e
.L_4069c3:

            cmp R13,R15
            je .L_406a7b

            mov RAX,R14
            mov RDX,R13
.L_4069d2:

            test RAX,RAX
            je .L_406ad8
.L_4069db:

            mov EDI,DWORD PTR [RDX]
            add RDX,64
            add RAX,64
            mov DWORD PTR [RAX-64],EDI
            mov EDI,DWORD PTR [RDX-60]
            mov DWORD PTR [RAX-60],EDI
            mov EDI,DWORD PTR [RDX-56]
            mov DWORD PTR [RAX-56],EDI
            mov RDI,QWORD PTR [RDX-48]
            mov QWORD PTR [RAX-48],RDI
            mov EDI,DWORD PTR [RDX-40]
            mov DWORD PTR [RAX-40],EDI
            mov EDI,DWORD PTR [RDX-36]
            mov DWORD PTR [RAX-36],EDI
            mov EDI,DWORD PTR [RDX-32]
            mov QWORD PTR [RAX-16],0
            mov QWORD PTR [RAX-8],0
            mov QWORD PTR [RAX-24],0
            mov DWORD PTR [RAX-32],EDI
            mov RDI,QWORD PTR [RDX-24]
            mov QWORD PTR [RAX-24],RDI
            mov QWORD PTR [RDX-24],0
            mov R8,QWORD PTR [RDX-16]
            mov RDI,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-16],R8
            mov QWORD PTR [RDX-16],RDI
            mov R8,QWORD PTR [RDX-8]
            mov RDI,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-8],R8
            mov QWORD PTR [RDX-8],RDI
            cmp RDX,R15
            jne .L_4069d2

            nop
.L_406a60:

            mov RDI,QWORD PTR [R13+40]
            test RDI,RDI
            je .L_406ab0

            add R13,64
            call _ZdlPv@PLT

            cmp R13,R15
            jne .L_406a60
.L_406a77:

            mov R15,QWORD PTR [RBP]
.L_406a7b:

            test R15,R15
            je .L_406a88

            mov RDI,R15
            call _ZdlPv@PLT
.L_406a88:

            add RBX,QWORD PTR [RSP]
            mov QWORD PTR [RBP],R14
            mov QWORD PTR [RBP+16],R12
            shl RBX,6
            add RBX,R14
            mov QWORD PTR [RBP+8],RBX
            add RSP,24
.L_406aa3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_406ab0:

            add R13,64
            cmp R13,R15
            jne .L_406a60

            jmp .L_406a77
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406ac0:

            sub RDX,1
            je .L_4069c3

            mov EAX,64
            jmp .L_406977
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406ad8:

            add RDX,64
            cmp RDX,R15
            je .L_406a60

            mov EAX,64
            jmp .L_4069db
          .byte 0x90
.L_406af0:

            mov R12,-64
            jmp .L_406947
.L_406afc:

            xor R12D,R12D
            xor R14D,R14D
            jmp .L_406967
.L_406b07:

            lea RDI,QWORD PTR [RIP+.L_406812]
            call _ZSt20__throw_length_errorPKc@PLT
.L_406b13:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406b20:

            test RSI,RSI
            je .L_406b78

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,40
            mov RBP,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            sub RAX,RBP
            sar RAX,1
            cmp RAX,RSI
            jb .L_406b80

            add RBX,RBX
            mov RDI,RBP
            xor ESI,ESI
            mov RDX,RBX
            add RBX,RBP
            call memset@PLT

            mov QWORD PTR [R12+8],RBX
            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406b78:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406b80:

            mov R15,QWORD PTR [RDI]
            mov RSI,RBP
            movabs RAX,9223372036854775807
            sub RSI,R15
            mov R13,RSI
            sar R13,1
            sub RAX,R13
            cmp RBX,RAX
            ja .L_406c86

            cmp RBX,R13
            mov RAX,R13
            cmovae RAX,RBX
            add RAX,R13
            jb .L_406c60

            test RAX,RAX
            js .L_406c60

            je .L_406c70

            lea RBP,QWORD PTR [RAX+RAX*1]
.L_406bcb:

            mov RDI,RBP
            mov QWORD PTR [RSP+16],RSI
            call _Znwm@PLT

            mov R14,RAX
            lea RAX,QWORD PTR [RAX+RBP*1]
            mov RBP,QWORD PTR [R12+8]
            mov R15,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            mov RAX,RBP
            sub RAX,R15
            mov QWORD PTR [RSP+24],RAX
.L_406bfd:

            lea RDI,QWORD PTR [R14+RSI*1]
            lea RDX,QWORD PTR [RBX+RBX*1]
            xor ESI,ESI
            call memset@PLT

            cmp RBP,R15
            je .L_406c58

            mov RDX,QWORD PTR [RSP+24]
            mov RSI,R15
            mov RDI,R14
            call memmove@PLT
.L_406c21:

            mov RDI,R15
            call _ZdlPv@PLT
.L_406c29:

            lea RSI,QWORD PTR [RBX+R13*1]
            mov QWORD PTR [R12],R14
            lea RAX,QWORD PTR [R14+RSI*2]
            mov QWORD PTR [R12+8],RAX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12+16],RAX
            add RSP,40
.L_406c48:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406c58:

            test R15,R15
            je .L_406c29

            jmp .L_406c21
          .byte 0x90
.L_406c60:

            mov RBP,-2
            jmp .L_406bcb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406c70:

            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+8],0
            xor R14D,R14D
            jmp .L_406bfd
.L_406c86:

            lea RDI,QWORD PTR [RIP+.L_406812]
            call _ZSt20__throw_length_errorPKc@PLT
.L_406c92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406ca0:

            test RSI,RSI
            je .L_406d78

            mov R8,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            movabs RDX,-6148914691236517205
            sub RAX,R8
            mov R9,R8
            sar RAX,2
            imul RAX,RDX
            cmp RAX,RSI
            jb .L_406d80

            lea RAX,QWORD PTR [RSI-1]
            cmp RAX,2
            jbe .L_406f10

            lea RCX,QWORD PTR [RSI-4]
            pxor XMM0,XMM0
            mov RAX,R8
            xor EDX,EDX
            shr RCX,2
            add RCX,1
            nop
            nop
            nop
.L_406cf8:

            add RDX,1
            add RAX,48
            movups XMMWORD PTR [RAX-48],XMM0
            movups XMMWORD PTR [RAX-32],XMM0
            movups XMMWORD PTR [RAX-16],XMM0
            cmp RCX,RDX
            ja .L_406cf8

            lea RDX,QWORD PTR [RCX*4]
            lea RAX,QWORD PTR [RDX+RCX*8]
            mov RCX,RSI
            sub RCX,RDX
            cmp RSI,RDX
            lea RAX,QWORD PTR [R8+RAX*4]
            je .L_406d64
.L_406d2c:

            cmp RCX,1
            mov QWORD PTR [RAX],0
            mov DWORD PTR [RAX+8],0
            je .L_406d64

            cmp RCX,2
            mov QWORD PTR [RAX+12],0
            mov DWORD PTR [RAX+20],0
            je .L_406d64

            mov QWORD PTR [RAX+24],0
            mov DWORD PTR [RAX+32],0
.L_406d64:

            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RAX,QWORD PTR [R8+RAX*4]
            mov QWORD PTR [RDI+8],RAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406d78:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406d80:

            push R15
.L_406d82:

            push R14
            mov RCX,R8
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,24
.L_406d97:

            mov R15,QWORD PTR [RDI]
            sub RCX,R15
            mov RSI,RCX
            sar RSI,2
            imul RSI,RDX
            movabs RDX,1537228672809129301
            mov RAX,RDX
            sub RAX,RSI
            mov R13,RSI
            cmp RBX,RAX
            ja .L_406f31

            cmp RBX,RSI
            mov RAX,RSI
            cmovae RAX,RBX
            add RAX,RSI
            jb .L_406f00

            cmp RAX,RDX
            ja .L_406f00

            test RAX,RAX
            je .L_406f23

            lea R12,QWORD PTR [RAX+RAX*2]
            shl R12,2
.L_406df1:

            mov RDI,R12
            mov QWORD PTR [RSP+8],RCX
            call _Znwm@PLT

            mov R9,QWORD PTR [RBP+8]
            mov R15,QWORD PTR [RBP]
            mov R14,RAX
            mov RCX,QWORD PTR [RSP+8]
            add R12,RAX
            mov RDX,R9
            sub RDX,R15
.L_406e17:

            lea RAX,QWORD PTR [RBX-1]
            lea RSI,QWORD PTR [R14+RCX*1]
            cmp RAX,2
            jbe .L_406f1b

            lea RDI,QWORD PTR [RBX-4]
            pxor XMM0,XMM0
            mov RAX,RSI
            xor ECX,ECX
            shr RDI,2
            add RDI,1
            nop
            nop
.L_406e40:

            add RCX,1
            add RAX,48
            movups XMMWORD PTR [RAX-48],XMM0
            movups XMMWORD PTR [RAX-32],XMM0
            movups XMMWORD PTR [RAX-16],XMM0
            cmp RDI,RCX
            ja .L_406e40

            lea RAX,QWORD PTR [RDI*4]
            mov RCX,RBX
            lea RDI,QWORD PTR [RAX+RDI*8]
            sub RCX,RAX
            cmp RBX,RAX
            lea RSI,QWORD PTR [RSI+RDI*4]
            je .L_406eac
.L_406e74:

            cmp RCX,1
            mov QWORD PTR [RSI],0
            mov DWORD PTR [RSI+8],0
            je .L_406eac

            cmp RCX,2
            mov QWORD PTR [RSI+12],0
            mov DWORD PTR [RSI+20],0
            je .L_406eac

            mov QWORD PTR [RSI+24],0
            mov DWORD PTR [RSI+32],0
.L_406eac:

            cmp R9,R15
            je .L_406ef0

            mov RSI,R15
            mov RDI,R14
            call memmove@PLT
.L_406ebc:

            mov RDI,R15
            call _ZdlPv@PLT
.L_406ec4:

            lea RSI,QWORD PTR [RBX+R13*1]
            mov QWORD PTR [RBP],R14
            mov QWORD PTR [RBP+16],R12
            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RAX,QWORD PTR [R14+RAX*4]
            mov QWORD PTR [RBP+8],RAX
            add RSP,24
.L_406ee0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406ef0:

            test R15,R15
            je .L_406ec4

            jmp .L_406ebc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406f00:

            mov R12,-4
            jmp .L_406df1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_406f10:

            mov RCX,RSI
            mov RAX,R8
            jmp .L_406d2c
.L_406f1b:

            mov RCX,RBX
            jmp .L_406e74
.L_406f23:

            mov RDX,RCX
            xor R12D,R12D
            xor R14D,R14D
            jmp .L_406e17
.L_406f31:

            lea RDI,QWORD PTR [RIP+.L_406812]
            call _ZSt20__throw_length_errorPKc@PLT
.L_406f3d:

            nop
            nop
            nop
.L_406f40:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            movabs RCX,-3689348814741910323
            push RBP
            push RBX
            mov R12,RSI
            mov R13,RDI
            mov RBX,RSI
            sub RSP,24
.L_406f64:

            mov RDX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            sub RAX,RDX
            sub R12,RDX
            sar RAX,3
            imul RAX,RCX
            test RAX,RAX
            je .L_407210

            lea R14,QWORD PTR [RAX+RAX*1]
            cmp RAX,R14
            jbe .L_407260
.L_406f8f:

            mov R14,-16
.L_406f96:

            mov RDI,R14
.L_406f99:

            call _Znwm@PLT
.L_406f9e:

            mov RBP,RAX
.L_406fa1:

            add R12,RBP
            je .L_407055

            mov RDX,QWORD PTR [R15+24]
            mov RSI,QWORD PTR [R15+16]
            movabs RCX,-6148914691236517205
            movdqu XMM0,XMMWORD PTR [R15]
            mov QWORD PTR [R12+32],0
            mov RAX,RDX
            sub RAX,RSI
            mov QWORD PTR [RSP+8],RAX
            sar RAX,2
            imul RAX,RCX
            movups XMMWORD PTR [R12],XMM0
            pxor XMM0,XMM0
            test RAX,RAX
            movups XMMWORD PTR [R12+16],XMM0
            je .L_4072a0

            movabs RDX,1537228672809129301
            cmp RAX,RDX
            ja .L_4072c9

            mov RDI,QWORD PTR [RSP+8]
.L_40700d:

            call _Znwm@PLT
.L_407012:

            mov RDX,QWORD PTR [R15+24]
            mov RSI,QWORD PTR [R15+16]
            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+8]
            mov R15,RDX
            sub R15,RSI
.L_407028:

            add RAX,RCX
            cmp RSI,RDX
            mov QWORD PTR [R12+16],RCX
            mov QWORD PTR [R12+24],RCX
            mov QWORD PTR [R12+32],RAX
            je .L_40704d

            mov RDI,RCX
            mov RDX,R15
            call memmove@PLT

            mov RCX,RAX
.L_40704d:

            add RCX,R15
            mov QWORD PTR [R12+24],RCX
.L_407055:

            mov RCX,QWORD PTR [R13]
            mov RDI,QWORD PTR [R13+8]
            cmp RCX,RBX
            je .L_407280

            lea R15,QWORD PTR [RCX+40]
            mov RSI,RBX
            movabs RAX,922337203685477581
            mov RDX,RCX
            sub RSI,R15
            shr RSI,3
            imul RSI,RAX
            movabs RAX,2305843009213693951
            and RSI,RAX
            lea RAX,QWORD PTR [RSI+RSI*4+5]
            lea R10,QWORD PTR [RBP+RAX*8]
            mov RAX,RBP
.L_40709f:

            test RAX,RAX
            je .L_407240
.L_4070a8:

            mov R8D,DWORD PTR [RDX]
            add RAX,40
            add RDX,40
            mov DWORD PTR [RAX-40],R8D
            mov R8D,DWORD PTR [RDX-36]
            mov DWORD PTR [RAX-36],R8D
            mov R8D,DWORD PTR [RDX-32]
            mov DWORD PTR [RAX-32],R8D
            mov R8D,DWORD PTR [RDX-28]
            mov QWORD PTR [RAX-16],0
            mov QWORD PTR [RAX-8],0
            mov QWORD PTR [RAX-24],0
            mov DWORD PTR [RAX-28],R8D
            mov R8,QWORD PTR [RDX-24]
            mov QWORD PTR [RAX-24],R8
            mov R9,QWORD PTR [RDX-16]
            mov QWORD PTR [RDX-24],0
            mov R8,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-16],R9
            mov R9,QWORD PTR [RDX-8]
            mov QWORD PTR [RDX-16],R8
            mov R8,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-8],R9
            mov QWORD PTR [RDX-8],R8
            cmp R10,RAX
            jne .L_40709f
.L_40711c:

            lea RAX,QWORD PTR [RSI+RSI*4]
            cmp RBX,RDI
            lea RAX,QWORD PTR [RBP+RAX*8+80]
            je .L_407298
.L_40712e:

            lea RDX,QWORD PTR [RBX+40]
            mov RSI,RDI
            sub RSI,RDX
            mov RDX,RSI
            shr RDX,3
            lea R12,QWORD PTR [RAX+RDX*8+40]
.L_407144:

            test RAX,RAX
            je .L_407228
.L_40714d:

            mov EDX,DWORD PTR [RBX]
            add RAX,40
            add RBX,40
            mov DWORD PTR [RAX-40],EDX
            mov EDX,DWORD PTR [RBX-36]
            mov DWORD PTR [RAX-36],EDX
            mov EDX,DWORD PTR [RBX-32]
            mov DWORD PTR [RAX-32],EDX
            mov EDX,DWORD PTR [RBX-28]
            mov DWORD PTR [RAX-28],EDX
            mov RDX,QWORD PTR [RBX-24]
            mov QWORD PTR [RBX-24],0
            mov QWORD PTR [RAX-24],RDX
            mov RDX,QWORD PTR [RBX-16]
            mov QWORD PTR [RBX-16],0
            mov QWORD PTR [RAX-16],RDX
            mov RDX,QWORD PTR [RBX-8]
            mov QWORD PTR [RBX-8],0
            mov QWORD PTR [RAX-8],RDX
            cmp R12,RAX
            jne .L_407144
.L_4071a1:

            cmp RCX,RDI
            je .L_4071e6

            lea R15,QWORD PTR [RCX+40]
.L_4071aa:

            sub RDI,R15
            shr RDI,3
            lea RBX,QWORD PTR [RCX+RDI*8+40]
            jmp .L_4071d1
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4071c0:

            call _ZdlPv@PLT

            cmp RBX,R15
            mov RCX,R15
            je .L_4071e2
.L_4071cd:

            add R15,40
.L_4071d1:

            mov RDI,QWORD PTR [RCX+16]
            test RDI,RDI
            jne .L_4071c0

            cmp RBX,R15
            mov RCX,R15
            jne .L_4071cd
.L_4071e2:

            mov RDI,QWORD PTR [R13]
.L_4071e6:

            test RDI,RDI
            je .L_4071f0

            call _ZdlPv@PLT
.L_4071f0:

            mov QWORD PTR [R13],RBP
            add RBP,R14
            mov QWORD PTR [R13+8],R12
            mov QWORD PTR [R13+16],RBP
            add RSP,24
.L_407203:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_407210:

            mov R14D,1
.L_407216:

            lea R14,QWORD PTR [R14+R14*4]
            shl R14,3
            jmp .L_406f96
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407228:

            add RBX,40
            cmp R12,40
            je .L_4071a1

            mov EAX,40
            jmp .L_40714d
.L_407240:

            add RDX,40
            cmp R10,40
            je .L_40711c

            mov EAX,40
            jmp .L_4070a8
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407260:

            movabs RAX,461168601842738790
            cmp R14,RAX
            ja .L_406f8f

            test R14,R14
            jne .L_407216

            xor EBP,EBP
            jmp .L_406fa1
          .byte 0x90
.L_407280:

            lea RAX,QWORD PTR [RBP+40]
            cmp RBX,RDI
            mov R12,RAX
            jne .L_40712e

            jmp .L_4071e6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407298:

            mov R12,RAX
            jmp .L_4071aa
.L_4072a0:

            mov R15,QWORD PTR [RSP+8]
            xor ECX,ECX
            mov RAX,R15
            jmp .L_407028
.L_4072af:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            test RBP,RBP
            je .L_4072de

            mov RDI,RBP
            call _ZdlPv@PLT
.L_4072c4:

            call __cxa_rethrow@PLT
.L_4072c9:

            call _ZSt17__throw_bad_allocv@PLT
.L_4072ce:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_4072d9:

            call _Unwind_Resume@PLT
.L_4072de:

            mov RDI,QWORD PTR [R12+16]
            test RDI,RDI
            je .L_4072c4

            call _ZdlPv@PLT

            jmp .L_4072c4
.L_4072ef:

            nop
.L_4072f0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4072fa:

            mov RBX,QWORD PTR [RDI+8]
            cmp RBX,QWORD PTR [RDI+16]
            je .L_4073c0

            test RBX,RBX
            mov R12,RSI
            mov RBP,RDI
            je .L_4073a9

            mov R13,QWORD PTR [RSI+24]
            sub R13,QWORD PTR [RSI+16]
            movabs RDX,-6148914691236517205
            movdqu XMM0,XMMWORD PTR [RSI]
            xor ECX,ECX
            mov QWORD PTR [RBX+32],0
            movups XMMWORD PTR [RBX],XMM0
            mov RAX,R13
            pxor XMM0,XMM0
            sar RAX,2
            imul RAX,RDX
            movups XMMWORD PTR [RBX+16],XMM0
            test RAX,RAX
            je .L_40736c

            movabs RDX,1537228672809129301
            cmp RAX,RDX
            ja .L_4073d5

            mov RDI,R13
            call _Znwm@PLT

            mov RCX,RAX
.L_40736c:

            add R13,RCX
            mov QWORD PTR [RBX+16],RCX
            mov QWORD PTR [RBX+24],RCX
            mov QWORD PTR [RBX+32],R13
            mov RAX,QWORD PTR [R12+24]
            mov RSI,QWORD PTR [R12+16]
            mov R12,RAX
            sub R12,RSI
            cmp RAX,RSI
            je .L_40739e

            mov RDI,RCX
            mov RDX,R12
            call memmove@PLT

            mov RCX,RAX
.L_40739e:

            add RCX,R12
            mov QWORD PTR [RBX+24],RCX
            mov RBX,QWORD PTR [RBP+8]
.L_4073a9:

            add RBX,40
            mov QWORD PTR [RBP+8],RBX
            add RSP,8
.L_4073b5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4073c0:

            add RSP,8
            mov RDX,RSI
            mov RSI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_406f40
.L_4073d5:

            call _ZSt17__throw_bad_allocv@PLT
.L_4073da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4073e0:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            movabs RCX,7905747460161236407
            push RBP
            push RBX
            mov RBP,RSI
            mov R13,RDI
            mov RBX,RSI
            sub RSP,24
.L_407404:

            mov RDX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            sub RAX,RDX
            sub RBP,RDX
            sar RAX,3
            imul RAX,RCX
            test RAX,RAX
            je .L_4076b8

            lea RCX,QWORD PTR [RAX+RAX*1]
            cmp RAX,RCX
            mov QWORD PTR [RSP],RCX
            jbe .L_407890
.L_407433:

            mov QWORD PTR [RSP],-16
            mov RDI,QWORD PTR [RSP]
.L_40743f:

            call _Znwm@PLT
.L_407444:

            mov R12,RAX
.L_407447:

            add RBP,R12
            je .L_40758b

            mov RDX,QWORD PTR [R14+8]
            mov RSI,QWORD PTR [R14]
            xor ECX,ECX
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP+16],0
            mov R15,RDX
            sub R15,RSI
            mov RAX,R15
            mov R8,R15
            sar RAX,2
            test RAX,RAX
            je .L_4074b1

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_40790b

            mov RDI,R15
.L_40749c:

            call _Znwm@PLT
.L_4074a1:

            mov RDX,QWORD PTR [R14+8]
            mov RSI,QWORD PTR [R14]
            mov RCX,RAX
            mov R8,RDX
            sub R8,RSI
.L_4074b1:

            lea RAX,QWORD PTR [RCX+R15*1]
            cmp RSI,RDX
            mov QWORD PTR [RBP],RCX
            mov QWORD PTR [RBP+8],RCX
            mov QWORD PTR [RBP+16],RAX
            je .L_4074de

            mov RDX,R8
            mov RDI,RCX
            mov QWORD PTR [RSP+8],R8
            call memmove@PLT

            mov R8,QWORD PTR [RSP+8]
            mov RCX,RAX
.L_4074de:

            mov RDX,QWORD PTR [R14+32]
            mov RSI,QWORD PTR [R14+24]
            add RCX,R8
            mov QWORD PTR [RBP+8],RCX
            xor ECX,ECX
            mov QWORD PTR [RBP+24],0
            mov QWORD PTR [RBP+32],0
            mov QWORD PTR [RBP+40],0
            mov R15,RDX
            sub R15,RSI
            mov RAX,R15
            mov R8,R15
            sar RAX,2
            test RAX,RAX
            je .L_407548

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_4078d8

            mov RDI,R15
.L_407532:

            call _Znwm@PLT

            mov RDX,QWORD PTR [R14+32]
            mov RSI,QWORD PTR [R14+24]
            mov RCX,RAX
            mov R8,RDX
            sub R8,RSI
.L_407548:

            lea RAX,QWORD PTR [RCX+R15*1]
            cmp RDX,RSI
            mov QWORD PTR [RBP+24],RCX
            mov QWORD PTR [RBP+32],RCX
            mov QWORD PTR [RBP+40],RAX
            je .L_407575

            mov RDX,R8
            mov RDI,RCX
            mov QWORD PTR [RSP+8],R8
            call memmove@PLT

            mov R8,QWORD PTR [RSP+8]
            mov RCX,RAX
.L_407575:

            mov EAX,DWORD PTR [R14+48]
            add RCX,R8
            mov QWORD PTR [RBP+32],RCX
            mov DWORD PTR [RBP+48],EAX
            movzx EAX,BYTE PTR [R14+52]
            mov BYTE PTR [RBP+52],AL
.L_40758b:

            mov R15,QWORD PTR [R13]
            mov RDI,QWORD PTR [R13+8]
            cmp R15,RBX
            je .L_4078b8

            lea R14,QWORD PTR [R15+56]
            mov RSI,RBX
            movabs RAX,988218432520154551
            mov RDX,R15
            sub RSI,R14
            shr RSI,3
            imul RSI,RAX
            movabs RAX,2305843009213693951
            and RSI,RAX
            lea R8,QWORD PTR [RSI+1]
            lea RAX,QWORD PTR [R8*8]
            sub RAX,R8
            lea R10,QWORD PTR [R12+RAX*8]
            mov RAX,R12
            jmp .L_407695
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4075e8:

            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            add RAX,56
            mov QWORD PTR [RAX-56],0
            mov R8,QWORD PTR [RDX]
            add RDX,56
            mov QWORD PTR [RAX-56],R8
            mov QWORD PTR [RDX-56],0
            mov R9,QWORD PTR [RDX-48]
            mov R8,QWORD PTR [RAX-48]
            mov QWORD PTR [RAX-48],R9
            mov QWORD PTR [RDX-48],R8
            mov R9,QWORD PTR [RDX-40]
            mov R8,QWORD PTR [RAX-40]
            mov QWORD PTR [RAX-40],R9
            mov QWORD PTR [RDX-40],R8
            mov QWORD PTR [RAX-24],0
            mov QWORD PTR [RAX-16],0
            mov QWORD PTR [RAX-32],0
            mov R8,QWORD PTR [RDX-32]
            mov QWORD PTR [RAX-32],R8
            mov QWORD PTR [RDX-32],0
            mov R9,QWORD PTR [RDX-24]
            mov R8,QWORD PTR [RAX-24]
            mov QWORD PTR [RAX-24],R9
            mov QWORD PTR [RDX-24],R8
            mov R9,QWORD PTR [RDX-16]
            mov R8,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-16],R9
            mov QWORD PTR [RDX-16],R8
            mov R8D,DWORD PTR [RDX-8]
            mov DWORD PTR [RAX-8],R8D
            movzx R8D,BYTE PTR [RDX-4]
            mov BYTE PTR [RAX-4],R8B
            cmp R10,RAX
            je .L_4076f0
.L_407695:

            test RAX,RAX
            jne .L_4075e8

            add RDX,56
            cmp R10,56
            je .L_4076f0

            mov EAX,56
            jmp .L_4075e8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4076b8:

            mov QWORD PTR [RSP],1
.L_4076c0:

            mov RAX,QWORD PTR [RSP]
            lea R12,QWORD PTR [RAX*8]
            mov R15,R12
            sub R15,RAX
            lea RAX,QWORD PTR [R15*8]
            mov QWORD PTR [RSP],RAX
            mov RDI,RAX
            jmp .L_40743f
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4076f0:

            lea RAX,QWORD PTR [RSI*8]
            sub RAX,RSI
            cmp RBX,RDI
            lea RAX,QWORD PTR [R12+RAX*8+112]
            je .L_4078d0
.L_407709:

            lea RDX,QWORD PTR [RBX+56]
            mov RCX,RDI
            movabs RSI,988218432520154551
            sub RCX,RDX
            mov RDX,RCX
            shr RDX,3
            imul RDX,RSI
            movabs RSI,2305843009213693951
            and RDX,RSI
            add RDX,1
            lea RSI,QWORD PTR [RDX*8]
            sub RSI,RDX
            lea RBP,QWORD PTR [RAX+RSI*8]
            jmp .L_4077c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407750:

            mov RDX,QWORD PTR [RBX]
            add RAX,56
            mov QWORD PTR [RBX],0
            add RBX,56
            mov QWORD PTR [RAX-56],RDX
            mov RDX,QWORD PTR [RBX-48]
            mov QWORD PTR [RBX-48],0
            mov QWORD PTR [RAX-48],RDX
            mov RDX,QWORD PTR [RBX-40]
            mov QWORD PTR [RBX-40],0
            mov QWORD PTR [RAX-40],RDX
            mov RDX,QWORD PTR [RBX-32]
            mov QWORD PTR [RBX-32],0
            mov QWORD PTR [RAX-32],RDX
            mov RDX,QWORD PTR [RBX-24]
            mov QWORD PTR [RBX-24],0
            mov QWORD PTR [RAX-24],RDX
            mov RDX,QWORD PTR [RBX-16]
            mov QWORD PTR [RBX-16],0
            mov QWORD PTR [RAX-16],RDX
            mov EDX,DWORD PTR [RBX-8]
            mov DWORD PTR [RAX-8],EDX
            movzx EDX,BYTE PTR [RBX-4]
            mov BYTE PTR [RAX-4],DL
            cmp RBP,RAX
            je .L_4077e8
.L_4077c8:

            test RAX,RAX
            jne .L_407750

            add RBX,56
            cmp RBP,56
            je .L_4077e8

            mov EAX,56
            jmp .L_407750
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4077e8:

            cmp R15,RDI
            je .L_407863

            lea R14,QWORD PTR [R15+56]
.L_4077f1:

            mov RAX,RDI
            movabs RDI,988218432520154551
            sub RAX,R14
            shr RAX,3
            imul RAX,RDI
            movabs RDI,2305843009213693951
            and RAX,RDI
            add RAX,1
            lea RDX,QWORD PTR [RAX*8]
            sub RDX,RAX
            lea RBX,QWORD PTR [R15+RDX*8]
            jmp .L_407841
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407830:

            call _ZdlPv@PLT

            cmp RBX,R14
            mov R15,R14
            je .L_40785f
.L_40783d:

            add R14,56
.L_407841:

            mov RDI,QWORD PTR [R15+24]
            test RDI,RDI
            je .L_40784f

            call _ZdlPv@PLT
.L_40784f:

            mov RDI,QWORD PTR [R15]
            test RDI,RDI
            jne .L_407830

            cmp R14,RBX
            mov R15,R14
            jne .L_40783d
.L_40785f:

            mov RDI,QWORD PTR [R13]
.L_407863:

            test RDI,RDI
            je .L_40786d

            call _ZdlPv@PLT
.L_40786d:

            mov QWORD PTR [R13],R12
            add R12,QWORD PTR [RSP]
            mov QWORD PTR [R13+8],RBP
            mov QWORD PTR [R13+16],R12
            add RSP,24
.L_407881:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407890:

            movabs RAX,329406144173384850
            cmp RCX,RAX
            ja .L_407433

            test RCX,RCX
            jne .L_4076c0

            xor R12D,R12D
            jmp .L_407447
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4078b8:

            lea RAX,QWORD PTR [R12+56]
            cmp RBX,RDI
            mov RBP,RAX
            jne .L_407709

            jmp .L_407863
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4078d0:

            mov RBP,RAX
            jmp .L_4077f1
.L_4078d8:

            call _ZSt17__throw_bad_allocv@PLT
.L_4078dd:

            mov RDI,QWORD PTR [RBP]
            mov RBX,RAX
            test RDI,RDI
            je .L_4078ee

            call _ZdlPv@PLT
.L_4078ee:

            mov RAX,RBX
.L_4078f1:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            test R12,R12
            je .L_407922

            mov RDI,R12
            call _ZdlPv@PLT
.L_407906:

            call __cxa_rethrow@PLT
.L_40790b:

            call _ZSt17__throw_bad_allocv@PLT
.L_407910:

            jmp .L_4078f1
.L_407912:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_40791d:

            call _Unwind_Resume@PLT
.L_407922:

            mov RDI,RBP
            call .L_4067f0

            jmp .L_407906
.L_40792c:

            nop
            nop
            nop
            nop
.L_407930:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            movabs RCX,-3689348814741910323
            push RBP
            push RBX
            mov RBP,RSI
            mov R13,RDI
            mov RBX,RSI
            sub RSP,24
.L_407954:

            mov RDX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            sub RAX,RDX
            sub RBP,RDX
            sar RAX,3
            imul RAX,RCX
            test RAX,RAX
            je .L_407bf8

            lea R14,QWORD PTR [RAX+RAX*1]
            cmp RAX,R14
            jbe .L_407c50
.L_40797f:

            mov R14,-16
.L_407986:

            mov RDI,R14
.L_407989:

            call _Znwm@PLT
.L_40798e:

            mov R12,RAX
.L_407991:

            add RBP,R12
            je .L_407a4c

            mov RDX,QWORD PTR [R15+8]
            mov RSI,QWORD PTR [R15]
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP+16],0
            mov RAX,RDX
            sub RAX,RSI
            mov QWORD PTR [RSP+8],RAX
            sar RAX,2
            test RAX,RAX
            je .L_407ca0

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_407cc9

            mov RDI,QWORD PTR [RSP+8]
.L_4079e9:

            call _Znwm@PLT
.L_4079ee:

            mov RDX,QWORD PTR [R15+8]
            mov RSI,QWORD PTR [R15]
            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+8]
            mov R8,RDX
            sub R8,RSI
.L_407a03:

            add RAX,RCX
            cmp RSI,RDX
            mov QWORD PTR [RBP],RCX
            mov QWORD PTR [RBP+8],RCX
            mov QWORD PTR [RBP+16],RAX
            je .L_407a2f

            mov RDX,R8
            mov RDI,RCX
            mov QWORD PTR [RSP+8],R8
            call memmove@PLT

            mov R8,QWORD PTR [RSP+8]
            mov RCX,RAX
.L_407a2f:

            mov EAX,DWORD PTR [R15+24]
            add RCX,R8
            mov QWORD PTR [RBP+8],RCX
            mov DWORD PTR [RBP+24],EAX
            mov EAX,DWORD PTR [R15+28]
            mov DWORD PTR [RBP+28],EAX
            movzx EAX,BYTE PTR [R15+32]
            mov BYTE PTR [RBP+32],AL
.L_407a4c:

            mov RCX,QWORD PTR [R13]
            mov RDI,QWORD PTR [R13+8]
            cmp RCX,RBX
            je .L_407c70

            lea R15,QWORD PTR [RCX+40]
            mov RSI,RBX
            movabs RAX,922337203685477581
            mov RDX,RCX
            sub RSI,R15
            shr RSI,3
            imul RSI,RAX
            movabs RAX,2305843009213693951
            and RSI,RAX
            lea RAX,QWORD PTR [RSI+RSI*4+5]
            lea R9,QWORD PTR [R12+RAX*8]
            mov RAX,R12
.L_407a95:

            test RAX,RAX
            je .L_407c30
.L_407a9e:

            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            add RAX,40
            mov QWORD PTR [RAX-40],0
            mov R8,QWORD PTR [RDX]
            add RDX,40
            mov QWORD PTR [RAX-40],R8
            mov QWORD PTR [RDX-40],0
            mov R10,QWORD PTR [RDX-32]
            mov R8,QWORD PTR [RAX-32]
            mov QWORD PTR [RAX-32],R10
            mov QWORD PTR [RDX-32],R8
            mov R10,QWORD PTR [RDX-24]
            mov R8,QWORD PTR [RAX-24]
            mov QWORD PTR [RAX-24],R10
            mov QWORD PTR [RDX-24],R8
            mov R8D,DWORD PTR [RDX-16]
            mov DWORD PTR [RAX-16],R8D
            mov R8D,DWORD PTR [RDX-12]
            mov DWORD PTR [RAX-12],R8D
            movzx R8D,BYTE PTR [RDX-8]
            mov BYTE PTR [RAX-8],R8B
            cmp R9,RAX
            jne .L_407a95
.L_407b0b:

            lea RAX,QWORD PTR [RSI+RSI*4]
            cmp RBX,RDI
            lea RAX,QWORD PTR [R12+RAX*8+80]
            je .L_407c90
.L_407b1d:

            lea RDX,QWORD PTR [RBX+40]
            mov RSI,RDI
            sub RSI,RDX
            mov RDX,RSI
            shr RDX,3
            lea RBP,QWORD PTR [RAX+RDX*8+40]
.L_407b33:

            test RAX,RAX
            je .L_407c10
.L_407b3c:

            mov RDX,QWORD PTR [RBX]
            add RAX,40
            mov QWORD PTR [RBX],0
            add RBX,40
            mov QWORD PTR [RAX-40],RDX
            mov RDX,QWORD PTR [RBX-32]
            mov QWORD PTR [RBX-32],0
            mov QWORD PTR [RAX-32],RDX
            mov RDX,QWORD PTR [RBX-24]
            mov QWORD PTR [RBX-24],0
            mov QWORD PTR [RAX-24],RDX
            mov EDX,DWORD PTR [RBX-16]
            mov DWORD PTR [RAX-16],EDX
            mov EDX,DWORD PTR [RBX-12]
            mov DWORD PTR [RAX-12],EDX
            movzx EDX,BYTE PTR [RBX-8]
            mov BYTE PTR [RAX-8],DL
            cmp RBP,RAX
            jne .L_407b33
.L_407b8a:

            cmp RCX,RDI
            je .L_407bcd

            lea R15,QWORD PTR [RCX+40]
.L_407b93:

            sub RDI,R15
            shr RDI,3
            lea RBX,QWORD PTR [RCX+RDI*8+40]
            jmp .L_407bb9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ba8:

            call _ZdlPv@PLT

            cmp RBX,R15
            mov RCX,R15
            je .L_407bc9
.L_407bb5:

            add R15,40
.L_407bb9:

            mov RDI,QWORD PTR [RCX]
            test RDI,RDI
            jne .L_407ba8

            cmp R15,RBX
            mov RCX,R15
            jne .L_407bb5
.L_407bc9:

            mov RDI,QWORD PTR [R13]
.L_407bcd:

            test RDI,RDI
            je .L_407bd7

            call _ZdlPv@PLT
.L_407bd7:

            mov QWORD PTR [R13],R12
            add R12,R14
            mov QWORD PTR [R13+8],RBP
            mov QWORD PTR [R13+16],R12
            add RSP,24
.L_407bea:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407bf8:

            mov R14D,1
.L_407bfe:

            lea R14,QWORD PTR [R14+R14*4]
            shl R14,3
            jmp .L_407986
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407c10:

            add RBX,40
            cmp RBP,40
            je .L_407b8a

            mov EAX,40
            jmp .L_407b3c
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407c30:

            add RDX,40
            cmp R9,40
            je .L_407b0b

            mov EAX,40
            jmp .L_407a9e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407c50:

            movabs RAX,461168601842738790
            cmp R14,RAX
            ja .L_40797f

            test R14,R14
            jne .L_407bfe

            xor R12D,R12D
            jmp .L_407991
.L_407c70:

            lea RAX,QWORD PTR [R12+40]
            cmp RBX,RDI
            mov RBP,RAX
            jne .L_407b1d

            jmp .L_407bcd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407c90:

            mov RBP,RAX
            jmp .L_407b93
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ca0:

            mov R8,QWORD PTR [RSP+8]
            xor ECX,ECX
            mov RAX,R8
            jmp .L_407a03
.L_407caf:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            test R12,R12
            je .L_407cde

            mov RDI,R12
            call _ZdlPv@PLT
.L_407cc4:

            call __cxa_rethrow@PLT
.L_407cc9:

            call _ZSt17__throw_bad_allocv@PLT
.L_407cce:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_407cd9:

            call _Unwind_Resume@PLT
.L_407cde:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_407cc4

            call _ZdlPv@PLT

            jmp .L_407cc4
.L_407cee:
          .byte 0x66
          .byte 0x90
.L_407cf0:
          .string "basic_string::_M_construct null not valid"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407d20:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,56
.L_407d3a:

            mov RCX,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            sub R15,RCX
            sub RAX,RCX
            sar RAX,5
            test RAX,RAX
            je .L_407e80

            lea R13,QWORD PTR [RAX+RAX*1]
            cmp RAX,R13
            jbe .L_408000
.L_407d71:

            mov R13,-32
.L_407d78:

            mov RDI,R13
            mov QWORD PTR [RSP+8],RDX
.L_407d80:

            call _Znwm@PLT
.L_407d85:

            mov RDX,QWORD PTR [RSP+8]
            mov R14,RAX
.L_407d8d:

            add R15,R14
            mov QWORD PTR [RSP+8],R15
            je .L_407dfc

            lea RSI,QWORD PTR [R15+16]
            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [R15],RSI
            mov R15,QWORD PTR [RDX+8]
            mov QWORD PTR [RSP+16],RSI
            mov RSI,RAX
            mov QWORD PTR [RSP+24],RAX
            add RSI,R15
            je .L_407dc0

            test RAX,RAX
            je .L_40805f
.L_407dc0:

            cmp R15,15
            mov QWORD PTR [RSP+32],R15
            ja .L_407fb0

            cmp R15,1
            jne .L_408030

            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+8]
            movzx EAX,BYTE PTR [RAX]
            mov BYTE PTR [RDI+16],AL
.L_407de9:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RAX+8],R15
            mov RAX,QWORD PTR [RSP+16]
            mov BYTE PTR [RAX+R15*1],0
.L_407dfc:

            mov RDX,QWORD PTR [RBP]
            cmp RDX,R12
            je .L_408028

            lea RCX,QWORD PTR [RDX+32]
            mov RSI,R12
            lea RAX,QWORD PTR [RDX+16]
            sub RSI,RCX
            mov R15,RSI
            lea RSI,QWORD PTR [RDX+RSI*1+48]
            mov RDX,R14
            shr R15,5
            jmp .L_407e5e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407e30:

            mov QWORD PTR [RDX],RCX
            mov RCX,QWORD PTR [RAX]
            mov QWORD PTR [RDX+16],RCX
.L_407e3a:

            mov RCX,QWORD PTR [RAX-8]
            mov QWORD PTR [RDX+8],RCX
            mov QWORD PTR [RAX-16],RAX
            mov QWORD PTR [RAX-8],0
            mov BYTE PTR [RAX],0
.L_407e51:

            add RAX,32
            add RDX,32
            cmp RSI,RAX
            je .L_407e90
.L_407e5e:

            test RDX,RDX
            je .L_407e51

            lea RCX,QWORD PTR [RDX+16]
            mov QWORD PTR [RDX],RCX
            mov RCX,QWORD PTR [RAX-16]
            cmp RAX,RCX
            jne .L_407e30

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RDX+16],XMM0
            jmp .L_407e3a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407e80:

            mov R13D,1
.L_407e86:

            shl R13,5
            jmp .L_407d78
          .byte 0x90
.L_407e90:

            add R15,1
            shl R15,5
            add R15,R14
.L_407e9b:

            mov RDX,QWORD PTR [RBP+8]
            add R15,32
            cmp RDX,R12
            je .L_407f2f

            lea RCX,QWORD PTR [R12+32]
            lea RAX,QWORD PTR [R12+16]
            sub RDX,RCX
            mov RDI,RDX
            lea RSI,QWORD PTR [RDX+R12*1+48]
            mov RDX,R15
            shr RDI,5
            jmp .L_407efe
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407ed0:

            mov QWORD PTR [RDX],RCX
            mov RCX,QWORD PTR [RAX]
            mov QWORD PTR [RDX+16],RCX
.L_407eda:

            mov RCX,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-16],RAX
            mov QWORD PTR [RAX-8],0
            mov BYTE PTR [RAX],0
            mov QWORD PTR [RDX+8],RCX
.L_407ef1:

            add RAX,32
            add RDX,32
            cmp RSI,RAX
            je .L_407f20
.L_407efe:

            test RDX,RDX
            je .L_407ef1

            lea RCX,QWORD PTR [RDX+16]
            mov QWORD PTR [RDX],RCX
            mov RCX,QWORD PTR [RAX-16]
            cmp RCX,RAX
            jne .L_407ed0

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RDX+16],XMM0
            jmp .L_407eda
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407f20:

            lea RAX,QWORD PTR [RDI+1]
            mov RBX,QWORD PTR [RBP+8]
            shl RAX,5
            add R15,RAX
.L_407f2f:

            mov R12,QWORD PTR [RBP]
            cmp R12,RBX
            je .L_407f60

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407f40:

            mov RDI,QWORD PTR [R12]
            lea RAX,QWORD PTR [R12+16]
            cmp RDI,RAX
            je .L_407fa0

            add R12,32
            call _ZdlPv@PLT

            cmp RBX,R12
            jne .L_407f40
.L_407f5c:

            mov RBX,QWORD PTR [RBP]
.L_407f60:

            test RBX,RBX
            je .L_407f6d

            mov RDI,RBX
            call _ZdlPv@PLT
.L_407f6d:

            add R13,R14
            mov QWORD PTR [RBP],R14
            mov QWORD PTR [RBP+8],R15
            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP+16],R13
            jne .L_408040

            add RSP,56
.L_407f94:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_407fa0:

            add R12,32
            cmp R12,RBX
            jne .L_407f40

            jmp .L_407f5c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407fb0:

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+32]
            xor EDX,EDX
.L_407fbc:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_407fc1:

            mov RSI,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSI],RAX
            mov QWORD PTR [RSI+16],RDX
.L_407fd2:

            mov RSI,QWORD PTR [RSP+24]
            mov RDX,R15
            mov RDI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RSP+8]
            mov R15,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_407de9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408000:

            movabs RAX,576460752303423487
            cmp R13,RAX
            ja .L_407d71

            test R13,R13
            jne .L_407e86

            xor R14D,R14D
            jmp .L_407d8d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408028:

            mov R15,R14
            jmp .L_407e9b
.L_408030:

            test R15,R15
            je .L_407de9

            mov RAX,QWORD PTR [RSP+16]
            jmp .L_407fd2
.L_408040:

            call __stack_chk_fail@PLT
.L_408045:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            test R14,R14
            je .L_40807b

            mov RDI,R14
            call _ZdlPv@PLT
.L_40805a:

            call __cxa_rethrow@PLT
.L_40805f:

            lea RDI,QWORD PTR [RIP+.L_407cf0]
.L_408066:

            call _ZSt19__throw_logic_errorPKc@PLT
.L_40806b:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_408076:

            call _Unwind_Resume@PLT
.L_40807b:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RAX]
            cmp RDI,QWORD PTR [RSP+16]
            je .L_40805a

            call _ZdlPv@PLT

            jmp .L_40805a
.L_408091:
          .string "vector::_M_realloc_insert"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4080b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
            mov RBX,QWORD PTR [RDI+8]
            cmp RBX,QWORD PTR [RDI+16]
            je .L_4080f0

            test RBX,RBX
            je .L_4080d6

            movzx EAX,BYTE PTR [RSI]
            mov BYTE PTR [RBX],AL
            mov RBX,QWORD PTR [RDI+8]
.L_4080d6:

            add RBX,1
            mov QWORD PTR [RDI+8],RBX
            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4080f0:

            mov R13,RBX
            sub R13,QWORD PTR [RDI]
            mov R12,RSI
            mov RBP,RDI
            cmp R13,-1
            je .L_4081f1

            test R13,R13
            mov R14D,1
            je .L_408124

            lea R14,QWORD PTR [R13+R13*1]
            mov RAX,-1
            cmp R13,R14
            cmova R14,RAX
.L_408124:

            mov RDI,R14
            call _Znwm@PLT

            mov R9,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBP+8]
            mov R8,RBX
            add R14,RAX
            mov R15,RAX
            sub R8,R9
            sub RCX,RBX
            add R13,RAX
            je .L_408151

            movzx EAX,BYTE PTR [R12]
            mov BYTE PTR [R13],AL
.L_408151:

            test R8,R8
            jne .L_4081c0
.L_408156:

            test RCX,RCX
            lea R8,QWORD PTR [R15+R8*1+1]
            jne .L_408190
.L_408160:

            test R9,R9
            lea RBX,QWORD PTR [R8+RCX*1]
            je .L_408171

            mov RDI,R9
            call _ZdlPv@PLT
.L_408171:

            mov QWORD PTR [RBP],R15
            mov QWORD PTR [RBP+8],RBX
            mov QWORD PTR [RBP+16],R14
            add RSP,40
.L_408181:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408190:

            mov RDX,RCX
            mov RDI,R8
            mov RSI,RBX
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+8],RCX
            call memcpy@PLT

            mov R9,QWORD PTR [RSP+16]
            mov RCX,QWORD PTR [RSP+8]
            mov R8,RAX
            jmp .L_408160
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4081c0:

            mov RDX,R8
            mov RSI,R9
            mov RDI,R15
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],R9
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+24]
            mov R8,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RSP+8]
            jmp .L_408156
.L_4081f1:

            lea RDI,QWORD PTR [RIP+.L_408091]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4081fd:

            nop
            nop
            nop
.L_408200:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_40820e:

            mov RBX,QWORD PTR [RDI+8]
            cmp RBX,QWORD PTR [RDI+16]
            je .L_408280

            test RBX,RBX
            je .L_408256

            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX],RAX
            mov RDX,QWORD PTR [RSI]
            lea RAX,QWORD PTR [RSI+16]
            cmp RDX,RAX
            je .L_408270

            mov QWORD PTR [RBX],RDX
            mov RDX,QWORD PTR [RSI+16]
            mov QWORD PTR [RBX+16],RDX
.L_40823b:

            mov RDX,QWORD PTR [RSI+8]
            mov QWORD PTR [RBX+8],RDX
            mov BYTE PTR [RSI+16],0
            mov RBX,QWORD PTR [RDI+8]
            mov QWORD PTR [RSI],RAX
            mov QWORD PTR [RSI+8],0
.L_408256:

            add RBX,32
            mov QWORD PTR [RDI+8],RBX
            add RSP,8
.L_408262:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408270:

            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RBX+16],XMM0
            jmp .L_40823b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408280:

            mov R15,RBX
            sub R15,QWORD PTR [RDI]
            mov R13,RSI
            mov R14,RDI
            mov RAX,R15
            sar RAX,5
            test RAX,RAX
            je .L_408480

            lea R12,QWORD PTR [RAX+RAX*1]
            cmp RAX,R12
            jbe .L_4084a0
.L_4082a9:

            mov R12,-32
.L_4082b0:

            mov RDI,R12
            call _Znwm@PLT

            mov RBP,RAX
.L_4082bb:

            mov RAX,R15
            add RAX,RBP
            je .L_4082ff

            lea RDX,QWORD PTR [RAX+16]
            mov RCX,QWORD PTR [R13]
            mov QWORD PTR [RAX],RDX
            lea RDX,QWORD PTR [R13+16]
            cmp RCX,RDX
            je .L_408490

            mov QWORD PTR [RAX],RCX
            mov RCX,QWORD PTR [R13+16]
            mov QWORD PTR [RAX+16],RCX
.L_4082e6:

            mov RCX,QWORD PTR [R13+8]
            mov QWORD PTR [R13],RDX
            mov QWORD PTR [R13+8],0
            mov BYTE PTR [R13+16],0
            mov QWORD PTR [RAX+8],RCX
.L_4082ff:

            mov RAX,QWORD PTR [R14]
            cmp RBX,RAX
            je .L_4084d0

            lea RCX,QWORD PTR [RAX+32]
            mov RSI,RBX
            lea RDX,QWORD PTR [RAX+16]
            sub RSI,RCX
            mov R13,RSI
            lea RSI,QWORD PTR [RAX+RSI*1+48]
            mov RAX,RBP
            shr R13,5
            jmp .L_40835e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408330:

            mov QWORD PTR [RAX],RCX
            mov RCX,QWORD PTR [RDX]
            mov QWORD PTR [RAX+16],RCX
.L_40833a:

            mov RCX,QWORD PTR [RDX-8]
            mov QWORD PTR [RAX+8],RCX
            mov QWORD PTR [RDX-16],RDX
            mov QWORD PTR [RDX-8],0
            mov BYTE PTR [RDX],0
.L_408351:

            add RDX,32
            add RAX,32
            cmp RSI,RDX
            je .L_408380
.L_40835e:

            test RAX,RAX
            je .L_408351

            lea RCX,QWORD PTR [RAX+16]
            mov QWORD PTR [RAX],RCX
            mov RCX,QWORD PTR [RDX-16]
            cmp RDX,RCX
            jne .L_408330

            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RAX+16],XMM0
            jmp .L_40833a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408380:

            add R13,1
            shl R13,5
            add R13,RBP
.L_40838b:

            mov R15,QWORD PTR [R14+8]
            add R13,32
            cmp RBX,R15
            je .L_408417

            lea RAX,QWORD PTR [RBX+32]
            lea RDX,QWORD PTR [RBX+16]
            mov RCX,R13
            sub R15,RAX
            mov RDI,R15
            lea RSI,QWORD PTR [RBX+R15*1+48]
            shr RDI,5
            jmp .L_4083e6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4083b8:

            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [RCX+16],RAX
.L_4083c2:

            mov RAX,QWORD PTR [RDX-8]
            mov QWORD PTR [RCX+8],RAX
            mov QWORD PTR [RDX-16],RDX
            mov QWORD PTR [RDX-8],0
            mov BYTE PTR [RDX],0
.L_4083d9:

            add RDX,32
            add RCX,32
            cmp RDX,RSI
            je .L_408408
.L_4083e6:

            test RCX,RCX
            je .L_4083d9

            lea RAX,QWORD PTR [RCX+16]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [RDX-16]
            cmp RAX,RDX
            jne .L_4083b8

            movdqu XMM0,XMMWORD PTR [RDX]
            movups XMMWORD PTR [RCX+16],XMM0
            jmp .L_4083c2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408408:

            lea RAX,QWORD PTR [RDI+1]
            mov R15,QWORD PTR [R14+8]
            shl RAX,5
            add R13,RAX
.L_408417:

            mov RBX,QWORD PTR [R14]
            cmp RBX,R15
            je .L_40843d

            nop
.L_408420:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_408470

            add RBX,32
            call _ZdlPv@PLT

            cmp RBX,R15
            jne .L_408420
.L_40843a:

            mov R15,QWORD PTR [R14]
.L_40843d:

            test R15,R15
            je .L_40844a

            mov RDI,R15
            call _ZdlPv@PLT
.L_40844a:

            mov QWORD PTR [R14],RBP
            add RBP,R12
            mov QWORD PTR [R14+8],R13
            mov QWORD PTR [R14+16],RBP
            add RSP,8
.L_40845c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408470:

            add RBX,32
            cmp RBX,R15
            jne .L_408420

            jmp .L_40843a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408480:

            mov R12D,32
            jmp .L_4082b0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408490:

            movdqu XMM0,XMMWORD PTR [R13+16]
            movups XMMWORD PTR [RAX+16],XMM0
            jmp .L_4082e6
          .byte 0x90
.L_4084a0:

            movabs RDX,576460752303423487
            cmp R12,RDX
            ja .L_4082a9

            xor EBP,EBP
            test R12,R12
            je .L_4082bb

            shl RAX,6
            mov R12,RAX
            jmp .L_4082b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4084d0:

            mov R13,RBP
            jmp .L_40838b
.L_4084d8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4084e0:

            mov RAX,QWORD PTR [RDI]
            test RAX,RAX
            je .L_408520

            push RBX
            mov RBX,RDI
            mov RDI,RAX
            call _ZdlPv@PLT

            mov QWORD PTR [RBX+16],0
            mov DWORD PTR [RBX+24],0
            mov QWORD PTR [RBX],0
            mov DWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+32],0
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408520:

            ret 
.L_408522:
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408528:
          .string "Unexpected end of input: pos=%d need=%d len=%d\n"
.L_408558:
          .string "SOS marker: Could not find component with id %d\n"
          .zero 7
.L_408590:
          .string "SOS marker: Could not find DC Huffman table with index %d\n"
          .zero 5
.L_4085d0:
          .string "SOS marker: Could not find AC Huffman table with index %d\n"
          .zero 5
.L_408610:
          .string "Invalid marker length: declared=%d actual=%d\n"
          .zero 2
.L_408640:
          .string "Overlapping scans: component=%d k=%d prev_mask=%d cur_mask=%d\n"
          .zero 1
.L_408680:
          .string "Invalid scan order, a more refined scan was already done: component=%d k=%d prev_mask=%d cur_mask=%d\n"
          .zero 2
.L_4086e8:
          .string "Scan parameter Al=%d is not supported in guetzli.\n"
          .zero 5
.L_408720:
          .string "Marker byte (0xff) expected, found: %d pos=%d len=%d\n"
          .zero 2
.L_408758:
          .string "Did not find expected restart marker %d actual=%d\n"
          .zero 5
.L_408790:
          .string "Invalid Huffman symbol %d for DC coefficient.\n"
          .zero 1
.L_4087c0:
          .string "Invalid Huffman symbol %d for AC coefficient %d\n"
          .zero 7
.L_4087f8:
          .string "Out-of-band coefficient %d band was %d-%d\n"
          .zero 5
.L_408828:
          .string "Out of range AC coefficient value: s=%d Al=%d k=%d\n"
          .zero 4
.L_408860:
          .string "End-of-block run crossing DC coeff.\n"
          .zero 3
.L_408888:
          .string "Extra zero run before end-of-block.\n"
          .zero 3
.L_4088b0:
          .string "Unexpected end of file during scan. pos=%d len=%d\n"
          .zero 5
.L_4088e8:
          .string "Did not find expected SOI marker, actual=%d\n"
          .zero 3
.L_408918:
          .string "Non-integral subsampling ratios.\n"
          .zero 6
.L_408940:
          .string "DHT marker: no Huffman table found\n"
          .zero 4
.L_408968:
          .string "Duplicate Huffman code value %d\n"
          .zero 7
.L_408990:
          .string "Invalid Huffman code lengths.\n"
          .zero 1
.L_4089b0:
          .string "Failed to build Huffman table.\n"
.L_4089d0:
          .string "DQT marker: no quantization table found\n"
          .zero 7
.L_408a00:
          .string "Unsupported marker: %d pos=%d len=%d\n"
          .zero 2
.L_408a28:
          .string "Quantization table with index %zd not found\n"
          .zero 3
.L_408a58:
          .string "Need at least one Huffman code table.\n"
.L_408a7f:
          .string "comps_in_scan"
.L_408a8d:
          .string "Invalid %s: %d\n"
.L_408a9d:
          .string "Duplicate ID %d in SOS.\n"
.L_408ab6:
          .string "dc_tbl_idx"
.L_408ac1:
          .string "ac_tbl_idx"
.L_408acc:
          .string "scan_info.Ss"
.L_408ad9:
          .string "scan_info.Se"
.L_408ae6:
          .string "Unexpected end of scan.\n"
.L_408aff:
          .string "End-of-block run too long.\n"
.L_408b1b:
          .string "Invalid DC coefficient %d\n"
.L_408b36:
          .string "Duplicate SOF marker.\n"
.L_408b4d:
          .string "precision"
.L_408b57:
          .string "height"
.L_408b5e:
          .string "width"
.L_408b64:
          .string "num_components"
.L_408b73:
          .string "Duplicate ID %d in SOF.\n"
.L_408b8c:
          .string "h_samp_factor"
.L_408b9a:
          .string "v_samp_factor"
.L_408ba8:
          .string "Image too large.\n"
.L_408bba:
          .string "huffman_index"
.L_408bc8:
          .string "total_count"
.L_408bd4:
          .string "value"
.L_408bda:
          .string "quant_table_index"
.L_408bec:
          .string "quant_val"
.L_408bf6:
          .string "Duplicate DRI marker.\n"
.L_408c0d:
          .string "marker_len"
.L_408c18:
          .string "Missing SOF marker.\n"
.L_408c2d:
          .string "Too many Huffman tables.\n"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408c60:
          .long .L_404d3c-.L_408c60
          .long .L_404d3c-.L_408c60
          .long .L_404d3c-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_404712-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_404698-.L_408c60
          .long .L_404698-.L_408c60
          .long .L_404698-.L_408c60
          .long .L_404698-.L_408c60
          .long .L_404698-.L_408c60
          .long .L_404698-.L_408c60
          .long .L_404698-.L_408c60
          .long .L_404698-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_404698-.L_408c60
          .long .L_4054a2-.L_408c60
          .long .L_405292-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405200-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405080-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_405500-.L_408c60
          .long .L_404505-.L_408c60
          .zero 4
.L_408d60:

            add DWORD PTR [RCX],EAX
            add DWORD PTR [RAX],EAX
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RCX],AL
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RCX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add DWORD PTR [RCX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_408d9c:

            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
.L_408da0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            or BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            adc BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            or DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add AL,BYTE PTR [RAX]
            add BYTE PTR [RAX],AL
            add EAX,DWORD PTR [RAX]
            add BYTE PTR [RAX],AL
            or AL,BYTE PTR [RAX]
            add BYTE PTR [RAX],AL
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408ee0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,184
.L_408ef1:

            mov ECX,DWORD PTR [RDI+12]
            movdqu XMM1,XMMWORD PTR [RDI+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+168],RAX
            xor EAX,EAX
            movdqu XMM0,XMMWORD PTR [RDI+16]
            mov EAX,DWORD PTR [RDI+8]
            mov QWORD PTR [RSP+16],RDX
            movaps XMMWORD PTR [RSP+112],XMM0
            paddd XMM0,XMM1
            mov EDX,DWORD PTR [RDI+4]
            mov QWORD PTR [RSP+32],RSI
            movaps XMMWORD PTR [RSP+128],XMM1
            movdqu XMM1,XMMWORD PTR [RDI+48]
            mov DWORD PTR [RSP+100],EDX
            mov DWORD PTR [RSP+104],EAX
            add EDX,EAX
            paddd XMM0,XMM1
            movaps XMMWORD PTR [RSP+144],XMM1
            movdqa XMM1,XMM0
            add EDX,ECX
            psrldq XMM1,8
            paddd XMM0,XMM1
            movdqa XMM1,XMM0
            mov DWORD PTR [RSP+96],0
            mov DWORD PTR [RSP+108],ECX
            psrldq XMM1,4
            paddd XMM0,XMM1
            movd EAX,XMM0
            add EAX,EDX
            mov EDX,DWORD PTR [RDI+64]
            add EAX,EDX
            mov DWORD PTR [RSP+160],EDX
            cmp EAX,1
            je .L_409346

            mov RAX,QWORD PTR [RSP+16]
            lea R10,QWORD PTR [RSP+96]
            xor R12D,R12D
            mov DWORD PTR [RSP+4],0
            mov EBX,1
            mov R14D,8
            mov R15,R10
            mov QWORD PTR [RSP+8],R10
            lea R11,QWORD PTR [RAX+4]
            mov R10,RAX
            nop
.L_408fc0:

            mov EBP,DWORD PTR [R15+4]
            test EBP,EBP
            jle .L_409036

            mov ECX,R14D
            mov R9D,1
            movsxd RAX,DWORD PTR [RSP+4]
            sub ECX,EBX
            mov RDI,QWORD PTR [RSP+32]
            mov ESI,EBX
            shl R9D,CL
            lea R13D,DWORD PTR [R9-1]
            lea R8,QWORD PTR [RDI+RAX*4]
            mov EDI,EBP
            mov R9,R13
            nop
.L_408ff0:

            movsxd RDX,R12D
            movzx ECX,WORD PTR [R8]
            lea RAX,QWORD PTR [R10+RDX*4]
            add RDX,R13
            lea RDX,QWORD PTR [R11+RDX*4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_409008:

            mov BYTE PTR [RAX],SIL
            mov WORD PTR [RAX+2],CX
            add RAX,4
            cmp RAX,RDX
            jne .L_409008

            sub EDI,1
            add R8,4
            lea R12D,DWORD PTR [R12+R9*1+1]
            test EDI,EDI
            mov DWORD PTR [R15+4],EDI
            jne .L_408ff0

            mov EAX,DWORD PTR [RSP+4]
            add EAX,EBP
            mov DWORD PTR [RSP+4],EAX
.L_409036:

            add EBX,1
            add R15,4
            cmp EBX,9
            jne .L_408fc0

            mov RAX,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+8]
            mov R11D,1
            mov DWORD PTR [RSP+8],R12D
            mov DWORD PTR [RSP+28],256
            xor EBP,EBP
            xor R13D,R13D
            lea R14,QWORD PTR [RAX+1024]
            mov EAX,8
            mov R12D,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409080:

            mov R8D,DWORD PTR [R10+36]
            test R8D,R8D
            mov DWORD PTR [RSP+40],R8D
            jle .L_4091ac

            mov ECX,R11D
            mov EAX,1
            mov RSI,QWORD PTR [RSP+32]
            shl EAX,CL
            mov EDI,R11D
            mov DWORD PTR [RSP+24],EAX
            movsxd RAX,DWORD PTR [RSP+4]
            lea R9,QWORD PTR [RSI+RAX*4]
            lea EAX,DWORD PTR [RBX-3]
            mov ESI,1
            mov ECX,EAX
            mov DWORD PTR [RSP+76],EAX
            lea EAX,DWORD PTR [RBX-4]
            shl ESI,CL
            mov DWORD PTR [RSP+80],EAX
            mov ECX,EAX
            lea EAX,DWORD PTR [RBX-5]
            mov DWORD PTR [RSP+88],ESI
            mov ESI,1
            shl ESI,CL
            mov DWORD PTR [RSP+64],EAX
            mov ECX,EAX
            lea EAX,DWORD PTR [RBX-6]
            mov DWORD PTR [RSP+84],ESI
            mov ESI,1
            shl ESI,CL
            mov DWORD PTR [RSP+60],EAX
            mov ECX,EAX
            lea EAX,DWORD PTR [RBX-7]
            mov DWORD PTR [RSP+72],ESI
            mov ESI,1
            shl ESI,CL
            mov DWORD PTR [RSP+44],EAX
            mov ECX,EAX
            lea EAX,DWORD PTR [RBX-8]
            mov DWORD PTR [RSP+68],ESI
            mov ESI,1
            shl ESI,CL
            mov DWORD PTR [RSP+48],EAX
            mov ECX,EAX
            lea EAX,DWORD PTR [RBX+5]
            mov DWORD PTR [RSP+56],ESI
            mov ESI,1
            mov BYTE PTR [RSP+94],AL
            lea EAX,DWORD PTR [RBX+4]
            shl ESI,CL
            mov DWORD PTR [RSP+52],ESI
            mov BYTE PTR [RSP+95],AL
            lea EAX,DWORD PTR [RBX+3]
            mov BYTE PTR [RSP+93],AL
            nop
            nop
.L_409140:

            cmp R13D,EBP
            jge .L_4091f0
.L_409149:

            mov ECX,R12D
            mov EAX,1
            movzx EDX,WORD PTR [R9]
            sub ECX,R11D
            shl EAX,CL
            test EAX,EAX
            lea ESI,DWORD PTR [RAX-1]
            je .L_40918d

            movsxd R15,R13D
            mov ECX,ESI
            add RCX,R15
            lea RAX,QWORD PTR [R14+R15*4]
            lea RCX,QWORD PTR [R14+RCX*4+4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_409178:

            mov BYTE PTR [RAX],DIL
            mov WORD PTR [RAX+2],DX
            add RAX,4
            cmp RAX,RCX
            jne .L_409178

            lea R13D,DWORD PTR [R13+RSI*1+1]
.L_40918d:

            sub R8D,1
            add R9,4
            test R8D,R8D
            mov DWORD PTR [R10+36],R8D
            jne .L_409140

            mov EDI,DWORD PTR [RSP+4]
            mov EAX,DWORD PTR [RSP+40]
            add EAX,EDI
            mov DWORD PTR [RSP+4],EAX
.L_4091ac:

            add EBX,1
            add R10,4
            add R11D,1
            cmp EBX,17
            jne .L_409080
.L_4091c0:

            mov RBX,QWORD PTR [RSP+168]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP+28]
            jne .L_409389

            add RSP,184
.L_4091e2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4091f0:

            cmp EBX,16
            lea R14,QWORD PTR [R14+RBP*4]
            je .L_4092e0

            mov EAX,DWORD PTR [RSP+24]
            sub EAX,DWORD PTR [R10+36]
            test EAX,EAX
            jle .L_4092f2

            add EAX,EAX
            cmp EBX,15
            je .L_4092e0

            sub EAX,DWORD PTR [R10+40]
            test EAX,EAX
            jle .L_409300

            add EAX,EAX
            cmp EBX,14
            je .L_4092e0

            sub EAX,DWORD PTR [R10+44]
            test EAX,EAX
            jle .L_40930f

            add EAX,EAX
            cmp EBX,13
            je .L_4092e0

            sub EAX,DWORD PTR [R10+48]
            test EAX,EAX
            jle .L_40931e

            add EAX,EAX
            cmp EBX,12
            je .L_4092e0

            sub EAX,DWORD PTR [R10+52]
            test EAX,EAX
            jle .L_409332

            add EAX,EAX
            cmp EBX,11
            je .L_4092e0

            sub EAX,DWORD PTR [R10+56]
            test EAX,EAX
            jle .L_409375

            add EAX,EAX
            cmp EBX,10
            je .L_4092e0

            sub EAX,DWORD PTR [RSP+156]
            mov EBP,128
            test EAX,EAX
            setg DL
            movzx R12D,DL
            add R12D,7
            test EAX,EAX
            mov EAX,256
            cmovg RBP,RAX
            lea EAX,DWORD PTR [RDX+15]
.L_4092aa:

            movsxd RDX,DWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+16]
            xor R13D,R13D
            add DWORD PTR [RSP+28],EBP
            mov RSI,RDX
            lea RDX,QWORD PTR [RCX+RDX*4]
            mov BYTE PTR [RDX],AL
            mov RAX,R14
            sub RAX,RCX
            sar RAX,2
            sub EAX,ESI
            add ESI,1
            mov WORD PTR [RDX+2],AX
            mov DWORD PTR [RSP+8],ESI
            jmp .L_409149
.L_4092e0:

            mov R12D,8
            mov EBP,256
            mov EAX,16
            jmp .L_4092aa
.L_4092f2:

            mov EAX,EBX
            mov R12D,DWORD PTR [RSP+48]
            movsxd RBP,DWORD PTR [RSP+52]
            jmp .L_4092aa
.L_409300:

            lea EAX,DWORD PTR [RBX+1]
            mov R12D,DWORD PTR [RSP+44]
            movsxd RBP,DWORD PTR [RSP+56]
            jmp .L_4092aa
.L_40930f:

            lea EAX,DWORD PTR [RBX+2]
            mov R12D,DWORD PTR [RSP+60]
            movsxd RBP,DWORD PTR [RSP+68]
            jmp .L_4092aa
.L_40931e:

            movzx EAX,BYTE PTR [RSP+93]
            mov R12D,DWORD PTR [RSP+64]
            movsxd RBP,DWORD PTR [RSP+72]
            jmp .L_4092aa
.L_409332:

            movzx EAX,BYTE PTR [RSP+95]
            mov R12D,DWORD PTR [RSP+80]
            movsxd RBP,DWORD PTR [RSP+84]
            jmp .L_4092aa
.L_409346:

            mov RAX,QWORD PTR [RSP+16]
            movzx ECX,WORD PTR [RSI]
            lea RDX,QWORD PTR [RAX+1024]
            nop
            nop
            nop
.L_409358:

            mov BYTE PTR [RAX],0
            mov WORD PTR [RAX+2],CX
            add RAX,4
            cmp RDX,RAX
            jne .L_409358

            mov DWORD PTR [RSP+28],256
            jmp .L_4091c0
.L_409375:

            movzx EAX,BYTE PTR [RSP+94]
            mov R12D,DWORD PTR [RSP+76]
            movsxd RBP,DWORD PTR [RSP+88]
            jmp .L_4092aa
.L_409389:

            call __stack_chk_fail@PLT
.L_40938e:

            nop
            nop
.L_409390:

            push RBX
            movabs RAX,9223372036854775807
            sub RAX,QWORD PTR [RDI+8]
            cmp RDX,RAX
            ja .L_4093b0

            mov RBX,RDX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT

            mov EAX,EBX
            pop RBX
            ret 
.L_4093b0:

            lea RDI,QWORD PTR [RIP+.L_413129]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4093bc:

            nop
            nop
            nop
            nop
.L_4093c0:

            sub RSP,792
.L_4093c7:

            mov R11,RDI
            xor EDI,EDI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+776],RAX
            xor EAX,EAX
.L_4093df:

            mov RDX,QWORD PTR [R11+128]
            mov RCX,QWORD PTR [R11+80]
            add RDX,RDI
            mov RAX,QWORD PTR [RDX+16]
            lea RAX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RCX+RAX*8]
            mov RCX,QWORD PTR [RAX]
            movdqu XMM0,XMMWORD PTR [RCX]
            movaps XMMWORD PTR [RSI],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+16]
            movaps XMMWORD PTR [RSI+16],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+32]
            movaps XMMWORD PTR [RSI+32],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+48]
            movaps XMMWORD PTR [RSI+48],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+64]
            movaps XMMWORD PTR [RSI+64],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+80]
            movaps XMMWORD PTR [RSI+80],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+96]
            movaps XMMWORD PTR [RSI+96],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+112]
            movaps XMMWORD PTR [RSI+112],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+128]
            movaps XMMWORD PTR [RSI+128],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+144]
            movaps XMMWORD PTR [RSI+144],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+160]
            movaps XMMWORD PTR [RSI+160],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+176]
            movaps XMMWORD PTR [RSI+176],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+192]
            movaps XMMWORD PTR [RSI+192],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+208]
            movaps XMMWORD PTR [RSI+208],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+224]
            movaps XMMWORD PTR [RSI+224],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+240]
            movaps XMMWORD PTR [RSI+240],XMM0
            mov R8,QWORD PTR [RDX+40]
            mov R9,QWORD PTR [RDX+48]
            sub R9,R8
            sar R9,1
            je .L_4094f0

            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_4094d0:

            mov R10,RAX
            movzx EDX,WORD PTR [R8+RAX*2]
            and R10D,63
            imul DX,WORD PTR [RCX+R10*4]
            mov WORD PTR [R8+RAX*2],DX
            add RAX,1
            cmp RAX,R9
            jne .L_4094d0
.L_4094f0:

            add RDI,64
            add RSI,256
            cmp RDI,192
            jne .L_4093df

            movdqa XMM0,XMMWORD PTR [RIP+.L_415c40]
            mov RDI,RSP
            mov RSI,R11
            movaps XMMWORD PTR [RSP],XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            movaps XMMWORD PTR [RSP+32],XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            movaps XMMWORD PTR [RSP+64],XMM0
            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movaps XMMWORD PTR [RSP+128],XMM0
            movaps XMMWORD PTR [RSP+144],XMM0
            movaps XMMWORD PTR [RSP+160],XMM0
            movaps XMMWORD PTR [RSP+176],XMM0
            movaps XMMWORD PTR [RSP+192],XMM0
            movaps XMMWORD PTR [RSP+208],XMM0
            movaps XMMWORD PTR [RSP+224],XMM0
            movaps XMMWORD PTR [RSP+240],XMM0
            movaps XMMWORD PTR [RSP+256],XMM0
            movaps XMMWORD PTR [RSP+272],XMM0
            movaps XMMWORD PTR [RSP+288],XMM0
            movaps XMMWORD PTR [RSP+304],XMM0
            movaps XMMWORD PTR [RSP+320],XMM0
            movaps XMMWORD PTR [RSP+336],XMM0
            movaps XMMWORD PTR [RSP+352],XMM0
            movaps XMMWORD PTR [RSP+368],XMM0
            movaps XMMWORD PTR [RSP+384],XMM0
            movaps XMMWORD PTR [RSP+400],XMM0
            movaps XMMWORD PTR [RSP+416],XMM0
            movaps XMMWORD PTR [RSP+432],XMM0
            movaps XMMWORD PTR [RSP+448],XMM0
            movaps XMMWORD PTR [RSP+464],XMM0
            movaps XMMWORD PTR [RSP+480],XMM0
            movaps XMMWORD PTR [RSP+496],XMM0
            movaps XMMWORD PTR [RSP+512],XMM0
            movaps XMMWORD PTR [RSP+528],XMM0
            movaps XMMWORD PTR [RSP+544],XMM0
            movaps XMMWORD PTR [RSP+560],XMM0
            movaps XMMWORD PTR [RSP+576],XMM0
            movaps XMMWORD PTR [RSP+592],XMM0
            movaps XMMWORD PTR [RSP+608],XMM0
            movaps XMMWORD PTR [RSP+624],XMM0
            movaps XMMWORD PTR [RSP+640],XMM0
            movaps XMMWORD PTR [RSP+656],XMM0
            movaps XMMWORD PTR [RSP+672],XMM0
            movaps XMMWORD PTR [RSP+688],XMM0
            movaps XMMWORD PTR [RSP+704],XMM0
            movaps XMMWORD PTR [RSP+720],XMM0
            movaps XMMWORD PTR [RSP+736],XMM0
            movaps XMMWORD PTR [RSP+752],XMM0
            call .L_419e90

            mov RAX,QWORD PTR [RSP+776]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40969d

            add RSP,792
.L_40969c:

            ret 
.L_40969d:

            call __stack_chk_fail@PLT
.L_4096a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4096b0:

            lea RAX,QWORD PTR [RDX-1]
            push RBX
.L_4096b5:

            mov RBX,RAX
            shr RBX,63
            add RBX,RAX
            sar RBX,1
            cmp RSI,RBX
            jge .L_409810

            mov R10,RSI
            jmp .L_4096ee
.L_4096d0:

            mov R8D,DWORD PTR [R11]
            lea RAX,QWORD PTR [RDI+R10*8]
            cmp RBX,R9
            movss DWORD PTR [RAX+4],XMM1
            mov DWORD PTR [RAX],R8D
            jle .L_4097f8

            mov R8,R9
.L_4096eb:

            mov R10,R8
.L_4096ee:

            lea RAX,QWORD PTR [R10+1]
            lea R8,QWORD PTR [RAX+RAX*1]
            shl RAX,4
            add RAX,RDI
            lea R9,QWORD PTR [R8-1]
            movss XMM0,DWORD PTR [RAX+4]
            lea R11,QWORD PTR [RDI+R9*8]
            movss XMM1,DWORD PTR [R11+4]
            ucomiss XMM1,XMM0
            ja .L_4096d0

            lea R9,QWORD PTR [RDI+R10*8]
            mov R10D,DWORD PTR [RAX]
            cmp RBX,R8
            movss DWORD PTR [R9+4],XMM0
            mov DWORD PTR [R9],R10D
            jg .L_4096eb

            test DL,1
            jne .L_409749
.L_40972f:

            sub RDX,2
            mov R9,RDX
            shr R9,63
            add RDX,R9
            sar RDX,1
            cmp RDX,R8
            je .L_4097d0
.L_409749:

            lea RDX,QWORD PTR [R8-1]
            mov R10D,ECX
            shr RCX,32
            mov DWORD PTR [RSP-4],ECX
            mov RCX,RDX
            movss XMM1,DWORD PTR [RSP-4]
            shr RCX,63
            add RCX,RDX
            sar RCX,1
            cmp R8,RSI
            jle .L_4097c5

            lea R9,QWORD PTR [RDI+RCX*8]
            movss XMM0,DWORD PTR [R9+4]
            ucomiss XMM1,XMM0
            ja .L_40979d

            jmp .L_4097c5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409788:

            lea R9,QWORD PTR [RDI+RDX*8]
            mov R8,RCX
            mov RCX,RDX
            movss XMM0,DWORD PTR [R9+4]
            ucomiss XMM1,XMM0
            jbe .L_4097c5
.L_40979d:

            mov EDX,DWORD PTR [R9]
            lea RAX,QWORD PTR [RDI+R8*8]
            movss DWORD PTR [RAX+4],XMM0
            mov DWORD PTR [RAX],EDX
            lea RAX,QWORD PTR [RCX-1]
            mov RDX,RAX
            shr RDX,63
            add RDX,RAX
            lea RAX,QWORD PTR [RDI+RCX*8]
            sar RDX,1
            cmp RSI,RCX
            jl .L_409788
.L_4097c5:

            mov DWORD PTR [RAX],R10D
            movss DWORD PTR [RAX+4],XMM1
            pop RBX
.L_4097ce:

            ret 
          .byte 0x90
.L_4097d0:

            lea R8,QWORD PTR [R8+R8*1+1]
            lea RDX,QWORD PTR [RDI+R8*8]
            mov R9D,DWORD PTR [RDX]
            movss XMM0,DWORD PTR [RDX+4]
            movss DWORD PTR [RAX+4],XMM0
            mov DWORD PTR [RAX],R9D
            mov RAX,RDX
            jmp .L_409749
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4097f8:

            test DL,1
            mov RAX,R11
            mov R8,R9
            je .L_40972f

            jmp .L_409749
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409810:

            test DL,1
            lea RAX,QWORD PTR [RDI+RSI*8]
            mov R8,RSI
            je .L_40972f

            mov R10D,ECX
            shr RCX,32
            mov DWORD PTR [RSP-4],ECX
            movss XMM1,DWORD PTR [RSP-4]
            jmp .L_4097c5
.L_409833:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409840:

            movss XMM1,DWORD PTR [RSI+4]
            mov EAX,DWORD PTR [RDI]
            movss XMM0,DWORD PTR [RDX+4]
            ucomiss XMM0,XMM1
            movss XMM2,DWORD PTR [RCX+4]
            movss XMM3,DWORD PTR [RDI+4]
            jbe .L_409880

            ucomiss XMM2,XMM0
            ja .L_40988a

            ucomiss XMM2,XMM1
            jbe .L_4098a0
.L_409865:

            mov EDX,DWORD PTR [RCX]
            mov DWORD PTR [RDI],EDX
            mov DWORD PTR [RCX],EAX
            movss DWORD PTR [RDI+4],XMM2
            movss DWORD PTR [RCX+4],XMM3
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409880:

            ucomiss XMM2,XMM1
            ja .L_4098a0

            ucomiss XMM2,XMM0
            ja .L_409865
.L_40988a:

            mov ECX,DWORD PTR [RDX]
            mov DWORD PTR [RDI],ECX
            mov DWORD PTR [RDX],EAX
            movss DWORD PTR [RDI+4],XMM0
            movss DWORD PTR [RDX+4],XMM3
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4098a0:

            mov EDX,DWORD PTR [RSI]
            mov DWORD PTR [RDI],EDX
            mov DWORD PTR [RSI],EAX
            movss DWORD PTR [RDI+4],XMM1
            movss DWORD PTR [RSI+4],XMM3
            ret 
.L_4098b1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4098c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDX
            push RBX
            mov RDX,RSI
            sub RDX,RDI
            sub RSP,8
.L_4098d7:

            cmp RDX,128
            movzx R13D,BYTE PTR [RSP+64]
            jle .L_409a46

            test RBP,RBP
            mov R15,RDI
            je .L_409a55

            lea R12,QWORD PTR [RDI+8]
            mov R8,RSI
            mov RBX,RSI
.L_409900:

            sub RBX,R15
            lea RCX,QWORD PTR [R8-8]
            mov RSI,R12
            sar RBX,3
            mov RDI,R15
            sub RBP,1
            mov RAX,RBX
            shr RAX,63
            add RBX,RAX
            sar RBX,1
            lea RDX,QWORD PTR [R15+RBX*8]
            mov RBX,R12
            call .L_409840

            movss XMM1,DWORD PTR [R15+4]
            mov RAX,R8
            movss XMM0,DWORD PTR [R8-4]
            nop
            nop
            nop
.L_409940:

            movss XMM2,DWORD PTR [RBX+4]
            mov R14,RBX
            ucomiss XMM1,XMM2
            ja .L_409990

            sub RAX,8
            ucomiss XMM0,XMM1
            jbe .L_40996e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409960:

            sub RAX,8
            movss XMM0,DWORD PTR [RAX+4]
            ucomiss XMM0,XMM1
            ja .L_409960
.L_40996e:

            cmp RAX,RBX
            jbe .L_4099a0

            mov EDX,DWORD PTR [RBX]
            mov ECX,DWORD PTR [RAX]
            mov DWORD PTR [RBX],ECX
            mov DWORD PTR [RAX],EDX
            movss DWORD PTR [RBX+4],XMM0
            movss DWORD PTR [RAX+4],XMM2
            movss XMM0,DWORD PTR [RAX-4]
            movss XMM1,DWORD PTR [R15+4]
.L_409990:

            add RBX,8
            jmp .L_409940
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4099a0:

            sub RSP,8
.L_4099a4:

            mov RDX,RBP
            mov RSI,R8
            push R13
            mov RDI,RBX
            call .L_4098c0

            mov RDX,RBX
            sub RDX,R15
            cmp RDX,128
            pop RAX
            pop RCX
.L_4099c3:

            jle .L_409a46

            test RBP,RBP
            mov R8,RBX
            jne .L_409900
.L_4099d5:

            sar RDX,3
            lea RBP,QWORD PTR [RDX-2]
            mov RBX,RDX
            sar RBP,1
            jmp .L_4099ec
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4099e8:

            sub RBP,1
.L_4099ec:

            mov RCX,QWORD PTR [R15+RBP*8]
            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R15
            call .L_4096b0

            test RBP,RBP
            jne .L_4099e8

            sub R14,8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409a10:

            mov EAX,DWORD PTR [R15]
            mov RBX,R14
            mov RCX,QWORD PTR [R14]
            movss XMM0,DWORD PTR [R15+4]
            sub RBX,R15
            movss DWORD PTR [R14+4],XMM0
            mov RDX,RBX
            xor ESI,ESI
            mov DWORD PTR [R14],EAX
            sar RDX,3
            mov RDI,R15
            call .L_4096b0

            sub R14,8
            cmp RBX,8
            jg .L_409a10
.L_409a46:

            add RSP,8
.L_409a4a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_409a55:

            mov R14,RSI
            jmp .L_4099d5
.L_409a5d:

            nop
            nop
            nop
.L_409a60:

            lea RAX,QWORD PTR [RDX-1]
            push RBX
.L_409a65:

            mov RBX,RAX
            shr RBX,63
            add RBX,RAX
            sar RBX,1
            cmp RSI,RBX
            jge .L_409bc0

            mov R10,RSI
            jmp .L_409a9e
.L_409a80:

            mov R8D,DWORD PTR [R11]
            lea RAX,QWORD PTR [RDI+R10*8]
            cmp RBX,R9
            movss DWORD PTR [RAX+4],XMM1
            mov DWORD PTR [RAX],R8D
            jle .L_409ba8

            mov R8,R9
.L_409a9b:

            mov R10,R8
.L_409a9e:

            lea RAX,QWORD PTR [R10+1]
            lea R8,QWORD PTR [RAX+RAX*1]
            shl RAX,4
            add RAX,RDI
            lea R9,QWORD PTR [R8-1]
            movss XMM0,DWORD PTR [RAX+4]
            lea R11,QWORD PTR [RDI+R9*8]
            movss XMM1,DWORD PTR [R11+4]
            ucomiss XMM1,XMM0
            ja .L_409a80

            lea R9,QWORD PTR [RDI+R10*8]
            mov R10D,DWORD PTR [RAX]
            cmp RBX,R8
            movss DWORD PTR [R9+4],XMM0
            mov DWORD PTR [R9],R10D
            jg .L_409a9b

            test DL,1
            jne .L_409af9
.L_409adf:

            sub RDX,2
            mov R9,RDX
            shr R9,63
            add RDX,R9
            sar RDX,1
            cmp RDX,R8
            je .L_409b80
.L_409af9:

            lea RDX,QWORD PTR [R8-1]
            mov R10D,ECX
            shr RCX,32
            mov DWORD PTR [RSP-4],ECX
            mov RCX,RDX
            movss XMM1,DWORD PTR [RSP-4]
            shr RCX,63
            add RCX,RDX
            sar RCX,1
            cmp R8,RSI
            jle .L_409b75

            lea R9,QWORD PTR [RDI+RCX*8]
            movss XMM0,DWORD PTR [R9+4]
            ucomiss XMM1,XMM0
            ja .L_409b4d

            jmp .L_409b75
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409b38:

            lea R9,QWORD PTR [RDI+RDX*8]
            mov R8,RCX
            mov RCX,RDX
            movss XMM0,DWORD PTR [R9+4]
            ucomiss XMM1,XMM0
            jbe .L_409b75
.L_409b4d:

            mov EDX,DWORD PTR [R9]
            lea RAX,QWORD PTR [RDI+R8*8]
            movss DWORD PTR [RAX+4],XMM0
            mov DWORD PTR [RAX],EDX
            lea RAX,QWORD PTR [RCX-1]
            mov RDX,RAX
            shr RDX,63
            add RDX,RAX
            lea RAX,QWORD PTR [RDI+RCX*8]
            sar RDX,1
            cmp RSI,RCX
            jl .L_409b38
.L_409b75:

            mov DWORD PTR [RAX],R10D
            movss DWORD PTR [RAX+4],XMM1
            pop RBX
.L_409b7e:

            ret 
          .byte 0x90
.L_409b80:

            lea R8,QWORD PTR [R8+R8*1+1]
            lea RDX,QWORD PTR [RDI+R8*8]
            mov R9D,DWORD PTR [RDX]
            movss XMM0,DWORD PTR [RDX+4]
            movss DWORD PTR [RAX+4],XMM0
            mov DWORD PTR [RAX],R9D
            mov RAX,RDX
            jmp .L_409af9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409ba8:

            test DL,1
            mov RAX,R11
            mov R8,R9
            je .L_409adf

            jmp .L_409af9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409bc0:

            test DL,1
            lea RAX,QWORD PTR [RDI+RSI*8]
            mov R8,RSI
            je .L_409adf

            mov R10D,ECX
            shr RCX,32
            mov DWORD PTR [RSP-4],ECX
            movss XMM1,DWORD PTR [RSP-4]
            jmp .L_409b75
.L_409be3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409bf0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            mov RBP,RDX
            push RBX
            mov RDX,RSI
            sub RDX,RDI
            sub RSP,8
.L_409c07:

            cmp RDX,128
            movzx R13D,BYTE PTR [RSP+64]
            jle .L_409d76

            test RBP,RBP
            mov R15,RDI
            je .L_409d85

            lea R12,QWORD PTR [RDI+8]
            mov R8,RSI
            mov RBX,RSI
.L_409c30:

            sub RBX,R15
            lea RCX,QWORD PTR [R8-8]
            mov RSI,R12
            sar RBX,3
            mov RDI,R15
            sub RBP,1
            mov RAX,RBX
            shr RAX,63
            add RBX,RAX
            sar RBX,1
            lea RDX,QWORD PTR [R15+RBX*8]
            mov RBX,R12
            call .L_409840

            movss XMM1,DWORD PTR [R15+4]
            mov RAX,R8
            movss XMM0,DWORD PTR [R8-4]
            nop
            nop
            nop
.L_409c70:

            movss XMM2,DWORD PTR [RBX+4]
            mov R14,RBX
            ucomiss XMM1,XMM2
            ja .L_409cc0

            sub RAX,8
            ucomiss XMM0,XMM1
            jbe .L_409c9e

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409c90:

            sub RAX,8
            movss XMM0,DWORD PTR [RAX+4]
            ucomiss XMM0,XMM1
            ja .L_409c90
.L_409c9e:

            cmp RAX,RBX
            jbe .L_409cd0

            mov EDX,DWORD PTR [RBX]
            mov ECX,DWORD PTR [RAX]
            mov DWORD PTR [RBX],ECX
            mov DWORD PTR [RAX],EDX
            movss DWORD PTR [RBX+4],XMM0
            movss DWORD PTR [RAX+4],XMM2
            movss XMM0,DWORD PTR [RAX-4]
            movss XMM1,DWORD PTR [R15+4]
.L_409cc0:

            add RBX,8
            jmp .L_409c70
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409cd0:

            sub RSP,8
.L_409cd4:

            mov RDX,RBP
            mov RSI,R8
            push R13
            mov RDI,RBX
            call .L_409bf0

            mov RDX,RBX
            sub RDX,R15
            cmp RDX,128
            pop RAX
            pop RCX
.L_409cf3:

            jle .L_409d76

            test RBP,RBP
            mov R8,RBX
            jne .L_409c30
.L_409d05:

            sar RDX,3
            lea RBP,QWORD PTR [RDX-2]
            mov RBX,RDX
            sar RBP,1
            jmp .L_409d1c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_409d18:

            sub RBP,1
.L_409d1c:

            mov RCX,QWORD PTR [R15+RBP*8]
            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R15
            call .L_409a60

            test RBP,RBP
            jne .L_409d18

            sub R14,8
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409d40:

            mov EAX,DWORD PTR [R15]
            mov RBX,R14
            mov RCX,QWORD PTR [R14]
            movss XMM0,DWORD PTR [R15+4]
            sub RBX,R15
            movss DWORD PTR [R14+4],XMM0
            mov RDX,RBX
            xor ESI,ESI
            mov DWORD PTR [R14],EAX
            sar RDX,3
            mov RDI,R15
            call .L_409a60

            sub R14,8
            cmp RBX,8
            jg .L_409d40
.L_409d76:

            add RSP,8
.L_409d7a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_409d85:

            mov R14,RSI
            jmp .L_409d05
.L_409d8d:

            nop
            nop
            nop
.L_409d90:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBX,RDI
            movabs RBP,-71777214294589695
            sub RSP,56
.L_409dae:

            mov R8,QWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            mov RDI,RAX
            sub RDI,R8
            mov RCX,RDI
            sar RCX,2
            imul RCX,RBP
            test RCX,RCX
            je .L_40a128

            movabs RAX,17944303573647423
            cmp RCX,RAX
            ja .L_40a1ea
.L_409df2:

            call _Znwm@PLT
.L_409df7:

            mov R15,RAX
            mov RAX,QWORD PTR [RBX+8]
            mov R8,QWORD PTR [RBX]
            mov RDX,RAX
            sub RDX,R8
            sar RDX,2
            imul RDX,RBP
            cmp RAX,R8
            je .L_409eac
.L_409e18:

            lea RCX,QWORD PTR [R8+1028]
            sub RAX,RCX
            movabs RCX,4539908804132798209
            shr RAX,2
            imul RAX,RCX
            movabs RCX,4611686018427387903
            and RAX,RCX
            add RAX,1
            mov RCX,RAX
            shl RCX,8
            add RAX,RCX
            lea R9,QWORD PTR [R15+RAX*4]
            mov RAX,R15
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409e60:

            test RAX,RAX
            je .L_40a19f
.L_409e69:

            mov RCX,QWORD PTR [R8]
            lea RDI,QWORD PTR [RAX+8]
            mov RSI,R8
            add R8,1028
            and RDI,-8
            mov QWORD PTR [RAX],RCX
            mov RCX,QWORD PTR [R8-8]
            mov QWORD PTR [RAX+1020],RCX
            mov RCX,RAX
            add RAX,1028
            sub RCX,RDI
            sub RSI,RCX
            add ECX,1028
            shr ECX,3
            cmp RAX,R9

            rep movsq 

            jne .L_409e60
.L_409eac:

            test RDX,RDX
            mov QWORD PTR [RSP+32],RDX
            je .L_40a140

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_40a1ef

            lea RBP,QWORD PTR [RDX*4]
            mov RDI,RBP
.L_409ed8:

            call _Znwm@PLT
.L_409edd:

            mov R14,QWORD PTR [RBX+8]
            sub R14,QWORD PTR [RBX]
            mov RDX,RBP
            xor ESI,ESI
            mov RDI,RAX
            mov R12,RAX
            xor EBP,EBP
            call memset@PLT

            sar R14,2
            mov QWORD PTR [RSP],0
            test R14,R14
            jne .L_40a050
.L_409f0b:

            lea RSI,QWORD PTR [RSP+32]
            mov RCX,RBP
            mov RDX,R12
            mov RDI,R15
.L_409f19:

            call .L_41ca90

            mov RCX,QWORD PTR [R13+8]
            mov R14,QWORD PTR [RSP]
            mov RAX,QWORD PTR [R13]
            mov RDX,RCX
            sub R14,RBP
            sub RDX,RAX
            cmp R14,RDX
            mov QWORD PTR [RSP],RDX
            ja .L_40a078

            jae .L_409f49

            add R14,RAX
            mov QWORD PTR [R13+8],R14
.L_409f49:

            xor EAX,EAX
            mov RDI,QWORD PTR [RBX]
            cmp QWORD PTR [RBX+8],RDI
            movabs RDX,-71777214294589695
            je .L_409fc5

            nop
            nop
.L_409f60:

            mov EDI,DWORD PTR [R12+RAX*4]
            mov RCX,RAX
            shl RCX,8
            add RCX,RAX
            add RCX,QWORD PTR [R13]
            add RAX,1
            mov ESI,EDI
            shl ESI,8
            add ESI,EDI
            movsxd RSI,ESI
            add RSI,RBP
            mov RDI,QWORD PTR [RSI]
            mov QWORD PTR [RCX],RDI
            mov RDI,QWORD PTR [RSI+249]
            mov QWORD PTR [RCX+249],RDI
            lea RDI,QWORD PTR [RCX+8]
            and RDI,-8
            sub RCX,RDI
            sub RSI,RCX
            add ECX,257
            shr ECX,3

            rep movsq 

            mov RCX,QWORD PTR [RBX+8]
            sub RCX,QWORD PTR [RBX]
            sar RCX,2
            imul RCX,RDX
            cmp RAX,RCX
            jb .L_409f60
.L_409fc5:

            mov R14,QWORD PTR [RSP+32]
            test R14,R14
            je .L_40a001

            mov R13,R15
            xor EBX,EBX
            xor R14D,R14D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409fe0:

            mov RDI,R13
            call .L_41bd30
.L_409fe8:

            shr RAX,3
            add RBX,1
            add R13,1028
            add R14,RAX
            cmp QWORD PTR [RSP+32],RBX
            ja .L_409fe0
.L_40a001:

            test RBP,RBP
            je .L_40a00e

            mov RDI,RBP
            call _ZdlPv@PLT
.L_40a00e:

            test R12,R12
            je .L_40a01b

            mov RDI,R12
            call _ZdlPv@PLT
.L_40a01b:

            test R15,R15
            je .L_40a028

            mov RDI,R15
            call _ZdlPv@PLT
.L_40a028:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,R14
            jne .L_40a1e5

            add RSP,56
.L_40a043:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40a050:

            mov RDI,R14
.L_40a053:

            call _Znwm@PLT
.L_40a058:

            mov RBP,RAX
            lea RAX,QWORD PTR [RAX+R14*1]
            mov RDX,R14
            xor ESI,ESI
            mov RDI,RBP
            mov QWORD PTR [RSP],RAX
            call memset@PLT

            jmp .L_409f0b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a078:

            mov RDX,R14
            sub RDX,QWORD PTR [RSP]
            mov QWORD PTR [RSP+8],RDX
            je .L_409f49

            mov RAX,QWORD PTR [R13+16]
            sub RAX,RCX
            cmp RDX,RAX
            jbe .L_40a158

            mov RAX,QWORD PTR [RSP]
            not RAX
            cmp QWORD PTR [RSP+8],RAX
            ja .L_40a22b

            mov RAX,RDX
            mov RDX,QWORD PTR [RSP]
            cmp RDX,RAX
            cmovae RAX,RDX
            add RAX,RDX
            mov QWORD PTR [RSP+16],RAX
            jb .L_40a1bd

            xor ECX,ECX
            test RAX,RAX
            mov QWORD PTR [RSP+24],0
            mov RDI,RAX
            jne .L_40a1cb
.L_40a0df:

            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+8]
            xor ESI,ESI
            mov QWORD PTR [RSP],RCX
            add RDI,RCX
            call memset@PLT

            mov R8,QWORD PTR [R13]
            mov RDX,QWORD PTR [R13+8]
            mov RCX,QWORD PTR [RSP]
            sub RDX,R8
            jne .L_40a174

            test R8,R8
            jne .L_40a18a
.L_40a10c:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [R13],RCX
            add RCX,R14
            mov QWORD PTR [R13+8],RCX
            mov QWORD PTR [R13+16],RAX
            jmp .L_409f49
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a128:

            xor R15D,R15D
            cmp R8,RAX
            mov RDX,RCX
            jne .L_409e18

            mov QWORD PTR [RSP+32],0
.L_40a140:

            xor R12D,R12D
            mov QWORD PTR [RSP],0
            xor EBP,EBP
            jmp .L_409f0b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a158:

            mov RDI,RCX
            xor ESI,ESI
            mov R14,RDX
            call memset@PLT

            mov RCX,RAX
            add RCX,R14
            mov QWORD PTR [R13+8],RCX
            jmp .L_409f49
.L_40a174:

            mov RSI,R8
            mov RDI,RCX
            mov QWORD PTR [RSP],R8
            call memmove@PLT

            mov R8,QWORD PTR [RSP]
            mov RCX,RAX
.L_40a18a:

            mov RDI,R8
            mov QWORD PTR [RSP],RCX
            call _ZdlPv@PLT

            mov RCX,QWORD PTR [RSP]
            jmp .L_40a10c
.L_40a19f:

            add R8,1028
            cmp R9,1028
            je .L_409eac

            mov EAX,1028
            jmp .L_409e69
.L_40a1bd:

            mov QWORD PTR [RSP+16],-1
            mov RDI,QWORD PTR [RSP+16]
.L_40a1cb:

            call _Znwm@PLT
.L_40a1d0:

            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+16]
            add RAX,RCX
            mov QWORD PTR [RSP+24],RAX
            jmp .L_40a0df
.L_40a1e5:

            call __stack_chk_fail@PLT
.L_40a1ea:

            call _ZSt17__throw_bad_allocv@PLT
.L_40a1ef:

            call _ZSt17__throw_bad_allocv@PLT
.L_40a1f4:

            mov RBX,RAX
.L_40a1f7:

            test R15,R15
            je .L_40a204

            mov RDI,R15
            call _ZdlPv@PLT
.L_40a204:

            mov RDI,RBX
.L_40a207:

            call _Unwind_Resume@PLT
.L_40a20c:

            test RBP,RBP
            mov RBX,RAX
            je .L_40a21c

            mov RDI,RBP
            call _ZdlPv@PLT
.L_40a21c:

            test R12,R12
            je .L_40a1f7
.L_40a221:

            mov RDI,R12
            call _ZdlPv@PLT

            jmp .L_40a1f7
.L_40a22b:

            lea RDI,QWORD PTR [RIP+.L_413155]
.L_40a232:

            call _ZSt20__throw_length_errorPKc@PLT
.L_40a237:

            mov RBX,RAX
            jmp .L_40a221
.L_40a23c:

            nop
            nop
            nop
            nop
.L_40a240:

            mov EAX,DWORD PTR [RSI]
            cmp DWORD PTR [RDI],EAX
            jne .L_40a353

            mov EAX,1
            jmp .L_40a268
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a258:

            add RAX,1
            cmp RAX,192
            je .L_40a350
.L_40a268:

            mov ECX,DWORD PTR [RDI+RAX*4]
            mov EDX,DWORD PTR [RSI+RAX*4]
            mov R8D,EAX
            cmp ECX,EDX
            je .L_40a258

            add R8D,1
            cmp ECX,EDX
            movsxd R9,R8D
            jge .L_40a2e8

            cmp R8D,192
            mov EAX,4294967295
            je .L_40a338

            shl R9,2
.L_40a296:

            mov EAX,DWORD PTR [RSI+R9*1]
            cmp DWORD PTR [RDI+R9*1],EAX
            jg .L_40a340

            lea EAX,DWORD PTR [R8+1]
            movsxd R8,R8D
            movsxd RDX,EAX
            mov EAX,EAX
            sub R8,RAX
            lea RAX,QWORD PTR [R8*4]
            add RDI,RAX
            add RSI,RAX
            jmp .L_40a2d5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a2c8:

            mov EAX,DWORD PTR [RDI+RDX*4+4]
            add RDX,1
            cmp EAX,DWORD PTR [RSI+RDX*4]
            jg .L_40a340
.L_40a2d5:

            cmp EDX,191
            jle .L_40a2c8

            mov EAX,4294967295
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a2e8:

            cmp R8D,192
            je .L_40a332
.L_40a2f1:

            mov EAX,DWORD PTR [RSI+R9*4]
            cmp DWORD PTR [RDI+R9*4],EAX
            jl .L_40a340

            movsxd RDX,R8D
            lea RCX,QWORD PTR [RDX+1]
            mov EDX,191
            sub EDX,R8D
            add RDX,RCX
            lea RAX,QWORD PTR [RCX*4]
            shl RDX,2
            jmp .L_40a32d

            nop
            nop
            nop
            nop
            nop
.L_40a320:

            mov ECX,DWORD PTR [RDI+RAX*1]
            add RAX,4
            cmp ECX,DWORD PTR [RSI+RAX*1-4]
            jl .L_40a340
.L_40a32d:

            cmp RAX,RDX
            jne .L_40a320
.L_40a332:

            mov EAX,1
            ret 
.L_40a338:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a340:

            mov EAX,2
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a350:

            xor EAX,EAX
            ret 
.L_40a353:

            jge .L_40a366

            mov R9D,4
            mov R8D,1
            jmp .L_40a296
.L_40a366:

            mov R9D,1
            mov R8D,1
            jmp .L_40a2f1
.L_40a377:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a380:

            pxor XMM1,XMM1
            lea RAX,QWORD PTR [RIP+.L_415a00]
            movsxd RDI,EDI
            movsd XMM0,QWORD PTR [RIP+.L_415c98]
            cvtsi2sd XMM1,DWORD PTR [RAX+RDI*4]
            mulsd XMM1,QWORD PTR [RIP+.L_415c90]
            addsd XMM1,XMM0
            divsd XMM0,XMM1
            ret 
.L_40a3ac:

            nop
            nop
            nop
            nop
.L_40a3b0:

            pxor XMM0,XMM0
            lea RCX,QWORD PTR [RDI+768]
            lea RDX,QWORD PTR [RIP+.L_415a00]
            movsd XMM4,QWORD PTR [RIP+.L_415c90]
            movsd XMM3,QWORD PTR [RIP+.L_415c98]
.L_40a3d2:

            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_40a3d8:

            pxor XMM1,XMM1
            movapd XMM2,XMM3
            cvtsi2sd XMM1,DWORD PTR [RDX+RAX*1]
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            divsd XMM2,XMM1
            pxor XMM1,XMM1
            cvtsi2sd XMM1,DWORD PTR [RDI+RAX*1]
            subsd XMM1,XMM3
            add RAX,4
            cmp RAX,256
            mulsd XMM1,XMM4
            mulsd XMM1,XMM2
            addsd XMM0,XMM1
            jne .L_40a3d8

            add RDI,256
            cmp RCX,RDI
            jne .L_40a3d2

            ret 
.L_40a424:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a430:

            mov RSI,QWORD PTR [RDI+128]
            mov RCX,QWORD PTR [RSI+104]
            mov RDX,QWORD PTR [RSI+112]
            sub RDX,RCX
            sar RDX,1
            je .L_40a468

            cmp WORD PTR [RCX],0
            jne .L_40a45f

            xor EAX,EAX
.L_40a44f:

            add RAX,1
            cmp RDX,RAX
            je .L_40a468

            cmp WORD PTR [RCX+RAX*2],0
            je .L_40a44f
.L_40a45f:

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a468:

            mov RCX,QWORD PTR [RSI+168]
            mov RDX,QWORD PTR [RSI+176]
            sub RDX,RCX
            sar RDX,1
            je .L_40a49f

            cmp WORD PTR [RCX],0
            jne .L_40a45f

            xor EAX,EAX
            add RAX,1
            cmp RDX,RAX
            je .L_40a49f
.L_40a48f:

            cmp WORD PTR [RCX+RAX*2],0
            jne .L_40a45f

            add RAX,1
            cmp RDX,RAX
            jne .L_40a48f
.L_40a49f:

            mov EAX,1
            ret 
.L_40a4a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40a4b0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,1128
.L_40a4c7:

            mov RDI,QWORD PTR [RDI+16]
            mov ESI,DWORD PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1112],RAX
            xor EAX,EAX
            lea R13,QWORD PTR [RSP+80]
            lea RBX,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RDI]
            mov RBP,R13
.L_40a4f1:

            call QWORD PTR [RAX+56]
.L_40a4f4:

            lea R8,QWORD PTR [RIP+.L_41316f]
            mov ECX,1024
            mov EDX,1
            mov ESI,1024
            mov RDI,R13
            mov EAX,1
            movsd QWORD PTR [RSP],XMM0
            call __snprintf_chk@PLT

            lea RAX,QWORD PTR [RBX+16]
            mov BYTE PTR [RSP+1103],0
            mov QWORD PTR [RSP+48],RAX
.L_40a52d:

            mov EDX,DWORD PTR [RBP]
            add RBP,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40a52d

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBP+2]
            mov ECX,EAX
            cmove RBP,RDX
            add CL,AL
            sbb RBP,3
            sub RBP,R13
            cmp RBP,15
            mov QWORD PTR [RSP+16],RBP
            ja .L_40a6a8

            cmp RBP,1
            jne .L_40a910

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RSP+64],AL
            lea RAX,QWORD PTR [RBX+16]
.L_40a58b:

            mov QWORD PTR [RSP+56],RBP
            mov BYTE PTR [RAX+RBP*1],0
            mov RSI,RBX
            mov RDI,QWORD PTR [R12+32]
.L_40a59c:

            call .L_4196f0
.L_40a5a1:

            mov RDI,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40a5b4

            call _ZdlPv@PLT
.L_40a5b4:

            mov RDI,QWORD PTR [R12+24]
            movsd XMM0,QWORD PTR [RDI+64]
            ucomisd XMM0,QWORD PTR [RSP]
            ja .L_40a6f0

            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            ja .L_40a6f0
.L_40a5d7:

            mov EAX,10
            mov BYTE PTR [RSP+1103],0
            mov RBP,R13
            mov WORD PTR [RSP+80],AX
            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+48],RAX
.L_40a5f5:

            mov EDX,DWORD PTR [RBP]
            add RBP,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40a5f5

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBP+2]
            mov ECX,EAX
            cmove RBP,RDX
            add CL,AL
            sbb RBP,3
            sub RBP,R13
            cmp RBP,15
            mov QWORD PTR [RSP+16],RBP
            ja .L_40a8d0

            cmp RBP,1
            jne .L_40a968

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RSP+64],AL
            lea RAX,QWORD PTR [RBX+16]
.L_40a653:

            mov QWORD PTR [RSP+56],RBP
            mov BYTE PTR [RAX+RBP*1],0
            mov RSI,RBX
            mov RDI,QWORD PTR [R12+32]
.L_40a664:

            call .L_4196f0
.L_40a669:

            mov RDI,QWORD PTR [RSP+48]
            add RBX,16
            cmp RDI,RBX
            je .L_40a67c

            call _ZdlPv@PLT
.L_40a67c:

            mov RAX,QWORD PTR [RSP+1112]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40a9ca

            add RSP,1128
.L_40a69a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40a6a8:

            lea R15,QWORD PTR [RSP+16]
            xor EDX,EDX
            mov RDI,RBX
            mov RSI,R15
.L_40a6b5:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDX
.L_40a6c9:

            mov RDX,RBP
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov RBP,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+48]
            jmp .L_40a58b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a6f0:

            mov RSI,R14
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            mov RBP,QWORD PTR [R12+16]
            lea RDX,QWORD PTR [RIP+.L_413230]
            mov RAX,QWORD PTR [RBP]
            mov RAX,QWORD PTR [RAX+72]
            cmp RAX,RDX
            jne .L_40a990

            mov RAX,QWORD PTR [RBP+184]
            mov RSI,QWORD PTR [RBP+176]
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+32],0
            mov R14,RAX
            sub R14,RSI
            mov RDX,R14
            sar RDX,2
            test RDX,RDX
            movaps XMMWORD PTR [RSP+16],XMM0
            je .L_40a9c0

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_40a9cf

            mov RDI,R14
            call _Znwm@PLT
.L_40a766:

            mov RCX,RAX
            mov RAX,QWORD PTR [RBP+184]
            mov RSI,QWORD PTR [RBP+176]
            mov RBP,RAX
            sub RBP,RSI
.L_40a77d:

            mov QWORD PTR [RSP+8],RCX
            add R14,RCX
            cmp RAX,RSI
            movq XMM0,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],R14
            punpcklqdq XMM0,XMM0
            movaps XMMWORD PTR [RSP+16],XMM0
            je .L_40a7ac

            mov RDI,RCX
            mov RDX,RBP
            call memmove@PLT

            mov RCX,RAX
.L_40a7ac:

            add RCX,RBP
            lea R15,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],RCX
.L_40a7b9:

            mov RAX,QWORD PTR [R12+24]
            mov RSI,R15
            lea RDI,QWORD PTR [RAX+32]
.L_40a7c5:

            call .L_414440
.L_40a7ca:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_40a7d9

            call _ZdlPv@PLT
.L_40a7d9:

            mov RDI,QWORD PTR [R12+16]
            lea RDX,QWORD PTR [RIP+.L_413120]
            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX+80]
            cmp RAX,RDX
            jne .L_40a980

            movss XMM0,DWORD PTR [RDI+168]
.L_40a7fd:

            mov RAX,QWORD PTR [R12+24]
            cvtss2sd XMM0,XMM0
            mov RBP,R13
            movsd XMM3,QWORD PTR [RSP]
            movsd QWORD PTR [RAX+56],XMM0
            movsd QWORD PTR [RAX+64],XMM3
            lea RAX,QWORD PTR [RBX+16]
            mov DWORD PTR [RSP+80],690628640
            mov BYTE PTR [RSP+84],0
            mov BYTE PTR [RSP+1103],0
            mov QWORD PTR [RSP+48],RAX
.L_40a836:

            mov EDX,DWORD PTR [RBP]
            add RBP,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40a836

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBP+2]
            mov ECX,EAX
            cmove RBP,RDX
            add CL,AL
            sbb RBP,3
            sub RBP,R13
            cmp RBP,15
            mov QWORD PTR [RSP+16],RBP
            ja .L_40a928

            cmp RBP,1
            jne .L_40a9a8

            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [RSP+64],AL
            lea RAX,QWORD PTR [RBX+16]
.L_40a894:

            mov QWORD PTR [RSP+56],RBP
            mov BYTE PTR [RAX+RBP*1],0
            mov RSI,RBX
            mov RDI,QWORD PTR [R12+32]
.L_40a8a5:

            call .L_4196f0
.L_40a8aa:

            mov RDI,QWORD PTR [RSP+48]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40a5d7

            call _ZdlPv@PLT

            jmp .L_40a5d7
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a8d0:

            lea RSI,QWORD PTR [RSP+16]
            xor EDX,EDX
            mov RDI,RBX
.L_40a8da:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDX
.L_40a8ee:

            mov RDX,RBP
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov RBP,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+48]
            jmp .L_40a653
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a910:

            test RBP,RBP
            lea RAX,QWORD PTR [RBX+16]
            je .L_40a58b

            jmp .L_40a6c9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a928:

            xor EDX,EDX
            mov RSI,R15
            mov RDI,RBX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDX
.L_40a944:

            mov RDX,RBP
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov RBP,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+48]
            jmp .L_40a894
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a968:

            test RBP,RBP
            lea RAX,QWORD PTR [RBX+16]
            je .L_40a653

            jmp .L_40a8ee
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a980:

            call RAX

            jmp .L_40a7fd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a990:

            lea R15,QWORD PTR [RSP+16]
            mov RSI,RBP
            mov RDI,R15
            call RAX

            jmp .L_40a7b9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a9a8:

            test RBP,RBP
            lea RAX,QWORD PTR [RBX+16]
            je .L_40a894

            jmp .L_40a944
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a9c0:

            mov RBP,R14
            xor ECX,ECX
            jmp .L_40a77d
.L_40a9ca:

            call __stack_chk_fail@PLT
.L_40a9cf:

            call _ZSt17__throw_bad_allocv@PLT
.L_40a9d4:

            mov RDI,QWORD PTR [RSP+48]
            add RBX,16
            mov RBP,RAX
            cmp RDI,RBX
            je .L_40a9ea

            call _ZdlPv@PLT
.L_40a9ea:

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_40a9f2:

            jmp .L_40a9d4
.L_40a9f4:

            mov RDI,QWORD PTR [RSP+16]
            mov RBX,RAX
            test RDI,RDI
            je .L_40aa06

            call _ZdlPv@PLT
.L_40aa06:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_40aa0e:

            jmp .L_40a9d4
.L_40aa10:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            mov EDI,72
            sub RSP,56
.L_40aa2c:

            call _Znwm@PLT

            mov R13,RAX
            mov RAX,QWORD PTR [RBP]
            lea RCX,QWORD PTR [R13+48]
            mov QWORD PTR [R13+32],RCX
            mov RSI,QWORD PTR [RAX]
            lea RDX,QWORD PTR [RAX+16]
            mov QWORD PTR [RSP+16],RCX
            cmp RSI,RDX
            je .L_40adc0

            mov QWORD PTR [R13+32],RSI
            mov RSI,QWORD PTR [RAX+16]
            mov QWORD PTR [R13+48],RSI
.L_40aa61:

            mov RSI,QWORD PTR [RAX+8]
            lea R12,QWORD PTR [RBX+8]
            mov RBP,R15
            cmp R12,R15
            mov QWORD PTR [R13+40],RSI
            mov QWORD PTR [RAX],RDX
            mov QWORD PTR [RAX+8],0
            mov BYTE PTR [RAX+16],0
            lea RAX,QWORD PTR [R13+32]
            mov DWORD PTR [R13+64],0
            mov QWORD PTR [RSP+8],RAX
            je .L_40ad28

            mov R14,QWORD PTR [R13+40]
            mov R10,QWORD PTR [R15+40]
            mov RDI,QWORD PTR [R13+32]
            mov RCX,QWORD PTR [R15+32]
            cmp R14,R10
            mov R11,R10
            cmovbe R11,R14
            mov QWORD PTR [RSP+8],RDI
            test R11,R11
            jne .L_40ab68

            mov RAX,R14
            sub RAX,R10
            cmp RAX,2147483647
            jg .L_40abce
.L_40aad3:

            cmp RAX,-2147483648
            jl .L_40aae3

            test EAX,EAX
            jns .L_40acc8
.L_40aae3:

            cmp QWORD PTR [RBX+24],R15
            je .L_40ab5c

            mov RDI,R15
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov R11,QWORD PTR [RAX+40]
            mov R10,RAX
            cmp R14,R11
            mov RDX,R11
            cmovbe RDX,R14
            test RDX,RDX
            je .L_40ab2d

            mov RDI,QWORD PTR [RAX+32]
            mov RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],R11
            mov QWORD PTR [RSP+24],RAX
            call memcmp@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+32]
            jne .L_40ab49
.L_40ab2d:

            sub R11,R14
            cmp R11,2147483647
            jg .L_40ad6f

            cmp R11,-2147483648
            jl .L_40ab51

            mov EAX,R11D
.L_40ab49:

            test EAX,EAX
            jns .L_40ad6f
.L_40ab51:

            cmp QWORD PTR [R10+24],0
            je .L_40ae20
.L_40ab5c:

            mov R10,R15
            jmp .L_40ad8a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ab68:

            mov RDX,R11
            mov RSI,RCX
            mov QWORD PTR [RSP+40],R10
            mov QWORD PTR [RSP+32],R11
            mov QWORD PTR [RSP+24],RCX
            call memcmp@PLT

            test EAX,EAX
            mov RCX,QWORD PTR [RSP+24]
            mov R11,QWORD PTR [RSP+32]
            mov R10,QWORD PTR [RSP+40]
            jne .L_40add0

            mov RAX,R14
            sub RAX,R10
            cmp RAX,2147483647
            jle .L_40aad3

            nop
            nop
            nop
            nop
            nop
.L_40abb0:

            mov RSI,QWORD PTR [RSP+8]
            mov RDX,R11
            mov RDI,RCX
            mov QWORD PTR [RSP+24],R10
            call memcmp@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RSP+24]
            jne .L_40abea
.L_40abce:

            sub R10,R14
            cmp R10,2147483647
            jg .L_40acf0

            cmp R10,-2147483648
            jl .L_40abf2

            mov EAX,R10D
.L_40abea:

            test EAX,EAX
            jns .L_40acf0
.L_40abf2:

            cmp QWORD PTR [RBX+32],R15
            je .L_40ac62

            mov RDI,R15
            call _ZSt18_Rb_tree_incrementPSt18_Rb_tree_node_base@PLT

            mov RBP,QWORD PTR [RAX+40]
            mov R10,RAX
            cmp R14,RBP
            mov RDX,RBP
            cmovbe RDX,R14
            test RDX,RDX
            je .L_40ac32

            mov RSI,QWORD PTR [RAX+32]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],RAX
            call memcmp@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RSP+24]
            jne .L_40ac4c
.L_40ac32:

            mov RAX,R14
            sub RAX,RBP
            cmp RAX,2147483647
            jg .L_40ad6f

            cmp RAX,-2147483648
            jl .L_40ac54
.L_40ac4c:

            test EAX,EAX
            jns .L_40ad6f
.L_40ac54:

            cmp QWORD PTR [R15+24],0
            mov RBP,R10
            jne .L_40ad8a
.L_40ac62:

            mov R10,R15
.L_40ac65:

            mov RBP,QWORD PTR [R10+40]
            mov RDX,R14
            cmp RBP,R14
            cmovbe RDX,RBP
            test RDX,RDX
            je .L_40ac96

            mov RSI,QWORD PTR [R10+32]
            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],R10
            call memcmp@PLT

            test EAX,EAX
            mov EDI,EAX
            mov R10,QWORD PTR [RSP+16]
            jne .L_40acbb
.L_40ac96:

            mov R9,R14
            xor EDI,EDI
            sub R9,RBP
            cmp R9,2147483647
            jg .L_40ad99

            cmp R9,-2147483648
            jl .L_40ad94

            mov EDI,R9D
.L_40acbb:

            shr EDI,31
            jmp .L_40ad99
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40acc8:

            test R11,R11
            jne .L_40abb0

            jmp .L_40abce
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ace0:

            mov RAX,QWORD PTR [R13+32]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40acf0:

            mov RAX,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RSP+16]
            cmp RAX,RBX
            je .L_40ad07

            mov RDI,RAX
            call _ZdlPv@PLT
.L_40ad07:

            mov RDI,R13
            call _ZdlPv@PLT

            add RSP,56
.L_40ad13:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ad28:

            cmp QWORD PTR [RBX+40],0
            je .L_40ad6f

            mov R10,QWORD PTR [RBX+32]
            mov R14,QWORD PTR [R13+40]
            mov RBP,QWORD PTR [R10+40]
            mov RDX,R14
            cmp RBP,R14
            cmovbe RDX,RBP
            test RDX,RDX
            jne .L_40ade0
.L_40ad4e:

            sub RBP,R14
            cmp RBP,2147483647
            jg .L_40ad6f

            cmp RBP,-2147483648
            jl .L_40ae20

            mov EAX,EBP
.L_40ad69:

            xor EBP,EBP
            test EAX,EAX
            js .L_40ad8a
.L_40ad6f:

            lea RSI,QWORD PTR [R13+32]
            mov RDI,RBX
            call .L_414d20

            test RDX,RDX
            mov RBP,RAX
            mov R10,RDX
            je .L_40ace0
.L_40ad8a:

            test RBP,RBP
            jne .L_40ad94

            cmp R12,R10
            jne .L_40ae08
.L_40ad94:

            mov EDI,1
.L_40ad99:

            mov RCX,R12
            mov RSI,R13
            mov RDX,R10
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RBX+40],1
            add RSP,56
.L_40adb0:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_40adc0:

            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [R13+48],XMM0
            jmp .L_40aa61
          .byte 0x90
.L_40add0:

            js .L_40aae3

            jmp .L_40abb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ade0:

            mov RDI,QWORD PTR [R10+32]
            mov RSI,QWORD PTR [R13+32]
            mov QWORD PTR [RSP+8],R10
            call memcmp@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RSP+8]
            je .L_40ad4e

            jmp .L_40ad69

            nop
            nop
            nop
            nop
.L_40ae08:

            mov RAX,QWORD PTR [R13+32]
            mov R14,QWORD PTR [R13+40]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_40ac65
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ae20:

            xor EBP,EBP
            jmp .L_40ad8a
.L_40ae27:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ae30:

            push RBP
            mov EAX,ECX
            movzx EAX,AL
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            mov R13D,ECX
            push RBX
            mov R14,RDX
            sub RSP,3240
.L_40ae4f:

            mov RBX,QWORD PTR [RSI+136]
            sub RBX,QWORD PTR [RSI+128]
            mov BYTE PTR [RBP-3241],CL
            mov DWORD PTR [RBP-3120],EAX
            bsr EAX,EAX
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RCX
            xor ECX,ECX
            mov ECX,DWORD PTR [RDX]
            cdqe 
            mov QWORD PTR [RBP-2904],RDI
            mov QWORD PTR [RBP-3128],RSI
            movsd QWORD PTR [RBP-3256],XMM0
            mov BYTE PTR [RBP-3242],R8B
            mov DWORD PTR [RBP-3160],ECX
            mov ECX,DWORD PTR [RDX+4]
            mov RDX,RBX
            sar RDX,6
            cmp RAX,RDX
            mov QWORD PTR [RBP-3184],RDX
            mov DWORD PTR [RBP-3168],ECX
            jb .L_40aee0
.L_40aebe:

            mov RAX,QWORD PTR [RBP-56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40ee29

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_40aedf:

            ret 
.L_40aee0:

            lea RDX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RAX+RDX*4]
            shl RAX,4
            add RAX,QWORD PTR [R14+8]
            mov R15D,DWORD PTR [RAX+8]
            mov ESI,DWORD PTR [RAX+12]
            mov EAX,DWORD PTR [RBP-3160]
            lea ECX,DWORD PTR [R15*8]
            mov DWORD PTR [RBP-2908],ESI
            lea EAX,DWORD PTR [RCX+RAX*1-1]
            cdq 
            idiv ECX
            lea ECX,DWORD PTR [RSI*8]
            mov ESI,DWORD PTR [RBP-3168]
            mov DWORD PTR [RBP-3132],EAX
            lea EAX,DWORD PTR [RCX+RSI*1-1]
            cdq 
            idiv ECX
            mov EDX,DWORD PTR [RBP-3132]
            imul EDX,EAX
            mov DWORD PTR [RBP-3136],EAX
            mov EAX,EDX
            mov DWORD PTR [RBP-2992],EDX
            add EAX,1
            cdqe 
            test RAX,RAX
            je .L_40edfd

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_40edf8

            lea RBX,QWORD PTR [RAX*4]
            mov RDI,RBX
.L_40af6f:

            call _Znwm@PLT
.L_40af74:

            mov RDX,RBX
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RBP-3080],RAX
            call memset@PLT
.L_40af88:

            imul EBX,DWORD PTR [RBP-2992],60
            movsxd RBX,EBX
            test RBX,RBX
            jne .L_40edae

            mov QWORD PTR [RBP-3056],0
            mov QWORD PTR [RBP-3024],0
            mov QWORD PTR [RBP-3088],0
            mov QWORD PTR [RBP-3016],0
.L_40afc7:

            mov EDI,1536
.L_40afcc:

            call _Znwm@PLT
.L_40afd1:

            mov QWORD PTR [RBP-3000],RAX
            add RAX,1536
            mov QWORD PTR [RBP-3048],RAX
            mov RAX,QWORD PTR [RBP-2904]
            mov RDI,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RDI]
.L_40aff3:

            call QWORD PTR [RAX+24]
.L_40aff6:

            mov EAX,DWORD PTR [RBP-3136]
            test EAX,EAX
            jle .L_40c53f

            mov EDX,DWORD PTR [RBP-3120]
            mov EAX,R13D
            mov DWORD PTR [RBP-2920],0
            and EAX,1
            mov DWORD PTR [RBP-3140],0
            mov DWORD PTR [RBP-2912],0
            mov BYTE PTR [RBP-2984],AL
            mov EAX,EDX
            sar EDX,2
            sar EAX,1
            mov DWORD PTR [RBP-2988],EDX
            and EAX,1
            mov DWORD PTR [RBP-2976],EAX
            mov RAX,QWORD PTR [RBP-3024]
            mov QWORD PTR [RBP-3064],RAX
            mov RAX,QWORD PTR [RBP-3016]
            mov QWORD PTR [RBP-3032],RAX
            lea RAX,QWORD PTR [RBP-1472]
            mov QWORD PTR [RBP-2952],RAX
            sub RAX,-128
            mov QWORD PTR [RBP-3072],RAX
.L_40b07f:

            mov EAX,DWORD PTR [RBP-3132]
            test EAX,EAX
            jle .L_40bcce

            movsxd RDX,DWORD PTR [RBP-3140]
            sub EAX,1
            mov DWORD PTR [RBP-2888],0
            lea RAX,QWORD PTR [RDX+RAX*1+1]
            mov QWORD PTR [RBP-3112],RDX
            mov QWORD PTR [RBP-3176],RAX
            lea RAX,QWORD PTR [RBP-2624]
            mov QWORD PTR [RBP-3096],RAX
            lea RAX,QWORD PTR [RBP-2240]
            mov QWORD PTR [RBP-3104],RAX
.L_40b0d0:

            mov RAX,QWORD PTR [RBP-3112]
            mov RDI,QWORD PTR [RBP-3096]
            mov ECX,48
            xor EBX,EBX
            mov DWORD PTR [RBP-3152],EAX
            sub EAX,DWORD PTR [RBP-3140]
            mov DWORD PTR [RBP-2960],EAX
            xor EAX,EAX

            rep stosq QWORD PTR [RDI]

            mov RDI,QWORD PTR [RBP-3104]
            mov ECX,48

            rep stosq QWORD PTR [RDI]
.L_40b10b:

            mov EAX,DWORD PTR [RBP-3120]
            bt EAX,EBX
            jae .L_40b1f6

            lea RAX,QWORD PTR [RBX+RBX*4]
            lea RDI,QWORD PTR [RBX+RAX*4]
            shl RDI,4
            add RDI,QWORD PTR [R14+8]
            cmp R15D,DWORD PTR [RDI+8]
            jne .L_40ee55

            mov EAX,DWORD PTR [RBP-2908]
            cmp EAX,DWORD PTR [RDI+12]
            jne .L_40ee36

            mov RAX,QWORD PTR [RBP-3096]
            mov R12,RBX
            mov R13D,DWORD PTR [RBP-2912]
            shl R12,7
            mov ESI,DWORD PTR [RBP-2960]
            lea RCX,QWORD PTR [RAX+R12*1]
            mov EDX,R13D
.L_40b165:

            call .L_4223e0
.L_40b16a:

            mov RAX,QWORD PTR [RBP-3128]
            mov RDX,RBX
            add R12,QWORD PTR [RBP-3104]
            shl RDX,6
            add RDX,QWORD PTR [RAX+128]
            mov EAX,DWORD PTR [RDX+24]
            mov RDX,QWORD PTR [RDX+40]
            imul EAX,R13D
            add EAX,DWORD PTR [RBP-2960]
            shl EAX,6
            cdqe 
            lea RAX,QWORD PTR [RDX+RAX*2]
            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [R12],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [R12+16],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movups XMMWORD PTR [R12+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+48]
            movups XMMWORD PTR [R12+48],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+64]
            movups XMMWORD PTR [R12+64],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+80]
            movups XMMWORD PTR [R12+80],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+96]
            movups XMMWORD PTR [R12+96],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+112]
            movups XMMWORD PTR [R12+112],XMM0
.L_40b1f6:

            add RBX,1
            cmp RBX,3
            jne .L_40b10b

            lea RAX,QWORD PTR [RIP+.L_4159a0]
            pxor XMM0,XMM0
            mov R13,QWORD PTR [RBP-3096]
            mov QWORD PTR [RBP-2656],0
            xor R12D,R12D
            mov QWORD PTR [RBP-2928],RAX
            mov RAX,QWORD PTR [RBP-3104]
            movaps XMMWORD PTR [RBP-2672],XMM0
            mov QWORD PTR [RBP-2936],1
            mov DWORD PTR [RBP-2944],0
            mov QWORD PTR [RBP-2896],RAX
.L_40b255:

            mov EAX,DWORD PTR [RBP-3120]
            mov EDX,DWORD PTR [RBP-2944]
            mov EBX,1
            bt EAX,EDX
            jb .L_40b76d
.L_40b26f:

            add DWORD PTR [RBP-2944],1
            sub R13,-128
            add QWORD PTR [RBP-2936],64
            mov EAX,DWORD PTR [RBP-2944]
            add R12,64
            add QWORD PTR [RBP-2928],8
            sub QWORD PTR [RBP-2896],-128
            cmp EAX,3
            jne .L_40b255

            mov RBX,QWORD PTR [RBP-2664]
            mov R12,QWORD PTR [RBP-2672]
            cmp RBX,R12
            je .L_40b3d4

            mov R13,RBX
            sub RSP,8
            mov EDX,63
            sub R13,R12
            push 0
            mov RSI,RBX
            mov RAX,R13
            mov RDI,R12
            sar RAX,3
            bsr RAX,RAX
            xor RAX,63
            cdqe 
            sub RDX,RAX
            add RDX,RDX
            call .L_409bf0

            add R13,-128
            lea RDX,QWORD PTR [R12+8]
            pop R11
            pop RAX
            jle .L_40c2d0

            mov EAX,DWORD PTR [RBP-2888]
            mov RDI,-8
            lea RCX,QWORD PTR [R12+128]
            sub RDI,R12
            mov R11D,EAX
.L_40b318:

            movss XMM1,DWORD PTR [RDX+4]
            lea RSI,QWORD PTR [RDX+8]
            mov R9D,DWORD PTR [RSI-8]
            movss XMM0,DWORD PTR [R12+4]
            ucomiss XMM0,XMM1
            jbe .L_40c0e9

            lea R8,QWORD PTR [RSI+RDI*1]
            mov RAX,RSI
            mov RDX,R8
            sar RDX,3
            test R8,R8
            jle .L_40b363
.L_40b348:

            sub RAX,8
            mov R8D,DWORD PTR [RAX-8]
            sub RDX,1
            movss XMM0,DWORD PTR [RAX-4]
            movss DWORD PTR [RAX+4],XMM0
            mov DWORD PTR [RAX],R8D
            jne .L_40b348
.L_40b363:

            movss DWORD PTR [R12+4],XMM1
            mov DWORD PTR [R12],R9D
.L_40b36e:

            cmp RCX,RSI
            mov RDX,RSI
            jne .L_40b318

            cmp RBX,RCX
            mov DWORD PTR [RBP-2888],R11D
            je .L_40b3d4

            mov EDX,R11D
.L_40b385:

            movss XMM1,DWORD PTR [RCX+4]
            mov RSI,RCX
            mov EDI,DWORD PTR [RCX]
            movss XMM0,DWORD PTR [RCX-4]
            lea RAX,QWORD PTR [RCX-8]
            ucomiss XMM0,XMM1
            jbe .L_40b3be

            mov R8D,EDX
.L_40b3a0:

            mov EDX,DWORD PTR [RAX]
            movss DWORD PTR [RAX+12],XMM0
            mov RSI,RAX
            sub RAX,8
            mov DWORD PTR [RAX+16],EDX
            movss XMM0,DWORD PTR [RAX+4]
            ucomiss XMM0,XMM1
            ja .L_40b3a0

            mov EDX,R8D
.L_40b3be:

            add RCX,8
            mov DWORD PTR [RSI],EDI
            movss DWORD PTR [RSI+4],XMM1
            cmp RBX,RCX
            jne .L_40b385

            mov DWORD PTR [RBP-2888],EDX
.L_40b3d4:

            lea RDI,QWORD PTR [RBP-1856]
            mov RAX,QWORD PTR [RBP-2904]
            mov ECX,48
            mov RSI,QWORD PTR [RBP-3096]
            mov R8D,DWORD PTR [RBP-2908]
            mov QWORD PTR [RBP-2968],RDI
            mov EDX,DWORD PTR [RBP-2912]

            rep movsq 

            mov RDI,QWORD PTR [RAX+16]
            mov ECX,R15D
            mov ESI,DWORD PTR [RBP-2960]
            mov RAX,QWORD PTR [RDI]
.L_40b415:

            call QWORD PTR [RAX+40]

            mov RAX,QWORD PTR [RBP-3000]
            mov QWORD PTR [RBP-3008],RAX
.L_40b426:

            mov RCX,QWORD PTR [RBP-2664]
            mov RDX,QWORD PTR [RBP-2672]
            cmp RCX,RDX
            je .L_40b97b

            mov RSI,QWORD PTR [RBP-2904]
            mov RAX,RCX
            sub RAX,RDX
            sar RAX,3
            movsxd RSI,DWORD PTR [RSI+8]
            cmp RAX,RSI
            cmova RAX,RSI
            test RAX,RAX
            je .L_40c098

            mov RAX,QWORD PTR [RBP-2952]
            movss XMM2,DWORD PTR [RIP+.L_415d08]
            movss DWORD PTR [RBP-2936],XMM2
            mov DWORD PTR [RBP-2944],0
            mov QWORD PTR [RBP-2928],0
            add RAX,256
            mov QWORD PTR [RBP-3040],RAX
            nop
            nop
            nop
            nop
            nop
.L_40b4a0:

            mov ECX,48
            mov RDI,QWORD PTR [RBP-2952]
            mov RSI,QWORD PTR [RBP-2968]
            mov RAX,QWORD PTR [RBP-2928]
            xor R10D,R10D
            cmp BYTE PTR [RBP-2984],0

            rep movsq 

            movsxd RAX,DWORD PTR [RDX+RAX*8]
            mov WORD PTR [RBP+RAX*2-1472],R10W
            jne .L_40b850
.L_40b4da:

            mov R9D,DWORD PTR [RBP-2976]
            test R9D,R9D
            jne .L_40b820
.L_40b4ea:

            mov R8D,DWORD PTR [RBP-2988]
            test R8D,R8D
            jne .L_40b7f0
.L_40b4fa:

            mov EDI,DWORD PTR [RBP-2908]
            mov DWORD PTR [RBP-2896],0
            test EDI,EDI
            jle .L_40b595

            xor R13D,R13D
            nop
            nop
            nop
.L_40b518:

            test R15D,R15D
            jle .L_40b588

            mov EAX,DWORD PTR [RBP-2920]
            xor EBX,EBX
            lea R12D,DWORD PTR [R13+RAX*1]
            shl R12D,3
            jmp .L_40b538
.L_40b530:

            add EBX,1
            cmp R15D,EBX
            je .L_40b588
.L_40b538:

            mov EAX,DWORD PTR [RBP-2888]
            add EAX,EBX
            shl EAX,3
            cmp DWORD PTR [R14],EAX
            jle .L_40b530

            cmp DWORD PTR [R14+4],R12D
            jle .L_40b530

            mov RAX,QWORD PTR [RBP-2904]
            mov ECX,R13D
            mov EDX,EBX
            mov RSI,R14
            mov RDI,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RDI]
            call QWORD PTR [RAX+48]

            cvtsd2ss XMM0,XMM0
            maxss XMM0,DWORD PTR [RBP-2896]
            add EBX,1
            cmp R15D,EBX
            movss DWORD PTR [RBP-2896],XMM0
            jne .L_40b538

            nop
            nop
            nop
            nop
            nop
.L_40b588:

            add R13D,1
            cmp DWORD PTR [RBP-2908],R13D
            jne .L_40b518
.L_40b595:

            movss XMM6,DWORD PTR [RBP-2936]
            mov RDI,QWORD PTR [RBP-2928]
            movss XMM5,DWORD PTR [RBP-2896]
            mov EAX,DWORD PTR [RBP-2944]
            ucomiss XMM6,XMM5
            mov RSI,QWORD PTR [RBP-2904]
            mov RCX,QWORD PTR [RBP-2664]
            minss XMM5,XMM6
            mov RDX,QWORD PTR [RBP-2672]
            cmova EAX,EDI
            movsxd RSI,DWORD PTR [RSI+8]
            add RDI,1
            mov DWORD PTR [RBP-2944],EAX
            mov RAX,RCX
            movss DWORD PTR [RBP-2936],XMM5
            sub RAX,RDX
            mov QWORD PTR [RBP-2928],RDI
            sar RAX,3
            cmp RAX,RSI
            cmova RAX,RSI
            cmp RDI,RAX
            jb .L_40b4a0

            movsxd RAX,DWORD PTR [RBP-2944]
            shl RAX,3
.L_40b613:

            add RDX,RAX
            xor ESI,ESI
            movsxd RAX,DWORD PTR [RDX]
            mov RBX,RAX
            mov WORD PTR [RBP+RAX*2-1856],SI
            lea RAX,QWORD PTR [RDX+8]
            cmp RAX,RCX
            je .L_40b673

            mov RDI,RCX
            sub RDI,RAX
            mov RSI,RDI
            sar RSI,3
            test RDI,RDI
            jle .L_40b673

            mov EDI,DWORD PTR [RBP-2888]
            mov R8D,EDI
            jmp .L_40b654
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40b650:

            add RAX,8
.L_40b654:

            mov EDI,DWORD PTR [RDX+8]
            movss XMM0,DWORD PTR [RDX+12]
            sub RSI,1
            movss DWORD PTR [RDX+4],XMM0
            mov DWORD PTR [RDX],EDI
            mov RDX,RAX
            jne .L_40b650

            mov DWORD PTR [RBP-2888],R8D
.L_40b673:

            sub RCX,8
            mov RDX,QWORD PTR [RBP-3048]
            cmp QWORD PTR [RBP-3008],RDX
            mov QWORD PTR [RBP-2664],RCX
            je .L_40b8c1

            mov RAX,QWORD PTR [RBP-3008]
            test RAX,RAX
            je .L_40b6ad

            movss XMM2,DWORD PTR [RBP-2936]
            mov DWORD PTR [RAX],EBX
            movss DWORD PTR [RAX+4],XMM2
.L_40b6ad:

            add QWORD PTR [RBP-3008],8
.L_40b6b5:

            cmp BYTE PTR [RBP-2984],0
            jne .L_40b8a0
.L_40b6c2:

            mov EAX,DWORD PTR [RBP-2976]
            test EAX,EAX
            jne .L_40b871
.L_40b6d0:

            mov EAX,DWORD PTR [RBP-2988]
            test EAX,EAX
            je .L_40b426

            mov RAX,QWORD PTR [RBP-2968]
            mov EDX,DWORD PTR [RBP-2912]
            mov ESI,DWORD PTR [RBP-2960]
            lea RCX,QWORD PTR [RAX+256]
            mov RAX,QWORD PTR [R14+8]
            lea RDI,QWORD PTR [RAX+672]
            call .L_423300

            jmp .L_40b426
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40b710:

            pxor XMM0,XMM0
            mov RSI,QWORD PTR [RBP-2936]
            cvtsi2ss XMM0,EAX
            lea RCX,QWORD PTR [RSI+RBX*1]
            lea RAX,QWORD PTR [RIP+.L_41569c]
            mulss XMM0,DWORD PTR [RAX+RCX*4]
            lea RAX,QWORD PTR [RIP+.L_41539c]
            addss XMM0,DWORD PTR [RAX+RCX*4]
.L_40b73b:

            lea RAX,QWORD PTR [RBP-2672]
            lea RSI,QWORD PTR [RBP-2704]
            mov DWORD PTR [RBP-2704],EDX
            movss DWORD PTR [RBP-2700],XMM0
            mov RDI,RAX
            call .L_4149d0
.L_40b75f:

            add RBX,1
            cmp RBX,64
            je .L_40b26f
.L_40b76d:

            cmp WORD PTR [R13+RBX*2],0
            lea EDX,DWORD PTR [R12+RBX*1]
            je .L_40b75f

            mov RAX,QWORD PTR [RBP-2896]
            mov RSI,QWORD PTR [RBP-2904]
            movsx EAX,WORD PTR [RAX+RBX*2]
            mov ECX,EAX
            sar ECX,31
            xor EAX,ECX
            sub EAX,ECX
            cmp BYTE PTR [RSI+12],0
            jne .L_40b710

            pxor XMM0,XMM0
            pxor XMM1,XMM1
            cvtsi2sd XMM0,EAX
            lea RAX,QWORD PTR [RIP+.L_415a00]
            cvtsi2sd XMM1,DWORD PTR [RAX+RBX*4]
            mulsd XMM1,QWORD PTR [RIP+.L_415cb0]
            mov RAX,QWORD PTR [RBP-2928]
            subsd XMM0,XMM1
            pxor XMM1,XMM1
            mulsd XMM0,QWORD PTR [RAX]
            lea RAX,QWORD PTR [RIP+.L_4159c0]
            movzx EAX,BYTE PTR [RAX+RBX*1]
            cvtsi2sd XMM1,EAX
            divsd XMM0,XMM1
            cvtsd2ss XMM0,XMM0
            jmp .L_40b73b
          .byte 0x66
          .byte 0x90
.L_40b7f0:

            mov RAX,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [RBP-3040]
            mov EDX,DWORD PTR [RBP-2912]
            mov ESI,DWORD PTR [RBP-2960]
            lea RDI,QWORD PTR [RAX+672]
            call .L_423300

            jmp .L_40b4fa
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b820:

            mov RAX,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [RBP-3072]
            mov EDX,DWORD PTR [RBP-2912]
            mov ESI,DWORD PTR [RBP-2960]
            lea RDI,QWORD PTR [RAX+336]
            call .L_423300

            jmp .L_40b4ea
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b850:

            mov RDI,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [RBP-2952]
            mov EDX,DWORD PTR [RBP-2912]
            mov ESI,DWORD PTR [RBP-2960]
            call .L_423300

            jmp .L_40b4da
.L_40b871:

            mov RAX,QWORD PTR [RBP-2968]
            mov EDX,DWORD PTR [RBP-2912]
            mov ESI,DWORD PTR [RBP-2960]
            lea RCX,QWORD PTR [RAX+128]
            mov RAX,QWORD PTR [R14+8]
            lea RDI,QWORD PTR [RAX+336]
            call .L_423300

            jmp .L_40b6d0
.L_40b8a0:

            mov RDI,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [RBP-2968]
            mov EDX,DWORD PTR [RBP-2912]
            mov ESI,DWORD PTR [RBP-2960]
            call .L_423300

            jmp .L_40b6c2
.L_40b8c1:

            mov RAX,QWORD PTR [RBP-3008]
            mov QWORD PTR [RBP-2896],RAX
            sub RAX,QWORD PTR [RBP-3000]
            mov R13,RAX
            sar RAX,3
            test RAX,RAX
            je .L_40c170

            lea RDX,QWORD PTR [RAX+RAX*1]
            mov R12,-8
            cmp RAX,RDX
            jbe .L_40c298
.L_40b8fa:

            mov RDI,R12
            call _Znwm@PLT

            mov RCX,RAX
            lea RAX,QWORD PTR [RAX+R12*1]
            mov QWORD PTR [RBP-3048],RAX
.L_40b910:

            mov RAX,RCX
            add RAX,R13
            je .L_40b927

            movss XMM7,DWORD PTR [RBP-2936]
            mov DWORD PTR [RAX],EBX
            movss DWORD PTR [RAX+4],XMM7
.L_40b927:

            mov RSI,QWORD PTR [RBP-3000]
            cmp QWORD PTR [RBP-2896],RSI
            lea RAX,QWORD PTR [RCX+R13*1+8]
            mov QWORD PTR [RBP-3008],RAX
            je .L_40c17b

            mov RDI,RCX
            mov RDX,R13
            call memmove@PLT

            mov RCX,RAX
.L_40b955:

            mov RDI,QWORD PTR [RBP-3000]
            mov QWORD PTR [RBP-2896],RCX
            call _ZdlPv@PLT

            mov RCX,QWORD PTR [RBP-2896]
.L_40b96f:

            mov QWORD PTR [RBP-3000],RCX
            jmp .L_40b6b5
.L_40b97b:

            mov RAX,QWORD PTR [RBP-3008]
            sub RAX,QWORD PTR [RBP-3000]
            movss XMM1,DWORD PTR [RIP+.L_415d0c]
            mov QWORD PTR [RBP-2928],RAX
            sar RAX,3
            lea EDX,DWORD PTR [RAX-1]
            mov R13,RAX
            test EDX,EDX
            movsxd RAX,EDX
            js .L_40b9eb

            mov ESI,DWORD PTR [RBP-2888]
            mov RDX,QWORD PTR [RBP-3000]
.L_40b9b6:

            movss XMM0,DWORD PTR [RDX+RAX*8+4]
            ucomiss XMM1,XMM0
            jbe .L_40b9d7
.L_40b9c1:

            sub RAX,1
            test EAX,EAX
            js .L_40b9e5

            movaps XMM1,XMM0
            movss XMM0,DWORD PTR [RDX+RAX*8+4]
            ucomiss XMM1,XMM0
            ja .L_40b9c1
.L_40b9d7:

            movss DWORD PTR [RDX+RAX*8+4],XMM1
            sub RAX,1
            test EAX,EAX
            jns .L_40b9b6
.L_40b9e5:

            mov DWORD PTR [RBP-2888],ESI
.L_40b9eb:

            xor R12D,R12D
            test R13,R13
            mov RBX,QWORD PTR [RBP-3000]
            jne .L_40ba09

            jmp .L_40ba48
.L_40b9fc:

            add R12,1
            add RBX,8
            cmp R12,R13
            je .L_40ba48
.L_40ba09:

            mov RAX,QWORD PTR [RBP-2904]
            movss XMM3,DWORD PTR [RBX+4]
            movss DWORD PTR [RBP-2896],XMM3
            mov RDI,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RDI]
            call QWORD PTR [RAX+88]
.L_40ba27:

            ucomiss XMM0,DWORD PTR [RBP-2896]
            jae .L_40b9fc

            cmp R13,R12
            jb .L_40c220

            cmovbe RBX,QWORD PTR [RBP-3008]
            mov QWORD PTR [RBP-3008],RBX
.L_40ba48:

            cmp BYTE PTR [RBP-2984],0
            jne .L_40c1ff
.L_40ba55:

            mov R13D,DWORD PTR [RBP-2976]
            test R13D,R13D
            jne .L_40c1d0
.L_40ba65:

            mov R12D,DWORD PTR [RBP-2988]
            test R12D,R12D
            jne .L_40c1a1
.L_40ba75:

            mov RDI,QWORD PTR [RBP-2672]
            test RDI,RDI
            je .L_40ba86

            call _ZdlPv@PLT
.L_40ba86:

            mov RAX,QWORD PTR [RBP-3032]
            sub RAX,QWORD PTR [RBP-3016]
            xor R12D,R12D
            mov RCX,QWORD PTR [RBP-3080]
            mov RSI,QWORD PTR [RBP-3112]
            mov DWORD PTR [RCX+RSI*4],EAX
            mov RAX,QWORD PTR [RBP-3008]
            sub RAX,QWORD PTR [RBP-3000]
            sar RAX,3
            test RAX,RAX
            mov QWORD PTR [RBP-2896],RAX
            jne .L_40bb1e

            jmp .L_40bc9c
.L_40bacb:

            test RAX,RAX
            je .L_40bad2

            mov BYTE PTR [RAX],BL
.L_40bad2:

            add QWORD PTR [RBP-3032],1
            mov RAX,QWORD PTR [RBP-3064]
            cmp QWORD PTR [RBP-3056],RAX
            je .L_40bbe2
.L_40baee:

            test RAX,RAX
            je .L_40bb05

            mov RDX,QWORD PTR [RBP-3000]
            movss XMM0,DWORD PTR [RDX+R12*8+4]
            movss DWORD PTR [RAX],XMM0
.L_40bb05:

            add QWORD PTR [RBP-3064],4
            add R12,1
            cmp QWORD PTR [RBP-2896],R12
            je .L_40bc9c
.L_40bb1e:

            mov RAX,QWORD PTR [RBP-3000]
            mov EBX,DWORD PTR [RAX+R12*8]
            mov RAX,QWORD PTR [RBP-3032]
            cmp QWORD PTR [RBP-3088],RAX
            jne .L_40bacb

            mov R13,QWORD PTR [RBP-3088]
            sub R13,QWORD PTR [RBP-3016]
            cmp R13,-1
            je .L_40c4cb

            test R13,R13
            mov QWORD PTR [RBP-2928],1
            je .L_40bb7b

            lea RAX,QWORD PTR [R13+R13*1]
            mov RDX,-1
            cmp R13,RAX
            cmovbe RDX,RAX
            mov QWORD PTR [RBP-2928],RDX
.L_40bb7b:

            mov RDI,QWORD PTR [RBP-2928]
.L_40bb82:

            call _Znwm@PLT

            mov RCX,RAX
            mov RAX,QWORD PTR [RBP-2928]
            add RAX,RCX
            mov QWORD PTR [RBP-3088],RAX
            mov RAX,RCX
            add RAX,R13
            je .L_40bba5

            mov BYTE PTR [RAX],BL
.L_40bba5:

            test R13,R13
            jne .L_40c0a9

            cmp QWORD PTR [RBP-3016],0
            lea RAX,QWORD PTR [RCX+1]
            mov QWORD PTR [RBP-3032],RAX
            jne .L_40c0ca
.L_40bbc7:

            mov RAX,QWORD PTR [RBP-3064]
            cmp QWORD PTR [RBP-3056],RAX
            mov QWORD PTR [RBP-3016],RCX
            jne .L_40baee
.L_40bbe2:

            mov RAX,QWORD PTR [RBP-3056]
            mov QWORD PTR [RBP-2928],RAX
            sub RAX,QWORD PTR [RBP-3024]
            mov R13,RAX
            sar RAX,2
            test RAX,RAX
            jne .L_40c127

            mov EBX,4
.L_40bc0c:

            mov RDI,RBX
            call _Znwm@PLT
.L_40bc14:

            mov RCX,RAX
            lea RAX,QWORD PTR [RAX+RBX*1]
            mov QWORD PTR [RBP-3056],RAX
.L_40bc22:

            mov RAX,RCX
            add RAX,R13
            je .L_40bc3c

            mov RDX,QWORD PTR [RBP-3000]
            movss XMM0,DWORD PTR [RDX+R12*8+4]
            movss DWORD PTR [RAX],XMM0
.L_40bc3c:

            mov RSI,QWORD PTR [RBP-3024]
            cmp QWORD PTR [RBP-2928],RSI
            lea RAX,QWORD PTR [RCX+R13*1+4]
            mov QWORD PTR [RBP-3064],RAX
            je .L_40c18e

            mov RDI,RCX
            mov RDX,R13
            call memmove@PLT

            mov RCX,RAX
.L_40bc6a:

            mov RDI,QWORD PTR [RBP-3024]
            mov QWORD PTR [RBP-2928],RCX
            call _ZdlPv@PLT

            mov RCX,QWORD PTR [RBP-2928]
.L_40bc84:

            add R12,1
            cmp QWORD PTR [RBP-2896],R12
            mov QWORD PTR [RBP-3024],RCX
            jne .L_40bb1e
.L_40bc9c:

            mov EAX,DWORD PTR [RBP-3152]
            add QWORD PTR [RBP-3112],1
            mov RDX,QWORD PTR [RBP-3112]
            add DWORD PTR [RBP-2888],R15D
            add EAX,1
            cmp QWORD PTR [RBP-3176],RDX
            jne .L_40b0d0

            mov DWORD PTR [RBP-3140],EAX
.L_40bcce:

            add DWORD PTR [RBP-2912],1
            mov ESI,DWORD PTR [RBP-2908]
            mov EAX,DWORD PTR [RBP-2912]
            add DWORD PTR [RBP-2920],ESI
            cmp DWORD PTR [RBP-3136],EAX
            jne .L_40b07f
.L_40bcf3:

            mov RAX,QWORD PTR [RBP-2904]
            mov RDI,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RDI]
.L_40bd01:

            call QWORD PTR [RAX+32]

            movsxd RDX,DWORD PTR [RBP-2992]
            movsxd RBX,DWORD PTR [RBP-3184]
            mov RSI,QWORD PTR [RBP-3080]
            pxor XMM0,XMM0
            mov QWORD PTR [RBP-2816],0
            lea RAX,QWORD PTR [RDX*4]
            mov QWORD PTR [RBP-3120],RDX
            movaps XMMWORD PTR [RBP-2832],XMM0
            mov QWORD PTR [RBP-3152],RAX
            mov RAX,QWORD PTR [RBP-3032]
            sub RAX,QWORD PTR [RBP-3016]
            test RBX,RBX
            mov DWORD PTR [RSI+RDX*4],EAX
            je .L_40ed9f

            movabs RAX,17944303573647423
            cmp RBX,RAX
            ja .L_40ed9a

            mov RAX,RBX
            shl RAX,8
            add RAX,RBX
            lea RSI,QWORD PTR [RAX*4]
            mov RDI,RSI
            mov R13,RSI
            call _Znwm@PLT
.L_40bd8f:

            mov QWORD PTR [RBP-2888],RAX
            mov RSI,R13
            mov RDX,RAX
            movq XMM0,QWORD PTR [RBP-2888]
            add RSI,RAX
            punpcklqdq XMM0,XMM0
            mov QWORD PTR [RBP-2816],RSI
            xor EAX,EAX
            movaps XMMWORD PTR [RBP-2832],XMM0
.L_40bdbb:

            test RDX,RDX
            je .L_40c557
.L_40bdc4:

            lea RDI,QWORD PTR [RDX+8]
            mov RCX,RDX
            add RDX,1028
            mov QWORD PTR [RDX-8],0
            mov QWORD PTR [RDX-1028],0
            and RDI,-8
            sub RCX,RDI
            add ECX,1028
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RDX-4],1
            sub RBX,1
            jne .L_40bdbb
.L_40be05:

            mov RAX,RSI
.L_40be08:

            lea RBX,QWORD PTR [RBP-1472]
            mov RSI,QWORD PTR [RBP-3128]
            mov QWORD PTR [RBP-2824],RAX
            mov RDI,RBX
            mov QWORD PTR [RBP-2920],RBX
.L_40be27:

            call .L_4133b0
.L_40be2c:

            mov RSI,RBX
            mov RDI,R14
.L_40be32:

            call .L_426ba0

            mov RAX,QWORD PTR [RBP-2904]
            mov RDI,RBX
            movzx ESI,BYTE PTR [RAX+4]
            call .L_41c690

            mov QWORD PTR [RBP-2896],RAX
            mov RAX,QWORD PTR [RBP-1336]
            sub RAX,QWORD PTR [RBP-1344]
            sar RAX,6
            test RAX,RAX
            je .L_40ed80

            movabs RDX,17944303573647423
            cmp RAX,RDX
            ja .L_40ed7b

            mov R13,RAX
            shl R13,8
            mov R12,R13
            mov R13,RAX
            add R12,RAX
            shl R12,2
            mov RDI,R12
            call _Znwm@PLT
.L_40be9b:

            mov RBX,RAX
            mov RDX,RAX
            mov RSI,R13
            xor EAX,EAX
.L_40bea6:

            test RDX,RDX
            je .L_40ed61
.L_40beaf:

            lea RDI,QWORD PTR [RDX+8]
            mov RCX,RDX
            mov QWORD PTR [RDX+1020],0
            mov QWORD PTR [RDX],0
            add RDX,1028
            and RDI,-8
            sub RCX,RDI
            add ECX,1028
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov RCX,RSI
            mov DWORD PTR [RDX-4],1
            sub RCX,1
            mov RSI,RCX
            jne .L_40bea6
.L_40bef5:

            add R12,RBX
.L_40bef8:

            mov RDI,QWORD PTR [RBP-2920]
            mov RSI,RBX
.L_40bf02:

            call .L_41c420

            sub R12,RBX
            movabs RAX,-71777214294589695
            sar R12,2
            imul R12,RAX
            test R12,R12
            mov QWORD PTR [RBP-2736],R12
            je .L_40c5bd

            movabs RAX,4611686018427387903
            cmp R12,RAX
            ja .L_40c5b8

            shl R12,2
            mov RDI,R12
            call _Znwm@PLT
.L_40bf4b:

            mov R13,QWORD PTR [RBP-2736]
            xor ESI,ESI
            mov RDX,R12
            mov RDI,RAX
            mov QWORD PTR [RBP-2888],RAX
            call memset@PLT

            mov RAX,R13
            shl RAX,8
            add R13,RAX
            jne .L_40c5cd
.L_40bf76:

            mov R12,QWORD PTR [RBP-2888]
            lea RAX,QWORD PTR [RBP-2736]
            xor ECX,ECX
            mov RDI,RBX
            mov RSI,RAX
            mov QWORD PTR [RBP-3176],RAX
            mov RDX,R12
.L_40bf96:

            call .L_41ca90
.L_40bf9b:

            test R12,R12
            mov R13,RAX
            je .L_40bfaf
.L_40bfa3:

            mov RDI,QWORD PTR [RBP-2888]
            call _ZdlPv@PLT
.L_40bfaf:

            test RBX,RBX
            je .L_40bfbc

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40bfbc:

            mov RSI,QWORD PTR [RBP-2832]
            mov RDI,QWORD PTR [RBP-2920]
.L_40bfca:

            call .L_41c580
.L_40bfcf:

            mov RAX,QWORD PTR [RBP-2920]
            mov RDI,QWORD PTR [RBP-1248]
            add RAX,240
            cmp RDI,RAX
            je .L_40bfed

            call _ZdlPv@PLT
.L_40bfed:

            mov RAX,QWORD PTR [RBP-1264]
            mov RBX,QWORD PTR [RBP-1272]
            cmp RAX,RBX
            je .L_40c028

            mov R12,RAX
.L_40c003:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40c628

            add RBX,32
            call _ZdlPv@PLT

            cmp R12,RBX
            jne .L_40c003
.L_40c021:

            mov RBX,QWORD PTR [RBP-1272]
.L_40c028:

            test RBX,RBX
            je .L_40c035

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40c035:

            mov RDI,QWORD PTR [RBP-1296]
            test RDI,RDI
            je .L_40c046

            call _ZdlPv@PLT
.L_40c046:

            mov RAX,QWORD PTR [RBP-1312]
            mov RDI,QWORD PTR [RBP-1320]
            cmp RAX,RDI
            je .L_40c655

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea RAX,QWORD PTR [RDI+RAX*8+40]
            mov R12,RAX
.L_40c070:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            je .L_40c642

            call _ZdlPv@PLT

            cmp RBX,R12
            mov RDI,RBX
            je .L_40c64e
.L_40c08e:

            add RBX,40
            jmp .L_40c070
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40c098:

            xor EAX,EAX
            mov DWORD PTR [RBP-2936],1538368188
            jmp .L_40b613
.L_40c0a9:

            mov RSI,QWORD PTR [RBP-3016]
            mov RDI,RCX
            mov RDX,R13
            call memmove@PLT

            mov RCX,RAX
            lea RAX,QWORD PTR [RAX+R13*1+1]
            mov QWORD PTR [RBP-3032],RAX
.L_40c0ca:

            mov RDI,QWORD PTR [RBP-3016]
            mov QWORD PTR [RBP-2928],RCX
            call _ZdlPv@PLT

            mov RCX,QWORD PTR [RBP-2928]
            jmp .L_40bbc7
.L_40c0e9:

            movss XMM0,DWORD PTR [RSI-12]
            lea RAX,QWORD PTR [RDX-8]
            ucomiss XMM0,XMM1
            jbe .L_40c11a

            mov R10D,R11D
.L_40c0fa:

            mov R8D,DWORD PTR [RAX]
            movss DWORD PTR [RAX+12],XMM0
            mov RDX,RAX
            sub RAX,8
            mov DWORD PTR [RAX+16],R8D
            movss XMM0,DWORD PTR [RAX+4]
            ucomiss XMM0,XMM1
            ja .L_40c0fa

            mov R11D,R10D
.L_40c11a:

            mov DWORD PTR [RDX],R9D
            movss DWORD PTR [RDX+4],XMM1
            jmp .L_40b36e
.L_40c127:

            lea RDX,QWORD PTR [RAX+RAX*1]
            cmp RAX,RDX
            ja .L_40c28c

            movabs RSI,4611686018427387903
            mov RBX,-4
            cmp RDX,RSI
            ja .L_40bc0c

            test RDX,RDX
            jne .L_40c48f

            mov QWORD PTR [RBP-3056],0
            xor ECX,ECX
            jmp .L_40bc22
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c170:

            mov R12D,8
            jmp .L_40b8fa
.L_40c17b:

            cmp QWORD PTR [RBP-3000],0
            je .L_40b96f

            jmp .L_40b955
.L_40c18e:

            cmp QWORD PTR [RBP-3024],0
            je .L_40bc84

            jmp .L_40bc6a
.L_40c1a1:

            mov RAX,QWORD PTR [RBP-3096]
            mov EDX,DWORD PTR [RBP-2912]
            mov ESI,DWORD PTR [RBP-2960]
            lea RCX,QWORD PTR [RAX+256]
            mov RAX,QWORD PTR [R14+8]
            lea RDI,QWORD PTR [RAX+672]
.L_40c1c6:

            call .L_423300

            jmp .L_40ba75
.L_40c1d0:

            mov RAX,QWORD PTR [RBP-3096]
            mov EDX,DWORD PTR [RBP-2912]
            mov ESI,DWORD PTR [RBP-2960]
            lea RCX,QWORD PTR [RAX+128]
            mov RAX,QWORD PTR [R14+8]
            lea RDI,QWORD PTR [RAX+336]
            call .L_423300

            jmp .L_40ba65
.L_40c1ff:

            mov RDI,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [RBP-3096]
            mov EDX,DWORD PTR [RBP-2912]
            mov ESI,DWORD PTR [RBP-2960]
            call .L_423300

            jmp .L_40ba55
.L_40c220:

            mov RBX,R12
            sub RBX,R13
            je .L_40ba48

            mov RAX,QWORD PTR [RBP-3048]
            mov RDX,QWORD PTR [RBP-3008]
            sub RAX,RDX
            sar RAX,3
            cmp RBX,RAX
            ja .L_40c395

            mov ECX,DWORD PTR [RBP-2888]
            mov RAX,RDX
            mov RDX,RBX
            mov ESI,ECX
.L_40c258:

            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+4],0
            add RAX,8
            sub RDX,1
            jne .L_40c258

            mov RAX,QWORD PTR [RBP-3008]
            mov DWORD PTR [RBP-2888],ESI
            lea RAX,QWORD PTR [RAX+RBX*8]
            mov QWORD PTR [RBP-3008],RAX
            jmp .L_40ba48
.L_40c28c:

            mov RBX,-4
            jmp .L_40bc0c
.L_40c298:

            movabs RCX,2305843009213693951
            cmp RDX,RCX
            ja .L_40b8fa

            test RDX,RDX
            jne .L_40c389

            mov QWORD PTR [RBP-3048],0
            xor ECX,ECX
            jmp .L_40b910
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c2d0:

            cmp RBX,RDX
            je .L_40b3d4

            mov EAX,DWORD PTR [RBP-2888]
            mov RSI,-8
            sub RSI,R12
            mov R11D,EAX
.L_40c2ec:

            movss XMM1,DWORD PTR [RDX+4]
            lea RCX,QWORD PTR [RDX+8]
            mov R8D,DWORD PTR [RCX-8]
            movss XMM0,DWORD PTR [R12+4]
            ucomiss XMM0,XMM1
            jbe .L_40c350

            lea RDI,QWORD PTR [RCX+RSI*1]
            mov RAX,RCX
            mov RDX,RDI
            sar RDX,3
            test RDI,RDI
            jle .L_40c331
.L_40c318:

            sub RAX,8
            mov EDI,DWORD PTR [RAX-8]
            sub RDX,1
            movss XMM0,DWORD PTR [RAX-4]
            movss DWORD PTR [RAX+4],XMM0
            mov DWORD PTR [RAX],EDI
            jne .L_40c318
.L_40c331:

            movss DWORD PTR [R12+4],XMM1
            mov DWORD PTR [R12],R8D
.L_40c33c:

            cmp RBX,RCX
            mov RDX,RCX
            jne .L_40c2ec

            mov DWORD PTR [RBP-2888],R11D
            jmp .L_40b3d4
.L_40c350:

            movss XMM0,DWORD PTR [RCX-12]
            lea RAX,QWORD PTR [RDX-8]
            ucomiss XMM0,XMM1
            jbe .L_40c37f

            mov R10D,R11D
.L_40c361:

            mov EDI,DWORD PTR [RAX]
            movss DWORD PTR [RAX+12],XMM0
            mov RDX,RAX
            sub RAX,8
            mov DWORD PTR [RAX+16],EDI
            movss XMM0,DWORD PTR [RAX+4]
            ucomiss XMM0,XMM1
            ja .L_40c361

            mov R11D,R10D
.L_40c37f:

            mov DWORD PTR [RDX],R8D
            movss DWORD PTR [RDX+4],XMM1
            jmp .L_40c33c
.L_40c389:

            shl RAX,4
            mov R12,RAX
            jmp .L_40b8fa
.L_40c395:

            movabs RDX,2305843009213693951
            mov RAX,RDX
            sub RAX,R13
            cmp RBX,RAX
            ja .L_40c4bf

            cmp RBX,R13
            mov RAX,R13
            cmovae RAX,RBX
            add R13,RAX
            setb AL
            cmp R13,RDX
            movzx EAX,AL
            ja .L_40c4a8

            test RAX,RAX
            jne .L_40c4a8

            test R13,R13
            je .L_40c47c

            lea RAX,QWORD PTR [R13*8]
            mov QWORD PTR [RBP-2896],RAX
            mov RDI,RAX
.L_40c3ee:

            call _Znwm@PLT

            mov R13,RAX
            mov RAX,QWORD PTR [RBP-2896]
            add RAX,R13
            mov QWORD PTR [RBP-3048],RAX
.L_40c407:

            mov RAX,QWORD PTR [RBP-2928]
            mov ESI,DWORD PTR [RBP-2888]
            add RAX,R13
            mov ECX,ESI
            lea RDX,QWORD PTR [RAX+RBX*8]
.L_40c41d:

            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+4],0
            add RAX,8
            cmp RAX,RDX
            jne .L_40c41d

            mov RSI,QWORD PTR [RBP-3000]
            cmp QWORD PTR [RBP-3008],RSI
            mov DWORD PTR [RBP-2888],ECX
            je .L_40c49c

            mov RDX,QWORD PTR [RBP-2928]
            mov RDI,R13
            call memmove@PLT
.L_40c458:

            mov RDI,QWORD PTR [RBP-3000]
            call _ZdlPv@PLT
.L_40c464:

            lea RAX,QWORD PTR [R13+R12*8]
            mov QWORD PTR [RBP-3000],R13
            mov QWORD PTR [RBP-3008],RAX
            jmp .L_40ba48
.L_40c47c:

            mov QWORD PTR [RBP-3048],0
            xor R13D,R13D
            jmp .L_40c407
.L_40c48f:

            lea RBX,QWORD PTR [RAX*8]
            jmp .L_40bc0c
.L_40c49c:

            cmp QWORD PTR [RBP-3000],0
            jne .L_40c458

            jmp .L_40c464
.L_40c4a8:

            mov QWORD PTR [RBP-2896],-8
            mov RDI,QWORD PTR [RBP-2896]
            jmp .L_40c3ee
.L_40c4bf:

            lea RDI,QWORD PTR [RIP+.L_413155]
            call _ZSt20__throw_length_errorPKc@PLT
.L_40c4cb:

            lea RDI,QWORD PTR [RIP+.L_41318c]
.L_40c4d2:

            call _ZSt20__throw_length_errorPKc@PLT
.L_40c4d7:

            mov RDI,QWORD PTR [RBP-2672]
            mov RBX,RAX
            test RDI,RDI
            je .L_40c4eb
.L_40c4e6:

            call _ZdlPv@PLT
.L_40c4eb:

            cmp QWORD PTR [RBP-3000],0
            je .L_40c501
.L_40c4f5:

            mov RDI,QWORD PTR [RBP-3000]
            call _ZdlPv@PLT
.L_40c501:

            mov RDI,QWORD PTR [RBP-3024]
            test RDI,RDI
            je .L_40c512

            call _ZdlPv@PLT
.L_40c512:

            mov RDI,QWORD PTR [RBP-3016]
            test RDI,RDI
            je .L_40c523

            call _ZdlPv@PLT
.L_40c523:

            mov RAX,QWORD PTR [RBP-3080]
            test RAX,RAX
            je .L_40c537

            mov RDI,RAX
            call _ZdlPv@PLT
.L_40c537:

            mov RDI,RBX
.L_40c53a:

            call _Unwind_Resume@PLT
.L_40c53f:

            mov RAX,QWORD PTR [RBP-3016]
            mov QWORD PTR [RBP-3032],RAX
            jmp .L_40bcf3
.L_40c552:

            mov RBX,RAX
            jmp .L_40c4f5
.L_40c557:

            sub RBX,1
            je .L_40be05

            mov EDX,1028
            jmp .L_40bdc4
.L_40c56b:

            mov R13,RAX
.L_40c56e:

            cmp QWORD PTR [RBP-2888],0
            mov R12,R13
            je .L_40c587
.L_40c57b:

            mov RDI,QWORD PTR [RBP-2888]
            call _ZdlPv@PLT
.L_40c587:

            test RBX,RBX
            je .L_40c594

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40c594:

            mov RBX,R12
.L_40c597:

            mov RDI,QWORD PTR [RBP-2920]
            call .L_401da0
.L_40c5a3:

            mov RDI,QWORD PTR [RBP-2832]
            test RDI,RDI
            jne .L_40c4e6

            jmp .L_40c4eb
.L_40c5b8:

            call _ZSt17__throw_bad_allocv@PLT
.L_40c5bd:

            mov QWORD PTR [RBP-2888],0
            jmp .L_40bf76
.L_40c5cd:

            mov RDI,R13
.L_40c5d0:

            call _Znwm@PLT
.L_40c5d5:

            mov RDX,R13
            xor ESI,ESI
            mov RDI,RAX
            mov R12,RAX
            call memset@PLT

            lea RAX,QWORD PTR [RBP-2736]
            mov RDX,QWORD PTR [RBP-2888]
            mov RCX,R12
            mov RDI,RBX
            mov RSI,RAX
            mov QWORD PTR [RBP-3176],RAX
.L_40c603:

            call .L_41ca90
.L_40c608:

            mov RDI,R12
            mov R13,RAX
            call _ZdlPv@PLT

            jmp .L_40bfa3
.L_40c618:

            mov RDI,R12
            mov R13,RAX
            call _ZdlPv@PLT

            jmp .L_40c56e
.L_40c628:

            add RBX,32
            cmp R12,RBX
            jne .L_40c003

            jmp .L_40c021
.L_40c63a:

            mov R12,RAX
            jmp .L_40c57b
.L_40c642:

            cmp RBX,R12
            mov RDI,RBX
            jne .L_40c08e
.L_40c64e:

            mov RDI,QWORD PTR [RBP-1320]
.L_40c655:

            test RDI,RDI
            je .L_40c65f

            call _ZdlPv@PLT
.L_40c65f:

            mov RAX,QWORD PTR [RBP-1336]
            mov RBX,QWORD PTR [RBP-1344]
            cmp RAX,RBX
            je .L_40c697

            mov R12,RAX
.L_40c675:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_40c79d

            add RBX,64
            call _ZdlPv@PLT

            cmp R12,RBX
            jne .L_40c675
.L_40c690:

            mov RBX,QWORD PTR [RBP-1344]
.L_40c697:

            test RBX,RBX
            je .L_40c6a4

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40c6a4:

            mov RSI,QWORD PTR [RBP-1368]
            mov RAX,QWORD PTR [RBP-1360]
            cmp RAX,RSI
            mov RDI,RSI
            je .L_40c752

            lea R12,QWORD PTR [RSI+56]
            movabs RDX,988218432520154551
            mov QWORD PTR [RBP-2888],RSI
            sub RAX,R12
            shr RAX,3
            imul RAX,RDX
            movabs RDX,2305843009213693951
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX*8]
            sub RDX,RAX
            mov RAX,RSI
            lea RBX,QWORD PTR [RSI+RDX*8]
.L_40c701:

            mov RDI,QWORD PTR [RAX+24]
            test RDI,RDI
            je .L_40c716

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBP-2888]
.L_40c716:

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_40c73c

            call _ZdlPv@PLT

            cmp R12,RBX
            mov QWORD PTR [RBP-2888],R12
            je .L_40c748
.L_40c72f:

            add R12,56
            mov RAX,QWORD PTR [RBP-2888]
            jmp .L_40c701
.L_40c73c:

            cmp R12,RBX
            mov QWORD PTR [RBP-2888],R12
            jne .L_40c72f
.L_40c748:

            mov RAX,QWORD PTR [RBP-1368]
            mov RDI,RAX
.L_40c752:

            test RDI,RDI
            je .L_40c75c

            call _ZdlPv@PLT
.L_40c75c:

            mov RAX,QWORD PTR [RBP-1384]
            mov RDI,QWORD PTR [RBP-1392]
            cmp RAX,RDI
            je .L_40c7be

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea RAX,QWORD PTR [RDI+RAX*8+40]
            mov R12,RAX
.L_40c782:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_40c7af

            call _ZdlPv@PLT

            cmp RBX,R12
            mov RDI,RBX
            je .L_40c7b7
.L_40c797:

            add RBX,40
            jmp .L_40c782
.L_40c79d:

            add RBX,64
            cmp R12,RBX
            jne .L_40c675

            jmp .L_40c690
.L_40c7af:

            cmp RBX,R12
            mov RDI,RBX
            jne .L_40c797
.L_40c7b7:

            mov RDI,QWORD PTR [RBP-1392]
.L_40c7be:

            test RDI,RDI
            je .L_40c7c8

            call _ZdlPv@PLT
.L_40c7c8:

            mov RAX,QWORD PTR [RBP-1408]
            mov RBX,QWORD PTR [RBP-1416]
            cmp RAX,RBX
            je .L_40c803

            mov R12,RAX
.L_40c7de:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40e1f6

            add RBX,32
            call _ZdlPv@PLT

            cmp R12,RBX
            jne .L_40c7de
.L_40c7fc:

            mov RBX,QWORD PTR [RBP-1416]
.L_40c803:

            test RBX,RBX
            je .L_40c810

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40c810:

            mov RAX,QWORD PTR [RBP-1432]
            mov RBX,QWORD PTR [RBP-1440]
            cmp RAX,RBX
            je .L_40c84b

            mov R12,RAX
.L_40c826:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40e208

            add RBX,32
            call _ZdlPv@PLT

            cmp RBX,R12
            jne .L_40c826
.L_40c844:

            mov RBX,QWORD PTR [RBP-1440]
.L_40c84b:

            test RBX,RBX
            je .L_40c858

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40c858:

            lea RAX,QWORD PTR [RBP-2832]
            pxor XMM0,XMM0
            lea RSI,QWORD PTR [RBP-2800]
            mov QWORD PTR [RBP-2784],0
            mov RDI,RAX
            mov QWORD PTR [RBP-3264],RAX
            movaps XMMWORD PTR [RBP-2800],XMM0
            mov QWORD PTR [RBP-3272],RSI
.L_40c88d:

            call .L_409d90

            mov EDX,DWORD PTR [RBP-2896]
            mov DWORD PTR [RBP-3140],EAX
            add EDX,R13D
            add EAX,EDX
            mov DWORD PTR [RBP-3184],EDX
            mov RDX,QWORD PTR [RBP-2832]
            cmp RDX,QWORD PTR [RBP-2824]
            mov DWORD PTR [RBP-3048],EAX
            je .L_40c932

            xor EBX,EBX
            xor R12D,R12D
            mov QWORD PTR [RBP-2888],0
            movabs R13,-71777214294589695
.L_40c8d9:

            mov RSI,QWORD PTR [RBP-2800]
            lea RDI,QWORD PTR [RDX+RBX*4]
            add RSI,RBX
            call .L_41be90

            add R12,RAX
            mov RDX,QWORD PTR [RBP-2832]
            mov RAX,QWORD PTR [RBP-2824]
            add QWORD PTR [RBP-2888],1
            add RBX,257
            mov RCX,QWORD PTR [RBP-2888]
            sub RAX,RDX
            sar RAX,2
            imul RAX,R13
            cmp RAX,RCX
            ja .L_40c8d9

            lea RAX,QWORD PTR [R12+7]
            shr RAX,3
            add DWORD PTR [RBP-3048],EAX
.L_40c932:

            mov RDX,QWORD PTR [RBP-3120]
            test RDX,RDX
            je .L_40ecd3

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_40ecce

            mov RBX,QWORD PTR [RBP-3152]
            mov RDI,RBX
            call _Znwm@PLT
.L_40c964:

            mov RDI,RAX
            mov RDX,RBX
            xor ESI,ESI
            mov QWORD PTR [RBP-2952],RAX
            call memset@PLT

            mov RDI,RBX
.L_40c97b:

            call _Znwm@PLT
.L_40c980:

            mov RDX,RBX
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RBP-2984],RAX
            call memset@PLT
.L_40c994:

            mov EAX,DWORD PTR [RBP-3168]
            mov RCX,QWORD PTR [RBP-2952]
            imul EAX,DWORD PTR [RBP-3160]
            mov EDX,DWORD PTR [RBP-2992]
            mov DWORD PTR [RBP-2912],1
            mov QWORD PTR [RBP-3088],0
            mov BYTE PTR [RBP-3064],1
            lea EDI,DWORD PTR [RDX-1]
            cdqe 
            mov DWORD PTR [RBP-3232],EDI
            mov QWORD PTR [RBP-3168],RAX
            shl RAX,2
            mov QWORD PTR [RBP-3160],RAX
            mov EAX,DWORD PTR [RBP-2908]
            imul EAX,R15D
            mov DWORD PTR [RBP-3144],EAX
            mov RAX,RCX
            shr RAX,2
            neg RAX
            mov ESI,EAX
            and ESI,3
            lea EAX,DWORD PTR [RSI+3]
            sub EDX,ESI
            mov DWORD PTR [RBP-3240],ESI
            mov DWORD PTR [RBP-3236],EDX
            mov DWORD PTR [RBP-3228],EAX
            mov EAX,EDX
            and EDX,4294967292
            shr EAX,2
            mov DWORD PTR [RBP-3220],EDX
            mov DWORD PTR [RBP-3224],EAX
            mov EAX,ESI
            shl RAX,2
            add RCX,RAX
            mov QWORD PTR [RBP-3216],RAX
            mov EAX,EDI
            lea RAX,QWORD PTR [RAX*4+4]
            mov QWORD PTR [RBP-3208],RCX
            mov QWORD PTR [RBP-3200],RAX
            mov EAX,DWORD PTR [RBP-3048]
            mov DWORD PTR [RBP-3056],EAX
            mov EAX,DWORD PTR [RBP-2912]
.L_40ca6b:

            test EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_4131be]
            lea RCX,QWORD PTR [RIP+.L_4131a6]
            lea RAX,QWORD PTR [RIP+.L_4131db]
            lea RSI,QWORD PTR [RIP+.L_4131d8]
            cmovg RDX,RCX
            cmovg RAX,RSI
            mov QWORD PTR [RBP-3096],RDX
            mov QWORD PTR [RBP-3192],RAX
.L_40ca9f:

            cmp BYTE PTR [RBP-3242],0
            je .L_40cab5

            cmp DWORD PTR [RBP-2912],-1
            je .L_40ecf6
.L_40cab5:

            pxor XMM0,XMM0
            mov QWORD PTR [RBP-2752],0
            mov QWORD PTR [RBP-2720],0
            mov DWORD PTR [RBP-3008],1
            movaps XMMWORD PTR [RBP-2768],XMM0
            movaps XMMWORD PTR [RBP-2736],XMM0
.L_40cae7:

            mov RAX,QWORD PTR [RBP-3120]
            test RAX,RAX
            je .L_40e3ed
.L_40caf7:

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_40ecc9

            mov RBX,QWORD PTR [RBP-3152]
            mov RDI,RBX
.L_40cb14:

            call _Znwm@PLT

            mov RDX,RBX
            xor ESI,ESI
            mov RDI,RAX
            lea RBX,QWORD PTR [RAX+RBX*1]
            call memset@PLT

            mov RCX,RAX
.L_40cb2d:

            mov QWORD PTR [RBP-2888],RCX
            mov RDI,QWORD PTR [RBP-2736]
            movq XMM0,QWORD PTR [RBP-2888]
            mov QWORD PTR [RBP-2888],RBX
            movhps XMM0,QWORD PTR [RBP-2888]
            mov QWORD PTR [RBP-2720],RBX
            test RDI,RDI
            movaps XMMWORD PTR [RBP-2736],XMM0
            je .L_40cb69

            call _ZdlPv@PLT
.L_40cb69:

            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RBP-3168]
            mov QWORD PTR [RBP-2688],0
            movaps XMMWORD PTR [RBP-2704],XMM0
            test RAX,RAX
            je .L_40e435

            movabs RCX,4611686018427387903
            cmp RAX,RCX
            ja .L_40e44a

            mov RBX,QWORD PTR [RBP-3160]
            mov RDI,RBX
            call _Znwm@PLT
.L_40cbb1:

            mov QWORD PTR [RBP-2888],RAX
            mov RDX,RBX
            lea RBX,QWORD PTR [RAX+RBX*1]
            movq XMM0,QWORD PTR [RBP-2888]
            xor ESI,ESI
            punpcklqdq XMM0,XMM0
            mov RDI,RAX
            mov QWORD PTR [RBP-2688],RBX
            movaps XMMWORD PTR [RBP-2704],XMM0
            call memset@PLT
.L_40cbe3:

            mov RAX,QWORD PTR [RBP-2904]
            cmp BYTE PTR [RBP-3064],0
            mov QWORD PTR [RBP-2696],RBX
            mov RBX,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RBX]
            je .L_40e2ad

            lea RDX,QWORD PTR [RBP-2704]
            mov QWORD PTR [RBP-3112],RDX
            mov R9,RDX
.L_40cc16:

            sub RSP,8
            mov R8D,DWORD PTR [RBP-2908]
            push QWORD PTR [RBP-3176]
            mov ECX,R15D
            movsd XMM0,QWORD PTR [RBP-3256]
            mov EDX,DWORD PTR [RBP-3008]
            mov ESI,DWORD PTR [RBP-2912]
            mov RDI,RBX
.L_40cc41:

            call QWORD PTR [RAX+96]

            mov EBX,DWORD PTR [RBP-3136]
            mov RAX,QWORD PTR [RBP-2768]
            pop R10
            pop R11
            test EBX,EBX
            mov QWORD PTR [RBP-2760],RAX
            jle .L_40e4df

            lea RAX,QWORD PTR [RBP-2672]
            xor R12D,R12D
            mov DWORD PTR [RBP-3072],0
            mov DWORD PTR [RBP-2988],0
            mov QWORD PTR [RBP-2928],RAX
            lea RAX,QWORD PTR [RBP-2768]
            mov QWORD PTR [RBP-2936],RAX
.L_40cc97:

            mov EAX,DWORD PTR [RBP-3132]
            test EAX,EAX
            jle .L_40ce1f

            movsxd RSI,R12D
            mov RCX,QWORD PTR [RBP-3080]
            add EAX,R12D
            lea RDX,QWORD PTR [RSI*4]
            mov DWORD PTR [RBP-3032],EAX
            add RCX,RDX
            mov QWORD PTR [RBP-2888],RDX
            mov QWORD PTR [RBP-2968],RCX
.L_40ccd1:

            lea EAX,DWORD PTR [R12+1]
            mov RDX,QWORD PTR [RBP-2888]
            pxor XMM3,XMM3
            mov DWORD PTR [RBP-2960],EAX
            mov RAX,QWORD PTR [RBP-2736]
            movss XMM1,DWORD PTR [RAX+RDX*1]
            ucomiss XMM1,XMM3
            jp .L_40ccfe

            je .L_40cdf4
.L_40ccfe:

            mov RDI,QWORD PTR [RBP-2968]
            mov RAX,QWORD PTR [RBP-2984]
            mov RSI,QWORD PTR [RBP-2888]
            mov RBX,QWORD PTR [RBP-3024]
            mov R9D,DWORD PTR [RBP-2912]
            movsxd RDX,DWORD PTR [RDI]
            mov ECX,DWORD PTR [RAX+RSI*1]
            test R9D,R9D
            mov RAX,RDX
            lea RDX,QWORD PTR [RBX+RDX*4]
            mov RBX,QWORD PTR [RBP-2952]
            mov DWORD PTR [RBP-2976],ECX
            movss XMM2,DWORD PTR [RBX+RSI*1]
            movss DWORD PTR [RBP-2896],XMM2
            jle .L_40e220

            mov ESI,DWORD PTR [RDI+4]
            mov DWORD PTR [RBP-2944],ESI
            sub ESI,EAX
            movsxd RAX,ECX
            movsxd RCX,ESI
            mov DWORD PTR [RBP-3040],ESI
            cmp RAX,RCX
            jae .L_40cddd

            mov R13,RAX
            xor EBX,EBX
            not R13
            add RCX,R13
            lea R13,QWORD PTR [RDX+RAX*4]
            mov QWORD PTR [RBP-2944],RCX
            jmp .L_40cd9f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40cd88:

            mov RAX,QWORD PTR [RBP-2736]
            mov RDX,QWORD PTR [RBP-2888]
            add RBX,1
            movss XMM1,DWORD PTR [RAX+RDX*1]
.L_40cd9f:

            movss XMM0,DWORD PTR [R13+RBX*4]
            mov RSI,QWORD PTR [RBP-2928]
            subss XMM0,DWORD PTR [RBP-2896]
            mov RDI,QWORD PTR [RBP-2936]
            mov DWORD PTR [RBP-2672],R12D
            divss XMM0,XMM1
            movss DWORD PTR [RBP-2668],XMM0

            call .L_4149d0
.L_40cdd4:

            cmp QWORD PTR [RBP-2944],RBX
            jne .L_40cd88
.L_40cddd:

            xor EAX,EAX
            mov EDX,DWORD PTR [RBP-3040]
            cmp DWORD PTR [RBP-2976],EDX
            setl AL
            add DWORD PTR [RBP-2988],EAX
.L_40cdf4:

            add QWORD PTR [RBP-2888],4
            mov R12D,DWORD PTR [RBP-2960]
            add QWORD PTR [RBP-2968],4
            cmp R12D,DWORD PTR [RBP-3032]
            jne .L_40ccd1

            mov R12D,DWORD PTR [RBP-3032]
.L_40ce1f:

            add DWORD PTR [RBP-3072],1
            mov EAX,DWORD PTR [RBP-3072]
            cmp DWORD PTR [RBP-3136],EAX
            jne .L_40cc97

            mov RAX,QWORD PTR [RBP-2760]
            mov RBX,QWORD PTR [RBP-2768]
            cmp RAX,RBX
            mov R13,RAX
            jne .L_40e3f6
.L_40ce52:

            mov RDI,QWORD PTR [RBP-2704]
            test RDI,RDI
            je .L_40e3c7

            call _ZdlPv@PLT

            add DWORD PTR [RBP-3008],1
            mov EAX,DWORD PTR [RBP-3008]
            cmp EAX,5
            jne .L_40cae7
.L_40ce7d:

            mov RAX,QWORD PTR [RBP-2760]
            mov RBX,QWORD PTR [RBP-2768]
            mov R13,RAX
.L_40ce8e:

            cmp R13,RBX
            mov RSI,R13
            je .L_40eb91

            mov R12,R13
            sub RSP,8
            mov EDX,63
            sub R12,RBX
            push 0
            mov RDI,RBX
            mov RAX,R12
            sar RAX,3
            bsr RAX,RAX
            xor RAX,63
            cdqe 
            sub RDX,RAX
            add RDX,RDX
            call .L_4098c0

            add R12,-128
            lea RAX,QWORD PTR [RBX+8]
            pop RSI
            pop RDI
            jle .L_40eb27

            mov RDI,-8
            lea RSI,QWORD PTR [RBX+128]
            mov R11,R13
            sub RDI,RBX
.L_40ceee:

            movss XMM0,DWORD PTR [RAX+4]
            lea RCX,QWORD PTR [RAX+8]
            mov R8D,DWORD PTR [RCX-8]
            movss XMM1,DWORD PTR [RBX+4]
            ucomiss XMM1,XMM0
            jbe .L_40e4f6

            lea R9,QWORD PTR [RCX+RDI*1]
            mov RAX,RCX
            mov RDX,R9
            sar RDX,3
            test R9,R9
            jle .L_40cf37
.L_40cf1c:

            sub RAX,8
            mov R9D,DWORD PTR [RAX-8]
            sub RDX,1
            movss XMM1,DWORD PTR [RAX-4]
            movss DWORD PTR [RAX+4],XMM1
            mov DWORD PTR [RAX],R9D
            jne .L_40cf1c
.L_40cf37:

            movss DWORD PTR [RBX+4],XMM0
            mov DWORD PTR [RBX],R8D
.L_40cf3f:

            cmp RSI,RCX
            mov RAX,RCX
            jne .L_40ceee

            cmp R11,RSI
            mov RAX,RSI
            mov RDI,R11
            je .L_40cf97
.L_40cf52:

            movss XMM1,DWORD PTR [RAX+4]
            mov RCX,RAX
            mov ESI,DWORD PTR [RAX]
            movss XMM0,DWORD PTR [RAX-4]
            lea RDX,QWORD PTR [RAX-8]
            ucomiss XMM0,XMM1
            jbe .L_40cf87
.L_40cf6a:

            mov R8D,DWORD PTR [RDX]
            movss DWORD PTR [RDX+12],XMM0
            mov RCX,RDX
            sub RDX,8
            mov DWORD PTR [RDX+16],R8D
            movss XMM0,DWORD PTR [RDX+4]
            ucomiss XMM0,XMM1
            ja .L_40cf6a
.L_40cf87:

            add RAX,8
            mov DWORD PTR [RCX],ESI
            movss DWORD PTR [RCX+4],XMM1
            cmp RDI,RAX
            jne .L_40cf52
.L_40cf97:

            mov ECX,DWORD PTR [RBP-2912]
            test ECX,ECX
            jle .L_40eae2

            mov RAX,QWORD PTR [RBP-2904]
            lea RDX,QWORD PTR [RIP+.L_4130f0]
            mov RDI,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX+64]
            cmp RAX,RDX
            jne .L_40ead3

            movss XMM0,DWORD PTR [RDI+16]
            ucomiss XMM0,DWORD PTR [RDI+168]
            setae AL
.L_40cfd6:

            test AL,AL
            movsd XMM0,QWORD PTR [RIP+.L_415ca0]
            jne .L_40cfea

            movsd XMM0,QWORD PTR [RIP+.L_415ca8]
.L_40cfea:

            pxor XMM1,XMM1
            cvtsi2sd XMM1,DWORD PTR [RBP-3048]
            mulsd XMM1,XMM0
            movss XMM0,DWORD PTR [RIP+.L_415d10]
            movsd QWORD PTR [RBP-2976],XMM1
.L_40d00a:

            pxor XMM1,XMM1
            cmp BYTE PTR [RBP-3064],0
            cvtsi2ss XMM1,DWORD PTR [RBP-2988]
            mulss XMM0,XMM1
            cvttss2si EAX,XMM0
            mov DWORD PTR [RBP-2936],EAX
            jne .L_40ea48

            mov RSI,QWORD PTR [RBP-2760]
            mov RDI,QWORD PTR [RBP-2768]
            mov RAX,RSI
            sub RAX,RDI
            sar RAX,3
            mov R9,RAX
.L_40d04c:

            lea RAX,QWORD PTR [RBP-2672]
            mov DWORD PTR [RBP-2664],0
            mov QWORD PTR [RBP-2656],0
            mov QWORD PTR [RBP-2632],0
            mov QWORD PTR [RBP-2896],RAX
            add RAX,8
            cmp RSI,RDI
            mov QWORD PTR [RBP-2648],RAX
            mov QWORD PTR [RBP-2640],RAX
            je .L_40e885

            mov ESI,DWORD PTR [RBP-2912]
            mov EAX,0
            test ESI,ESI
            cmovle EAX,ESI
            xor R13D,R13D
            mov DWORD PTR [RBP-3040],EAX
.L_40d0ae:

            mov R12D,DWORD PTR [RDI+R13*8]
            lea RAX,QWORD PTR [R13*8]
            mov RCX,QWORD PTR [RBP-3080]
            mov DWORD PTR [RBP-2944],0
            mov QWORD PTR [RBP-3032],RAX
            mov EAX,R12D
            cdq 
            idiv DWORD PTR [RBP-3132]
            mov DWORD PTR [RBP-2928],EDX
            mov RDX,QWORD PTR [RBP-2984]
            mov DWORD PTR [RBP-2888],EAX
            movsxd RAX,R12D
            lea RSI,QWORD PTR [RDX+RAX*4]
            movsxd RDX,DWORD PTR [RCX+RAX*4]
            mov EAX,DWORD PTR [RBP-3040]
            add RDX,QWORD PTR [RBP-3016]
            add EAX,DWORD PTR [RSI]
            mov QWORD PTR [RBP-3008],RSI
            cdqe 
            movzx EDX,BYTE PTR [RDX+RAX*1]
            mov EAX,EDX
            shr RDX,6
            and EAX,63
            and EDX,3
            movzx ECX,AL
            mov QWORD PTR [RBP-2968],RDX
            mov DWORD PTR [RBP-2960],ECX
            mov RCX,RDX
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RCX+RDX*4]
            shl RDX,4
            mov QWORD PTR [RBP-3064],RDX
            add RDX,QWORD PTR [R14+8]
            mov R8,RDX
            lea RBX,QWORD PTR [RDX+80]
            mov EDX,DWORD PTR [RBP-2912]
            test EDX,EDX
            jle .L_40e5b4
.L_40d161:

            mov RDI,QWORD PTR [RBP-2920]
            xor EAX,EAX
            mov ECX,16
            mov EDX,DWORD PTR [RBP-2888]
            mov ESI,DWORD PTR [RBP-2928]

            rep stosq QWORD PTR [RDI]

            lea RAX,QWORD PTR [RBP-1472]
            mov RDI,R8
            mov RCX,RAX
            mov QWORD PTR [RBP-2920],RAX
.L_40d192:

            call .L_4223e0

            mov RDX,QWORD PTR [RBP-2968]
            lea RDI,QWORD PTR [RIP+.L_415b04]
            xor ECX,ECX
            mov RSI,RDI
            mov RAX,RDX
            shl RAX,8
            add RAX,RDX
            mov RDX,QWORD PTR [RBP-2832]
            lea R8,QWORD PTR [RDX+RAX*4]
            jmp .L_40d1db
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d1c8:

            lea RAX,QWORD PTR [RIP+.L_415c00]
            add RSI,4
            add ECX,1
            cmp RAX,RSI
            je .L_40d248
.L_40d1db:

            movsxd R11,DWORD PTR [RSI]
            movsx EAX,WORD PTR [RBP+R11*2-1472]
            test AX,AX
            je .L_40d1c8

            cmp ECX,15
            jle .L_40d21b

            sub ECX,16
            mov R9D,ECX
            shr R9D,4
            neg R9D
            mov R10D,R9D
            shl R10D,4
            add ECX,R10D
            mov R10D,DWORD PTR [R8+960]
            lea R9D,DWORD PTR [R10+R9*2-2]
            mov DWORD PTR [R8+960],R9D
.L_40d21b:

            cdq 
            shl ECX,4
            add RSI,4
            idiv DWORD PTR [RBX+R11*4]
            cdq 
            xor EAX,EDX
            sub EAX,EDX
            bsr EAX,EAX
            lea EAX,DWORD PTR [RAX+RCX*1+1]
            xor ECX,ECX
            cdqe 
            sub DWORD PTR [R8+RAX*4],2
            lea RAX,QWORD PTR [RIP+.L_415c00]
            cmp RAX,RSI
            jne .L_40d1db
.L_40d248:

            test ECX,ECX
            je .L_40d250

            sub DWORD PTR [R8],2
.L_40d250:

            movsxd RAX,DWORD PTR [RBP-2960]
            movzx EDX,WORD PTR [RBP-2944]
            xor ECX,ECX
            mov WORD PTR [RBP+RAX*2-1472],DX
            jmp .L_40d27c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40d270:

            add RDI,4
            add ECX,1
            cmp RSI,RDI
            je .L_40d2d8
.L_40d27c:

            movsxd R11,DWORD PTR [RDI]
            movsx EAX,WORD PTR [RBP+R11*2-1472]
            test AX,AX
            je .L_40d270

            cmp ECX,15
            jle .L_40d2b2

            sub ECX,16
            mov R9D,DWORD PTR [R8+960]
            mov R10D,ECX
            and ECX,15
            shr R10D,4
            lea R9D,DWORD PTR [R9+R10*2+2]
            mov DWORD PTR [R8+960],R9D
.L_40d2b2:

            cdq 
            shl ECX,4
            add RDI,4
            idiv DWORD PTR [RBX+R11*4]
            cdq 
            xor EAX,EDX
            sub EAX,EDX
            bsr EAX,EAX
            lea EAX,DWORD PTR [RAX+RCX*1+1]
            xor ECX,ECX
            cdqe 
            add DWORD PTR [R8+RAX*4],2
            cmp RSI,RDI
            jne .L_40d27c
.L_40d2d8:

            test ECX,ECX
            je .L_40d2e0

            add DWORD PTR [R8],2
.L_40d2e0:

            mov RDI,QWORD PTR [RBP-3064]
            add RDI,QWORD PTR [R14+8]
            mov RCX,QWORD PTR [RBP-2920]
            mov EDX,DWORD PTR [RBP-2888]
            mov ESI,DWORD PTR [RBP-2928]
            call .L_423300

            mov RAX,QWORD PTR [RBP-3008]
            mov RBX,QWORD PTR [RBP-2656]
            mov ECX,DWORD PTR [RBP-2912]
            add DWORD PTR [RAX],ECX
            test RBX,RBX
            jne .L_40d334

            jmp .L_40e614
.L_40d323:

            mov RDX,QWORD PTR [RBX+16]
            mov ECX,1
            test RDX,RDX
            je .L_40d347
.L_40d331:

            mov RBX,RDX
.L_40d334:

            mov EAX,DWORD PTR [RBX+32]
            cmp R12D,EAX
            jl .L_40d323

            mov RDX,QWORD PTR [RBX+24]
            xor ECX,ECX
            test RDX,RDX
            jne .L_40d331
.L_40d347:

            test CL,CL
            jne .L_40e59b
.L_40d34f:

            cmp R12D,EAX
            jg .L_40e538
.L_40d358:

            mov RAX,QWORD PTR [RBP-2768]
            mov RCX,QWORD PTR [RBP-3032]
            movss XMM7,DWORD PTR [RAX+RCX*1+4]
            lea EAX,DWORD PTR [R13+1]
            movss DWORD PTR [RBP-2888],XMM7
            mov DWORD PTR [RBP-2944],EAX
            movabs RAX,-3689348814741910323
            mul R13
            mov RAX,RDX
            shr RAX,3
            lea RAX,QWORD PTR [RAX+RAX*4]
            add RAX,RAX
            cmp R13,RAX
            jne .L_40d3b7

            mov RSI,QWORD PTR [RBP-3272]
            mov RDI,QWORD PTR [RBP-3264]
            call .L_409d90

            mov DWORD PTR [RBP-3140],EAX
.L_40d3b7:

            mov EAX,DWORD PTR [RBP-3184]
            mov RDX,QWORD PTR [RBP-2832]
            add EAX,DWORD PTR [RBP-3140]
            cmp RDX,QWORD PTR [RBP-2824]
            mov DWORD PTR [RBP-2960],EAX
            je .L_40d44b

            xor EBX,EBX
            mov QWORD PTR [RBP-2928],0
            xor R12D,R12D
.L_40d3e9:

            mov RSI,QWORD PTR [RBP-2800]
            lea RDI,QWORD PTR [RDX+RBX*4]
            add RSI,RBX
            call .L_41be90

            add QWORD PTR [RBP-2928],RAX
            mov RDX,QWORD PTR [RBP-2832]
            movabs RSI,-71777214294589695
            mov RAX,QWORD PTR [RBP-2824]
            add R12,1
            add RBX,257
            sub RAX,RDX
            sar RAX,2
            imul RAX,RSI
            cmp RAX,R12
            ja .L_40d3e9

            mov RAX,QWORD PTR [RBP-2928]
            add RAX,7
            shr RAX,3
            add DWORD PTR [RBP-2960],EAX
.L_40d44b:

            mov ESI,DWORD PTR [RBP-2944]
            cmp DWORD PTR [RBP-2936],ESI
            mov R12D,DWORD PTR [RBP-2960]
            jge .L_40d484

            mov EAX,R12D
            sub EAX,DWORD PTR [RBP-3056]
            pxor XMM0,XMM0
            cdq 
            xor EAX,EDX
            sub EAX,EDX
            cvtsi2sd XMM0,EAX
            ucomisd XMM0,QWORD PTR [RBP-2976]
            ja .L_40e8ae
.L_40d484:

            mov RDI,QWORD PTR [RBP-2768]
            mov RAX,QWORD PTR [RBP-2760]
            add R13,1
            sub RAX,RDI
            sar RAX,3
            cmp R13,RAX
            mov QWORD PTR [RBP-2960],RAX
            jb .L_40d0ae
.L_40d4ad:

            pxor XMM0,XMM0
            test RDI,RDI
            mov QWORD PTR [RBP-2752],0
            movaps XMMWORD PTR [RBP-2768],XMM0
            je .L_40d4cd

            call _ZdlPv@PLT
.L_40d4cd:

            mov EAX,DWORD PTR [RBP-2992]
            test EAX,EAX
            jle .L_40d6f8

            mov RSI,QWORD PTR [RBP-2952]
            mov RDX,QWORD PTR [RBP-2736]
            pxor XMM1,XMM1
            lea RAX,QWORD PTR [RSI+16]
            cvtsi2ss XMM1,DWORD PTR [RBP-2912]
            cmp RDX,RAX
            lea RAX,QWORD PTR [RDX+16]
            setae CL
            cmp RSI,RAX
            setae AL
            or CL,AL
            je .L_40e8f1

            cmp DWORD PTR [RBP-2992],7
            jbe .L_40e8f1

            mov ECX,DWORD PTR [RBP-3232]
            cmp DWORD PTR [RBP-3228],ECX
            ja .L_40e8cf

            mov ECX,DWORD PTR [RBP-3240]
            xor EAX,EAX
            test ECX,ECX
            je .L_40d5a3

            movss XMM7,DWORD PTR [RDX]
            cmp ECX,1
            movss XMM3,DWORD PTR [RBP-2888]
            mulss XMM7,XMM3
            movaps XMM0,XMM7
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RSI]
            movss DWORD PTR [RSI],XMM0
            je .L_40e931

            movss XMM0,DWORD PTR [RDX+4]
            cmp ECX,2
            mulss XMM0,XMM3
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RSI+4]
            movss DWORD PTR [RSI+4],XMM0
            je .L_40e927

            movss XMM7,DWORD PTR [RDX+8]
            mov EAX,3
            mulss XMM7,XMM3
            movaps XMM0,XMM7
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RSI+8]
            movss DWORD PTR [RSI+8],XMM0
.L_40d5a3:

            movaps XMM2,XMM1
            mov RSI,QWORD PTR [RBP-3216]
            mov R8,QWORD PTR [RBP-3208]
            movss XMM3,DWORD PTR [RBP-2888]
            xor ECX,ECX
            shufps XMM3,XMM3,0
            shufps XMM2,XMM2,0
            lea RDI,QWORD PTR [RDX+RSI*1]
            xor ESI,ESI
.L_40d5cc:

            movups XMM0,XMMWORD PTR [RDI+RCX*1]
            add ESI,1
            mulps XMM0,XMM3
            mulps XMM0,XMM2
            addps XMM0,XMMWORD PTR [R8+RCX*1]
            movaps XMMWORD PTR [R8+RCX*1],XMM0
            add RCX,16
            cmp ESI,DWORD PTR [RBP-3224]
            jb .L_40d5cc

            mov ECX,DWORD PTR [RBP-3220]
            add EAX,ECX
            cmp ECX,DWORD PTR [RBP-3236]
            je .L_40d6f8

            movsxd RSI,EAX
            movss XMM0,DWORD PTR [RBP-2888]
            mulss XMM0,DWORD PTR [RDX+RSI*4]
            mov RCX,QWORD PTR [RBP-2952]
            add EAX,1
            cmp DWORD PTR [RBP-2992],EAX
            lea RCX,QWORD PTR [RCX+RSI*4]
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RCX]
            movss DWORD PTR [RCX],XMM0
            jle .L_40d6f8
.L_40d639:

            movsxd RSI,EAX
            movss XMM2,DWORD PTR [RBP-2888]
            movss XMM0,DWORD PTR [RDX+RSI*4]
            mulss XMM0,XMM2
            mov RDI,QWORD PTR [RBP-2952]
            mov EBX,DWORD PTR [RBP-2992]
            lea RCX,QWORD PTR [RDI+RSI*4]
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RCX]
            movss DWORD PTR [RCX],XMM0
            lea ECX,DWORD PTR [RAX+1]
            cmp EBX,ECX
            jle .L_40d6f8

            movsxd RCX,ECX
            movss XMM0,DWORD PTR [RDX+RCX*4]
            lea RSI,QWORD PTR [RDI+RCX*4]
            lea ECX,DWORD PTR [RAX+2]
            mulss XMM0,XMM2
            cmp EBX,ECX
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RSI]
            movss DWORD PTR [RSI],XMM0
            jle .L_40d6f8

            movsxd RCX,ECX
            movss XMM0,DWORD PTR [RDX+RCX*4]
            lea RSI,QWORD PTR [RDI+RCX*4]
            lea ECX,DWORD PTR [RAX+3]
            mulss XMM0,XMM2
            cmp EBX,ECX
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RSI]
            movss DWORD PTR [RSI],XMM0
            jle .L_40d6f8

            movsxd RCX,ECX
            add EAX,4
            movss XMM0,DWORD PTR [RDX+RCX*4]
            lea RSI,QWORD PTR [RDI+RCX*4]
            cmp EBX,EAX
            mulss XMM0,XMM2
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RSI]
            movss DWORD PTR [RSI],XMM0
            jle .L_40d6f8

            cdqe 
            mulss XMM2,DWORD PTR [RDX+RAX*4]
            lea RCX,QWORD PTR [RDI+RAX*4]
            movaps XMM0,XMM2
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RCX]
            movss DWORD PTR [RCX],XMM0
.L_40d6f8:

            mov RDI,QWORD PTR [RBP-2920]
            lea RSI,QWORD PTR [RBP-2880]
            xor EDX,EDX
            mov QWORD PTR [RBP-2880],20
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RBP-1472],RAX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_40d723:

            mov RDX,QWORD PTR [RBP-2880]
            mov QWORD PTR [RBP-1472],RAX
            movdqa XMM0,XMMWORD PTR [RIP+.L_415c50]
            mov QWORD PTR [RBP-1456],RDX
            mov DWORD PTR [RAX+16],1936617321
            movups XMMWORD PTR [RAX],XMM0
            mov RAX,QWORD PTR [RBP-2880]
            mov RDX,QWORD PTR [RBP-1472]
            mov QWORD PTR [RBP-1464],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RBP-2904]
            mov RAX,QWORD PTR [RAX+32]
            mov RCX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBP-2936],RAX
            lea R10,QWORD PTR [RAX+8]
            test RCX,RCX
            je .L_40e979

            mov RBX,QWORD PTR [RBP-1472]
            mov R8,QWORD PTR [RBP-1464]
            mov R13,R10
            mov QWORD PTR [RBP-2968],R14
            mov QWORD PTR [RBP-2928],RCX
            mov R14D,R12D
            mov R12,RBX
.L_40d7ab:

            mov RAX,QWORD PTR [RBP-2928]
            mov RDX,R8
            mov RBX,QWORD PTR [RAX+40]
            cmp RBX,R8
            cmovbe RDX,RBX
            test RDX,RDX
            je .L_40d7f1

            mov RDI,QWORD PTR [RAX+32]
            mov RSI,R12
            mov QWORD PTR [RBP-3008],R8
            mov QWORD PTR [RBP-2976],R10
            call memcmp@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RBP-2976]
            mov R8,QWORD PTR [RBP-3008]
            jne .L_40d80b
.L_40d7f1:

            mov RAX,RBX
            sub RAX,R8
            cmp RAX,2147483647
            jg .L_40e640

            cmp RAX,-2147483648
            jl .L_40d813
.L_40d80b:

            test EAX,EAX
            jns .L_40e640
.L_40d813:

            mov RAX,QWORD PTR [RBP-2928]
            mov RAX,QWORD PTR [RAX+24]
            mov QWORD PTR [RBP-2928],RAX
.L_40d825:

            cmp QWORD PTR [RBP-2928],0
            jne .L_40d7ab

            cmp R13,R10
            mov RBX,R12
            mov R12D,R14D
            mov R14,QWORD PTR [RBP-2968]
            je .L_40e97c

            mov RAX,QWORD PTR [R13+40]
            cmp R8,RAX
            mov QWORD PTR [RBP-2928],RAX
            cmovbe RAX,R8
            test RAX,RAX
            mov RDX,RAX
            je .L_40d881

            mov RSI,QWORD PTR [R13+32]
            mov RDI,RBX
            mov QWORD PTR [RBP-2968],R8
            call memcmp@PLT

            test EAX,EAX
            mov R8,QWORD PTR [RBP-2968]
            jne .L_40d89f
.L_40d881:

            mov RAX,R8
            sub RAX,QWORD PTR [RBP-2928]
            cmp RAX,2147483647
            jg .L_40d8a7

            cmp RAX,-2147483648
            jl .L_40e97c
.L_40d89f:

            test EAX,EAX
            js .L_40e97c
.L_40d8a7:

            mov RAX,QWORD PTR [RBP-2920]
            add DWORD PTR [R13+64],1
            add RAX,16
            cmp RBX,RAX
            je .L_40d8c4

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40d8c4:

            mov RAX,QWORD PTR [RBP-2920]
            mov RDI,QWORD PTR [RBP-3096]
            add RAX,16
            mov R13,RAX
            mov QWORD PTR [RBP-1472],RAX
            call strlen@PLT

            cmp RAX,15
            mov RBX,RAX
            mov QWORD PTR [RBP-2864],RAX
            ja .L_40ea14

            cmp RAX,1
            je .L_40e9fc

            test RAX,RAX
            mov RDX,R13
            jne .L_40e9d4
.L_40d90f:

            mov QWORD PTR [RBP-1464],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RBP-2904]
            mov RAX,QWORD PTR [RAX+32]
            mov RCX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBP-2936],RAX
            lea R10,QWORD PTR [RAX+8]
            test RCX,RCX
            je .L_40e943

            mov RBX,QWORD PTR [RBP-1472]
            mov R8,QWORD PTR [RBP-1464]
            mov R13,R10
            mov QWORD PTR [RBP-2968],R14
            mov QWORD PTR [RBP-2928],RCX
            mov R14D,R12D
            mov R12,RBX
.L_40d962:

            mov RAX,QWORD PTR [RBP-2928]
            mov RDX,R8
            mov RBX,QWORD PTR [RAX+40]
            cmp RBX,R8
            cmovbe RDX,RBX
            test RDX,RDX
            je .L_40d9a8

            mov RDI,QWORD PTR [RAX+32]
            mov RSI,R12
            mov QWORD PTR [RBP-3008],R8
            mov QWORD PTR [RBP-2976],R10
            call memcmp@PLT

            test EAX,EAX
            mov R10,QWORD PTR [RBP-2976]
            mov R8,QWORD PTR [RBP-3008]
            jne .L_40d9c2
.L_40d9a8:

            mov RAX,RBX
            sub RAX,R8
            cmp RAX,2147483647
            jg .L_40e65a

            cmp RAX,-2147483648
            jl .L_40d9ca
.L_40d9c2:

            test EAX,EAX
            jns .L_40e65a
.L_40d9ca:

            mov RAX,QWORD PTR [RBP-2928]
            mov RAX,QWORD PTR [RAX+24]
            mov QWORD PTR [RBP-2928],RAX
.L_40d9dc:

            cmp QWORD PTR [RBP-2928],0
            jne .L_40d962

            cmp R13,R10
            mov RBX,R12
            mov R12D,R14D
            mov R14,QWORD PTR [RBP-2968]
            je .L_40e946

            mov RAX,QWORD PTR [R13+40]
            cmp R8,RAX
            mov QWORD PTR [RBP-2928],RAX
            cmovbe RAX,R8
            test RAX,RAX
            mov RDX,RAX
            je .L_40da38

            mov RSI,QWORD PTR [R13+32]
            mov RDI,RBX
            mov QWORD PTR [RBP-2968],R8
            call memcmp@PLT

            test EAX,EAX
            mov R8,QWORD PTR [RBP-2968]
            jne .L_40da56
.L_40da38:

            mov RAX,R8
            sub RAX,QWORD PTR [RBP-2928]
            cmp RAX,2147483647
            jg .L_40da5e

            cmp RAX,-2147483648
            jl .L_40e946
.L_40da56:

            test EAX,EAX
            js .L_40e946
.L_40da5e:

            mov RAX,QWORD PTR [RBP-2920]
            add DWORD PTR [R13+64],1
            add RAX,16
            cmp RBX,RAX
            je .L_40da7b

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40da7b:

            lea RBX,QWORD PTR [RBP-2240]
            mov R13,QWORD PTR [RBP-2920]
            mov RSI,QWORD PTR [RBP-3128]
            mov QWORD PTR [RBP-2232],0
            mov BYTE PTR [RBP-2224],0
            lea RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBP-3104],RBX
            mov RDI,R13
            mov QWORD PTR [RBP-2240],RAX
.L_40dab7:

            call .L_4133b0
.L_40dabc:

            mov RSI,R13
            mov RDI,R14
.L_40dac2:

            call .L_426ba0

            mov RAX,QWORD PTR [RBP-2240]
            mov QWORD PTR [RBP-2232],0
            lea RDX,QWORD PTR [RIP+.L_409390]
            mov RCX,RBX
            mov RDI,R13
            mov BYTE PTR [RAX],0
            mov RAX,QWORD PTR [RBP-2904]
            movzx ESI,BYTE PTR [RAX+4]
            call .L_41f6e0
.L_40daf9:

            test AL,AL
            je .L_40e71b

            mov RAX,QWORD PTR [RBP-2920]
            mov RDI,QWORD PTR [RBP-1248]
            add RAX,240
            cmp RDI,RAX
            je .L_40db1f

            call _ZdlPv@PLT
.L_40db1f:

            mov RAX,QWORD PTR [RBP-1264]
            mov RBX,QWORD PTR [RBP-1272]
            cmp RAX,RBX
            je .L_40db5a

            mov R13,RAX
.L_40db35:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40e674

            add RBX,32
            call _ZdlPv@PLT

            cmp R13,RBX
            jne .L_40db35

            mov RBX,QWORD PTR [RBP-1272]
.L_40db5a:

            test RBX,RBX
            je .L_40db67

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40db67:

            mov RDI,QWORD PTR [RBP-1296]
            test RDI,RDI
            je .L_40db78

            call _ZdlPv@PLT
.L_40db78:

            mov RAX,QWORD PTR [RBP-1312]
            mov RDI,QWORD PTR [RBP-1320]
            cmp RAX,RDI
            je .L_40dbc9

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea RAX,QWORD PTR [RDI+RAX*8+40]
            mov R13,RAX
            jmp .L_40dbb1
.L_40dba0:

            call _ZdlPv@PLT

            cmp RBX,R13
            mov RDI,RBX
            je .L_40dbc2
.L_40dbad:

            add RBX,40
.L_40dbb1:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            jne .L_40dba0

            cmp RBX,R13
            mov RDI,RBX
            jne .L_40dbad
.L_40dbc2:

            mov RDI,QWORD PTR [RBP-1320]
.L_40dbc9:

            test RDI,RDI
            je .L_40dbd3

            call _ZdlPv@PLT
.L_40dbd3:

            mov RAX,QWORD PTR [RBP-1336]
            mov RBX,QWORD PTR [RBP-1344]
            cmp RAX,RBX
            je .L_40dc0b

            mov R13,RAX
.L_40dbe9:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_40e690

            add RBX,64
            call _ZdlPv@PLT

            cmp RBX,R13
            jne .L_40dbe9

            mov RBX,QWORD PTR [RBP-1344]
.L_40dc0b:

            test RBX,RBX
            je .L_40dc18

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40dc18:

            mov RSI,QWORD PTR [RBP-1368]
            mov RAX,QWORD PTR [RBP-1360]
            cmp RAX,RSI
            mov RDI,RSI
            je .L_40dcc6

            lea R13,QWORD PTR [RSI+56]
            movabs RDX,988218432520154551
            mov QWORD PTR [RBP-2928],RSI
            sub RAX,R13
            shr RAX,3
            imul RAX,RDX
            movabs RDX,2305843009213693951
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX*8]
            sub RDX,RAX
            mov RAX,RSI
            lea RBX,QWORD PTR [RSI+RDX*8]
            jmp .L_40dc93
.L_40dc77:

            call _ZdlPv@PLT

            cmp R13,RBX
            mov QWORD PTR [RBP-2928],R13
            je .L_40dcbc
.L_40dc88:

            mov RAX,QWORD PTR [RBP-2928]
            add R13,56
.L_40dc93:

            mov RDI,QWORD PTR [RAX+24]
            test RDI,RDI
            je .L_40dca8

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBP-2928]
.L_40dca8:

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            jne .L_40dc77

            cmp R13,RBX
            mov QWORD PTR [RBP-2928],R13
            jne .L_40dc88
.L_40dcbc:

            mov RAX,QWORD PTR [RBP-1368]
            mov RDI,RAX
.L_40dcc6:

            test RDI,RDI
            je .L_40dcd0

            call _ZdlPv@PLT
.L_40dcd0:

            mov RAX,QWORD PTR [RBP-1384]
            mov RDI,QWORD PTR [RBP-1392]
            cmp RAX,RDI
            je .L_40dd20

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea RAX,QWORD PTR [RDI+RAX*8+40]
            mov R13,RAX
            jmp .L_40dd09
.L_40dcf8:

            call _ZdlPv@PLT

            cmp R13,RBX
            mov RDI,RBX
            je .L_40dd19
.L_40dd05:

            add RBX,40
.L_40dd09:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_40dcf8

            cmp R13,RBX
            mov RDI,RBX
            jne .L_40dd05
.L_40dd19:

            mov RDI,QWORD PTR [RBP-1392]
.L_40dd20:

            test RDI,RDI
            je .L_40dd2a

            call _ZdlPv@PLT
.L_40dd2a:

            mov RAX,QWORD PTR [RBP-1408]
            mov RBX,QWORD PTR [RBP-1416]
            cmp RAX,RBX
            je .L_40dd65

            mov R13,RAX
.L_40dd40:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40e6b0

            add RBX,32
            call _ZdlPv@PLT

            cmp RBX,R13
            jne .L_40dd40

            mov RBX,QWORD PTR [RBP-1416]
.L_40dd65:

            test RBX,RBX
            je .L_40dd72

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40dd72:

            mov RAX,QWORD PTR [RBP-1432]
            mov RBX,QWORD PTR [RBP-1440]
            cmp RAX,RBX
            je .L_40ddad

            mov R13,RAX
.L_40dd88:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40e6d0

            add RBX,32
            call _ZdlPv@PLT

            cmp R13,RBX
            jne .L_40dd88

            mov RBX,QWORD PTR [RBP-1440]
.L_40ddad:

            test RBX,RBX
            je .L_40ddba

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40ddba:

            pxor XMM0,XMM0
            mov RBX,QWORD PTR [RBP-2232]
            movsd XMM2,QWORD PTR [RIP+.L_415cc0]
            cvtsi2sd XMM0,R12D
            test RBX,RBX
            movapd XMM1,XMM0
            mulsd XMM1,XMM2
            js .L_40e819

            pxor XMM0,XMM0
            cvtsi2sd XMM0,RBX
.L_40ddec:

            divsd XMM1,XMM0
            mov RAX,QWORD PTR [RBP-2632]
            mov RDI,QWORD PTR [RBP-2920]
            mov RSI,R14
            mov QWORD PTR [RBP-3032],RAX
            movzx EAX,BYTE PTR [RBP-3241]
            mov DWORD PTR [RBP-2976],EAX
            pxor XMM7,XMM7
            subsd XMM2,XMM1
            cvtss2sd XMM7,DWORD PTR [RBP-2888]
            movsd QWORD PTR [RBP-2936],XMM7
            movsd QWORD PTR [RBP-2928],XMM2
.L_40de35:

            call .L_424f10
.L_40de3a:

            mov RAX,QWORD PTR [RBP-1472]
            lea RDI,QWORD PTR [RBP-1856]
            lea RSI,QWORD PTR [RBP-2848]
            xor EDX,EDX
            mov QWORD PTR [RBP-2848],20
            mov QWORD PTR [RBP-2968],RDI
            mov QWORD PTR [RBP-3040],RAX
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RBP-1856],RAX
.L_40de75:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_40de7a:

            mov RDX,QWORD PTR [RBP-2848]
            mov QWORD PTR [RBP-1856],RAX
            movdqa XMM0,XMMWORD PTR [RIP+.L_415c50]
            mov QWORD PTR [RBP-1840],RDX
            mov DWORD PTR [RAX+16],1936617321
            movups XMMWORD PTR [RAX],XMM0
            mov RAX,QWORD PTR [RBP-2848]
            mov RDX,QWORD PTR [RBP-1856]
            mov QWORD PTR [RBP-1848],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [RBP-2904]
            mov RAX,QWORD PTR [RAX+32]
            mov RCX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBP-3008],RAX
            lea R10,QWORD PTR [RAX+8]
            test RCX,RCX
            je .L_40e7ea

            mov RAX,QWORD PTR [RBP-1848]
            mov R11,QWORD PTR [RBP-1856]
            mov R8,R10
            mov R13,RCX
            mov QWORD PTR [RBP-2888],RAX
.L_40def8:

            mov RCX,QWORD PTR [R13+40]
            mov RAX,QWORD PTR [RBP-2888]
            cmp RCX,RAX
            cmovbe RAX,RCX
            test RAX,RAX
            mov RDX,RAX
            je .L_40df5a

            mov RDI,QWORD PTR [R13+32]
            mov RSI,R11
            mov QWORD PTR [RBP-3280],R10
            mov QWORD PTR [RBP-3072],R8
            mov QWORD PTR [RBP-3064],RCX
            mov QWORD PTR [RBP-3056],R11
            call memcmp@PLT

            test EAX,EAX
            mov R11,QWORD PTR [RBP-3056]
            mov RCX,QWORD PTR [RBP-3064]
            mov R8,QWORD PTR [RBP-3072]
            mov R10,QWORD PTR [RBP-3280]
            jne .L_40df78
.L_40df5a:

            mov RAX,RCX
            sub RAX,QWORD PTR [RBP-2888]
            cmp RAX,2147483647
            jg .L_40e6f0

            cmp RAX,-2147483648
            jl .L_40df80
.L_40df78:

            test EAX,EAX
            jns .L_40e6f0
.L_40df80:

            mov R13,QWORD PTR [R13+24]
.L_40df84:

            test R13,R13
            jne .L_40def8

            cmp R10,R8
            mov RAX,QWORD PTR [RBP-2888]
            je .L_40e7ed

            mov R13,QWORD PTR [R8+40]
            cmp RAX,R13
            cmova RAX,R13
            test RAX,RAX
            mov RDX,RAX
            je .L_40dfce

            mov RSI,QWORD PTR [R8+32]
            mov RDI,R11
            mov QWORD PTR [RBP-3056],R8
            call memcmp@PLT

            test EAX,EAX
            mov R8,QWORD PTR [RBP-3056]
            jne .L_40dfec
.L_40dfce:

            mov RAX,QWORD PTR [RBP-2888]
            sub RAX,R13
            cmp RAX,2147483647
            jg .L_40dff4

            cmp RAX,-2147483648
            jl .L_40e7ed
.L_40dfec:

            test EAX,EAX
            js .L_40e7ed
.L_40dff4:

            mov EAX,DWORD PTR [RBP-2992]
            sub RSP,8
            lea RDI,QWORD PTR [RBP-1088]
            push RBX
            movsd XMM1,QWORD PTR [RBP-2928]
            movsd XMM0,QWORD PTR [RBP-2936]
            mov ECX,1024
            push RAX
            mov EAX,DWORD PTR [RBP-2988]
            mov EDX,1
            mov ESI,1024
            mov R13,RDI
            push RAX
            mov EAX,DWORD PTR [RBP-2944]
            push QWORD PTR [RBP-3032]
            push QWORD PTR [RBP-2960]
            push RAX
            mov EAX,DWORD PTR [RBP-2976]
            push QWORD PTR [RBP-3192]
            push RAX
            mov R9D,DWORD PTR [R8+64]
            lea R8,QWORD PTR [RIP+.L_414ef8]
            push QWORD PTR [RBP-3040]
            mov EAX,2
            call __snprintf_chk@PLT

            mov EBX,EAX
            mov RAX,QWORD PTR [RBP-2968]
            mov RDI,QWORD PTR [RBP-1856]
            add RSP,80
            add RAX,16
            cmp RDI,RAX
            je .L_40e08d

            call _ZdlPv@PLT
.L_40e08d:

            mov RAX,QWORD PTR [RBP-2920]
            mov RDI,QWORD PTR [RBP-1472]
            add RAX,16
            cmp RDI,RAX
            je .L_40e0a9

            call _ZdlPv@PLT
.L_40e0a9:

            test EBX,EBX
            jle .L_40e7cb

            mov RAX,QWORD PTR [RBP-2920]
            mov BYTE PTR [RBP-65],0
            mov RBX,R13
            mov RSI,R13
            add RAX,16
            mov QWORD PTR [RBP-1472],RAX
.L_40e0cd:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40e0cd

            mov EDX,EAX
            mov R13,RSI
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            cmove RBX,RDX
            mov EDX,EAX
            add DL,AL
            sbb RBX,3
            sub RBX,RSI
            cmp RBX,15
            mov QWORD PTR [RBP-2704],RBX
            ja .L_40e763

            cmp RBX,1
            je .L_40e7ae

            mov RAX,QWORD PTR [RBP-2920]
            add RAX,16
            test RBX,RBX
            jne .L_40e78d
.L_40e136:

            mov QWORD PTR [RBP-1464],RBX
            mov BYTE PTR [RAX+RBX*1],0
            mov RAX,QWORD PTR [RBP-2904]
            mov RBX,QWORD PTR [RBP-2920]
            mov RDI,QWORD PTR [RAX+32]
            mov RSI,RBX
.L_40e156:

            call .L_4196f0
.L_40e15b:

            mov RDI,QWORD PTR [RBP-1472]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40e170

            call _ZdlPv@PLT
.L_40e170:

            mov R13,QWORD PTR [RBP-2904]
            mov RSI,R14
            mov RDI,QWORD PTR [R13+16]
            mov RAX,QWORD PTR [RDI]
.L_40e181:

            call QWORD PTR [RAX+16]

            mov RBX,QWORD PTR [RBP-3104]
            mov RDI,R13
            mov RSI,RBX
            call .L_40a4b0
.L_40e196:

            mov RDI,QWORD PTR [RBP-2240]
            mov RAX,RBX
            add RAX,16
            cmp RDI,RAX
            je .L_40e1ae

            call _ZdlPv@PLT
.L_40e1ae:

            mov RDI,QWORD PTR [RBP-2896]
            mov RSI,QWORD PTR [RBP-2656]
            call .L_414b80

            mov RDI,QWORD PTR [RBP-2736]
            test RDI,RDI
            je .L_40e1d2

            call _ZdlPv@PLT
.L_40e1d2:

            mov RDI,QWORD PTR [RBP-2768]
            test RDI,RDI
            je .L_40e1e3

            call _ZdlPv@PLT
.L_40e1e3:

            mov BYTE PTR [RBP-3064],0
            mov DWORD PTR [RBP-3056],R12D
            jmp .L_40ca9f
.L_40e1f6:

            add RBX,32
            cmp R12,RBX
            jne .L_40c7de

            jmp .L_40c7fc
.L_40e208:

            add RBX,32
            cmp R12,RBX
            jne .L_40c826

            jmp .L_40c844
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40e220:

            mov EAX,ECX
            sub EAX,1
            js .L_40e293

            movsxd RCX,EAX
            mov EAX,EAX
            shl RCX,2
            shl RAX,2
            lea R13,QWORD PTR [RDX+RCX*1-4]
            lea RBX,QWORD PTR [RDX+RCX*1]
            movaps XMM0,XMM2
            sub R13,RAX
            jmp .L_40e260
.L_40e245:

            mov RAX,QWORD PTR [RBP-2736]
            mov RDX,QWORD PTR [RBP-2888]
            movss XMM0,DWORD PTR [RBP-2896]
            movss XMM1,DWORD PTR [RAX+RDX*1]
.L_40e260:

            subss XMM0,DWORD PTR [RBX]
            mov RSI,QWORD PTR [RBP-2928]
            mov RDI,QWORD PTR [RBP-2936]
            mov DWORD PTR [RBP-2672],R12D
            divss XMM0,XMM1
            movss DWORD PTR [RBP-2668],XMM0
.L_40e285:

            call .L_4149d0

            sub RBX,4
            cmp R13,RBX
            jne .L_40e245
.L_40e293:

            mov R8D,DWORD PTR [RBP-2976]
            xor EAX,EAX
            test R8D,R8D
            setg AL
            add DWORD PTR [RBP-2988],EAX
            jmp .L_40cdf4
.L_40e2ad:

            mov RAX,QWORD PTR [RAX+72]
            lea RCX,QWORD PTR [RIP+.L_413230]
            cmp RAX,RCX
            jne .L_40e41a

            mov RAX,QWORD PTR [RBX+184]
            mov RSI,QWORD PTR [RBX+176]
            pxor XMM0,XMM0
            mov QWORD PTR [RBP-2656],0
            mov RDX,RAX
            sub RDX,RSI
            mov R13,RDX
            sar RDX,2
            test RDX,RDX
            movaps XMMWORD PTR [RBP-2672],XMM0
            je .L_40e410

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_40e4da

            mov RDI,R13
            call _Znwm@PLT
.L_40e316:

            mov RCX,RAX
            mov RAX,QWORD PTR [RBX+184]
            mov RSI,QWORD PTR [RBX+176]
            mov RBX,RAX
            sub RBX,RSI
.L_40e32d:

            mov QWORD PTR [RBP-2888],RCX
            mov RDX,R13
            movq XMM0,QWORD PTR [RBP-2888]
            add RDX,RCX
            cmp RAX,RSI
            punpcklqdq XMM0,XMM0
            mov QWORD PTR [RBP-2656],RDX
            movaps XMMWORD PTR [RBP-2672],XMM0
            je .L_40e367

            mov RDI,RCX
            mov RDX,RBX
            call memmove@PLT

            mov RCX,RAX
.L_40e367:

            lea RAX,QWORD PTR [RBP-2672]
            add RCX,RBX
            mov QWORD PTR [RBP-2664],RCX
            mov QWORD PTR [RBP-2896],RAX
.L_40e37f:

            lea RAX,QWORD PTR [RBP-2704]
            mov RSI,QWORD PTR [RBP-2896]
            mov RDI,RAX
            mov QWORD PTR [RBP-3112],RAX
.L_40e397:

            call .L_414440
.L_40e39c:

            mov RDI,QWORD PTR [RBP-2672]
            test RDI,RDI
            je .L_40e3ad

            call _ZdlPv@PLT
.L_40e3ad:

            mov RAX,QWORD PTR [RBP-2904]
            mov R9,QWORD PTR [RBP-3112]
            mov RBX,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RBX]
            jmp .L_40cc16
.L_40e3c7:

            add DWORD PTR [RBP-3008],1
            mov EAX,DWORD PTR [RBP-3008]
            cmp EAX,5
            je .L_40ce7d

            mov RAX,QWORD PTR [RBP-3120]
            test RAX,RAX
            jne .L_40caf7
.L_40e3ed:

            xor ECX,ECX
            xor EBX,EBX
            jmp .L_40cb2d
.L_40e3f6:

            mov RDI,QWORD PTR [RBP-2704]
            test RDI,RDI
            je .L_40ce8e

            call _ZdlPv@PLT

            jmp .L_40ce7d
.L_40e410:

            mov RBX,R13
            xor ECX,ECX
            jmp .L_40e32d
.L_40e41a:

            lea RDX,QWORD PTR [RBP-2672]
            mov RSI,RBX
            mov QWORD PTR [RBP-2896],RDX
            mov RDI,RDX
.L_40e42e:

            call RAX
.L_40e430:

            jmp .L_40e37f
.L_40e435:

            mov RAX,QWORD PTR [RBP-3160]
            xor EBX,EBX
            mov QWORD PTR [RBP-2688],RAX
            jmp .L_40cbe3
.L_40e44a:

            call _ZSt17__throw_bad_allocv@PLT
.L_40e44f:

            mov RDI,QWORD PTR [RBP-2672]
            mov RBX,RAX
            test RDI,RDI
            je .L_40e463

            call _ZdlPv@PLT
.L_40e463:

            mov RDI,QWORD PTR [RBP-2704]
            test RDI,RDI
            je .L_40e474

            call _ZdlPv@PLT
.L_40e474:

            mov RDI,QWORD PTR [RBP-2736]
            test RDI,RDI
            je .L_40e485

            call _ZdlPv@PLT
.L_40e485:

            mov RDI,QWORD PTR [RBP-2768]
            test RDI,RDI
            je .L_40e496

            call _ZdlPv@PLT
.L_40e496:

            mov RAX,QWORD PTR [RBP-2984]
            test RAX,RAX
            je .L_40e4aa

            mov RDI,RAX
            call _ZdlPv@PLT
.L_40e4aa:

            cmp QWORD PTR [RBP-2952],0
            je .L_40e4c0
.L_40e4b4:

            mov RDI,QWORD PTR [RBP-2952]
            call _ZdlPv@PLT
.L_40e4c0:

            mov RDI,QWORD PTR [RBP-2800]
            test RDI,RDI
            je .L_40c5a3

            call _ZdlPv@PLT

            jmp .L_40c5a3
.L_40e4da:

            call _ZSt17__throw_bad_allocv@PLT
.L_40e4df:

            mov DWORD PTR [RBP-2988],0
            jmp .L_40ce52
.L_40e4ee:

            mov RBX,RAX
            jmp .L_40e463
.L_40e4f6:

            movss XMM1,DWORD PTR [RCX-12]
            lea RDX,QWORD PTR [RAX-8]
            ucomiss XMM1,XMM0
            jbe .L_40e527

            mov R10,R11
.L_40e507:

            mov R9D,DWORD PTR [RDX]
            movss DWORD PTR [RDX+12],XMM1
            mov RAX,RDX
            sub RDX,8
            mov DWORD PTR [RDX+16],R9D
            movss XMM1,DWORD PTR [RDX+4]
            ucomiss XMM1,XMM0
            ja .L_40e507

            mov R11,R10
.L_40e527:

            mov DWORD PTR [RAX],R8D
            movss DWORD PTR [RAX+4],XMM0
            jmp .L_40cf3f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e538:

            test RBX,RBX
            je .L_40d358
.L_40e541:

            mov RAX,QWORD PTR [RBP-2896]
            mov BYTE PTR [RBP-2888],1
            add RAX,8
            cmp RBX,RAX
            je .L_40e563

            cmp R12D,DWORD PTR [RBX+32]
            setl BYTE PTR [RBP-2888]
.L_40e563:

            mov EDI,40
.L_40e568:

            call _Znwm@PLT
.L_40e56d:

            mov RDX,QWORD PTR [RBP-2896]
            movzx EDI,BYTE PTR [RBP-2888]
            mov RSI,RAX
            mov DWORD PTR [RAX+32],R12D
            lea RCX,QWORD PTR [RDX+8]
            mov RDX,RBX
            call _ZSt29_Rb_tree_insert_and_rebalancebPSt18_Rb_tree_node_baseS0_RS_@PLT

            add QWORD PTR [RBP-2632],1
            jmp .L_40d358
.L_40e59b:

            cmp QWORD PTR [RBP-2648],RBX
            je .L_40e541
.L_40e5a4:

            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov EAX,DWORD PTR [RAX+32]
            jmp .L_40d34f
.L_40e5b4:

            mov RSI,QWORD PTR [RBP-3128]
            mov RDX,RCX
            movzx EAX,AL
            shl RDX,6
            mov ECX,DWORD PTR [RBX+RAX*4]
            mov EAX,DWORD PTR [RBP-2888]
            add RDX,QWORD PTR [RSI+128]
            imul EAX,DWORD PTR [RDX+24]
            mov RDX,QWORD PTR [RDX+40]
            add EAX,DWORD PTR [RBP-2928]
            shl EAX,6
            add EAX,DWORD PTR [RBP-2960]
            cdqe 
            movsx EAX,WORD PTR [RDX+RAX*2]
            cdq 
            mov ESI,EAX
            idiv ECX
            lea EAX,DWORD PTR [RDX+RDX*1]
            cmp ECX,EAX
            jge .L_40e6fc

            mov EAX,ECX
            sub EAX,EDX
.L_40e606:

            add EAX,ESI
            cwde 
            mov DWORD PTR [RBP-2944],EAX
            jmp .L_40d161
.L_40e614:

            mov RAX,QWORD PTR [RBP-2896]
            lea RBX,QWORD PTR [RAX+8]
            cmp QWORD PTR [RBP-2648],RBX
            jne .L_40e5a4

            mov BYTE PTR [RBP-2888],1
            jmp .L_40e563
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e640:

            mov RAX,QWORD PTR [RBP-2928]
            mov R13,RAX
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBP-2928],RAX
            jmp .L_40d825
.L_40e65a:

            mov RAX,QWORD PTR [RBP-2928]
            mov R13,RAX
            mov RAX,QWORD PTR [RAX+16]
            mov QWORD PTR [RBP-2928],RAX
            jmp .L_40d9dc
.L_40e674:

            add RBX,32
            cmp R13,RBX
            jne .L_40db35

            mov RBX,QWORD PTR [RBP-1272]
            jmp .L_40db5a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40e690:

            add RBX,64
            cmp R13,RBX
            jne .L_40dbe9

            mov RBX,QWORD PTR [RBP-1344]
            jmp .L_40dc0b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e6b0:

            add RBX,32
            cmp R13,RBX
            jne .L_40dd40

            mov RBX,QWORD PTR [RBP-1416]
            jmp .L_40dd65
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e6d0:

            add RBX,32
            cmp R13,RBX
            jne .L_40dd88

            mov RBX,QWORD PTR [RBP-1440]
            jmp .L_40ddad
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e6f0:

            mov R8,R13
            mov R13,QWORD PTR [R13+16]
            jmp .L_40df84
.L_40e6fc:

            lea EAX,DWORD PTR [RDX+RCX*1]
            mov R9D,EDX
            neg R9D
            neg EAX
            add R9D,R9D
            mov EDI,EAX
            mov EAX,EDX
            neg EAX
            cmp ECX,R9D
            cmovl EAX,EDI
            jmp .L_40e606
.L_40e71b:

            call .L_401560
.L_40e720:

            mov RDI,QWORD PTR [RBP-2920]
            mov RBX,RAX
            call .L_401da0
.L_40e72f:

            mov RAX,QWORD PTR [RBP-3104]
            mov RDI,QWORD PTR [RBP-2240]
            add RAX,16
            cmp RDI,RAX
            je .L_40e74b
.L_40e746:

            call _ZdlPv@PLT
.L_40e74b:

            mov RSI,QWORD PTR [RBP-2656]
            mov RDI,QWORD PTR [RBP-2896]
            call .L_414b80

            jmp .L_40e474
.L_40e763:

            mov RSI,QWORD PTR [RBP-3112]
            mov RDI,QWORD PTR [RBP-2920]
            xor EDX,EDX
.L_40e773:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_40e778:

            mov RDX,QWORD PTR [RBP-2704]
            mov QWORD PTR [RBP-1472],RAX
            mov QWORD PTR [RBP-1456],RDX
.L_40e78d:

            mov RDX,RBX
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RBP-2704]
            mov RAX,QWORD PTR [RBP-1472]
            jmp .L_40e136
.L_40e7ae:

            movzx EAX,BYTE PTR [RBP-1088]
            mov BYTE PTR [RBP-1456],AL
            mov RAX,QWORD PTR [RBP-2920]
            add RAX,16
            jmp .L_40e136
.L_40e7cb:

            lea RCX,QWORD PTR [RIP+.L_4151e0]
            lea RSI,QWORD PTR [RIP+.L_41313e]
            lea RDI,QWORD PTR [RIP+.L_414f58]
            mov EDX,750
            call __assert_fail@PLT
.L_40e7ea:

            mov R8,R10
.L_40e7ed:

            mov RAX,QWORD PTR [RBP-2968]
            mov RDI,QWORD PTR [RBP-3008]
            lea RDX,QWORD PTR [RBP-2840]
            mov RSI,R8
            mov QWORD PTR [RBP-2840],RAX
.L_40e80c:

            call .L_40aa10
.L_40e811:

            mov R8,RAX
            jmp .L_40dff4
.L_40e819:

            mov RAX,RBX
            mov RDX,RBX
            pxor XMM0,XMM0
            shr RAX,1
            and EDX,1
            or RAX,RDX
            cvtsi2sd XMM0,RAX
            addsd XMM0,XMM0
            jmp .L_40ddec
.L_40e83a:

            mov RBX,RAX
            mov RAX,QWORD PTR [RBP-2968]
            mov RDI,QWORD PTR [RBP-1856]
            add RAX,16
            cmp RDI,RAX
            je .L_40e859

            call _ZdlPv@PLT
.L_40e859:

            mov R15,QWORD PTR [RBP-2920]
            mov RDI,QWORD PTR [RBP-1472]
            add R15,16
            cmp RDI,R15
            je .L_40e72f

            call _ZdlPv@PLT

            jmp .L_40e72f
.L_40e87e:

            mov RBX,RAX
            jmp .L_40e859
.L_40e883:

            jmp .L_40e87e
.L_40e885:

            pxor XMM3,XMM3
            mov QWORD PTR [RBP-2960],R9
            mov R12D,DWORD PTR [RBP-3056]
            mov DWORD PTR [RBP-2944],0
            movss DWORD PTR [RBP-2888],XMM3
            jmp .L_40d4ad
.L_40e8ae:

            mov RDI,QWORD PTR [RBP-2768]
            mov RAX,QWORD PTR [RBP-2760]
            sub RAX,RDI
            sar RAX,3
            mov QWORD PTR [RBP-2960],RAX
            jmp .L_40d4ad
.L_40e8cf:

            movss XMM0,DWORD PTR [RBP-2888]
            mov EAX,1
            mulss XMM0,DWORD PTR [RDX]
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RSI]
            movss DWORD PTR [RSI],XMM0
            jmp .L_40d639
.L_40e8f1:

            mov RCX,QWORD PTR [RBP-2952]
            xor EAX,EAX
.L_40e8fa:

            movss XMM0,DWORD PTR [RBP-2888]
            mulss XMM0,DWORD PTR [RDX+RAX*1]
            mulss XMM0,XMM1
            addss XMM0,DWORD PTR [RCX+RAX*1]
            movss DWORD PTR [RCX+RAX*1],XMM0
            add RAX,4
            cmp QWORD PTR [RBP-3200],RAX
            jne .L_40e8fa

            jmp .L_40d6f8
.L_40e927:

            mov EAX,2
            jmp .L_40d5a3
.L_40e931:

            mov EAX,1
            jmp .L_40d5a3
.L_40e93b:

            mov RBX,RAX
            jmp .L_40e72f
.L_40e943:

            mov R13,R10
.L_40e946:

            mov RAX,QWORD PTR [RBP-2920]
            mov RDI,QWORD PTR [RBP-2936]
            lea RDX,QWORD PTR [RBP-2856]
            mov RSI,R13
            mov QWORD PTR [RBP-2856],RAX
.L_40e965:

            call .L_40aa10
.L_40e96a:

            mov R13,RAX
            mov RBX,QWORD PTR [RBP-1472]
            jmp .L_40da5e
.L_40e979:

            mov R13,R10
.L_40e97c:

            mov RAX,QWORD PTR [RBP-2920]
            mov RDI,QWORD PTR [RBP-2936]
            lea RDX,QWORD PTR [RBP-2872]
            mov RSI,R13
            mov QWORD PTR [RBP-2872],RAX
.L_40e99b:

            call .L_40aa10
.L_40e9a0:

            mov R13,RAX
            mov RBX,QWORD PTR [RBP-1472]
            jmp .L_40d8a7
.L_40e9af:

            mov R15,QWORD PTR [RBP-2920]
            mov RDI,QWORD PTR [RBP-1472]
            mov RBX,RAX
            add R15,16
            cmp RDI,R15
            jne .L_40e746

            jmp .L_40e74b
.L_40e9d2:

            jmp .L_40e9af
.L_40e9d4:

            mov RAX,R13
.L_40e9d7:

            mov RSI,QWORD PTR [RBP-3096]
            mov RDX,RBX
            mov RDI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP-2864]
            mov RDX,QWORD PTR [RBP-1472]
            jmp .L_40d90f
.L_40e9fc:

            mov RDX,QWORD PTR [RBP-3096]
            movzx EDX,BYTE PTR [RDX]
            mov BYTE PTR [RBP-1456],DL
            mov RDX,R13
            jmp .L_40d90f
.L_40ea14:

            mov RDI,QWORD PTR [RBP-2920]
            lea RSI,QWORD PTR [RBP-2864]
            xor EDX,EDX
.L_40ea24:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_40ea29:

            mov RDX,QWORD PTR [RBP-2864]
            mov QWORD PTR [RBP-1472],RAX
            mov QWORD PTR [RBP-1456],RDX
            jmp .L_40e9d7
.L_40ea40:

            mov RBX,RAX
            jmp .L_40e74b
.L_40ea48:

            mov RAX,QWORD PTR [RBP-2904]
            mov RDI,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [RDI]
.L_40ea56:

            call QWORD PTR [RAX+88]

            mov RSI,QWORD PTR [RBP-2760]
            mov RDI,QWORD PTR [RBP-2768]
            mulss XMM0,DWORD PTR [RIP+.L_43e980-167020]
            mov RAX,RSI
            sub RAX,RDI
            sar RAX,3
            mov R9,RAX
            mov RAX,RDI
            mov RDX,R9
.L_40ea82:

            test RDX,RDX
            jle .L_40eab6

            mov RCX,RDX
            sar RCX,1
            lea R8,QWORD PTR [RAX+RCX*8]
            ucomiss XMM0,DWORD PTR [R8+4]
            jbe .L_40eaae

            jmp .L_40eb17
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40eaa0:

            sar RCX,1
            lea R8,QWORD PTR [RAX+RCX*8]
            ucomiss XMM0,DWORD PTR [R8+4]
            ja .L_40eb17
.L_40eaae:

            test RCX,RCX
            mov RDX,RCX
            jne .L_40eaa0
.L_40eab6:

            mov EDX,DWORD PTR [RBP-2936]
            sub RAX,RDI
            sar RAX,3
            cmp EDX,EAX
            cmovge EAX,EDX
            mov DWORD PTR [RBP-2936],EAX
            jmp .L_40d04c
.L_40ead3:

            movsd XMM0,QWORD PTR [RIP+.L_415c98]
            call RAX

            jmp .L_40cfd6
.L_40eae2:

            pxor XMM0,XMM0
            cvtsi2sd XMM0,DWORD PTR [RBP-3048]
            mulsd XMM0,QWORD PTR [RIP+.L_415cc8]
            movsd QWORD PTR [RBP-2976],XMM0
            pxor XMM0,XMM0
            cvtsi2ss XMM0,DWORD PTR [RBP-3144]
            mulss XMM0,DWORD PTR [RIP+.L_415d18]
            jmp .L_40d00a
.L_40eb17:

            sub RDX,RCX
            lea RAX,QWORD PTR [R8+8]
            sub RDX,1
            jmp .L_40ea82
.L_40eb27:

            cmp R13,RAX
            je .L_40cf97

            mov R11,R13
.L_40eb33:

            movss XMM0,DWORD PTR [RAX+4]
            mov RDX,RAX
            mov ESI,DWORD PTR [RAX]
            movss XMM1,DWORD PTR [RBX+4]
            ucomiss XMM1,XMM0
            jbe .L_40ec86

            mov RDI,RAX
            sub RDI,RBX
            mov RCX,RDI
            sar RCX,3
            test RDI,RDI
            jle .L_40eb7c

            mov R10,R11
.L_40eb60:

            sub RDX,8
            mov EDI,DWORD PTR [RDX]
            sub RCX,1
            movss XMM1,DWORD PTR [RDX+4]
            movss DWORD PTR [RDX+12],XMM1
            mov DWORD PTR [RDX+8],EDI
            jne .L_40eb60

            mov R11,R10
.L_40eb7c:

            movss DWORD PTR [RBX+4],XMM0
            mov DWORD PTR [RBX],ESI
.L_40eb83:

            add RAX,8
            cmp R11,RAX
            jne .L_40eb33

            jmp .L_40cf97
.L_40eb91:

            mov RDI,QWORD PTR [RBP-2736]
            test RDI,RDI
            je .L_40ebac

            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RBP-2768]
            mov R13,RAX
.L_40ebac:

            test R13,R13
            je .L_40ebb9

            mov RDI,R13
            call _ZdlPv@PLT
.L_40ebb9:

            add QWORD PTR [RBP-3088],4
            mov RDX,QWORD PTR [RBP-3088]
            cmp RDX,8
            je .L_40ebe3

            lea RAX,QWORD PTR [RIP+.L_415388]
            mov EAX,DWORD PTR [RAX+RDX*1]
            mov DWORD PTR [RBP-2912],EAX
            jmp .L_40ca6b
.L_40ebe3:

            mov RAX,QWORD PTR [RBP-2984]
            test RAX,RAX
            je .L_40ebf7

            mov RDI,RAX
            call _ZdlPv@PLT
.L_40ebf7:

            mov RAX,QWORD PTR [RBP-2952]
            test RAX,RAX
            je .L_40ec0b

            mov RDI,RAX
            call _ZdlPv@PLT
.L_40ec0b:

            mov RDI,QWORD PTR [RBP-2800]
            test RDI,RDI
            je .L_40ec1c

            call _ZdlPv@PLT
.L_40ec1c:

            mov RDI,QWORD PTR [RBP-2832]
            test RDI,RDI
            je .L_40ec2d

            call _ZdlPv@PLT
.L_40ec2d:

            mov RAX,QWORD PTR [RBP-3000]
            test RAX,RAX
            je .L_40ec41

            mov RDI,RAX
            call _ZdlPv@PLT
.L_40ec41:

            mov RAX,QWORD PTR [RBP-3024]
            test RAX,RAX
            je .L_40ec55

            mov RDI,RAX
            call _ZdlPv@PLT
.L_40ec55:

            mov RAX,QWORD PTR [RBP-3016]
            test RAX,RAX
            je .L_40ec69

            mov RDI,RAX
            call _ZdlPv@PLT
.L_40ec69:

            mov RAX,QWORD PTR [RBP-3080]
            test RAX,RAX
            je .L_40aebe

            mov RDI,RAX
            call _ZdlPv@PLT

            jmp .L_40aebe
.L_40ec86:

            movss XMM1,DWORD PTR [RAX-4]
            lea RCX,QWORD PTR [RAX-8]
            ucomiss XMM1,XMM0
            jbe .L_40ecb5

            mov R8,R11
.L_40ec97:

            mov EDI,DWORD PTR [RCX]
            movss DWORD PTR [RCX+12],XMM1
            mov RDX,RCX
            sub RCX,8
            mov DWORD PTR [RCX+16],EDI
            movss XMM1,DWORD PTR [RCX+4]
            ucomiss XMM1,XMM0
            ja .L_40ec97

            mov R11,R8
.L_40ecb5:

            mov DWORD PTR [RDX],ESI
            movss DWORD PTR [RDX+4],XMM0
            jmp .L_40eb83
.L_40ecc1:

            mov RBX,RAX
            jmp .L_40e474
.L_40ecc9:

            call _ZSt17__throw_bad_allocv@PLT
.L_40ecce:

            call _ZSt17__throw_bad_allocv@PLT
.L_40ecd3:

            mov QWORD PTR [RBP-2984],0
            mov QWORD PTR [RBP-2952],0
            jmp .L_40c994
.L_40ecee:

            mov RBX,RAX
            jmp .L_40e4c0
.L_40ecf6:

            mov RAX,QWORD PTR [RBP-2904]
            pxor XMM1,XMM1
            mov RAX,QWORD PTR [RAX+24]
            cvtsi2sd XMM1,DWORD PTR [RBP-3056]
            mov RDX,QWORD PTR [RAX+8]
            test RDX,RDX
            js .L_40ed3e

            pxor XMM0,XMM0
            cvtsi2sd XMM0,RDX
.L_40ed1f:

            mulsd XMM0,QWORD PTR [RIP+.L_415cb8]
            ucomisd XMM1,XMM0
            jbe .L_40cab5

            jmp .L_40ebb9
.L_40ed36:

            mov RBX,RAX
            jmp .L_40e4b4
.L_40ed3e:

            mov RAX,RDX
            pxor XMM0,XMM0
            shr RAX,1
            and EDX,1
            or RAX,RDX
            cvtsi2sd XMM0,RAX
            addsd XMM0,XMM0
            jmp .L_40ed1f
.L_40ed59:

            mov R12,RAX
            jmp .L_40c587
.L_40ed61:

            mov RDX,RSI
            sub RDX,1
            mov RSI,RDX
            je .L_40bef5

            mov EDX,1028
            jmp .L_40beaf
.L_40ed7b:

            call _ZSt17__throw_bad_allocv@PLT
.L_40ed80:

            xor EBX,EBX
            xor R12D,R12D
            jmp .L_40bef8
.L_40ed8a:

            mov RBX,RAX
            jmp .L_40c597
.L_40ed92:

            mov RBX,RAX
            jmp .L_40c5a3
.L_40ed9a:

            call _ZSt17__throw_bad_allocv@PLT
.L_40ed9f:

            xor EAX,EAX
            jmp .L_40be08
.L_40eda6:

            mov RBX,RAX
            jmp .L_40c501
.L_40edae:

            mov RDI,RBX
.L_40edb1:

            call _Znwm@PLT
.L_40edb6:

            mov QWORD PTR [RBP-3016],RAX
            add RAX,RBX
            mov QWORD PTR [RBP-3088],RAX
            movabs RAX,4611686018427387903
            cmp RBX,RAX
            ja .L_40ee15

            shl RBX,2
            mov RDI,RBX
.L_40eddd:

            call _Znwm@PLT
.L_40ede2:

            add RBX,RAX
            mov QWORD PTR [RBP-3024],RAX
            mov QWORD PTR [RBP-3056],RBX
            jmp .L_40afc7
.L_40edf8:

            call _ZSt17__throw_bad_allocv@PLT
.L_40edfd:

            mov QWORD PTR [RBP-3080],0
            jmp .L_40af88
.L_40ee0d:

            mov RBX,RAX
            jmp .L_40c512
.L_40ee15:

            lea RDI,QWORD PTR [RIP+.L_41317c]
.L_40ee1c:

            call _ZSt20__throw_length_errorPKc@PLT
.L_40ee21:

            mov RBX,RAX
            jmp .L_40c523
.L_40ee29:

            call __stack_chk_fail@PLT
.L_40ee2e:

            mov RBX,RAX
            jmp .L_40c4eb
.L_40ee36:

            lea RCX,QWORD PTR [RIP+.L_4151e0]
            lea RSI,QWORD PTR [RIP+.L_41313e]
            lea RDI,QWORD PTR [RIP+.L_414ec8]
            mov EDX,556
            call __assert_fail@PLT
.L_40ee55:

            lea RCX,QWORD PTR [RIP+.L_4151e0]
            lea RSI,QWORD PTR [RIP+.L_41313e]
            lea RDI,QWORD PTR [RIP+.L_414e98]
            mov EDX,555
            call __assert_fail@PLT
.L_40ee74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ee80:

            push R15
            push R14
            mov RAX,RCX
            push R13
            push R12
            mov R15,RSI
            push RBP
            push RBX
            mov RSI,RAX
            mov RBP,RDI
            mov RBX,RDX
            mov R14,R8
            sub RSP,1592
.L_40eea3:

            mov QWORD PTR [RSP+72],RCX
            mov QWORD PTR [RSP+64],RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1576],RCX
            xor ECX,ECX
            mov ECX,96
            mov QWORD PTR [RSP+48],R8

            rep movsq 

            mov RSI,RDX
            mov RDI,R8
.L_40eed3:

            call .L_424760

            mov RSI,RBP
            lea RBP,QWORD PTR [RSP+192]
            mov RDI,R14
            call .L_4248e0
.L_40eeeb:

            lea RAX,QWORD PTR [RBP+16]
            mov RSI,RBX
            mov QWORD PTR [RSP+80],RBP
            mov QWORD PTR [RSP+200],0
            mov BYTE PTR [RSP+208],0
            mov QWORD PTR [RSP+192],RAX
            lea RAX,QWORD PTR [RSP+256]
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            mov RBX,RAX
.L_40ef26:

            call .L_4133b0
.L_40ef2b:

            mov RSI,RBX
            mov RDI,R14
.L_40ef31:

            call .L_426ba0

            mov RAX,QWORD PTR [RSP+192]
            mov QWORD PTR [RSP+200],0
            lea RDX,QWORD PTR [RIP+.L_409390]
            mov RCX,RBP
            mov RDI,RBX
            mov BYTE PTR [RAX],0
            movzx ESI,BYTE PTR [R15+4]
            call .L_41f6e0
.L_40ef64:

            test AL,AL
            je .L_410098

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+480]
            add RAX,240
            cmp RDI,RAX
            je .L_40ef89

            call _ZdlPv@PLT
.L_40ef89:

            mov RBX,QWORD PTR [RSP+464]
            mov RBP,QWORD PTR [RSP+456]
            cmp RBX,RBP
            je .L_40efc7

            nop
            nop
.L_40efa0:

            mov RDI,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_40fd88

            add RBP,32
            call _ZdlPv@PLT

            cmp RBX,RBP
            jne .L_40efa0
.L_40efbf:

            mov RBP,QWORD PTR [RSP+456]
.L_40efc7:

            test RBP,RBP
            je .L_40efd4

            mov RDI,RBP
            call _ZdlPv@PLT
.L_40efd4:

            mov RDI,QWORD PTR [RSP+432]
            test RDI,RDI
            je .L_40efe6

            call _ZdlPv@PLT
.L_40efe6:

            mov RAX,QWORD PTR [RSP+416]
            mov RDI,QWORD PTR [RSP+408]
            cmp RAX,RDI
            je .L_40f03a

            lea RBP,QWORD PTR [RDI+40]
            sub RAX,RBP
            shr RAX,3
            lea RBX,QWORD PTR [RDI+RAX*8+40]
            jmp .L_40f021
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f010:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBP
            je .L_40f032
.L_40f01d:

            add RBP,40
.L_40f021:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            jne .L_40f010

            cmp RBP,RBX
            mov RDI,RBP
            jne .L_40f01d
.L_40f032:

            mov RDI,QWORD PTR [RSP+408]
.L_40f03a:

            test RDI,RDI
            je .L_40f044

            call _ZdlPv@PLT
.L_40f044:

            mov RBX,QWORD PTR [RSP+392]
            mov RBP,QWORD PTR [RSP+384]
            cmp RBX,RBP
            je .L_40f083

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f060:

            mov RDI,QWORD PTR [RBP+40]
            test RDI,RDI
            je .L_40fda0

            add RBP,64
            call _ZdlPv@PLT

            cmp RBX,RBP
            jne .L_40f060
.L_40f07b:

            mov RBP,QWORD PTR [RSP+384]
.L_40f083:

            test RBP,RBP
            je .L_40f090

            mov RDI,RBP
            call _ZdlPv@PLT
.L_40f090:

            mov RAX,QWORD PTR [RSP+368]
            mov RBP,QWORD PTR [RSP+360]
            cmp RAX,RBP
            je .L_40f120

            lea R12,QWORD PTR [RBP+56]
            movabs RDX,988218432520154551
            sub RAX,R12
            shr RAX,3
            imul RAX,RDX
            movabs RDX,2305843009213693951
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX*8]
            sub RDX,RAX
            lea RBX,QWORD PTR [RBP+RDX*8]
            jmp .L_40f0f9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f0e8:

            call _ZdlPv@PLT

            cmp RBX,R12
            mov RBP,R12
            je .L_40f118
.L_40f0f5:

            add R12,56
.L_40f0f9:

            mov RDI,QWORD PTR [RBP+24]
            test RDI,RDI
            je .L_40f107

            call _ZdlPv@PLT
.L_40f107:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            jne .L_40f0e8

            cmp R12,RBX
            mov RBP,R12
            jne .L_40f0f5
.L_40f118:

            mov RBP,QWORD PTR [RSP+360]
.L_40f120:

            test RBP,RBP
            je .L_40f12d

            mov RDI,RBP
            call _ZdlPv@PLT
.L_40f12d:

            mov RAX,QWORD PTR [RSP+344]
            mov RDI,QWORD PTR [RSP+336]
            cmp RAX,RDI
            je .L_40f181

            lea RBP,QWORD PTR [RDI+40]
            sub RAX,RBP
            shr RAX,3
            lea RBX,QWORD PTR [RDI+RAX*8+40]
            jmp .L_40f169
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f158:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RDI,RBP
            je .L_40f179
.L_40f165:

            add RBP,40
.L_40f169:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_40f158

            cmp RBP,RBX
            mov RDI,RBP
            jne .L_40f165
.L_40f179:

            mov RDI,QWORD PTR [RSP+336]
.L_40f181:

            test RDI,RDI
            je .L_40f18b

            call _ZdlPv@PLT
.L_40f18b:

            mov RBX,QWORD PTR [RSP+320]
            mov RBP,QWORD PTR [RSP+312]
            cmp RBX,RBP
            je .L_40f1c7
.L_40f1a0:

            mov RDI,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_40fd70

            add RBP,32
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_40f1a0
.L_40f1bf:

            mov RBP,QWORD PTR [RSP+312]
.L_40f1c7:

            test RBP,RBP
            je .L_40f1d4

            mov RDI,RBP
            call _ZdlPv@PLT
.L_40f1d4:

            mov RBX,QWORD PTR [RSP+296]
            mov RBP,QWORD PTR [RSP+288]
            cmp RBX,RBP
            je .L_40f217

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f1f0:

            mov RDI,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RBP+16]
            cmp RDI,RAX
            je .L_40fd58

            add RBP,32
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_40f1f0
.L_40f20f:

            mov RBP,QWORD PTR [RSP+288]
.L_40f217:

            test RBP,RBP
            je .L_40f224

            mov RDI,RBP
            call _ZdlPv@PLT
.L_40f224:

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+8]
.L_40f22e:

            call .L_424f10
.L_40f233:

            mov RAX,QWORD PTR [RSP+256]
            lea RDI,QWORD PTR [RSP+224]
            lea RSI,QWORD PTR [RSP+104]
            xor EDX,EDX
            mov QWORD PTR [RSP+104],20
            mov QWORD PTR [RSP+40],RDI
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+224],RAX
.L_40f269:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_40f26e:

            mov RDX,QWORD PTR [RSP+104]
            mov QWORD PTR [RSP+224],RAX
            movdqa XMM0,XMMWORD PTR [RIP+.L_415c50]
            mov QWORD PTR [RSP+240],RDX
            mov DWORD PTR [RAX+16],1936617321
            movups XMMWORD PTR [RAX],XMM0
            mov RAX,QWORD PTR [RSP+104]
            mov RDX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+232],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RBP,QWORD PTR [R15+32]
            mov R12,QWORD PTR [RBP+16]
            lea R13,QWORD PTR [RBP+8]
            mov QWORD PTR [RSP+24],R13
            test R12,R12
            je .L_40f381

            mov RAX,QWORD PTR [RSP+224]
            mov RBX,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP],RAX
            mov RAX,R12
            mov R12,RBX
            mov RBX,RAX
            jmp .L_40f2f9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f2f0:

            mov RBX,QWORD PTR [RBX+24]
            test RBX,RBX
            je .L_40f345
.L_40f2f9:

            mov R14,QWORD PTR [RBX+40]
            mov RDX,R12
            cmp R14,R12
            cmovbe RDX,R14
            test RDX,RDX
            je .L_40f31d

            mov RDI,QWORD PTR [RBX+32]
            mov RSI,QWORD PTR [RSP]
            call memcmp@PLT

            test EAX,EAX
            jne .L_40f335
.L_40f31d:

            sub R14,R12
            cmp R14,2147483647
            jg .L_40f339

            cmp R14,-2147483648
            jl .L_40f2f0

            mov EAX,R14D
.L_40f335:

            test EAX,EAX
            js .L_40f2f0
.L_40f339:

            mov R13,RBX
            mov RBX,QWORD PTR [RBX+16]
            test RBX,RBX
            jne .L_40f2f9
.L_40f345:

            cmp QWORD PTR [RSP+24],R13
            mov RBX,R12
            je .L_40f381

            mov R12,QWORD PTR [R13+40]
            cmp RBX,R12
            mov RDX,R12
            cmovbe RDX,RBX
            test RDX,RDX
            jne .L_40fdb2

            sub RBX,R12
            cmp RBX,2147483647
            jg .L_40f39e
.L_40f372:

            cmp RBX,-2147483648
            jl .L_40f381

            mov EAX,EBX
.L_40f37d:

            test EAX,EAX
            jns .L_40f39e
.L_40f381:

            mov RAX,QWORD PTR [RSP+40]
            lea RDX,QWORD PTR [RSP+112]
            mov RSI,R13
            mov RDI,RBP
            mov QWORD PTR [RSP+112],RAX
.L_40f396:

            call .L_40aa10
.L_40f39b:

            mov R13,RAX
.L_40f39e:

            mov EAX,DWORD PTR [R13+64]
            lea R12,QWORD PTR [RSP+544]
            sub RSP,8
.L_40f3ae:

            push QWORD PTR [RSP+24]
            lea R8,QWORD PTR [RIP+.L_414f88]
            mov ECX,1024
            mov RDI,R12
            mov EDX,1
            mov ESI,1024
            lea R9D,DWORD PTR [RAX+1]
            xor EAX,EAX
            call __snprintf_chk@PLT

            mov EBX,EAX
            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+240]
            pop R8
            pop R9
.L_40f3e9:

            add RAX,16
            cmp RDI,RAX
            je .L_40f3f7

            call _ZdlPv@PLT
.L_40f3f7:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+256]
            add RAX,16
            cmp RDI,RAX
            je .L_40f412

            call _ZdlPv@PLT
.L_40f412:

            test EBX,EBX
            jle .L_41009d

            mov RAX,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+1567],0
            mov RBX,R12
            add RAX,16
            mov QWORD PTR [RSP+256],RAX
.L_40f436:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40f436

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov ECX,EAX
            cmove RBX,RDX
            add CL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+120],RBX
            ja .L_40fdf0

            cmp RBX,1
            jne .L_40fddc

            movzx EAX,BYTE PTR [RSP+544]
            mov BYTE PTR [RSP+272],AL
            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
.L_40f49e:

            mov QWORD PTR [RSP+264],RBX
            mov BYTE PTR [RAX+RBX*1],0
            mov RBX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R15+32]
            mov RSI,RBX
.L_40f4b6:

            call .L_4196f0
.L_40f4bb:

            mov RDI,QWORD PTR [RSP+256]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40f4d1

            call _ZdlPv@PLT
.L_40f4d1:

            mov RAX,QWORD PTR [RSP+72]
            lea RCX,QWORD PTR [RAX+800]
            mov QWORD PTR [RSP+88],RAX
            add RAX,1056
            mov QWORD PTR [RSP+24],RAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+16],RCX
            mov QWORD PTR [RSP],RAX
            lea RAX,QWORD PTR [RSP+136]
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+56],RAX
            mov RAX,RCX
            nop
            nop
            nop
            nop
            nop
.L_40f520:

            lea R14,QWORD PTR [RAX-768]
            mov RAX,QWORD PTR [RSP+8]
            lea R13,QWORD PTR [RAX+16]
.L_40f530:

            lea RBP,QWORD PTR [R14-32]
            nop
            nop
            nop
            nop
.L_40f538:

            mov R9D,DWORD PTR [RBP]
            lea R8,QWORD PTR [RIP+.L_4131e0]
            mov ECX,1024
            mov EDX,1
            mov ESI,1024
            mov RDI,R12
            xor EAX,EAX
            mov RBX,R12
            call __snprintf_chk@PLT

            mov BYTE PTR [RSP+1567],0
            mov QWORD PTR [RSP+256],R13
.L_40f56f:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40f56f

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov ECX,EAX
            cmove RBX,RDX
            add CL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+128],RBX
            ja .L_40fe58

            cmp RBX,1
            jne .L_40fea8

            movzx EAX,BYTE PTR [RSP+544]
            mov BYTE PTR [RSP+272],AL
            mov RAX,R13
.L_40f5d4:

            mov QWORD PTR [RSP+264],RBX
            mov RSI,QWORD PTR [RSP+8]
            mov BYTE PTR [RAX+RBX*1],0
            mov RDI,QWORD PTR [R15+32]
.L_40f5e9:

            call .L_4196f0
.L_40f5ee:

            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,R13
            je .L_40fe40

            add RBP,4
            call _ZdlPv@PLT

            cmp R14,RBP
            jne .L_40f538
.L_40f611:

            mov DWORD PTR [R12],2105376
            mov QWORD PTR [RSP+256],R13
            mov RBX,R12
            mov BYTE PTR [RSP+1567],0
.L_40f62c:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40f62c

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov ECX,EAX
            cmove RBX,RDX
            add CL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+136],RBX
            ja .L_40fee0

            cmp RBX,1
            jne .L_40ff30

            movzx EAX,BYTE PTR [RSP+544]
            mov BYTE PTR [RSP+272],AL
            mov RAX,R13
.L_40f691:

            mov QWORD PTR [RSP+264],RBX
            mov RSI,QWORD PTR [RSP+8]
            mov BYTE PTR [RAX+RBX*1],0
            mov RDI,QWORD PTR [R15+32]
.L_40f6a6:

            call .L_4196f0
.L_40f6ab:

            mov RDI,QWORD PTR [RSP+256]
            cmp RDI,R13
            je .L_40fec0

            call _ZdlPv@PLT

            add R14,256
            cmp QWORD PTR [RSP+16],R14
            jne .L_40f530
.L_40f6d3:

            mov RAX,QWORD PTR [RSP+8]
            mov ESI,10
            mov RBX,R12
            mov WORD PTR [R12],SI
            mov BYTE PTR [RSP+1567],0
            add RAX,16
            mov QWORD PTR [RSP+256],RAX
.L_40f6f9:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40f6f9

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov ECX,EAX
            cmove RBX,RDX
            add CL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+144],RBX
            ja .L_40ff5b

            cmp RBX,1
            jne .L_40ffa7

            movzx EAX,BYTE PTR [RSP+544]
            mov BYTE PTR [RSP+272],AL
            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
.L_40f764:

            mov QWORD PTR [RSP+264],RBX
            mov BYTE PTR [RAX+RBX*1],0
            mov RBX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R15+32]
            mov RSI,RBX
.L_40f77c:

            call .L_4196f0
.L_40f781:

            mov RDI,QWORD PTR [RSP+256]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40ff40

            call _ZdlPv@PLT

            add QWORD PTR [RSP+16],32
            mov RAX,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+24],RAX
            jne .L_40f520
.L_40f7b1:

            pxor XMM5,XMM5
            mov RAX,QWORD PTR [RSP+200]
            mov RCX,QWORD PTR [RSP+72]
            mov RSI,QWORD PTR [RSP+88]
            lea RDX,QWORD PTR [RIP+.L_415a00]
            movsd XMM3,QWORD PTR [RIP+.L_415c90]
            movsd QWORD PTR [RSP],XMM5
            mov QWORD PTR [RSP+32],RAX
            add RCX,768
            movsd XMM2,QWORD PTR [RIP+.L_415c98]
.L_40f7ef:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40f7f8:

            pxor XMM0,XMM0
            movapd XMM1,XMM2
            cvtsi2sd XMM0,DWORD PTR [RDX+RAX*1]
            mulsd XMM0,XMM3
            addsd XMM0,XMM2
            divsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,DWORD PTR [RSI+RAX*1]
            subsd XMM0,XMM2
            add RAX,4
            cmp RAX,256
            mulsd XMM0,XMM3
            mulsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RSP]
            movsd QWORD PTR [RSP],XMM0
            jne .L_40f7f8

            add RSI,256
            cmp RCX,RSI
            jne .L_40f7ef

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+8]
.L_40f852:

            call .L_424f10
.L_40f857:

            mov RAX,QWORD PTR [RSP+256]
            mov RDI,QWORD PTR [RSP+40]
            lea RSI,QWORD PTR [RSP+152]
            xor EDX,EDX
            mov QWORD PTR [RSP+152],20
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+224],RAX
.L_40f88b:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_40f890:

            mov RDX,QWORD PTR [RSP+152]
            mov QWORD PTR [RSP+224],RAX
            movdqa XMM0,XMMWORD PTR [RIP+.L_415c50]
            mov QWORD PTR [RSP+240],RDX
            mov DWORD PTR [RAX+16],1936617321
            movups XMMWORD PTR [RAX],XMM0
            mov RAX,QWORD PTR [RSP+152]
            mov RDX,QWORD PTR [RSP+224]
            mov QWORD PTR [RSP+232],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [R15+32]
            mov R13,QWORD PTR [RAX+16]
            lea R14,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+72],RAX
            mov QWORD PTR [RSP+24],R14
            test R13,R13
            je .L_40f9b0

            mov RAX,QWORD PTR [RSP+224]
            mov RBP,QWORD PTR [RSP+232]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_40f919
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f910:

            mov R13,QWORD PTR [R13+24]
            test R13,R13
            je .L_40f965
.L_40f919:

            mov RBX,QWORD PTR [R13+40]
            mov RDX,RBP
            cmp RBX,RBP
            cmovbe RDX,RBX
            test RDX,RDX
            je .L_40f93e

            mov RDI,QWORD PTR [R13+32]
            mov RSI,QWORD PTR [RSP+16]
            call memcmp@PLT

            test EAX,EAX
            jne .L_40f955
.L_40f93e:

            sub RBX,RBP
            cmp RBX,2147483647
            jg .L_40f959

            cmp RBX,-2147483648
            jl .L_40f910

            mov EAX,EBX
.L_40f955:

            test EAX,EAX
            js .L_40f910
.L_40f959:

            mov R14,R13
            mov R13,QWORD PTR [R13+16]
            test R13,R13
            jne .L_40f919
.L_40f965:

            cmp R14,QWORD PTR [RSP+24]
            je .L_40f9b0

            mov R13,QWORD PTR [R14+40]
            cmp RBP,R13
            mov RDX,R13
            cmovbe RDX,RBP
            test RDX,RDX
            je .L_40f991

            mov RSI,QWORD PTR [R14+32]
            mov RDI,QWORD PTR [RSP+16]
            call memcmp@PLT

            test EAX,EAX
            jne .L_40f9ac
.L_40f991:

            mov R9,RBP
            sub R9,R13
            cmp R9,2147483647
            jg .L_40f9d5

            cmp R9,-2147483648
            jl .L_40f9b0

            mov EAX,R9D
.L_40f9ac:

            test EAX,EAX
            jns .L_40f9d5
.L_40f9b0:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+72]
            lea RDX,QWORD PTR [RSP+160]
            mov RSI,R14
            mov QWORD PTR [RSP+160],RAX
.L_40f9cd:

            call .L_40aa10
.L_40f9d2:

            mov R14,RAX
.L_40f9d5:

            mov EAX,DWORD PTR [R14+64]
            push QWORD PTR [RSP+32]
.L_40f9dd:

            lea R8,QWORD PTR [RIP+.L_414fb0]
            push QWORD PTR [RSP+64]
            mov ECX,1024
            mov EDX,1
            mov RDI,R12
            mov ESI,1024
            movsd XMM0,QWORD PTR [RSP+16]
            lea R9D,DWORD PTR [RAX+1]
            mov EAX,1
            call __snprintf_chk@PLT

            mov EBX,EAX
            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+240]
            pop RDX
            pop RCX
.L_40fa1f:

            add RAX,16
            cmp RDI,RAX
            je .L_40fa2d

            call _ZdlPv@PLT
.L_40fa2d:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+256]
            add RAX,16
            cmp RDI,RAX
            je .L_40fa48

            call _ZdlPv@PLT
.L_40fa48:

            test EBX,EBX
            jle .L_410124

            mov RAX,QWORD PTR [RSP+8]
            mov BYTE PTR [RSP+1567],0
            mov RBX,R12
            add RAX,16
            mov QWORD PTR [RSP+256],RAX
.L_40fa6c:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_40fa6c

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov ECX,EAX
            cmove RBX,RDX
            add CL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+168],RBX
            ja .L_40ffc0

            cmp RBX,1
            jne .L_41000f

            movzx EAX,BYTE PTR [RSP+544]
            mov BYTE PTR [RSP+272],AL
            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
.L_40fad7:

            mov QWORD PTR [RSP+264],RBX
            mov BYTE PTR [RAX+RBX*1],0
            mov RBX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R15+32]
            mov RSI,RBX
.L_40faef:

            call .L_4196f0
.L_40faf4:

            mov RDI,QWORD PTR [RSP+256]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_40fb0a

            call _ZdlPv@PLT
.L_40fb0a:

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+176]
            xor EDX,EDX
            mov QWORD PTR [RSP+176],20
            lea RAX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+256],RAX
.L_40fb31:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_40fb36:

            mov RDX,QWORD PTR [RSP+176]
            mov QWORD PTR [RSP+256],RAX
            movdqa XMM0,XMMWORD PTR [RIP+.L_415c50]
            mov QWORD PTR [RSP+272],RDX
            mov DWORD PTR [RAX+16],1936617321
            movups XMMWORD PTR [RAX],XMM0
            mov RAX,QWORD PTR [RSP+176]
            mov RDX,QWORD PTR [RSP+256]
            mov QWORD PTR [RSP+264],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,QWORD PTR [R15+32]
            mov R14,QWORD PTR [RAX+16]
            lea RBP,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP],RBP
            test R14,R14
            je .L_40fc4b

            mov R12,QWORD PTR [RSP+264]
            mov RBX,QWORD PTR [RSP+256]
            jmp .L_40fbb9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40fbb0:

            mov R14,QWORD PTR [R14+24]
            test R14,R14
            je .L_40fc04
.L_40fbb9:

            mov R13,QWORD PTR [R14+40]
            mov RDX,R12
            cmp R13,R12
            cmovbe RDX,R13
            test RDX,RDX
            je .L_40fbdc

            mov RDI,QWORD PTR [R14+32]
            mov RSI,RBX
            call memcmp@PLT

            test EAX,EAX
            jne .L_40fbf4
.L_40fbdc:

            sub R13,R12
            cmp R13,2147483647
            jg .L_40fbf8

            cmp R13,-2147483648
            jl .L_40fbb0

            mov EAX,R13D
.L_40fbf4:

            test EAX,EAX
            js .L_40fbb0
.L_40fbf8:

            mov RBP,R14
            mov R14,QWORD PTR [R14+16]
            test R14,R14
            jne .L_40fbb9
.L_40fc04:

            cmp QWORD PTR [RSP],RBP
            je .L_40fc4b

            mov R13,QWORD PTR [RBP+40]
            cmp R12,R13
            mov RDX,R13
            cmovbe RDX,R12
            test RDX,RDX
            je .L_40fc2d

            mov RSI,QWORD PTR [RBP+32]
            mov RDI,RBX
            call memcmp@PLT

            test EAX,EAX
            jne .L_40fc47
.L_40fc2d:

            mov RCX,R12
            sub RCX,R13
            cmp RCX,2147483647
            jg .L_40fc78

            cmp RCX,-2147483648
            jl .L_40fc4b

            mov EAX,ECX
.L_40fc47:

            test EAX,EAX
            jns .L_40fc78
.L_40fc4b:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RSP+184]
            mov RSI,RBP
            mov QWORD PTR [RSP+184],RAX
.L_40fc68:

            call .L_40aa10
.L_40fc6d:

            mov RBX,QWORD PTR [RSP+256]
            mov RBP,RAX
.L_40fc78:

            mov RAX,QWORD PTR [RSP+8]
            add DWORD PTR [RBP+64],1
            add RAX,16
            cmp RBX,RAX
            je .L_40fc92

            mov RDI,RBX
            call _ZdlPv@PLT
.L_40fc92:

            mov RDI,QWORD PTR [R15+16]
            mov RSI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RDI]
.L_40fc9e:

            call QWORD PTR [RAX+16]

            mov RDI,QWORD PTR [R15+16]
            lea RDX,QWORD PTR [RIP+.L_4130f0]
            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX+64]
            cmp RAX,RDX
            jne .L_410028

            pxor XMM0,XMM0
            pxor XMM1,XMM1
            cvtss2sd XMM0,DWORD PTR [RDI+16]
            cvtss2sd XMM1,DWORD PTR [RDI+168]
            mulsd XMM0,QWORD PTR [RIP+.L_415cd0]
            ucomisd XMM0,XMM1
            setae AL
.L_40fce0:

            mov RCX,QWORD PTR [RSP+64]
            mov RBX,QWORD PTR [RSP+80]
            mov RDI,R15
            mov BYTE PTR [RCX+776],AL
            mov RAX,QWORD PTR [RSP+200]
            mov RSI,RBX
            mov QWORD PTR [RCX+768],RAX
            call .L_40a4b0

            mov RDI,QWORD PTR [RSP+192]
            mov RAX,RBX
            add RAX,16
            cmp RDI,RAX
            je .L_40fd23

            call _ZdlPv@PLT
.L_40fd23:

            mov RCX,QWORD PTR [RSP+1576]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+64]
            jne .L_410078

            add RSP,1592
.L_40fd46:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fd58:

            add RBP,32
            cmp RBX,RBP
            jne .L_40f1f0

            jmp .L_40f20f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fd70:

            add RBP,32
            cmp RBX,RBP
            jne .L_40f1a0

            jmp .L_40f1bf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fd88:

            add RBP,32
            cmp RBX,RBP
            jne .L_40efa0

            jmp .L_40efbf
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fda0:

            add RBP,64
            cmp RBX,RBP
            jne .L_40f060

            jmp .L_40f07b
.L_40fdb2:

            mov RSI,QWORD PTR [R13+32]
            mov RDI,QWORD PTR [RSP]
            call memcmp@PLT

            test EAX,EAX
            jne .L_40f37d

            sub RBX,R12
            cmp RBX,2147483647
            jle .L_40f372

            jmp .L_40f39e
.L_40fddc:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            test RBX,RBX
            je .L_40f49e

            jmp .L_40fe16
.L_40fdf0:

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+120]
            xor EDX,EDX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+120]
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+272],RDX
.L_40fe16:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+120]
            mov RAX,QWORD PTR [RSP+256]
            jmp .L_40f49e
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fe40:

            add RBP,4
            cmp R14,RBP
            jne .L_40f538

            jmp .L_40f611
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fe58:

            mov RSI,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+8]
            xor EDX,EDX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+272],RDX
.L_40fe80:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+128]
            mov RAX,QWORD PTR [RSP+256]
            jmp .L_40f5d4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40fea8:

            test RBX,RBX
            mov RAX,R13
            je .L_40f5d4

            jmp .L_40fe80
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fec0:

            add R14,256
            cmp QWORD PTR [RSP+16],R14
            jne .L_40f530

            jmp .L_40f6d3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fee0:

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+8]
            xor EDX,EDX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+136]
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+272],RDX
.L_40ff09:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+136]
            mov RAX,QWORD PTR [RSP+256]
            jmp .L_40f691
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40ff30:

            test RBX,RBX
            mov RAX,R13
            je .L_40f691

            jmp .L_40ff09
          .byte 0x66
          .byte 0x90
.L_40ff40:

            add QWORD PTR [RSP+16],32
            mov RAX,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+24],RAX
            jne .L_40f520

            jmp .L_40f7b1
.L_40ff5b:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+8]
            xor EDX,EDX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+272],RDX
.L_40ff84:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+144]
            mov RAX,QWORD PTR [RSP+256]
            jmp .L_40f764
.L_40ffa7:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            test RBX,RBX
            je .L_40f764

            jmp .L_40ff84
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ffc0:

            mov RDI,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RSP+168]
            xor EDX,EDX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+168]
            mov QWORD PTR [RSP+256],RAX
            mov QWORD PTR [RSP+272],RDX
.L_40ffec:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+168]
            mov RAX,QWORD PTR [RSP+256]
            jmp .L_40fad7
.L_41000f:

            mov RAX,QWORD PTR [RSP+8]
            add RAX,16
            test RBX,RBX
            je .L_40fad7

            jmp .L_40ffec
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_410028:

            movsd XMM0,QWORD PTR [RIP+.L_415cd0]
            call RAX
.L_410032:

            jmp .L_40fce0
.L_410037:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+256]
            mov RBX,RAX
            add RDX,16
            cmp RDI,RDX
            je .L_410055
.L_410050:

            call _ZdlPv@PLT
.L_410055:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+192]
            add RAX,16
            cmp RDI,RAX
            je .L_410070

            call _ZdlPv@PLT
.L_410070:

            mov RDI,RBX
.L_410073:

            call _Unwind_Resume@PLT
.L_410078:

            call __stack_chk_fail@PLT
.L_41007d:

            mov RBX,RAX
.L_410080:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+256]
            add RAX,16
            cmp RDI,RAX
            jne .L_410050

            jmp .L_410055
.L_410098:

            call .L_401560
.L_41009d:

            lea RCX,QWORD PTR [RIP+.L_415280]
            lea RSI,QWORD PTR [RIP+.L_41313e]
            lea RDI,QWORD PTR [RIP+.L_414f58]
            mov EDX,301
            call __assert_fail@PLT
.L_4100bc:

            mov RBX,RAX
            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+224]
            add RAX,16
            cmp RDI,RAX
            je .L_410080
.L_4100d5:

            call _ZdlPv@PLT

            jmp .L_410080
.L_4100dc:

            mov RDI,QWORD PTR [RSP+8]
            mov RBX,RAX
            call .L_401da0

            jmp .L_410055
.L_4100ee:

            mov RBX,RAX
            jmp .L_410055
.L_4100f6:

            jmp .L_41007d
.L_4100f8:

            jmp .L_41007d
.L_4100fa:

            jmp .L_41007d
.L_4100fc:

            jmp .L_41007d
.L_410101:

            jmp .L_41007d
.L_410106:

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+224]
            mov RBX,RAX
            add RDX,16
            cmp RDI,RDX
            jne .L_4100d5

            jmp .L_410080
.L_410124:

            lea RCX,QWORD PTR [RIP+.L_415280]
            lea RSI,QWORD PTR [RIP+.L_41313e]
            lea RDI,QWORD PTR [RIP+.L_414f58]
            mov EDX,306
            call __assert_fail@PLT
.L_410143:

            jmp .L_41007d
.L_410148:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410150:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,6248
.L_410164:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+6232],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RDI],RAX
            mov EAX,DWORD PTR [RSI+8]
            mov DWORD PTR [RDI+8],EAX
            movzx EAX,BYTE PTR [RSI+12]
            mov QWORD PTR [RDI+16],RCX
            mov QWORD PTR [RDI+24],R8
            mov QWORD PTR [RDI+32],R9
            mov BYTE PTR [RDI+12],AL
            movss XMM0,DWORD PTR [RSI]
            ucomiss XMM0,DWORD PTR [RIP+.L_415d10]
            ja .L_41020e

            mov RAX,QWORD PTR [RDX+136]
            sub RAX,QWORD PTR [RDX+128]
            mov RDI,RDX
            cmp RAX,192
            je .L_410217
.L_4101c1:

            lea RDX,QWORD PTR [RIP+.L_415078]
.L_4101c8:

            mov RDI,QWORD PTR [RIP+stderr]
            mov ESI,1
            xor EAX,EAX
.L_4101d6:

            call __fprintf_chk@PLT

            mov BYTE PTR [RSP+79],0
.L_4101e0:

            mov RDI,QWORD PTR [RSP+6232]
            xor RDI,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+79]
            jne .L_4116d0

            add RSP,6248
.L_410203:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41020e:

            lea RDX,QWORD PTR [RIP+.L_414fd8]
            jmp .L_4101c8
.L_410217:

            mov R14,R9
            call .L_41a770

            test AL,AL
            je .L_4101c1

            mov RBX,QWORD PTR [RSP+56]
            mov RDI,RBX
            call .L_419b30

            test AL,AL
            jne .L_4102e0

            mov RDI,RBX
            call .L_419ad0

            test AL,AL
            mov EBP,EAX
            jne .L_4102e2

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_4131f3]
            xor EAX,EAX
            mov ESI,1
            call __fprintf_chk@PLT

            mov R12,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [R12+128]
            cmp QWORD PTR [R12+136],RAX
            je .L_4102cb

            lea RBX,QWORD PTR [RIP+.L_413211]
            xor EBP,EBP
.L_410284:

            mov RDX,RBP
            mov RDI,QWORD PTR [RIP+stderr]
            mov ESI,1
            shl RDX,6
            add RBP,1
            add RAX,RDX
            mov RDX,RBX
            mov ECX,DWORD PTR [RAX+4]
            mov R8D,DWORD PTR [RAX+8]
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_4102af:

            mov RAX,QWORD PTR [R12+128]
            mov RDX,QWORD PTR [R12+136]
            sub RDX,RAX
            sar RDX,6
            cmp RDX,RBP
            ja .L_410284
.L_4102cb:

            lea RDX,QWORD PTR [RIP+.L_43e980-178024]
            jmp .L_4101c8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4102e0:

            xor EBP,EBP
.L_4102e2:

            lea RCX,QWORD PTR [RSP+240]
            movzx ESI,BYTE PTR [R15+4]
            mov RDI,QWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RIP+.L_409390]
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RSP+256],0
            lea RAX,QWORD PTR [RCX+16]
            mov QWORD PTR [RSP+80],RCX
            mov QWORD PTR [RSP+240],RAX
.L_410320:

            call .L_41f6e0
.L_410325:

            test AL,AL
            mov BYTE PTR [RSP+79],AL
            je .L_412116

            mov RAX,QWORD PTR [R15+24]
            mov RDI,QWORD PTR [RIP+.L_415cd8]
            lea R12,QWORD PTR [RSP+5200]
            mov R9,QWORD PTR [RSP+248]
            lea R8,QWORD PTR [RIP+.L_41321a]
            lea R13,QWORD PTR [RSP+4416]
            mov ECX,1024
            mov EDX,1
            mov ESI,1024
            mov QWORD PTR [RAX+64],RDI
            mov RDI,R12
            xor EAX,EAX
            call __snprintf_chk@PLT

            lea RAX,QWORD PTR [R13+16]
            mov BYTE PTR [RSP+6223],0
            mov RBX,R12
            mov QWORD PTR [RSP+4416],RAX
.L_41038f:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_41038f

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov EDI,EAX
            cmove RBX,RDX
            add DIL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+136],RBX
            ja .L_4120d9

            cmp RBX,1
            je .L_4120c5

            test RBX,RBX
            jne .L_412128
.L_4103ec:

            mov RAX,QWORD PTR [RSP+136]
            mov RDX,QWORD PTR [RSP+4416]
            mov RSI,R13
            mov RDI,R14
            mov QWORD PTR [RSP+4424],RAX
            mov BYTE PTR [RDX+RAX*1],0
.L_41040e:

            call .L_4196f0
.L_410413:

            mov RDI,QWORD PTR [RSP+4416]
            lea RAX,QWORD PTR [R13+16]
            cmp RDI,RAX
            je .L_410429

            call _ZdlPv@PLT
.L_410429:

            cmp QWORD PTR [R15+16],0
            je .L_411cb1

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,R13
.L_41043c:

            call .L_4133b0
.L_410441:

            lea RAX,QWORD PTR [RSP+560]
            mov RDI,R13
            mov RSI,RAX
            mov QWORD PTR [RSP+104],RAX
.L_410454:

            call .L_4093c0

            lea RAX,QWORD PTR [RSP+208]
            mov EDX,DWORD PTR [RSP+4420]
            mov ESI,DWORD PTR [RSP+4416]
            mov RDI,RAX
            mov RBX,RAX
            mov QWORD PTR [RSP+32],RAX
            call .L_423fb0
.L_41047f:

            mov RSI,R13
            mov RDI,RBX
.L_410485:

            call .L_424760

            mov RDI,QWORD PTR [R15+16]
            mov RSI,RBX
            mov RAX,QWORD PTR [RDI]
            call QWORD PTR [RAX+16]
.L_410497:

            mov RAX,QWORD PTR [RSP+224]
            mov R14,QWORD PTR [RSP+216]
            cmp RAX,R14
            je .L_410546

            lea RDX,QWORD PTR [R14+336]
            sub RAX,RDX
            mov RBX,RAX
            movabs RAX,1098020480577949501
            shr RBX,4
            imul RBX,RAX
            movabs RAX,1152921504606846975
            and RBX,RAX
            mov RAX,R14
            add RBX,1
            imul RBX,RBX,336
            add RBX,R14
            mov R14,R13
            mov R13,R12
            mov R12D,EBP
            mov RBP,RBX
            mov RBX,RDX
            jmp .L_410514
          .byte 0x66
          .byte 0x90
.L_410500:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RAX,RBX
            je .L_41053d
.L_41050d:

            add RBX,336
.L_410514:

            mov RDI,QWORD PTR [RAX+56]
            test RDI,RDI
            je .L_41052c

            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
.L_41052c:

            mov RDI,QWORD PTR [RAX+32]
            test RDI,RDI
            jne .L_410500

            cmp RBX,RBP
            mov RAX,RBX
            jne .L_41050d
.L_41053d:

            mov EBP,R12D
            mov R12,R13
            mov R13,R14
.L_410546:

            mov RDI,QWORD PTR [RSP+216]
            test RDI,RDI
            je .L_410558

            call _ZdlPv@PLT
.L_410558:

            mov RDI,QWORD PTR [RSP+4640]
            lea RAX,QWORD PTR [R13+240]
            cmp RDI,RAX
            je .L_410571

            call _ZdlPv@PLT
.L_410571:

            mov R14,QWORD PTR [RSP+4624]
            mov RBX,QWORD PTR [RSP+4616]
            cmp R14,RBX
            je .L_4105b5
.L_410586:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_4105ac
.L_410592:

            add RBX,32
            call _ZdlPv@PLT

            cmp RBX,R14
            je .L_4105b5

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            jne .L_410592
.L_4105ac:

            add RBX,32
            cmp R14,RBX
            jne .L_410586
.L_4105b5:

            mov RDI,QWORD PTR [RSP+4616]
            test RDI,RDI
            je .L_4105c7

            call _ZdlPv@PLT
.L_4105c7:

            mov RDI,QWORD PTR [RSP+4592]
            test RDI,RDI
            je .L_4105d9

            call _ZdlPv@PLT
.L_4105d9:

            mov RAX,QWORD PTR [RSP+4576]
            mov RDX,QWORD PTR [RSP+4568]
            cmp RAX,RDX
            je .L_41064a

            lea R14,QWORD PTR [RDX+40]
            sub RAX,R14
            mov RBX,RAX
            movabs RAX,922337203685477581
            shr RBX,3
            imul RBX,RAX
            movabs RAX,2305843009213693951
            and RBX,RAX
            add RBX,1
            imul RBX,RBX,40
            add RBX,RDX
            jmp .L_410639
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410628:

            call _ZdlPv@PLT

            cmp R14,RBX
            mov RDX,R14
            je .L_41064a
.L_410635:

            add R14,40
.L_410639:

            mov RDI,QWORD PTR [RDX+16]
            test RDI,RDI
            jne .L_410628

            cmp R14,RBX
            mov RDX,R14
            jne .L_410635
.L_41064a:

            mov RDI,QWORD PTR [RSP+4568]
            test RDI,RDI
            je .L_41065c

            call _ZdlPv@PLT
.L_41065c:

            mov R14,QWORD PTR [RSP+4552]
            mov RBX,QWORD PTR [RSP+4544]
            cmp R14,RBX
            je .L_41069a
.L_410671:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_410691
.L_41067a:

            add RBX,64
            call _ZdlPv@PLT

            cmp RBX,R14
            je .L_41069a

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            jne .L_41067a
.L_410691:

            add RBX,64
            cmp R14,RBX
            jne .L_410671
.L_41069a:

            mov RDI,QWORD PTR [RSP+4544]
            test RDI,RDI
            je .L_4106ac

            call _ZdlPv@PLT
.L_4106ac:

            mov RAX,QWORD PTR [RSP+4528]
            mov R14,QWORD PTR [RSP+4520]
            cmp RAX,R14
            je .L_410752

            lea RDX,QWORD PTR [R14+56]
            sub RAX,RDX
            mov RBX,RAX
            movabs RAX,988218432520154551
            shr RBX,3
            imul RBX,RAX
            movabs RAX,2305843009213693951
            and RBX,RAX
            mov RAX,R14
            add RBX,1
            imul RBX,RBX,56
            add RBX,R14
            mov R14,R13
            mov R13,R12
            mov R12D,EBP
            mov RBP,RBX
            mov RBX,RDX
            jmp .L_410721
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_410710:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RAX,RBX
            je .L_410749
.L_41071d:

            add RBX,56
.L_410721:

            mov RDI,QWORD PTR [RAX+24]
            test RDI,RDI
            je .L_410739

            mov QWORD PTR [RSP+8],RAX
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+8]
.L_410739:

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            jne .L_410710

            cmp RBX,RBP
            mov RAX,RBX
            jne .L_41071d
.L_410749:

            mov EBP,R12D
            mov R12,R13
            mov R13,R14
.L_410752:

            mov RDI,QWORD PTR [RSP+4520]
            test RDI,RDI
            je .L_410764

            call _ZdlPv@PLT
.L_410764:

            mov RAX,QWORD PTR [RSP+4504]
            mov RDX,QWORD PTR [RSP+4496]
            cmp RAX,RDX
            je .L_4107d1

            lea R14,QWORD PTR [RDX+40]
            sub RAX,R14
            mov RBX,RAX
            movabs RAX,922337203685477581
            shr RBX,3
            imul RBX,RAX
            movabs RAX,2305843009213693951
            and RBX,RAX
            add RBX,1
            imul RBX,RBX,40
            add RBX,RDX
            jmp .L_4107c1
          .byte 0x90
.L_4107b0:

            call _ZdlPv@PLT

            cmp R14,RBX
            mov RDX,R14
            je .L_4107d1
.L_4107bd:

            add R14,40
.L_4107c1:

            mov RDI,QWORD PTR [RDX]
            test RDI,RDI
            jne .L_4107b0

            cmp R14,RBX
            mov RDX,R14
            jne .L_4107bd
.L_4107d1:

            mov RDI,QWORD PTR [RSP+4496]
            test RDI,RDI
            je .L_4107e3

            call _ZdlPv@PLT
.L_4107e3:

            mov R14,QWORD PTR [RSP+4480]
            mov RBX,QWORD PTR [RSP+4472]
            cmp R14,RBX
            je .L_410827
.L_4107f8:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_41081e
.L_410804:

            add RBX,32
            call _ZdlPv@PLT

            cmp R14,RBX
            je .L_410827

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            jne .L_410804
.L_41081e:

            add RBX,32
            cmp R14,RBX
            jne .L_4107f8
.L_410827:

            mov RDI,QWORD PTR [RSP+4472]
            test RDI,RDI
            je .L_410839

            call _ZdlPv@PLT
.L_410839:

            mov R14,QWORD PTR [RSP+4456]
            mov RBX,QWORD PTR [RSP+4448]
            cmp R14,RBX
            je .L_41087d
.L_41084e:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_410874
.L_41085a:

            add RBX,32
            call _ZdlPv@PLT

            cmp R14,RBX
            je .L_41087d

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            jne .L_41085a
.L_410874:

            add RBX,32
            cmp R14,RBX
            jne .L_41084e
.L_41087d:

            mov RDI,QWORD PTR [RSP+4448]
            test RDI,RDI
            je .L_41088f

            call _ZdlPv@PLT
.L_41088f:

            mov RSI,QWORD PTR [RSP+80]
            mov RDI,R15
.L_410897:

            call .L_40a4b0

            test BPL,BPL
            jne .L_411f9e

            movzx ESI,BYTE PTR [R15+6]
            mov DWORD PTR [RSP+72],1
            test SIL,SIL
            jne .L_4108ca

            cmp BYTE PTR [R15+5],0
            mov DWORD PTR [RSP+72],0
            jne .L_411fe6
.L_4108ca:

            movzx EAX,SIL
            mov DWORD PTR [RSP+68],EAX
.L_4108d2:

            movzx EAX,BYTE PTR [RSP+68]
            and EAX,1
            mov BYTE PTR [RSP+78],AL
            lea RAX,QWORD PTR [RSP+272]
            mov QWORD PTR [RSP+48],RAX
            mov RBX,RAX
.L_4108ee:

            mov RSI,QWORD PTR [RSP+56]
            mov RDI,RBX
            call .L_4133b0
.L_4108fb:

            mov RSI,QWORD PTR [RSP+104]
            mov RDI,RBX
.L_410903:

            call .L_4093c0

            mov R14,QWORD PTR [RSP+32]
            mov EDX,DWORD PTR [RSP+276]
            mov ESI,DWORD PTR [RSP+272]
            mov RDI,R14
            call .L_423fb0
.L_410923:

            mov RSI,RBX
            mov RDI,R14
.L_410929:

            call .L_424760

            mov ESI,DWORD PTR [RSP+68]
            test ESI,ESI
            je .L_41095a

            mov RAX,QWORD PTR [RSP+216]
            cmp DWORD PTR [RAX+344],1
            jle .L_411e83
.L_41094b:

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+32]
            call .L_426ba0
.L_41095a:

            lea RDI,QWORD PTR [RSP+1328]
            mov ECX,96
            mov RSI,QWORD PTR [RSP+104]
            lea RBX,QWORD PTR [RIP+.L_415a00]
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+88],RDI

            rep movsq 

            lea RDX,QWORD PTR [RBX+256]
            mov RAX,RBX
            nop
            nop
.L_410990:

            pxor XMM0,XMM0
            add RAX,4
            movsd XMM4,QWORD PTR [RIP+.L_415c98]
            cvtsi2sd XMM0,DWORD PTR [RAX-4]
            mulsd XMM0,QWORD PTR [RIP+.L_415c90]
            cmp RDX,RAX
            addsd XMM0,QWORD PTR [RIP+.L_415c98]
            divsd XMM4,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415ce0]
            mulsd XMM0,XMM4
            addsd XMM0,QWORD PTR [RSP+8]
            movsd QWORD PTR [RSP+8],XMM0
            jne .L_410990

            lea RAX,QWORD PTR [RSP+3632]
            mov R8,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+88]
            mov RDX,QWORD PTR [RSP+48]
            mov RSI,R15
            mov RDI,RAX
            mov QWORD PTR [RSP+96],RAX
.L_4109f8:

            call .L_40ee80
.L_4109fd:

            movzx EAX,BYTE PTR [RSP+78]
            xor R14D,R14D
            xor EBP,EBP
            mov QWORD PTR [RSP+24],0
            and EAX,1
            mov BYTE PTR [RSP+112],AL
            mov RAX,QWORD PTR [RIP+.L_415cd8]
            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+40],RAX
.L_410a28:

            mov R8,RBP
            sub R8,QWORD PTR [RSP+24]
            movabs RAX,9035139954469984465
            movsd XMM4,QWORD PTR [RSP+16]
            mov R9D,1000
            lea RDI,QWORD PTR [RIP+.L_415afc]
            movsd XMM2,QWORD PTR [RIP+.L_415cc0]
            sar R8,4
            imul R8,RAX
            ucomisd XMM4,QWORD PTR [RIP+.L_415cd8]
            jp .L_41170f
.L_410a6b:

            jne .L_41170f

            movsd XMM4,QWORD PTR [RSP+40]
            ucomisd XMM4,QWORD PTR [RIP+.L_415cd8]
            jp .L_411928

            jne .L_411928

            cmp BYTE PTR [RSP+112],0
            movsd XMM4,QWORD PTR [RSP+8]
            je .L_410a9c

            pxor XMM4,XMM4
.L_410a9c:

            movsd XMM0,QWORD PTR [RSP+8]
            mulsd XMM0,XMM2
            ucomisd XMM4,XMM0
            ja .L_410d4f
.L_410ab0:

            movsd XMM3,QWORD PTR [RSP+8]
            movapd XMM0,XMM4
            movapd XMM1,XMM4
            lea RCX,QWORD PTR [RIP+.L_415bf8]
            divsd XMM0,XMM3
            mov EDX,63
            mov EAX,63
            cvttsd2si R10D,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,R10D
            add R10D,R10D
            lea ESI,DWORD PTR [R10+3]
            add R10D,1
            mulsd XMM0,XMM3
            subsd XMM1,XMM0
            jmp .L_410b58
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_410b00:

            pxor XMM0,XMM0
            cmp RDI,RCX
            movsd XMM6,QWORD PTR [RIP+.L_415c98]
            mov DWORD PTR [RSP+RAX*4+2096],ESI
            mov DWORD PTR [RSP+RAX*4+2352],ESI
            mov DWORD PTR [RSP+RAX*4+2608],ESI
            cvtsi2sd XMM0,EDX
            mulsd XMM0,QWORD PTR [RIP+.L_415c90]
            addsd XMM0,QWORD PTR [RIP+.L_415c98]
            divsd XMM6,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415ce0]
            mulsd XMM0,XMM6
            subsd XMM1,XMM0
            je .L_410bb3
.L_410b4e:

            movsxd RAX,DWORD PTR [RCX]
            sub RCX,4
            mov EDX,DWORD PTR [RBX+RAX*4]
.L_410b58:

            pxor XMM5,XMM5
            ucomisd XMM1,XMM5
            ja .L_410b00

            pxor XMM0,XMM0
            cmp RDI,RCX
            mov DWORD PTR [RSP+RAX*4+2096],R10D
            movsd XMM7,QWORD PTR [RIP+.L_415c98]
            mov DWORD PTR [RSP+RAX*4+2352],R10D
            mov DWORD PTR [RSP+RAX*4+2608],R10D
            cvtsi2sd XMM0,EDX
            mulsd XMM0,QWORD PTR [RIP+.L_415c90]
            addsd XMM0,QWORD PTR [RIP+.L_415c98]
            divsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415ce0]
            mulsd XMM0,XMM7
            subsd XMM1,XMM0
            jne .L_410b4e
.L_410bb3:

            test R8,R8
            je .L_411c50

            mov R10D,DWORD PTR [RSP+2096]
            mov RDX,QWORD PTR [RSP+24]
            lea RCX,QWORD PTR [RSP+2096]
            xor ESI,ESI
            nop
            nop
            nop
            nop
            nop
.L_410bd8:

            cmp DWORD PTR [RDX],R10D
            jne .L_410c02

            mov EAX,1
            jmp .L_410bf8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_410be8:

            add RAX,1
            cmp RAX,192
            je .L_4116d8
.L_410bf8:

            mov R11D,DWORD PTR [RDX+RAX*4]
            cmp DWORD PTR [RCX+RAX*4],R11D
            je .L_410be8
.L_410c02:

            add RSI,1
            add RDX,784
            cmp RSI,R8
            jne .L_410bd8
.L_410c12:

            mov R8,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+48]
            mov RSI,R15
            mov RDI,R13
.L_410c22:

            call .L_40ee80
.L_410c27:

            cmp RBP,R14
            je .L_411b5c

            test RBP,RBP
            je .L_410c43

            mov ECX,98
            mov RDI,RBP
            mov RSI,R13

            rep movsq 
.L_410c43:

            add RBP,784
.L_410c4a:

            pxor XMM2,XMM2
            lea RCX,QWORD PTR [R13+768]
            mov RDX,R13
.L_410c58:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_410c60:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_415c98]
            cvtsi2sd XMM0,DWORD PTR [RBX+RAX*1]
            mulsd XMM0,QWORD PTR [RIP+.L_415c90]
            addsd XMM0,QWORD PTR [RIP+.L_415c98]
            divsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,DWORD PTR [RDX+RAX*1]
            subsd XMM0,QWORD PTR [RIP+.L_415c98]
            add RAX,4
            cmp RAX,256
            mulsd XMM0,QWORD PTR [RIP+.L_415c90]
            mulsd XMM0,XMM1
            addsd XMM2,XMM0
            jne .L_410c60

            add RDX,256
            cmp RDX,RCX
            jne .L_410c58

            cmp BYTE PTR [RSP+5192],0
            je .L_41195b

            maxsd XMM2,QWORD PTR [RSP+40]
            cmp BYTE PTR [RSP+4408],0
            movsd QWORD PTR [RSP+40],XMM2
            je .L_410cf8

            mov RAX,QWORD PTR [RSP+4400]
            cmp QWORD PTR [RSP+5184],RAX
            jae .L_410a28
.L_410cf8:

            mov ECX,98
            mov RDI,QWORD PTR [RSP+96]
            mov RSI,R13

            rep movsq 

            mov RDI,QWORD PTR [R15+16]
            lea RDX,QWORD PTR [RIP+.L_4130f0]
            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX+64]
            cmp RAX,RDX
            jne .L_411e68

            pxor XMM0,XMM0
            pxor XMM1,XMM1
            cvtss2sd XMM0,DWORD PTR [RDI+16]
            cvtss2sd XMM1,DWORD PTR [RDI+168]
            mulsd XMM0,QWORD PTR [RIP+.L_415d00]
            ucomisd XMM0,XMM1
            setae AL
.L_410d47:

            test AL,AL
            jne .L_410a28
.L_410d4f:

            mov RDI,QWORD PTR [RSP+88]
            mov RSI,QWORD PTR [RSP+96]
            mov ECX,96

            rep movsq 

            mov ECX,DWORD PTR [RSP+68]
            lea RAX,QWORD PTR [RIP+.L_4131e5]
            lea R9,QWORD PTR [RIP+.L_4131ec]
            lea R8,QWORD PTR [RIP+.L_4150d0]
            mov EDX,1
            mov ESI,1024
            mov RDI,R12
            mov RBX,R12
            test ECX,ECX
            mov ECX,1024
            cmovne R9,RAX
            xor EAX,EAX
            call __snprintf_chk@PLT

            lea RAX,QWORD PTR [R13+16]
            mov BYTE PTR [RSP+6223],0
            mov QWORD PTR [RSP+4416],RAX
.L_410db0:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_410db0

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov EDI,EAX
            cmove RBX,RDX
            add DIL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+144],RBX
            ja .L_411e18

            cmp RBX,1
            jne .L_411f49

            movzx EAX,BYTE PTR [RSP+5200]
            mov BYTE PTR [RSP+4432],AL
            lea RAX,QWORD PTR [R13+16]
.L_410e17:

            mov QWORD PTR [RSP+4424],RBX
            mov BYTE PTR [RAX+RBX*1],0
            mov RSI,R13
            mov RDI,QWORD PTR [R15+32]
.L_410e2a:

            call .L_4196f0
.L_410e2f:

            mov RDI,QWORD PTR [RSP+4416]
            lea RAX,QWORD PTR [R13+16]
            cmp RDI,RAX
            je .L_410e45

            call _ZdlPv@PLT
.L_410e45:

            mov RAX,QWORD PTR [RSP+88]
            lea RDI,QWORD PTR [RAX+800]
            add RAX,1056
            mov QWORD PTR [RSP+96],RAX
            lea RAX,QWORD PTR [RSP+152]
            mov QWORD PTR [RSP+16],RDI
            mov QWORD PTR [RSP+40],RAX
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+112],RAX
            lea RAX,QWORD PTR [RSP+168]
            mov QWORD PTR [RSP+120],RAX
            mov RAX,RDI
.L_410e8b:

            sub RAX,768
            lea R14,QWORD PTR [R13+16]
            mov QWORD PTR [RSP+8],RAX
.L_410e9a:

            lea RBP,QWORD PTR [RAX-32]
            nop
            nop
.L_410ea0:

            mov R9D,DWORD PTR [RBP]
            lea R8,QWORD PTR [RIP+.L_4131e0]
            mov ECX,1024
            mov EDX,1
            mov ESI,1024
            mov RDI,R12
            xor EAX,EAX
            mov RBX,R12
            call __snprintf_chk@PLT

            mov BYTE PTR [RSP+6223],0
            mov QWORD PTR [RSP+4416],R14
.L_410ed7:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_410ed7

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov EDI,EAX
            cmove RBX,RDX
            add DIL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+152],RBX
            ja .L_411860

            cmp RBX,1
            jne .L_4118b0

            movzx EAX,BYTE PTR [RSP+5200]
            mov BYTE PTR [RSP+4432],AL
            mov RAX,R14
.L_410f3d:

            mov QWORD PTR [RSP+4424],RBX
            mov BYTE PTR [RAX+RBX*1],0
            mov RSI,R13
            mov RDI,QWORD PTR [R15+32]
.L_410f50:

            call .L_4196f0
.L_410f55:

            mov RDI,QWORD PTR [RSP+4416]
            cmp RDI,R14
            je .L_411848

            call _ZdlPv@PLT

            add RBP,4
            cmp RBP,QWORD PTR [RSP+8]
            jne .L_410ea0
.L_410f7a:

            mov DWORD PTR [R12],2105376
            mov QWORD PTR [RSP+4416],R14
            mov RBX,R12
            mov BYTE PTR [RSP+6223],0
.L_410f95:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_410f95

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov EDI,EAX
            cmove RBX,RDX
            add DIL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+160],RBX
            ja .L_4118de

            cmp RBX,1
            jne .L_4119b6

            movzx EAX,BYTE PTR [RSP+5200]
            mov BYTE PTR [RSP+4432],AL
            mov RAX,R14
.L_410ffb:

            mov QWORD PTR [RSP+4424],RBX
            mov BYTE PTR [RAX+RBX*1],0
            mov RSI,R13
            mov RDI,QWORD PTR [R15+32]
.L_41100e:

            call .L_4196f0
.L_411013:

            mov RDI,QWORD PTR [RSP+4416]
            cmp RDI,R14
            je .L_4118c0

            call _ZdlPv@PLT

            add QWORD PTR [RSP+8],256
            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+16],RAX
            jne .L_410e9a
.L_411042:

            lea RAX,QWORD PTR [R13+16]
            mov EDX,10
            mov RBX,R12
            mov WORD PTR [R12],DX
            mov BYTE PTR [RSP+6223],0
            mov QWORD PTR [RSP+4416],RAX
.L_411063:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_411063

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov EDI,EAX
            cmove RBX,RDX
            add DIL,AL
            sbb RBX,3
            sub RBX,R12
            cmp RBX,15
            mov QWORD PTR [RSP+168],RBX
            ja .L_411b07

            cmp RBX,1
            jne .L_411c3d

            movzx EAX,BYTE PTR [RSP+5200]
            mov BYTE PTR [RSP+4432],AL
            lea RAX,QWORD PTR [R13+16]
.L_4110ca:

            mov QWORD PTR [RSP+4424],RBX
            mov BYTE PTR [RAX+RBX*1],0
            mov RSI,R13
            mov RDI,QWORD PTR [R15+32]
.L_4110dd:

            call .L_4196f0
.L_4110e2:

            mov RDI,QWORD PTR [RSP+4416]
            lea RAX,QWORD PTR [R13+16]
            cmp RDI,RAX
            je .L_4119d0

            call _ZdlPv@PLT

            add QWORD PTR [RSP+16],32
            mov RAX,QWORD PTR [RSP+16]
            cmp RAX,QWORD PTR [RSP+96]
            jne .L_410e8b
.L_411112:

            mov RAX,QWORD PTR [RSP+24]
            movzx EBX,BYTE PTR [RSP+4408]
            test RAX,RAX
            je .L_41112c

            mov RDI,RAX
            call _ZdlPv@PLT
.L_41112c:

            test BL,BL
            jne .L_4112bc

            movdqa XMM0,XMMWORD PTR [RIP+.L_415c40]
            movaps XMMWORD PTR [RSP+1328],XMM0
            movaps XMMWORD PTR [RSP+1344],XMM0
            movaps XMMWORD PTR [RSP+1360],XMM0
            movaps XMMWORD PTR [RSP+1376],XMM0
            movaps XMMWORD PTR [RSP+1392],XMM0
            movaps XMMWORD PTR [RSP+1408],XMM0
            movaps XMMWORD PTR [RSP+1424],XMM0
            movaps XMMWORD PTR [RSP+1440],XMM0
            movaps XMMWORD PTR [RSP+1456],XMM0
            movaps XMMWORD PTR [RSP+1472],XMM0
            movaps XMMWORD PTR [RSP+1488],XMM0
            movaps XMMWORD PTR [RSP+1504],XMM0
            movaps XMMWORD PTR [RSP+1520],XMM0
            movaps XMMWORD PTR [RSP+1536],XMM0
            movaps XMMWORD PTR [RSP+1552],XMM0
            movaps XMMWORD PTR [RSP+1568],XMM0
            movaps XMMWORD PTR [RSP+1584],XMM0
            movaps XMMWORD PTR [RSP+1600],XMM0
            movaps XMMWORD PTR [RSP+1616],XMM0
            movaps XMMWORD PTR [RSP+1632],XMM0
            movaps XMMWORD PTR [RSP+1648],XMM0
            movaps XMMWORD PTR [RSP+1664],XMM0
            movaps XMMWORD PTR [RSP+1680],XMM0
            movaps XMMWORD PTR [RSP+1696],XMM0
            movaps XMMWORD PTR [RSP+1712],XMM0
            movaps XMMWORD PTR [RSP+1728],XMM0
            movaps XMMWORD PTR [RSP+1744],XMM0
            movaps XMMWORD PTR [RSP+1760],XMM0
            movaps XMMWORD PTR [RSP+1776],XMM0
            movaps XMMWORD PTR [RSP+1792],XMM0
            movaps XMMWORD PTR [RSP+1808],XMM0
            movaps XMMWORD PTR [RSP+1824],XMM0
            movaps XMMWORD PTR [RSP+1840],XMM0
            movaps XMMWORD PTR [RSP+1856],XMM0
            movaps XMMWORD PTR [RSP+1872],XMM0
            movaps XMMWORD PTR [RSP+1888],XMM0
            movaps XMMWORD PTR [RSP+1904],XMM0
            movaps XMMWORD PTR [RSP+1920],XMM0
            movaps XMMWORD PTR [RSP+1936],XMM0
            movaps XMMWORD PTR [RSP+1952],XMM0
            movaps XMMWORD PTR [RSP+1968],XMM0
            movaps XMMWORD PTR [RSP+1984],XMM0
            movaps XMMWORD PTR [RSP+2000],XMM0
            movaps XMMWORD PTR [RSP+2016],XMM0
            movaps XMMWORD PTR [RSP+2032],XMM0
            movaps XMMWORD PTR [RSP+2048],XMM0
            movaps XMMWORD PTR [RSP+2064],XMM0
            movaps XMMWORD PTR [RSP+2080],XMM0
.L_4112bc:

            mov RBX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,RBX
.L_4112c9:

            call .L_424760

            mov RSI,QWORD PTR [RSP+88]
            mov RDI,RBX
            call .L_4248e0

            mov EAX,DWORD PTR [RSP+68]
            test EAX,EAX
            je .L_411f60

            mov RAX,QWORD PTR [RSP+408]
            sub RAX,QWORD PTR [RSP+400]
            movsd XMM0,QWORD PTR [RIP+.L_415cd0]
            cmp RAX,64
            jne .L_41130d

            movsd XMM0,QWORD PTR [RIP+.L_415c98]
.L_41130d:

            mov R14,QWORD PTR [RSP+32]
            mov RBX,QWORD PTR [RSP+48]
            xor R8D,R8D
            mov ECX,1
            mov RDI,R15
            mov RDX,R14
            mov RSI,RBX
            call .L_40ae30

            movsd XMM0,QWORD PTR [RIP+.L_415c98]
            mov R8D,1
            mov ECX,6
            mov RDX,R14
            mov RSI,RBX
            mov RDI,R15
            call .L_40ae30
.L_41134e:

            mov RAX,QWORD PTR [RSP+224]
            mov RBP,QWORD PTR [RSP+216]
            cmp RAX,RBP
            je .L_4113e8

            lea R14,QWORD PTR [RBP+336]
            movabs RDX,1098020480577949501
            mov RDI,QWORD PTR [RBP+56]
            sub RAX,R14
            shr RAX,4
            imul RAX,RDX
            movabs RDX,1152921504606846975
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea RBX,QWORD PTR [RAX+RDX*4]
            shl RBX,4
            add RBX,RBP
            test RDI,RDI
            je .L_4113b1
.L_4113ac:

            call _ZdlPv@PLT
.L_4113b1:

            mov RDI,QWORD PTR [RBP+32]
            test RDI,RDI
            je .L_4113e0
.L_4113ba:

            call _ZdlPv@PLT

            cmp R14,RBX
            mov RBP,R14
            je .L_4113e8
.L_4113c7:

            mov RDI,QWORD PTR [RBP+56]
            add R14,336
            test RDI,RDI
            jne .L_4113ac

            mov RDI,QWORD PTR [RBP+32]
            test RDI,RDI
            jne .L_4113ba
.L_4113e0:

            cmp RBX,R14
            mov RBP,R14
            jne .L_4113c7
.L_4113e8:

            mov RDI,QWORD PTR [RSP+216]
            test RDI,RDI
            je .L_4113fa

            call _ZdlPv@PLT
.L_4113fa:

            mov RAX,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+496]
            add RAX,240
            cmp RDI,RAX
            je .L_411417

            call _ZdlPv@PLT
.L_411417:

            mov RBP,QWORD PTR [RSP+480]
            mov RBX,QWORD PTR [RSP+472]
            cmp RBP,RBX
            je .L_41144a
.L_41142c:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_411c2b

            add RBX,32
            call _ZdlPv@PLT

            cmp RBX,RBP
            jne .L_41142c
.L_41144a:

            mov RDI,QWORD PTR [RSP+472]
            test RDI,RDI
            je .L_41145c

            call _ZdlPv@PLT
.L_41145c:

            mov RDI,QWORD PTR [RSP+448]
            test RDI,RDI
            je .L_41146e

            call _ZdlPv@PLT
.L_41146e:

            mov RDX,QWORD PTR [RSP+432]
            mov RAX,QWORD PTR [RSP+424]
            cmp RDX,RAX
            je .L_4114be

            lea RBX,QWORD PTR [RAX+40]
            mov RDI,QWORD PTR [RAX+16]
            sub RDX,RBX
            shr RDX,3
            test RDI,RDI
            lea RBP,QWORD PTR [RAX+RDX*8+40]
            je .L_4114b6
.L_41149c:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RAX,RBX
            je .L_4114be
.L_4114a9:

            mov RDI,QWORD PTR [RAX+16]
            add RBX,40
            test RDI,RDI
            jne .L_41149c
.L_4114b6:

            cmp RBX,RBP
            mov RAX,RBX
            jne .L_4114a9
.L_4114be:

            mov RDI,QWORD PTR [RSP+424]
            test RDI,RDI
            je .L_4114d0

            call _ZdlPv@PLT
.L_4114d0:

            mov RBP,QWORD PTR [RSP+408]
            mov RBX,QWORD PTR [RSP+400]
            cmp RBP,RBX
            je .L_411500
.L_4114e5:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_411bf5

            add RBX,64
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_4114e5
.L_411500:

            mov RDI,QWORD PTR [RSP+400]
            test RDI,RDI
            je .L_411512

            call _ZdlPv@PLT
.L_411512:

            mov RAX,QWORD PTR [RSP+384]
            mov RBP,QWORD PTR [RSP+376]
            cmp RAX,RBP
            je .L_4115a3

            lea R14,QWORD PTR [RBP+56]
            movabs RDX,988218432520154551
            mov RDI,QWORD PTR [RBP+24]
            sub RAX,R14
            shr RAX,3
            imul RAX,RDX
            movabs RDX,2305843009213693951
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX*8]
            sub RDX,RAX
            test RDI,RDI
            lea RBX,QWORD PTR [RBP+RDX*8]
            je .L_41156f
.L_41156a:

            call _ZdlPv@PLT
.L_41156f:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_41159b
.L_411578:

            call _ZdlPv@PLT

            cmp RBX,R14
            mov RBP,R14
            je .L_4115a3
.L_411585:

            mov RDI,QWORD PTR [RBP+24]
            add R14,56
            test RDI,RDI
            jne .L_41156a

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            jne .L_411578
.L_41159b:

            cmp RBX,R14
            mov RBP,R14
            jne .L_411585
.L_4115a3:

            mov RDI,QWORD PTR [RSP+376]
            test RDI,RDI
            je .L_4115b5

            call _ZdlPv@PLT
.L_4115b5:

            mov RDX,QWORD PTR [RSP+360]
            mov RAX,QWORD PTR [RSP+352]
            cmp RDX,RAX
            je .L_411603

            lea RBX,QWORD PTR [RAX+40]
            mov RDI,QWORD PTR [RAX]
            sub RDX,RBX
            shr RDX,3
            test RDI,RDI
            lea RBP,QWORD PTR [RAX+RDX*8+40]
            je .L_4115fb
.L_4115e2:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RAX,RBX
            je .L_411603
.L_4115ef:

            mov RDI,QWORD PTR [RAX]
            add RBX,40
            test RDI,RDI
            jne .L_4115e2
.L_4115fb:

            cmp RBX,RBP
            mov RAX,RBX
            jne .L_4115ef
.L_411603:

            mov RDI,QWORD PTR [RSP+352]
            test RDI,RDI
            je .L_411615

            call _ZdlPv@PLT
.L_411615:

            mov RBP,QWORD PTR [RSP+336]
            mov RBX,QWORD PTR [RSP+328]
            cmp RBP,RBX
            je .L_411648
.L_41162a:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_411c07

            add RBX,32
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_41162a
.L_411648:

            mov RDI,QWORD PTR [RSP+328]
            test RDI,RDI
            je .L_41165a

            call _ZdlPv@PLT
.L_41165a:

            mov RBP,QWORD PTR [RSP+312]
            mov RBX,QWORD PTR [RSP+304]
            cmp RBP,RBX
            je .L_41168d
.L_41166f:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_411c19

            add RBX,32
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_41166f
.L_41168d:

            mov RDI,QWORD PTR [RSP+304]
            test RDI,RDI
            je .L_41169f

            call _ZdlPv@PLT
.L_41169f:

            add BYTE PTR [RSP+78],1
            mov EDI,DWORD PTR [RSP+68]
            movzx EAX,BYTE PTR [RSP+78]
            and EAX,1
            cmp DWORD PTR [RSP+72],EDI
            mov BYTE PTR [RSP+78],AL
            jle .L_411dee

            mov DWORD PTR [RSP+68],1
            mov RBX,QWORD PTR [RSP+48]
            jmp .L_4108ee
.L_4116d0:

            call __stack_chk_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4116d8:

            cmp BYTE PTR [RDX+776],0
            je .L_411833

            sub R9D,1
            je .L_410d4f

            movsd QWORD PTR [RSP+40],XMM4
            movsd XMM4,QWORD PTR [RSP+16]
.L_4116fb:

            ucomisd XMM4,QWORD PTR [RIP+.L_415cd8]
            movsd QWORD PTR [RSP+16],XMM4
            jnp .L_410a6b
.L_41170f:

            pxor XMM3,XMM3
            ucomisd XMM4,XMM3
            jp .L_41171f

            je .L_410d4f
.L_41171f:

            movsd XMM4,QWORD PTR [RSP+40]
            ucomisd XMM4,QWORD PTR [RIP+.L_415cd8]
            jp .L_411739

            pxor XMM4,XMM4
            je .L_410ab0
.L_411739:

            movsd XMM7,QWORD PTR [RSP+40]
            lea RDX,QWORD PTR [RIP+.L_415bf8]
            mov ECX,63
            movsd XMM4,QWORD PTR [RSP+16]
            mov EAX,63
            movsd XMM1,QWORD PTR [RIP+.L_415cf0]
            mov RSI,RDX
            addsd XMM4,XMM7
            movsd XMM3,QWORD PTR [RIP+.L_415cf8]
            movsd XMM6,QWORD PTR [RSP+8]
            mulsd XMM3,XMM7
            mulsd XMM1,XMM4
            addsd XMM3,XMM1
            movapd XMM0,XMM3
            divsd XMM0,XMM6
            cvttsd2si R11D,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,R11D
            add R11D,R11D
            lea R10D,DWORD PTR [R11+3]
            add R11D,1
            mulsd XMM0,XMM6
            subsd XMM3,XMM0
            jmp .L_41180f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4117b0:

            mov DWORD PTR [RSP+RAX*4+2864],R10D
            mov DWORD PTR [RSP+RAX*4+3120],R10D
            mov DWORD PTR [RSP+RAX*4+3376],R10D
.L_4117c8:

            pxor XMM0,XMM0
            cmp RDI,RSI
            movsd XMM7,QWORD PTR [RIP+.L_415c98]
            cvtsi2sd XMM0,ECX
            mulsd XMM0,QWORD PTR [RIP+.L_415c90]
            addsd XMM0,QWORD PTR [RIP+.L_415c98]
            divsd XMM7,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415ce0]
            mulsd XMM0,XMM7
            subsd XMM3,XMM0
            je .L_4119eb

            movsxd RAX,DWORD PTR [RSI]
            sub RSI,4
            mov ECX,DWORD PTR [RBX+RAX*4]
.L_41180f:

            pxor XMM7,XMM7
            ucomisd XMM3,XMM7
            ja .L_4117b0

            mov DWORD PTR [RSP+RAX*4+2864],R11D
            mov DWORD PTR [RSP+RAX*4+3120],R11D
            mov DWORD PTR [RSP+RAX*4+3376],R11D
            jmp .L_4117c8
.L_411833:

            sub R9D,1
            jne .L_4116fb

            jmp .L_410d4f
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411848:

            add RBP,4
            cmp RBP,QWORD PTR [RSP+8]
            jne .L_410ea0

            jmp .L_410f7a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411860:

            mov RSI,QWORD PTR [RSP+40]
            xor EDX,EDX
            mov RDI,R13
.L_41186a:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+152]
            mov QWORD PTR [RSP+4416],RAX
            mov QWORD PTR [RSP+4432],RDX
.L_411887:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+152]
            mov RAX,QWORD PTR [RSP+4416]
            jmp .L_410f3d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4118b0:

            test RBX,RBX
            mov RAX,R14
            je .L_410f3d

            jmp .L_411887
          .byte 0x66
          .byte 0x90
.L_4118c0:

            add QWORD PTR [RSP+8],256
            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+16],RAX
            jne .L_410e9a

            jmp .L_411042
.L_4118de:

            mov RSI,QWORD PTR [RSP+112]
            xor EDX,EDX
            mov RDI,R13
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+4416],RAX
            mov QWORD PTR [RSP+4432],RDX
.L_411905:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+160]
            mov RAX,QWORD PTR [RSP+4416]
            jmp .L_410ffb
.L_411928:

            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RIP+.L_415ce8]
            movsd XMM7,QWORD PTR [RSP+40]
            movapd XMM4,XMM3
            mulsd XMM0,XMM3
            addsd XMM4,XMM7
            ucomisd XMM0,XMM7
            ja .L_410a9c

            addsd XMM4,XMM4
            jmp .L_410a9c
.L_41195b:

            movsd XMM4,QWORD PTR [RSP+16]
            ucomisd XMM4,QWORD PTR [RIP+.L_415cd8]
            jp .L_411971

            je .L_411b51
.L_411971:

            minsd XMM2,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+16],XMM2
.L_41197d:

            mov RAX,QWORD PTR [RSP+4400]
            cmp QWORD PTR [RSP+5184],RAX
            jae .L_410a28

            cmp BYTE PTR [RSP+4408],1
            je .L_410a28

            mov ECX,98
            mov RDI,QWORD PTR [RSP+96]
            mov RSI,R13

            rep movsq 

            jmp .L_410a28
.L_4119b6:

            test RBX,RBX
            mov RAX,R14
            je .L_410ffb

            jmp .L_411905
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4119d0:

            add QWORD PTR [RSP+16],32
            mov RAX,QWORD PTR [RSP+16]
            cmp RAX,QWORD PTR [RSP+96]
            jne .L_410e8b

            jmp .L_411112
.L_4119eb:

            movsd XMM0,QWORD PTR [RIP+.L_415cf8]
            mov ECX,63
            movsd XMM3,QWORD PTR [RSP+8]
            mov EAX,63
            mulsd XMM0,QWORD PTR [RSP+16]
            addsd XMM1,XMM0
            movapd XMM0,XMM1
            divsd XMM0,XMM3
            cvttsd2si R10D,XMM0
            pxor XMM0,XMM0
            cvtsi2sd XMM0,R10D
            add R10D,R10D
            lea ESI,DWORD PTR [R10+3]
            add R10D,1
            mulsd XMM0,XMM3
            subsd XMM1,XMM0
            jmp .L_411a98
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411a40:

            mov DWORD PTR [RSP+RAX*4+4416],ESI
            mov DWORD PTR [RSP+RAX*4+4672],ESI
            mov DWORD PTR [RSP+RAX*4+4928],ESI
.L_411a55:

            pxor XMM0,XMM0
            cmp RDI,RDX
            movsd XMM3,QWORD PTR [RIP+.L_415c98]
            cvtsi2sd XMM0,ECX
            mulsd XMM0,QWORD PTR [RIP+.L_415c90]
            addsd XMM0,QWORD PTR [RIP+.L_415c98]
            divsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_415ce0]
            mulsd XMM0,XMM3
            subsd XMM1,XMM0
            je .L_411abc

            movsxd RAX,DWORD PTR [RDX]
            sub RDX,4
            mov ECX,DWORD PTR [RBX+RAX*4]
.L_411a98:

            pxor XMM3,XMM3
            ucomisd XMM1,XMM3
            ja .L_411a40

            mov DWORD PTR [RSP+RAX*4+4416],R10D
            mov DWORD PTR [RSP+RAX*4+4672],R10D
            mov DWORD PTR [RSP+RAX*4+4928],R10D
            jmp .L_411a55
.L_411abc:

            mov EAX,DWORD PTR [RSP+2864]
            cmp DWORD PTR [RSP+4416],EAX
            jne .L_411afa

            mov EAX,1
            lea RDX,QWORD PTR [RSP+2864]
            jmp .L_411af0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411ae0:

            add RAX,1
            cmp RAX,192
            je .L_410d4f
.L_411af0:

            mov ESI,DWORD PTR [R13+RAX*4]
            cmp DWORD PTR [RDX+RAX*4],ESI
            je .L_411ae0
.L_411afa:

            mulsd XMM4,QWORD PTR [RIP+.L_415c90]
            jmp .L_410ab0
.L_411b07:

            mov RSI,QWORD PTR [RSP+120]
            xor EDX,EDX
            mov RDI,R13
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+168]
            mov QWORD PTR [RSP+4416],RAX
            mov QWORD PTR [RSP+4432],RDX
.L_411b2e:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+168]
            mov RAX,QWORD PTR [RSP+4416]
            jmp .L_4110ca
.L_411b51:

            movsd QWORD PTR [RSP+16],XMM2
            jmp .L_41197d
.L_411b5c:

            mov RAX,RBP
            sub RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+120],RBP
            movabs RDI,9035139954469984465
            mov RBP,RAX
            sar RAX,4
            imul RAX,RDI
            test RAX,RAX
            jne .L_411c5d

            mov R14D,784
.L_411b8d:

            mov RDI,R14
            call _Znwm@PLT
.L_411b95:

            mov R8,RAX
.L_411b98:

            mov RAX,RBP
            add RAX,R8
            je .L_411bae

            mov ECX,98
            mov RDI,RAX
            mov RSI,R13

            rep movsq 
.L_411bae:

            mov RSI,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+120],RSI
            mov RDX,RBP
            lea RBP,QWORD PTR [R8+RBP*1+784]
            je .L_411ca0

            mov RDI,R8
            call memmove@PLT

            mov R8,RAX
.L_411bd4:

            mov RDI,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+120],R8
            call _ZdlPv@PLT

            mov R8,QWORD PTR [RSP+120]
.L_411be8:

            add R14,R8
            mov QWORD PTR [RSP+24],R8
            jmp .L_410c4a
.L_411bf5:

            add RBX,64
            cmp RBP,RBX
            jne .L_4114e5

            jmp .L_411500
.L_411c07:

            add RBX,32
            cmp RBP,RBX
            jne .L_41162a

            jmp .L_411648
.L_411c19:

            add RBX,32
            cmp RBP,RBX
            jne .L_41166f

            jmp .L_41168d
.L_411c2b:

            add RBX,32
            cmp RBP,RBX
            jne .L_41142c

            jmp .L_41144a
.L_411c3d:

            test RBX,RBX
            lea RAX,QWORD PTR [R13+16]
            je .L_4110ca

            jmp .L_411b2e
          .byte 0x90
.L_411c50:

            lea RCX,QWORD PTR [RSP+2096]
            jmp .L_410c12
.L_411c5d:

            lea RDX,QWORD PTR [RAX+RAX*1]
            cmp RAX,RDX
            ja .L_411e77

            movabs RAX,23529010298098917
            mov R14,-688
            cmp RDX,RAX
            ja .L_411b8d

            test RDX,RDX
            je .L_411fb3

            imul R14,RDX,784
            jmp .L_411b8d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411ca0:

            cmp QWORD PTR [RSP+24],0
            je .L_411be8

            jmp .L_411bd4
.L_411cb1:

            lea RSI,QWORD PTR [RIP+.L_4150a8]
            mov ECX,9
            mov RDI,R12

            rep movsd 

            lea RDX,QWORD PTR [R13+16]
            xor EAX,EAX
            or RCX,-1
            mov BYTE PTR [RSP+6223],0
            mov RDI,R12
            mov QWORD PTR [RSP+4416],RDX

            repne scasb AL,BYTE PTR [RDI]

            mov RAX,RCX
            not RAX
            lea RBX,QWORD PTR [RAX-1]
            cmp RBX,15
            mov QWORD PTR [RSP+208],RBX
            ja .L_412099

            cmp RBX,1
            je .L_412085

            test RBX,RBX
            jne .L_41206f
.L_411d10:

            mov RAX,QWORD PTR [RSP+208]
            mov RDX,QWORD PTR [RSP+4416]
            mov RSI,R13
            mov RDI,R14
            mov QWORD PTR [RSP+4424],RAX
            mov BYTE PTR [RDX+RAX*1],0
.L_411d32:

            call .L_4196f0
.L_411d37:

            mov RDI,QWORD PTR [RSP+4416]
            add R13,16
            cmp RDI,R13
            je .L_411d4d

            call _ZdlPv@PLT
.L_411d4d:

            mov RDI,QWORD PTR [R15+24]
            mov RSI,QWORD PTR [RSP+80]
.L_411d56:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT

            mov RAX,QWORD PTR [RSP+56]
            mov EBX,DWORD PTR [RAX]
            imul EBX,DWORD PTR [RAX+4]
            movsxd RBX,EBX
            test RBX,RBX
            je .L_412026

            movabs RAX,4611686018427387903
            cmp RBX,RAX
            ja .L_412021

            shl RBX,2
            mov RDI,RBX
            call _Znwm@PLT
.L_411d91:

            mov RDX,RBX
            xor ESI,ESI
            mov RDI,RAX
            lea RBP,QWORD PTR [RAX+RBX*1]
            call memset@PLT

            mov RCX,RAX
.L_411da5:

            mov RDX,QWORD PTR [R15+24]
            mov RDI,QWORD PTR [RDX+32]
            mov QWORD PTR [RDX+40],RBP
            mov QWORD PTR [RDX+32],RCX
            mov QWORD PTR [RDX+48],RBP
            test RDI,RDI
            je .L_411dc7

            call _ZdlPv@PLT

            mov RDX,QWORD PTR [R15+24]
.L_411dc7:

            mov RCX,QWORD PTR [RSP+248]
            mov QWORD PTR [RDX+56],0
            test RCX,RCX
            js .L_41202f

            pxor XMM0,XMM0
            cvtsi2sd XMM0,RCX
.L_411de9:

            movsd QWORD PTR [RDX+64],XMM0
.L_411dee:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_4101e0

            call _ZdlPv@PLT

            jmp .L_4101e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411e18:

            lea RSI,QWORD PTR [RSP+144]
            xor EDX,EDX
            mov RDI,R13
.L_411e25:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+4416],RAX
            mov QWORD PTR [RSP+4432],RDX
.L_411e42:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+144]
            mov RAX,QWORD PTR [RSP+4416]
            jmp .L_410e17
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411e68:

            movsd XMM0,QWORD PTR [RIP+.L_415d00]
            call RAX
.L_411e72:

            jmp .L_410d47
.L_411e77:

            mov R14,-688
            jmp .L_411b8d
.L_411e83:

            cmp DWORD PTR [RAX+348],1
            jg .L_41094b

            movzx EAX,BYTE PTR [R15+7]
            mov RDI,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RSP+176]
            movdqa XMM4,XMMWORD PTR [RIP+.L_415c60]
            mov BYTE PTR [RSP+192],1
            mov BYTE PTR [RSP+193],1
            movaps XMMWORD PTR [RSP+176],XMM4
            mov BYTE PTR [RSP+194],1
            mov BYTE PTR [RSP+195],1
            mov BYTE PTR [RSP+196],AL
.L_411ed9:

            call .L_425080
.L_411ede:

            jmp .L_41094b
.L_411ee3:

            mov RDI,QWORD PTR [RSP+4416]
            add R13,16
            mov RBX,RAX
            cmp RDI,R13
            je .L_411efc

            call _ZdlPv@PLT
.L_411efc:

            mov RAX,QWORD PTR [RSP+24]
            test RAX,RAX
            je .L_411f0e

            mov RDI,RAX
            call _ZdlPv@PLT
.L_411f0e:

            mov RDI,QWORD PTR [RSP+32]
            add RDI,8
            call .L_4145a0
.L_411f1c:

            mov RDI,QWORD PTR [RSP+48]
            call .L_401da0
.L_411f26:

            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+240]
            add RAX,16
            cmp RDI,RAX
            je .L_411f41

            call _ZdlPv@PLT
.L_411f41:

            mov RDI,RBX
.L_411f44:

            call _Unwind_Resume@PLT
.L_411f49:

            test RBX,RBX
            lea RAX,QWORD PTR [R13+16]
            je .L_410e17

            jmp .L_411e42
.L_411f5b:

            mov RBX,RAX
            jmp .L_411efc
.L_411f60:

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+48]
            xor R8D,R8D
            movsd XMM0,QWORD PTR [RIP+.L_415c98]
            mov ECX,7
            mov RDI,R15
.L_411f7d:

            call .L_40ae30
.L_411f82:

            jmp .L_41134e
.L_411f87:

            jmp .L_411ee3
.L_411f8c:

            jmp .L_411ee3
.L_411f91:

            mov RBX,RAX
            jmp .L_411f0e
.L_411f99:

            jmp .L_411ee3
.L_411f9e:

            mov DWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+68],1
            jmp .L_4108d2
.L_411fb3:

            xor R14D,R14D
            xor R8D,R8D
            jmp .L_411b98
.L_411fbe:

            jmp .L_411f91
.L_411fc0:

            mov RBX,RAX
            jmp .L_411f1c
.L_411fc8:

            mov RDI,QWORD PTR [RSP+32]
            mov RBX,RAX
            add RDI,8
            call .L_4145a0
.L_411fd9:

            mov RDI,R13
            call .L_401da0

            jmp .L_411f26
.L_411fe6:

            mov RAX,QWORD PTR [RSP+56]
            xor ECX,ECX
            mov RDX,QWORD PTR [RAX+128]
            mov RDI,QWORD PTR [RDX+104]
            mov RAX,QWORD PTR [RDX+112]
            sub RAX,RDI
            sar RAX,1
.L_412002:

            cmp RCX,RAX
            je .L_41213b

            cmp WORD PTR [RDI+RCX*2],0
            jne .L_41212e

            add RCX,1
            jmp .L_412002
.L_41201c:

            mov RBX,RAX
            jmp .L_411fd9
.L_412021:

            call _ZSt17__throw_bad_allocv@PLT
.L_412026:

            xor ECX,ECX
            xor EBP,EBP
            jmp .L_411da5
.L_41202f:

            mov RAX,RCX
            pxor XMM0,XMM0
            shr RAX,1
            and ECX,1
            or RAX,RCX
            cvtsi2sd XMM0,RAX
            addsd XMM0,XMM0
            jmp .L_411de9
.L_41204d:

            mov RDI,QWORD PTR [RSP+4416]
            add R13,16
            mov RBX,RAX
            cmp RDI,R13
            je .L_411f26

            call _ZdlPv@PLT

            jmp .L_411f26
.L_41206f:

            mov RAX,RDX
.L_412072:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            jmp .L_411d10
.L_412085:

            movzx EAX,BYTE PTR [RSP+5200]
            mov BYTE PTR [RSP+4432],AL
            jmp .L_411d10
.L_412099:

            lea RSI,QWORD PTR [RSP+208]
            xor EDX,EDX
            mov RDI,R13
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+4416],RAX
            mov QWORD PTR [RSP+4432],RDX
            jmp .L_412072
.L_4120c5:

            movzx EAX,BYTE PTR [RSP+5200]
            mov BYTE PTR [RSP+4432],AL
            jmp .L_4103ec
.L_4120d9:

            lea RSI,QWORD PTR [RSP+136]
            xor EDX,EDX
            mov RDI,R13
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_4120eb:

            mov RDX,QWORD PTR [RSP+136]
            mov QWORD PTR [RSP+4416],RAX
            mov QWORD PTR [RSP+4432],RDX
.L_412103:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call memcpy@PLT

            jmp .L_4103ec
.L_412116:

            call .L_401560
.L_41211b:

            mov RBX,RAX
            jmp .L_411f26
.L_412123:

            jmp .L_41204d
.L_412128:

            lea RAX,QWORD PTR [R13+16]
            jmp .L_412103
.L_41212e:

            mov DWORD PTR [RSP+72],1
            jmp .L_4108ca
.L_41213b:

            mov RCX,QWORD PTR [RDX+168]
            mov RAX,QWORD PTR [RDX+176]
            xor EDX,EDX
            sub RAX,RCX
            sar RAX,1
.L_412151:

            cmp RDX,RAX
            je .L_412163

            cmp WORD PTR [RCX+RDX*2],0
            jne .L_41212e

            add RDX,1
            jmp .L_412151
.L_412163:

            mov DWORD PTR [RSP+72],0
            jmp .L_4108ca
.L_412170:

            sub RSP,56
.L_412174:

            mov RAX,RDI
            mov R9,R8
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RDI
            xor EDI,EDI
            mov R8,RCX
            mov RDI,RSP
            mov RCX,RDX
            mov RDX,RSI
            mov RSI,RAX
            mov DWORD PTR [RSP],1065353216
            mov BYTE PTR [RSP+4],1
            mov BYTE PTR [RSP+5],0
            mov BYTE PTR [RSP+6],0
            mov BYTE PTR [RSP+7],0
            mov DWORD PTR [RSP+8],3
            mov BYTE PTR [RSP+12],1
            call .L_410150

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_4121db

            add RSP,56
.L_4121da:

            ret 
.L_4121db:

            call __stack_chk_fail@PLT
.L_4121e0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov ESI,ECX
            sub RSP,552
.L_4121f6:

            movdqa XMM0,XMMWORD PTR [RIP+.L_415c70]
            lea RBX,QWORD PTR [RSP+256]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+256],XMM0
            lea RAX,QWORD PTR [RBX+240]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+24],RDX
            mov RDI,RDX
            mov RCX,RBX
            mov EDX,R8D
            movdqa XMM0,XMMWORD PTR [RIP+.L_415c80]
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+288],0
            movaps XMMWORD PTR [RSP+272],XMM0
            mov QWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+304],0
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+368],0
            mov QWORD PTR [RSP+376],0
            mov QWORD PTR [RSP+384],0
            mov QWORD PTR [RSP+392],0
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+408],0
            mov QWORD PTR [RSP+416],0
            mov QWORD PTR [RSP+424],0
            mov QWORD PTR [RSP+432],0
            mov QWORD PTR [RSP+440],0
            mov QWORD PTR [RSP+448],0
            mov QWORD PTR [RSP+456],0
            mov QWORD PTR [RSP+464],0
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],RAX
            mov QWORD PTR [RSP+488],0
            mov BYTE PTR [RSP+496],0
            mov QWORD PTR [RSP+512],0
            mov QWORD PTR [RSP+520],0
            mov DWORD PTR [RSP+528],0
.L_4123af:

            call .L_41b5d0
.L_4123b4:

            test AL,AL
            mov R14D,EAX
            je .L_412868

            lea RBP,QWORD PTR [RSP+80]
            lea R12,QWORD PTR [RSP+160]
            test R13,R13
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+88],0
            lea RAX,QWORD PTR [RBP+16]
            cmove R13,R12
            xor R15D,R15D
            cmp DWORD PTR [RSP+256],31
            mov BYTE PTR [RSP+96],0
            mov QWORD PTR [RSP+80],RAX
            lea RAX,QWORD PTR [R12+8]
            mov QWORD PTR [RSP+128],0
            movaps XMMWORD PTR [RSP+112],XMM0
            mov QWORD PTR [RSP+184],RAX
            mov QWORD PTR [RSP+192],RAX
            lea RAX,QWORD PTR [R12+80]
            movaps XMMWORD PTR [RSP+208],XMM0
            mov DWORD PTR [RSP+168],0
            mov QWORD PTR [RSP+176],0
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+224],RAX
            mov QWORD PTR [RSP+232],0
            mov BYTE PTR [RSP+240],0
            jle .L_41247b

            cmp DWORD PTR [RSP+260],31
            jg .L_412890
.L_41247b:

            mov RSI,QWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+32]
            mov R9,R13
            mov R8,RBP
            mov RCX,R15
            mov RDX,RBX
            mov DWORD PTR [RSP+32],1065353216
            mov BYTE PTR [RSP+36],1
            mov BYTE PTR [RSP+37],0
            mov BYTE PTR [RSP+38],0
            mov BYTE PTR [RSP+39],0
            mov DWORD PTR [RSP+40],3
            mov BYTE PTR [RSP+44],1
.L_4124ba:

            call .L_410150

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RBP
            mov R14D,EAX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_4124cf:

            test R15,R15
            je .L_4124dd

            mov RAX,QWORD PTR [R15]
            mov RDI,R15
            call QWORD PTR [RAX+8]
.L_4124dd:

            mov RDI,QWORD PTR [RSP+224]
            lea RAX,QWORD PTR [R12+80]
            cmp RDI,RAX
            je .L_4124f4

            call _ZdlPv@PLT
.L_4124f4:

            mov RSI,QWORD PTR [RSP+176]
            mov RDI,R12
            call .L_414660

            mov RDI,QWORD PTR [RSP+112]
            test RDI,RDI
            je .L_412513

            call _ZdlPv@PLT
.L_412513:

            mov RDI,QWORD PTR [RSP+80]
            add RBP,16
            cmp RDI,RBP
            je .L_412526

            call _ZdlPv@PLT
.L_412526:

            mov RDI,QWORD PTR [RSP+480]
            add RBX,240
            cmp RDI,RBX
            je .L_41253f

            call _ZdlPv@PLT
.L_41253f:

            mov RBP,QWORD PTR [RSP+464]
            mov RBX,QWORD PTR [RSP+456]
            cmp RBP,RBX
            je .L_41257e

            nop
            nop
            nop
            nop
.L_412558:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_412838

            add RBX,32
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_412558
.L_412576:

            mov RBX,QWORD PTR [RSP+456]
.L_41257e:

            test RBX,RBX
            je .L_41258b

            mov RDI,RBX
            call _ZdlPv@PLT
.L_41258b:

            mov RDI,QWORD PTR [RSP+432]
            test RDI,RDI
            je .L_41259d

            call _ZdlPv@PLT
.L_41259d:

            mov RAX,QWORD PTR [RSP+416]
            mov RDI,QWORD PTR [RSP+408]
            cmp RAX,RDI
            je .L_4125f2

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+40]
            jmp .L_4125d9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4125c8:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_4125ea
.L_4125d5:

            add RBX,40
.L_4125d9:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            jne .L_4125c8

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_4125d5
.L_4125ea:

            mov RDI,QWORD PTR [RSP+408]
.L_4125f2:

            test RDI,RDI
            je .L_4125fc

            call _ZdlPv@PLT
.L_4125fc:

            mov RBP,QWORD PTR [RSP+392]
            mov RBX,QWORD PTR [RSP+384]
            cmp RBP,RBX
            je .L_41263b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412618:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_412850

            add RBX,64
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_412618
.L_412633:

            mov RBX,QWORD PTR [RSP+384]
.L_41263b:

            test RBX,RBX
            je .L_412648

            mov RDI,RBX
            call _ZdlPv@PLT
.L_412648:

            mov RAX,QWORD PTR [RSP+368]
            mov RBX,QWORD PTR [RSP+360]
            cmp RAX,RBX
            je .L_4126d7

            lea RBP,QWORD PTR [RBX+56]
            movabs RDX,988218432520154551
            sub RAX,RBP
            shr RAX,3
            imul RAX,RDX
            movabs RDX,2305843009213693951
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX*8]
            sub RDX,RAX
            lea R12,QWORD PTR [RBX+RDX*8]
            jmp .L_4126b1
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4126a0:

            call _ZdlPv@PLT

            cmp R12,RBP
            mov RBX,RBP
            je .L_4126cf
.L_4126ad:

            add RBP,56
.L_4126b1:

            mov RDI,QWORD PTR [RBX+24]
            test RDI,RDI
            je .L_4126bf

            call _ZdlPv@PLT
.L_4126bf:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            jne .L_4126a0

            cmp RBP,R12
            mov RBX,RBP
            jne .L_4126ad
.L_4126cf:

            mov RBX,QWORD PTR [RSP+360]
.L_4126d7:

            test RBX,RBX
            je .L_4126e4

            mov RDI,RBX
            call _ZdlPv@PLT
.L_4126e4:

            mov RAX,QWORD PTR [RSP+344]
            mov RDI,QWORD PTR [RSP+336]
            cmp RAX,RDI
            je .L_412739

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+40]
            jmp .L_412721
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412710:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_412731
.L_41271d:

            add RBX,40
.L_412721:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_412710

            cmp RBP,RBX
            mov RDI,RBX
            jne .L_41271d
.L_412731:

            mov RDI,QWORD PTR [RSP+336]
.L_412739:

            test RDI,RDI
            je .L_412743

            call _ZdlPv@PLT
.L_412743:

            mov RBP,QWORD PTR [RSP+320]
            mov RBX,QWORD PTR [RSP+312]
            cmp RBP,RBX
            je .L_412786

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412760:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_412820

            add RBX,32
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_412760
.L_41277e:

            mov RBX,QWORD PTR [RSP+312]
.L_412786:

            test RBX,RBX
            je .L_412793

            mov RDI,RBX
            call _ZdlPv@PLT
.L_412793:

            mov RBP,QWORD PTR [RSP+296]
            mov RBX,QWORD PTR [RSP+288]
            cmp RBP,RBX
            je .L_4127d2

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4127b0:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_412810

            add RBX,32
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_4127b0
.L_4127ca:

            mov RBX,QWORD PTR [RSP+288]
.L_4127d2:

            test RBX,RBX
            je .L_4127df

            mov RDI,RBX
            call _ZdlPv@PLT
.L_4127df:

            mov RCX,QWORD PTR [RSP+536]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,R14D
            jne .L_4128c9

            add RSP,552
.L_412800:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412810:

            add RBX,32
            cmp RBP,RBX
            jne .L_4127b0

            jmp .L_4127ca
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412820:

            add RBX,32
            cmp RBP,RBX
            jne .L_412760

            jmp .L_41277e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412838:

            add RBX,32
            cmp RBP,RBX
            jne .L_412558

            jmp .L_412576
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412850:

            add RBX,64
            cmp RBP,RBX
            jne .L_412618

            jmp .L_412633
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412868:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_4150f8]
            mov ESI,1
            xor EAX,EAX
.L_41287d:

            call __fprintf_chk@PLT
.L_412882:

            jmp .L_412526
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412890:

            mov EDI,208
.L_412895:

            call _Znwm@PLT
.L_41289a:

            mov R15,RAX
            mov RAX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+260]
            mov ESI,DWORD PTR [RSP+256]
            mov R8,R13
            mov RDI,R15
            movss XMM0,DWORD PTR [RAX]
.L_4128bf:

            call .L_416340
.L_4128c4:

            jmp .L_41247b
.L_4128c9:

            call __stack_chk_fail@PLT
.L_4128ce:

            mov RDI,R15
            mov R13,RAX
            call _ZdlPv@PLT
.L_4128d9:

            mov RDI,R12
            call .L_414950

            mov RDI,RBP
            call .L_4132e0
.L_4128e9:

            mov RDI,RBX
            call .L_401da0

            mov RDI,R13
.L_4128f4:

            call _Unwind_Resume@PLT
.L_4128f9:

            mov R13,RAX
            jmp .L_4128d9
.L_4128fe:

            mov R13,RAX
            jmp .L_4128e9
.L_412903:

            test R15,R15
            mov R13,RAX
            je .L_4128d9

            mov RAX,QWORD PTR [R15]
            mov RDI,R15
            call QWORD PTR [RAX+8]

            jmp .L_4128d9
.L_412916:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412920:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov ESI,2
            push RBP
            push RBX
            sub RSP,568
.L_412939:

            movdqa XMM0,XMMWORD PTR [RIP+.L_415c70]
            lea RBX,QWORD PTR [RSP+272]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+272],XMM0
            lea RAX,QWORD PTR [RBX+240]
            mov QWORD PTR [RSP],RDI
            mov RDI,RDX
            mov RDX,RBX
            movdqa XMM0,XMMWORD PTR [RIP+.L_415c80]
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+304],0
            movaps XMMWORD PTR [RSP+288],XMM0
            mov QWORD PTR [RSP+312],0
            mov QWORD PTR [RSP+320],0
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov QWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+352],0
            mov QWORD PTR [RSP+360],0
            mov QWORD PTR [RSP+368],0
            mov QWORD PTR [RSP+376],0
            mov QWORD PTR [RSP+384],0
            mov QWORD PTR [RSP+392],0
            mov QWORD PTR [RSP+400],0
            mov QWORD PTR [RSP+408],0
            mov QWORD PTR [RSP+416],0
            mov QWORD PTR [RSP+424],0
            mov QWORD PTR [RSP+432],0
            mov QWORD PTR [RSP+440],0
            mov QWORD PTR [RSP+448],0
            mov QWORD PTR [RSP+456],0
            mov QWORD PTR [RSP+464],0
            mov QWORD PTR [RSP+472],0
            mov QWORD PTR [RSP+480],0
            mov QWORD PTR [RSP+488],0
            mov QWORD PTR [RSP+496],RAX
            mov QWORD PTR [RSP+504],0
            mov BYTE PTR [RSP+512],0
            mov QWORD PTR [RSP+528],0
            mov QWORD PTR [RSP+536],0
            mov DWORD PTR [RSP+544],0
.L_412ae9:

            call .L_4067d0

            test AL,AL
            mov EBP,EAX
            jne .L_412e48

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_415128]
            mov ESI,1
            xor EAX,EAX
            call __fprintf_chk@PLT
.L_412b12:

            mov RDI,QWORD PTR [RSP+496]
            add RBX,240
            cmp RDI,RBX
            je .L_412b2b

            call _ZdlPv@PLT
.L_412b2b:

            mov R12,QWORD PTR [RSP+480]
            mov RBX,QWORD PTR [RSP+472]
            cmp R12,RBX
            je .L_412b66
.L_412b40:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_412e30

            add RBX,32
            call _ZdlPv@PLT

            cmp R12,RBX
            jne .L_412b40
.L_412b5e:

            mov RBX,QWORD PTR [RSP+472]
.L_412b66:

            test RBX,RBX
            je .L_412b73

            mov RDI,RBX
            call _ZdlPv@PLT
.L_412b73:

            mov RDI,QWORD PTR [RSP+448]
            test RDI,RDI
            je .L_412b85

            call _ZdlPv@PLT
.L_412b85:

            mov RAX,QWORD PTR [RSP+432]
            mov RDI,QWORD PTR [RSP+424]
            cmp RAX,RDI
            je .L_412bda

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea R12,QWORD PTR [RDI+RAX*8+40]
            jmp .L_412bc1
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412bb0:

            call _ZdlPv@PLT

            cmp R12,RBX
            mov RDI,RBX
            je .L_412bd2
.L_412bbd:

            add RBX,40
.L_412bc1:

            mov RDI,QWORD PTR [RDI+16]
            test RDI,RDI
            jne .L_412bb0

            cmp R12,RBX
            mov RDI,RBX
            jne .L_412bbd
.L_412bd2:

            mov RDI,QWORD PTR [RSP+424]
.L_412bda:

            test RDI,RDI
            je .L_412be4

            call _ZdlPv@PLT
.L_412be4:

            mov R12,QWORD PTR [RSP+408]
            mov RBX,QWORD PTR [RSP+400]
            cmp R12,RBX
            je .L_412c23

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412c00:

            mov RDI,QWORD PTR [RBX+40]
            test RDI,RDI
            je .L_412e18

            add RBX,64
            call _ZdlPv@PLT

            cmp R12,RBX
            jne .L_412c00
.L_412c1b:

            mov RBX,QWORD PTR [RSP+400]
.L_412c23:

            test RBX,RBX
            je .L_412c30

            mov RDI,RBX
            call _ZdlPv@PLT
.L_412c30:

            mov RAX,QWORD PTR [RSP+384]
            mov RBX,QWORD PTR [RSP+376]
            cmp RAX,RBX
            je .L_412cb7

            lea R12,QWORD PTR [RBX+56]
            movabs RDX,988218432520154551
            sub RAX,R12
            shr RAX,3
            imul RAX,RDX
            movabs RDX,2305843009213693951
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX*8]
            sub RDX,RAX
            lea R13,QWORD PTR [RBX+RDX*8]
            jmp .L_412c91
.L_412c80:

            call _ZdlPv@PLT

            cmp R13,R12
            mov RBX,R12
            je .L_412caf
.L_412c8d:

            add R12,56
.L_412c91:

            mov RDI,QWORD PTR [RBX+24]
            test RDI,RDI
            je .L_412c9f

            call _ZdlPv@PLT
.L_412c9f:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            jne .L_412c80

            cmp R12,R13
            mov RBX,R12
            jne .L_412c8d
.L_412caf:

            mov RBX,QWORD PTR [RSP+376]
.L_412cb7:

            test RBX,RBX
            je .L_412cc4

            mov RDI,RBX
            call _ZdlPv@PLT
.L_412cc4:

            mov RAX,QWORD PTR [RSP+360]
            mov RDI,QWORD PTR [RSP+352]
            cmp RAX,RDI
            je .L_412d19

            lea RBX,QWORD PTR [RDI+40]
            sub RAX,RBX
            shr RAX,3
            lea R12,QWORD PTR [RDI+RAX*8+40]
            jmp .L_412d01
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412cf0:

            call _ZdlPv@PLT

            cmp R12,RBX
            mov RDI,RBX
            je .L_412d11
.L_412cfd:

            add RBX,40
.L_412d01:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_412cf0

            cmp RBX,R12
            mov RDI,RBX
            jne .L_412cfd
.L_412d11:

            mov RDI,QWORD PTR [RSP+352]
.L_412d19:

            test RDI,RDI
            je .L_412d23

            call _ZdlPv@PLT
.L_412d23:

            mov R12,QWORD PTR [RSP+336]
            mov RBX,QWORD PTR [RSP+328]
            cmp R12,RBX
            je .L_412d66

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412d40:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_412e00

            add RBX,32
            call _ZdlPv@PLT

            cmp R12,RBX
            jne .L_412d40
.L_412d5e:

            mov RBX,QWORD PTR [RSP+328]
.L_412d66:

            test RBX,RBX
            je .L_412d73

            mov RDI,RBX
            call _ZdlPv@PLT
.L_412d73:

            mov R12,QWORD PTR [RSP+312]
            mov RBX,QWORD PTR [RSP+304]
            cmp R12,RBX
            je .L_412db2

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412d90:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_412df0

            add RBX,32
            call _ZdlPv@PLT

            cmp R12,RBX
            jne .L_412d90
.L_412daa:

            mov RBX,QWORD PTR [RSP+304]
.L_412db2:

            test RBX,RBX
            je .L_412dbf

            mov RDI,RBX
            call _ZdlPv@PLT
.L_412dbf:

            mov RCX,QWORD PTR [RSP+552]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_41308e

            add RSP,568
.L_412ddf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412df0:

            add RBX,32
            cmp R12,RBX
            jne .L_412d90

            jmp .L_412daa
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412e00:

            add RBX,32
            cmp R12,RBX
            jne .L_412d40

            jmp .L_412d5e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412e18:

            add RBX,64
            cmp R12,RBX
            jne .L_412c00

            jmp .L_412c1b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412e30:

            add RBX,32
            cmp R12,RBX
            jne .L_412b40

            jmp .L_412b5e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412e48:

            lea RBP,QWORD PTR [RSP+16]
            mov RSI,RBX
            mov RDI,RBP
            call .L_41a820
.L_412e58:

            mov RAX,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+24],RAX
            je .L_413070

            lea R13,QWORD PTR [RSP+96]
            lea R12,QWORD PTR [RSP+176]
            test R14,R14
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+104],0
            lea RAX,QWORD PTR [R13+16]
            cmove R14,R12
            xor R15D,R15D
            cmp DWORD PTR [RSP+272],31
            mov BYTE PTR [RSP+112],0
            mov QWORD PTR [RSP+96],RAX
            lea RAX,QWORD PTR [R12+8]
            mov QWORD PTR [RSP+144],0
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+200],RAX
            mov QWORD PTR [RSP+208],RAX
            lea RAX,QWORD PTR [R12+80]
            movaps XMMWORD PTR [RSP+224],XMM0
            mov DWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov QWORD PTR [RSP+216],0
            mov QWORD PTR [RSP+240],RAX
            mov QWORD PTR [RSP+248],0
            mov BYTE PTR [RSP+256],0
            jle .L_412f27

            cmp DWORD PTR [RSP+276],31
            jg .L_413030
.L_412f27:

            mov RSI,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RSP+48]
            mov R9,R14
            mov R8,R13
            mov RCX,R15
            mov RDX,RBX
            mov DWORD PTR [RSP+48],1065353216
            mov BYTE PTR [RSP+52],1
            mov BYTE PTR [RSP+53],0
            mov BYTE PTR [RSP+54],0
            mov BYTE PTR [RSP+55],0
            mov DWORD PTR [RSP+56],3
            mov BYTE PTR [RSP+60],1
.L_412f65:

            call .L_410150

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R13
            mov EBP,EAX
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_@PLT
.L_412f79:

            test R15,R15
            je .L_412f87

            mov RAX,QWORD PTR [R15]
            mov RDI,R15
            call QWORD PTR [RAX+8]
.L_412f87:

            mov RDI,QWORD PTR [RSP+240]
            lea RAX,QWORD PTR [R12+80]
            cmp RDI,RAX
            je .L_412f9e

            call _ZdlPv@PLT
.L_412f9e:

            mov R14,QWORD PTR [RSP+192]
            test R14,R14
            je .L_412fed
.L_412fab:

            mov RSI,QWORD PTR [R14+24]
            mov RDI,R12
            call .L_414660

            mov RDI,QWORD PTR [R14+32]
            lea RAX,QWORD PTR [R14+48]
            mov R15,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_412fe0

            call _ZdlPv@PLT

            mov RDI,R14
            call _ZdlPv@PLT

            test R15,R15
            je .L_412fed
.L_412fda:

            mov R14,R15
            jmp .L_412fab
          .byte 0x90
.L_412fe0:

            mov RDI,R14
            call _ZdlPv@PLT

            test R15,R15
            jne .L_412fda
.L_412fed:

            mov RDI,QWORD PTR [RSP+128]
            test RDI,RDI
            je .L_412fff

            call _ZdlPv@PLT
.L_412fff:

            mov RDI,QWORD PTR [RSP+96]
            add R13,16
            cmp RDI,R13
            je .L_413012

            call _ZdlPv@PLT
.L_413012:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_412b12

            call _ZdlPv@PLT

            jmp .L_412b12
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413030:

            mov EDI,208
.L_413035:

            call _Znwm@PLT
.L_41303a:

            mov R15,RAX
            mov RAX,QWORD PTR [RSP]
            mov EDX,DWORD PTR [RSP+276]
            mov ESI,DWORD PTR [RSP+272]
            mov R8,R14
            mov RCX,RBP
            mov RDI,R15
            movss XMM0,DWORD PTR [RAX]
.L_41305c:

            call .L_416340
.L_413061:

            jmp .L_412f27
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413070:

            mov RDI,QWORD PTR [RIP+stderr]
            lea RDX,QWORD PTR [RIP+.L_415150]
            mov ESI,1
            xor EAX,EAX
.L_413085:

            call __fprintf_chk@PLT
.L_41308a:

            xor EBP,EBP
            jmp .L_413012
.L_41308e:

            call __stack_chk_fail@PLT
.L_413093:

            mov RBP,RAX
.L_413096:

            mov RDI,QWORD PTR [RSP+16]
            test RDI,RDI
            je .L_4130a5

            call _ZdlPv@PLT
.L_4130a5:

            mov RDI,RBX
            call .L_401da0

            mov RDI,RBP
.L_4130b0:

            call _Unwind_Resume@PLT
.L_4130b5:

            mov RDI,R15
            mov RBP,RAX
            call _ZdlPv@PLT
.L_4130c0:

            mov RDI,R12
            call .L_414950

            mov RDI,R13
            call .L_4132e0

            jmp .L_413096
.L_4130d2:

            mov RBP,RAX
            jmp .L_4130c0
.L_4130d7:

            mov RBP,RAX
            jmp .L_4130a5
.L_4130dc:

            test R15,R15
            mov RBP,RAX
            je .L_4130c0

            mov RAX,QWORD PTR [R15]
            mov RDI,R15
            call QWORD PTR [RAX+8]

            jmp .L_4130c0
.L_4130ef:

            nop
.L_4130f0:

            pxor XMM1,XMM1
            pxor XMM2,XMM2
            cvtss2sd XMM1,DWORD PTR [RDI+16]
            cvtss2sd XMM2,DWORD PTR [RDI+168]
            mulsd XMM0,XMM1
            ucomisd XMM0,XMM2
            setae AL
            ret 
.L_413111:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413120:

            movss XMM0,DWORD PTR [RDI+168]
            ret 
.L_413129:
          .string "basic_string::append"
.L_41313e:

            jne .L_4131a6
          .byte 0x74
          .byte 0x7a
          .byte 0x6c
          .byte 0x69
          .byte 0x2f
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x63
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x6f
          .byte 0x72
          .byte 0x2e
          .byte 0x63
          .byte 0x63
          .byte 0x0
.L_413153:
          .string "0"
.L_413155:
          .string "vector::_M_default_append"
.L_41316f:
          .string " Score[%.4f]"
.L_41317c:
          .string "vector::reserve"
.L_41318c:
          .string "vector::_M_realloc_insert"
.L_4131a6:

            outsb DX,BYTE PTR [RSI]
            jne .L_413216
          .byte 0x62
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x69
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x73
          .byte 0x20
          .byte 0x75
          .byte 0x70
          .byte 0x0
.L_4131be:
          .string "number of iterations down"
.L_4131d8:

            jne .L_41324a
          .zero 1
.L_4131db:
          .string "down"
.L_4131e0:
          .string " %2d"
.L_4131e5:
          .string "YUV420"
.L_4131ec:
          .string "YUV444"
.L_4131f3:
          .string "Unsupported sampling factors:"
.L_413211:
          .byte 0x20
          .byte 0x25
          .byte 0x64
          .byte 0x78
          .byte 0x25
.L_413216:

            add BYTE PTR FS:[RDX],CL
          .zero 1
.L_41321a:
          .string "Original Out[%7zd]"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413230:

            push R12
            push RBP
            xor ECX,ECX
            push RBX
.L_413236:

            mov RBP,QWORD PTR [RSI+184]
            mov RBX,RDI
            sub RBP,QWORD PTR [RSI+176]
            mov R12,RSI
.L_41324a:

            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov RAX,RBP
            sar RAX,2
            test RAX,RAX
            je .L_413287

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_4132cd

            mov RDI,RBP
            call _Znwm@PLT

            mov RCX,RAX
.L_413287:

            add RBP,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],RBP
            mov RAX,QWORD PTR [R12+184]
            mov RSI,QWORD PTR [R12+176]
            mov RBP,RAX
            sub RBP,RSI
            cmp RAX,RSI
            je .L_4132be

            mov RDI,RCX
            mov RDX,RBP
            call memmove@PLT

            mov RCX,RAX
.L_4132be:

            add RCX,RBP
            mov RAX,RBX
            mov QWORD PTR [RBX+8],RCX
            pop RBX
.L_4132c9:

            pop RBP
            pop R12
            ret 
.L_4132cd:

            call _ZSt17__throw_bad_allocv@PLT
.L_4132d2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4132e0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+32]
            test RDI,RDI
            je .L_4132f2

            call _ZdlPv@PLT
.L_4132f2:

            mov RDI,QWORD PTR [RBX]
            add RBX,16
            cmp RDI,RBX
            je .L_413308

            pop RBX
            jmp _ZdlPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413308:

            pop RBX
            ret 
.L_41330a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_413310:

            push R12
            push RBP
            mov R12,RDI
            push RBX
            mov RBP,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            cmp RBP,RBX
            je .L_413346

            nop
            nop
            nop
            nop
            nop
.L_413328:

            mov RDI,QWORD PTR [RBX]
            lea RAX,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_413360

            add RBX,32
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_413328
.L_413342:

            mov RBX,QWORD PTR [R12]
.L_413346:

            test RBX,RBX
            je .L_413370

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp _ZdlPv@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413360:

            add RBX,32
            cmp RBP,RBX
            jne .L_413328

            jmp .L_413342
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413370:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_413375:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413378:
          .string "basic_string::_M_construct null not valid"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4133b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,72
.L_4133c4:

            mov R12,QWORD PTR [RSI+40]
            sub R12,QWORD PTR [RSI+32]
            movdqu XMM0,XMMWORD PTR [RSI+16]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            movdqu XMM1,XMMWORD PTR [RSI]
            mov RAX,R12
            mov QWORD PTR [RDI+48],0
            movups XMMWORD PTR [RDI+16],XMM0
            pxor XMM0,XMM0
            sar RAX,5
            test RAX,RAX
            movups XMMWORD PTR [RDI],XMM1
            movups XMMWORD PTR [RDI+32],XMM0
            je .L_413f48

            movabs RDX,576460752303423487
            cmp RAX,RDX
            ja .L_41418c

            mov RDI,R12
.L_413422:

            call _Znwm@PLT
.L_413427:

            mov QWORD PTR [RSP+16],RAX
.L_41342c:

            add R12,RAX
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+40],RAX
            mov QWORD PTR [RBX+48],R12
            mov RDX,QWORD PTR [RBP+40]
            mov R12,RAX
            mov R13,QWORD PTR [RBP+32]
            mov QWORD PTR [RSP+8],RDX
            cmp RDX,R13
            je .L_413500

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_41348c
.L_413460:

            cmp R14,1
            jne .L_413ea0

            movzx EDX,BYTE PTR [R15]
            mov BYTE PTR [R12+16],DL
.L_413473:

            mov QWORD PTR [R12+8],R14
            mov BYTE PTR [RAX+R14*1],0
.L_41347d:

            add R12,32
            add R13,32
            cmp QWORD PTR [RSP+8],R13
            je .L_413500
.L_41348c:

            test R12,R12
            je .L_41347d

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [R12],RAX
            mov R15,QWORD PTR [R13]
            mov R14,QWORD PTR [R13+8]
            mov RDI,R15
            add RDI,R14
            je .L_4134b3

            test R15,R15
            je .L_414191
.L_4134b3:

            cmp R14,15
            mov QWORD PTR [RSP+48],R14
            jbe .L_413460

            mov RSI,QWORD PTR [RSP+24]
            xor EDX,EDX
            mov RDI,R12
.L_4134c8:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_4134cd:

            mov RDX,QWORD PTR [RSP+48]
            mov QWORD PTR [R12],RAX
            mov QWORD PTR [R12+16],RDX
.L_4134db:

            mov RDX,R14
            mov RSI,R15
            mov RDI,RAX
            call memcpy@PLT

            mov R14,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [R12]
            jmp .L_413473
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413500:

            mov QWORD PTR [RBX+40],R12
            mov R12,QWORD PTR [RBP+64]
            sub R12,QWORD PTR [RBP+56]
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+64],0
            mov QWORD PTR [RBX+72],0
            mov RAX,R12
            sar RAX,5
            test RAX,RAX
            je .L_413f60

            movabs RDX,576460752303423487
            cmp RAX,RDX
            ja .L_414173

            mov RDI,R12
.L_41354a:

            call _Znwm@PLT
.L_41354f:

            mov QWORD PTR [RSP+16],RAX
.L_413554:

            add R12,RAX
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+64],RAX
            mov QWORD PTR [RBX+72],R12
            mov RDI,QWORD PTR [RBP+64]
            mov R12,RAX
            mov R13,QWORD PTR [RBP+56]
            mov QWORD PTR [RSP+8],RDI
            cmp RDI,R13
            je .L_413630

            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_4135bc
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413590:

            cmp R14,1
            jne .L_413eb0

            movzx EDX,BYTE PTR [R15]
            mov BYTE PTR [R12+16],DL
.L_4135a3:

            mov QWORD PTR [R12+8],R14
            mov BYTE PTR [RAX+R14*1],0
.L_4135ad:

            add R12,32
            add R13,32
            cmp QWORD PTR [RSP+8],R13
            je .L_413630
.L_4135bc:

            test R12,R12
            je .L_4135ad

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [R12],RAX
            mov R15,QWORD PTR [R13]
            mov R14,QWORD PTR [R13+8]
            mov RDI,R15
            add RDI,R14
            je .L_4135e3

            test R15,R15
            je .L_414138
.L_4135e3:

            cmp R14,15
            mov QWORD PTR [RSP+32],R14
            jbe .L_413590

            mov RSI,QWORD PTR [RSP+24]
            xor EDX,EDX
            mov RDI,R12
.L_4135f8:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_4135fd:

            mov RDX,QWORD PTR [RSP+32]
            mov QWORD PTR [R12],RAX
            mov QWORD PTR [R12+16],RDX
.L_41360b:

            mov RDX,R14
            mov RSI,R15
            mov RDI,RAX
            call memcpy@PLT

            mov R14,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [R12]
            jmp .L_4135a3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413630:

            mov QWORD PTR [RBX+64],R12
            mov R12,QWORD PTR [RBP+88]
            movabs RDX,-3689348814741910323
            sub R12,QWORD PTR [RBP+80]
            mov QWORD PTR [RBX+80],0
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+96],0
            mov RAX,R12
            sar RAX,3
            imul RAX,RDX
            test RAX,RAX
            je .L_413f78

            movabs RDX,461168601842738790
            cmp RAX,RDX
            ja .L_414272

            mov RDI,R12
.L_413688:

            call _Znwm@PLT
.L_41368d:

            mov QWORD PTR [RSP+8],RAX
.L_413692:

            add R12,RAX
            mov QWORD PTR [RBX+80],RAX
            mov QWORD PTR [RBX+88],RAX
            mov QWORD PTR [RBX+96],R12
            mov R15,QWORD PTR [RBP+88]
            mov R12,RAX
            mov R13,QWORD PTR [RBP+80]
            cmp R15,R13
            je .L_413776

            nop
            nop
            nop
.L_4136b8:

            test R12,R12
            je .L_413765

            mov R14,QWORD PTR [R13+8]
            sub R14,QWORD PTR [R13]
            xor ECX,ECX
            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12+16],0
            mov RAX,R14
            sar RAX,2
            test RAX,RAX
            je .L_41370f

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_413feb

            mov RDI,R14
.L_413707:

            call _Znwm@PLT
.L_41370c:

            mov RCX,RAX
.L_41370f:

            add R14,RCX
            mov QWORD PTR [R12],RCX
            mov QWORD PTR [R12+8],RCX
            mov QWORD PTR [R12+16],R14
            mov RAX,QWORD PTR [R13+8]
            mov RSI,QWORD PTR [R13]
            mov R14,RAX
            sub R14,RSI
            cmp RAX,RSI
            je .L_413741

            mov RDI,RCX
            mov RDX,R14
            call memmove@PLT

            mov RCX,RAX
.L_413741:

            mov EAX,DWORD PTR [R13+24]
            add RCX,R14
            mov QWORD PTR [R12+8],RCX
            mov DWORD PTR [R12+24],EAX
            mov EAX,DWORD PTR [R13+28]
            mov DWORD PTR [R12+28],EAX
            movzx EAX,BYTE PTR [R13+32]
            mov BYTE PTR [R12+32],AL
.L_413765:

            add R13,40
            add R12,40
            cmp R15,R13
            jne .L_4136b8
.L_413776:

            mov QWORD PTR [RBX+88],R12
            mov R12,QWORD PTR [RBP+112]
            movabs RDX,7905747460161236407
            sub R12,QWORD PTR [RBP+104]
            mov QWORD PTR [RBX+104],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov RAX,R12
            sar RAX,3
            imul RAX,RDX
            test RAX,RAX
            je .L_413f90

            movabs RDX,329406144173384850
            cmp RAX,RDX
            ja .L_414245

            mov RDI,R12
.L_4137ce:

            call _Znwm@PLT
.L_4137d3:

            mov QWORD PTR [RSP+8],RAX
.L_4137d8:

            add R12,RAX
            mov QWORD PTR [RBX+104],RAX
            mov QWORD PTR [RBX+112],RAX
            mov QWORD PTR [RBX+120],R12
            mov R15,QWORD PTR [RBP+112]
            mov R12,RAX
            mov R13,QWORD PTR [RBP+104]
            cmp R15,R13
            je .L_41393f

            nop
            nop
            nop
            nop
            nop
.L_413800:

            test R12,R12
            je .L_41392e

            mov R14,QWORD PTR [R13+8]
            sub R14,QWORD PTR [R13]
            xor ECX,ECX
            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12+16],0
            mov RAX,R14
            sar RAX,2
            test RAX,RAX
            je .L_413857

            movabs RDI,4611686018427387903
            cmp RAX,RDI
            ja .L_4140f0

            mov RDI,R14
.L_41384f:

            call _Znwm@PLT
.L_413854:

            mov RCX,RAX
.L_413857:

            add R14,RCX
            mov QWORD PTR [R12],RCX
            mov QWORD PTR [R12+8],RCX
            mov QWORD PTR [R12+16],R14
            mov RAX,QWORD PTR [R13+8]
            mov RSI,QWORD PTR [R13]
            mov R14,RAX
            sub R14,RSI
            cmp RAX,RSI
            je .L_413889

            mov RDI,RCX
            mov RDX,R14
            call memmove@PLT

            mov RCX,RAX
.L_413889:

            add RCX,R14
            mov QWORD PTR [R12+8],RCX
            mov R14,QWORD PTR [R13+32]
            xor ECX,ECX
            sub R14,QWORD PTR [R13+24]
            mov QWORD PTR [R12+24],0
            mov QWORD PTR [R12+32],0
            mov QWORD PTR [R12+40],0
            mov RAX,R14
            sar RAX,2
            test RAX,RAX
            je .L_4138e0

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_414090

            mov RDI,R14
.L_4138d8:

            call _Znwm@PLT
.L_4138dd:

            mov RCX,RAX
.L_4138e0:

            add R14,RCX
            mov QWORD PTR [R12+24],RCX
            mov QWORD PTR [R12+32],RCX
            mov QWORD PTR [R12+40],R14
            mov RAX,QWORD PTR [R13+32]
            mov RSI,QWORD PTR [R13+24]
            mov R14,RAX
            sub R14,RSI
            cmp RAX,RSI
            je .L_413913

            mov RDI,RCX
            mov RDX,R14
            call memmove@PLT

            mov RCX,RAX
.L_413913:

            mov EAX,DWORD PTR [R13+48]
            add RCX,R14
            mov QWORD PTR [R12+32],RCX
            mov DWORD PTR [R12+48],EAX
            movzx EAX,BYTE PTR [R13+52]
            mov BYTE PTR [R12+52],AL
.L_41392e:

            add R13,56
            add R12,56
            cmp R15,R13
            jne .L_413800
.L_41393f:

            mov QWORD PTR [RBX+112],R12
            mov R12,QWORD PTR [RBP+136]
            sub R12,QWORD PTR [RBP+128]
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+144],0
            mov RAX,R12
            sar RAX,6
            test RAX,RAX
            je .L_413fd8

            movabs RDX,288230376151711743
            cmp RAX,RDX
            ja .L_4140f7

            mov RDI,R12
.L_413998:

            call _Znwm@PLT
.L_41399d:

            mov QWORD PTR [RSP+8],RAX
.L_4139a2:

            add R12,RAX
            mov QWORD PTR [RBX+128],RAX
            mov QWORD PTR [RBX+136],RAX
            mov QWORD PTR [RBX+144],R12
            mov R15,QWORD PTR [RBP+136]
            mov R12,RAX
            mov R13,QWORD PTR [RBP+128]
            cmp R15,R13
            je .L_413aa8

            nop
            nop
            nop
            nop
.L_4139d8:

            test R12,R12
            je .L_413a97

            mov EAX,DWORD PTR [R13]
            mov R14,QWORD PTR [R13+48]
            sub R14,QWORD PTR [R13+40]
            mov DWORD PTR [R12],EAX
            mov EAX,DWORD PTR [R13+4]
            test R14,R14
            mov DWORD PTR [R12+4],EAX
            mov EAX,DWORD PTR [R13+8]
            mov DWORD PTR [R12+8],EAX
            mov RAX,QWORD PTR [R13+16]
            mov QWORD PTR [R12+16],RAX
            mov EAX,DWORD PTR [R13+24]
            mov DWORD PTR [R12+24],EAX
            mov EAX,DWORD PTR [R13+28]
            mov DWORD PTR [R12+28],EAX
            mov EAX,DWORD PTR [R13+32]
            mov QWORD PTR [R12+40],0
            mov QWORD PTR [R12+48],0
            mov QWORD PTR [R12+56],0
            mov DWORD PTR [R12+32],EAX
            je .L_413f28

            js .L_414020

            mov RDI,R14
.L_413a54:

            call _Znwm@PLT
.L_413a59:

            mov RCX,RAX
.L_413a5c:

            add R14,RCX
            mov QWORD PTR [R12+40],RCX
            mov QWORD PTR [R12+48],RCX
            mov QWORD PTR [R12+56],R14
            mov RAX,QWORD PTR [R13+48]
            mov RSI,QWORD PTR [R13+40]
            mov R14,RAX
            sub R14,RSI
            cmp RAX,RSI
            je .L_413a8f

            mov RDI,RCX
            mov RDX,R14
            call memmove@PLT

            mov RCX,RAX
.L_413a8f:

            add RCX,R14
            mov QWORD PTR [R12+48],RCX
.L_413a97:

            add R13,64
            add R12,64
            cmp R15,R13
            jne .L_4139d8
.L_413aa8:

            mov QWORD PTR [RBX+136],R12
            mov R12,QWORD PTR [RBP+160]
            movabs RDX,-3689348814741910323
            sub R12,QWORD PTR [RBP+152]
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+160],0
            mov QWORD PTR [RBX+168],0
            mov RAX,R12
            sar RAX,3
            imul RAX,RDX
            test RAX,RAX
            je .L_413fa8

            movabs RDX,461168601842738790
            cmp RAX,RDX
            ja .L_4141cc

            mov RDI,R12
.L_413b12:

            call _Znwm@PLT
.L_413b17:

            mov QWORD PTR [RSP+8],RAX
.L_413b1c:

            add R12,RAX
            mov QWORD PTR [RBX+152],RAX
            mov QWORD PTR [RBX+160],RAX
            mov QWORD PTR [RBX+168],R12
            mov R15,QWORD PTR [RBP+160]
            mov R12,RAX
            mov R13,QWORD PTR [RBP+152]
            cmp R15,R13
            je .L_413c25

            nop
            nop
.L_413b50:

            test R12,R12
            je .L_413c14

            mov EAX,DWORD PTR [R13]
            mov R14,QWORD PTR [R13+24]
            movabs RDX,-6148914691236517205
            sub R14,QWORD PTR [R13+16]
            xor ECX,ECX
            mov DWORD PTR [R12],EAX
            mov EAX,DWORD PTR [R13+4]
            mov DWORD PTR [R12+4],EAX
            mov EAX,DWORD PTR [R13+8]
            mov DWORD PTR [R12+8],EAX
            mov EAX,DWORD PTR [R13+12]
            mov QWORD PTR [R12+16],0
            mov QWORD PTR [R12+24],0
            mov QWORD PTR [R12+32],0
            mov DWORD PTR [R12+12],EAX
            mov RAX,R14
            sar RAX,2
            imul RAX,RDX
            test RAX,RAX
            je .L_413bd9

            movabs RDI,1537228672809129301
            cmp RAX,RDI
            ja .L_414058

            mov RDI,R14
.L_413bd1:

            call _Znwm@PLT
.L_413bd6:

            mov RCX,RAX
.L_413bd9:

            add R14,RCX
            mov QWORD PTR [R12+16],RCX
            mov QWORD PTR [R12+24],RCX
            mov QWORD PTR [R12+32],R14
            mov RAX,QWORD PTR [R13+24]
            mov RSI,QWORD PTR [R13+16]
            mov R14,RAX
            sub R14,RSI
            cmp RAX,RSI
            je .L_413c0c

            mov RDI,RCX
            mov RDX,R14
            call memmove@PLT

            mov RCX,RAX
.L_413c0c:

            add RCX,R14
            mov QWORD PTR [R12+24],RCX
.L_413c14:

            add R13,40
            add R12,40
            cmp R15,R13
            jne .L_413b50
.L_413c25:

            mov QWORD PTR [RBX+160],R12
            mov R12,QWORD PTR [RBP+184]
            xor ECX,ECX
            sub R12,QWORD PTR [RBP+176]
            mov QWORD PTR [RBX+176],0
            mov QWORD PTR [RBX+184],0
            mov QWORD PTR [RBX+192],0
            test R12,R12
            jne .L_413ed0
.L_413c66:

            add R12,RCX
            mov QWORD PTR [RBX+176],RCX
            mov QWORD PTR [RBX+184],RCX
            mov QWORD PTR [RBX+192],R12
            mov RSI,QWORD PTR [RBP+176]
            xor R12D,R12D
            mov RAX,QWORD PTR [RBP+184]
            sub RAX,RSI
            je .L_413ca5

            mov RDI,RCX
            mov RDX,RAX
            mov R12,RAX
            call memmove@PLT

            mov RCX,RAX
.L_413ca5:

            add RCX,R12
            mov R12,QWORD PTR [RBP+208]
            sub R12,QWORD PTR [RBP+200]
            mov QWORD PTR [RBX+184],RCX
            mov QWORD PTR [RBX+200],0
            mov QWORD PTR [RBX+208],0
            mov QWORD PTR [RBX+216],0
            mov RAX,R12
            sar RAX,5
            test RAX,RAX
            je .L_413fc0

            movabs RDX,576460752303423487
            cmp RAX,RDX
            ja .L_414200

            mov RDI,R12
.L_413d04:

            call _Znwm@PLT
.L_413d09:

            mov QWORD PTR [RSP+16],RAX
.L_413d0e:

            add R12,RAX
            mov QWORD PTR [RBX+200],RAX
            mov QWORD PTR [RBX+208],RAX
            mov QWORD PTR [RBX+216],R12
            mov RSI,QWORD PTR [RBP+208]
            mov R12,RAX
            mov R13,QWORD PTR [RBP+200]
            mov QWORD PTR [RSP+8],RSI
            cmp RSI,R13
            je .L_413df0

            lea RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_413d84
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413d58:

            cmp R14,1
            jne .L_413ec0

            movzx EDX,BYTE PTR [R15]
            mov BYTE PTR [R12+16],DL
.L_413d6b:

            mov QWORD PTR [R12+8],R14
            mov BYTE PTR [RAX+R14*1],0
.L_413d75:

            add R12,32
            add R13,32
            cmp QWORD PTR [RSP+8],R13
            je .L_413df0
.L_413d84:

            test R12,R12
            je .L_413d75

            lea RAX,QWORD PTR [R12+16]
            mov QWORD PTR [R12],RAX
            mov R15,QWORD PTR [R13]
            mov R14,QWORD PTR [R13+8]
            mov RDI,R15
            add RDI,R14
            je .L_413dab

            test R15,R15
            je .L_414288
.L_413dab:

            cmp R14,15
            mov QWORD PTR [RSP+40],R14
            jbe .L_413d58

            mov RSI,QWORD PTR [RSP+24]
            xor EDX,EDX
            mov RDI,R12
.L_413dc0:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_413dc5:

            mov RDX,QWORD PTR [RSP+40]
            mov QWORD PTR [R12],RAX
            mov QWORD PTR [R12+16],RDX
.L_413dd3:

            mov RDX,R14
            mov RSI,R15
            mov RDI,RAX
            call memcpy@PLT

            mov R14,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [R12]
            jmp .L_413d6b
          .byte 0x90
.L_413df0:

            lea RAX,QWORD PTR [RBX+240]
            mov QWORD PTR [RBX+208],R12
            mov QWORD PTR [RBX+224],RAX
            mov R13,QWORD PTR [RBP+224]
            mov R12,QWORD PTR [RBP+232]
            mov RDX,R13
            add RDX,R12
            je .L_413e24

            test R13,R13
            je .L_414371
.L_413e24:

            cmp R12,15
            mov QWORD PTR [RSP+48],R12
            ja .L_413ee0

            cmp R12,1
            jne .L_413f38

            movzx EDX,BYTE PTR [R13]
            mov BYTE PTR [RBX+240],DL
.L_413e48:

            mov QWORD PTR [RBX+232],R12
            mov BYTE PTR [RAX+R12*1],0
            mov RAX,QWORD PTR [RBP+256]
            mov QWORD PTR [RBX+256],RAX
            mov RAX,QWORD PTR [RBP+264]
            mov QWORD PTR [RBX+264],RAX
            mov EAX,DWORD PTR [RBP+272]
            mov DWORD PTR [RBX+272],EAX
            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414133

            add RSP,72
.L_413e94:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_413ea0:

            test R14,R14
            je .L_413473

            jmp .L_4134db
          .byte 0x66
          .byte 0x90
.L_413eb0:

            test R14,R14
            je .L_4135a3

            jmp .L_41360b
          .byte 0x66
          .byte 0x90
.L_413ec0:

            test R14,R14
            je .L_413d6b

            jmp .L_413dd3
          .byte 0x66
          .byte 0x90
.L_413ed0:

            mov RDI,R12
.L_413ed3:

            call _Znwm@PLT
.L_413ed8:

            mov RCX,RAX
            jmp .L_413c66
.L_413ee0:

            lea RSI,QWORD PTR [RSP+48]
            lea RDI,QWORD PTR [RBX+224]
            xor EDX,EDX
.L_413eee:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_413ef3:

            mov RDX,QWORD PTR [RSP+48]
            mov QWORD PTR [RBX+224],RAX
            mov QWORD PTR [RBX+240],RDX
.L_413f06:

            mov RDX,R12
            mov RSI,R13
            mov RDI,RAX
            call memcpy@PLT

            mov R12,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RBX+224]
            jmp .L_413e48
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413f28:

            xor R14D,R14D
            xor ECX,ECX
            jmp .L_413a5c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413f38:

            test R12,R12
            je .L_413e48

            jmp .L_413f06
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413f48:

            mov QWORD PTR [RSP+16],0
            mov RAX,QWORD PTR [RSP+16]
            jmp .L_41342c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413f60:

            mov QWORD PTR [RSP+16],0
            mov RAX,QWORD PTR [RSP+16]
            jmp .L_413554
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413f78:

            mov QWORD PTR [RSP+8],0
            mov RAX,QWORD PTR [RSP+8]
            jmp .L_413692
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413f90:

            mov QWORD PTR [RSP+8],0
            mov RAX,QWORD PTR [RSP+8]
            jmp .L_4137d8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413fa8:

            mov QWORD PTR [RSP+8],0
            mov RAX,QWORD PTR [RSP+8]
            jmp .L_413b1c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413fc0:

            mov QWORD PTR [RSP+16],0
            mov RAX,QWORD PTR [RSP+16]
            jmp .L_413d0e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413fd8:

            mov QWORD PTR [RSP+8],0
            mov RAX,QWORD PTR [RSP+8]
            jmp .L_4139a2
.L_413feb:

            call _ZSt17__throw_bad_allocv@PLT
.L_413ff0:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_413ff8:

            mov RAX,QWORD PTR [RSP+8]
            cmp R12,RAX
            je .L_4143fe

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_414013

            call _ZdlPv@PLT
.L_414013:

            add QWORD PTR [RSP+8],40
            jmp .L_413ff8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414020:

            call _ZSt17__throw_bad_allocv@PLT
.L_414025:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_41402d:

            mov RAX,QWORD PTR [RSP+8]
            cmp RAX,R12
            je .L_4143f9

            mov RDI,QWORD PTR [RAX+40]
            test RDI,RDI
            je .L_414049

            call _ZdlPv@PLT
.L_414049:

            add QWORD PTR [RSP+8],64
            jmp .L_41402d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414058:

            call _ZSt17__throw_bad_allocv@PLT
.L_41405d:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_414065:

            mov RAX,QWORD PTR [RSP+8]
            cmp R12,RAX
            je .L_4143bd

            mov RDI,QWORD PTR [RAX+16]
            test RDI,RDI
            je .L_414081

            call _ZdlPv@PLT
.L_414081:

            add QWORD PTR [RSP+8],40
            jmp .L_414065
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414090:

            call _ZSt17__throw_bad_allocv@PLT
.L_414095:

            mov RDI,QWORD PTR [R12]
            mov RBP,RAX
            test RDI,RDI
            je .L_4140a6

            call _ZdlPv@PLT
.L_4140a6:

            mov RAX,RBP
.L_4140a9:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_4140b1:

            mov RAX,QWORD PTR [RSP+8]
            cmp RAX,R12
            je .L_4143b8

            mov RDI,QWORD PTR [RAX+24]
            test RDI,RDI
            je .L_4140cd

            call _ZdlPv@PLT
.L_4140cd:

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_4140df

            call _ZdlPv@PLT
.L_4140df:

            add QWORD PTR [RSP+8],56
            jmp .L_4140b1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4140f0:

            call _ZSt17__throw_bad_allocv@PLT
.L_4140f5:

            jmp .L_4140a9
.L_4140f7:

            call _ZSt17__throw_bad_allocv@PLT
.L_4140fc:

            mov RBP,RAX
.L_4140ff:

            mov R13,QWORD PTR [RBX+112]
            mov R12,QWORD PTR [RBX+104]
.L_414107:

            cmp R13,R12
            je .L_41433b

            mov RDI,QWORD PTR [R12+24]
            test RDI,RDI
            je .L_41411f

            call _ZdlPv@PLT
.L_41411f:

            mov RDI,QWORD PTR [R12]
            test RDI,RDI
            je .L_41412d

            call _ZdlPv@PLT
.L_41412d:

            add R12,56
            jmp .L_414107
.L_414133:

            call __stack_chk_fail@PLT
.L_414138:

            lea RDI,QWORD PTR [RIP+.L_413378]
.L_41413f:

            call _ZSt19__throw_logic_errorPKc@PLT
.L_414144:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_41414c:

            mov RAX,QWORD PTR [RSP+16]
            cmp RAX,R12
            je .L_4142c4

            mov RDI,QWORD PTR [RAX]
            add RAX,16
            cmp RDI,RAX
            je .L_41416b

            call _ZdlPv@PLT
.L_41416b:

            add QWORD PTR [RSP+16],32
            jmp .L_41414c
.L_414173:

            call _ZSt17__throw_bad_allocv@PLT
.L_414178:

            mov RBP,RAX
.L_41417b:

            lea RDI,QWORD PTR [RBX+32]
            call .L_413310
.L_414184:

            mov RDI,RBP
.L_414187:

            call _Unwind_Resume@PLT
.L_41418c:

            call _ZSt17__throw_bad_allocv@PLT
.L_414191:

            lea RDI,QWORD PTR [RIP+.L_413378]
.L_414198:

            call _ZSt19__throw_logic_errorPKc@PLT
.L_41419d:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_4141a5:

            mov RAX,QWORD PTR [RSP+16]
            cmp RAX,R12
            je .L_41436c

            mov RDI,QWORD PTR [RAX]
            add RAX,16
            cmp RDI,RAX
            je .L_4141c4

            call _ZdlPv@PLT
.L_4141c4:

            add QWORD PTR [RSP+16],32
            jmp .L_4141a5
.L_4141cc:

            call _ZSt17__throw_bad_allocv@PLT
.L_4141d1:

            mov RBP,RAX
.L_4141d4:

            mov R13,QWORD PTR [RBX+136]
            mov R12,QWORD PTR [RBX+128]
.L_4141e2:

            cmp R13,R12
            je .L_414352

            mov RDI,QWORD PTR [R12+40]
            test RDI,RDI
            je .L_4141fa

            call _ZdlPv@PLT
.L_4141fa:

            add R12,64
            jmp .L_4141e2
.L_414200:

            call _ZSt17__throw_bad_allocv@PLT
.L_414205:

            mov RBP,RAX
.L_414208:

            mov RDI,QWORD PTR [RBX+176]
            test RDI,RDI
            je .L_414219

            call _ZdlPv@PLT
.L_414219:

            mov R13,QWORD PTR [RBX+160]
            mov R12,QWORD PTR [RBX+152]
.L_414227:

            cmp R13,R12
            je .L_414321

            mov RDI,QWORD PTR [R12+16]
            test RDI,RDI
            je .L_41423f

            call _ZdlPv@PLT
.L_41423f:

            add R12,40
            jmp .L_414227
.L_414245:

            call _ZSt17__throw_bad_allocv@PLT
.L_41424a:

            mov RBP,RAX
.L_41424d:

            mov R13,QWORD PTR [RBX+88]
            mov R12,QWORD PTR [RBX+80]
.L_414255:

            cmp R13,R12
            je .L_41430a

            mov RDI,QWORD PTR [R12]
            test RDI,RDI
            je .L_41426c

            call _ZdlPv@PLT
.L_41426c:

            add R12,40
            jmp .L_414255
.L_414272:

            call _ZSt17__throw_bad_allocv@PLT
.L_414277:

            mov RBP,RAX
.L_41427a:

            lea RDI,QWORD PTR [RBX+56]
            call .L_413310

            jmp .L_41417b
.L_414288:

            lea RDI,QWORD PTR [RIP+.L_413378]
.L_41428f:

            call _ZSt19__throw_logic_errorPKc@PLT
.L_414294:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_41429c:

            mov RAX,QWORD PTR [RSP+16]
            cmp RAX,R12
            je .L_4142bf

            mov RDI,QWORD PTR [RAX]
            add RAX,16
            cmp RDI,RAX
            je .L_4142b7

            call _ZdlPv@PLT
.L_4142b7:

            add QWORD PTR [RSP+16],32
            jmp .L_41429c
.L_4142bf:

            call __cxa_rethrow@PLT
.L_4142c4:

            call __cxa_rethrow@PLT
.L_4142c9:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBX+200]
            test RDI,RDI
            je .L_414208

            call _ZdlPv@PLT

            jmp .L_414208
.L_4142eb:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBX+56]
            test RDI,RDI
            je .L_41417b

            call _ZdlPv@PLT

            jmp .L_41417b
.L_41430a:

            mov RDI,QWORD PTR [RBX+80]
            test RDI,RDI
            je .L_41427a
.L_414317:

            call _ZdlPv@PLT

            jmp .L_41427a
.L_414321:

            mov RDI,QWORD PTR [RBX+152]
            test RDI,RDI
            je .L_4141d4
.L_414331:

            call _ZdlPv@PLT

            jmp .L_4141d4
.L_41433b:

            mov RDI,QWORD PTR [RBX+104]
            test RDI,RDI
            je .L_41424d
.L_414348:

            call _ZdlPv@PLT

            jmp .L_41424d
.L_414352:

            mov RDI,QWORD PTR [RBX+128]
            test RDI,RDI
            je .L_4140ff
.L_414362:

            call _ZdlPv@PLT

            jmp .L_4140ff
.L_41436c:

            call __cxa_rethrow@PLT
.L_414371:

            lea RDI,QWORD PTR [RIP+.L_413378]
.L_414378:

            call _ZSt19__throw_logic_errorPKc@PLT
.L_41437d:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_414184

            call _ZdlPv@PLT

            jmp .L_414184
.L_41439c:

            mov RBP,RAX
            jmp .L_414219
.L_4143a4:

            lea RDI,QWORD PTR [RBX+200]
            mov RBP,RAX
            call .L_413310

            jmp .L_414208
.L_4143b8:

            call __cxa_rethrow@PLT
.L_4143bd:

            call __cxa_rethrow@PLT
.L_4143c2:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBX+104]
            test RDI,RDI
            jne .L_414348

            jmp .L_41424d
.L_4143dc:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBX+152]
            test RDI,RDI
            jne .L_414331

            jmp .L_4141d4
.L_4143f9:

            call __cxa_rethrow@PLT
.L_4143fe:

            call __cxa_rethrow@PLT
.L_414403:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBX+128]
            test RDI,RDI
            jne .L_414362

            jmp .L_4140ff
.L_414420:

            mov RBP,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBX+80]
            test RDI,RDI
            jne .L_414317

            jmp .L_41427a
.L_41443a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_414440:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_414451:

            cmp RSI,RDI
            je .L_4144aa

            mov R15,QWORD PTR [RSI+8]
            mov R14,QWORD PTR [RSI]
            mov R12,RSI
            mov R13,QWORD PTR [RDI]
            mov RCX,QWORD PTR [RDI+16]
            mov RBP,R15
            sub RBP,R14
            sub RCX,R13
            mov RAX,RBP
            sar RCX,2
            sar RAX,2
            cmp RCX,RAX
            jb .L_4144c0

            mov RDI,QWORD PTR [RDI+8]
            mov RDX,RDI
            sub RDX,R13
            mov RCX,RDX
            sar RCX,2
            cmp RAX,RCX
            ja .L_414518

            cmp R15,R14
            jne .L_414540
.L_4144a3:

            add RBP,R13
.L_4144a6:

            mov QWORD PTR [RBX+8],RBP
.L_4144aa:

            add RSP,8
.L_4144ae:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4144c0:

            xor R12D,R12D
            test RAX,RAX
            je .L_4144e9

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_41458c

            mov RDI,RBP
            call _Znwm@PLT

            mov R13,QWORD PTR [RBX]
            mov R12,RAX
.L_4144e9:

            cmp R15,R14
            je .L_4144fc

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R12
            call memmove@PLT
.L_4144fc:

            test R13,R13
            je .L_414509

            mov RDI,R13
            call _ZdlPv@PLT
.L_414509:

            add RBP,R12
            mov QWORD PTR [RBX],R12
            mov QWORD PTR [RBX+16],RBP
            jmp .L_4144a6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414518:

            lea RSI,QWORD PTR [R14+RDX*1]
            cmp R14,RSI
            jne .L_414560

            cmp R15,RSI
            je .L_4144a3
.L_41452a:

            mov RDX,R15
            sub RDX,RSI
            call memmove@PLT

            add RBP,QWORD PTR [RBX]
            jmp .L_4144a6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414540:

            mov RDX,RBP
            mov RSI,R14
            mov RDI,R13
            call memmove@PLT

            add RBP,QWORD PTR [RBX]
            jmp .L_4144a6
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414560:

            mov RDI,R13
            mov RSI,R14
            call memmove@PLT

            mov RDI,QWORD PTR [RBX+8]
            mov R13,QWORD PTR [RBX]
            mov R15,QWORD PTR [R12+8]
            mov RSI,RDI
            sub RSI,R13
            add RSI,QWORD PTR [R12]
            cmp R15,RSI
            je .L_4144a3

            jmp .L_41452a
.L_41458c:

            call _ZSt17__throw_bad_allocv@PLT
.L_414591:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4145a0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4145aa:

            mov RAX,QWORD PTR [RDI+8]
            mov RBX,QWORD PTR [RDI]
            cmp RAX,RBX
            je .L_414637

            lea RBP,QWORD PTR [RBX+336]
            movabs RDX,1098020480577949501
            mov R12,RDI
            sub RAX,RBP
            shr RAX,4
            imul RAX,RDX
            movabs RDX,1152921504606846975
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea R13,QWORD PTR [RAX+RDX*4]
            shl R13,4
            add R13,RBX
            jmp .L_414614
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414600:

            call _ZdlPv@PLT

            cmp R13,RBP
            mov RBX,RBP
            je .L_414633
.L_41460d:

            add RBP,336
.L_414614:

            mov RDI,QWORD PTR [RBX+56]
            test RDI,RDI
            je .L_414622

            call _ZdlPv@PLT
.L_414622:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            jne .L_414600

            cmp RBP,R13
            mov RBX,RBP
            jne .L_41460d
.L_414633:

            mov RBX,QWORD PTR [R12]
.L_414637:

            test RBX,RBX
            je .L_414650

            add RSP,8
.L_414640:

            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp _ZdlPv@PLT
          .byte 0x66
          .byte 0x90
.L_414650:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41465b:

            nop
            nop
            nop
            nop
            nop
.L_414660:

            push R15
            push R14
            mov RAX,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,56
.L_414674:

            test RSI,RSI
            mov QWORD PTR [RSP+40],RSI
            je .L_414937
.L_414682:

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            mov QWORD PTR [RSP+32],RAX
            je .L_4148f5
.L_414694:

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_4148b3
.L_4146a6:

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            mov QWORD PTR [RSP+16],RAX
            je .L_414871
.L_4146b8:

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_41482f
.L_4146ca:

            mov R13,QWORD PTR [RAX+24]
            test R13,R13
            je .L_4147ed
.L_4146d7:

            mov R12,QWORD PTR [R13+24]
            test R12,R12
            je .L_4147b5
.L_4146e4:

            mov RBX,QWORD PTR [R12+24]
            test RBX,RBX
            je .L_414775
.L_4146f2:

            mov R15,QWORD PTR [RBX+24]
            test R15,R15
            je .L_41473d
.L_4146fb:

            mov RSI,QWORD PTR [R15+24]
            mov RDI,RBP
            call .L_414660

            mov RDI,QWORD PTR [R15+32]
            lea RCX,QWORD PTR [R15+48]
            mov R14,QWORD PTR [R15+16]
            cmp RDI,RCX
            je .L_414730

            call _ZdlPv@PLT

            mov RDI,R15
            call _ZdlPv@PLT

            test R14,R14
            je .L_41473d
.L_41472a:

            mov R15,R14
            jmp .L_4146fb
          .byte 0x90
.L_414730:

            mov RDI,R15
            call _ZdlPv@PLT

            test R14,R14
            jne .L_41472a
.L_41473d:

            mov RDI,QWORD PTR [RBX+32]
            lea RDX,QWORD PTR [RBX+48]
            mov R15,QWORD PTR [RBX+16]
            cmp RDI,RDX
            je .L_414768

            call _ZdlPv@PLT

            mov RDI,RBX
            call _ZdlPv@PLT

            test R15,R15
            je .L_414775
.L_414760:

            mov RBX,R15
            jmp .L_4146f2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414768:

            mov RDI,RBX
            call _ZdlPv@PLT

            test R15,R15
            jne .L_414760
.L_414775:

            mov RDI,QWORD PTR [R12+32]
            lea RAX,QWORD PTR [R12+48]
            mov RBX,QWORD PTR [R12+16]
            cmp RDI,RAX
            je .L_4147a8

            call _ZdlPv@PLT

            mov RDI,R12
            call _ZdlPv@PLT

            test RBX,RBX
            je .L_4147b5
.L_41479b:

            mov R12,RBX
            jmp .L_4146e4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4147a8:

            mov RDI,R12
            call _ZdlPv@PLT

            test RBX,RBX
            jne .L_41479b
.L_4147b5:

            mov RDI,QWORD PTR [R13+32]
            lea RAX,QWORD PTR [R13+48]
            mov RBX,QWORD PTR [R13+16]
            cmp RDI,RAX
            je .L_4147e0

            call _ZdlPv@PLT

            mov RDI,R13
            call _ZdlPv@PLT

            test RBX,RBX
            je .L_4147ed
.L_4147d8:

            mov R13,RBX
            jmp .L_4146d7
.L_4147e0:

            mov RDI,R13
            call _ZdlPv@PLT

            test RBX,RBX
            jne .L_4147d8
.L_4147ed:

            mov R14,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [R14+32]
            lea RAX,QWORD PTR [R14+48]
            mov RBX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_414822

            call _ZdlPv@PLT

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            je .L_41482f
.L_414815:

            mov QWORD PTR [RSP+8],RBX
            mov RAX,RBX
            jmp .L_4146ca
.L_414822:

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            jne .L_414815
.L_41482f:

            mov R14,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [R14+32]
            lea RAX,QWORD PTR [R14+48]
            mov RBX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_414864

            call _ZdlPv@PLT

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            je .L_414871
.L_414857:

            mov QWORD PTR [RSP+16],RBX
            mov RAX,RBX
            jmp .L_4146b8
.L_414864:

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            jne .L_414857
.L_414871:

            mov R14,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [R14+32]
            lea RAX,QWORD PTR [R14+48]
            mov RBX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_4148a6

            call _ZdlPv@PLT

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            je .L_4148b3
.L_414899:

            mov QWORD PTR [RSP+24],RBX
            mov RAX,RBX
            jmp .L_4146a6
.L_4148a6:

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            jne .L_414899
.L_4148b3:

            mov R14,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [R14+32]
            lea RAX,QWORD PTR [R14+48]
            mov RBX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_4148e8

            call _ZdlPv@PLT

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            je .L_4148f5
.L_4148db:

            mov QWORD PTR [RSP+32],RBX
            mov RAX,RBX
            jmp .L_414694
.L_4148e8:

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            jne .L_4148db
.L_4148f5:

            mov R14,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [R14+32]
            lea RAX,QWORD PTR [R14+48]
            mov RBX,QWORD PTR [R14+16]
            cmp RDI,RAX
            je .L_41492a

            call _ZdlPv@PLT

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            je .L_414937
.L_41491d:

            mov QWORD PTR [RSP+40],RBX
            mov RAX,RBX
            jmp .L_414682
.L_41492a:

            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            jne .L_41491d
.L_414937:

            add RSP,56
.L_41493b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_414946:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414950:

            push R12
            mov R12,RDI
            push RBP
            push RBX
.L_414957:

            mov RDI,QWORD PTR [RDI+64]
            lea RAX,QWORD PTR [R12+80]
            cmp RDI,RAX
            je .L_41496a

            call _ZdlPv@PLT
.L_41496a:

            mov RBX,QWORD PTR [R12+16]
            test RBX,RBX
            je .L_4149bd
.L_414974:

            mov RSI,QWORD PTR [RBX+24]
            mov RDI,R12
            call .L_414660

            mov RDI,QWORD PTR [RBX+32]
            lea RAX,QWORD PTR [RBX+48]
            mov RBP,QWORD PTR [RBX+16]
            cmp RDI,RAX
            je .L_4149b0

            call _ZdlPv@PLT

            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            je .L_4149bd
.L_4149a3:

            mov RBX,RBP
            jmp .L_414974
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4149b0:

            mov RDI,RBX
            call _ZdlPv@PLT

            test RBP,RBP
            jne .L_4149a3
.L_4149bd:

            pop RBX
.L_4149be:

            pop RBP
            pop R12
            ret 
.L_4149c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4149d0:

            mov RDX,QWORD PTR [RDI+8]
            cmp RDX,QWORD PTR [RDI+16]
            je .L_4149f0

            test RDX,RDX
            je .L_4149e5

            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RDX],RAX
.L_4149e5:

            add RDX,8
            mov QWORD PTR [RDI+8],RDX
            ret 
          .byte 0x66
          .byte 0x90
.L_4149f0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            sub RSP,8
.L_414a0a:

            sub R15,QWORD PTR [RDI]
            mov RAX,R15
            sar RAX,3
            test RAX,RAX
            je .L_414b00

            lea R13,QWORD PTR [RAX+RAX*1]
            cmp RAX,R13
            jbe .L_414b10
.L_414a2a:

            mov R13,-8
.L_414a31:

            mov RDI,R13
            call _Znwm@PLT

            mov RDX,QWORD PTR [RBX+8]
            mov R14,RAX
.L_414a40:

            add R15,R14
            je .L_414a4c

            mov RAX,QWORD PTR [R12]
            mov QWORD PTR [R15],RAX
.L_414a4c:

            mov RDI,QWORD PTR [RBX]
            cmp RBP,RDI
            je .L_414b40

            mov RSI,R14
            mov RCX,RDI
            nop
            nop
.L_414a60:

            test RSI,RSI
            je .L_414b5f
.L_414a69:

            mov RAX,QWORD PTR [RCX]
            add RCX,8
            add RSI,8
            mov QWORD PTR [RSI-8],RAX
            cmp RBP,RCX
            jne .L_414a60
.L_414a7d:

            lea RAX,QWORD PTR [RDI+8]
            mov RCX,RBP
            sub RCX,RAX
            mov RAX,RCX
            shr RAX,3
            lea R12,QWORD PTR [R14+RAX*8+8]
.L_414a93:

            add R12,8
            cmp RBP,RDX
            je .L_414ad5

            mov RSI,R12
            mov RCX,RBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_414aa8:

            test RSI,RSI
            je .L_414b48
.L_414ab1:

            mov R8,QWORD PTR [RCX]
            add RCX,8
            add RSI,8
            mov QWORD PTR [RSI-8],R8
            cmp RDX,RCX
            jne .L_414aa8
.L_414ac5:

            add RBP,8
            sub RDX,RBP
            shr RDX,3
            lea R12,QWORD PTR [R12+RDX*8+8]
.L_414ad5:

            test RDI,RDI
            je .L_414adf

            call _ZdlPv@PLT
.L_414adf:

            add R13,R14
            mov QWORD PTR [RBX],R14
            mov QWORD PTR [RBX+8],R12
            mov QWORD PTR [RBX+16],R13
            add RSP,8
.L_414af1:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414b00:

            mov R13D,8
            jmp .L_414a31
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414b10:

            movabs RCX,2305843009213693951
            cmp R13,RCX
            ja .L_414a2a

            xor R14D,R14D
            test R13,R13
            je .L_414a40

            shl RAX,4
            mov R13,RAX
            jmp .L_414a31
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414b40:

            mov R12,R14
            jmp .L_414a93
.L_414b48:

            add RCX,8
            cmp RDX,RCX
            je .L_414ac5

            mov ESI,8
            jmp .L_414ab1
.L_414b5f:

            add RCX,8
            cmp RBP,RCX
            je .L_414a7d

            mov ESI,8
            jmp .L_414a69
.L_414b76:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414b80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_414b8e:

            test RSI,RSI
            mov QWORD PTR [RSP+40],RSI
            je .L_414d07

            mov RBP,RDI
            mov RAX,RSI
.L_414ba2:

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            mov QWORD PTR [RSP+32],RAX
            je .L_414ce8
.L_414bb4:

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_414cc9
.L_414bc6:

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            mov QWORD PTR [RSP+16],RAX
            je .L_414caa
.L_414bd8:

            mov RAX,QWORD PTR [RAX+24]
            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            je .L_414c8b
.L_414bea:

            mov R13,QWORD PTR [RAX+24]
            test R13,R13
            je .L_414c6c
.L_414bf3:

            mov R12,QWORD PTR [R13+24]
            test R12,R12
            je .L_414c58
.L_414bfc:

            mov R15,QWORD PTR [R12+24]
            test R15,R15
            je .L_414c43
.L_414c06:

            mov R14,QWORD PTR [R15+24]
            test R14,R14
            je .L_414c2f
.L_414c0f:

            mov RSI,QWORD PTR [R14+24]
            mov RDI,RBP
            call .L_414b80

            mov RBX,QWORD PTR [R14+16]
            mov RDI,R14
            call _ZdlPv@PLT

            test RBX,RBX
            mov R14,RBX
            jne .L_414c0f
.L_414c2f:

            mov RBX,QWORD PTR [R15+16]
            mov RDI,R15
            call _ZdlPv@PLT

            test RBX,RBX
            mov R15,RBX
            jne .L_414c06
.L_414c43:

            mov RBX,QWORD PTR [R12+16]
            mov RDI,R12
            call _ZdlPv@PLT

            test RBX,RBX
            mov R12,RBX
            jne .L_414bfc
.L_414c58:

            mov RBX,QWORD PTR [R13+16]
            mov RDI,R13
            call _ZdlPv@PLT

            test RBX,RBX
            mov R13,RBX
            jne .L_414bf3
.L_414c6c:

            mov RDI,QWORD PTR [RSP+8]
            mov RBX,QWORD PTR [RDI+16]
            call _ZdlPv@PLT

            test RBX,RBX
            mov RAX,RBX
            mov QWORD PTR [RSP+8],RBX
            jne .L_414bea
.L_414c8b:

            mov RDI,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RDI+16]
            call _ZdlPv@PLT

            test RBX,RBX
            mov RAX,RBX
            mov QWORD PTR [RSP+16],RBX
            jne .L_414bd8
.L_414caa:

            mov RDI,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RDI+16]
            call _ZdlPv@PLT

            test RBX,RBX
            mov RAX,RBX
            mov QWORD PTR [RSP+24],RBX
            jne .L_414bc6
.L_414cc9:

            mov RDI,QWORD PTR [RSP+32]
            mov RBX,QWORD PTR [RDI+16]
            call _ZdlPv@PLT

            test RBX,RBX
            mov RAX,RBX
            mov QWORD PTR [RSP+32],RBX
            jne .L_414bb4
.L_414ce8:

            mov RDI,QWORD PTR [RSP+40]
            mov RBX,QWORD PTR [RDI+16]
            call _ZdlPv@PLT

            test RBX,RBX
            mov RAX,RBX
            mov QWORD PTR [RSP+40],RBX
            jne .L_414ba2
.L_414d07:

            add RSP,56
.L_414d0b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_414d16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414d20:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_414d2e:

            mov RBX,QWORD PTR [RDI+16]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP],RSI
            test RBX,RBX
            je .L_414e08

            mov R15,QWORD PTR [RSI+8]
            mov RBP,QWORD PTR [RSI]
            jmp .L_414d61
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414d50:

            mov RAX,QWORD PTR [RBX+16]
            mov ESI,1
            test RAX,RAX
            je .L_414daf
.L_414d5e:

            mov RBX,RAX
.L_414d61:

            mov R14,QWORD PTR [RBX+40]
            mov R13,QWORD PTR [RBX+32]
            cmp R15,R14
            mov R12,R14
            cmovbe R12,R15
            test R12,R12
            je .L_414d8a

            mov RDX,R12
            mov RSI,R13
            mov RDI,RBP
            call memcmp@PLT

            test EAX,EAX
            jne .L_414da0
.L_414d8a:

            mov RAX,R15
            sub RAX,R14
            cmp RAX,2147483647
            jg .L_414da4

            cmp RAX,-2147483648
            jl .L_414d50
.L_414da0:

            test EAX,EAX
            js .L_414d50
.L_414da4:

            mov RAX,QWORD PTR [RBX+24]
            xor ESI,ESI
            test RAX,RAX
            jne .L_414d5e
.L_414daf:

            test SIL,SIL
            mov R9,RBX
            jne .L_414e0c

            test R12,R12
            jne .L_414e4b
.L_414dc0:

            sub R14,R15
            cmp R14,2147483647
            jg .L_414df0
.L_414dcc:

            cmp R14,-2147483648
            jl .L_414ddc

            mov EAX,R14D
.L_414dd8:

            test EAX,EAX
            jns .L_414df0
.L_414ddc:

            add RSP,24
.L_414de0:

            xor EAX,EAX
            mov RDX,R9
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_414df0:

            add RSP,24
            mov RAX,RBX
            xor EDX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414e08:

            lea RBX,QWORD PTR [RDI+8]
.L_414e0c:

            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RAX+24],RBX
            je .L_414e80

            mov RDI,RBX
            call _ZSt18_Rb_tree_decrementPSt18_Rb_tree_node_base@PLT

            mov RCX,QWORD PTR [RSP]
            mov R14,QWORD PTR [RAX+40]
            mov R9,RBX
            mov R13,QWORD PTR [RAX+32]
            mov RBX,RAX
            mov R15,QWORD PTR [RCX+8]
            mov R12,R14
            mov RBP,QWORD PTR [RCX]
            cmp R15,R14
            cmovbe R12,R15
            test R12,R12
            je .L_414dc0
.L_414e4b:

            mov RDX,R12
            mov RSI,RBP
            mov RDI,R13
            mov QWORD PTR [RSP],R9
            call memcmp@PLT

            test EAX,EAX
            mov R9,QWORD PTR [RSP]
            jne .L_414dd8

            sub R14,R15
            cmp R14,2147483647
            jle .L_414dcc

            jmp .L_414df0
          .byte 0x66
          .byte 0x90
.L_414e80:

            add RSP,24
.L_414e84:

            mov RDX,RBX
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_414e94:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_414e98:
          .string "img->component(c).factor_x() == factor_x"
          .zero 7
.L_414ec8:
          .string "img->component(c).factor_y() == factor_y"
          .zero 7
.L_414ef8:
          .string "Iter %2d: %s(%d) %s Coeffs[%d/%zd] Blocks[%zd/%d/%d] ValThres[%.4f] Out[%7zd] EstErr[%.2f%%]"
          .zero 3
.L_414f58:
          .string "res > 0 && \"expected successful printing\""
          .zero 6
.L_414f88:
          .string "Iter %2d: %s quantization matrix:\n"
          .zero 5
.L_414fb0:
          .string "Iter %2d: %s GQ[%5.2f] Out[%7zd]"
          .zero 7
.L_414fd8:
          .string "Guetzli should be called with quality >= 84, otherwise the\noutput will have noticeable artifacts. If you want to\nproceed anyway, please edit the source code.\n"
          .zero 1
.L_415078:
          .string "Only YUV color space input jpeg is supported\n"
          .zero 2
.L_4150a8:
          .string " <image too small for Butteraugli>\n"
          .zero 4
.L_4150d0:
          .string "\n%s selected quantization matrix:\n"
          .zero 5
.L_4150f8:
          .string "Could not create jpg data from rgb pixels\n"
          .zero 5
.L_415128:
          .string "Can\'t read jpg data from input file\n"
          .zero 3
.L_415150:
          .string "Unsupported input JPEG file (e.g. unsupported downsampling mode).\nPlease provide the input image as a PNG file.\n"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_4151e0:
          .string "void guetzli::{anonymous}::Processor::SelectFrequencyMasking(const guetzli::JPEGData&, guetzli::OutputImage*, uint8_t, double, bool)"
          .zero 27
.L_415280:
          .string "guetzli::{anonymous}::QuantData guetzli::{anonymous}::Processor::TryQuantMatrix(const guetzli::JPEGData&, float, int (*)[64], guetzli::OutputImage*)"
          .zero 11
.L_415320:
          .string "void guetzli::{anonymous}::Processor::OutputJpeg(const guetzli::JPEGData&, std::__cxx11::string*)"
          .zero 6
.L_415388:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41539c:
          .zero 768
.L_41569c:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0xe5
          .byte 0xda
          .byte 0x3f
          .byte 0xa6
          .byte 0xf0
          .byte 0x98
          .byte 0x3e
          .byte 0x69
          .byte 0x51
          .byte 0x6f
          .byte 0x3e
          .byte 0x24
          .byte 0x7b
          .byte 0x64
          .byte 0x3e
          .byte 0xaf
          .byte 0xa
          .byte 0x54
          .byte 0x3e
          .byte 0xcf
          .byte 0x66
          .byte 0x45
          .byte 0x3e
          .byte 0xe0
          .byte 0x11
          .byte 0x25
          .byte 0x3e
          .byte 0x6b
          .byte 0xb7
          .byte 0x3
          .byte 0x40
          .byte 0xfa
          .byte 0x46
          .byte 0x64
          .byte 0x3e
          .byte 0xaa
          .byte 0x49
          .byte 0x50
          .byte 0x3e
          .byte 0xf8
          .byte 0xfc
          .byte 0x40
          .byte 0x3e
          .byte 0x9c
          .byte 0x19
          .byte 0x3d
          .byte 0x3e
          .byte 0xa5
          .byte 0x12
          .byte 0x2e
          .byte 0x3e
          .byte 0x1f
          .byte 0xf6
          .byte 0x22
          .byte 0x3e
          .byte 0x5a
          .byte 0x47
          .byte 0x5
          .byte 0x3e
          .byte 0xdb
          .byte 0x6c
          .byte 0xdc
          .byte 0x3e
          .byte 0x87
          .byte 0xdb
          .byte 0x51
          .byte 0x3e
          .byte 0x5e
          .byte 0x9d
          .byte 0x53
          .byte 0x3e
          .byte 0x34
          .byte 0xd8
          .byte 0x44
          .byte 0x3e
          .byte 0xe3
          .byte 0x54
          .byte 0x3b
          .byte 0x3e
          .byte 0x9d
          .byte 0x85
          .byte 0x2d
          .byte 0x3e
          .byte 0xa2
          .byte 0x61
          .byte 0x21
          .byte 0x3e
          .byte 0x65
          .byte 0x34
          .byte 0x2
          .byte 0x3e
          .byte 0x24
          .byte 0x64
          .byte 0x70
          .byte 0x3e
          .byte 0x32
          .byte 0xaf
          .byte 0x43
          .byte 0x3e
          .byte 0xa0
          .byte 0x52
          .byte 0x45
          .byte 0x3e
          .byte 0x98
          .byte 0x6e
          .byte 0x32
          .byte 0x3e
          .byte 0xc3
          .byte 0x7f
          .byte 0x2a
          .byte 0x3e
          .byte 0xd1
          .byte 0x90
          .byte 0x11
          .byte 0x3e
          .byte 0xdb
          .byte 0x35
          .byte 0x1
          .byte 0x3e
          .byte 0xb6
          .byte 0x64
          .byte 0xd5
          .byte 0x3d
          .byte 0x37
          .byte 0x8b
          .byte 0x67
          .byte 0x3e
          .byte 0x6b
          .byte 0xd2
          .byte 0x3d
          .byte 0x3e
          .byte 0x9f
          .byte 0x3c
          .byte 0x3c
          .byte 0x3e
          .byte 0x76
          .byte 0xa4
          .byte 0x2a
          .byte 0x3e
          .byte 0x6c
          .byte 0x3d
          .byte 0x23
          .byte 0x3e
          .byte 0x84
          .byte 0x64
          .byte 0x1
          .byte 0x3e
          .byte 0x2
          .byte 0x9c
          .byte 0xde
          .byte 0x3d
          .byte 0xb4
          .byte 0xc5
          .byte 0xba
          .byte 0x3d
          .byte 0x2e
          .byte 0x71
          .byte 0x54
          .byte 0x3e
          .byte 0x27
          .byte 0xa2
          .byte 0x2f
          .byte 0x3e
          .byte 0xfc
          .byte 0x34
          .byte 0x2e
          .byte 0x3e
          .byte 0xdf
          .byte 0xfa
          .byte 0x10
          .byte 0x3e
          .byte 0xfb
          .byte 0x3d
          .byte 0x1
          .byte 0x3e
          .byte 0x64
          .byte 0x3a
          .byte 0xd4
          .byte 0x3d
          .byte 0x10
          .byte 0xb9
          .byte 0xb4
          .byte 0x3d
          .byte 0x7d
          .byte 0xfa
          .byte 0x99
          .byte 0x3d
          .byte 0x85
          .byte 0x26
          .byte 0x49
          .byte 0x3e
          .byte 0x6f
          .byte 0xd5
          .byte 0x25
          .byte 0x3e
          .byte 0xf0
          .byte 0x17
          .byte 0x23
          .byte 0x3e
          .byte 0x9
          .byte 0xfc
          .byte 0x1
          .byte 0x3e
          .byte 0xee
          .byte 0x7c
          .byte 0xdf
          .byte 0x3d
          .byte 0xe7
          .byte 0xd1
          .byte 0xb3
          .byte 0x3d
          .byte 0x51
          .byte 0x91
          .byte 0x99
          .byte 0x3d
          .byte 0x77
          .byte 0xd0
          .byte 0x81
          .byte 0x3d
          .byte 0x94
          .byte 0x32
          .byte 0x29
          .byte 0x3e
          .byte 0x40
          .byte 0x18
          .byte 0x8
          .byte 0x3e
          .byte 0x6e
          .byte 0xc4
          .byte 0x3
          .byte 0x3e
          .byte 0xd8
          .byte 0x9b
          .byte 0xd8
          .byte 0x3d
          .byte 0xe
          .byte 0x91
          .byte 0xb9
          .byte 0x3d
          .byte 0x8d
          .byte 0xea
          .byte 0x99
          .byte 0x3d
          .byte 0xaa
          .byte 0x50
          .byte 0x83
          .byte 0x3d
          .byte 0x3f
          .byte 0xe
          .byte 0x59
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0xc4
          .byte 0x16
          .byte 0x3e
          .byte 0xcd
          .byte 0xaf
          .byte 0xe6
          .byte 0x3d
          .byte 0x5e
          .byte 0x37
          .byte 0x9b
          .byte 0x3d
          .byte 0x36
          .byte 0x50
          .byte 0x4a
          .byte 0x3d
          .byte 0x4c
          .byte 0xeb
          .byte 0xe5
          .byte 0x3c
          .byte 0xa0
          .byte 0xcc
          .byte 0xf5
          .byte 0x3b
          .byte 0xed
          .byte 0xdf
          .byte 0x77
          .byte 0xba
          .byte 0x41
          .byte 0xd5
          .byte 0x18
          .byte 0x3e
          .byte 0x9f
          .byte 0x97
          .byte 0xc5
          .byte 0x3d
          .byte 0xc8
          .byte 0x4
          .byte 0xa1
          .byte 0x3d
          .byte 0xde
          .byte 0x3c
          .byte 0x55
          .byte 0x3d
          .byte 0xcd
          .byte 0xd3
          .byte 0xef
          .byte 0x3c
          .byte 0x58
          .byte 0x67
          .byte 0x67
          .byte 0x3b
          .byte 0xe6
          .byte 0x21
          .byte 0x36
          .byte 0xbb
          .byte 0x53
          .byte 0x8a
          .byte 0x84
          .byte 0xbb
          .byte 0x1
          .byte 0xa6
          .byte 0xec
          .byte 0x3d
          .byte 0x7c
          .byte 0x6f
          .byte 0xa2
          .byte 0x3d
          .byte 0x5b
          .byte 0x7b
          .byte 0x7f
          .byte 0x3d
          .byte 0x52
          .byte 0xe5
          .byte 0x25
          .byte 0x3d
          .byte 0x91
          .byte 0x1c
          .byte 0x7a
          .byte 0x3c
          .byte 0xe6
          .byte 0x6
          .byte 0xbf
          .byte 0xba
          .byte 0x9b
          .byte 0xb9
          .byte 0x72
          .byte 0xbb
          .byte 0x58
          .byte 0xd4
          .byte 0x75
          .byte 0xbb
          .byte 0xdc
          .byte 0x1b
          .byte 0xa2
          .byte 0x3d
          .byte 0x97
          .byte 0x29
          .byte 0x5c
          .byte 0x3d
          .byte 0xab
          .byte 0x6c
          .byte 0x29
          .byte 0x3d
          .byte 0xf5
          .byte 0x80
          .byte 0x9e
          .byte 0x3c
          .byte 0xba
          .byte 0xa9
          .byte 0x1f
          .byte 0x3a
          .byte 0x54
          .byte 0x6b
          .byte 0xa7
          .byte 0xbb
          .byte 0xc3
          .byte 0x36
          .byte 0x98
          .byte 0xbb
          .byte 0xa8
          .byte 0x6f
          .byte 0x7c
          .byte 0xbb
          .byte 0x87
          .byte 0xa
          .byte 0x5f
          .byte 0x3d
          .byte 0x5c
          .byte 0xd5
          .byte 0x8
          .byte 0x3d
          .byte 0xeb
          .byte 0x25
          .byte 0x7c
          .byte 0x3c
          .byte 0x95
          .byte 0x51
          .byte 0xd
          .byte 0x3a
          .byte 0x26
          .byte 0x5d
          .byte 0x69
          .byte 0xbb
          .byte 0x80
          .byte 0x86
          .byte 0xaf
          .byte 0xbb
          .byte 0x4b
          .byte 0x9f
          .byte 0x8c
          .byte 0xbb
          .byte 0xd4
          .byte 0xdf
          .byte 0x60
          .byte 0xbb
          .byte 0x57
          .byte 0xff
          .byte 0x11
          .byte 0x3d
          .byte 0xc8
          .byte 0xd3
          .byte 0xd
          .byte 0x3c
          .byte 0xa7
          .byte 0x91
          .byte 0xd8
          .byte 0x3a
          .byte 0xaf
          .byte 0x91
          .byte 0x8b
          .byte 0xbb
          .byte 0x6c
          .byte 0x3d
          .byte 0xa6
          .byte 0xbb
          .byte 0xac
          .byte 0x6e
          .byte 0x96
          .byte 0xbb
          .byte 0x8
          .byte 0xae
          .byte 0x72
          .byte 0xbb
          .byte 0x3b
          .byte 0x60
          .byte 0x4b
          .byte 0xbb
          .byte 0x79
          .byte 0xc3
          .byte 0x47
          .byte 0x3c
          .byte 0x19
          .byte 0xb8
          .byte 0x72
          .byte 0xba
          .byte 0x13
          .byte 0xeb
          .byte 0x58
          .byte 0xbb
          .byte 0xdd
          .byte 0xa2
          .byte 0xa3
          .byte 0xbb
          .byte 0x2d
          .byte 0x52
          .byte 0x8f
          .byte 0xbb
          .byte 0xbe
          .byte 0x59
          .byte 0x77
          .byte 0xbb
          .byte 0xc9
          .byte 0x4b
          .byte 0x4c
          .byte 0xbb
          .byte 0xdf
          .byte 0x32
          .byte 0x27
          .byte 0xbb
          .byte 0x44
          .byte 0x15
          .byte 0xa8
          .byte 0xb9
          .byte 0x14
          .byte 0x9b
          .byte 0x8b
          .byte 0xbb
          .byte 0xaa
          .byte 0x7e
          .byte 0x88
          .byte 0xbb
          .byte 0xcd
          .byte 0x6a
          .byte 0x89
          .byte 0xbb
          .byte 0xf8
          .byte 0x7a
          .byte 0x6f
          .byte 0xbb
          .byte 0x7e
          .byte 0x13
          .byte 0x50
          .byte 0xbb
          .byte 0x44
          .byte 0xba
          .byte 0x27
          .byte 0xbb
          .byte 0x68
          .byte 0xd0
          .byte 0xe
          .byte 0xbb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0xea
          .byte 0x12
          .byte 0x3e
          .byte 0xdf
          .byte 0xa3
          .byte 0xfe
          .byte 0x3d
          .byte 0x74
          .byte 0xa
          .byte 0xc2
          .byte 0x3d
          .byte 0x81
          .byte 0xb8
          .byte 0xa6
          .byte 0x3d
          .byte 0xd7
          .byte 0xa6
          .byte 0x8c
          .byte 0x3d
          .byte 0x10
          .byte 0xe5
          .byte 0x70
          .byte 0x3d
          .byte 0x42
          .byte 0x5c
          .byte 0x19
          .byte 0x3d
          .byte 0x99
          .byte 0xd3
          .byte 0x15
          .byte 0x3e
          .byte 0x5a
          .byte 0xb9
          .byte 0xd7
          .byte 0x3d
          .byte 0xb0
          .byte 0x70
          .byte 0xc2
          .byte 0x3d
          .byte 0xd1
          .byte 0x9c
          .byte 0xa0
          .byte 0x3d
          .byte 0xcc
          .byte 0x1e
          .byte 0x8d
          .byte 0x3d
          .byte 0x25
          .byte 0xf8
          .byte 0x70
          .byte 0x3d
          .byte 0x48
          .byte 0x25
          .byte 0x4b
          .byte 0x3d
          .byte 0x31
          .byte 0xc2
          .byte 0xa5
          .byte 0x3c
          .byte 0x4b
          .byte 0x94
          .byte 0xfd
          .byte 0x3d
          .byte 0x82
          .byte 0x1a
          .byte 0xc3
          .byte 0x3d
          .byte 0xeb
          .byte 0x3d
          .byte 0xb0
          .byte 0x3d
          .byte 0xbc
          .byte 0x4e
          .byte 0x94
          .byte 0x3d
          .byte 0x62
          .byte 0xad
          .byte 0x80
          .byte 0x3d
          .byte 0xdc
          .byte 0x12
          .byte 0x59
          .byte 0x3d
          .byte 0x67
          .byte 0xf9
          .byte 0x10
          .byte 0x3d
          .byte 0x3
          .byte 0xaa
          .byte 0x5
          .byte 0x3c
          .byte 0x3f
          .byte 0xc4
          .byte 0xc6
          .byte 0x3d
          .byte 0x4a
          .byte 0xb4
          .byte 0xa4
          .byte 0x3d
          .byte 0xe9
          .byte 0xb9
          .byte 0x95
          .byte 0x3d
          .byte 0xca
          .byte 0x48
          .byte 0x82
          .byte 0x3d
          .byte 0x1e
          .byte 0xc3
          .byte 0x63
          .byte 0x3d
          .byte 0xa3
          .byte 0x56
          .byte 0x1d
          .byte 0x3d
          .byte 0xcc
          .byte 0x17
          .byte 0x6a
          .byte 0x3c
          .byte 0x96
          .byte 0xe1
          .byte 0x89
          .byte 0x3a
          .byte 0x69
          .byte 0xf0
          .byte 0xad
          .byte 0x3d
          .byte 0xbe
          .byte 0xa4
          .byte 0x91
          .byte 0x3d
          .byte 0x2b
          .byte 0x44
          .byte 0x81
          .byte 0x3d
          .byte 0x51
          .byte 0x7f
          .byte 0x62
          .byte 0x3d
          .byte 0xa1
          .byte 0x3b
          .byte 0x17
          .byte 0x3d
          .byte 0xb7
          .byte 0xcb
          .byte 0x2
          .byte 0x3c
          .byte 0xc
          .byte 0xcb
          .byte 0x3b
          .byte 0x3a
          .byte 0x7b
          .byte 0xb1
          .byte 0x3
          .byte 0xbb
          .byte 0x38
          .byte 0xed
          .byte 0x93
          .byte 0x3d
          .byte 0x51
          .byte 0x94
          .byte 0x75
          .byte 0x3d
          .byte 0xf5
          .byte 0xa0
          .byte 0x60
          .byte 0x3d
          .byte 0x5c
          .byte 0xbb
          .byte 0x1e
          .byte 0x3d
          .byte 0xf2
          .byte 0xbc
          .byte 0x2f
          .byte 0x3c
          .byte 0x92
          .byte 0x49
          .byte 0xba
          .byte 0x39
          .byte 0x21
          .byte 0x6f
          .byte 0x20
          .byte 0xbb
          .byte 0xeb
          .byte 0xb0
          .byte 0x5b
          .byte 0xbb
          .byte 0xda
          .byte 0x1d
          .byte 0x82
          .byte 0x3d
          .byte 0x5c
          .byte 0x9d
          .byte 0x52
          .byte 0x3d
          .byte 0x96
          .byte 0x6c
          .byte 0x26
          .byte 0x3d
          .byte 0x2f
          .byte 0x2a
          .byte 0x4e
          .byte 0x3c
          .byte 0x89
          .byte 0x51
          .byte 0xc6
          .byte 0x3a
          .byte 0x77
          .byte 0xda
          .byte 0xb7
          .byte 0xba
          .byte 0x4b
          .byte 0x99
          .byte 0x6d
          .byte 0xbb
          .byte 0x1a
          .byte 0x48
          .byte 0x5d
          .byte 0xbb
          .byte 0x4e
          .byte 0x57
          .byte 0x41
          .byte 0x3d
          .byte 0xa7
          .byte 0xcb
          .byte 0xa2
          .byte 0x3c
          .byte 0xed
          .byte 0xda
          .byte 0x39
          .byte 0x3c
          .byte 0x91
          .byte 0x86
          .byte 0x2e
          .byte 0x3b
          .byte 0xfa
          .byte 0xce
          .byte 0xb3
          .byte 0xba
          .byte 0xda
          .byte 0x19
          .byte 0x68
          .byte 0xbb
          .byte 0x4c
          .byte 0xab
          .byte 0x5f
          .byte 0xbb
          .byte 0x57
          .byte 0x1a
          .byte 0x3e
          .byte 0xbb
.L_4159a0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x29
          .byte 0x5c
          .byte 0x8f
          .byte 0xc2
          .byte 0xf5
          .byte 0x28
          .byte 0xcc
          .byte 0x3f
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xc9
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4159c0:
          .byte 0xa
          .byte 0xa
          .byte 0x14
          .byte 0x28
          .byte 0x3c
          .byte 0x46
          .byte 0x50
          .byte 0x5a
          .byte 0xa
          .byte 0x14
          .byte 0x1e
          .byte 0x3c
          .byte 0x46
          .byte 0x50
          .byte 0x5a
          .byte 0x5a
          .byte 0x14
          .byte 0x1e
          .byte 0x3c
          .byte 0x46
          .byte 0x50
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x28
          .byte 0x3c
          .byte 0x46
          .byte 0x50
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x3c
          .byte 0x46
          .byte 0x50
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x46
          .byte 0x50
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x50
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
          .byte 0x5a
.L_415a00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415afc:
          .string "?"
          .zero 6
.L_415b04:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415bf8:
          .string ">"
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415c00:
          .string "?"
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415c40:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415c50:
          .byte 0x6e
          .byte 0x75
          .byte 0x6d
          .byte 0x62
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x69
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x74
.L_415c60:
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415c70:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415c80:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415c90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_415c98:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_415ca0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xa9
          .byte 0x3f
.L_415ca8:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0x84
          .byte 0x3f
.L_415cb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3f
.L_415cb8:
          .byte 0x29
          .byte 0x5c
          .byte 0x8f
          .byte 0xc2
          .byte 0xf5
          .byte 0x28
          .byte 0xf0
          .byte 0x3f
.L_415cc0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x40
.L_415cc8:
          .byte 0xfc
          .byte 0xa9
          .byte 0xf1
          .byte 0xd2
          .byte 0x4d
          .byte 0x62
          .byte 0x40
          .byte 0x3f
.L_415cd0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3d
          .byte 0xa
          .byte 0xef
          .byte 0x3f
.L_415cd8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_415ce0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_415ce8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x40
.L_415cf0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x3f
.L_415cf8:
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0xee
          .byte 0x3f
.L_415d00:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x66
          .byte 0x66
          .byte 0xee
          .byte 0x3f
.L_415d08:
          .byte 0xbc
          .byte 0xa2
          .byte 0xb1
          .byte 0x5b
.L_415d0c:
          .byte 0xf9
          .byte 0x2
          .byte 0x15
          .byte 0x50
.L_415d10:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX+63],AL
.L_415d18:

            int 204

            nop
            nop
            nop
            nop
            nop
            nop
.L_415d20:

            movss XMM0,DWORD PTR [RDI+16]
            ret 
.L_415d26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415d30:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_415d3d:

            mov R12,QWORD PTR [RDI+72]
            mov RAX,QWORD PTR [RDI+80]
            cmp R12,RAX
            je .L_415d76

            lea RDX,QWORD PTR [R12+24]
            mov RBX,R12
            sub RAX,RDX
            shr RAX,3
            lea RBP,QWORD PTR [R12+RAX*8+24]
            nop
            nop
.L_415d60:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_415d88

            add RBX,24
            call _ZdlPv@PLT

            cmp RBP,RBX
            jne .L_415d60
.L_415d76:

            mov QWORD PTR [R13+80],R12
            add RSP,8
.L_415d7e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415d88:

            add RBX,24
            cmp RBX,RBP
            jne .L_415d60

            mov QWORD PTR [R13+80],R12
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_415da0:

            pxor XMM0,XMM0
            pxor XMM1,XMM1
            cvtss2sd XMM0,DWORD PTR [RDI+168]
            cvtss2sd XMM1,DWORD PTR [RDI+16]
            mov EDI,ESI
            jmp .L_42dde0
.L_415dbc:

            nop
            nop
            nop
            nop
.L_415dc0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            lea EBX,DWORD PTR [RCX*8]
            lea ECX,DWORD PTR [R8*8]
            pxor XMM3,XMM3
            sub RSP,136
.L_415de4:

            mov RBP,R9
            mov RAX,QWORD PTR [RSP+192]
            mov DWORD PTR [RSP+28],EDX
            cvtss2sd XMM3,DWORD PTR [RDI+16]
            mov QWORD PTR [RSP+72],RDI
            mov DWORD PTR [RSP+48],ESI
            mov DWORD PTR [RSP+32],EBX
            mov DWORD PTR [RSP+104],ECX
            mov QWORD PTR [RSP+64],RAX
            mulsd XMM3,XMM0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+8]
            add EAX,EBX
            sub EAX,1
            cdq 
            idiv EBX
            mov R14D,EAX
            mov EAX,DWORD PTR [RDI+12]
            add EAX,ECX
            sub EAX,1
            cdq 
            idiv ECX
            mov DWORD PTR [RSP+56],EAX
            imul EAX,R14D
            cdqe 
            test RAX,RAX
            je .L_416313

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_41632d

            lea RBX,QWORD PTR [RAX*4]
            movsd QWORD PTR [RSP+16],XMM3
            mov RDI,RBX
            call _Znwm@PLT

            mov RDX,RBX
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call memset@PLT

            mov EDX,DWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+16]
            test EDX,EDX
            jle .L_4162e8
.L_415e9b:

            movsxd RAX,R14D
            test R14D,R14D
            mov QWORD PTR [RSP+96],RAX
            mov R15,RAX
            jle .L_415ff3

            shl RAX,2
            mov RDI,QWORD PTR [RSP+8]
            xor EBX,EBX
            mov QWORD PTR [RSP+80],RAX
            lea EAX,DWORD PTR [R14-1]
            mov DWORD PTR [RSP+108],R14D
            mov DWORD PTR [RSP+52],0
            mov R14D,EBX
            lea RDI,QWORD PTR [RDI+RAX*4+4]
            neg RAX
            lea RAX,QWORD PTR [RAX*4-4]
            mov QWORD PTR [RSP+16],RDI
            mov RDI,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+88],RAX
            mov R15D,DWORD PTR [RDI+8]
.L_415ef6:

            mov RDI,QWORD PTR [RSP+72]
            mov EAX,DWORD PTR [RSP+104]
            add DWORD PTR [RSP+52],1
            mov R12,QWORD PTR [RSP+88]
            add EAX,R14D
            cmp DWORD PTR [RDI+12],EAX
            mov DWORD PTR [RSP+60],EAX
            cmovle EAX,DWORD PTR [RDI+12]
            xor R8D,R8D
            add R12,QWORD PTR [RSP+16]
            mov R11D,EAX
            mov EAX,R15D
            imul EAX,R14D
            mov DWORD PTR [RSP+40],EAX
            nop
            nop
            nop
.L_415f30:

            mov EAX,DWORD PTR [RSP+32]
            mov R9D,R15D
            mov DWORD PTR [RSP+116],0
            lea R13D,DWORD PTR [RAX+R8*1]
            cmp R13D,R15D
            cmovle R9D,R13D
            cmp R14D,R11D
            jge .L_4162df

            mov EAX,R8D
            mov ESI,DWORD PTR [RSP+40]
            movsxd RBX,R8D
            not EAX
            pxor XMM0,XMM0
            lea R10D,DWORD PTR [RAX+R9*1]
            mov ECX,R14D
            add R10,RBX
            nop
            nop
            nop
.L_415f70:

            cmp R8D,R9D
            jge .L_415fa9

            mov RDI,QWORD PTR [RBP]
            movsxd RDX,ESI
            lea RAX,QWORD PTR [RDX+RBX*1]
            add RDX,R10
            movaps XMM1,XMM0
            lea RAX,QWORD PTR [RDI+RAX*4]
            lea RDX,QWORD PTR [RDI+RDX*4+4]
            nop
.L_415f90:

            movss XMM0,DWORD PTR [RAX]
            add RAX,4
            ucomiss XMM0,XMM1
            ja .L_4161e8

            cmp RDX,RAX
            jne .L_415f90

            movaps XMM0,XMM1
.L_415fa9:

            add ECX,1
            add ESI,R15D
            cmp ECX,R11D
            jne .L_415f70
.L_415fb4:

            movss DWORD PTR [R12],XMM0
            add R12,4
            cmp R12,QWORD PTR [RSP+16]
            mov R8D,R13D
            jne .L_415f30

            mov RDI,QWORD PTR [RSP+80]
            add QWORD PTR [RSP+16],RDI
            mov EDI,DWORD PTR [RSP+52]
            cmp DWORD PTR [RSP+56],EDI
            mov R14D,DWORD PTR [RSP+60]
            jne .L_415ef6

            mov R14D,DWORD PTR [RSP+108]
            mov R15,QWORD PTR [RSP+96]
.L_415ff3:

            mov EAX,DWORD PTR [RSP+28]
            movss XMM2,DWORD PTR [RIP+.L_4196e8]
            movsd XMM5,QWORD PTR [RIP+.L_4196d0]
            shl R15,2
            movsd XMM6,QWORD PTR [RIP+.L_4196c8]
            mov DWORD PTR [RSP+60],0
            add EAX,1
            movaps XMM7,XMM2
            mov DWORD PTR [RSP+52],0
            mov DWORD PTR [RSP+16],EAX
.L_41602d:

            mov EBX,DWORD PTR [RSP+52]
            mov EAX,0
            mov R10D,DWORD PTR [RSP+16]
            movsxd RBP,DWORD PTR [RSP+60]
            mov R13D,EBX
            sub R13D,DWORD PTR [RSP+28]
            cmovs R13D,EAX
            mov EAX,DWORD PTR [RSP+56]
            add R10D,EBX
            cmp R10D,EAX
            cmovg R10D,EAX
            mov EAX,R13D
            xor R9D,R9D
            imul EAX,R14D
            shl RBP,2
            cdqe 
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSP+8]
            add RAX,4
            mov QWORD PTR [RSP+40],RAX
            mov EAX,R10D
            sub EAX,EBX
            cmp R14D,R9D
            mov DWORD PTR [RSP+72],EAX
            jle .L_416181

            nop
.L_416090:

            pxor XMM0,XMM0
            mov R11D,R9D
            sub R11D,DWORD PTR [RSP+28]
            mov EAX,0
            cvtsd2ss XMM0,XMM3
            cmovs R11D,EAX
            mov EAX,DWORD PTR [RSP+16]
            lea R8D,DWORD PTR [R9+RAX*1]
            cmp R8D,R14D
            cmovg R8D,R14D
            cmp R10D,R13D
            movss DWORD PTR [RSP+112],XMM0
            jle .L_41612a

            cmp R11D,R8D
            jge .L_41612a

            movsxd RDX,R11D
            add RDX,QWORD PTR [RSP+32]
            mov EAX,R8D
            sub EAX,R11D
            mov RDI,QWORD PTR [RSP+40]
            mov ECX,R13D
            sub EAX,1
            add RDX,RAX
            neg RAX
            lea RDX,QWORD PTR [RDI+RDX*4]
            lea RSI,QWORD PTR [RAX*4-4]
            nop
            nop
            nop
            nop
            nop
.L_4160f8:

            lea RAX,QWORD PTR [RSI+RDX*1]
            movaps XMM1,XMM0
            nop
.L_416100:

            movss XMM0,DWORD PTR [RAX]
            add RAX,4
            ucomiss XMM0,XMM1
            ja .L_4161d0

            cmp RAX,RDX
            jne .L_416100

            movaps XMM0,XMM1
.L_416119:

            add ECX,1
            add RDX,R15
            cmp R10D,ECX
            jne .L_4160f8

            movss DWORD PTR [RSP+112],XMM0
.L_41612a:

            mov RAX,QWORD PTR [RSP+8]
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RAX+RBP*1]
            mov EAX,DWORD PTR [RSP+48]
            test EAX,EAX
            jle .L_416200

            ucomisd XMM3,XMM4
            jb .L_416170

            movapd XMM1,XMM3
            pxor XMM0,XMM0
            mulsd XMM1,XMM6
            cvtss2sd XMM0,DWORD PTR [RSP+112]
            ucomisd XMM1,XMM0
            jb .L_416170

            mov RAX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RAX]
            movss DWORD PTR [RAX+RBP*1],XMM7
            nop
.L_416170:

            add R9D,1
            add RBP,4
            cmp R14D,R9D
            jg .L_416090
.L_416181:

            add DWORD PTR [RSP+52],1
            add DWORD PTR [RSP+60],R14D
            mov EAX,DWORD PTR [RSP+52]
            cmp DWORD PTR [RSP+56],EAX
            jne .L_41602d

            cmp QWORD PTR [RSP+8],0
            jne .L_4162e8
.L_4161a5:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_416332

            add RSP,136
.L_4161c0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4161d0:

            cmp RAX,RDX
            je .L_416119

            movaps XMM1,XMM0
            jmp .L_416100
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4161e8:

            cmp RAX,RDX
            je .L_415fa9

            movaps XMM1,XMM0
            jmp .L_415f90
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416200:

            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSP+112]
            movapd XMM1,XMM0
            movapd XMM0,XMM3
            mulsd XMM1,XMM5
            mulsd XMM0,XMM5
            addsd XMM0,XMM1
            ucomisd XMM0,XMM4
            jae .L_416170

            cmp R10D,R13D
            jle .L_416170

            cmp R11D,R8D
            jge .L_416170

            mov RAX,QWORD PTR [RSP+64]
            movsxd R12,R11D
            add R12,QWORD PTR [RSP+32]
            mov EBX,R13D
            sub EBX,DWORD PTR [RSP+52]
            mov QWORD PTR [RSP+80],RBP
            mov EBP,DWORD PTR [RSP+72]
            mov DWORD PTR [RSP+104],R10D
            sub R8D,R9D
            mov RAX,QWORD PTR [RAX]
            shl R12,2
            mov R10,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416270:

            mov EAX,EBX
            mov EDX,R11D
            lea RCX,QWORD PTR [R10+R12*1]
            sar EAX,31
            sub EDX,R9D
            mov EDI,EAX
            xor EDI,EBX
            sub EDI,EAX
            nop
            nop
            nop
.L_416288:

            mov ESI,EDX
            pxor XMM0,XMM0
            sar ESI,31
            movaps XMM4,XMM2
            mov EAX,ESI
            xor EAX,EDX
            sub EAX,ESI
            cmp EAX,EDI
            cmovl EAX,EDI
            cvtsi2ss XMM0,EAX
            addss XMM0,XMM2
            divss XMM4,XMM0
            ucomiss XMM4,DWORD PTR [RCX]
            movss DWORD PTR [RSP+116],XMM4
            jbe .L_4162ba

            movss DWORD PTR [RCX],XMM4
.L_4162ba:

            add EDX,1
            add RCX,4
            cmp EDX,R8D
            jne .L_416288

            add EBX,1
            add R12,R15
            cmp EBP,EBX
            jne .L_416270

            mov R10D,DWORD PTR [RSP+104]
            mov RBP,QWORD PTR [RSP+80]
            jmp .L_416170
.L_4162df:

            pxor XMM0,XMM0
            jmp .L_415fb4
.L_4162e8:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_416332

            mov RDI,QWORD PTR [RSP+8]
            add RSP,136
.L_416304:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp _ZdlPv@PLT
.L_416313:

            mov ECX,DWORD PTR [RSP+56]
            test ECX,ECX
            jle .L_4161a5

            mov QWORD PTR [RSP+8],0
            jmp .L_415e9b
.L_41632d:

            call _ZSt17__throw_bad_allocv@PLT
.L_416332:

            call __stack_chk_fail@PLT
.L_416337:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416340:

            push R15
            push R14
            lea RAX,QWORD PTR [RIP+.L_643d60]
            push R13
            push R12
            mov R15,RDI
            push RBP
            push RBX
            sub RSP,40
.L_416358:

            mov DWORD PTR [RDI+8],ESI
            mov QWORD PTR [RDI],RAX
            imul ESI,EDX
            lea RAX,QWORD PTR [RDI+48]
            mov QWORD PTR [RSP+16],R8
            mov DWORD PTR [RDI+12],EDX
            movss DWORD PTR [RDI+16],XMM0
            mov QWORD PTR [RDI+24],RCX
            mov QWORD PTR [RSP+24],RAX
            movsxd RBX,ESI
            test RBX,RBX
            je .L_4167ec

            movabs RAX,4611686018427387903
            cmp RBX,RAX
            ja .L_416883

            shl RBX,2
            mov RDI,RBX
.L_4163a1:

            call _Znwm@PLT
.L_4163a6:

            mov RDX,RBX
            mov RDI,RAX
            xor ESI,ESI
            mov R13,RAX
            call memset@PLT

            mov QWORD PTR [R15+48],0
            mov QWORD PTR [R15+56],0
            mov EDI,72
            mov QWORD PTR [R15+64],0
            add RBX,R13
.L_4163d6:

            call _Znwm@PLT
.L_4163db:

            mov R12,RAX
.L_4163de:

            mov RBP,RBX
            lea R14,QWORD PTR [R12+72]
            mov QWORD PTR [R15+48],R12
            sub RBP,R13
            mov QWORD PTR [R15+56],R12
            movabs RDX,4611686018427387903
            mov RAX,RBP
            mov QWORD PTR [R15+64],R14
            sar RAX,2
            cmp RBX,R13
            je .L_416747

            cmp RAX,RDX
            ja .L_41691f

            test RAX,RAX
            mov RBX,R12
            je .L_4167ab

            nop
            nop
            nop
            nop
.L_416428:

            test RBX,RBX
            je .L_416473

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov RDI,RBP
            mov QWORD PTR [RBX+16],0
.L_416447:

            call _Znwm@PLT
.L_41644c:

            lea RCX,QWORD PTR [RAX+RBP*1]
            mov QWORD PTR [RBX],RAX
            mov RDX,RBP
            mov RSI,R13
            mov RDI,RAX
            mov QWORD PTR [RBX+16],RCX
            mov QWORD PTR [RSP+8],RCX
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBX+8],RCX
.L_416473:

            add RBX,24
            cmp R14,RBX
            jne .L_416428
.L_41647c:

            test R13,R13
            mov QWORD PTR [R15+56],RBX
            je .L_41648d

            mov RDI,R13
            call _ZdlPv@PLT
.L_41648d:

            movsxd RDX,DWORD PTR [R15+12]
            movsxd RSI,DWORD PTR [R15+8]
            lea RDI,QWORD PTR [R15+120]
            mov QWORD PTR [R15+72],0
            mov QWORD PTR [R15+80],0
            mov ECX,3
            mov QWORD PTR [R15+88],0
            mov QWORD PTR [R15+96],0
            mov QWORD PTR [R15+104],0
            mov QWORD PTR [R15+112],0
.L_4164ce:

            call .L_4305f0

            pxor XMM3,XMM3
            movsxd RBX,DWORD PTR [R15+8]
            mov DWORD PTR [R15+168],0
            mov QWORD PTR [R15+176],0
            mov QWORD PTR [R15+184],0
            mov QWORD PTR [R15+192],0
            cvtsi2ss XMM3,DWORD PTR [R15+12]
            test RBX,RBX
            movss DWORD PTR [RSP+8],XMM3
            je .L_416819

            movabs RAX,4611686018427387903
            cmp RBX,RAX
            ja .L_416888

            lea RBP,QWORD PTR [RBX*4]
            mov RDI,RBP
            call _Znwm@PLT
.L_41653f:

            mov RDX,RAX
            lea RDI,QWORD PTR [RBX-1]
            mov R8D,5
            shr RDX,2
            lea RSI,QWORD PTR [RAX+RBP*1]
            mov QWORD PTR [R15+176],RAX
            neg RDX
            mov QWORD PTR [R15+184],RAX
            mov R9,RDI
            and EDX,3
            mov QWORD PTR [R15+192],RSI
            lea RCX,QWORD PTR [RDX+3]
            cmp RCX,5
            cmovb RCX,R8
            cmp RDI,RCX
            jb .L_416620

            test RDX,RDX
            je .L_4167a0

            movss XMM4,DWORD PTR [RSP+8]
            cmp RDX,1
            lea R8,QWORD PTR [RAX+4]
            movss DWORD PTR [RAX],XMM4
            je .L_4165c4

            cmp RDX,2
            movss DWORD PTR [RAX+4],XMM4
            lea R9,QWORD PTR [RBX-2]
            lea R8,QWORD PTR [RAX+8]
            je .L_4165c4

            movss DWORD PTR [RAX+8],XMM4
            lea R9,QWORD PTR [RBX-3]
            lea R8,QWORD PTR [RAX+12]
.L_4165c4:

            sub RBX,RDX
            movss XMM0,DWORD PTR [RSP+8]
            lea RCX,QWORD PTR [RBX-4]
            shufps XMM0,XMM0,0
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RDI,RBX
            xor EAX,EAX
            shr RCX,2
            add RCX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4165f0:

            add RAX,1
            add RDX,16
            movaps XMMWORD PTR [RDX-16],XMM0
            cmp RCX,RAX
            ja .L_4165f0

            lea RDX,QWORD PTR [RCX*4]
            mov RBX,R9
            shl RCX,4
            lea RAX,QWORD PTR [R8+RCX*1]
            sub RBX,RDX
            cmp RDI,RDX
            je .L_416660

            lea RDI,QWORD PTR [RBX-1]
.L_416620:

            movss XMM2,DWORD PTR [RSP+8]
            test RDI,RDI
            movss DWORD PTR [RAX],XMM2
            je .L_416660

            cmp RBX,2
            movss DWORD PTR [RAX+4],XMM2
            je .L_416660

            cmp RBX,3
            movss DWORD PTR [RAX+8],XMM2
            je .L_416660

            cmp RBX,4
            movss DWORD PTR [RAX+12],XMM2
            je .L_416660

            cmp RBX,5
            movss DWORD PTR [RAX+16],XMM2
            je .L_416660

            movss DWORD PTR [RAX+20],XMM2
.L_416660:

            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [R15+184],RSI
            mov QWORD PTR [R15+200],RAX
.L_416673:

            call .L_4198b0

            mov EBX,DWORD PTR [R15+12]
            mov R11D,DWORD PTR [R15+8]
            test EBX,EBX
            jle .L_416728

            test R11D,R11D
            jle .L_416728

            mov RDX,QWORD PTR [R15+24]
            mov RSI,QWORD PTR [R15+48]
            xor R14D,R14D
            xor R10D,R10D
            mov R13,QWORD PTR [RDX]
            lea EDX,DWORD PTR [R11-1]
            mov QWORD PTR [RSP+8],RSI
            lea RDX,QWORD PTR [RDX+RDX*2]
            lea RSI,QWORD PTR [R13+RDX*1+3]
            mov QWORD PTR [RSP+16],RSI
.L_4166b9:

            mov RSI,QWORD PTR [RSP+8]
            xor R8D,R8D
            xor R9D,R9D
            mov R12,QWORD PTR [RSI+R14*1]
            mov RSI,QWORD PTR [RSP+16]
            lea RBP,QWORD PTR [RSI+R10*1]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4166d8:

            lea EDI,DWORD PTR [R8+R8*2]
            movsxd RCX,R8D
            lea RCX,QWORD PTR [R12+RCX*4]
            movsxd RDI,EDI
            lea RDX,QWORD PTR [RDI+R10*1]
            add RDI,RBP
            add RDX,R13
.L_4166f0:

            movzx ESI,BYTE PTR [RDX]
            pxor XMM1,XMM1
            add RDX,3
            add RCX,4
            cvtsd2ss XMM1,QWORD PTR [RAX+RSI*8]
            movss DWORD PTR [RCX-4],XMM1
            cmp RDX,RDI
            jne .L_4166f0

            add R9D,1
            add R8D,R11D
            cmp R9D,EBX
            jne .L_4166d8

            add R10,1
            add R14,24
            cmp R10,3
            jne .L_4166b9
.L_416728:

            mov RDX,QWORD PTR [RSP+24]
            movsxd RSI,EBX
            movsxd RDI,R11D
            call .L_434570
.L_416738:

            add RSP,40
.L_41673c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_416747:

            cmp RAX,RDX
            ja .L_41691f

            test RAX,RAX
            mov RBX,R12
            je .L_416820

            nop
            nop
            nop
            nop
.L_416760:

            test RBX,RBX
            je .L_416792

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov RDI,RBP
            mov QWORD PTR [RBX+16],0
.L_41677f:

            call _Znwm@PLT
.L_416784:

            mov QWORD PTR [RBX],RAX
            add RAX,RBP
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+8],RAX
.L_416792:

            add RBX,24
            cmp RBX,R14
            jne .L_416760

            jmp .L_41647c
.L_4167a0:

            mov R8,RAX
            mov R9,RBX
            jmp .L_4165c4
.L_4167ab:

            test R12,R12
            jne .L_4167bc

            cmp R14,24
            je .L_4167e4

            mov R12D,24
.L_4167bc:

            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+16],RBP
            xor EDI,EDI
            mov RDX,RBP
            mov RSI,R13
            add R12,24
            call memcpy@PLT

            mov QWORD PTR [R12-16],RBP
            cmp R14,R12
            jne .L_4167ab
.L_4167e4:

            mov RBX,R14
            jmp .L_41647c
.L_4167ec:

            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+56],0
            xor R13D,R13D
            mov QWORD PTR [RDI+64],0
            mov EDI,72
.L_41680c:

            call _Znwm@PLT

            mov R12,RAX
            jmp .L_4163de
.L_416819:

            xor ESI,ESI
            jmp .L_416660
.L_416820:

            cmp R12,-24
            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+16],RBP
            mov QWORD PTR [R12+8],RBP
            mov EAX,24
            jne .L_41684e
.L_41683d:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],RBP
            mov QWORD PTR [RAX+8],RBP
            jmp .L_4167e4
.L_41684e:

            mov RAX,R12
            mov QWORD PTR [R12+24],0
            mov QWORD PTR [R12+40],RBP
            add RAX,48
            mov QWORD PTR [R12+32],RBP
            je .L_4167e4

            jmp .L_41683d
.L_416870:

            mov RBX,RAX
.L_416873:

            mov RDI,R13
            call _ZdlPv@PLT
.L_41687b:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_416883:

            call _ZSt17__throw_bad_allocv@PLT
.L_416888:

            call _ZSt17__throw_bad_allocv@PLT
.L_41688d:

            mov RBP,RAX
.L_416890:

            mov R12,QWORD PTR [R15+104]
            mov RBX,QWORD PTR [R15+96]
.L_416898:

            cmp R12,RBX
            je .L_4168d0

            mov R14,QWORD PTR [RBX+8]
            mov R13,QWORD PTR [RBX]
.L_4168a4:

            cmp R14,R13
            je .L_4168bd

            mov RDI,QWORD PTR [R13]
            test RDI,RDI
            je .L_4168b7

            call _ZdlPv@PLT
.L_4168b7:

            add R13,24
            jmp .L_4168a4
.L_4168bd:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_4168ca

            call _ZdlPv@PLT
.L_4168ca:

            add RBX,24
            jmp .L_416898
.L_4168d0:

            mov RDI,QWORD PTR [R15+96]
            test RDI,RDI
            je .L_4168de

            call _ZdlPv@PLT
.L_4168de:

            lea RDI,QWORD PTR [R15+72]
            call .L_4189d0

            mov RDI,QWORD PTR [RSP+24]
            call .L_4189d0

            mov RDI,RBP
.L_4168f4:

            call _Unwind_Resume@PLT
.L_4168f9:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_416901:

            cmp R12,RBX
            je .L_41691a

            mov RDI,QWORD PTR [R12]
            test RDI,RDI
            je .L_416914

            call _ZdlPv@PLT
.L_416914:

            add R12,24
            jmp .L_416901
.L_41691a:

            call __cxa_rethrow@PLT
.L_41691f:

            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12+16],0
.L_416939:

            call _ZSt17__throw_bad_allocv@PLT
.L_41693e:

            mov RDI,QWORD PTR [R15+176]
            mov RBP,RAX
            test RDI,RDI
            je .L_416890

            call _ZdlPv@PLT

            jmp .L_416890
.L_41695b:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [R15+48]
            test RDI,RDI
            je .L_416971

            call _ZdlPv@PLT
.L_416971:

            test R13,R13
            jne .L_416873

            jmp .L_41687b
.L_41697f:

            mov RBX,R12
            jmp .L_4168f9
.L_416987:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416990:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,1160
.L_4169a4:

            mov EBX,DWORD PTR [RDI+8]
            imul EBX,DWORD PTR [RDI+12]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1144],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            movsxd RBX,EBX
            test RBX,RBX
            je .L_416d90

            movabs RAX,4611686018427387903
            cmp RBX,RAX
            ja .L_416e0b

            shl RBX,2
            mov RDI,RBX
.L_4169e9:

            call _Znwm@PLT
.L_4169ee:

            mov RDX,RBX
            mov RDI,RAX
            xor ESI,ESI
            mov R13,RAX
            call memset@PLT

            pxor XMM0,XMM0
            mov EDI,72
            add RBX,R13
            mov QWORD PTR [RSP+64],0
            movaps XMMWORD PTR [RSP+48],XMM0
.L_416a18:

            call _Znwm@PLT
.L_416a1d:

            mov RCX,RAX
            mov QWORD PTR [RSP+8],RAX
.L_416a25:

            mov QWORD PTR [RSP+16],RCX
            mov R12,RBX
            lea R14,QWORD PTR [RCX+72]
            movq XMM0,QWORD PTR [RSP+16]
            sub R12,R13
            punpcklqdq XMM0,XMM0
            mov RAX,R12
            sar RAX,2
            cmp RBX,R13
            mov QWORD PTR [RSP+64],R14
            movabs RDX,4611686018427387903
            movaps XMMWORD PTR [RSP+48],XMM0
            je .L_416c80

            cmp RAX,RDX
            ja .L_416e10

            test RAX,RAX
            mov RBX,RCX
            je .L_416d20

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416a80:

            test RBX,RBX
            je .L_416ac1

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov RDI,R12
            mov QWORD PTR [RBX+16],0
.L_416a9f:

            call _Znwm@PLT
.L_416aa4:

            lea R15,QWORD PTR [RAX+R12*1]
            mov QWORD PTR [RBX],RAX
            mov RDX,R12
            mov RSI,R13
            mov RDI,RAX
            mov QWORD PTR [RBX+16],R15
            call memcpy@PLT

            mov QWORD PTR [RBX+8],R15
.L_416ac1:

            add RBX,24
            cmp R14,RBX
            jne .L_416a80
.L_416aca:

            test R13,R13
            mov QWORD PTR [RSP+56],RBX
            je .L_416adc

            mov RDI,R13
            call _ZdlPv@PLT
.L_416adc:

            lea R13,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R13
.L_416ae9:

            call .L_424e20

            movsxd RSI,DWORD PTR [RBP+12]
            movsxd RDI,DWORD PTR [RBP+8]
            mov RDX,R13
            call .L_434570

            lea RBX,QWORD PTR [RBP+176]
            lea RSI,QWORD PTR [RBP+48]
            lea RDI,QWORD PTR [RBP+120]
            mov RDX,R13
            mov RCX,RBX
            call .L_438ab0

            mov RDI,RBX
            call .L_430e10
.L_416b20:

            lea R14,QWORD PTR [RSP+112]
            cvtsd2ss XMM0,XMM0
            lea R8,QWORD PTR [RIP+.L_418a4a]
            movss DWORD PTR [RBP+168],XMM0
            lea R12,QWORD PTR [RSP+80]
            mov ECX,1024
            cvtss2sd XMM0,XMM0
            mov EDX,1
            mov ESI,1024
            mov RDI,R14
            mov EAX,1
            mov RBX,R14
            call __snprintf_chk@PLT

            lea RAX,QWORD PTR [R12+16]
            mov BYTE PTR [RSP+1135],0
            mov QWORD PTR [RSP+80],RAX
.L_416b72:

            mov EDX,DWORD PTR [RBX]
            add RBX,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_416b72

            mov EDX,EAX
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RBX+2]
            mov ECX,EAX
            cmove RBX,RDX
            add CL,AL
            sbb RBX,3
            sub RBX,R14
            cmp RBX,15
            mov QWORD PTR [RSP+40],RBX
            ja .L_416ce0

            cmp RBX,1
            jne .L_416d78

            movzx EAX,BYTE PTR [RSP+112]
            mov BYTE PTR [RSP+96],AL
            lea RAX,QWORD PTR [R12+16]
.L_416bd0:

            mov QWORD PTR [RSP+88],RBX
            mov BYTE PTR [RAX+RBX*1],0
            mov RSI,R12
            mov RDI,QWORD PTR [RBP+200]
.L_416be3:

            call .L_4196f0
.L_416be8:

            mov RDI,QWORD PTR [RSP+80]
            add R12,16
            cmp RDI,R12
            je .L_416bfb

            call _ZdlPv@PLT
.L_416bfb:

            mov RAX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+48]
            cmp RAX,RDI
            je .L_416c46

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_416c31
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416c20:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_416c41
.L_416c2d:

            add RBX,24
.L_416c31:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_416c20

            cmp RBP,RBX
            mov RDI,RBX
            jne .L_416c2d
.L_416c41:

            mov RDI,QWORD PTR [RSP+48]
.L_416c46:

            test RDI,RDI
            je .L_416c50

            call _ZdlPv@PLT
.L_416c50:

            mov RAX,QWORD PTR [RSP+1144]
            xor RAX,QWORD PTR FS:[40]
            jne .L_416e06

            add RSP,1160
.L_416c6e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416c80:

            cmp RAX,RDX
            ja .L_416e10

            test RAX,RAX
            mov RBX,RCX
            je .L_416dbc

            nop
            nop
            nop
.L_416c98:

            test RBX,RBX
            je .L_416cca

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov RDI,R12
            mov QWORD PTR [RBX+16],0
.L_416cb7:

            call _Znwm@PLT
.L_416cbc:

            mov QWORD PTR [RBX],RAX
            add RAX,R12
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+8],RAX
.L_416cca:

            add RBX,24
            cmp R14,RBX
            jne .L_416c98

            jmp .L_416aca
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416ce0:

            lea RSI,QWORD PTR [RSP+40]
            xor EDX,EDX
            mov RDI,R12
.L_416cea:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_416cef:

            mov RDX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+96],RDX
.L_416cfe:

            mov RDX,RBX
            mov RSI,R14
            mov RDI,RAX
            call memcpy@PLT

            mov RBX,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+80]
            jmp .L_416bd0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416d20:

            cmp QWORD PTR [RSP+8],0
            jne .L_416d37

            cmp R14,24
            je .L_416d69

            mov QWORD PTR [RSP+8],24
.L_416d37:

            mov RBX,QWORD PTR [RSP+8]
            xor EDI,EDI
            mov RDX,R12
            mov RSI,R13
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+16],R12
            call memcpy@PLT

            mov RAX,RBX
            mov QWORD PTR [RBX+8],R12
            add RAX,24
            cmp R14,RAX
            mov QWORD PTR [RSP+8],RAX
            jne .L_416d20
.L_416d69:

            mov RBX,R14
            jmp .L_416aca
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416d78:

            test RBX,RBX
            lea RAX,QWORD PTR [R12+16]
            je .L_416bd0

            jmp .L_416cfe
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416d90:

            pxor XMM0,XMM0
            mov EDI,72
            mov QWORD PTR [RSP+64],0
            xor R13D,R13D
            movaps XMMWORD PTR [RSP+48],XMM0
.L_416daa:

            call _Znwm@PLT

            mov RCX,RAX
            mov QWORD PTR [RSP+8],RAX
            jmp .L_416a25
.L_416dbc:

            cmp RCX,-24
            mov QWORD PTR [RCX],0
            mov QWORD PTR [RCX+16],R12
            mov QWORD PTR [RCX+8],R12
            mov EAX,24
            jne .L_416de7
.L_416dd6:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],R12
            mov QWORD PTR [RAX+8],R12
            jmp .L_416d69
.L_416de7:

            mov RAX,RCX
            mov QWORD PTR [RCX+24],0
            mov QWORD PTR [RCX+40],R12
            add RAX,48
            mov QWORD PTR [RCX+32],R12
            je .L_416d69

            jmp .L_416dd6
.L_416e06:

            call __stack_chk_fail@PLT
.L_416e0b:

            call _ZSt17__throw_bad_allocv@PLT
.L_416e10:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
.L_416e2c:

            call _ZSt17__throw_bad_allocv@PLT
.L_416e31:

            mov RBX,RAX
.L_416e34:

            mov RDI,R13
            call .L_4189d0
.L_416e3c:

            mov RDI,RBX
.L_416e3f:

            call _Unwind_Resume@PLT
.L_416e44:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_416e4c:

            mov RAX,QWORD PTR [RSP+8]
            cmp RAX,RBX
            je .L_416e6b

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_416e63

            call _ZdlPv@PLT
.L_416e63:

            add QWORD PTR [RSP+8],24
            jmp .L_416e4c
.L_416e6b:

            call __cxa_rethrow@PLT
.L_416e70:

            mov RDI,QWORD PTR [RSP+80]
            add R12,16
            mov RBX,RAX
            cmp RDI,R12
            je .L_416e34

            call _ZdlPv@PLT

            jmp .L_416e34
.L_416e88:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+48]
            test RDI,RDI
            je .L_416e9f

            call _ZdlPv@PLT
.L_416e9f:

            test R13,R13
            je .L_416e3c
.L_416ea4:

            mov RDI,R13
            call _ZdlPv@PLT

            jmp .L_416e3c
.L_416eae:

            mov RBX,RAX
            jmp .L_416ea4
.L_416eb3:

            mov RBX,QWORD PTR [RSP+8]
            jmp .L_416e44
.L_416eba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_416ec0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,3832
.L_416ed4:

            mov QWORD PTR [RSP+304],RSI
            mov ESI,DWORD PTR [RDI+32]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+3816],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+40]
            imul ESI,EAX
            imul EAX,ECX
            add ESI,EDX
            shl ESI,3
            add EAX,EDX
            mov DWORD PTR [RSP+296],ESI
            mov ESI,DWORD PTR [RDI+36]
            cdqe 
            imul ESI,DWORD PTR [RDI+44]
            lea RDX,QWORD PTR [RAX+RAX*2]
            mov RAX,QWORD PTR [RDI+96]
            mov EDI,256
            lea R13,QWORD PTR [RAX+RDX*8]
            add ESI,ECX
            shl ESI,3
            mov DWORD PTR [RSP+300],ESI
.L_416f2f:

            call _Znwm@PLT
.L_416f34:

            lea RDI,QWORD PTR [RAX+8]
            mov RCX,RAX
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+248],0
            mov RBP,RAX
            xor EAX,EAX
            and RDI,-8
            pxor XMM0,XMM0
            sub RCX,RDI
            add ECX,256
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov EDI,72
            mov QWORD PTR [RSP+560],0
            movaps XMMWORD PTR [RSP+544],XMM0
.L_416f82:

            call _Znwm@PLT
.L_416f87:

            mov QWORD PTR [RSP+288],RAX
            lea R15,QWORD PTR [RBP+256]
            lea R14,QWORD PTR [RAX+72]
            movq XMM0,QWORD PTR [RSP+288]
            mov QWORD PTR [RSP+312],RAX
            punpcklqdq XMM0,XMM0
            cmp R15,RBP
            mov QWORD PTR [RSP+560],R14
            mov RBX,RAX
            movaps XMMWORD PTR [RSP+544],XMM0
            je .L_417b68

            nop
            nop
            nop
            nop
            nop
.L_416fd0:

            test RBX,RBX
            je .L_417018

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov EDI,256
            mov QWORD PTR [RBX+16],0
.L_416ff1:

            call _Znwm@PLT
.L_416ff6:

            lea R15,QWORD PTR [RAX+256]
            mov QWORD PTR [RBX],RAX
            mov EDX,256
            mov RSI,RBP
            mov RDI,RAX
            mov QWORD PTR [RBX+16],R15
            call memcpy@PLT

            mov QWORD PTR [RBX+8],R15
.L_417018:

            add RBX,24
            cmp R14,RBX
            jne .L_416fd0
.L_417021:

            mov RDI,RBP
            mov QWORD PTR [RSP+552],RBX
            call _ZdlPv@PLT

            mov EDX,DWORD PTR [RSP+300]
            mov ESI,DWORD PTR [RSP+296]
            lea R9,QWORD PTR [RSP+544]
            mov RDI,QWORD PTR [RSP+304]
            mov R8D,8
            mov ECX,8
            mov QWORD PTR [RSP+288],R9
.L_417062:

            call .L_424d20

            mov RDX,QWORD PTR [RSP+288]
            mov ESI,8
            mov EDI,8
            call .L_434570

            mov RBX,QWORD PTR [R13+8]
            sub RBX,QWORD PTR [R13]
            movabs RDX,-6148914691236517205
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+592],0
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            movaps XMMWORD PTR [RSP+576],XMM0
            test RAX,RAX
            je .L_417bb0

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_417d36

            mov RDI,RBX
            call _Znwm@PLT
.L_4170d7:

            mov QWORD PTR [RSP+304],RAX
.L_4170df:

            mov QWORD PTR [RSP+312],RAX
            add RBX,RAX
            movq XMM0,QWORD PTR [RSP+312]
            mov QWORD PTR [RSP+592],RBX
            mov RBX,RAX
            punpcklqdq XMM0,XMM0
            movaps XMMWORD PTR [RSP+576],XMM0
            mov R15,QWORD PTR [R13+8]
            mov RBP,QWORD PTR [R13]
            cmp R15,RBP
            je .L_4171bb

            nop
            nop
            nop
            nop
            nop
.L_417120:

            test RBX,RBX
            je .L_4171aa

            mov R14,QWORD PTR [RBP+8]
            sub R14,QWORD PTR [RBP]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R14
            sar RAX,2
            test RAX,RAX
            je .L_417174

            movabs RSI,4611686018427387903
            cmp RAX,RSI
            ja .L_417c87

            mov RDI,R14
.L_41716c:

            call _Znwm@PLT
.L_417171:

            mov RCX,RAX
.L_417174:

            add R14,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R14
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov R14,RAX
            sub R14,RSI
            cmp RAX,RSI
            je .L_4171a3

            mov RDI,RCX
            mov RDX,R14
            call memmove@PLT

            mov RCX,RAX
.L_4171a3:

            add RCX,R14
            mov QWORD PTR [RBX+8],RCX
.L_4171aa:

            add RBP,24
            add RBX,24
            cmp R15,RBP
            jne .L_417120
.L_4171bb:

            mov R15,QWORD PTR [RSP+552]
            mov RBP,QWORD PTR [RSP+544]
            movabs RDX,-6148914691236517205
            mov QWORD PTR [RSP+584],RBX
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+624],0
            mov RBX,R15
            sub RBX,RBP
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            movaps XMMWORD PTR [RSP+608],XMM0
            test RAX,RAX
            je .L_417bd0

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_417ca7

            mov RDI,RBX
.L_417225:

            call _Znwm@PLT
.L_41722a:

            mov R15,QWORD PTR [RSP+552]
            mov RBP,QWORD PTR [RSP+544]
            mov QWORD PTR [RSP+304],RAX
.L_417242:

            mov QWORD PTR [RSP+312],RAX
            add RBX,RAX
            cmp R15,RBP
            movq XMM0,QWORD PTR [RSP+312]
            mov QWORD PTR [RSP+624],RBX
            punpcklqdq XMM0,XMM0
            mov RBX,RAX
            movaps XMMWORD PTR [RSP+608],XMM0
            je .L_41731b

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417280:

            test RBX,RBX
            je .L_41730a

            mov R14,QWORD PTR [RBP+8]
            sub R14,QWORD PTR [RBP]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R14
            sar RAX,2
            test RAX,RAX
            je .L_4172d4

            movabs RSI,4611686018427387903
            cmp RAX,RSI
            ja .L_417d0e

            mov RDI,R14
.L_4172cc:

            call _Znwm@PLT
.L_4172d1:

            mov RCX,RAX
.L_4172d4:

            add R14,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R14
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov R14,RAX
            sub R14,RSI
            cmp RAX,RSI
            je .L_417303

            mov RDI,RCX
            mov RDX,R14
            call memmove@PLT

            mov RCX,RAX
.L_417303:

            add RCX,R14
            mov QWORD PTR [RBX+8],RCX
.L_41730a:

            add RBP,24
            add RBX,24
            cmp R15,RBP
            jne .L_417280
.L_41731b:

            mov QWORD PTR [RSP+616],RBX
            lea RBP,QWORD PTR [RSP+608]
            lea RBX,QWORD PTR [RSP+576]
            mov RCX,QWORD PTR [RSP+288]
            mov RDX,R13
            mov ESI,8
            mov R9,RBP
            mov R8,RBX
            mov EDI,8
.L_41734e:

            call .L_430660

            lea RDI,QWORD PTR [RSP+736]
            lea RSI,QWORD PTR [RSP+2272]
            mov R11,QWORD PTR [RSP+576]
            mov R10,QWORD PTR [RSP+608]
            xor R9D,R9D
            movaps XMM0,XMMWORD PTR [RSP+320]
            mov RDX,RDI
            mov RAX,RSI
            movaps XMM1,XMMWORD PTR [RSP+336]
            movaps XMM2,XMMWORD PTR [RSP+352]
            movaps XMM3,XMMWORD PTR [RSP+368]
            movaps XMM4,XMMWORD PTR [RSP+384]
            movaps XMM5,XMMWORD PTR [RSP+400]
            movaps XMM6,XMMWORD PTR [RSP+416]
            movaps XMM7,XMMWORD PTR [RSP+432]
            movaps XMM8,XMMWORD PTR [RSP+448]
            movaps XMM9,XMMWORD PTR [RSP+464]
            movaps XMM10,XMMWORD PTR [RSP+480]
            movaps XMM11,XMMWORD PTR [RSP+496]
            movaps XMM12,XMMWORD PTR [RSP+512]
            movaps XMM13,XMMWORD PTR [RSP+528]
.L_4173f2:

            mov R8,QWORD PTR [R11+R9*1]
            mov RCX,QWORD PTR [R10+R9*1]
            add R9,24
            add RDX,512
            add RAX,512
            movups XMM14,XMMWORD PTR [R8]
            movhps QWORD PTR [RSP],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP]
            movaps XMMWORD PTR [RDX-512],XMM15
            movaps XMMWORD PTR [RDX-496],XMM14
            movups XMM14,XMMWORD PTR [RCX]
            movhps QWORD PTR [RSP+16],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+16]
            movaps XMMWORD PTR [RAX-512],XMM15
            movaps XMMWORD PTR [RAX-496],XMM14
            movups XMM14,XMMWORD PTR [R8+16]
            movhps QWORD PTR [RSP+32],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+32]
            movaps XMMWORD PTR [RDX-480],XMM15
            movaps XMMWORD PTR [RDX-464],XMM14
            movups XMM14,XMMWORD PTR [RCX+16]
            movhps QWORD PTR [RSP+48],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+48]
            movaps XMMWORD PTR [RAX-480],XMM15
            movaps XMMWORD PTR [RAX-464],XMM14
            movups XMM14,XMMWORD PTR [R8+32]
            movhps QWORD PTR [RSP+64],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+64]
            movaps XMMWORD PTR [RDX-448],XMM15
            movaps XMMWORD PTR [RDX-432],XMM14
            movups XMM14,XMMWORD PTR [RCX+32]
            movhps QWORD PTR [RSP+80],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+80]
            movaps XMMWORD PTR [RAX-448],XMM15
            movaps XMMWORD PTR [RAX-432],XMM14
            movups XMM14,XMMWORD PTR [R8+48]
            movhps QWORD PTR [RSP+96],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+96]
            movaps XMMWORD PTR [RDX-416],XMM15
            movaps XMMWORD PTR [RDX-400],XMM14
            movups XMM14,XMMWORD PTR [RCX+48]
            movhps QWORD PTR [RSP+112],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+112]
            movaps XMMWORD PTR [RAX-416],XMM15
            movaps XMMWORD PTR [RAX-400],XMM14
            movups XMM14,XMMWORD PTR [R8+64]
            movhps QWORD PTR [RSP+128],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+128]
            movaps XMMWORD PTR [RDX-384],XMM15
            movaps XMMWORD PTR [RDX-368],XMM14
            movups XMM14,XMMWORD PTR [RCX+64]
            movhps QWORD PTR [RSP+144],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+144]
            movaps XMMWORD PTR [RAX-384],XMM15
            movaps XMMWORD PTR [RAX-368],XMM14
            movups XMM14,XMMWORD PTR [R8+80]
            cvtps2pd XMM15,XMM14
            movaps XMMWORD PTR [RDX-352],XMM15
            movhps QWORD PTR [RSP+160],XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+160]
            movaps XMMWORD PTR [RDX-336],XMM14
            movups XMM14,XMMWORD PTR [RCX+80]
            movhps QWORD PTR [RSP+176],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+176]
            movaps XMMWORD PTR [RAX-352],XMM15
            movaps XMMWORD PTR [RAX-336],XMM14
            movups XMM14,XMMWORD PTR [R8+96]
            movhps QWORD PTR [RSP+192],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+192]
            movaps XMMWORD PTR [RDX-320],XMM15
            movaps XMMWORD PTR [RDX-304],XMM14
            movups XMM14,XMMWORD PTR [RCX+96]
            movhps QWORD PTR [RSP+208],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+208]
            movaps XMMWORD PTR [RAX-320],XMM15
            movaps XMMWORD PTR [RAX-304],XMM14
            movups XMM14,XMMWORD PTR [R8+112]
            movhps QWORD PTR [RSP+224],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+224]
            movaps XMMWORD PTR [RDX-288],XMM15
            movaps XMMWORD PTR [RDX-272],XMM14
            movups XMM14,XMMWORD PTR [RCX+112]
            movhps QWORD PTR [RSP+240],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+240]
            movaps XMMWORD PTR [RAX-288],XMM15
            movaps XMMWORD PTR [RAX-272],XMM14
            movups XMM14,XMMWORD PTR [R8+128]
            movhps QWORD PTR [RSP+256],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+256]
            movaps XMMWORD PTR [RDX-256],XMM15
            movaps XMMWORD PTR [RDX-240],XMM14
            movups XMM14,XMMWORD PTR [RCX+128]
            movhps QWORD PTR [RSP+272],XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,QWORD PTR [RSP+272]
            movaps XMMWORD PTR [RAX-256],XMM15
            movaps XMMWORD PTR [RAX-240],XMM14
            movups XMM14,XMMWORD PTR [R8+144]
            movhlps XMM0,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM0
            movaps XMMWORD PTR [RDX-224],XMM15
            movaps XMMWORD PTR [RDX-208],XMM14
            movups XMM14,XMMWORD PTR [RCX+144]
            movhlps XMM1,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM1
            movaps XMMWORD PTR [RAX-224],XMM15
            movaps XMMWORD PTR [RAX-208],XMM14
            movups XMM14,XMMWORD PTR [R8+160]
            movhlps XMM2,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM2
            movaps XMMWORD PTR [RDX-192],XMM15
            movaps XMMWORD PTR [RDX-176],XMM14
            movups XMM14,XMMWORD PTR [RCX+160]
            movhlps XMM3,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM3
            movaps XMMWORD PTR [RAX-192],XMM15
            movaps XMMWORD PTR [RAX-176],XMM14
            movups XMM14,XMMWORD PTR [R8+176]
            movhlps XMM4,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM4
            movaps XMMWORD PTR [RDX-160],XMM15
            movaps XMMWORD PTR [RDX-144],XMM14
            movups XMM14,XMMWORD PTR [RCX+176]
            movhlps XMM5,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM5
            movaps XMMWORD PTR [RAX-160],XMM15
            movaps XMMWORD PTR [RAX-144],XMM14
            movups XMM14,XMMWORD PTR [R8+192]
            movhlps XMM6,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM6
            movaps XMMWORD PTR [RDX-128],XMM15
            movaps XMMWORD PTR [RDX-112],XMM14
            movups XMM14,XMMWORD PTR [RCX+192]
            movhlps XMM7,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM7
            movaps XMMWORD PTR [RAX-128],XMM15
            movaps XMMWORD PTR [RAX-112],XMM14
            movups XMM14,XMMWORD PTR [R8+208]
            movhlps XMM8,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM8
            movaps XMMWORD PTR [RDX-96],XMM15
            movaps XMMWORD PTR [RDX-80],XMM14
            movups XMM14,XMMWORD PTR [RCX+208]
            movhlps XMM9,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM9
            movaps XMMWORD PTR [RAX-96],XMM15
            movaps XMMWORD PTR [RAX-80],XMM14
            movups XMM14,XMMWORD PTR [R8+224]
            movhlps XMM10,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM10
            movaps XMMWORD PTR [RDX-64],XMM15
            movaps XMMWORD PTR [RDX-48],XMM14
            movups XMM14,XMMWORD PTR [RCX+224]
            movhlps XMM11,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM11
            movaps XMMWORD PTR [RAX-64],XMM15
            movaps XMMWORD PTR [RAX-48],XMM14
            movups XMM14,XMMWORD PTR [R8+240]
            movhlps XMM12,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM12
            movaps XMMWORD PTR [RDX-32],XMM15
            movaps XMMWORD PTR [RDX-16],XMM14
            movups XMM14,XMMWORD PTR [RCX+240]
            movhlps XMM13,XMM14
            cvtps2pd XMM15,XMM14
            cvtps2pd XMM14,XMM13
            movaps XMMWORD PTR [RAX-32],XMM15
            movaps XMMWORD PTR [RAX-16],XMM14
            cmp R9,72
            jne .L_4173f2

            pxor XMM0,XMM0
            lea RCX,QWORD PTR [RSP+672]
            lea RDX,QWORD PTR [RSP+640]
            lea R8,QWORD PTR [RSP+704]
            mov QWORD PTR [RSP+656],0
            mov QWORD PTR [RSP+688],0
            mov QWORD PTR [RSP+720],0
            movaps XMMWORD PTR [RSP+640],XMM0
            movaps XMMWORD PTR [RSP+672],XMM0
            movaps XMMWORD PTR [RSP+704],XMM0
            call .L_42f710
.L_417912:

            pxor XMM2,XMM2
            pxor XMM3,XMM3
            mov EAX,DWORD PTR [RSP+300]
            mov RDX,QWORD PTR [R12+72]
            imul EAX,DWORD PTR [R12+8]
            movsd XMM5,QWORD PTR [RSP+640]
            mov RCX,QWORD PTR [RDX]
            pxor XMM1,XMM1
            add EAX,DWORD PTR [RSP+296]
            pxor XMM0,XMM0
            cdqe 
            cvtss2sd XMM2,DWORD PTR [RCX+RAX*4]
            mov RCX,QWORD PTR [RDX+24]
            mov RDX,QWORD PTR [RDX+48]
            mulsd XMM5,XMM2
            cvtss2sd XMM1,DWORD PTR [RCX+RAX*4]
            cvtss2sd XMM0,DWORD PTR [RDX+RAX*4]
            movapd XMM4,XMM5
            movsd XMM5,QWORD PTR [RSP+672]
            addsd XMM4,XMM3
            mulsd XMM5,XMM2
            mulsd XMM2,QWORD PTR [RSP+704]
            addsd XMM5,XMM4
            movsd XMM4,QWORD PTR [RSP+648]
            mulsd XMM4,XMM1
            addsd XMM2,XMM3
            addsd XMM5,XMM4
            movsd XMM4,QWORD PTR [RSP+680]
            mulsd XMM4,XMM1
            mulsd XMM1,QWORD PTR [RSP+712]
            addsd XMM4,XMM5
            addsd XMM2,XMM1
            movsd XMM1,QWORD PTR [RSP+656]
            mulsd XMM1,XMM0
            addsd XMM4,XMM1
            movsd XMM1,QWORD PTR [RSP+688]
            mulsd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+720]
            addsd XMM1,XMM4
            addsd XMM0,XMM2
            mulsd XMM1,QWORD PTR [RIP+.L_4196d8]
            mulsd XMM0,QWORD PTR [RIP+.L_4196e0]
            addsd XMM0,XMM1
            ucomisd XMM3,XMM0
            sqrtsd XMM6,XMM0
            movsd QWORD PTR [RSP],XMM6
            ja .L_417be9
.L_417a0f:

            mov RAX,QWORD PTR [RSP+616]
            mov RDI,QWORD PTR [RSP+608]
            cmp RAX,RDI
            je .L_417a69

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_417a51
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417a40:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RDI,RBX
            je .L_417a61
.L_417a4d:

            add RBX,24
.L_417a51:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_417a40

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_417a4d
.L_417a61:

            mov RDI,QWORD PTR [RSP+608]
.L_417a69:

            test RDI,RDI
            je .L_417a73

            call _ZdlPv@PLT
.L_417a73:

            mov RAX,QWORD PTR [RSP+584]
            mov RDI,QWORD PTR [RSP+576]
            cmp RAX,RDI
            je .L_417ac9

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_417ab1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417aa0:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_417ac1
.L_417aad:

            add RBX,24
.L_417ab1:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_417aa0

            cmp RBP,RBX
            mov RDI,RBX
            jne .L_417aad
.L_417ac1:

            mov RDI,QWORD PTR [RSP+576]
.L_417ac9:

            test RDI,RDI
            je .L_417ad3

            call _ZdlPv@PLT
.L_417ad3:

            mov RAX,QWORD PTR [RSP+552]
            mov RDI,QWORD PTR [RSP+544]
            cmp RAX,RDI
            je .L_417b29

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_417b11
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417b00:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_417b21
.L_417b0d:

            add RBX,24
.L_417b11:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_417b00

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_417b0d
.L_417b21:

            mov RDI,QWORD PTR [RSP+544]
.L_417b29:

            test RDI,RDI
            je .L_417b33

            call _ZdlPv@PLT
.L_417b33:

            mov RAX,QWORD PTR [RSP+3816]
            xor RAX,QWORD PTR FS:[40]
            movsd XMM0,QWORD PTR [RSP]
            jne .L_417c06

            add RSP,3832
.L_417b56:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417b68:

            test RBX,RBX
            je .L_417b9f

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov EDI,256
            mov QWORD PTR [RBX+16],0
.L_417b89:

            call _Znwm@PLT
.L_417b8e:

            mov QWORD PTR [RBX],RAX
            add RAX,256
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+8],RAX
.L_417b9f:

            add RBX,24
            cmp R14,RBX
            jne .L_417b68

            jmp .L_417021
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417bb0:

            mov QWORD PTR [RSP+304],0
            mov RAX,QWORD PTR [RSP+304]
            jmp .L_4170df
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417bd0:

            mov QWORD PTR [RSP+304],0
            mov RAX,QWORD PTR [RSP+304]
            jmp .L_417242
.L_417be9:

            call sqrt@PLT

            jmp .L_417a0f
.L_417bf3:

            mov RBX,RAX
.L_417bf6:

            mov RDI,RBP
            call _ZdlPv@PLT

            mov RDI,RBX
.L_417c01:

            call _Unwind_Resume@PLT
.L_417c06:

            call __stack_chk_fail@PLT
.L_417c0b:

            mov RBX,RAX
.L_417c0e:

            mov RDI,QWORD PTR [RSP+288]
            call .L_4189d0

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_417c23:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_417c2b:

            mov RAX,QWORD PTR [RSP+312]
            cmp RAX,RBX
            je .L_417c50

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_417c45

            call _ZdlPv@PLT
.L_417c45:

            add QWORD PTR [RSP+312],24
            jmp .L_417c2b
.L_417c50:

            call __cxa_rethrow@PLT
.L_417c55:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_417c5d:

            mov RAX,QWORD PTR [RSP+304]
            cmp RBX,RAX
            je .L_417c82

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_417c77

            call _ZdlPv@PLT
.L_417c77:

            add QWORD PTR [RSP+304],24
            jmp .L_417c5d
.L_417c82:

            call __cxa_rethrow@PLT
.L_417c87:

            call _ZSt17__throw_bad_allocv@PLT
.L_417c8c:

            mov R12,RAX
.L_417c8f:

            lea RBX,QWORD PTR [RSP+576]
.L_417c97:

            mov RDI,RBX
            mov RBX,R12
            call .L_4189d0

            jmp .L_417c0e
.L_417ca7:

            call _ZSt17__throw_bad_allocv@PLT
.L_417cac:

            mov RDI,RBP
            mov R12,RAX
            call .L_4189d0

            jmp .L_417c97
.L_417cb9:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+544]
            test RDI,RDI
            je .L_417bf6

            call _ZdlPv@PLT

            jmp .L_417bf6
.L_417cdc:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_417ce4:

            mov RAX,QWORD PTR [RSP+304]
            cmp RBX,RAX
            je .L_417d09

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_417cfe

            call _ZdlPv@PLT
.L_417cfe:

            add QWORD PTR [RSP+304],24
            jmp .L_417ce4
.L_417d09:

            call __cxa_rethrow@PLT
.L_417d0e:

            call _ZSt17__throw_bad_allocv@PLT
.L_417d13:

            mov R12,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+608]
            test RDI,RDI
            je .L_417c8f

            call _ZdlPv@PLT

            jmp .L_417c8f
.L_417d36:

            call _ZSt17__throw_bad_allocv@PLT
.L_417d3b:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+576]
            test RDI,RDI
            je .L_417c0e

            call _ZdlPv@PLT

            jmp .L_417c0e
.L_417d5e:

            nop
            nop
.L_417d60:

            push RBP
            pxor XMM0,XMM0
            push RBX
            mov RBX,RDI
            mov EDI,72
            sub RSP,56
.L_417d72:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+16],XMM0
            mov QWORD PTR [RSP+32],0
.L_417d90:

            call _Znwm@PLT
.L_417d95:

            lea RDX,QWORD PTR [RAX+72]
            cmp RAX,-24
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RAX],0
            movq XMM0,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],RDX
            punpcklqdq XMM0,XMM0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            movaps XMMWORD PTR [RSP+16],XMM0
            je .L_417ea0

            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            add RAX,48
            je .L_417e08
.L_417df1:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
.L_417e08:

            mov QWORD PTR [RSP+24],RDX
            movsxd RCX,DWORD PTR [RBX+12]
            lea RDI,QWORD PTR [RBX+48]
            movsxd RDX,DWORD PTR [RBX+8]
            lea RBP,QWORD PTR [RSP+16]
            lea R8,QWORD PTR [RBX+72]
            mov RSI,RDI
            mov R9,RBP
.L_417e28:

            call .L_437870
.L_417e2d:

            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+16]
            cmp RAX,RDI
            je .L_417e76

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_417e61
          .byte 0x66
          .byte 0x90
.L_417e50:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_417e71
.L_417e5d:

            add RBX,24
.L_417e61:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_417e50

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_417e5d
.L_417e71:

            mov RDI,QWORD PTR [RSP+16]
.L_417e76:

            test RDI,RDI
            je .L_417e80

            call _ZdlPv@PLT
.L_417e80:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_417eaa

            add RSP,56
.L_417e94:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417ea0:

            mov EAX,24
            jmp .L_417df1
.L_417eaa:

            call __stack_chk_fail@PLT
.L_417eaf:

            mov RBX,RAX
            mov RDI,RBP
            call .L_4189d0

            mov RDI,RBX
.L_417ebd:

            call _Unwind_Resume@PLT
.L_417ec2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417ed0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,120
.L_417ee1:

            mov R14,QWORD PTR [RDI+96]
            mov DWORD PTR [RDI+36],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+104]
            mov EDX,ECX
            mov DWORD PTR [RDI+40],ECX
            mov DWORD PTR [RDI+32],ESI
            movabs RSI,-6148914691236517205
            mov DWORD PTR [RDI+44],R8D
            imul EDX,R8D
            mov RCX,RAX
            sub RCX,R14
            sar RCX,3
            movsxd RDX,EDX
            imul RCX,RSI
            cmp RDX,RCX
            ja .L_4185f9

            jae .L_418001

            imul RDX,RDX,24
            add R14,RDX
            cmp RAX,R14
            je .L_417ffd

            lea RDX,QWORD PTR [R14+24]
            movabs R13,768614336404564651
            movabs R12,2305843009213693951
            mov R15,R14
            sub RAX,RDX
            mov RBX,RAX
            shr RBX,3
            imul RBX,R13
            and RBX,R12
            add RBX,1
            imul RBX,RBX,24
            add RBX,R14
.L_417f7d:

            mov RDX,QWORD PTR [R15]
            mov RAX,QWORD PTR [R15+8]
            cmp RAX,RDX
            mov RDI,RDX
            je .L_417fe6

            lea RCX,QWORD PTR [RDX+24]
            sub RAX,RCX
            shr RAX,3
            imul RAX,R13
            and RAX,R12
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            lea RAX,QWORD PTR [RDX+RAX*8]
            jmp .L_417fd3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417fb0:

            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RAX
            call _ZdlPv@PLT

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP]
            cmp RCX,RAX
            mov RDX,RCX
            je .L_417fe3
.L_417fcf:

            add RCX,24
.L_417fd3:

            mov RDI,QWORD PTR [RDX]
            test RDI,RDI
            jne .L_417fb0

            cmp RCX,RAX
            mov RDX,RCX
            jne .L_417fcf
.L_417fe3:

            mov RDI,QWORD PTR [R15]
.L_417fe6:

            test RDI,RDI
            je .L_4185e7

            add R15,24
            call _ZdlPv@PLT

            cmp R15,RBX
            jne .L_417f7d
.L_417ffd:

            mov QWORD PTR [RBP+104],R14
.L_418001:

            call .L_4198b0

            mov EDX,DWORD PTR [RBP+44]
            mov RBX,RAX
            test EDX,EDX
            jle .L_418579

            mov EAX,DWORD PTR [RBP+40]
            mov DWORD PTR [RSP+68],0
            mov DWORD PTR [RSP+64],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418030:

            test EAX,EAX
            jle .L_418568

            movsxd RAX,DWORD PTR [RSP+68]
            mov DWORD PTR [RSP+36],0
            lea RAX,QWORD PTR [RAX+RAX*2]
            shl RAX,3
            mov QWORD PTR [RSP+40],RAX
            lea RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+72],RAX
            nop
            nop
            nop
            nop
.L_418060:

            pxor XMM0,XMM0
            mov EDI,256
            mov R12,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+96],0
            add R12,QWORD PTR [RBP+96]
            movaps XMMWORD PTR [RSP+80],XMM0
            call _Znwm@PLT

            lea RDI,QWORD PTR [RAX+8]
            mov RCX,RAX
            lea RSI,QWORD PTR [RAX+256]
            mov RDX,RAX
            and RDI,-8
            mov QWORD PTR [RSP+80],RAX
            mov QWORD PTR [RSP+96],RSI
            sub RCX,RDI
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+248],0
            add ECX,256
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov QWORD PTR [RSP+88],RSI
            movabs RDI,-6148914691236517205
            mov RSI,QWORD PTR [R12+8]
            mov RCX,QWORD PTR [R12]
            mov RAX,RSI
            sub RAX,RCX
            sar RAX,3
            imul RAX,RDI
            cmp RAX,2
            jbe .L_4185c8

            cmp RAX,3
            je .L_4185b8

            lea R14,QWORD PTR [RCX+72]
            cmp RSI,R14
            je .L_41815f

            lea RAX,QWORD PTR [RCX+96]
            movabs RDI,768614336404564651
            mov R15,R14
            sub RSI,RAX
            mov RAX,RSI
            shr RAX,3
            imul RAX,RDI
            movabs RDI,2305843009213693951
            and RAX,RDI
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R13,QWORD PTR [RCX+RAX*8+96]
            nop
.L_418140:

            mov RDI,QWORD PTR [R15]
            test RDI,RDI
            je .L_4185a0

            add R15,24
            call _ZdlPv@PLT

            cmp R15,R13
            jne .L_418140
.L_41815a:

            mov RDX,QWORD PTR [RSP+80]
.L_41815f:

            mov QWORD PTR [R12+8],R14
.L_418164:

            test RDX,RDX
            jne .L_4185b8
.L_41816d:

            mov R10D,DWORD PTR [RBP+36]
            mov RSI,QWORD PTR [RSP+40]
            imul R10D,DWORD PTR [RBP+44]
            add RSI,QWORD PTR [RBP+96]
            mov R11D,DWORD PTR [RBP+32]
            imul R11D,DWORD PTR [RBP+40]
            add R10D,DWORD PTR [RSP+64]
            mov EAX,DWORD PTR [RBP+8]
            mov QWORD PTR [RSP+56],RBP
            mov RCX,QWORD PTR [RSI]
            add R11D,DWORD PTR [RSP+36]
            mov QWORD PTR [RSP+48],RSI
            mov DWORD PTR [RSP],EAX
            lea EDX,DWORD PTR [RAX-1]
            shl R10D,3
            mov EAX,DWORD PTR [RBP+12]
            mov R8,QWORD PTR [RCX]
            mov RDI,QWORD PTR [RCX+24]
            mov RSI,QWORD PTR [RCX+48]
            lea ECX,DWORD PTR [R10+8]
            shl R11D,3
            lea R12D,DWORD PTR [RAX-1]
            mov RAX,QWORD PTR [RBP+24]
            lea R14D,DWORD PTR [R11+1]
            mov DWORD PTR [RSP+8],ECX
            lea ECX,DWORD PTR [R11+3]
            lea R13D,DWORD PTR [R11+2]
            mov DWORD PTR [RSP+20],ECX
            lea ECX,DWORD PTR [R11+4]
            mov RAX,QWORD PTR [RAX]
            mov DWORD PTR [RSP+24],ECX
            lea ECX,DWORD PTR [R11+5]
            mov DWORD PTR [RSP+28],ECX
            lea ECX,DWORD PTR [R11+6]
            mov DWORD PTR [RSP+32],ECX
            lea ECX,DWORD PTR [R11+7]
            mov EBP,ECX
            nop
.L_418200:

            cmp R10D,R12D
            mov ECX,R12D
            mov R9D,R11D
            cmovle ECX,R10D
            pxor XMM1,XMM1
            imul ECX,DWORD PTR [RSP]
            cmp EDX,R11D
            pxor XMM2,XMM2
            cmovle R9D,EDX
            pxor XMM3,XMM3
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            pxor XMM6,XMM6
            add R9D,ECX
            pxor XMM7,XMM7
            lea R9D,DWORD PTR [R9+R9*2]
            pxor XMM0,XMM0
            movsxd R15,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM1,QWORD PTR [RBX+R15*8]
            lea R15D,DWORD PTR [R9+1]
            movss DWORD PTR [R8],XMM1
            add R9D,2
            cmp R14D,EDX
            movsxd R15,R15D
            movsxd R9,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            pxor XMM1,XMM1
            cvtsd2ss XMM2,QWORD PTR [RBX+R15*8]
            movss DWORD PTR [RDI],XMM2
            movzx R9D,BYTE PTR [RAX+R9*1]
            pxor XMM2,XMM2
            cvtsd2ss XMM3,QWORD PTR [RBX+R9*8]
            mov R9D,EDX
            movss DWORD PTR [RSI],XMM3
            cmovle R9D,R14D
            pxor XMM3,XMM3
            add R9D,ECX
            lea R9D,DWORD PTR [R9+R9*2]
            movsxd R15,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM4,QWORD PTR [RBX+R15*8]
            lea R15D,DWORD PTR [R9+1]
            movss DWORD PTR [R8+4],XMM4
            add R9D,2
            cmp R13D,EDX
            movsxd R15,R15D
            movsxd R9,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            pxor XMM4,XMM4
            cvtsd2ss XMM5,QWORD PTR [RBX+R15*8]
            movss DWORD PTR [RDI+4],XMM5
            movzx R9D,BYTE PTR [RAX+R9*1]
            pxor XMM5,XMM5
            cvtsd2ss XMM6,QWORD PTR [RBX+R9*8]
            mov R9D,EDX
            movss DWORD PTR [RSI+4],XMM6
            cmovle R9D,R13D
            pxor XMM6,XMM6
            add R9D,ECX
            lea R9D,DWORD PTR [R9+R9*2]
            movsxd R15,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM7,QWORD PTR [RBX+R15*8]
            lea R15D,DWORD PTR [R9+1]
            movss DWORD PTR [R8+8],XMM7
            add R9D,2
            pxor XMM7,XMM7
            movsxd R15,R15D
            movsxd R9,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM0,QWORD PTR [RBX+R15*8]
            movss DWORD PTR [RDI+8],XMM0
            movzx R9D,BYTE PTR [RAX+R9*1]
            mov R15D,DWORD PTR [RSP+20]
            pxor XMM0,XMM0
            cvtsd2ss XMM1,QWORD PTR [RBX+R9*8]
            cmp R15D,EDX
            mov R9D,R15D
            cmovg R9D,EDX
            movss DWORD PTR [RSI+8],XMM1
            add R9D,ECX
            pxor XMM1,XMM1
            lea R9D,DWORD PTR [R9+R9*2]
            movsxd R15,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM2,QWORD PTR [RBX+R15*8]
            lea R15D,DWORD PTR [R9+1]
            movss DWORD PTR [R8+12],XMM2
            add R9D,2
            pxor XMM2,XMM2
            movsxd R15,R15D
            movsxd R9,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM3,QWORD PTR [RBX+R15*8]
            movss DWORD PTR [RDI+12],XMM3
            movzx R9D,BYTE PTR [RAX+R9*1]
            mov R15D,DWORD PTR [RSP+24]
            pxor XMM3,XMM3
            cvtsd2ss XMM4,QWORD PTR [RBX+R9*8]
            cmp R15D,EDX
            mov R9D,R15D
            cmovg R9D,EDX
            movss DWORD PTR [RSI+12],XMM4
            add R9D,ECX
            pxor XMM4,XMM4
            lea R9D,DWORD PTR [R9+R9*2]
            movsxd R15,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM5,QWORD PTR [RBX+R15*8]
            lea R15D,DWORD PTR [R9+1]
            movss DWORD PTR [R8+16],XMM5
            add R9D,2
            pxor XMM5,XMM5
            movsxd R15,R15D
            movsxd R9,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM6,QWORD PTR [RBX+R15*8]
            movss DWORD PTR [RDI+16],XMM6
            movzx R9D,BYTE PTR [RAX+R9*1]
            mov R15D,DWORD PTR [RSP+28]
            pxor XMM6,XMM6
            cvtsd2ss XMM7,QWORD PTR [RBX+R9*8]
            cmp R15D,EDX
            mov R9D,R15D
            cmovg R9D,EDX
            movss DWORD PTR [RSI+16],XMM7
            add R9D,ECX
            pxor XMM7,XMM7
            lea R9D,DWORD PTR [R9+R9*2]
            movsxd R15,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM0,QWORD PTR [RBX+R15*8]
            lea R15D,DWORD PTR [R9+1]
            movss DWORD PTR [R8+20],XMM0
            add R9D,2
            pxor XMM0,XMM0
            movsxd R15,R15D
            movsxd R9,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM1,QWORD PTR [RBX+R15*8]
            movss DWORD PTR [RDI+20],XMM1
            movzx R9D,BYTE PTR [RAX+R9*1]
            mov R15D,DWORD PTR [RSP+32]
            cvtsd2ss XMM2,QWORD PTR [RBX+R9*8]
            cmp R15D,EDX
            mov R9D,R15D
            cmovg R9D,EDX
            movss DWORD PTR [RSI+20],XMM2
            add R9D,ECX
            lea R9D,DWORD PTR [R9+R9*2]
            movsxd R15,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM3,QWORD PTR [RBX+R15*8]
            lea R15D,DWORD PTR [R9+1]
            movss DWORD PTR [R8+24],XMM3
            add R9D,2
            cmp EBP,EDX
            movsxd R15,R15D
            movsxd R9,R9D
            movzx R15D,BYTE PTR [RAX+R15*1]
            cvtsd2ss XMM4,QWORD PTR [RBX+R15*8]
            movss DWORD PTR [RDI+24],XMM4
            movzx R9D,BYTE PTR [RAX+R9*1]
            cvtsd2ss XMM5,QWORD PTR [RBX+R9*8]
            mov R9D,EDX
            movss DWORD PTR [RSI+24],XMM5
            cmovle R9D,EBP
            add R10D,1
            add R8,32
            add ECX,R9D
            add RDI,32
            add RSI,32
            lea ECX,DWORD PTR [RCX+RCX*2]
            movsxd R9,ECX
            movzx R9D,BYTE PTR [RAX+R9*1]
            cvtsd2ss XMM6,QWORD PTR [RBX+R9*8]
            lea R9D,DWORD PTR [RCX+1]
            movss DWORD PTR [R8-4],XMM6
            add ECX,2
            movsxd R9,R9D
            movsxd RCX,ECX
            movzx R9D,BYTE PTR [RAX+R9*1]
            cvtsd2ss XMM7,QWORD PTR [RBX+R9*8]
            movss DWORD PTR [RDI-4],XMM7
            movzx ECX,BYTE PTR [RAX+RCX*1]
            cvtsd2ss XMM0,QWORD PTR [RBX+RCX*8]
            movss DWORD PTR [RSI-4],XMM0
            cmp DWORD PTR [RSP+8],R10D
            jne .L_418200

            mov RDX,QWORD PTR [RSP+48]
            mov RBP,QWORD PTR [RSP+56]
            mov ESI,8
            mov EDI,8
            call .L_434570
.L_418546:

            add DWORD PTR [RSP+36],1
            mov EAX,DWORD PTR [RBP+40]
            mov ESI,DWORD PTR [RSP+36]
            add DWORD PTR [RSP+68],1
            add QWORD PTR [RSP+40],24
            cmp EAX,ESI
            jg .L_418060

            mov EDX,DWORD PTR [RBP+44]
.L_418568:

            add DWORD PTR [RSP+64],1
            mov EDI,DWORD PTR [RSP+64]
            cmp EDI,EDX
            jl .L_418030
.L_418579:

            mov RAX,QWORD PTR [RSP+104]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41860d

            add RSP,120
.L_418591:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4185a0:

            add R15,24
            cmp R15,R13
            jne .L_418140

            jmp .L_41815a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4185b8:

            mov RDI,RDX
            call _ZdlPv@PLT

            jmp .L_41816d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4185c8:

            mov RCX,QWORD PTR [RSP+72]
            mov EDX,3
            mov RDI,R12
            sub RDX,RAX
.L_4185d8:

            call .L_418db0
.L_4185dd:

            mov RDX,QWORD PTR [RSP+80]
            jmp .L_418164
.L_4185e7:

            add R15,24
            cmp R15,RBX
            jne .L_417f7d

            jmp .L_417ffd
.L_4185f9:

            mov RSI,RDX
            lea RDI,QWORD PTR [RDI+96]
            sub RSI,RCX
.L_418603:

            call .L_418a80

            jmp .L_418001
.L_41860d:

            call __stack_chk_fail@PLT
.L_418612:

            mov RDI,QWORD PTR [RSP+80]
            mov RBX,RAX
            test RDI,RDI
            je .L_418624

            call _ZdlPv@PLT
.L_418624:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41862c:

            nop
            nop
            nop
            nop
.L_418630:

            push R15
            lea RAX,QWORD PTR [RIP+.L_643d60]
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,24
.L_418648:

            mov QWORD PTR [RDI],RAX
            mov RDI,QWORD PTR [RDI+176]
            test RDI,RDI
            je .L_41865c

            call _ZdlPv@PLT
.L_41865c:

            mov RAX,QWORD PTR [R13+104]
            mov RBP,QWORD PTR [R13+96]
            cmp RAX,RBP
            je .L_41872c

            lea R12,QWORD PTR [RBP+24]
            movabs R14,768614336404564651
            movabs RDX,2305843009213693951
            mov QWORD PTR [RSP],R14
            mov QWORD PTR [RSP+8],RDX
            sub RAX,R12
            shr RAX,3
            imul RAX,R14
            and RAX,RDX
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            lea R15,QWORD PTR [RBP+RAX*8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4186b0:

            mov RDX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RBP]
            cmp RDX,RDI
            je .L_418705

            lea R14,QWORD PTR [RDI+24]
            sub RDX,R14
            shr RDX,3
            imul RDX,QWORD PTR [RSP]
            and RDX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RDX+RDX*2+3]
            lea RBX,QWORD PTR [RDI+RDX*8]
            jmp .L_4186f1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4186e0:

            call _ZdlPv@PLT

            cmp RBX,R14
            mov RDI,R14
            je .L_418701
.L_4186ed:

            add R14,24
.L_4186f1:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_4186e0

            cmp R14,RBX
            mov RDI,R14
            jne .L_4186ed
.L_418701:

            mov RDI,QWORD PTR [RBP]
.L_418705:

            test RDI,RDI
            je .L_418720

            call _ZdlPv@PLT

            cmp R15,R12
            mov RBP,R12
            je .L_418728
.L_418717:

            add R12,24
            jmp .L_4186b0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418720:

            cmp R12,R15
            mov RBP,R12
            jne .L_418717
.L_418728:

            mov RBP,QWORD PTR [R13+96]
.L_41872c:

            test RBP,RBP
            je .L_418739

            mov RDI,RBP
            call _ZdlPv@PLT
.L_418739:

            mov RAX,QWORD PTR [R13+80]
            mov RDI,QWORD PTR [R13+72]
            cmp RAX,RDI
            je .L_418785

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_418771
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418760:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_418781
.L_41876d:

            add RBX,24
.L_418771:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_418760

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_41876d
.L_418781:

            mov RDI,QWORD PTR [R13+72]
.L_418785:

            test RDI,RDI
            je .L_41878f

            call _ZdlPv@PLT
.L_41878f:

            mov RAX,QWORD PTR [R13+56]
            mov RDI,QWORD PTR [R13+48]
            cmp RAX,RDI
            je .L_4187d5

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_4187c1
          .byte 0x66
          .byte 0x90
.L_4187b0:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_4187d1
.L_4187bd:

            add RBX,24
.L_4187c1:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_4187b0

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_4187bd
.L_4187d1:

            mov RDI,QWORD PTR [R13+48]
.L_4187d5:

            test RDI,RDI
            je .L_4187df

            call _ZdlPv@PLT
.L_4187df:

            add RSP,24
.L_4187e3:

            mov RDI,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp _ZdlPv@PLT
.L_4187f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418800:

            push R15
            lea RAX,QWORD PTR [RIP+.L_643d60]
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,24
.L_418818:

            mov QWORD PTR [RDI],RAX
            mov RDI,QWORD PTR [RDI+176]
            test RDI,RDI
            je .L_41882c

            call _ZdlPv@PLT
.L_41882c:

            mov RAX,QWORD PTR [R13+104]
            mov RBP,QWORD PTR [R13+96]
            cmp RAX,RBP
            je .L_4188fc

            lea R12,QWORD PTR [RBP+24]
            movabs R14,768614336404564651
            movabs RDX,2305843009213693951
            mov QWORD PTR [RSP],R14
            mov QWORD PTR [RSP+8],RDX
            sub RAX,R12
            shr RAX,3
            imul RAX,R14
            and RAX,RDX
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            lea R15,QWORD PTR [RBP+RAX*8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418880:

            mov RDX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RBP]
            cmp RDX,RDI
            je .L_4188d5

            lea R14,QWORD PTR [RDI+24]
            sub RDX,R14
            shr RDX,3
            imul RDX,QWORD PTR [RSP]
            and RDX,QWORD PTR [RSP+8]
            lea RDX,QWORD PTR [RDX+RDX*2+3]
            lea RBX,QWORD PTR [RDI+RDX*8]
            jmp .L_4188c1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4188b0:

            call _ZdlPv@PLT

            cmp RBX,R14
            mov RDI,R14
            je .L_4188d1
.L_4188bd:

            add R14,24
.L_4188c1:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_4188b0

            cmp R14,RBX
            mov RDI,R14
            jne .L_4188bd
.L_4188d1:

            mov RDI,QWORD PTR [RBP]
.L_4188d5:

            test RDI,RDI
            je .L_4188f0

            call _ZdlPv@PLT

            cmp R15,R12
            mov RBP,R12
            je .L_4188f8
.L_4188e7:

            add R12,24
            jmp .L_418880
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4188f0:

            cmp R12,R15
            mov RBP,R12
            jne .L_4188e7
.L_4188f8:

            mov RBP,QWORD PTR [R13+96]
.L_4188fc:

            test RBP,RBP
            je .L_418909

            mov RDI,RBP
            call _ZdlPv@PLT
.L_418909:

            mov RAX,QWORD PTR [R13+80]
            mov RDI,QWORD PTR [R13+72]
            cmp RAX,RDI
            je .L_418955

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_418941
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418930:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_418951
.L_41893d:

            add RBX,24
.L_418941:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_418930

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_41893d
.L_418951:

            mov RDI,QWORD PTR [R13+72]
.L_418955:

            test RDI,RDI
            je .L_41895f

            call _ZdlPv@PLT
.L_41895f:

            mov RAX,QWORD PTR [R13+56]
            mov RDI,QWORD PTR [R13+48]
            cmp RAX,RDI
            je .L_4189a5

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_418991
          .byte 0x66
          .byte 0x90
.L_418980:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_4189a1
.L_41898d:

            add RBX,24
.L_418991:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_418980

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_41898d
.L_4189a1:

            mov RDI,QWORD PTR [R13+48]
.L_4189a5:

            test RDI,RDI
            je .L_4189c0

            add RSP,24
.L_4189ae:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp _ZdlPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4189c0:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4189cf:

            nop
.L_4189d0:

            mov RDX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI]
            cmp RDX,RAX
            je .L_418a38

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_4189e3:

            lea RBX,QWORD PTR [RAX+24]
            sub RDX,RBX
            shr RDX,3
            lea RBP,QWORD PTR [RAX+RDX*8+24]
            jmp .L_418a09
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4189f8:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RAX,RBX
            je .L_418a19
.L_418a05:

            add RBX,24
.L_418a09:

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            jne .L_4189f8

            cmp RBX,RBP
            mov RAX,RBX
            jne .L_418a05
.L_418a19:

            mov RAX,QWORD PTR [R12]
            test RAX,RAX
            je .L_418a30

            pop RBX
.L_418a23:

            pop RBP
            pop R12
            mov RDI,RAX
            jmp _ZdlPv@PLT
          .byte 0x66
          .byte 0x90
.L_418a30:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418a38:

            test RAX,RAX
            je .L_418a48

            mov RDI,RAX
            jmp _ZdlPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418a48:

            ret 
.L_418a4a:
          .string " BA[100.00%%] D[%6.4f]"
.L_418a61:
          .string "vector::_M_default_append"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418a80:

            test RSI,RSI
            je .L_418ae0

            mov RCX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            movabs RDX,-6148914691236517205
            sub RAX,RCX
            sar RAX,3
            imul RAX,RDX
            cmp RAX,RSI
            jb .L_418af8

            mov RDX,RSI
            mov RAX,RCX
.L_418aad:

            test RAX,RAX
            je .L_418ae8
.L_418ab2:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            add RAX,24
            mov QWORD PTR [RAX-8],0
            sub RDX,1
            jne .L_418aad
.L_418ad3:

            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RAX,QWORD PTR [RCX+RAX*8]
            mov QWORD PTR [RDI+8],RAX
            ret 
.L_418ae0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418ae8:

            sub RDX,1
            je .L_418ad3

            mov EAX,24
            jmp .L_418ab2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418af8:

            push R15
.L_418afa:

            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RCX
            sub RSP,40
.L_418b0c:

            mov RBP,QWORD PTR [RDI]
            mov QWORD PTR [RSP+8],RSI
            sub RBX,RBP
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            movabs RDX,768614336404564650
            mov RDI,RAX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,RDX
            sub RAX,RDI
            cmp RSI,RAX
            ja .L_418d88

            mov RDI,RSI
            mov RSI,QWORD PTR [RSP+16]
            cmp RDI,RSI
            mov RAX,RSI
            cmovae RAX,RDI
            add RAX,RSI
            jb .L_418d68

            cmp RAX,RDX
            ja .L_418d68

            test RAX,RAX
            je .L_418d74

            lea R12,QWORD PTR [RAX+RAX*2]
            shl R12,3
.L_418b78:

            mov RDI,R12
            call _Znwm@PLT

            mov RCX,QWORD PTR [R13+8]
            mov R15,RAX
            mov RBP,QWORD PTR [R13]
            lea RAX,QWORD PTR [RAX+R12*1]
            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],RAX
.L_418b99:

            lea RAX,QWORD PTR [R15+RBX*1]
.L_418b9d:

            test RAX,RAX
            je .L_418d38
.L_418ba6:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            add RAX,24
            mov QWORD PTR [RAX-8],0
            sub RDX,1
            jne .L_418b9d
.L_418bc7:

            cmp RBP,RCX
            je .L_418cf5

            lea R12,QWORD PTR [RBP+24]
            mov RDX,RBP
            mov RAX,R15
            sub RCX,R12
            shr RCX,3
            lea R14,QWORD PTR [RCX*8+24]
            lea RDI,QWORD PTR [R15+R14*1]
.L_418bed:

            test RAX,RAX
            je .L_418d50
.L_418bf6:

            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            add RAX,24
            mov QWORD PTR [RAX-24],0
            mov RCX,QWORD PTR [RDX]
            add RDX,24
            mov QWORD PTR [RAX-24],RCX
            mov RSI,QWORD PTR [RDX-16]
            mov QWORD PTR [RDX-24],0
            mov RCX,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-16],RSI
            mov RSI,QWORD PTR [RDX-8]
            mov QWORD PTR [RDX-16],RCX
            mov RCX,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-8],RSI
            mov QWORD PTR [RDX-8],RCX
            cmp RDI,RAX
            jne .L_418bed
.L_418c4a:

            lea RAX,QWORD PTR [RBP+R14*1]
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
            nop
.L_418c58:

            mov RDX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RBP]
            cmp RDX,RDI
            je .L_418cc5

            lea R14,QWORD PTR [RDI+24]
            movabs RAX,768614336404564651
            sub RDX,R14
            shr RDX,3
            imul RDX,RAX
            movabs RAX,2305843009213693951
            and RDX,RAX
            lea RDX,QWORD PTR [RDX+RDX*2+3]
            lea RBX,QWORD PTR [RDI+RDX*8]
            jmp .L_418cb1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418ca0:

            call _ZdlPv@PLT

            cmp RBX,R14
            mov RDI,R14
            je .L_418cc1
.L_418cad:

            add R14,24
.L_418cb1:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_418ca0

            cmp RBX,R14
            mov RDI,R14
            jne .L_418cad
.L_418cc1:

            mov RDI,QWORD PTR [RBP]
.L_418cc5:

            test RDI,RDI
            je .L_418ce8

            call _ZdlPv@PLT

            cmp R12,QWORD PTR [RSP]
            mov RBP,R12
            je .L_418cf1
.L_418cd8:

            add R12,24
            jmp .L_418c58
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418ce8:

            cmp R12,QWORD PTR [RSP]
            mov RBP,R12
            jne .L_418cd8
.L_418cf1:

            mov RCX,QWORD PTR [R13]
.L_418cf5:

            test RCX,RCX
            je .L_418d02

            mov RDI,RCX
            call _ZdlPv@PLT
.L_418d02:

            mov RSI,QWORD PTR [RSP+8]
            add RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [R13],R15
            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RAX,QWORD PTR [R15+RAX*8]
            mov QWORD PTR [R13+8],RAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [R13+16],RAX
            add RSP,40
.L_418d29:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418d38:

            sub RDX,1
            je .L_418bc7

            mov EAX,24
            jmp .L_418ba6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418d50:

            add RDX,24
            cmp RDI,24
            je .L_418c4a

            mov EAX,24
            jmp .L_418bf6
.L_418d68:

            mov R12,-16
            jmp .L_418b78
.L_418d74:

            mov QWORD PTR [RSP+24],0
            xor R15D,R15D
            mov RDX,RDI
            jmp .L_418b99
.L_418d88:

            lea RDI,QWORD PTR [RIP+.L_418a61]
            call _ZSt20__throw_length_errorPKc@PLT
.L_418d94:
          .string "vector::_M_fill_insert"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418db0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
.L_418dbe:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            test RDX,RDX
            mov QWORD PTR [RSP],RSI
            je .L_419040

            mov RBX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            mov R12,RDX
            movabs RDX,-6148914691236517205
            mov R15,RDI
            mov RBP,RCX
            mov R13,RSI
            sub RAX,RBX
            sar RAX,3
            imul RAX,RDX
            cmp RAX,R12
            jb .L_419068

            mov RAX,QWORD PTR [RCX+8]
            mov RSI,QWORD PTR [RCX]
            mov QWORD PTR [RSP+48],RDI
            mov QWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            mov R14,RAX
            sub R14,RSI
            mov RDX,R14
            sar RDX,2
            test RDX,RDX
            je .L_419540

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_4195ad

            mov RDI,R14
.L_418e60:

            call _Znwm@PLT
.L_418e65:

            mov RCX,RAX
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov RBX,QWORD PTR [R15+8]
            mov RBP,RAX
            sub RBP,RSI
.L_418e7a:

            add R14,RCX
            cmp RSI,RAX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],RCX
            mov QWORD PTR [RSP+72],R14
            je .L_418e9f

            mov RDI,RCX
            mov RDX,RBP
            call memmove@PLT

            mov RCX,RAX
.L_418e9f:

            mov RAX,RBX
            sub RAX,QWORD PTR [RSP]
            movabs RDX,-6148914691236517205
            add RCX,RBP
            mov QWORD PTR [RSP+64],RCX
            mov QWORD PTR [RSP+8],RAX
            sar RAX,3
            imul RAX,RDX
            cmp R12,RAX
            jb .L_419320

            sub R12,RAX
            mov RBP,RBX
            je .L_418f7e

            nop
            nop
            nop
            nop
            nop
            nop
.L_418ee0:

            test RBP,RBP
            je .L_418f70

            mov R14,QWORD PTR [RSP+64]
            sub R14,QWORD PTR [RSP+56]
            xor ECX,ECX
            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP+16],0
            mov RAX,R14
            sar RAX,2
            test RAX,RAX
            je .L_418f37

            movabs RDI,4611686018427387903
            cmp RAX,RDI
            ja .L_4195b2

            mov RDI,R14
.L_418f2f:

            call _Znwm@PLT
.L_418f34:

            mov RCX,RAX
.L_418f37:

            add R14,RCX
            mov QWORD PTR [RBP],RCX
            mov QWORD PTR [RBP+8],RCX
            mov QWORD PTR [RBP+16],R14
            mov RAX,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+56]
            mov R14,RAX
            sub R14,RSI
            cmp RAX,RSI
            je .L_418f69

            mov RDI,RCX
            mov RDX,R14
            call memmove@PLT

            mov RCX,RAX
.L_418f69:

            add RCX,R14
            mov QWORD PTR [RBP+8],RCX
.L_418f70:

            add RBP,24
            sub R12,1
            jne .L_418ee0
.L_418f7e:

            mov RCX,QWORD PTR [RSP+8]
            mov QWORD PTR [R15+8],RBP
            add RCX,RBP
            cmp QWORD PTR [RSP],RBX
            je .L_419568

            mov RAX,QWORD PTR [RSP]
            mov RDI,RBX
            lea RDX,QWORD PTR [RAX+24]
            sub RDI,RDX
            mov RDX,RDI
            shr RDX,3
            lea RSI,QWORD PTR [RBP+RDX*8+24]
.L_418fae:

            test RBP,RBP
            je .L_4194f0
.L_418fb7:

            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP+16],0
            add RBP,24
            mov QWORD PTR [RBP-24],0
            mov RDX,QWORD PTR [RAX]
            add RAX,24
            mov QWORD PTR [RBP-24],RDX
            mov RDI,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-24],0
            mov RDX,QWORD PTR [RBP-16]
            mov QWORD PTR [RBP-16],RDI
            mov RDI,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-16],RDX
            mov RDX,QWORD PTR [RBP-8]
            mov QWORD PTR [RBP-8],RDI
            mov QWORD PTR [RAX-8],RDX
            cmp RSI,RBP
            jne .L_418fae
.L_41900b:

            lea RBP,QWORD PTR [RSP+56]
            mov QWORD PTR [R15+8],RCX
            nop
            nop
            nop
            nop
.L_419018:

            mov RSI,RBP
            mov RDI,R13
.L_41901e:

            call .L_414440
.L_419023:

            add R13,24
            cmp R13,RBX
            jne .L_419018
.L_41902c:

            mov RDI,QWORD PTR [RSP+56]
            test RDI,RDI
            je .L_419040

            call _ZdlPv@PLT

            nop
            nop
            nop
            nop
            nop
.L_419040:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41959c

            add RSP,104
.L_419058:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419068:

            mov RAX,QWORD PTR [RDI]
            sub RBX,RAX
            sar RBX,3
            imul RBX,RDX
            movabs RDX,768614336404564650
            mov RCX,RDX
            sub RCX,RBX
            cmp R12,RCX
            ja .L_4195a1

            cmp R12,RBX
            mov RCX,RBX
            mov RDI,RSI
            cmovae RCX,R12
            add RBX,RCX
            setb CL
            sub RDI,RAX
            mov QWORD PTR [RSP+16],RBX
            movzx ECX,CL
            mov QWORD PTR [RSP+32],RDI
            test RCX,RCX
            jne .L_419480

            cmp RBX,RDX
            ja .L_419480

            test RBX,RBX
            je .L_419550

            lea RAX,QWORD PTR [RBX+RBX*2]
            shl RAX,3
            mov QWORD PTR [RSP+16],RAX
            mov RDI,RAX
.L_4190dd:

            call _Znwm@PLT
.L_4190e2:

            mov QWORD PTR [RSP+8],RAX
.L_4190e7:

            add RAX,QWORD PTR [RSP+32]
            mov R14,R12
            mov QWORD PTR [RSP+40],RAX
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419100:

            test RBX,RBX
            je .L_41919d

            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov R13,RAX
            sub R13,RSI
            mov RDX,R13
            mov R8,R13
            sar RDX,2
            test RDX,RDX
            je .L_41916b

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_419571

            mov RDI,R13
.L_419155:

            call _Znwm@PLT
.L_41915a:

            mov RCX,RAX
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov R8,RAX
            sub R8,RSI
.L_41916b:

            add R13,RCX
            cmp RAX,RSI
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R13
            je .L_419196

            mov RDX,R8
            mov RDI,RCX
            mov QWORD PTR [RSP+24],R8
            call memmove@PLT

            mov R8,QWORD PTR [RSP+24]
            mov RCX,RAX
.L_419196:

            add RCX,R8
            mov QWORD PTR [RBX+8],RCX
.L_41919d:

            add RBX,24
            sub R14,1
            jne .L_419100

            mov RSI,QWORD PTR [R15]
            cmp QWORD PTR [RSP],RSI
            lea RDX,QWORD PTR [R12+R12*2]
            mov RDI,QWORD PTR [R15+8]
            lea RCX,QWORD PTR [RDX*8]
            je .L_419510

            mov RAX,QWORD PTR [RSP]
            lea RBP,QWORD PTR [RSI+24]
            mov RBX,QWORD PTR [RSP+8]
            mov RDX,RSI
            sub RAX,RBP
            shr RAX,3
            lea R10,QWORD PTR [RBX+RAX*8+24]
            mov RAX,RBX
.L_4191e7:

            test RAX,RAX
            je .L_4194b0
.L_4191f0:

            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            add RAX,24
            mov QWORD PTR [RAX-24],0
            mov R8,QWORD PTR [RDX]
            add RDX,24
            mov QWORD PTR [RAX-24],R8
            mov R9,QWORD PTR [RDX-16]
            mov QWORD PTR [RDX-24],0
            mov R8,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-16],R9
            mov R9,QWORD PTR [RDX-8]
            mov QWORD PTR [RDX-16],R8
            mov R8,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-8],R9
            mov QWORD PTR [RDX-8],R8
            cmp R10,RAX
            jne .L_4191e7
.L_419244:

            cmp QWORD PTR [RSP],RDI
            lea RDX,QWORD PTR [R10+RCX*1]
            je .L_419530
.L_419252:

            mov RAX,QWORD PTR [RSP]
            mov RBX,RDI
            lea RCX,QWORD PTR [RAX+24]
            sub RBX,RCX
            mov RCX,RBX
            shr RCX,3
            lea RBX,QWORD PTR [RDX+RCX*8+24]
.L_41926c:

            test RDX,RDX
            je .L_419498
.L_419275:

            mov RCX,QWORD PTR [RAX]
            add RDX,24
            mov QWORD PTR [RAX],0
            add RAX,24
            mov QWORD PTR [RDX-24],RCX
            mov RCX,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-16],0
            mov QWORD PTR [RDX-16],RCX
            mov RCX,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-8],0
            mov QWORD PTR [RDX-8],RCX
            cmp RBX,RDX
            jne .L_41926c
.L_4192b0:

            cmp RSI,RDI
            je .L_4192f4

            lea RBP,QWORD PTR [RSI+24]
.L_4192b9:

            sub RDI,RBP
            shr RDI,3
            lea R12,QWORD PTR [RSI+RDI*8+24]
            jmp .L_4192e1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4192d0:

            call _ZdlPv@PLT

            cmp RBP,R12
            mov RSI,RBP
            je .L_4192f1
.L_4192dd:

            add RBP,24
.L_4192e1:

            mov RDI,QWORD PTR [RSI]
            test RDI,RDI
            jne .L_4192d0

            cmp RBP,R12
            mov RSI,RBP
            jne .L_4192dd
.L_4192f1:

            mov RDI,QWORD PTR [R15]
.L_4192f4:

            test RDI,RDI
            je .L_4192fe

            call _ZdlPv@PLT
.L_4192fe:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R15+8],RBX
            mov QWORD PTR [R15],RAX
            add RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [R15+16],RAX
            jmp .L_419040
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419320:

            lea RBP,QWORD PTR [R12+R12*2]
            mov R12,RBX
            shl RBP,3
            sub R12,RBP
            cmp R12,RBX
            je .L_4193ad

            lea RAX,QWORD PTR [R12+24]
            mov RDI,RBX
            mov RDX,R12
            sub RDI,RAX
            mov RAX,RDI
            shr RAX,3
            lea RDI,QWORD PTR [RBX+RAX*8+24]
            mov RAX,RBX
.L_419350:

            test RAX,RAX
            je .L_4194d0
.L_419359:

            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            add RAX,24
            mov QWORD PTR [RAX-24],0
            mov RCX,QWORD PTR [RDX]
            add RDX,24
            mov QWORD PTR [RAX-24],RCX
            mov RSI,QWORD PTR [RDX-16]
            mov QWORD PTR [RDX-24],0
            mov RCX,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-16],RSI
            mov RSI,QWORD PTR [RDX-8]
            mov QWORD PTR [RDX-16],RCX
            mov RCX,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-8],RSI
            mov QWORD PTR [RDX-8],RCX
            cmp RDI,RAX
            jne .L_419350
.L_4193ad:

            lea RAX,QWORD PTR [RBX+RBP*1]
            movabs RDX,-6148914691236517205
            mov QWORD PTR [R15+8],RAX
            mov RAX,R12
            sub RAX,QWORD PTR [RSP]
            mov R14,RAX
            sar R14,3
            imul R14,RDX
            test RAX,RAX
            jle .L_419445

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4193e0:

            sub RBX,24
            sub R12,24
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RDI,QWORD PTR [RBX]
            mov QWORD PTR [RBX],0
            mov RAX,QWORD PTR [R12]
            test RDI,RDI
            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [R12],0
            mov RDX,QWORD PTR [R12+8]
            mov RAX,QWORD PTR [RBX+8]
            mov QWORD PTR [RBX+8],RDX
            mov QWORD PTR [R12+8],RAX
            mov RDX,QWORD PTR [R12+16]
            mov RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBX+16],RDX
            mov QWORD PTR [R12+16],RAX
            je .L_41943f

            call _ZdlPv@PLT
.L_41943f:

            sub R14,1
            jne .L_4193e0
.L_419445:

            mov RAX,QWORD PTR [RSP]
            lea RBX,QWORD PTR [RSP+56]
            add RBP,RAX
            cmp RAX,RBP
            je .L_41902c

            nop
            nop
            nop
            nop
            nop
            nop
.L_419460:

            mov RSI,RBX
            mov RDI,R13
.L_419466:

            call .L_414440
.L_41946b:

            add R13,24
            cmp RBP,R13
            jne .L_419460

            jmp .L_41902c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419480:

            mov QWORD PTR [RSP+16],-16
            mov RDI,QWORD PTR [RSP+16]
            jmp .L_4190dd
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419498:

            add RAX,24
            cmp RBX,24
            je .L_4192b0

            mov EDX,24
            jmp .L_419275
.L_4194b0:

            add RDX,24
            cmp R10,24
            je .L_419244

            mov EAX,24
            jmp .L_4191f0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4194d0:

            add RDX,24
            cmp RDI,24
            je .L_4193ad

            mov EAX,24
            jmp .L_419359
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4194f0:

            add RAX,24
            cmp RSI,24
            je .L_41900b

            mov EBP,24
            jmp .L_418fb7
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419510:

            mov RAX,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP],RDI
            lea RDX,QWORD PTR [RAX+RCX*1]
            mov RBX,RDX
            jne .L_419252

            jmp .L_4192f4
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419530:

            mov RBX,RDX
            jmp .L_4192b9
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419540:

            mov RBP,R14
            xor ECX,ECX
            jmp .L_418e7a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419550:

            mov QWORD PTR [RSP+8],0
            mov RAX,QWORD PTR [RSP+8]
            jmp .L_4190e7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419568:

            mov QWORD PTR [R15+8],RCX
            jmp .L_41902c
.L_419571:

            call _ZSt17__throw_bad_allocv@PLT
.L_419576:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            mov RBP,QWORD PTR [RSP+40]
.L_419583:

            cmp RBP,RBX
            je .L_4195f6

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_419596

            call _ZdlPv@PLT
.L_419596:

            add RBP,24
            jmp .L_419583
.L_41959c:

            call __stack_chk_fail@PLT
.L_4195a1:

            lea RDI,QWORD PTR [RIP+.L_418d94]
.L_4195a8:

            call _ZSt20__throw_length_errorPKc@PLT
.L_4195ad:

            call _ZSt17__throw_bad_allocv@PLT
.L_4195b2:

            call _ZSt17__throw_bad_allocv@PLT
.L_4195b7:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_4195bf:

            cmp RBX,RBP
            je .L_4195d7

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_4195d1

            call _ZdlPv@PLT
.L_4195d1:

            add RBX,24
            jmp .L_4195bf
.L_4195d7:

            call __cxa_rethrow@PLT
.L_4195dc:

            mov RBX,RAX
.L_4195df:

            mov RDI,QWORD PTR [RSP+56]
            test RDI,RDI
            je .L_4195ee

            call _ZdlPv@PLT
.L_4195ee:

            mov RDI,RBX
.L_4195f1:

            call _Unwind_Resume@PLT
.L_4195f6:

            call __cxa_rethrow@PLT
.L_4195fb:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            jmp .L_4195df
.L_419605:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
            call __cxa_begin_catch@PLT

            cmp QWORD PTR [RSP+8],0
            je .L_41962c

            mov RDI,QWORD PTR [RSP+8]
            call _ZdlPv@PLT
.L_419627:

            call __cxa_rethrow@PLT
.L_41962c:

            mov RBX,QWORD PTR [RSP+32]
            movabs RAX,-6148914691236517205
            sar RBX,3
            imul RBX,RAX
            add R12,RBX
            mov RBX,QWORD PTR [RSP+40]
            imul R12,R12,24
.L_41964f:

            cmp R12,RBX
            je .L_419627

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_419661

            call _ZdlPv@PLT
.L_419661:

            add RBX,24
            jmp .L_41964f
.L_419667:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            jmp .L_4195ee
.L_419674:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_419680:
          .string "N7guetzli10ComparatorE"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4196a0:
          .string "N7guetzli21ButteraugliComparatorE"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4196c8:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xf1
          .byte 0x3f
.L_4196d0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_4196d8:
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0xee
          .byte 0x3f
.L_4196e0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xa9
          .byte 0x3f
.L_4196e8:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4196f0:

            push RBP
            push RBX
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+48]
            test RDI,RDI
            je .L_419711

            mov RDX,QWORD PTR [RSI+8]
            mov RSI,QWORD PTR [RSI]
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm@PLT
.L_419711:

            mov RDI,QWORD PTR [RBX+56]
            test RDI,RDI
            je .L_419740

            mov RCX,QWORD PTR [RBP]
            add RSP,8
            lea RDX,QWORD PTR [RIP+.L_419747]
            pop RBX
            pop RBP
            mov ESI,1
            xor EAX,EAX
            jmp __fprintf_chk@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419740:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_419747:
          .string "%s"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419750:

            push RBP
            push RBX
            mov EDI,2048
            sub RSP,24
.L_41975b:

            call _Znam@PLT

            mov RBP,RAX
            shr RAX,3
            mov EDX,EAX
            and EDX,1
            je .L_41989a

            mov QWORD PTR [RBP],0
            mov ESI,10
            mov EAX,1
.L_419784:

            mov DWORD PTR [RSP+12],EAX
            mov EDX,EDX
            movd XMM4,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RBP+RDX*8]
            movdqa XMM1,XMMWORD PTR [RIP+.L_419a70]
            pshufd XMM0,XMM4,0
            movapd XMM2,XMMWORD PTR [RIP+.L_43e980-151280]
            paddd XMM1,XMM0
            cvtdq2pd XMM3,XMM1
            pshufd XMM1,XMM1,238
            paddd XMM0,XMMWORD PTR [RIP+.L_419a80]
            cvtdq2pd XMM1,XMM1
            divpd XMM1,XMM2
            divpd XMM3,XMM2
            movaps XMMWORD PTR [RDX+16],XMM1
            cvtdq2pd XMM1,XMM0
            pshufd XMM0,XMM0,238
            cvtdq2pd XMM0,XMM0
            divpd XMM0,XMM2
            movaps XMMWORD PTR [RDX],XMM3
            divpd XMM1,XMM2
            movaps XMMWORD PTR [RDX+48],XMM0
            pxor XMM0,XMM0
            movaps XMMWORD PTR [RDX+32],XMM1
            lea EDX,DWORD PTR [RAX+8]
            movsxd RCX,EDX
            cvtsi2sd XMM0,EDX
            lea EDX,DWORD PTR [RAX+9]
            add EAX,10
            movsd XMM1,QWORD PTR [RIP+.L_419aa0]
            cmp ESI,10
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+RCX*8],XMM0
            pxor XMM0,XMM0
            movsxd RCX,EDX
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+RCX*8],XMM0
            je .L_419840

            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+80],XMM0
.L_419840:

            mov EBX,11
            nop
            nop
            nop
.L_419848:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_419aa8]
            cvtsi2sd XMM0,EBX
            divsd XMM0,QWORD PTR [RIP+.L_419ab0]
            addsd XMM0,QWORD PTR [RIP+.L_419ab8]
            divsd XMM0,QWORD PTR [RIP+.L_419ac0]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_419ab0]
            movsd QWORD PTR [RBP+RBX*8],XMM0
            add RBX,1
            cmp RBX,256
            jne .L_419848

            add RSP,24
.L_419894:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
.L_41989a:

            mov ESI,11
            xor EAX,EAX
            jmp .L_419784
.L_4198a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4198b0:

            push RBP
            push RBX
            sub RSP,24
            movzx EAX,BYTE PTR [RIP+.L_644310]
            test AL,AL
            je .L_4198d8
.L_4198c1:

            mov RBP,QWORD PTR [RIP+.L_644318]
            add RSP,24
            pop RBX
            mov RAX,RBP
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4198d8:

            lea RDI,QWORD PTR [RIP+.L_644310]
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            je .L_4198c1

            mov EDI,2048
.L_4198ed:

            call _Znam@PLT
.L_4198f2:

            mov RBP,RAX
            shr RAX,3
            mov EDX,EAX
            and EDX,1
            je .L_419a45

            mov QWORD PTR [RBP],0
            mov ESI,10
            mov EAX,1
.L_419916:

            mov DWORD PTR [RSP+12],EAX
            mov EDX,EDX
            movd XMM4,DWORD PTR [RSP+12]
            lea RDX,QWORD PTR [RBP+RDX*8]
            movdqa XMM1,XMMWORD PTR [RIP+.L_419a70]
            pshufd XMM0,XMM4,0
            movapd XMM2,XMMWORD PTR [RIP+.L_43e980-151280]
            paddd XMM1,XMM0
            cvtdq2pd XMM3,XMM1
            pshufd XMM1,XMM1,238
            paddd XMM0,XMMWORD PTR [RIP+.L_419a80]
            cvtdq2pd XMM1,XMM1
            divpd XMM1,XMM2
            divpd XMM3,XMM2
            movaps XMMWORD PTR [RDX+16],XMM1
            cvtdq2pd XMM1,XMM0
            pshufd XMM0,XMM0,238
            cvtdq2pd XMM0,XMM0
            divpd XMM0,XMM2
            movaps XMMWORD PTR [RDX],XMM3
            divpd XMM1,XMM2
            movaps XMMWORD PTR [RDX+48],XMM0
            pxor XMM0,XMM0
            movaps XMMWORD PTR [RDX+32],XMM1
            lea EDX,DWORD PTR [RAX+8]
            movsxd RCX,EDX
            cvtsi2sd XMM0,EDX
            lea EDX,DWORD PTR [RAX+9]
            add EAX,10
            movsd XMM1,QWORD PTR [RIP+.L_419aa0]
            cmp ESI,10
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+RCX*8],XMM0
            pxor XMM0,XMM0
            movsxd RCX,EDX
            cvtsi2sd XMM0,EDX
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+RCX*8],XMM0
            je .L_4199d2

            pxor XMM0,XMM0
            cvtsi2sd XMM0,EAX
            divsd XMM0,XMM1
            movsd QWORD PTR [RBP+80],XMM0
.L_4199d2:

            mov EBX,11
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4199e0:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_419aa8]
            cvtsi2sd XMM0,EBX
            divsd XMM0,QWORD PTR [RIP+.L_419ab0]
            addsd XMM0,QWORD PTR [RIP+.L_419ab8]
            divsd XMM0,QWORD PTR [RIP+.L_419ac0]
            call pow@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_419ab0]
            movsd QWORD PTR [RBP+RBX*8],XMM0
            add RBX,1
            cmp RBX,256
            jne .L_4199e0

            lea RDI,QWORD PTR [RIP+.L_644310]
            mov QWORD PTR [RIP+.L_644318],RBP
            call __cxa_guard_release@PLT

            add RSP,24
.L_419a3f:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
.L_419a45:

            mov ESI,11
            xor EAX,EAX
            jmp .L_419916
.L_419a51:

            lea RDI,QWORD PTR [RIP+.L_644310]
            mov RBX,RAX
            call __cxa_guard_abort@PLT

            mov RDI,RBX
.L_419a63:

            call _Unwind_Resume@PLT
.L_419a68:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419a70:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add AL,BYTE PTR [RAX]
            add BYTE PTR [RAX],AL
            add EAX,DWORD PTR [RAX]
            add BYTE PTR [RAX],AL
.L_419a80:

            add AL,0
            add BYTE PTR [RAX],AL
            add EAX,100663296
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],AL
            add BYTE PTR [RAX],AL
            add BH,DL
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0x29
          .byte 0x40
          .byte 0xd7
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0x29
          .byte 0x40
.L_419aa0:
          .byte 0xd7
          .byte 0xa3
          .byte 0x70
          .byte 0x3d
          .byte 0xa
          .byte 0xd7
          .byte 0x29
          .byte 0x40
.L_419aa8:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x3
          .byte 0x40
.L_419ab0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
.L_419ab8:
          .byte 0x29
          .byte 0x5c
          .byte 0x8f
          .byte 0xc2
          .byte 0xf5
          .byte 0x28
          .byte 0xac
          .byte 0x3f
.L_419ac0:
          .byte 0xe1
          .byte 0x7a
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0xf0
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419ad0:

            mov RCX,QWORD PTR [RDI+128]
            mov RDX,QWORD PTR [RDI+136]
            xor EAX,EAX
            sub RDX,RCX
            cmp RDX,192
            je .L_419af0
.L_419aec:

            ret 
          .byte 0x66
          .byte 0x90
.L_419af0:

            cmp DWORD PTR [RDI+12],2
            jne .L_419aec

            cmp DWORD PTR [RDI+16],2
            jne .L_419aec

            cmp DWORD PTR [RCX+4],2
            jne .L_419aec

            cmp DWORD PTR [RCX+8],2
            jne .L_419aec

            cmp DWORD PTR [RCX+68],1
            jne .L_419aec

            cmp DWORD PTR [RCX+72],1
            jne .L_419aec

            cmp DWORD PTR [RCX+132],1
            jne .L_419aec

            cmp DWORD PTR [RCX+136],1
            sete AL
            ret 
.L_419b28:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419b30:

            mov RCX,QWORD PTR [RDI+128]
            mov RDX,QWORD PTR [RDI+136]
            xor EAX,EAX
            sub RDX,RCX
            cmp RDX,192
            je .L_419b50
.L_419b4c:

            ret 
          .byte 0x66
          .byte 0x90
.L_419b50:

            cmp DWORD PTR [RDI+12],1
            jne .L_419b4c

            cmp DWORD PTR [RDI+16],1
            jne .L_419b4c

            cmp DWORD PTR [RCX+4],1
            jne .L_419b4c

            cmp DWORD PTR [RCX+8],1
            jne .L_419b4c

            cmp DWORD PTR [RCX+68],1
            jne .L_419b4c

            cmp DWORD PTR [RCX+72],1
            jne .L_419b4c

            cmp DWORD PTR [RCX+132],1
            jne .L_419b4c

            cmp DWORD PTR [RCX+136],1
            sete AL
            ret 
.L_419b88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419b90:

            push R13
            push R12
            movabs RAX,4294967297
            push RBP
            push RBX
            mov RBX,RDX
            sub RSP,8
.L_419ba7:

            mov DWORD PTR [RDX],EDI
            mov DWORD PTR [RDX+4],ESI
            add EDI,7
            add ESI,7
            mov QWORD PTR [RDX+12],RAX
            sar ESI,3
            sar EDI,3
            mov RCX,QWORD PTR [RDX+80]
            mov DWORD PTR [RDX+20],ESI
            mov DWORD PTR [RDX+24],EDI
            movabs RSI,-3689348814741910323
            mov RDX,QWORD PTR [RDX+88]
            mov RAX,RDX
            sub RAX,RCX
            sar RAX,3
            imul RAX,RSI
            cmp RAX,2
            jbe .L_419df8

            cmp RAX,3
            je .L_419c37

            lea R12,QWORD PTR [RCX+120]
            cmp RDX,R12
            je .L_419c33

            lea RAX,QWORD PTR [RCX+160]
            mov RBP,R12
            sub RDX,RAX
            and RDX,-8
            lea R13,QWORD PTR [RCX+RDX*1+160]
            nop
            nop
            nop
            nop
.L_419c18:

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_419dc0

            add RBP,40
            call _ZdlPv@PLT

            cmp RBP,R13
            jne .L_419c18
.L_419c33:

            mov QWORD PTR [RBX+88],R12
.L_419c37:

            mov R12,QWORD PTR [RBX+136]
            mov RDI,QWORD PTR [RBX+128]
            mov RAX,R12
            sub RAX,RDI
            sar RAX,6
            cmp RAX,2
            jbe .L_419e10

            cmp RAX,3
            je .L_419c99

            lea R13,QWORD PTR [RDI+192]
            cmp R12,R13
            je .L_419c92

            mov RBP,R13
            nop
            nop
.L_419c70:

            mov RDI,QWORD PTR [RBP+40]
            test RDI,RDI
            je .L_419de0

            add RBP,64
            call _ZdlPv@PLT

            cmp R12,RBP
            jne .L_419c70
.L_419c8b:

            mov RDI,QWORD PTR [RBX+128]
.L_419c92:

            mov QWORD PTR [RBX+136],R13
.L_419c99:

            movabs RAX,4294967296
            mov DWORD PTR [RDI+8],1
            mov RDX,QWORD PTR [RDI+40]
            mov QWORD PTR [RDI],RAX
            mov EAX,DWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RBX+20]
            mov QWORD PTR [RDI+16],0
            mov DWORD PTR [RDI+24],EAX
            mov DWORD PTR [RDI+28],ESI
            imul ESI,EAX
            mov RAX,QWORD PTR [RDI+48]
            mov DWORD PTR [RDI+32],ESI
            sub RAX,RDX
            shl ESI,6
            movsxd RSI,ESI
            sar RAX,1
            cmp RAX,RSI
            jb .L_419e70

            jbe .L_419cee

            lea RAX,QWORD PTR [RDX+RSI*2]
            mov QWORD PTR [RDI+48],RAX
.L_419cee:

            movabs RAX,4294967297
            mov DWORD PTR [RDI+72],1
            mov RDX,QWORD PTR [RDI+104]
            mov QWORD PTR [RDI+64],RAX
            mov EAX,DWORD PTR [RBX+24]
            mov ESI,DWORD PTR [RBX+20]
            mov QWORD PTR [RDI+80],1
            mov DWORD PTR [RDI+88],EAX
            mov DWORD PTR [RDI+92],ESI
            imul ESI,EAX
            mov RAX,QWORD PTR [RDI+112]
            mov DWORD PTR [RDI+96],ESI
            sub RAX,RDX
            shl ESI,6
            movsxd RSI,ESI
            sar RAX,1
            cmp RAX,RSI
            jb .L_419e50

            jbe .L_419d44

            lea RAX,QWORD PTR [RDX+RSI*2]
            mov QWORD PTR [RDI+112],RAX
.L_419d44:

            movabs RAX,4294967298
            mov DWORD PTR [RDI+136],1
            mov RDX,QWORD PTR [RDI+168]
            mov QWORD PTR [RDI+128],RAX
            mov ESI,DWORD PTR [RBX+24]
            mov EAX,DWORD PTR [RBX+20]
            mov QWORD PTR [RDI+144],2
            mov DWORD PTR [RDI+152],ESI
            mov DWORD PTR [RDI+156],EAX
            imul ESI,EAX
            mov RAX,QWORD PTR [RDI+176]
            mov DWORD PTR [RDI+160],ESI
            sub RAX,RDX
            shl ESI,6
            movsxd RSI,ESI
            sar RAX,1
            cmp RSI,RAX
            ja .L_419e30

            jae .L_419db5

            lea RAX,QWORD PTR [RDX+RSI*2]
            mov QWORD PTR [RDI+176],RAX
.L_419db5:

            add RSP,8
.L_419db9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_419dc0:

            add RBP,40
            cmp RBP,R13
            jne .L_419c18

            mov QWORD PTR [RBX+88],R12
            jmp .L_419c37
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419de0:

            add RBP,64
            cmp R12,RBP
            jne .L_419c70

            jmp .L_419c8b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419df8:

            mov ESI,3
            lea RDI,QWORD PTR [RBX+80]
            sub RSI,RAX
            call .L_41a310

            jmp .L_419c37
          .byte 0x66
          .byte 0x90
.L_419e10:

            lea RDI,QWORD PTR [RBX+128]
            mov ESI,3
            sub RSI,RAX
            call .L_406830

            mov RDI,QWORD PTR [RBX+128]
            jmp .L_419c99
.L_419e30:

            add RSP,8
.L_419e34:

            sub RSI,RAX
            add RDI,168
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_406b20
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419e50:

            add RDI,104
            sub RSI,RAX
            call .L_406b20

            mov RDI,QWORD PTR [RBX+128]
            jmp .L_419d44
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419e70:

            add RDI,40
            sub RSI,RAX
            call .L_406b20

            mov RDI,QWORD PTR [RBX+128]
            jmp .L_419cee
.L_419e88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419e90:

            push R15
            push R14
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,104
.L_419ea4:

            mov R14,QWORD PTR [RSI+80]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSI+80]
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RSI+88]
            cmp R14,RAX
            je .L_419efa

            lea RDX,QWORD PTR [R14+40]
            mov RBX,R14
            sub RAX,RDX
            shr RAX,3
            lea R12,QWORD PTR [R14+RAX*8+40]
            nop
            nop
            nop
.L_419ee0:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_41a23f

            add RBX,40
            call _ZdlPv@PLT

            cmp RBX,R12
            jne .L_419ee0
.L_419efa:

            mov RAX,QWORD PTR [R13+128]
            cmp QWORD PTR [R13+136],RAX
            mov QWORD PTR [R13+88],R14
            mov QWORD PTR [RSP+8],RAX
            je .L_419fbf

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP],0
            mov DWORD PTR [RSP+20],0
            mov EBX,1
            mov QWORD PTR [RSP+40],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419f40:

            mov RAX,QWORD PTR [RSP]
            shl RAX,6
            add RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+24],RAX
            mov EAX,DWORD PTR [RSP+20]
            test EAX,EAX
            je .L_419fe8

            lea R12D,DWORD PTR [RAX-1]
            mov R14,QWORD PTR [R13+80]
            xor R15D,R15D
            add R12,1
            jmp .L_419f7d
          .byte 0x90
.L_419f70:

            add R15,1
            add R14,40
            cmp R12,R15
            je .L_419fe8
.L_419f7d:

            mov RSI,QWORD PTR [R14]
            mov EDX,256
            mov RDI,RBP
            call memcmp@PLT

            test EAX,EAX
            jne .L_419f70

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RAX+16],R15
.L_419f9a:

            mov RAX,QWORD PTR [R13+136]
            sub RAX,QWORD PTR [RSP+8]
            add RBP,256
            add QWORD PTR [RSP],1
            mov RCX,QWORD PTR [RSP]
            sar RAX,6
            cmp RCX,RAX
            jb .L_419f40
.L_419fbf:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41a2bc

            add RSP,104
.L_419fd7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419fe8:

            pxor XMM0,XMM0
            mov EDI,256
            mov QWORD PTR [RSP+64],0
            movaps XMMWORD PTR [RSP+48],XMM0
.L_419fff:

            call _Znwm@PLT
.L_41a004:

            lea RDI,QWORD PTR [RAX+256]
            mov R15,RAX
            mov RDX,RAX
            xor ECX,ECX
            xor ESI,ESI
            mov R8D,1
            movdqu XMM0,XMMWORD PTR [RBP]
            mov QWORD PTR [RSP+48],RAX
            mov QWORD PTR [RSP+64],RDI
            movups XMMWORD PTR [RAX],XMM0
            mov QWORD PTR [RSP+56],RDI
            mov QWORD PTR [RSP+72],0
            movdqu XMM0,XMMWORD PTR [RBP+16]
            mov BYTE PTR [RSP+80],1
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+32]
            movups XMMWORD PTR [RAX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+48]
            movups XMMWORD PTR [RAX+48],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+64]
            movups XMMWORD PTR [RAX+64],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+80]
            movups XMMWORD PTR [RAX+80],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+96]
            movups XMMWORD PTR [RAX+96],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+112]
            movups XMMWORD PTR [RAX+112],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+128]
            movups XMMWORD PTR [RAX+128],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+144]
            movups XMMWORD PTR [RAX+144],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+160]
            movups XMMWORD PTR [RAX+160],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+176]
            movups XMMWORD PTR [RAX+176],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+192]
            movups XMMWORD PTR [RAX+192],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+208]
            movups XMMWORD PTR [RAX+208],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+224]
            movups XMMWORD PTR [RAX+224],XMM0
            movdqu XMM0,XMMWORD PTR [RBP+240]
            movups XMMWORD PTR [RAX+240],XMM0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a100:

            mov EAX,DWORD PTR [RDX]
            test EAX,EAX
            js .L_41a26a

            cmp EAX,65535
            jg .L_41a28d

            cmp EAX,256
            cmovge ECX,R8D
            cmovge ESI,EBX
            add RDX,4
            cmp RDX,RDI
            jne .L_41a100

            test CL,CL
            jne .L_41a2c1
.L_41a132:

            movsxd RAX,DWORD PTR [RSP+20]
            mov R12,QWORD PTR [R13+88]
            cmp R12,QWORD PTR [R13+96]
            mov RDI,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+76],EAX
            mov QWORD PTR [RDI+16],RAX
            je .L_41a251

            test R12,R12
            je .L_41a214

            mov R15,QWORD PTR [RSP+56]
            sub R15,QWORD PTR [RSP+48]
            xor ECX,ECX
            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12+16],0
            mov RAX,R15
            sar RAX,2
            test RAX,RAX
            je .L_41a1ab

            movabs RDI,4611686018427387903
            cmp RAX,RDI
            ja .L_41a2e4

            mov RDI,R15
.L_41a1a3:

            call _Znwm@PLT

            mov RCX,RAX
.L_41a1ab:

            add R15,RCX
            mov QWORD PTR [R12],RCX
            mov QWORD PTR [R12+8],RCX
            mov RAX,QWORD PTR [RSP+56]
            mov QWORD PTR [R12+16],R15
            mov R15,QWORD PTR [RSP+48]
            mov R8,RAX
            sub R8,R15
            cmp RAX,R15
            je .L_41a1ec

            mov RDX,R8
            mov RDI,RCX
            mov RSI,R15
            mov QWORD PTR [RSP+8],R8
            call memmove@PLT

            mov R8,QWORD PTR [RSP+8]
            mov RCX,RAX
.L_41a1ec:

            mov EAX,DWORD PTR [RSP+72]
            add RCX,R8
            mov QWORD PTR [R12+8],RCX
            mov DWORD PTR [R12+24],EAX
            mov EAX,DWORD PTR [RSP+76]
            mov DWORD PTR [R12+28],EAX
            movzx EAX,BYTE PTR [RSP+80]
            mov BYTE PTR [R12+32],AL
            mov R12,QWORD PTR [R13+88]
.L_41a214:

            add R12,40
            mov QWORD PTR [R13+88],R12
.L_41a21c:

            add DWORD PTR [RSP+20],1
            test R15,R15
            je .L_41a22e

            mov RDI,R15
            call _ZdlPv@PLT
.L_41a22e:

            mov RAX,QWORD PTR [R13+128]
            mov QWORD PTR [RSP+8],RAX
            jmp .L_419f9a
.L_41a23f:

            add RBX,40
            cmp RBX,R12
            jne .L_419ee0

            jmp .L_419efa
.L_41a251:

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+32]
            mov RSI,R12
            call .L_407930
.L_41a263:

            mov R15,QWORD PTR [RSP+48]
            jmp .L_41a21c
.L_41a26a:

            test CL,CL
            jne .L_41a2b0
.L_41a26e:

            lea RCX,QWORD PTR [RIP+.L_41a720]
            lea RSI,QWORD PTR [RIP+.L_41a6d8]
            lea RDI,QWORD PTR [RIP+.L_41a6ed]
            mov EDX,90
            call __assert_fail@PLT
.L_41a28d:

            test CL,CL
            jne .L_41a2b6
.L_41a291:

            lea RCX,QWORD PTR [RIP+.L_41a720]
            lea RSI,QWORD PTR [RIP+.L_41a6d8]
            lea RDI,QWORD PTR [RIP+.L_41a702]
            mov EDX,91
            call __assert_fail@PLT
.L_41a2b0:

            mov DWORD PTR [RSP+72],ESI
            jmp .L_41a26e
.L_41a2b6:

            mov DWORD PTR [RSP+72],ESI
            jmp .L_41a291
.L_41a2bc:

            call __stack_chk_fail@PLT
.L_41a2c1:

            mov DWORD PTR [RSP+72],ESI
            jmp .L_41a132
.L_41a2ca:

            mov RDI,QWORD PTR [RSP+48]
            mov RBX,RAX
            test RDI,RDI
            je .L_41a2dc

            call _ZdlPv@PLT
.L_41a2dc:

            mov RDI,RBX
.L_41a2df:

            call _Unwind_Resume@PLT
.L_41a2e4:

            call _ZSt17__throw_bad_allocv@PLT
.L_41a2e9:
          .string "vector::_M_default_append"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a310:

            test RSI,RSI
            je .L_41a5f8

            push R15
            push R14
            movabs RDX,-3689348814741910323
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,24
.L_41a337:

            mov R12,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            sub RAX,R12
            sar RAX,3
            imul RAX,RDX
            cmp RAX,RSI
            jae .L_41a558

            sub R12,QWORD PTR [RDI]
            mov RAX,R12
            sar RAX,3
            imul RAX,RDX
            mov RSI,RAX
            mov QWORD PTR [RSP],RAX
            movabs RAX,461168601842738790
            mov RDX,RAX
            sub RDX,RSI
            cmp RBP,RDX
            ja .L_41a65e

            cmp RBP,RSI
            mov R14,RSI
            cmovae R14,RBP
            add R14,RSI
            jb .L_41a600

            cmp R14,RAX
            ja .L_41a600

            test R14,R14
            je .L_41a630

            lea R14,QWORD PTR [R14+R14*4]
            shl R14,3
.L_41a3ae:

            mov RDI,R14
.L_41a3b1:

            call _Znwm@PLT
.L_41a3b6:

            mov R15,RAX
.L_41a3b9:

            lea RAX,QWORD PTR [R15+R12*1]
            mov R12,RBP
            mov QWORD PTR [RSP+8],RAX
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a3d0:

            test RBX,RBX
            je .L_41a445

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov EDI,256
            mov QWORD PTR [RBX+16],0
.L_41a3f1:

            call _Znwm@PLT
.L_41a3f6:

            lea RDI,QWORD PTR [RAX+8]
            lea RDX,QWORD PTR [RAX+256]
            mov QWORD PTR [RBX],RAX
            and RDI,-8
            mov QWORD PTR [RBX+16],RDX
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+248],0
            sub RAX,RDI
            lea ECX,DWORD PTR [RAX+256]
            xor EAX,EAX
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov QWORD PTR [RBX+8],RDX
            mov DWORD PTR [RBX+24],0
            mov DWORD PTR [RBX+28],0
            mov BYTE PTR [RBX+32],1
.L_41a445:

            add RBX,40
            sub R12,1
            jne .L_41a3d0

            mov RAX,QWORD PTR [R13+8]
            mov RDI,QWORD PTR [R13]
            cmp RAX,RDI
            je .L_41a51d

            lea R12,QWORD PTR [RDI+40]
            mov RDX,RDI
            sub RAX,R12
            shr RAX,3
            lea RBX,QWORD PTR [RAX*8+40]
            mov RAX,R15
            lea RSI,QWORD PTR [R15+RBX*1]
.L_41a47d:

            test RAX,RAX
            je .L_41a610
.L_41a486:

            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            add RAX,40
            mov QWORD PTR [RAX-40],0
            mov RCX,QWORD PTR [RDX]
            add RDX,40
            mov QWORD PTR [RAX-40],RCX
            mov QWORD PTR [RDX-40],0
            mov R8,QWORD PTR [RDX-32]
            mov RCX,QWORD PTR [RAX-32]
            mov QWORD PTR [RAX-32],R8
            mov QWORD PTR [RDX-32],RCX
            mov R8,QWORD PTR [RDX-24]
            mov RCX,QWORD PTR [RAX-24]
            mov QWORD PTR [RAX-24],R8
            mov QWORD PTR [RDX-24],RCX
            mov ECX,DWORD PTR [RDX-16]
            mov DWORD PTR [RAX-16],ECX
            mov ECX,DWORD PTR [RDX-12]
            mov DWORD PTR [RAX-12],ECX
            movzx ECX,BYTE PTR [RDX-8]
            mov BYTE PTR [RAX-8],CL
            cmp RAX,RSI
            jne .L_41a47d
.L_41a4ed:

            add RBX,RDI
            jmp .L_41a509
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a4f8:

            call _ZdlPv@PLT

            cmp RBX,R12
            mov RDI,R12
            je .L_41a519
.L_41a505:

            add R12,40
.L_41a509:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_41a4f8

            cmp R12,RBX
            mov RDI,R12
            jne .L_41a505
.L_41a519:

            mov RDI,QWORD PTR [R13]
.L_41a51d:

            test RDI,RDI
            je .L_41a527

            call _ZdlPv@PLT
.L_41a527:

            add RBP,QWORD PTR [RSP]
            add R14,R15
            mov QWORD PTR [R13],R15
            mov QWORD PTR [R13+16],R14
            lea RAX,QWORD PTR [RBP+RBP*4]
            lea RAX,QWORD PTR [R15+RAX*8]
            mov QWORD PTR [R13+8],RAX
            add RSP,24
.L_41a547:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a558:

            mov RBX,R12
            xor R14D,R14D
            nop
            nop
.L_41a560:

            test RBX,RBX
            je .L_41a5d6

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov EDI,256
            mov QWORD PTR [RBX+16],0
.L_41a581:

            call _Znwm@PLT
.L_41a586:

            lea RDI,QWORD PTR [RAX+8]
            lea RDX,QWORD PTR [RAX+256]
            mov QWORD PTR [RBX],RAX
            and RDI,-8
            mov QWORD PTR [RBX+16],RDX
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+248],0
            sub RAX,RDI
            lea ECX,DWORD PTR [RAX+256]
            mov RAX,R14
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov QWORD PTR [RBX+8],RDX
            mov DWORD PTR [RBX+24],0
            mov DWORD PTR [RBX+28],0
            mov BYTE PTR [RBX+32],1
.L_41a5d6:

            add RBX,40
            sub RBP,1
            jne .L_41a560

            mov QWORD PTR [R13+8],RBX
            add RSP,24
.L_41a5e8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a5f8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a600:

            mov R14,-16
            jmp .L_41a3ae
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a610:

            add RDX,40
            cmp RSI,40
            je .L_41a4ed

            mov EAX,40
            jmp .L_41a486
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a630:

            xor R15D,R15D
            jmp .L_41a3b9
.L_41a638:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_41a640:

            cmp R12,RBX
            je .L_41a659

            mov RDI,QWORD PTR [R12]
            test RDI,RDI
            je .L_41a653

            call _ZdlPv@PLT
.L_41a653:

            add R12,40
            jmp .L_41a640
.L_41a659:

            call __cxa_rethrow@PLT
.L_41a65e:

            lea RDI,QWORD PTR [RIP+.L_41a2e9]
.L_41a665:

            call _ZSt20__throw_length_errorPKc@PLT
.L_41a66a:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_41a672:

            mov RAX,QWORD PTR [RSP+8]
            cmp RAX,RBX
            je .L_41a691

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_41a689

            call _ZdlPv@PLT
.L_41a689:

            add QWORD PTR [RSP+8],40
            jmp .L_41a672
.L_41a691:

            call __cxa_rethrow@PLT
.L_41a696:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_41a6a1:

            call _Unwind_Resume@PLT
.L_41a6a6:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
            call __cxa_begin_catch@PLT

            test R15,R15
            je .L_41a6c3

            mov RDI,R15
            call _ZdlPv@PLT
.L_41a6c3:

            call __cxa_rethrow@PLT
.L_41a6c8:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_41a6d3:

            call _Unwind_Resume@PLT
.L_41a6d8:
          .string "guetzli/jpeg_data.cc"
.L_41a6ed:

            je .L_41a750
          .byte 0x62
          .byte 0x6c
          .byte 0x65
          .byte 0x2e
          .byte 0x76
          .byte 0x61
          .byte 0x6c
          .byte 0x75
          .byte 0x65
          .byte 0x73
          .byte 0x5b
          .byte 0x6b
          .byte 0x5d
          .byte 0x20
          .byte 0x3e
          .byte 0x3d
          .byte 0x20
          .byte 0x30
          .byte 0x0
.L_41a702:

            je .L_41a765
          .byte 0x62
          .byte 0x6c
          .byte 0x65
          .byte 0x2e
          .byte 0x76
          .byte 0x61
          .byte 0x6c
          .byte 0x75
          .byte 0x65
          .byte 0x73
          .byte 0x5b
          .byte 0x6b
          .byte 0x5d
          .byte 0x20
          .byte 0x3c
          .byte 0x20
          .byte 0x28
          .byte 0x31
          .byte 0x20
          .byte 0x3c
          .byte 0x3c
          .byte 0x20
          .byte 0x31
          .byte 0x36
          .byte 0x29
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_41a720:
          .byte 0x76
          .byte 0x6f
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x67
          .byte 0x75
          .byte 0x65
          .byte 0x74
          .byte 0x7a
          .byte 0x6c
          .byte 0x69
          .byte 0x3a
          .byte 0x3a
          .byte 0x53
          .byte 0x61
          .byte 0x76
          .byte 0x65
          .byte 0x51
          .byte 0x75
          .byte 0x61
          .byte 0x6e
          .byte 0x74
          .byte 0x54
          .byte 0x61
          .byte 0x62
          .byte 0x6c
          .byte 0x65
          .byte 0x73
          .byte 0x28
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x74
          .byte 0x20
          .byte 0x28
          .byte 0x2a
          .byte 0x29
          .byte 0x5b
          .byte 0x36
          .byte 0x34
          .byte 0x5d
          .byte 0x2c
.L_41a750:

            and BYTE PTR [RDI+117],AH
            je .L_41a7d0
          .byte 0x6c
          .byte 0x69
          .byte 0x3a
          .byte 0x3a
          .byte 0x4a
          .byte 0x50
          .byte 0x45
          .byte 0x47
          .byte 0x44
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x2a
          .byte 0x29
          .byte 0x0
.L_41a765:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a770:

            mov RAX,QWORD PTR [RDI+32]
            mov RSI,QWORD PTR [RDI+40]
            cmp RAX,RSI
            je .L_41a7f0

            mov RCX,QWORD PTR [RAX]
            movzx EDX,BYTE PTR [RCX]
            cmp DL,224
            je .L_41a7e0

            add RAX,32
            xor R9D,R9D
            xor R8D,R8D
            jmp .L_41a7ac
            nop
            nop
            nop
            nop
.L_41a798:

            cmp RSI,RAX
            je .L_41a7d0
.L_41a79d:

            mov RCX,QWORD PTR [RAX]
            add RAX,32
            movzx EDX,BYTE PTR [RCX]
            cmp DL,224
            je .L_41a7e0
.L_41a7ac:

            cmp DL,238
            jne .L_41a798

            cmp QWORD PTR [RAX-24],14
            jbe .L_41a798

            cmp RSI,RAX
            movzx R9D,BYTE PTR [RCX+14]
            mov R8D,1
            jne .L_41a79d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a7d0:

            test R8B,R8B
            je .L_41a7f0

            test R9B,R9B
            setne AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a7e0:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a7f0:

            mov RDX,QWORD PTR [RDI+128]
            cmp DWORD PTR [RDX],82
            setne AL
            cmp DWORD PTR [RDX+64],71
            setne CL
            or EAX,ECX
            cmp DWORD PTR [RDX+128],66
            setne DL
            or EAX,EDX
            ret 
.L_41a813:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a820:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,56
.L_41a830:

            mov RSI,QWORD PTR [RSI+128]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RBX+136]
            sub RAX,RSI
            cmp RAX,64
            je .L_41a8e0

            cmp RAX,192
            je .L_41a9b0
.L_41a867:

            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12+16],0
.L_41a881:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_41aa45

            add RSP,56
.L_41a89c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a8a8:

            test R8B,R8B
            jne .L_41aa18
.L_41a8b1:

            cmp DWORD PTR [RSI],82
            setne DL
            cmp DWORD PTR [RSI+64],71
            setne AL
            or DL,AL
            jne .L_41a8d0

            cmp DWORD PTR [RSI+128],66
            je .L_41a867

            nop
            nop
            nop
            nop
            nop
.L_41a8d0:

            mov RDI,RBX
.L_41a8d3:

            call .L_419ad0

            test AL,AL
            je .L_41aa30
.L_41a8e0:

            mov ESI,DWORD PTR [RBX]
            mov EDX,DWORD PTR [RBX+4]
            mov RBP,RSP
            mov RDI,RBP
            call .L_423fb0
.L_41a8f0:

            mov RSI,RBX
            mov RDI,RBP
.L_41a8f6:

            call .L_424760

            mov RSI,RBP
            mov RDI,R12
            call .L_424cd0
.L_41a906:

            mov RAX,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP+8]
            cmp RAX,RBX
            je .L_41a990

            lea RBP,QWORD PTR [RBX+336]
            movabs RDX,1098020480577949501
            sub RAX,RBP
            shr RAX,4
            imul RAX,RDX
            movabs RDX,1152921504606846975
            and RAX,RDX
            add RAX,1
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea R13,QWORD PTR [RAX+RDX*4]
            shl R13,4
            add R13,RBX
            jmp .L_41a96c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a958:

            call _ZdlPv@PLT

            cmp RBP,R13
            mov RBX,RBP
            je .L_41a98b
.L_41a965:

            add RBP,336
.L_41a96c:

            mov RDI,QWORD PTR [RBX+56]
            test RDI,RDI
            je .L_41a97a

            call _ZdlPv@PLT
.L_41a97a:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            jne .L_41a958

            cmp RBP,R13
            mov RBX,RBP
            jne .L_41a965
.L_41a98b:

            mov RBX,QWORD PTR [RSP+8]
.L_41a990:

            test RBX,RBX
            je .L_41a881

            mov RDI,RBX
            call _ZdlPv@PLT

            jmp .L_41a881
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a9b0:

            mov RAX,QWORD PTR [RBX+32]
            mov RDI,QWORD PTR [RBX+40]
            cmp RAX,RDI
            je .L_41a8b1

            mov RCX,QWORD PTR [RAX]
            movzx EDX,BYTE PTR [RCX]
            cmp DL,224
            je .L_41a8d0

            add RAX,32
            xor R9D,R9D
            xor R8D,R8D
            jmp .L_41a9fc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a9e0:

            cmp RDI,RAX
            je .L_41a8a8

            mov RCX,QWORD PTR [RAX]
            add RAX,32
            movzx EDX,BYTE PTR [RCX]
            cmp DL,224
            je .L_41a8d0
.L_41a9fc:

            cmp DL,238
            jne .L_41a9e0

            cmp QWORD PTR [RAX-24],14
            jbe .L_41a9e0

            movzx R9D,BYTE PTR [RCX+14]
            mov R8D,1
            jmp .L_41a9e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41aa18:

            test R9B,R9B
            je .L_41a867

            jmp .L_41a8d0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aa30:

            mov RDI,RBX
.L_41aa33:

            call .L_419b30

            test AL,AL
            jne .L_41a8e0

            jmp .L_41a867
.L_41aa45:

            call __stack_chk_fail@PLT
.L_41aa4a:

            mov R12,QWORD PTR [RSP+16]
            mov RBX,QWORD PTR [RSP+8]
            mov RBP,RAX
.L_41aa57:

            cmp R12,RBX
            je .L_41aa81

            mov RDI,QWORD PTR [RBX+56]
            test RDI,RDI
            je .L_41aa6a

            call _ZdlPv@PLT
.L_41aa6a:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_41aa78

            call _ZdlPv@PLT
.L_41aa78:

            add RBX,336
            jmp .L_41aa57
.L_41aa81:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_41aa90

            call _ZdlPv@PLT
.L_41aa90:

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41aa98:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41aaa0:

            push R12
            push RBP
            xor EDX,EDX
            push RBX
            mov RBP,RDI
            sub RSP,64
.L_41aaad:

            lea RBX,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],17
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            lea R12,QWORD PTR [RBX+16]
            mov RDI,RBX
            mov QWORD PTR [RSP+16],R12
.L_41aadc:

            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT
.L_41aae1:

            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RAX
            movdqa XMM0,XMMWORD PTR [RIP+.L_41bbc0]
            mov QWORD PTR [RSP+32],RDX
            mov BYTE PTR [RAX+16],0
            movups XMMWORD PTR [RAX],XMM0
            mov RAX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+24],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RSI,QWORD PTR [RBP+40]
            cmp RSI,QWORD PTR [RBP+48]
            je .L_41abb0

            test RSI,RSI
            mov RDI,QWORD PTR [RSP+16]
            je .L_41ab6a

            lea RAX,QWORD PTR [RSI+16]
            mov RDX,RSI
            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RSP+16]
            cmp RAX,R12
            je .L_41aba0

            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSI+16],RAX
.L_41ab4a:

            mov RAX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+16]
            mov QWORD PTR [RSP+16],RDI
            mov QWORD PTR [RDX+8],RAX
            mov QWORD PTR [RSP+24],0
            mov BYTE PTR [RSP+32],0
.L_41ab6a:

            add RSI,32
            mov QWORD PTR [RBP+40],RSI
.L_41ab72:

            add RBX,16
            cmp RDI,RBX
            je .L_41ab80

            call _ZdlPv@PLT
.L_41ab80:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41abc3

            add RSP,64
.L_41ab94:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aba0:

            movdqa XMM0,XMMWORD PTR [RSP+32]
            movups XMMWORD PTR [RSI+16],XMM0
            mov RSI,QWORD PTR [RBP+40]
            jmp .L_41ab4a
.L_41abb0:

            lea RDI,QWORD PTR [RBP+32]
            mov RDX,RBX
.L_41abb7:

            call .L_41b620
.L_41abbc:

            mov RDI,QWORD PTR [RSP+16]
            jmp .L_41ab72
.L_41abc3:

            call __stack_chk_fail@PLT
.L_41abc8:

            mov RDI,QWORD PTR [RSP+16]
            add RBX,16
            mov RBP,RAX
            cmp RDI,RBX
            je .L_41abde

            call _ZdlPv@PLT
.L_41abde:

            mov RDI,RBP
.L_41abe1:

            call _Unwind_Resume@PLT
.L_41abe6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41abf0:

            push R15
            push R14
            mov R14,R8
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RCX
            sub RSP,1320
.L_41ac07:

            mov QWORD PTR [RSP+128],RDI
            mov DWORD PTR [RSP+24],ESI
            mov EDI,ESI
            mov DWORD PTR [RSP+140],EDX
            mov ESI,EDX
            mov QWORD PTR [RSP+112],R8
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1304],RDX
            xor EDX,EDX
            mov RDX,R8
            lea R13,QWORD PTR [RSP+528]
            call .L_419b90

            mov RDI,R14
            call .L_41aaa0

            mov R11,QWORD PTR [R14+80]
            mov R8,RBX
            lea RBX,QWORD PTR [RBX+768]
            mov R9,R13
            mov EDI,65537
.L_41ac64:

            mov R10,QWORD PTR [R11]
            xor ECX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ac70:

            mov ESI,DWORD PTR [R8+RCX*1]
            mov EAX,EDI
            cdq 
            idiv ESI
            mov DWORD PTR [R10+RCX*1],ESI
            mov DWORD PTR [R9+RCX*1],EAX
            add RCX,4
            cmp RCX,256
            jne .L_41ac70

            add R8,256
            add R11,40
            add R9,256
            cmp RBX,R8
            jne .L_41ac64

            mov RSI,QWORD PTR [RSP+112]
            mov EAX,DWORD PTR [RSI+20]
            test EAX,EAX
            jle .L_41b55b

            lea R12,QWORD PTR [RSP+144]
            mov EDX,DWORD PTR [RSI+24]
            mov DWORD PTR [RSP+120],0
            movdqa XMM3,XMMWORD PTR [RIP+.L_41bbd0]
            lea RBP,QWORD PTR [R12+128]
            mov DWORD PTR [RSP+108],0
            mov DWORD PTR [RSP+136],0
            nop
            nop
            nop
            nop
            nop
.L_41acf0:

            test EDX,EDX
            jle .L_41b53f

            mov EAX,DWORD PTR [RSP+140]
            mov ESI,DWORD PTR [RSP+108]
            lea R15,QWORD PTR [R12+256]
            pxor XMM4,XMM4
            mov R14D,7
            mov DWORD PTR [RSP+104],6
            mov DWORD PTR [RSP+44],5
            sub EAX,1
            mov DWORD PTR [RSP+28],ESI
            mov DWORD PTR [RSP+8],4
            mov DWORD PTR [RSP+124],EAX
            mov EAX,DWORD PTR [RSP+24]
            mov DWORD PTR [RSP+40],3
            mov DWORD PTR [RSP+12],2
            mov DWORD PTR [RSP+16],1
            mov DWORD PTR [RSP+20],0
            lea EBX,DWORD PTR [RAX-1]
            mov EAX,ESI
            shl EAX,6
            cdqe 
            add RAX,RAX
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
.L_41ad70:

            mov RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP],RBP
            mov R8D,DWORD PTR [RSP+120]
            mov ESI,DWORD PTR [RSP+124]
            mov R9D,DWORD PTR [RSP+44]
            mov R10D,DWORD PTR [RSP+104]
            mov EBP,DWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RAX]
            mov RAX,R12
            mov QWORD PTR [RSP+48],R15
            mov QWORD PTR [RSP+56],R13
            mov QWORD PTR [RSP+96],R12
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41adb0:

            cmp R8D,ESI
            mov EDX,ESI
            mov ECX,DWORD PTR [RSP+20]
            cmovle EDX,R8D
            imul EDX,DWORD PTR [RSP+24]
            cmp ECX,EBX
            cmovg ECX,EBX
            add ECX,EDX
            lea R11D,DWORD PTR [RCX+RCX*2]
            movsxd R11,R11D
            add R11,RDI
            movzx ECX,BYTE PTR [R11]
            movzx R12D,BYTE PTR [R11+1]
            movzx R11D,BYTE PTR [R11+2]
            imul R15D,R12D,38469
            imul R13D,ECX,19595
            add R13D,R15D
            imul R15D,R11D,7471
            lea R13D,DWORD PTR [R13+R15*1-8355840]
            imul R15D,R12D,-21709
            sar R13D,16
            mov WORD PTR [RAX],R13W
            imul R13D,ECX,-11059
            shl ECX,15
            imul R12D,R12D,-27439
            add R13D,R15D
            mov R15D,R11D
            imul R11D,R11D,-5329
            add R12D,ECX
            shl R15D,15
            lea R13D,DWORD PTR [R13+R15*1+32767]
            lea ECX,DWORD PTR [R12+R11*1+32767]
            sar R13D,16
            mov WORD PTR [RAX+128],R13W
            sar ECX,16
            mov WORD PTR [RAX+256],CX
            mov ECX,DWORD PTR [RSP+16]
            cmp ECX,EBX
            cmovg ECX,EBX
            add ECX,EDX
            lea R11D,DWORD PTR [RCX+RCX*2]
            movsxd R11,R11D
            add R11,RDI
            movzx ECX,BYTE PTR [R11]
            movzx R12D,BYTE PTR [R11+1]
            movzx R11D,BYTE PTR [R11+2]
            imul R15D,R12D,38469
            imul R13D,ECX,19595
            add R13D,R15D
            imul R15D,R11D,7471
            lea R13D,DWORD PTR [R13+R15*1-8355840]
            imul R15D,R12D,-21709
            sar R13D,16
            mov WORD PTR [RAX+2],R13W
            imul R13D,ECX,-11059
            shl ECX,15
            imul R12D,R12D,-27439
            add R13D,R15D
            mov R15D,R11D
            imul R11D,R11D,-5329
            add R12D,ECX
            shl R15D,15
            lea R13D,DWORD PTR [R13+R15*1+32767]
            lea ECX,DWORD PTR [R12+R11*1+32767]
            sar R13D,16
            mov WORD PTR [RAX+130],R13W
            sar ECX,16
            mov WORD PTR [RAX+258],CX
            mov ECX,DWORD PTR [RSP+12]
            cmp ECX,EBX
            cmovg ECX,EBX
            add ECX,EDX
            lea R11D,DWORD PTR [RCX+RCX*2]
            movsxd R11,R11D
            add R11,RDI
            movzx ECX,BYTE PTR [R11]
            movzx R12D,BYTE PTR [R11+1]
            movzx R11D,BYTE PTR [R11+2]
            imul R15D,R12D,38469
            imul R13D,ECX,19595
            add R13D,R15D
            imul R15D,R11D,7471
            lea R13D,DWORD PTR [R13+R15*1-8355840]
            imul R15D,R12D,-21709
            sar R13D,16
            mov WORD PTR [RAX+4],R13W
            imul R13D,ECX,-11059
            shl ECX,15
            imul R12D,R12D,-27439
            add R13D,R15D
            mov R15D,R11D
            imul R11D,R11D,-5329
            add R12D,ECX
            shl R15D,15
            lea R13D,DWORD PTR [R13+R15*1+32767]
            lea ECX,DWORD PTR [R12+R11*1+32767]
            sar R13D,16
            mov WORD PTR [RAX+132],R13W
            sar ECX,16
            cmp EBP,EBX
            mov WORD PTR [RAX+260],CX
            mov ECX,EBX
            cmovle ECX,EBP
            add ECX,EDX
            lea R11D,DWORD PTR [RCX+RCX*2]
            movsxd R11,R11D
            add R11,RDI
            movzx ECX,BYTE PTR [R11]
            movzx R12D,BYTE PTR [R11+1]
            movzx R11D,BYTE PTR [R11+2]
            imul R15D,R12D,38469
            imul R13D,ECX,19595
            add R13D,R15D
            imul R15D,R11D,7471
            lea R13D,DWORD PTR [R13+R15*1-8355840]
            imul R15D,R12D,-21709
            sar R13D,16
            mov WORD PTR [RAX+6],R13W
            imul R13D,ECX,-11059
            shl ECX,15
            imul R12D,R12D,-27439
            add R13D,R15D
            mov R15D,R11D
            imul R11D,R11D,-5329
            add R12D,ECX
            shl R15D,15
            lea R13D,DWORD PTR [R13+R15*1+32767]
            lea ECX,DWORD PTR [R12+R11*1+32767]
            sar R13D,16
            mov WORD PTR [RAX+134],R13W
            sar ECX,16
            mov WORD PTR [RAX+262],CX
            mov ECX,DWORD PTR [RSP+8]
            cmp ECX,EBX
            cmovg ECX,EBX
            add ECX,EDX
            lea R11D,DWORD PTR [RCX+RCX*2]
            movsxd R11,R11D
            add R11,RDI
            movzx ECX,BYTE PTR [R11]
            movzx R12D,BYTE PTR [R11+1]
            movzx R11D,BYTE PTR [R11+2]
            imul R15D,R12D,38469
            imul R13D,ECX,19595
            add R13D,R15D
            imul R15D,R11D,7471
            lea R13D,DWORD PTR [R13+R15*1-8355840]
            imul R15D,R12D,-21709
            sar R13D,16
            mov WORD PTR [RAX+8],R13W
            imul R13D,ECX,-11059
            shl ECX,15
            imul R12D,R12D,-27439
            add R13D,R15D
            mov R15D,R11D
            imul R11D,R11D,-5329
            add R12D,ECX
            shl R15D,15
            lea R13D,DWORD PTR [R13+R15*1+32767]
            lea ECX,DWORD PTR [R12+R11*1+32767]
            sar R13D,16
            mov WORD PTR [RAX+136],R13W
            sar ECX,16
            cmp R9D,EBX
            mov WORD PTR [RAX+264],CX
            mov ECX,EBX
            cmovle ECX,R9D
            add ECX,EDX
            lea R11D,DWORD PTR [RCX+RCX*2]
            movsxd R11,R11D
            add R11,RDI
            movzx R12D,BYTE PTR [R11]
            movzx ECX,BYTE PTR [R11+1]
            movzx R11D,BYTE PTR [R11+2]
            imul R15D,ECX,38469
            imul R13D,R12D,19595
            add R13D,R15D
            imul R15D,R11D,7471
            lea R13D,DWORD PTR [R13+R15*1-8355840]
            imul R15D,ECX,-21709
            sar R13D,16
            mov WORD PTR [RAX+10],R13W
            imul R13D,R12D,-11059
            shl R12D,15
            imul ECX,ECX,-27439
            add R13D,R15D
            mov R15D,R11D
            imul R11D,R11D,-5329
            add R12D,ECX
            shl R15D,15
            lea R13D,DWORD PTR [R13+R15*1+32767]
            lea ECX,DWORD PTR [R12+R11*1+32767]
            sar R13D,16
            mov WORD PTR [RAX+138],R13W
            sar ECX,16
            cmp R10D,EBX
            mov WORD PTR [RAX+266],CX
            mov ECX,EBX
            cmovle ECX,R10D
            add ECX,EDX
            lea R11D,DWORD PTR [RCX+RCX*2]
            movsxd R11,R11D
            add R11,RDI
            movzx R12D,BYTE PTR [R11]
            movzx ECX,BYTE PTR [R11+1]
            movzx R11D,BYTE PTR [R11+2]
            imul R15D,R12D,19595
            imul R13D,ECX,38469
            add R13D,R15D
            imul R15D,R11D,7471
            lea R13D,DWORD PTR [R13+R15*1-8355840]
            imul R15D,R12D,-11059
            shl R12D,15
            sar R13D,16
            mov WORD PTR [RAX+12],R13W
            imul R13D,ECX,-21709
            imul ECX,ECX,-27439
            add R13D,R15D
            mov R15D,R11D
            imul R11D,R11D,-5329
            add R12D,ECX
            shl R15D,15
            lea R13D,DWORD PTR [R13+R15*1+32767]
            lea ECX,DWORD PTR [R12+R11*1+32767]
            sar R13D,16
            mov WORD PTR [RAX+140],R13W
            sar ECX,16
            cmp R14D,EBX
            mov WORD PTR [RAX+268],CX
            mov ECX,EBX
            cmovle ECX,R14D
            add R8D,1
            add RAX,16
            add EDX,ECX
            lea ECX,DWORD PTR [RDX+RDX*2]
            movsxd RCX,ECX
            add RCX,RDI
            movzx R11D,BYTE PTR [RCX]
            movzx EDX,BYTE PTR [RCX+1]
            movzx ECX,BYTE PTR [RCX+2]
            imul R13D,R11D,19595
            imul R12D,EDX,38469
            add R12D,R13D
            imul R13D,ECX,7471
            lea R12D,DWORD PTR [R12+R13*1-8355840]
            imul R13D,R11D,-11059
            shl R11D,15
            sar R12D,16
            mov WORD PTR [RAX-2],R12W
            imul R12D,EDX,-21709
            imul EDX,EDX,-27439
            add R12D,R13D
            mov R13D,ECX
            imul ECX,ECX,-5329
            shl R13D,15
            add R11D,EDX
            lea R12D,DWORD PTR [R12+R13*1+32767]
            lea EDX,DWORD PTR [R11+RCX*1+32767]
            sar R12D,16
            mov WORD PTR [RAX+126],R12W
            sar EDX,16
            mov WORD PTR [RAX+254],DX
            cmp QWORD PTR [RSP],RAX
            jne .L_41adb0

            mov R12,QWORD PTR [RSP+96]
            mov RBP,QWORD PTR [RSP]
            mov R15,QWORD PTR [RSP+48]
            mov R13,QWORD PTR [RSP+56]
            movaps XMMWORD PTR [RSP+80],XMM3
            mov RDI,R12
            movaps XMMWORD PTR [RSP+64],XMM4
            call .L_43d160

            mov RDI,RBP
            call .L_43d160

            mov RDI,R15
            call .L_43d160

            movdqa XMM3,XMMWORD PTR [RSP+80]
            xor EAX,EAX
            movdqa XMM4,XMMWORD PTR [RSP+64]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b300:

            movdqa XMM6,XMM4
            movdqa XMM0,XMMWORD PTR [R12+RAX*1]
            pcmpgtw XMM6,XMM0
            movdqa XMM1,XMM0
            movdqa XMM2,XMMWORD PTR [R13+RAX*2]
            punpcklwd XMM1,XMM6
            psrlq XMM2,32
            punpckhwd XMM0,XMM6
            movdqa XMM5,XMM1
            psrlq XMM1,32
            pmuludq XMM1,XMM2
            pshufd XMM1,XMM1,8
            movdqa XMM2,XMM0
            psrlq XMM0,32
            pmuludq XMM5,XMMWORD PTR [R13+RAX*2]
            pshufd XMM5,XMM5,8
            pmuludq XMM2,XMMWORD PTR [R13+RAX*2+16]
            punpckldq XMM5,XMM1
            movdqa XMM1,XMMWORD PTR [R13+RAX*2+16]
            psrlq XMM1,32
            pmuludq XMM0,XMM1
            pshufd XMM1,XMM2,8
            pshufd XMM0,XMM0,8
            paddd XMM5,XMM3
            psrad XMM5,20
            movdqa XMM7,XMM5
            punpckldq XMM1,XMM0
            movdqa XMM0,XMM1
            movdqa XMM1,XMM5
            paddd XMM0,XMM3
            psrad XMM0,20
            punpcklwd XMM7,XMM0
            punpckhwd XMM1,XMM0
            movdqa XMM2,XMM7
            movdqa XMM0,XMM7
            punpckhwd XMM2,XMM1
            punpcklwd XMM0,XMM1
            punpcklwd XMM0,XMM2
            movaps XMMWORD PTR [R12+RAX*1],XMM0
            add RAX,16
            cmp RAX,384
            jne .L_41b300

            mov RDX,QWORD PTR [RSP+112]
            mov RSI,QWORD PTR [RSP+32]
            add R14D,8
            movdqa XMM0,XMMWORD PTR [R12]
            mov RAX,QWORD PTR [RDX+128]
            mov RDI,QWORD PTR [RAX+40]
            add RDI,RSI
            movups XMMWORD PTR [RDI],XMM0
            movdqa XMM0,XMMWORD PTR [R12+16]
            movups XMMWORD PTR [RDI+16],XMM0
            movdqa XMM0,XMMWORD PTR [R12+32]
            movups XMMWORD PTR [RDI+32],XMM0
            movdqa XMM0,XMMWORD PTR [R12+48]
            movups XMMWORD PTR [RDI+48],XMM0
            movdqa XMM0,XMMWORD PTR [R12+64]
            movups XMMWORD PTR [RDI+64],XMM0
            movdqa XMM0,XMMWORD PTR [R12+80]
            movups XMMWORD PTR [RDI+80],XMM0
            movdqa XMM0,XMMWORD PTR [R12+96]
            movups XMMWORD PTR [RDI+96],XMM0
            movdqa XMM0,XMMWORD PTR [R12+112]
            movups XMMWORD PTR [RDI+112],XMM0
            mov RAX,QWORD PTR [RDX+128]
            mov RDI,QWORD PTR [RAX+104]
            movdqa XMM0,XMMWORD PTR [RBP]
            add RDI,RSI
            movups XMMWORD PTR [RDI],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+16]
            movups XMMWORD PTR [RDI+16],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+32]
            movups XMMWORD PTR [RDI+32],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+48]
            movups XMMWORD PTR [RDI+48],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+64]
            movups XMMWORD PTR [RDI+64],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+80]
            add DWORD PTR [RSP+28],1
            add DWORD PTR [RSP+20],8
            movups XMMWORD PTR [RDI+80],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+96]
            movups XMMWORD PTR [RDI+96],XMM0
            movdqa XMM0,XMMWORD PTR [RBP+112]
            movups XMMWORD PTR [RDI+112],XMM0
            mov RAX,QWORD PTR [RDX+128]
            mov RDI,QWORD PTR [RAX+168]
            mov EAX,DWORD PTR [RSP+28]
            movdqa XMM0,XMMWORD PTR [R15]
            add RDI,RSI
            sub RSI,-128
            movups XMMWORD PTR [RDI],XMM0
            mov QWORD PTR [RSP+32],RSI
            movdqa XMM0,XMMWORD PTR [R15+16]
            movups XMMWORD PTR [RDI+16],XMM0
            movdqa XMM0,XMMWORD PTR [R15+32]
            movups XMMWORD PTR [RDI+32],XMM0
            movdqa XMM0,XMMWORD PTR [R15+48]
            movups XMMWORD PTR [RDI+48],XMM0
            movdqa XMM0,XMMWORD PTR [R15+64]
            movups XMMWORD PTR [RDI+64],XMM0
            movdqa XMM0,XMMWORD PTR [R15+80]
            movups XMMWORD PTR [RDI+80],XMM0
            movdqa XMM0,XMMWORD PTR [R15+96]
            movups XMMWORD PTR [RDI+96],XMM0
            movdqa XMM0,XMMWORD PTR [R15+112]
            movups XMMWORD PTR [RDI+112],XMM0
            mov EDX,DWORD PTR [RDX+24]
            add DWORD PTR [RSP+16],8
            sub EAX,DWORD PTR [RSP+108]
            add DWORD PTR [RSP+12],8
            add DWORD PTR [RSP+40],8
            add DWORD PTR [RSP+8],8
            add DWORD PTR [RSP+44],8
            add DWORD PTR [RSP+104],8
            cmp EDX,EAX
            jg .L_41ad70

            mov RAX,QWORD PTR [RSP+112]
            mov ESI,DWORD PTR [RSP+28]
            mov EAX,DWORD PTR [RAX+20]
            mov DWORD PTR [RSP+108],ESI
.L_41b53f:

            add DWORD PTR [RSP+136],1
            add DWORD PTR [RSP+120],8
            mov ESI,DWORD PTR [RSP+136]
            cmp ESI,EAX
            jl .L_41acf0
.L_41b55b:

            mov RSI,QWORD PTR [RSP+1304]
            xor RSI,QWORD PTR FS:[40]
            mov EAX,1
            jne .L_41b585

            add RSP,1320
.L_41b57a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41b585:

            call __stack_chk_fail@PLT
.L_41b58a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b590:

            cmp ESI,65535
            seta R9B
            cmp EDX,65535
            seta AL
            or R9B,AL
            je .L_41b5b0
.L_41b5a8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b5b0:

            lea EAX,DWORD PTR [RSI+RSI*2]
            mov R9,QWORD PTR [RDI+8]
            sub R9,QWORD PTR [RDI]
            imul EAX,EDX
            cdqe 
            cmp RAX,R9
            jne .L_41b5a8

            jmp .L_41abf0
.L_41b5c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b5d0:

            cmp EDX,65535
            seta R9B
            cmp ESI,65535
            seta AL
            or R9B,AL
            je .L_41b5f0
.L_41b5e8:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b5f0:

            lea EAX,DWORD PTR [RSI+RSI*2]
            mov R9,QWORD PTR [RDI+8]
            sub R9,QWORD PTR [RDI]
            imul EAX,EDX
            cdqe 
            cmp R9,RAX
            jne .L_41b5e8

            mov R8,RCX
            lea RCX,QWORD PTR [RIP+.L_41b8c0]
            jmp .L_41abf0
.L_41b613:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b620:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov R14,RDI
            sub RSP,24
.L_41b637:

            mov RCX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            sub RAX,RCX
            sub R12,RCX
            sar RAX,5
            test RAX,RAX
            je .L_41b850

            lea RCX,QWORD PTR [RAX+RAX*1]
            mov RBP,-32
            cmp RAX,RCX
            jbe .L_41b880
.L_41b665:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP],RSI
            call _Znwm@PLT

            mov RSI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+8]
            lea R13,QWORD PTR [RAX+32]
            mov RBX,RAX
            add RBP,RAX
.L_41b689:

            add R12,RBX
            je .L_41b6cc

            lea RAX,QWORD PTR [R12+16]
            mov RCX,QWORD PTR [RDX]
            mov QWORD PTR [R12],RAX
            lea RAX,QWORD PTR [RDX+16]
            cmp RCX,RAX
            je .L_41b868

            mov QWORD PTR [R12],RCX
            mov RCX,QWORD PTR [RDX+16]
            mov QWORD PTR [R12+16],RCX
.L_41b6b4:

            mov RCX,QWORD PTR [RDX+8]
            mov QWORD PTR [RDX],RAX
            mov QWORD PTR [RDX+8],0
            mov BYTE PTR [RDX+16],0
            mov QWORD PTR [R12+8],RCX
.L_41b6cc:

            mov RDX,QWORD PTR [R14]
            cmp RDX,RSI
            je .L_41b75c

            lea RCX,QWORD PTR [RDX+32]
            mov RDI,RSI
            lea RAX,QWORD PTR [RDX+16]
            sub RDI,RCX
            mov R8,RDI
            lea RDI,QWORD PTR [RDX+RDI*1+48]
            mov RDX,RBX
            shr R8,5
            jmp .L_41b72e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b700:

            mov QWORD PTR [RDX],RCX
            mov RCX,QWORD PTR [RAX]
            mov QWORD PTR [RDX+16],RCX
.L_41b70a:

            mov RCX,QWORD PTR [RAX-8]
            mov QWORD PTR [RDX+8],RCX
            mov QWORD PTR [RAX-16],RAX
            mov QWORD PTR [RAX-8],0
            mov BYTE PTR [RAX],0
.L_41b721:

            add RAX,32
            add RDX,32
            cmp RDI,RAX
            je .L_41b750
.L_41b72e:

            test RDX,RDX
            je .L_41b721

            lea RCX,QWORD PTR [RDX+16]
            mov QWORD PTR [RDX],RCX
            mov RCX,QWORD PTR [RAX-16]
            cmp RAX,RCX
            jne .L_41b700

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RDX+16],XMM0
            jmp .L_41b70a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b750:

            mov RAX,R8
            shl RAX,5
            lea R13,QWORD PTR [RBX+RAX*1+64]
.L_41b75c:

            mov RDX,QWORD PTR [R14+8]
            cmp RDX,RSI
            je .L_41b7e7

            lea RCX,QWORD PTR [RSI+32]
            lea RAX,QWORD PTR [RSI+16]
            sub RDX,RCX
            mov RDI,RDX
            lea RSI,QWORD PTR [RDX+RSI*1+48]
            mov RDX,R13
            shr RDI,5
            jmp .L_41b7b6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b788:

            mov QWORD PTR [RDX],RCX
            mov RCX,QWORD PTR [RAX]
            mov QWORD PTR [RDX+16],RCX
.L_41b792:

            mov RCX,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-16],RAX
            mov QWORD PTR [RAX-8],0
            mov BYTE PTR [RAX],0
            mov QWORD PTR [RDX+8],RCX
.L_41b7a9:

            add RAX,32
            add RDX,32
            cmp RAX,RSI
            je .L_41b7d8
.L_41b7b6:

            test RDX,RDX
            je .L_41b7a9

            lea RCX,QWORD PTR [RDX+16]
            mov QWORD PTR [RDX],RCX
            mov RCX,QWORD PTR [RAX-16]
            cmp RCX,RAX
            jne .L_41b788

            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RDX+16],XMM0
            jmp .L_41b792
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b7d8:

            lea RAX,QWORD PTR [RDI+1]
            mov R15,QWORD PTR [R14+8]
            shl RAX,5
            add R13,RAX
.L_41b7e7:

            mov R12,QWORD PTR [R14]
            cmp R12,R15
            je .L_41b80f

            nop
.L_41b7f0:

            mov RDI,QWORD PTR [R12]
            lea RAX,QWORD PTR [R12+16]
            cmp RDI,RAX
            je .L_41b840

            add R12,32
            call _ZdlPv@PLT

            cmp R12,R15
            jne .L_41b7f0
.L_41b80c:

            mov R15,QWORD PTR [R14]
.L_41b80f:

            test R15,R15
            je .L_41b81c

            mov RDI,R15
            call _ZdlPv@PLT
.L_41b81c:

            mov QWORD PTR [R14],RBX
            mov QWORD PTR [R14+8],R13
            mov QWORD PTR [R14+16],RBP
            add RSP,24
.L_41b82b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b840:

            add R12,32
            cmp R12,R15
            jne .L_41b7f0

            jmp .L_41b80c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b850:

            mov ECX,1
.L_41b855:

            shl RCX,5
            mov RBP,RCX
            jmp .L_41b665
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b868:

            movdqu XMM0,XMMWORD PTR [RDX+16]
            movups XMMWORD PTR [R12+16],XMM0
            jmp .L_41b6b4
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b880:

            movabs RAX,576460752303423487
            cmp RCX,RAX
            ja .L_41b665

            test RCX,RCX
            jne .L_41b855

            mov R13D,32
            xor EBP,EBP
            xor EBX,EBX
            jmp .L_41b689
.L_41b8a7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b8c0:

            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
.L_41bbc0:

            loopne .L_41bbc2
.L_41bbc2:
          .byte 0x10
          .byte 0x4a
          .byte 0x46
          .byte 0x49
          .byte 0x46
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x1
          .byte 0x0
.L_41bbd0:
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
.L_41bbe0:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            mov R12,RDX
            mov R13,RCX
            sub RSP,8
.L_41bbfa:

            cmp RCX,1073741824
            jbe .L_41bc80

            xor EBX,EBX
            jmp .L_41bc26
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41bc10:

            add RBX,1073741824
            mov RBP,R13
            sub RBP,RBX
            cmp RBP,1073741824
            jbe .L_41bc50
.L_41bc26:

            lea RSI,QWORD PTR [R12+RBX*1]
            mov EDX,1073741824
            mov RDI,R15
            call R14

            cmp EAX,1073741824
            je .L_41bc10

            xor EAX,EAX
.L_41bc3e:

            add RSP,8
.L_41bc42:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41bc50:

            add R12,RBX
.L_41bc53:

            test RBP,RBP
            je .L_41bc85

            mov RDX,RBP
            mov RSI,R12
            mov RDI,R15
            call R14

            cdqe 
            cmp RAX,RBP
            sete AL
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bc80:

            mov RBP,RCX
            jmp .L_41bc53
.L_41bc85:

            mov EAX,1
            jmp .L_41bc3e
.L_41bc8c:

            nop
            nop
            nop
            nop
.L_41bc90:

            mov EAX,EDX
            ret 
.L_41bc93:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bca0:

            lea RCX,QWORD PTR [RIP+.L_421824]
            xor EDX,EDX
            lea R8,QWORD PTR [RCX+252]
            jmp .L_41bcc4
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bcb8:

            add RCX,4
            add EDX,1
            cmp R8,RCX
            je .L_41bd1d
.L_41bcc4:

            movsxd RAX,DWORD PTR [RCX]
            movsx EAX,WORD PTR [RDI+RAX*2]
            test AX,AX
            je .L_41bcb8

            cmp EDX,15
            jle .L_41bcf5

            sub EDX,16
            mov R9D,DWORD PTR [RSI+960]
            mov R10D,EDX
            and EDX,15
            shr R10D,4
            lea R9D,DWORD PTR [R9+R10*2+2]
            mov DWORD PTR [RSI+960],R9D
.L_41bcf5:

            mov R9D,EAX
            shl EDX,4
            add RCX,4
            sar R9D,31
            xor EAX,R9D
            sub EAX,R9D
            bsr EAX,EAX
            lea EAX,DWORD PTR [RAX+RDX*1+1]
            xor EDX,EDX
            cdqe 
            add DWORD PTR [RSI+RAX*4],2
            cmp R8,RCX
            jne .L_41bcc4
.L_41bd1d:

            test EDX,EDX
            je .L_41bd24

            add DWORD PTR [RSI],2
.L_41bd24:

            ret 
.L_41bd26:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bd30:

            mov RAX,RDI
            shr RAX,2
            neg RAX
            and EAX,3
            je .L_41be5c

            mov EDX,DWORD PTR [RDI]
            mov R10D,136
            test EDX,EDX
            mov EDX,144
            cmovne R10,RDX
            cmp EAX,1
            je .L_41be4c

            mov R11D,DWORD PTR [RDI+4]
            test R11D,R11D
            je .L_41bd6c

            add R10,8
.L_41bd6c:

            cmp EAX,2
            je .L_41be78

            mov R9D,DWORD PTR [RDI+8]
            test R9D,R9D
            jne .L_41be6f
.L_41bd82:

            mov R9D,253
            mov ESI,3
.L_41bd8d:

            mov R8D,256
            pxor XMM2,XMM2
            sub R8D,EAX
            pxor XMM1,XMM1
            mov EAX,EAX
            mov ECX,R8D
            movdqa XMM4,XMMWORD PTR [RIP+.L_421960]
            lea RDX,QWORD PTR [RDI+RAX*4]
            shr ECX,2
            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_41bdb8:

            movdqa XMM0,XMMWORD PTR [RDX]
            add EAX,1
            add RDX,16
            cmp ECX,EAX
            pcmpeqd XMM0,XMM1
            pandn XMM0,XMM4
            movdqa XMM3,XMM0
            punpckhdq XMM0,XMM1
            punpckldq XMM3,XMM1
            paddq XMM0,XMM3
            paddq XMM2,XMM0
            ja .L_41bdb8

            movdqa XMM0,XMM2
            mov ECX,R9D
            psrldq XMM0,8
            paddq XMM2,XMM0
            movq RAX,XMM2
            add RAX,R10
            mov R10D,R8D
            and R10D,4294967292
            sub ECX,R10D
            cmp R8D,R10D
            lea EDX,DWORD PTR [R10+RSI*1]
            je .L_41be4a

            movsxd RSI,EDX
            mov R8D,DWORD PTR [RDI+RSI*4]
            test R8D,R8D
            je .L_41be1e

            add RAX,8
.L_41be1e:

            cmp ECX,1
            lea ESI,DWORD PTR [RDX+1]
            je .L_41be4a

            movsxd RSI,ESI
            mov ESI,DWORD PTR [RDI+RSI*4]
            test ESI,ESI
            je .L_41be34

            add RAX,8
.L_41be34:

            add EDX,2
            cmp ECX,2
            je .L_41be4a

            movsxd RDX,EDX
            mov EDX,DWORD PTR [RDI+RDX*4]
            test EDX,EDX
            je .L_41be4a

            add RAX,8
.L_41be4a:

            ret 
.L_41be4c:

            mov R9D,255
            mov ESI,1
            jmp .L_41bd8d
.L_41be5c:

            mov R9D,256
            xor ESI,ESI
            mov R10D,136
            jmp .L_41bd8d
.L_41be6f:

            add R10,8
            jmp .L_41bd82
.L_41be78:

            mov R9D,254
            mov ESI,2
            jmp .L_41bd8d
.L_41be88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41be90:

            mov R8,RDI
            shr R8,2
            neg R8
            and R8D,3
            je .L_41c403

            mov EAX,DWORD PTR [RDI]
            movzx R10D,BYTE PTR [RSI]
            shr EAX,1
            imul R10D,EAX
            cmp R8D,1
            je .L_41c3f0

            movzx EDX,BYTE PTR [RSI+1]
            mov EAX,DWORD PTR [RDI+4]
            shr EAX,1
            add EDX,1
            imul EAX,EDX
            add R10,RAX
            cmp R8D,2
            je .L_41c3d8

            movzx EAX,BYTE PTR [RSI+2]
            mov EDX,DWORD PTR [RDI+8]
            mov R11D,253
            mov DWORD PTR [RSP-12],3
            shr EDX,1
            add EAX,2
            imul EAX,EDX
            add R10,RAX
.L_41bef6:

            movd XMM7,DWORD PTR [RSP-12]
            mov R9D,256
            mov EDX,R8D
            sub R9D,R8D
            pxor XMM2,XMM2
            pshufd XMM3,XMM7,0
            mov R8D,R9D
            pxor XMM6,XMM6
            lea RAX,QWORD PTR [RDI+RDX*4]
            pxor XMM4,XMM4
            shr R8D,4
            pxor XMM1,XMM1
            add RDX,RSI
            paddd XMM3,XMMWORD PTR [RIP+.L_421970]
            movdqa XMM10,XMMWORD PTR [RIP+.L_421980]
            xor ECX,ECX
            movdqa XMM5,XMMWORD PTR [RIP+.L_421990]
            movdqa XMM9,XMMWORD PTR [RIP+.L_4219a0]
            movdqa XMM8,XMMWORD PTR [RIP+.L_421960]
            movdqa XMM7,XMMWORD PTR [RIP+.L_4219b0]
.L_41bf60:

            movdqa XMM12,XMM3
            add ECX,1
            add RAX,64
            movdqu XMM14,XMMWORD PTR [RDX]
            add RDX,16
            pand XMM12,XMM5
            movdqa XMM13,XMM14
            movdqa XMM11,XMMWORD PTR [RAX-64]
            punpckhbw XMM14,XMM6
            punpcklbw XMM13,XMM6
            psrld XMM11,1
            movdqa XMM15,XMMWORD PTR [RAX-32]
            psrld XMM15,1
            movdqa XMM0,XMM13
            punpckhwd XMM13,XMM4
            punpcklwd XMM0,XMM4
            paddd XMM12,XMM0
            movdqa XMM0,XMM12
            psrlq XMM12,32
            pmuludq XMM0,XMM11
            psrlq XMM11,32
            pmuludq XMM12,XMM11
            movdqa XMM11,XMM3
            pshufd XMM12,XMM12,8
            pshufd XMM0,XMM0,8
            paddd XMM11,XMM9
            pand XMM11,XMM5
            punpckldq XMM0,XMM12
            paddd XMM11,XMM13
            movdqa XMM12,XMMWORD PTR [RAX-48]
            movdqa XMM13,XMM11
            psrlq XMM11,32
            psrld XMM12,1
            pmuludq XMM13,XMM12
            psrlq XMM12,32
            pshufd XMM13,XMM13,8
            pmuludq XMM11,XMM12
            pshufd XMM11,XMM11,8
            movdqa XMM12,XMM14
            punpckhwd XMM14,XMM4
            punpcklwd XMM12,XMM4
            punpckldq XMM13,XMM11
            movdqa XMM11,XMM3
            paddd XMM11,XMM8
            pand XMM11,XMM5
            paddd XMM11,XMM12
            movdqa XMM12,XMM11
            psrlq XMM11,32
            pmuludq XMM12,XMM15
            psrlq XMM15,32
            pshufd XMM12,XMM12,8
            pmuludq XMM11,XMM15
            pshufd XMM11,XMM11,8
            movdqa XMM15,XMMWORD PTR [RAX-16]
            cmp R8D,ECX
            psrld XMM15,1
            punpckldq XMM12,XMM11
            movdqa XMM11,XMM3
            paddd XMM3,XMM10
            paddd XMM11,XMM7
            pand XMM11,XMM5
            paddd XMM14,XMM11
            movdqa XMM11,XMM14
            psrlq XMM14,32
            pmuludq XMM11,XMM15
            psrlq XMM15,32
            pshufd XMM11,XMM11,8
            pmuludq XMM14,XMM15
            pshufd XMM14,XMM14,8
            punpckldq XMM11,XMM14
            movdqa XMM14,XMM0
            punpckhdq XMM0,XMM1
            punpckldq XMM14,XMM1
            paddq XMM0,XMM14
            movdqa XMM14,XMM13
            punpckhdq XMM13,XMM1
            punpckldq XMM14,XMM1
            paddq XMM0,XMM14
            paddq XMM0,XMM13
            movdqa XMM13,XMM12
            punpckhdq XMM12,XMM1
            punpckldq XMM13,XMM1
            paddq XMM0,XMM13
            paddq XMM0,XMM12
            movdqa XMM12,XMM11
            punpckhdq XMM11,XMM1
            punpckldq XMM12,XMM1
            paddq XMM0,XMM12
            paddq XMM0,XMM11
            paddq XMM2,XMM0
            ja .L_41bf60

            movdqa XMM0,XMM2
            mov EDX,DWORD PTR [RSP-12]
            mov R8D,R9D
            and R8D,4294967280
            mov ECX,R11D
            psrldq XMM0,8
            paddq XMM2,XMM0
            movq RAX,XMM2
            add EDX,R8D
            sub ECX,R8D
            add RAX,R10
            cmp R9D,R8D
            je .L_41c3c3

            movsxd R9,EDX
            mov R10D,EDX
            movzx R8D,BYTE PTR [RSI+R9*1]
            mov R9D,DWORD PTR [RDI+R9*4]
            and R10D,15
            shr R9D,1
            add R8D,R10D
            imul R8D,R9D
            add RAX,R8
            cmp ECX,1
            lea R8D,DWORD PTR [RDX+1]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,2
            lea R8D,DWORD PTR [RDX+2]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,3
            lea R8D,DWORD PTR [RDX+3]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,4
            lea R8D,DWORD PTR [RDX+4]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,5
            lea R8D,DWORD PTR [RDX+5]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,6
            lea R8D,DWORD PTR [RDX+6]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,7
            lea R8D,DWORD PTR [RDX+7]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,8
            lea R8D,DWORD PTR [RDX+8]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,9
            lea R8D,DWORD PTR [RDX+9]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,10
            lea R8D,DWORD PTR [RDX+10]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,11
            lea R8D,DWORD PTR [RDX+11]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,12
            lea R8D,DWORD PTR [RDX+12]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,13
            lea R8D,DWORD PTR [RDX+13]
            je .L_41c3c3

            movsxd R10,R8D
            and R8D,15
            add EDX,14
            movzx R9D,BYTE PTR [RSI+R10*1]
            add R8D,R9D
            mov R9D,DWORD PTR [RDI+R10*4]
            shr R9D,1
            imul R8D,R9D
            add RAX,R8
            cmp ECX,14
            je .L_41c3c3

            movsxd R8,EDX
            and EDX,15
            movzx ECX,BYTE PTR [RSI+R8*1]
            add EDX,ECX
            mov ECX,DWORD PTR [RDI+R8*4]
            shr ECX,1
            imul EDX,ECX
            add RAX,RDX
.L_41c3c3:

            lea RDX,QWORD PTR [RAX+RAX*2+512]
            shr RDX,10
            add RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c3d8:

            mov R11D,254
            mov DWORD PTR [RSP-12],2
            jmp .L_41bef6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c3f0:

            mov R11D,255
            mov DWORD PTR [RSP-12],1
            jmp .L_41bef6
.L_41c403:

            mov R11D,256
            mov DWORD PTR [RSP-12],0
            xor R10D,R10D
            jmp .L_41bef6
.L_41c419:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c420:

            mov RDX,QWORD PTR [RDI+128]
            mov RAX,QWORD PTR [RDI+136]
            sub RAX,RDX
            mov RCX,RAX
            sar RCX,6
            test RCX,RCX
            je .L_41c57a

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_41c44b:

            mov EBX,DWORD PTR [RDI+20]
            test EBX,EBX
            mov DWORD PTR [RSP-12],EBX
            jle .L_41c547

            lea R15,QWORD PTR [RDX+4]
            mov R8,RSI
            add RAX,R15
            mov QWORD PTR [RSP-8],RAX
            mov EAX,DWORD PTR [RDI+24]
            mov DWORD PTR [RSP-20],EAX
.L_41c470:

            mov EAX,DWORD PTR [RSP-20]
            test EAX,EAX
            jle .L_41c531

            mov DWORD PTR [RSP-16],0
            xor EDI,EDI
.L_41c486:

            mov R13D,DWORD PTR [R15+4]
            mov R14D,DWORD PTR [RSP-16]
            xor R12D,R12D
            imul R14D,R13D
            lea EBX,DWORD PTR [R14+R13*1]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c4a0:

            test R13D,R13D
            jle .L_41c50f

            mov R9D,DWORD PTR [R15]
            mov R11D,R14D
            mov EBP,R9D
            imul EBP,R12D
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c4b8:

            test R9D,R9D
            jle .L_41c506

            mov EDX,DWORD PTR [R15+20]
            mov R10,QWORD PTR [R15+36]
            xor ECX,ECX
            imul EDX,R11D
            add EDX,EBP
            shl EDX,6
.L_41c4d0:

            movsxd RAX,EDX
            movzx ESI,WORD PTR [R10+RAX*2]
            cmp SI,DI
            je .L_41c558

            movsx EAX,SI
            add ECX,1
            add EDX,64
            sub EAX,EDI
            mov EDI,EAX
            sar EDI,31
            xor EAX,EDI
            sub EAX,EDI
            movsx EDI,SI
            bsr EAX,EAX
            add EAX,1
            cdqe 
            add DWORD PTR [R8+RAX*4],2
            cmp ECX,R9D
            jne .L_41c4d0
.L_41c506:

            add R11D,1
            cmp R11D,EBX
            jne .L_41c4b8
.L_41c50f:

            add R12D,1
            cmp R12D,DWORD PTR [RSP-20]
            jne .L_41c4a0

            add DWORD PTR [RSP-16],1
            mov EAX,DWORD PTR [RSP-16]
            cmp EAX,DWORD PTR [RSP-12]
            jne .L_41c486
.L_41c531:

            add R15,64
            add R8,1028
            cmp R15,QWORD PTR [RSP-8]
            jne .L_41c470
.L_41c547:

            pop RBX
.L_41c548:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c558:

            add ECX,1
            add DWORD PTR [R8],2
            add EDX,64
            cmp R9D,ECX
            jne .L_41c4d0

            add R11D,1
            cmp R11D,EBX
            jne .L_41c4b8

            jmp .L_41c50f
.L_41c57a:

            ret 
.L_41c57b:

            nop
            nop
            nop
            nop
            nop
.L_41c580:

            push R13
            push R12
            push RBP
            push RBX
.L_41c586:

            mov RBX,QWORD PTR [RDI+128]
            mov RAX,QWORD PTR [RDI+136]
            sub RAX,RBX
            sar RAX,6
            test RAX,RAX
            je .L_41c681

            mov RDX,RAX
            lea R9,QWORD PTR [RIP+.L_421920]
            add RBX,40
            shl RDX,8
            add RAX,RDX
            lea RBP,QWORD PTR [RSI+RAX*4]
.L_41c5bd:

            mov R8,QWORD PTR [RBX]
            mov R11,QWORD PTR [RBX+8]
            sub R11,R8
            sar R11,1
            je .L_41c66d

            xor R10D,R10D
            nop
            nop
            nop
            nop
            nop
.L_41c5d8:

            lea RDI,QWORD PTR [R10+R10*1]
            lea RCX,QWORD PTR [RIP+.L_421824]
            xor EDX,EDX
            jmp .L_41c5fc
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c5f0:

            add RCX,4
            add EDX,1
            cmp R9,RCX
            je .L_41c659
.L_41c5fc:

            movsxd RAX,DWORD PTR [RCX]
            lea RAX,QWORD PTR [R8+RAX*2]
            movsx EAX,WORD PTR [RAX+RDI*1]
            test AX,AX
            je .L_41c5f0

            cmp EDX,15
            jle .L_41c631

            sub EDX,16
            mov R12D,DWORD PTR [RSI+960]
            mov R13D,EDX
            and EDX,15
            shr R13D,4
            lea R12D,DWORD PTR [R12+R13*2+2]
            mov DWORD PTR [RSI+960],R12D
.L_41c631:

            mov R12D,EAX
            shl EDX,4
            add RCX,4
            sar R12D,31
            xor EAX,R12D
            sub EAX,R12D
            bsr EAX,EAX
            lea EAX,DWORD PTR [RAX+RDX*1+1]
            xor EDX,EDX
            cdqe 
            add DWORD PTR [RSI+RAX*4],2
            cmp R9,RCX
            jne .L_41c5fc
.L_41c659:

            test EDX,EDX
            je .L_41c660

            add DWORD PTR [RSI],2
.L_41c660:

            add R10,64
            cmp R10,R11
            jb .L_41c5d8
.L_41c66d:

            add RSI,1028
            add RBX,64
            cmp RBP,RSI
            jne .L_41c5bd
.L_41c681:

            pop RBX
.L_41c682:

            pop RBP
            pop R12
            pop R13
            ret 
.L_41c688:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c690:

            test SIL,SIL
            mov EAX,24
            jne .L_41c715

            mov RDX,QWORD PTR [RDI+32]
            mov RCX,QWORD PTR [RDI+40]
            sub RCX,RDX
            mov RAX,RCX
            sar RAX,5
            test RAX,RAX
            je .L_41ca70

            add RDX,8
            mov EAX,2
            add RCX,RDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c6c8:

            mov RSI,QWORD PTR [RDX]
            add RDX,32
            cmp RDX,RCX
            lea RAX,QWORD PTR [RAX+RSI*1+1]
            jne .L_41c6c8
.L_41c6d9:

            mov RDX,QWORD PTR [RDI+56]
            mov RCX,QWORD PTR [RDI+64]
            sub RCX,RDX
            add RDX,8
            mov RSI,RCX
            add RCX,RDX
            sar RSI,5
            test RSI,RSI
            je .L_41c711

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c700:

            mov RSI,QWORD PTR [RDX]
            add RDX,32
            cmp RDX,RCX
            lea RAX,QWORD PTR [RAX+RSI*1+2]
            jne .L_41c700
.L_41c711:

            add RAX,4
.L_41c715:

            mov R8,QWORD PTR [RDI+80]
            mov RCX,QWORD PTR [RDI+88]
            movabs RDX,-3689348814741910323
            sub RCX,R8
            sar RCX,3
            imul RCX,RDX
            test RCX,RCX
            je .L_41ca47

            lea RDX,QWORD PTR [RCX-1]
            cmp RDX,16
            jbe .L_41ca80

            pxor XMM2,XMM2
            mov R9,RCX
            lea RDX,QWORD PTR [R8+24]
            pxor XMM3,XMM3
            shr R9,2
            movdqa XMM5,XMMWORD PTR [RIP+.L_4219c0]
            xor ESI,ESI
            movdqa XMM4,XMMWORD PTR [RIP+.L_4219d0]
            nop
            nop
.L_41c770:

            add RSI,1
            add RDX,160
            movd XMM1,DWORD PTR [RDX-80]
            movd XMM6,DWORD PTR [RDX-40]
            movd XMM0,DWORD PTR [RDX-160]
            movd XMM7,DWORD PTR [RDX-120]
            punpckldq XMM1,XMM6
            cmp R9,RSI
            punpckldq XMM0,XMM7
            punpcklqdq XMM0,XMM1
            movdqa XMM1,XMM4
            pcmpeqd XMM0,XMM3
            pand XMM1,XMM0
            pandn XMM0,XMM5
            por XMM0,XMM1
            movdqa XMM1,XMM0
            punpckhdq XMM0,XMM3
            punpckldq XMM1,XMM3
            paddq XMM0,XMM1
            paddq XMM2,XMM0
            ja .L_41c770

            movdqa XMM0,XMM2
            psrldq XMM0,8
            paddq XMM2,XMM0
            movq RDX,XMM2
            add RAX,RDX
            mov RDX,RCX
            and RDX,-4
            cmp RDX,RCX
            je .L_41ca47
.L_41c7f0:

            lea RSI,QWORD PTR [RDX+RDX*4]
            shl RSI,3
            cmp DWORD PTR [R8+RSI*1+24],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [R9+RAX*1+129]
            lea R9,QWORD PTR [RDX+1]
            cmp R9,RCX
            jae .L_41ca47

            cmp DWORD PTR [R8+RSI*1+64],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [R9+RAX*1+129]
            lea R9,QWORD PTR [RDX+2]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+104],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [R9+RAX*1+129]
            lea R9,QWORD PTR [RDX+3]
            cmp R9,RCX
            jae .L_41ca47

            cmp DWORD PTR [R8+RSI*1+144],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+4]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+184],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+5]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+224],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+6]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+264],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+7]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+304],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+8]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+344],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+9]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+384],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+10]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+424],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+11]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+464],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+12]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+504],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+13]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+544],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+14]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+584],1
            sbb R9,R9
            and R9,-64
            lea RAX,QWORD PTR [RAX+R9*1+129]
            lea R9,QWORD PTR [RDX+15]
            cmp RCX,R9
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+624],1
            sbb R9,R9
            add RDX,16
            and R9,-64
            cmp RCX,RDX
            lea RAX,QWORD PTR [RAX+R9*1+129]
            jbe .L_41ca47

            cmp DWORD PTR [R8+RSI*1+664],1
            sbb RDX,RDX
            and RDX,-64
            lea RAX,QWORD PTR [RDX+RAX*1+129]
.L_41ca47:

            mov RDX,QWORD PTR [RDI+136]
            sub RDX,QWORD PTR [RDI+128]
            mov RCX,QWORD PTR [RDI+232]
            sar RDX,6
            lea RDX,QWORD PTR [RDX+RDX*4]
            lea RDX,QWORD PTR [RDX+RCX*1+24]
            add RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ca70:

            mov EAX,2
            jmp .L_41c6d9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ca80:

            xor EDX,EDX
            jmp .L_41c7f0
.L_41ca87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ca90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,2472
.L_41caa4:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+2456],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI]
            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP+56],RDI
            mov QWORD PTR [RSP+72],RSI
            mov RDI,RCX
            xor ESI,ESI
            mov QWORD PTR [RSP+16],RCX
            mov RDX,RAX
            shl RDX,8
            add RDX,RAX
            call memset@PLT

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_41d635

            mov RBX,QWORD PTR [RSP+56]
            xor R13D,R13D
            xor R12D,R12D
.L_41caf9:

            mov RAX,QWORD PTR [RSP+8]
            mov EDI,4120
            mov DWORD PTR [RAX+R12*4],R12D
.L_41cb07:

            call _Znwm@PLT
.L_41cb0c:

            mov R14,RAX
            mov RAX,QWORD PTR [RSP+16]
            mov EDX,16
            mov RCX,R14
            mov ESI,257
            mov RDI,RBX
            lea RBP,QWORD PTR [RAX+R13*1]
            mov R8,RBP
.L_41cb2b:

            call .L_43c880
.L_41cb30:

            mov R8,RBX
            shr R8,2
            neg R8
            and R8D,3
            je .L_41d6ab

            mov R11D,DWORD PTR [RBX]
            mov EAX,144
            test R11D,R11D
            mov R11D,136
            cmovne R11,RAX
            cmp R8D,1
            je .L_41d69a

            mov R10D,DWORD PTR [RBX+4]
            test R10D,R10D
            je .L_41cb70

            add R11,8
.L_41cb70:

            cmp R8D,2
            je .L_41d6d1

            mov R9D,DWORD PTR [RBX+8]
            test R9D,R9D
            je .L_41cb87

            add R11,8
.L_41cb87:

            mov R15D,253
            mov R10D,3
.L_41cb93:

            mov RAX,QWORD PTR [RSP+56]
            mov ESI,R8D
            mov R9D,256
            add RSI,R13
            sub R9D,R8D
            pxor XMM3,XMM3
            mov EDI,R9D
            lea RCX,QWORD PTR [RAX+RSI*4]
            pxor XMM2,XMM2
            shr EDI,2
            xor EAX,EAX
            mov RDX,RCX
            nop
            nop
.L_41cbc0:

            movdqa XMM0,XMMWORD PTR [RDX]
            add EAX,1
            add RDX,16
            cmp EDI,EAX
            pcmpeqd XMM0,XMM2
            pandn XMM0,XMMWORD PTR [RIP+.L_421960]
            movdqa XMM1,XMM0
            punpckhdq XMM0,XMM2
            punpckldq XMM1,XMM2
            paddq XMM0,XMM1
            paddq XMM3,XMM0
            ja .L_41cbc0

            movdqa XMM0,XMM3
            psrldq XMM0,8
            paddq XMM3,XMM0
            movq RAX,XMM3
            add R11,RAX
            mov EAX,R9D
            and EAX,4294967292
            add R10D,EAX
            sub R15D,EAX
            cmp R9D,EAX
            je .L_41cc52

            movsxd RAX,R10D
            mov EDI,DWORD PTR [RBX+RAX*4]
            test EDI,EDI
            je .L_41cc23

            add R11,8
.L_41cc23:

            cmp R15D,1
            lea EAX,DWORD PTR [R10+1]
            je .L_41cc52

            cdqe 
            mov EDX,DWORD PTR [RBX+RAX*4]
            test EDX,EDX
            je .L_41cc3a

            add R11,8
.L_41cc3a:

            add R10D,2
            cmp R15D,2
            je .L_41cc52

            movsxd RAX,R10D
            mov EAX,DWORD PTR [RBX+RAX*4]
            test EAX,EAX
            je .L_41cc52

            add R11,8
.L_41cc52:

            test R8D,R8D
            je .L_41d734

            mov R10,QWORD PTR [RSP+16]
            mov EAX,DWORD PTR [RBX]
            movzx EDX,BYTE PTR [R10+R13*1]
            shr EAX,1
            imul EDX,EAX
            cmp R8D,1
            je .L_41d688

            movzx EDI,BYTE PTR [R10+R13*1+1]
            mov EAX,DWORD PTR [RBX+4]
            shr EAX,1
            add EDI,1
            imul EAX,EDI
            add RDX,RAX
            cmp R8D,2
            je .L_41d6bf

            movzx EDI,BYTE PTR [R10+R13*1+2]
            mov EAX,DWORD PTR [RBX+8]
            mov DWORD PTR [RSP+24],3
            shr EAX,1
            add EDI,2
            imul EAX,EDI
            mov EDI,253
            add RDX,RAX
.L_41ccb5:

            movd XMM7,DWORD PTR [RSP+24]
            add RSI,QWORD PTR [RSP+16]
            mov R8D,R9D
            pxor XMM5,XMM5
            shr R8D,4
            pshufd XMM6,XMM7,0
            xor EAX,EAX
            pxor XMM8,XMM8
            pxor XMM7,XMM7
            pxor XMM4,XMM4
            paddd XMM6,XMMWORD PTR [RIP+.L_421970]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ccf0:

            movdqu XMM10,XMMWORD PTR [RSI]
            add EAX,1
            add RCX,64
            add RSI,16
            movdqa XMM9,XMM10
            movdqa XMM2,XMMWORD PTR [RIP+.L_421990]
            punpckhbw XMM10,XMM8
            punpcklbw XMM9,XMM8
            movdqa XMM1,XMMWORD PTR [RIP+.L_4219a0]
            pand XMM2,XMM6
            movdqa XMM3,XMMWORD PTR [RCX-64]
            paddd XMM1,XMM6
            movdqa XMM0,XMM9
            pand XMM1,XMMWORD PTR [RIP+.L_421990]
            psrld XMM3,1
            punpcklwd XMM0,XMM7
            punpckhwd XMM9,XMM7
            paddd XMM2,XMM0
            movdqa XMM0,XMM2
            psrlq XMM2,32
            paddd XMM1,XMM9
            movdqa XMM9,XMMWORD PTR [RIP+.L_421960]
            pmuludq XMM0,XMM3
            psrlq XMM3,32
            pshufd XMM0,XMM0,8
            pmuludq XMM2,XMM3
            pshufd XMM2,XMM2,8
            movdqa XMM3,XMM1
            psrlq XMM1,32
            paddd XMM9,XMM6
            pand XMM9,XMMWORD PTR [RIP+.L_421990]
            punpckldq XMM0,XMM2
            movdqa XMM2,XMMWORD PTR [RCX-48]
            psrld XMM2,1
            pmuludq XMM3,XMM2
            psrlq XMM2,32
            pshufd XMM3,XMM3,8
            pmuludq XMM1,XMM2
            pshufd XMM1,XMM1,8
            punpckldq XMM3,XMM1
            movdqa XMM1,XMM10
            punpckhwd XMM10,XMM7
            punpcklwd XMM1,XMM7
            paddd XMM9,XMM1
            movdqa XMM1,XMMWORD PTR [RCX-32]
            movdqa XMM2,XMM9
            psrlq XMM9,32
            psrld XMM1,1
            pmuludq XMM2,XMM1
            psrlq XMM1,32
            pmuludq XMM9,XMM1
            movdqa XMM1,XMMWORD PTR [RIP+.L_4219b0]
            pshufd XMM9,XMM9,8
            paddd XMM1,XMM6
            pand XMM1,XMMWORD PTR [RIP+.L_421990]
            paddd XMM6,XMMWORD PTR [RIP+.L_421980]
            pshufd XMM2,XMM2,8
            paddd XMM1,XMM10
            punpckldq XMM2,XMM9
            movdqa XMM10,XMM1
            movdqa XMM9,XMMWORD PTR [RCX-16]
            psrlq XMM1,32
            cmp R8D,EAX
            psrld XMM9,1
            pmuludq XMM10,XMM9
            psrlq XMM9,32
            pmuludq XMM1,XMM9
            pshufd XMM9,XMM10,8
            pshufd XMM1,XMM1,8
            punpckldq XMM9,XMM1
            movdqa XMM1,XMM9
            movdqa XMM9,XMM0
            punpckhdq XMM0,XMM4
            punpckldq XMM9,XMM4
            paddq XMM0,XMM9
            movdqa XMM9,XMM3
            punpckhdq XMM3,XMM4
            punpckldq XMM9,XMM4
            paddq XMM0,XMM9
            paddq XMM0,XMM3
            movdqa XMM3,XMM2
            punpckhdq XMM2,XMM4
            punpckldq XMM3,XMM4
            paddq XMM0,XMM3
            paddq XMM0,XMM2
            movdqa XMM2,XMM1
            punpckhdq XMM1,XMM4
            punpckldq XMM2,XMM4
            paddq XMM0,XMM2
            paddq XMM0,XMM1
            paddq XMM5,XMM0
            ja .L_41ccf0

            movdqa XMM0,XMM5
            mov ECX,R9D
            and ECX,4294967280
            psrldq XMM0,8
            paddq XMM5,XMM0
            movq RAX,XMM5
            sub EDI,ECX
            add RAX,RDX
            mov EDX,DWORD PTR [RSP+24]
            add EDX,ECX
            cmp ECX,R9D
            je .L_41d105

            movsxd RSI,EDX
            mov R8D,EDX
            movzx ECX,BYTE PTR [RBP+RSI*1]
            mov ESI,DWORD PTR [RBX+RSI*4]
            and R8D,15
            shr ESI,1
            add ECX,R8D
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+1]
            add RAX,RCX
            cmp EDI,1
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+2]
            add RAX,RCX
            cmp EDI,2
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+3]
            add RAX,RCX
            cmp EDI,3
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+4]
            add RAX,RCX
            cmp EDI,4
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+5]
            add RAX,RCX
            cmp EDI,5
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+6]
            add RAX,RCX
            cmp EDI,6
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+7]
            add RAX,RCX
            cmp EDI,7
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+8]
            add RAX,RCX
            cmp EDI,8
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+9]
            add RAX,RCX
            cmp EDI,9
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+10]
            add RAX,RCX
            cmp EDI,10
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+11]
            add RAX,RCX
            cmp EDI,11
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+12]
            add RAX,RCX
            cmp EDI,12
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            lea ESI,DWORD PTR [RDX+13]
            add RAX,RCX
            cmp EDI,13
            je .L_41d105

            movsxd R8,ESI
            and ESI,15
            add EDX,14
            movzx ECX,BYTE PTR [RBP+R8*1]
            add ECX,ESI
            mov ESI,DWORD PTR [RBX+R8*4]
            shr ESI,1
            imul ECX,ESI
            add RAX,RCX
            cmp EDI,14
            je .L_41d105

            movsxd RSI,EDX
            and EDX,15
            movzx ECX,BYTE PTR [RBP+RSI*1]
            add EDX,ECX
            mov ECX,DWORD PTR [RBX+RSI*4]
            shr ECX,1
            imul EDX,ECX
            add RAX,RDX
.L_41d105:

            lea RDX,QWORD PTR [RAX+RAX*2+512]
            add R11,RAX
            mov RDI,R14
            add RBX,1028
            add R13,257
            shr RDX,10
            add R11,RDX
            mov QWORD PTR [RSP+R12*8+80],R11
            add R12,1
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+72]
            mov RAX,QWORD PTR [RAX]
            cmp RAX,R12
            mov QWORD PTR [RSP+64],RAX
            ja .L_41caf9

            cmp RAX,1
            mov RDX,RAX
            jbe .L_41d775

            lea RAX,QWORD PTR [RSP+2192]
            lea RBX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+32],RAX
            mov R13,RAX
            lea RAX,QWORD PTR [RSP+1152]
            lea RBP,QWORD PTR [RBX+1024]
            mov QWORD PTR [RSP+48],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d188:

            lea R14,QWORD PTR [RDX-1]
            mov R10,QWORD PTR [RSP+56]
            mov ECX,128
            mov RDI,RBX
            lea R15,QWORD PTR [RDX-2]
            mov RAX,R14
            shl RAX,8
            add RAX,R14
            shl RAX,2
            lea R12,QWORD PTR [R10+RAX*1]
            lea RAX,QWORD PTR [R10+RAX*1-1028]
            mov RSI,R12
            mov QWORD PTR [RSP+40],RAX
            mov RAX,RDX

            rep movsq 

            shl RAX,8
            add RDX,RAX
            xor EAX,EAX
            lea RDX,QWORD PTR [R10+RDX*4-2056]
            mov ECX,DWORD PTR [RSI]
            mov DWORD PTR [RDI],ECX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d1e0:

            movdqu XMM0,XMMWORD PTR [RDX+RAX*1]
            paddd XMM0,XMMWORD PTR [RBX+RAX*1]
            movaps XMMWORD PTR [RBX+RAX*1],XMM0
            add RAX,16
            cmp RAX,1024
            jne .L_41d1e0

            mov EDI,4120
            mov DWORD PTR [RSP+1136],1
.L_41d20a:

            call _Znwm@PLT
.L_41d20f:

            mov RDI,QWORD PTR [RSP+32]
            mov RSI,RAX
            mov QWORD PTR [RSP+24],RAX
            mov ECX,32
            xor EAX,EAX
            mov R8,R13
            mov EDX,16
            mov QWORD PTR [RSP+32],R13

            rep stosq QWORD PTR [RDI]

            mov RCX,RSI
            mov ESI,257
            mov BYTE PTR [RDI],0
            mov RDI,RBX
.L_41d241:

            call .L_43c880
.L_41d246:

            pxor XMM3,XMM3
            mov RAX,RBX
            pxor XMM2,XMM2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d258:

            movdqa XMM0,XMMWORD PTR [RAX]
            add RAX,16
            cmp RBP,RAX
            pcmpeqd XMM0,XMM2
            pandn XMM0,XMMWORD PTR [RIP+.L_421960]
            movdqa XMM1,XMM0
            punpckldq XMM0,XMM2
            punpckhdq XMM1,XMM2
            paddq XMM0,XMM1
            paddq XMM3,XMM0
            jne .L_41d258

            movdqa XMM0,XMM3
            xor EDX,EDX
            pxor XMM7,XMM7
            psrldq XMM0,8
            pxor XMM8,XMM8
            paddq XMM3,XMM0
            pxor XMM6,XMM6
            movq RAX,XMM3
            pxor XMM4,XMM4
            movdqa XMM5,XMMWORD PTR [RIP+.L_421970]
            add RAX,136
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d2c0:

            movdqa XMM10,XMMWORD PTR [R13+RDX*1]
            movdqa XMM9,XMM10
            movdqa XMM2,XMMWORD PTR [RIP+.L_421990]
            punpckhbw XMM10,XMM8
            punpcklbw XMM9,XMM8
            pand XMM2,XMM5
            movdqa XMM1,XMMWORD PTR [RIP+.L_4219a0]
            movdqa XMM0,XMM9
            paddd XMM1,XMM5
            movdqa XMM3,XMMWORD PTR [RBX+RDX*4]
            punpckhwd XMM9,XMM6
            punpcklwd XMM0,XMM6
            pand XMM1,XMMWORD PTR [RIP+.L_421990]
            psrld XMM3,1
            paddd XMM2,XMM0
            movdqa XMM0,XMM2
            psrlq XMM2,32
            pmuludq XMM0,XMM3
            psrlq XMM3,32
            pshufd XMM0,XMM0,8
            pmuludq XMM2,XMM3
            pshufd XMM2,XMM2,8
            paddd XMM1,XMM9
            movdqa XMM3,XMM1
            psrlq XMM1,32
            movdqa XMM9,XMMWORD PTR [RIP+.L_421960]
            punpckldq XMM0,XMM2
            paddd XMM9,XMM5
            movdqa XMM2,XMMWORD PTR [RBX+RDX*4+16]
            pand XMM9,XMMWORD PTR [RIP+.L_421990]
            psrld XMM2,1
            pmuludq XMM3,XMM2
            psrlq XMM2,32
            pshufd XMM3,XMM3,8
            pmuludq XMM1,XMM2
            pshufd XMM1,XMM1,8
            punpckldq XMM3,XMM1
            movdqa XMM1,XMM10
            punpckhwd XMM10,XMM6
            punpcklwd XMM1,XMM6
            paddd XMM9,XMM1
            movdqa XMM1,XMMWORD PTR [RBX+RDX*4+32]
            movdqa XMM2,XMM9
            psrlq XMM9,32
            psrld XMM1,1
            pmuludq XMM2,XMM1
            psrlq XMM1,32
            pmuludq XMM9,XMM1
            movdqa XMM1,XMMWORD PTR [RIP+.L_4219b0]
            pshufd XMM9,XMM9,8
            paddd XMM1,XMM5
            pand XMM1,XMMWORD PTR [RIP+.L_421990]
            paddd XMM5,XMMWORD PTR [RIP+.L_421980]
            pshufd XMM2,XMM2,8
            paddd XMM1,XMM10
            punpckldq XMM2,XMM9
            movdqa XMM10,XMM1
            movdqa XMM9,XMMWORD PTR [RBX+RDX*4+48]
            psrlq XMM1,32
            add RDX,16
            psrld XMM9,1
            pmuludq XMM10,XMM9
            psrlq XMM9,32
            pmuludq XMM1,XMM9
            pshufd XMM9,XMM10,8
            cmp RDX,256
            pshufd XMM1,XMM1,8
            punpckldq XMM9,XMM1
            movdqa XMM1,XMM9
            movdqa XMM9,XMM0
            punpckldq XMM0,XMM4
            punpckhdq XMM9,XMM4
            paddq XMM0,XMM9
            movdqa XMM9,XMM3
            punpckhdq XMM3,XMM4
            punpckldq XMM9,XMM4
            paddq XMM0,XMM9
            paddq XMM0,XMM3
            movdqa XMM3,XMM2
            punpckhdq XMM2,XMM4
            punpckldq XMM3,XMM4
            paddq XMM0,XMM3
            paddq XMM0,XMM2
            movdqa XMM2,XMM1
            punpckhdq XMM1,XMM4
            punpckldq XMM2,XMM4
            paddq XMM0,XMM2
            paddq XMM0,XMM1
            paddq XMM7,XMM0
            jne .L_41d2c0

            movdqa XMM0,XMM7
            psrldq XMM0,8
            paddq XMM7,XMM0
            movq RDX,XMM7
            lea RCX,QWORD PTR [RDX+RDX*2+512]
            add RAX,RDX
            shr RCX,10
            lea RDX,QWORD PTR [RCX+RAX*1]
            mov RAX,QWORD PTR [RSP+R15*8+80]
            add RAX,QWORD PTR [RSP+R14*8+80]
            cmp RAX,RDX
            jbe .L_41d6e2

            mov RAX,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RSP+40]
            mov RSI,RBX
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RBX+1020]
            mov QWORD PTR [RDI+1020],RAX
            mov RAX,RDI
            lea RDI,QWORD PTR [RDI+8]
            and RDI,-8
            sub RAX,RDI
            sub RSI,RAX
            add EAX,1028
            shr EAX,3
            mov RCX,RAX

            rep movsq 

            mov RDI,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RSP+48]
            mov RAX,RCX
            mov ECX,128

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RSP+2176],1
            lea RDI,QWORD PTR [R12+8]
            mov QWORD PTR [R12],0
            mov RAX,QWORD PTR [RSI+1020]
            and RDI,-8
            mov QWORD PTR [R12+1020],RAX
            sub R12,RDI
            mov RAX,R15
            sub RSI,R12
            add R12D,1028
            shl RAX,8
            shr R12D,3
            add RAX,R15
            add RAX,QWORD PTR [RSP+16]
            mov ECX,R12D

            rep movsq 

            mov QWORD PTR [RSP+R15*8+80],RDX
            mov RSI,R13
            lea RDI,QWORD PTR [RAX+8]
            mov RDX,QWORD PTR [R13]
            and RDI,-8
            mov QWORD PTR [RAX],RDX
            mov RDX,QWORD PTR [R13+249]
            mov QWORD PTR [RAX+249],RDX
            sub RAX,RDI
            sub RSI,RAX
            add EAX,257
            shr EAX,3
            mov ECX,EAX

            rep movsq 

            mov RAX,QWORD PTR [RSP+8]
            movsxd RAX,DWORD PTR [RAX]
            cmp RAX,R14
            je .L_41d660

            mov RAX,QWORD PTR [RSP+8]
            movsxd RAX,DWORD PTR [RAX+4]
            cmp R14,RAX
            je .L_41d67a
.L_41d5c0:

            cmp QWORD PTR [RSP+64],2
            je .L_41d5fe

            mov RAX,QWORD PTR [RSP+8]
            movsxd RAX,DWORD PTR [RAX+8]
            cmp R14,RAX
            jne .L_41d5df

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+8],R15D
.L_41d5df:

            cmp QWORD PTR [RSP+64],3
            je .L_41d5fe

            mov RAX,QWORD PTR [RSP+8]
            movsxd RAX,DWORD PTR [RAX+12]
            cmp R14,RAX
            jne .L_41d5fe

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+12],R15D
.L_41d5fe:

            mov R15,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+24]
            sub QWORD PTR [R15],1
            call _ZdlPv@PLT

            mov RDX,QWORD PTR [R15]
            cmp RDX,1
            ja .L_41d188
.L_41d61e:

            xor EAX,EAX
            test RDX,RDX
            je .L_41d635

            mov RDX,QWORD PTR [RSP+80]
.L_41d62a:

            add RDX,7
            mov RAX,RDX
            shr RAX,3
.L_41d635:

            mov RDI,QWORD PTR [RSP+2456]
            xor RDI,QWORD PTR FS:[40]
            jne .L_41d75d

            add RSP,2472
.L_41d653:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_41d660:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX],R15D
            mov RAX,QWORD PTR [RSP+8]
            movsxd RAX,DWORD PTR [RAX+4]
            cmp R14,RAX
            jne .L_41d5c0
.L_41d67a:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RAX+4],R15D
            jmp .L_41d5c0
.L_41d688:

            mov EDI,255
            mov DWORD PTR [RSP+24],1
            jmp .L_41ccb5
.L_41d69a:

            mov R15D,255
            mov R10D,1
            jmp .L_41cb93
.L_41d6ab:

            mov R15D,256
            mov R11D,136
            xor R10D,R10D
            jmp .L_41cb93
.L_41d6bf:

            mov EDI,254
            mov DWORD PTR [RSP+24],2
            jmp .L_41ccb5
.L_41d6d1:

            mov R15D,254
            mov R10D,2
            jmp .L_41cb93
.L_41d6e2:

            mov RDI,QWORD PTR [RSP+24]
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+72]
            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_41d635

            cmp RAX,1
            mov RDX,QWORD PTR [RSP+80]
            jbe .L_41d62a

            add RDX,QWORD PTR [RSP+88]
            cmp RAX,2
            je .L_41d62a

            add RDX,QWORD PTR [RSP+96]
            cmp RAX,3
            je .L_41d62a

            add RDX,QWORD PTR [RSP+104]
            jmp .L_41d62a
.L_41d734:

            mov EDI,256
            xor EDX,EDX
            mov DWORD PTR [RSP+24],0
            jmp .L_41ccb5
.L_41d748:

            mov RDI,QWORD PTR [RSP+24]
            mov RBX,RAX
            call _ZdlPv@PLT

            mov RDI,RBX
.L_41d758:

            call _Unwind_Resume@PLT
.L_41d75d:

            call __stack_chk_fail@PLT
.L_41d762:

            mov RBX,RAX
            mov RDI,R14
            call _ZdlPv@PLT

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41d775:

            mov RDX,QWORD PTR [RSP+64]
            jmp .L_41d61e
.L_41d77f:

            nop
.L_41d780:

            push R14
            push R13
            movabs R8,-71777214294589695
            push R12
            push RBP
            movsxd RBP,EDI
            push RBX
            mov R12,RSI
            lea ECX,DWORD PTR [RBP+RBP*1]
            sub RSP,1072
.L_41d7a3:

            mov RDX,QWORD PTR [RSI]
            movsxd RCX,ECX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1064],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+8]
            mov RDI,RAX
            sub RDI,RDX
            mov RSI,RDI
            sar RSI,2
            imul RSI,R8
            cmp RCX,RSI
            jne .L_41d94f

            test RCX,RCX
            je .L_41d920

            movabs RAX,17944303573647423
            cmp RCX,RAX
            ja .L_41d945
.L_41d7f6:

            call _Znwm@PLT
.L_41d7fb:

            mov RDX,QWORD PTR [R12]
            mov RBX,RAX
            mov RAX,QWORD PTR [R12+8]
.L_41d807:

            cmp RAX,RDX
            je .L_41d89c

            lea RCX,QWORD PTR [RDX+1028]
            sub RAX,RCX
            movabs RCX,4539908804132798209
            shr RAX,2
            imul RAX,RCX
            movabs RCX,4611686018427387903
            and RAX,RCX
            add RAX,1
            mov RCX,RAX
            shl RCX,8
            add RAX,RCX
            lea R8,QWORD PTR [RBX+RAX*4]
            mov RAX,RBX
            nop
            nop
.L_41d850:

            test RAX,RAX
            je .L_41d927
.L_41d859:

            mov RCX,QWORD PTR [RDX]
            lea RDI,QWORD PTR [RAX+8]
            mov RSI,RDX
            add RDX,1028
            and RDI,-8
            mov QWORD PTR [RAX],RCX
            mov RCX,QWORD PTR [RDX-8]
            mov QWORD PTR [RAX+1020],RCX
            mov RCX,RAX
            add RAX,1028
            sub RCX,RDI
            sub RSI,RCX
            add ECX,1028
            shr ECX,3
            cmp R8,RAX

            rep movsq 

            jne .L_41d850
.L_41d89c:

            lea R14,QWORD PTR [RSP+32]
            lea R13,QWORD PTR [RSP+16]
            mov RSI,RSP
            mov RDI,RBX
            mov QWORD PTR [RSP],RBP
            mov QWORD PTR [RSP+8],RBP
            mov RCX,R14
            mov RDX,R13
.L_41d8bb:

            call .L_41ca90

            mov R12,RAX
            mov RAX,RBP
            lea RSI,QWORD PTR [RSP+8]
            shl RAX,8
            mov RCX,R14
            mov RDX,R13
            add RBP,RAX
            lea RDI,QWORD PTR [RBX+RBP*4]
            call .L_41ca90
.L_41d8e1:

            add R12,RAX
            test RBX,RBX
            je .L_41d8f1

            mov RDI,RBX
            call _ZdlPv@PLT
.L_41d8f1:

            mov RBX,QWORD PTR [RSP+1064]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_41d94a

            add RSP,1072
.L_41d90e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d920:

            xor EBX,EBX
            jmp .L_41d807
.L_41d927:

            add RDX,1028
            cmp R8,1028
            je .L_41d89c

            mov EAX,1028
            jmp .L_41d859
.L_41d945:

            call _ZSt17__throw_bad_allocv@PLT
.L_41d94a:

            call __stack_chk_fail@PLT
.L_41d94f:

            lea RCX,QWORD PTR [RIP+.L_4217c0]
            lea RSI,QWORD PTR [RIP+.L_421064]
            lea RDI,QWORD PTR [RIP+.L_421098]
            mov EDX,346
            call __assert_fail@PLT
.L_41d96e:

            test RBX,RBX
            mov RBP,RAX
            je .L_41d97e

            mov RDI,RBX
            call _ZdlPv@PLT
.L_41d97e:

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_41d986:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d990:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,4712
.L_41d9a1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+4696],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+136]
            sub RAX,QWORD PTR [RDI+128]
            mov QWORD PTR [RSP+64],RDX
            mov RDX,QWORD PTR [RCX]
            mov QWORD PTR [RSP+88],RCX
            mov QWORD PTR [RSP+96],RDI
            mov QWORD PTR [RSP+56],RSI
            mov QWORD PTR [RSP+80],R8
            sar RAX,6
            movsxd RBX,EAX
            mov QWORD PTR [RSP+104],RAX
            mov DWORD PTR [RSP+112],EAX
            mov RAX,QWORD PTR [RCX+8]
            movabs RCX,-3689348814741910323
            mov QWORD PTR [RSP],RAX
            sub RAX,RDX
            sar RAX,8
            imul RAX,RCX
            cmp RBX,RAX
            ja .L_41dec3

            jae .L_41da2a

            lea RAX,QWORD PTR [RBX+RBX*4]
            shl RAX,8
            add RDX,RAX
            mov RAX,QWORD PTR [RSP+88]
            mov QWORD PTR [RAX+8],RDX
.L_41da2a:

            mov RAX,QWORD PTR [RSP+80]
            movabs RCX,-3689348814741910323
            mov RDX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP],RAX
            sub RAX,RDX
            sar RAX,8
            imul RAX,RCX
            cmp RBX,RAX
            ja .L_41f55f

            jae .L_41da6e

            lea RAX,QWORD PTR [RBX+RBX*4]
            shl RAX,8
            add RDX,RAX
            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RAX+8],RDX
.L_41da6e:

            pxor XMM0,XMM0
            test RBX,RBX
            mov QWORD PTR [RSP+160],0
            movaps XMMWORD PTR [RSP+144],XMM0
            je .L_41f610

            movabs RAX,17944303573647423
            cmp RBX,RAX
            ja .L_41f6c9

            mov R9,RBX
            shl R9,8
            add R9,RBX
            lea RBP,QWORD PTR [R9*4]
            mov RDI,RBP
.L_41dab7:

            call _Znwm@PLT
.L_41dabc:

            mov QWORD PTR [RSP],RAX
            lea R9,QWORD PTR [RAX+RBP*1]
            mov RSI,RAX
            movq XMM0,QWORD PTR [RSP]
            mov RDX,RAX
            punpcklqdq XMM0,XMM0
            mov QWORD PTR [RSP+160],R9
            mov R8,RBX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+144],XMM0
.L_41dae8:

            test RDX,RDX
            jne .L_41daf8

            sub R8,1
            je .L_41db38

            mov EDX,1028
.L_41daf8:

            lea RDI,QWORD PTR [RDX+8]
            mov RCX,RDX
            mov QWORD PTR [RDX+1020],0
            mov QWORD PTR [RDX],0
            add RDX,1028
            and RDI,-8
            sub RCX,RDI
            add ECX,1028
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RDX-4],1
            sub R8,1
            jne .L_41dae8
.L_41db38:

            mov RDI,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+152],R9
            xor R12D,R12D
            call .L_41c420

            mov RAX,QWORD PTR [RSP+104]
            pxor XMM0,XMM0
            xor ECX,ECX
            mov QWORD PTR [RSP+128],RBX
            mov QWORD PTR [RSP+192],0
            mov EBP,EAX
            shl EBP,8
            add EBP,EAX
            movsxd RBP,EBP
            test RBP,RBP
            movaps XMMWORD PTR [RSP+176],XMM0
            jne .L_41f50a
.L_41db87:

            lea RDX,QWORD PTR [RSP+208]
            lea RSI,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+184],R12
.L_41dba7:

            call .L_41ca90

            mov RSI,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+152]
            movabs RDI,-71777214294589695
            mov RCX,QWORD PTR [RSP+128]
            sub RDX,RSI
            sar RDX,2
            lea RAX,QWORD PTR [RBX+RCX*1]
            imul RDX,RDI
            cmp RAX,RDX
            ja .L_41f53b

            jae .L_41dbfe

            mov RDX,RAX
            shl RDX,8
            add RDX,RAX
            lea RDX,QWORD PTR [RSI+RDX*4]
            mov QWORD PTR [RSP+152],RDX
.L_41dbfe:

            mov RDX,RAX
            mov RSI,QWORD PTR [RSP+184]
            shl RDX,8
            add RAX,RDX
            mov RDX,QWORD PTR [RSP+176]
            sub RSI,RDX
            cmp RAX,RSI
            ja .L_41f4ea

            jae .L_41dc31

            add RAX,RDX
            mov QWORD PTR [RSP+184],RAX
.L_41dc31:

            mov RAX,RCX
            mov RDI,QWORD PTR [RSP+96]
            shl RAX,8
            add RCX,RAX
            mov RAX,QWORD PTR [RSP+144]
            lea RSI,QWORD PTR [RAX+RCX*4]
            call .L_41c580

            mov RDX,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+144]
            lea RSI,QWORD PTR [RSP+136]
            mov RCX,QWORD PTR [RSP+176]
            mov QWORD PTR [RSP+136],RBX
            mov RAX,RDX
            shl RAX,8
            add RAX,RDX
            lea RDX,QWORD PTR [RSP+224]
            lea RDI,QWORD PTR [RDI+RAX*4]
            add RCX,RAX
            call .L_41ca90
.L_41dc97:

            mov RBP,QWORD PTR [RSP+144]
            mov RDX,QWORD PTR [RSP+152]
            movabs RCX,-71777214294589695
            mov R14,QWORD PTR [RSP+136]
            add R14D,DWORD PTR [RSP+128]
            sub RDX,RBP
            sar RDX,2
            imul RDX,RCX
            movsxd RSI,R14D
            cmp RSI,RDX
            mov RAX,RDX
            ja .L_41f4a5

            cmp RSI,RDX
            jae .L_41dd03

            mov RAX,RSI
            shl RAX,8
            add RAX,RSI
            shl RAX,2
            lea RDX,QWORD PTR [RBP+RAX*1]
            sar RAX,2
            imul RAX,RCX
            mov QWORD PTR [RSP+152],RDX
.L_41dd03:

            test RAX,RAX
            je .L_41f4e3
.L_41dd0c:

            mov RDX,RAX
            pxor XMM3,XMM3
            shl RDX,8
            pcmpeqd XMM2,XMM2
            add RAX,RDX
            mov R8,RBP
            xor R11D,R11D
            lea R12,QWORD PTR [RBP+RAX*4]
            xor EBX,EBX
            mov R13D,256
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dd38:

            mov RAX,R8
            shr RAX,2
            neg RAX
            and EAX,3
            je .L_41dea5

            mov EDI,DWORD PTR [R8]
            xor R10D,R10D
            test EDI,EDI
            setne R10B
            cmp EAX,1
            je .L_41de96

            mov ESI,DWORD PTR [R8+4]
            xor EDX,EDX
            test ESI,ESI
            setne DL
            add R10D,EDX
            cmp EAX,2
            je .L_41deb4

            mov ECX,DWORD PTR [R8+8]
            xor EDX,EDX
            mov EDI,253
            mov ESI,3
            test ECX,ECX
            setne DL
            add R10D,EDX
.L_41dd8f:

            mov R9D,R13D
            pxor XMM1,XMM1
            sub R9D,EAX
            mov EAX,EAX
            add RAX,R11
            mov ECX,R9D
            lea RDX,QWORD PTR [RBP+RAX*4]
            shr ECX,2
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_41ddb0:

            movdqa XMM0,XMMWORD PTR [RDX]
            add EAX,1
            add RDX,16
            cmp ECX,EAX
            pcmpeqd XMM0,XMM3
            pandn XMM0,XMM2
            psubd XMM1,XMM0
            ja .L_41ddb0

            movdqa XMM0,XMM1
            psrldq XMM0,8
            paddd XMM1,XMM0
            movdqa XMM0,XMM1
            psrldq XMM0,4
            paddd XMM1,XMM0
            movd EAX,XMM1
            add R10D,EAX
            mov EAX,R9D
            and EAX,4294967292
            add ESI,EAX
            sub EDI,EAX
            cmp EAX,R9D
            je .L_41de3f

            movsxd RAX,ESI
            mov R15D,DWORD PTR [R8+RAX*4]
            xor EAX,EAX
            test R15D,R15D
            setne AL
            add R10D,EAX
            cmp EDI,1
            lea EAX,DWORD PTR [RSI+1]
            je .L_41de3f

            cdqe 
            mov R9D,DWORD PTR [R8+RAX*4]
            xor EAX,EAX
            test R9D,R9D
            setne AL
            add ESI,2
            add R10D,EAX
            cmp EDI,2
            je .L_41de3f

            movsxd RAX,ESI
            mov EDI,DWORD PTR [R8+RAX*4]
            xor EAX,EAX
            test EDI,EDI
            setne AL
            add R10D,EAX
.L_41de3f:

            add R8,1028
            add EBX,R10D
            add R11,257
            cmp R12,R8
            jne .L_41dd38
.L_41de59:

            mov EAX,R14D
            shl EAX,4
            lea EAX,DWORD PTR [R14+RAX*1+2]
            add EBX,EAX
            mov RAX,QWORD PTR [RSP+104]
            movsxd RBX,EBX
            lea EAX,DWORD PTR [RAX+RAX*1+6]
            mov DWORD PTR [RSP+116],EAX
            cdqe 
            mov QWORD PTR [RSP+120],RAX
            lea RAX,QWORD PTR [RBX+RAX*1+4]
            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            jne .L_41ded8

            mov BYTE PTR [0],0
            ud2 
.L_41de96:

            mov EDI,255
            mov ESI,1
            jmp .L_41dd8f
.L_41dea5:

            mov EDI,256
            xor ESI,ESI
            xor R10D,R10D
            jmp .L_41dd8f
.L_41deb4:

            mov EDI,254
            mov ESI,2
            jmp .L_41dd8f
.L_41dec3:

            mov RDI,QWORD PTR [RSP+88]
            mov RSI,RBX
            sub RSI,RAX
.L_41dece:

            call .L_421580
.L_41ded3:

            jmp .L_41da2a
.L_41ded8:

            mov RDI,RAX
            mov R15,RAX
.L_41dede:

            call _Znwm@PLT
.L_41dee3:

            xor ESI,ESI
            mov RDX,R15
            mov RDI,RAX
            mov RBP,RAX
            call memset@PLT

            mov RAX,RBX
            mov ESI,4294952191
            mov BYTE PTR [RBP+3],BL
            shr RAX,8
            test R14D,R14D
            mov WORD PTR [RBP],SI
            mov BYTE PTR [RBP+2],AL
            jle .L_41f5bf

            lea EAX,DWORD PTR [R14-1]
            lea R8,QWORD PTR [RSP+240]
            lea R11,QWORD PTR [RSP+1344]
            movdqa XMM2,XMMWORD PTR [RIP+.L_4219e0]
            mov EBX,4
            add RAX,1
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+72],RAX
            lea RAX,QWORD PTR [RSP+2368]
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [RSP+3408]
            mov QWORD PTR [RSP+32],RAX
            nop
.L_41df60:

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+128]
            mov ECX,128
            pxor XMM0,XMM0
            mov DWORD PTR [RSP+304],0
            mov EAX,ESI
            mov QWORD PTR [RSP+24],RDI
            sub EAX,EDI
            cmp RDI,RSI
            mov RDI,QWORD PTR [RSP+48]
            cmova EAX,ESI
            mov DWORD PTR [RSP+20],EAX
            xor EAX,EAX

            rep stosq QWORD PTR [RDI]

            mov RAX,RSI
            shl RSI,8
            add RSI,RAX
            add RSI,QWORD PTR [RSP+176]
            movaps XMMWORD PTR [RSP+240],XMM0
            movaps XMMWORD PTR [RSP+256],XMM0
            lea RCX,QWORD PTR [RSI+257]
            mov RAX,RSI
            movaps XMMWORD PTR [RSP+272],XMM0
            movaps XMMWORD PTR [RSP+288],XMM0
            mov DWORD PTR [RDI],0
.L_41dfe0:

            movzx EDX,BYTE PTR [RAX]
            test DL,DL
            je .L_41dfec

            add DWORD PTR [R8+RDX*4],1
.L_41dfec:

            add RAX,1
            cmp RAX,RCX
            jne .L_41dfe0

            mov EAX,DWORD PTR [RSP+240]
            mov DWORD PTR [RSP+3408],0
            mov DWORD PTR [RSP+3412],EAX
            add EAX,DWORD PTR [RSP+244]
            mov DWORD PTR [RSP+3416],EAX
            add EAX,DWORD PTR [RSP+248]
            mov DWORD PTR [RSP+3420],EAX
            add EAX,DWORD PTR [RSP+252]
            mov DWORD PTR [RSP+3424],EAX
            add EAX,DWORD PTR [RSP+256]
            mov DWORD PTR [RSP+3428],EAX
            add EAX,DWORD PTR [RSP+260]
            mov DWORD PTR [RSP+3432],EAX
            add EAX,DWORD PTR [RSP+264]
            mov DWORD PTR [RSP+3436],EAX
            add EAX,DWORD PTR [RSP+268]
            mov DWORD PTR [RSP+3440],EAX
            add EAX,DWORD PTR [RSP+272]
            mov DWORD PTR [RSP+3444],EAX
            add EAX,DWORD PTR [RSP+276]
            mov DWORD PTR [RSP+3448],EAX
            add EAX,DWORD PTR [RSP+280]
            mov DWORD PTR [RSP+3452],EAX
            add EAX,DWORD PTR [RSP+284]
            mov DWORD PTR [RSP+3456],EAX
            add EAX,DWORD PTR [RSP+288]
            mov DWORD PTR [RSP+3460],EAX
            add EAX,DWORD PTR [RSP+292]
            mov DWORD PTR [RSP+3464],EAX
            add EAX,DWORD PTR [RSP+296]
            mov DWORD PTR [RSP+3468],EAX
            add EAX,DWORD PTR [RSP+300]
            mov DWORD PTR [RSP+3472],EAX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e0e8:

            movzx EDX,BYTE PTR [RSI+RAX*1]
            test DL,DL
            je .L_41e109

            movsxd RCX,DWORD PTR [RSP+RDX*4+3408]
            lea EDI,DWORD PTR [RCX+1]
            mov DWORD PTR [RSP+RCX*4+2368],EAX
            mov DWORD PTR [RSP+RDX*4+3408],EDI
.L_41e109:

            add RAX,1
            cmp RAX,257
            jne .L_41e0e8

            pcmpeqd XMM0,XMM0
            mov RAX,QWORD PTR [RSP+32]
            xor ECX,ECX
            mov R9D,1
            mov EDI,ECX
            movaps XMMWORD PTR [RAX],XMM0
            movaps XMMWORD PTR [RAX+16],XMM0
            movaps XMMWORD PTR [RAX+32],XMM0
            movaps XMMWORD PTR [RAX+48],XMM0
            movaps XMMWORD PTR [RAX+64],XMM0
            movaps XMMWORD PTR [RAX+80],XMM0
            movaps XMMWORD PTR [RAX+96],XMM0
            movaps XMMWORD PTR [RAX+112],XMM0
            movaps XMMWORD PTR [RAX+128],XMM0
            movaps XMMWORD PTR [RAX+144],XMM0
            movaps XMMWORD PTR [RAX+160],XMM0
            movaps XMMWORD PTR [RAX+176],XMM0
            movaps XMMWORD PTR [RAX+192],XMM0
            movaps XMMWORD PTR [RAX+208],XMM0
            movaps XMMWORD PTR [RAX+224],XMM0
            movaps XMMWORD PTR [RAX+240],XMM0
            nop
.L_41e180:

            mov R10D,R9D
            mov ECX,DWORD PTR [R8+R9*4]
            test ECX,ECX
            lea R12D,DWORD PTR [RCX-1]
            je .L_41e2bd

            movsxd RDX,EDI
            mov R15D,5
            lea RAX,QWORD PTR [R11+RDX*4]
            shr RAX,2
            neg RAX
            and EAX,3
            lea ESI,DWORD PTR [RAX+3]
            cmp ESI,5
            cmovb ESI,R15D
            cmp ESI,R12D
            ja .L_41f0f0

            test EAX,EAX
            je .L_41f0d8

            lea R13D,DWORD PTR [RDI+1]
            cmp EAX,1
            mov DWORD PTR [RSP+RDX*4+1344],R9D
            lea ESI,DWORD PTR [RCX-2]
            mov R14D,R13D
            je .L_41e208

            lea R15D,DWORD PTR [RDI+2]
            movsxd RSI,R13D
            cmp EAX,3
            mov DWORD PTR [RSP+RSI*4+1344],R9D
            lea ESI,DWORD PTR [RCX-3]
            mov R14D,R15D
            jne .L_41e208

            movsxd R15,R15D
            lea R14D,DWORD PTR [RDI+3]
            lea ESI,DWORD PTR [RCX-4]
            mov DWORD PTR [RSP+R15*4+1344],R9D
.L_41e208:

            mov DWORD PTR [RSP],R10D
            sub ECX,EAX
            add RAX,RDX
            movd XMM5,DWORD PTR [RSP]
            mov EDI,ECX
            lea RDX,QWORD PTR [R11+RAX*4]
            shr EDI,2
            xor EAX,EAX
            pshufd XMM0,XMM5,0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e230:

            add EAX,1
            add RDX,16
            movaps XMMWORD PTR [RDX-16],XMM0
            cmp EAX,EDI
            jb .L_41e230

            mov EAX,ECX
            and EAX,4294967292
            sub ESI,EAX
            add R14D,EAX
            cmp EAX,ECX
            je .L_41e2b9
.L_41e24d:

            movsxd RDX,R14D
            test ESI,ESI
            lea EAX,DWORD PTR [R14+1]
            mov DWORD PTR [RSP+RDX*4+1344],R10D
            je .L_41e2b9

            cdqe 
            cmp ESI,1
            lea EDX,DWORD PTR [R14+2]
            mov DWORD PTR [RSP+RAX*4+1344],R10D
            je .L_41e2b9

            movsxd RDX,EDX
            cmp ESI,2
            lea EAX,DWORD PTR [R14+3]
            mov DWORD PTR [RSP+RDX*4+1344],R10D
            je .L_41e2b9

            cdqe 
            cmp ESI,3
            lea EDX,DWORD PTR [R14+4]
            mov DWORD PTR [RSP+RAX*4+1344],R10D
            je .L_41e2b9

            add R14D,5
            movsxd RDX,EDX
            cmp ESI,4
            mov DWORD PTR [RSP+RDX*4+1344],R10D
            je .L_41e2b9

            movsxd R14,R14D
            mov DWORD PTR [RSP+R14*4+1344],R10D
.L_41e2b9:

            lea EDI,DWORD PTR [R12+R13*1]
.L_41e2bd:

            add R9,1
            cmp R9,17
            jne .L_41e180

            test EDI,EDI
            mov ECX,EDI
            je .L_41e38c

            lea R13D,DWORD PTR [RDI-1]
            movsxd RAX,R13D
            mov DWORD PTR [RSP+RAX*4+1344],0
            mov R9D,DWORD PTR [RSP+1344]
            test R9D,R9D
            je .L_41e342

            lea R12,QWORD PTR [RSP+320]
            mov ESI,R9D
            xor EDX,EDX
            xor EDI,EDI
            nop
            nop
            nop
            nop
            nop
.L_41e308:

            cmp R9D,ESI
            jne .L_41f0ff

            lea EAX,DWORD PTR [RDI+1]
            cdqe 
            sub RDI,RAX
            lea R10,QWORD PTR [R12+RDI*4]
            nop
            nop
            nop
.L_41e320:

            mov DWORD PTR [R10+RAX*4],EDX
            movsxd RDI,EAX
            add RAX,1
            mov ESI,DWORD PTR [R11+RAX*4-4]
            add EDX,1
            cmp R9D,ESI
            je .L_41e320

            add EDX,EDX
            add R9D,1
            test ESI,ESI
            jne .L_41e308
.L_41e342:

            test R13D,R13D
            je .L_41e38c

            lea EAX,DWORD PTR [RCX-2]
            mov RDI,QWORD PTR [RSP+48]
            lea R12,QWORD PTR [RSP+320]
            lea RCX,QWORD PTR [RAX*4+4]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e368:

            movsxd RDX,DWORD PTR [RDI+RAX*1]
            mov ESI,DWORD PTR [R11+RAX*1]
            mov BYTE PTR [RSP+RDX*1+3408],SIL
            mov ESI,DWORD PTR [R12+RAX*1]
            add RAX,4
            cmp RAX,RCX
            mov DWORD PTR [RSP+RDX*4+3664],ESI
            jne .L_41e368
.L_41e38c:

            mov ECX,DWORD PTR [RSP+112]
            test ECX,ECX
            jle .L_41e3fd

            mov RDI,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+24],RDI
            mov EAX,DWORD PTR [RSP+20]
            ja .L_41f10a

            cmp EAX,DWORD PTR [RSP+224]
            je .L_41f1d2

            cmp DWORD PTR [RSP+112],1
            je .L_41e3fd

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+228]
            je .L_41f22a
.L_41e3cd:

            cmp DWORD PTR [RSP+112],2
            je .L_41e3fd

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+232]
            je .L_41f28f
.L_41e3e5:

            cmp DWORD PTR [RSP+112],3
            je .L_41e3fd

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+236]
            je .L_41f3c8
.L_41e3fd:

            mov EAX,DWORD PTR [RSP+304]
            test EAX,EAX
            jne .L_41f1c0
.L_41e40c:

            mov EAX,DWORD PTR [RSP+300]
            test EAX,EAX
            jne .L_41f403

            mov EAX,DWORD PTR [RSP+296]
            test EAX,EAX
            jne .L_41f487

            mov EAX,DWORD PTR [RSP+292]
            test EAX,EAX
            jne .L_41f480

            mov EAX,DWORD PTR [RSP+288]
            test EAX,EAX
            jne .L_41f49b

            mov EAX,DWORD PTR [RSP+284]
            test EAX,EAX
            jne .L_41f491

            mov EAX,DWORD PTR [RSP+280]
            test EAX,EAX
            jne .L_41f574

            mov EAX,DWORD PTR [RSP+276]
            test EAX,EAX
            jne .L_41f57e

            mov EAX,DWORD PTR [RSP+272]
            test EAX,EAX
            jne .L_41f592

            mov EAX,DWORD PTR [RSP+268]
            test EAX,EAX
            jne .L_41f588

            mov EAX,DWORD PTR [RSP+264]
            test EAX,EAX
            jne .L_41f606

            mov EAX,DWORD PTR [RSP+260]
            test EAX,EAX
            jne .L_41f5fc

            mov EAX,DWORD PTR [RSP+256]
            test EAX,EAX
            jne .L_41f5f5

            mov EAX,DWORD PTR [RSP+252]
            test EAX,EAX
            jne .L_41f5ee

            mov EAX,DWORD PTR [RSP+248]
            test EAX,EAX
            jne .L_41f59c

            mov EDX,DWORD PTR [RSP+244]
            xor ECX,ECX
            test EDX,EDX
            setne CL
            mov RDX,RCX
            sub DWORD PTR [RSP+RCX*4+240],1
            xor ECX,ECX
.L_41e4f9:

            movsxd RSI,ECX
            add ECX,1
            add EAX,DWORD PTR [RSP+RSI*4+240]
            cmp ECX,EDX
            jg .L_41e547
.L_41e50a:

            movsxd RSI,ECX
            add EAX,DWORD PTR [RSP+RSI*4+240]
            lea ESI,DWORD PTR [RCX+1]
            cmp ESI,EDX
            jg .L_41e547

            movsxd RSI,ESI
            add EAX,DWORD PTR [RSP+RSI*4+240]
            lea ESI,DWORD PTR [RCX+2]
            cmp ESI,EDX
            jg .L_41e547

            movsxd RSI,ESI
            add ECX,3
            add EAX,DWORD PTR [RSP+RSI*4+240]
            cmp ECX,EDX
            jg .L_41e547

            movsxd RCX,ECX
            add EAX,DWORD PTR [RSP+RCX*4+240]
.L_41e547:

            mov RDI,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+24],RDI
            mov EDX,EDI
            ja .L_41e55f

            sub DL,BYTE PTR [RSP+128]
            add EDX,16
.L_41e55f:

            mov BYTE PTR [RBP+RBX*1],DL
            mov EDX,DWORD PTR [RSP+244]
            test EAX,EAX
            lea RCX,QWORD PTR [RBX+17]
            mov BYTE PTR [RBP+RBX*1+1],DL
            mov EDX,DWORD PTR [RSP+248]
            mov BYTE PTR [RBP+RBX*1+2],DL
            mov EDX,DWORD PTR [RSP+252]
            mov BYTE PTR [RBP+RBX*1+3],DL
            mov EDX,DWORD PTR [RSP+256]
            mov BYTE PTR [RBP+RBX*1+4],DL
            mov EDX,DWORD PTR [RSP+260]
            mov BYTE PTR [RBP+RBX*1+5],DL
            mov EDX,DWORD PTR [RSP+264]
            mov BYTE PTR [RBP+RBX*1+6],DL
            mov EDX,DWORD PTR [RSP+268]
            mov BYTE PTR [RBP+RBX*1+7],DL
            mov EDX,DWORD PTR [RSP+272]
            mov BYTE PTR [RBP+RBX*1+8],DL
            mov EDX,DWORD PTR [RSP+276]
            mov BYTE PTR [RBP+RBX*1+9],DL
            mov EDX,DWORD PTR [RSP+280]
            mov BYTE PTR [RBP+RBX*1+10],DL
            mov EDX,DWORD PTR [RSP+284]
            mov BYTE PTR [RBP+RBX*1+11],DL
            mov EDX,DWORD PTR [RSP+288]
            mov BYTE PTR [RBP+RBX*1+12],DL
            mov EDX,DWORD PTR [RSP+292]
            mov BYTE PTR [RBP+RBX*1+13],DL
            mov EDX,DWORD PTR [RSP+296]
            mov BYTE PTR [RBP+RBX*1+14],DL
            mov EDX,DWORD PTR [RSP+300]
            mov BYTE PTR [RBP+RBX*1+15],DL
            mov EDX,DWORD PTR [RSP+304]
            mov BYTE PTR [RBP+RBX*1+16],DL
            jle .L_41f1ca

            lea ESI,DWORD PTR [RAX-1]
            cmp ESI,14
            jbe .L_41f3d2

            movdqa XMM3,XMMWORD PTR [RSP+2384]
            mov EDI,EAX
            lea RDX,QWORD PTR [RBP+RCX*1]
            shr EDI,4
            movdqa XMM0,XMMWORD PTR [RSP+2368]
            cmp EDI,1
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2416]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2400]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX],XMM0
            je .L_41ed8f

            cmp EDI,2
            movdqa XMM3,XMMWORD PTR [RSP+2448]
            movdqa XMM0,XMMWORD PTR [RSP+2432]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2480]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2464]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+16],XMM0
            je .L_41ed8f

            cmp EDI,3
            movdqa XMM3,XMMWORD PTR [RSP+2512]
            movdqa XMM0,XMMWORD PTR [RSP+2496]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2544]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2528]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+32],XMM0
            je .L_41ed8f

            cmp EDI,4
            movdqa XMM3,XMMWORD PTR [RSP+2576]
            movdqa XMM0,XMMWORD PTR [RSP+2560]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2608]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2592]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+48],XMM0
            je .L_41ed8f

            cmp EDI,5
            movdqa XMM3,XMMWORD PTR [RSP+2640]
            movdqa XMM0,XMMWORD PTR [RSP+2624]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2672]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2656]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+64],XMM0
            je .L_41ed8f

            cmp EDI,6
            movdqa XMM3,XMMWORD PTR [RSP+2704]
            movdqa XMM0,XMMWORD PTR [RSP+2688]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2736]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2720]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+80],XMM0
            je .L_41ed8f

            cmp EDI,7
            movdqa XMM3,XMMWORD PTR [RSP+2768]
            movdqa XMM0,XMMWORD PTR [RSP+2752]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2800]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2784]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+96],XMM0
            je .L_41ed8f

            cmp EDI,8
            movdqa XMM3,XMMWORD PTR [RSP+2832]
            movdqa XMM0,XMMWORD PTR [RSP+2816]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2864]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2848]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+112],XMM0
            je .L_41ed8f

            cmp EDI,9
            movdqa XMM3,XMMWORD PTR [RSP+2896]
            movdqa XMM0,XMMWORD PTR [RSP+2880]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2928]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2912]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+128],XMM0
            je .L_41ed8f

            cmp EDI,10
            movdqa XMM3,XMMWORD PTR [RSP+2960]
            movdqa XMM0,XMMWORD PTR [RSP+2944]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+2992]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+2976]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+144],XMM0
            je .L_41ed8f

            cmp EDI,11
            movdqa XMM3,XMMWORD PTR [RSP+3024]
            movdqa XMM0,XMMWORD PTR [RSP+3008]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+3056]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+3040]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+160],XMM0
            je .L_41ed8f

            cmp EDI,12
            movdqa XMM3,XMMWORD PTR [RSP+3088]
            movdqa XMM0,XMMWORD PTR [RSP+3072]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+3120]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+3104]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+176],XMM0
            je .L_41ed8f

            cmp EDI,13
            movdqa XMM3,XMMWORD PTR [RSP+3152]
            movdqa XMM0,XMMWORD PTR [RSP+3136]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+3184]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+3168]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+192],XMM0
            je .L_41ed8f

            cmp EDI,14
            movdqa XMM3,XMMWORD PTR [RSP+3216]
            movdqa XMM0,XMMWORD PTR [RSP+3200]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+3248]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+3232]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+208],XMM0
            je .L_41ed8f

            cmp EDI,15
            movdqa XMM3,XMMWORD PTR [RSP+3280]
            movdqa XMM0,XMMWORD PTR [RSP+3264]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+3312]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+3296]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+224],XMM0
            je .L_41ed8f

            movdqa XMM3,XMMWORD PTR [RSP+3344]
            movdqa XMM0,XMMWORD PTR [RSP+3328]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM3
            movdqa XMM4,XMMWORD PTR [RSP+3376]
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM3,XMM1
            movdqa XMM1,XMMWORD PTR [RSP+3360]
            punpcklwd XMM0,XMM3
            movdqa XMM3,XMM1
            punpcklwd XMM1,XMM4
            punpckhwd XMM3,XMM4
            movdqa XMM4,XMM1
            pand XMM0,XMM2
            punpckhwd XMM4,XMM3
            punpcklwd XMM1,XMM3
            punpcklwd XMM1,XMM4
            pand XMM1,XMM2
            packuswb XMM0,XMM1
            movups XMMWORD PTR [RDX+240],XMM0
.L_41ed8f:

            mov EDX,EAX
            and EDX,4294967280
            mov EDI,EDX
            add RCX,RDI
            cmp EDX,EAX
            je .L_41ef03
.L_41eda1:

            movsxd RDI,EDX
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1],DIL
            lea EDI,DWORD PTR [RDX+1]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+1],DIL
            lea EDI,DWORD PTR [RDX+2]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+2],DIL
            lea EDI,DWORD PTR [RDX+3]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+3],DIL
            lea EDI,DWORD PTR [RDX+4]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+4],DIL
            lea EDI,DWORD PTR [RDX+5]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+5],DIL
            lea EDI,DWORD PTR [RDX+6]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+6],DIL
            lea EDI,DWORD PTR [RDX+7]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+7],DIL
            lea EDI,DWORD PTR [RDX+8]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+8],DIL
            lea EDI,DWORD PTR [RDX+9]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+9],DIL
            lea EDI,DWORD PTR [RDX+10]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+10],DIL
            lea EDI,DWORD PTR [RDX+11]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+11],DIL
            lea EDI,DWORD PTR [RDX+12]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            mov BYTE PTR [RBP+RCX*1+12],DIL
            lea EDI,DWORD PTR [RDX+13]
            cmp EDI,EAX
            jge .L_41ef03

            movsxd RDI,EDI
            add EDX,14
            mov EDI,DWORD PTR [RSP+RDI*4+2368]
            cmp EDX,EAX
            mov BYTE PTR [RBP+RCX*1+13],DIL
            jge .L_41ef03

            movsxd RDX,EDX
            mov EAX,DWORD PTR [RSP+RDX*4+2368]
            mov BYTE PTR [RBP+RCX*1+14],AL
.L_41ef03:

            lea RBX,QWORD PTR [RBX+RSI*1+18]
.L_41ef08:

            add QWORD PTR [RSP+8],1
            mov RAX,QWORD PTR [RSP+8]
            cmp RAX,QWORD PTR [RSP+72]
            jne .L_41df60

            lea RDX,QWORD PTR [RBX+1]
            lea R9,QWORD PTR [RBX+2]
            lea R8,QWORD PTR [RBX+3]
            lea RDI,QWORD PTR [RBX+4]
            lea RAX,QWORD PTR [RBX+5]
            lea RSI,QWORD PTR [RBX+6]
            lea RCX,QWORD PTR [RBX+7]
.L_41ef3a:

            mov BYTE PTR [RBP+RBX*1],255
            mov BYTE PTR [RBP+RDX*1],218
            movzx EBX,BYTE PTR [RSP+116]
            mov RDX,QWORD PTR [RSP+120]
            shr RDX,8
            mov BYTE PTR [RBP+R9*1],DL
            mov BYTE PTR [RBP+R8*1],BL
            mov RBX,QWORD PTR [RSP+104]
            test EBX,EBX
            mov BYTE PTR [RBP+RDI*1],BL
            jle .L_41f00d

            mov RDI,QWORD PTR [RSP+96]
            mov RCX,QWORD PTR [RDI+128]
            mov EDX,DWORD PTR [RCX]
            mov BYTE PTR [RBP+RAX*1],DL
            mov EDX,DWORD PTR [RSP+208]
            shl EDX,4
            or DL,BYTE PTR [RSP+224]
            cmp EBX,1
            mov BYTE PTR [RBP+RAX*1+1],DL
            je .L_41effd

            mov EDX,DWORD PTR [RCX+64]
            mov BYTE PTR [RBP+RAX*1+2],DL
            mov EDX,DWORD PTR [RSP+212]
            shl EDX,4
            or DL,BYTE PTR [RSP+228]
            cmp EBX,2
            mov BYTE PTR [RBP+RAX*1+3],DL
            je .L_41effd

            mov EDX,DWORD PTR [RCX+128]
            mov BYTE PTR [RBP+RAX*1+4],DL
            mov EDX,DWORD PTR [RSP+216]
            shl EDX,4
            or DL,BYTE PTR [RSP+232]
            cmp EBX,3
            mov BYTE PTR [RBP+RAX*1+5],DL
            je .L_41effd

            mov EDX,DWORD PTR [RCX+192]
            mov BYTE PTR [RBP+RAX*1+6],DL
            mov EDX,DWORD PTR [RSP+220]
            shl EDX,4
            or DL,BYTE PTR [RSP+236]
            mov BYTE PTR [RBP+RAX*1+7],DL
.L_41effd:

            lea EDX,DWORD PTR [RBX-1]
            lea RAX,QWORD PTR [RAX+RDX*2+2]
            lea RSI,QWORD PTR [RAX+1]
            lea RCX,QWORD PTR [RAX+2]
.L_41f00d:

            mov BYTE PTR [RBP+RAX*1],0
            add RAX,3
            cmp QWORD PTR [RSP+40],RAX
            mov BYTE PTR [RBP+RSI*1],63
            mov BYTE PTR [RBP+RCX*1],0
            jne .L_41f6aa

            cmp QWORD PTR [RSP+40],1073741824
            jbe .L_41f65c

            xor EBX,EBX
            jmp .L_41f05c
          .byte 0x66
          .byte 0x90
.L_41f040:

            mov R12,QWORD PTR [RSP+40]
            add RBX,1073741824
            sub R12,RBX
            cmp R12,1073741824
            jbe .L_41f3d9
.L_41f05c:

            lea RSI,QWORD PTR [RBP+RBX*1]
            mov EDX,1073741824
            mov RDI,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+56]
.L_41f070:

            call RAX

            cmp EAX,1073741824
            je .L_41f040

            xor EBX,EBX
.L_41f07b:

            mov RDI,RBP
            call _ZdlPv@PLT

            mov RDI,QWORD PTR [RSP+176]
            test RDI,RDI
            je .L_41f095

            call _ZdlPv@PLT
.L_41f095:

            mov RDI,QWORD PTR [RSP+144]
            test RDI,RDI
            je .L_41f0a7

            call _ZdlPv@PLT
.L_41f0a7:

            mov EAX,EBX
            mov RBX,QWORD PTR [RSP+4696]
            xor RBX,QWORD PTR FS:[40]
            jne .L_41f669

            add RSP,4712
.L_41f0c7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41f0d8:

            mov R14D,EDI
            mov ESI,R12D
            lea R13D,DWORD PTR [RDI+1]
            jmp .L_41e208
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f0f0:

            mov R14D,EDI
            mov ESI,R12D
            lea R13D,DWORD PTR [RDI+1]
            jmp .L_41e24d
.L_41f0ff:

            add EDX,EDX
            add R9D,1
            jmp .L_41e308
.L_41f10a:

            cmp EAX,DWORD PTR [RSP+208]
            je .L_41f299

            cmp DWORD PTR [RSP+112],1
            je .L_41e3fd

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+212]
            je .L_41f2f1
.L_41f133:

            cmp DWORD PTR [RSP+112],2
            je .L_41e3fd

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+216]
            je .L_41f356
.L_41f14f:

            cmp DWORD PTR [RSP+112],3
            je .L_41e3fd
.L_41f15a:

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+220]
            jne .L_41e3fd

            mov RAX,QWORD PTR [RSP+88]
.L_41f170:

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RSI]
            lea RAX,QWORD PTR [RDI+3840]
            add RDI,3848
            mov QWORD PTR [RDI-8],RDX
            mov RDX,QWORD PTR [RSI+1272]
            mov QWORD PTR [RDI+1264],RDX
            and RDI,-8
            sub RAX,RDI
            lea ECX,DWORD PTR [RAX+1280]
            sub RSI,RAX
            shr ECX,3

            rep movsq 

            mov EAX,DWORD PTR [RSP+304]
            test EAX,EAX
            je .L_41e40c
.L_41f1c0:

            mov EDX,16
            jmp .L_41f408
.L_41f1ca:

            mov RBX,RCX
            jmp .L_41ef08
.L_41f1d2:

            mov RSI,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+80]
            mov RDX,QWORD PTR [RSI]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RAX],RDX
            lea RDI,QWORD PTR [RAX+8]
            mov RDX,QWORD PTR [RSI+1272]
            and RDI,-8
            mov QWORD PTR [RAX+1272],RDX
            sub RAX,RDI
            sub RSI,RAX
            add EAX,1280
            shr EAX,3
            mov ECX,EAX

            rep movsq 

            cmp DWORD PTR [RSP+112],1
            je .L_41e3fd

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+228]
            jne .L_41e3cd
.L_41f22a:

            mov RSI,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+80]
            mov RDX,QWORD PTR [RSI]
            mov RDI,QWORD PTR [RAX]
            mov QWORD PTR [RDI+1280],RDX
            mov RDX,QWORD PTR [RSI+1272]
            lea RAX,QWORD PTR [RDI+1280]
            add RDI,1288
            mov QWORD PTR [RDI+1264],RDX
            and RDI,-8
            sub RAX,RDI
            lea ECX,DWORD PTR [RAX+1280]
            sub RSI,RAX
            shr ECX,3

            rep movsq 

            cmp DWORD PTR [RSP+112],2
            je .L_41e3fd

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+232]
            jne .L_41e3e5
.L_41f28f:

            mov RAX,QWORD PTR [RSP+80]
            jmp .L_41f35b
.L_41f299:

            mov RSI,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+88]
            mov RDX,QWORD PTR [RSI]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RAX],RDX
            lea RDI,QWORD PTR [RAX+8]
            mov RDX,QWORD PTR [RSI+1272]
            and RDI,-8
            mov QWORD PTR [RAX+1272],RDX
            sub RAX,RDI
            sub RSI,RAX
            add EAX,1280
            shr EAX,3
            mov ECX,EAX

            rep movsq 

            cmp DWORD PTR [RSP+112],1
            je .L_41e3fd

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+212]
            jne .L_41f133
.L_41f2f1:

            mov RSI,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+88]
            mov RDX,QWORD PTR [RSI]
            mov RDI,QWORD PTR [RAX]
            mov QWORD PTR [RDI+1280],RDX
            mov RDX,QWORD PTR [RSI+1272]
            lea RAX,QWORD PTR [RDI+1280]
            add RDI,1288
            mov QWORD PTR [RDI+1264],RDX
            and RDI,-8
            sub RAX,RDI
            lea ECX,DWORD PTR [RAX+1280]
            sub RSI,RAX
            shr ECX,3

            rep movsq 

            cmp DWORD PTR [RSP+112],2
            je .L_41e3fd

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+216]
            jne .L_41f14f
.L_41f356:

            mov RAX,QWORD PTR [RSP+88]
.L_41f35b:

            mov RSI,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RSI]
            lea RAX,QWORD PTR [RDI+2560]
            add RDI,2568
            mov QWORD PTR [RDI-8],RDX
            mov RDX,QWORD PTR [RSI+1272]
            mov QWORD PTR [RDI+1264],RDX
            and RDI,-8
            sub RAX,RDI
            lea ECX,DWORD PTR [RAX+1280]
            sub RSI,RAX
            shr ECX,3

            rep movsq 

            cmp DWORD PTR [RSP+112],3
            je .L_41e3fd

            mov RDI,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+24],RDI
            ja .L_41f15a

            mov EAX,DWORD PTR [RSP+20]
            cmp EAX,DWORD PTR [RSP+236]
            jne .L_41e3fd
.L_41f3c8:

            mov RAX,QWORD PTR [RSP+80]
            jmp .L_41f170
.L_41f3d2:

            xor EDX,EDX
            jmp .L_41eda1
.L_41f3d9:

            test R12,R12
            lea RSI,QWORD PTR [RBP+RBX*1]
            je .L_41f652
.L_41f3e7:

            mov RDX,R12
            mov RDI,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+56]
            call RAX
.L_41f3f6:

            cdqe 
            cmp RAX,R12
            sete BL
            jmp .L_41f07b
.L_41f403:

            mov EDX,15
.L_41f408:

            lea ESI,DWORD PTR [RDX+1]
            sub EAX,1
            movsxd RCX,EDX
            mov DWORD PTR [RSP+RCX*4+240],EAX
            mov EAX,ESI
            movdqa XMM0,XMMWORD PTR [RSP+240]
            shr EAX,2
            cmp EAX,1
            je .L_41f450

            cmp EAX,2
            paddd XMM0,XMMWORD PTR [RSP+256]
            je .L_41f450

            cmp EAX,3
            paddd XMM0,XMMWORD PTR [RSP+272]
            je .L_41f450

            paddd XMM0,XMMWORD PTR [RSP+288]
.L_41f450:

            movdqa XMM1,XMM0
            mov ECX,ESI
            and ECX,4294967292
            psrldq XMM1,8
            paddd XMM0,XMM1
            movdqa XMM1,XMM0
            cmp ESI,ECX
            psrldq XMM1,4
            paddd XMM0,XMM1
            movd EAX,XMM0
            jne .L_41e4f9

            jmp .L_41e547
.L_41f480:

            mov EDX,13
            jmp .L_41f408
.L_41f487:

            mov EDX,14
            jmp .L_41f408
.L_41f491:

            mov EDX,11
            jmp .L_41f408
.L_41f49b:

            mov EDX,12
            jmp .L_41f408
.L_41f4a5:

            lea RDI,QWORD PTR [RSP+144]
            sub RSI,RDX
.L_41f4b0:

            call .L_4210e0

            mov RBP,QWORD PTR [RSP+144]
            mov RAX,QWORD PTR [RSP+152]
            movabs RDX,-71777214294589695
            sub RAX,RBP
            sar RAX,2
            imul RAX,RDX
            test RAX,RAX
            jne .L_41dd0c
.L_41f4e3:

            xor EBX,EBX
            jmp .L_41de59
.L_41f4ea:

            sub RAX,RSI
            lea RDI,QWORD PTR [RSP+176]
            mov RSI,RAX
            call .L_4213a0
.L_41f4fd:

            mov RCX,QWORD PTR [RSP+128]
            jmp .L_41dc31
.L_41f50a:

            mov RDI,RBP
.L_41f50d:

            call _Znwm@PLT
.L_41f512:

            lea R12,QWORD PTR [RAX+RBP*1]
            mov RDX,RBP
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+192],R12
            call memset@PLT

            mov RCX,RAX
            jmp .L_41db87
.L_41f53b:

            sub RAX,RDX
            lea RDI,QWORD PTR [RSP+144]
            mov RSI,RAX
.L_41f549:

            call .L_4210e0
.L_41f54e:

            mov RCX,QWORD PTR [RSP+128]
            lea RAX,QWORD PTR [RBX+RCX*1]
            jmp .L_41dbfe
.L_41f55f:

            mov RDI,QWORD PTR [RSP+80]
            mov RSI,RBX
            sub RSI,RAX
.L_41f56a:

            call .L_421580

            jmp .L_41da6e
.L_41f574:

            mov EDX,10
            jmp .L_41f408
.L_41f57e:

            mov EDX,9
            jmp .L_41f408
.L_41f588:

            mov EDX,7
            jmp .L_41f408
.L_41f592:

            mov EDX,8
            jmp .L_41f408
.L_41f59c:

            mov EDX,2
.L_41f5a1:

            movsxd RCX,EDX
            sub EAX,1
            mov DWORD PTR [RSP+RCX*4+240],EAX
            mov ECX,1
            mov EAX,DWORD PTR [RSP+240]
            jmp .L_41e50a
.L_41f5bf:

            mov ECX,11
            mov ESI,10
            mov EAX,9
            mov EDI,8
            mov R8D,7
            mov R9D,6
            mov EDX,5
            mov EBX,4
            jmp .L_41ef3a
.L_41f5ee:

            mov EDX,3
            jmp .L_41f5a1
.L_41f5f5:

            mov EDX,4
            jmp .L_41f5a1
.L_41f5fc:

            mov EDX,5
            jmp .L_41f408
.L_41f606:

            mov EDX,6
            jmp .L_41f408
.L_41f610:

            mov RDI,QWORD PTR [RSP+96]
            xor ESI,ESI
            mov QWORD PTR [RSP+152],0
            xor R12D,R12D
            call .L_41c420

            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+192],0
            xor ECX,ECX
            movaps XMMWORD PTR [RSP+176],XMM0
            jmp .L_41db87
.L_41f652:

            mov EBX,1
            jmp .L_41f07b
.L_41f65c:

            mov RSI,RBP
            mov R12,QWORD PTR [RSP+40]
            jmp .L_41f3e7
.L_41f669:

            call __stack_chk_fail@PLT
.L_41f66e:

            mov RDI,RBP
            mov RBX,RAX
            call _ZdlPv@PLT
.L_41f679:

            mov RDI,QWORD PTR [RSP+176]
            test RDI,RDI
            je .L_41f68b

            call _ZdlPv@PLT
.L_41f68b:

            mov RDI,QWORD PTR [RSP+144]
            test RDI,RDI
            je .L_41f69d

            call _ZdlPv@PLT
.L_41f69d:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_41f6a5:

            mov RBX,RAX
            jmp .L_41f68b
.L_41f6aa:

            lea RCX,QWORD PTR [RIP+.L_421700]
            lea RSI,QWORD PTR [RIP+.L_421064]
            lea RDI,QWORD PTR [RIP+.L_421080]
            mov EDX,451
            call __assert_fail@PLT
.L_41f6c9:

            call _ZSt17__throw_bad_allocv@PLT
.L_41f6ce:

            mov RBX,RAX
            jmp .L_41f679
.L_41f6d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41f6e0:

            push R15
            pxor XMM0,XMM0
            push R14
            push R13
            mov RAX,RDX
            push R12
            push RBP
            push RBX
            sub RSP,248
.L_41f6f8:

            mov QWORD PTR [RSP+32],RDI
            mov DWORD PTR [RSP+104],ESI
            mov RDI,RCX
            mov QWORD PTR [RSP+40],RDX
            mov BYTE PTR [RSP+61],SIL
            mov EDX,2
            mov QWORD PTR [RSP+48],RCX
            mov QWORD PTR [RSP+144],0
            lea RSI,QWORD PTR [RIP+.L_43e980-119144]
            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+232],RBX
            xor EBX,EBX
            movaps XMMWORD PTR [RSP+128],XMM0
            mov QWORD PTR [RSP+176],0
            movaps XMMWORD PTR [RSP+160],XMM0
.L_41f75a:

            call RAX

            cmp EAX,2
            mov EBX,EAX
            je .L_41f7ba
.L_41f763:

            mov BYTE PTR [RSP+61],0
.L_41f768:

            mov RDI,QWORD PTR [RSP+160]
            test RDI,RDI
            je .L_41f77a

            call _ZdlPv@PLT
.L_41f77a:

            mov RDI,QWORD PTR [RSP+128]
            test RDI,RDI
            je .L_41f78c

            call _ZdlPv@PLT
.L_41f78c:

            mov RBX,QWORD PTR [RSP+232]
            xor RBX,QWORD PTR FS:[40]
            movzx EAX,BYTE PTR [RSP+61]
            jne .L_41fe99

            add RSP,248
.L_41f7af:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41f7ba:

            cmp BYTE PTR [RSP+104],0
            jne .L_41fe9e

            mov RAX,QWORD PTR [RSP+32]
            mov EBP,1
            mov RDX,QWORD PTR [RAX+32]
            mov RAX,QWORD PTR [RAX+40]
            cmp RAX,RDX
            je .L_41f843

            lea RDI,QWORD PTR [RSP+205]
            xor R13D,R13D
            mov QWORD PTR [RSP+24],RDI
            jmp .L_41f803
          .byte 0x66
          .byte 0x90
.L_41f7f0:

            mov RCX,RAX
            add R13,1
            sub RCX,RDX
            sar RCX,5
            cmp RCX,R13
            jbe .L_41f843
.L_41f803:

            test BPL,BPL
            mov BYTE PTR [RSP+205],255
            je .L_41f7f0

            mov EDX,1
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            mov RDI,QWORD PTR [RSP+32]
            cmp EAX,1
            mov RDX,QWORD PTR [RDI+32]
            je .L_41fee5

            mov RAX,QWORD PTR [RDI+40]
            movzx EBP,BYTE PTR [RSP+61]
            jmp .L_41f7f0
.L_41f843:

            mov RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RSP+206]
            xor R13D,R13D
            mov QWORD PTR [RSP+24],RDI
            mov RDX,QWORD PTR [RAX+56]
            mov RAX,QWORD PTR [RAX+64]
            cmp RDX,RAX
            jne .L_41f883

            jmp .L_41f8ca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41f870:

            mov RCX,RAX
            add R13,1
            sub RCX,RDX
            sar RCX,5
            cmp RCX,R13
            jbe .L_41f8ca
.L_41f883:

            mov R11D,4294967039
            test BPL,BPL
            mov WORD PTR [RSP+206],R11W
            je .L_41f870

            mov EDX,2
            mov RSI,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            mov RDI,QWORD PTR [RSP+32]
            cmp EAX,2
            mov RDX,QWORD PTR [RDI+56]
            je .L_41fbd5

            mov RAX,QWORD PTR [RDI+64]
            movzx EBP,BYTE PTR [RSP+61]
            jmp .L_41f870
.L_41f8ca:

            test BPL,BPL
            je .L_41f763
.L_41f8d3:

            mov RAX,QWORD PTR [RSP+32]
            movabs RDX,-3689348814741910323
            mov RCX,QWORD PTR [RAX+80]
            mov RAX,QWORD PTR [RAX+88]
            mov QWORD PTR [RSP+8],RAX
            sub RAX,RCX
            sar RAX,3
            imul RAX,RDX
            test RAX,RAX
            je .L_41fe41

            lea RDX,QWORD PTR [RAX-1]
            cmp RDX,6
            jbe .L_41fcc3

            pxor XMM2,XMM2
            mov RDI,RAX
            lea RDX,QWORD PTR [RCX+24]
            movdqa XMM5,XMMWORD PTR [RIP+.L_4219c0]
            shr RDI,2
            xor ESI,ESI
            movdqa XMM4,XMMWORD PTR [RIP+.L_4219d0]
            movdqa XMM3,XMM2
.L_41f936:

            add RSI,1
            add RDX,160
            movd XMM1,DWORD PTR [RDX-80]
            movd XMM6,DWORD PTR [RDX-40]
            movd XMM0,DWORD PTR [RDX-160]
            movd XMM7,DWORD PTR [RDX-120]
            punpckldq XMM1,XMM6
            cmp RSI,RDI
            punpckldq XMM0,XMM7
            punpcklqdq XMM0,XMM1
            movdqa XMM1,XMM4
            pcmpeqd XMM0,XMM3
            pand XMM1,XMM0
            pandn XMM0,XMM5
            por XMM0,XMM1
            paddd XMM2,XMM0
            jb .L_41f936

            movdqa XMM0,XMM2
            mov RDX,RAX
            and RDX,-4
            psrldq XMM0,8
            paddd XMM2,XMM0
            movdqa XMM0,XMM2
            psrldq XMM0,4
            paddd XMM2,XMM0
            movd EBX,XMM2
            add EBX,2
            cmp RAX,RDX
            je .L_41fa91
.L_41f9b2:

            imul RSI,RDX,40
            add RSI,RCX
            cmp DWORD PTR [RSI+24],1
            sbb ESI,ESI
            and ESI,4294967232
            lea EBX,DWORD PTR [RSI+RBX*1+129]
            lea RSI,QWORD PTR [RDX+1]
            cmp RAX,RSI
            jbe .L_41fa91

            imul RSI,RSI,40
            add RSI,RCX
            cmp DWORD PTR [RSI+24],1
            sbb ESI,ESI
            and ESI,4294967232
            lea EBX,DWORD PTR [RBX+RSI*1+129]
            lea RSI,QWORD PTR [RDX+2]
            cmp RAX,RSI
            jbe .L_41fa91

            imul RSI,RSI,40
            add RSI,RCX
            cmp DWORD PTR [RSI+24],1
            sbb ESI,ESI
            and ESI,4294967232
            lea EBX,DWORD PTR [RBX+RSI*1+129]
            lea RSI,QWORD PTR [RDX+3]
            cmp RAX,RSI
            jbe .L_41fa91

            imul RSI,RSI,40
            add RSI,RCX
            cmp DWORD PTR [RSI+24],1
            sbb ESI,ESI
            and ESI,4294967232
            lea EBX,DWORD PTR [RBX+RSI*1+129]
            lea RSI,QWORD PTR [RDX+4]
            cmp RAX,RSI
            jbe .L_41fa91

            imul RSI,RSI,40
            add RSI,RCX
            cmp DWORD PTR [RSI+24],1
            sbb ESI,ESI
            and ESI,4294967232
            lea EBX,DWORD PTR [RBX+RSI*1+129]
            lea RSI,QWORD PTR [RDX+5]
            cmp RAX,RSI
            jbe .L_41fa91

            imul RSI,RSI,40
            add RSI,RCX
            cmp DWORD PTR [RSI+24],1
            sbb ESI,ESI
            add RDX,6
            and ESI,4294967232
            cmp RAX,RDX
            lea EBX,DWORD PTR [RBX+RSI*1+129]
            jbe .L_41fa91

            imul RDX,RDX,40
            add RDX,RCX
            cmp DWORD PTR [RDX+24],1
            sbb EAX,EAX
            and EAX,4294967232
            lea EBX,DWORD PTR [RBX+RAX*1+129]
.L_41fa91:

            lea R12D,DWORD PTR [RBX+2]
            movsxd R12,R12D
.L_41fa98:

            mov RDI,R12
            call _Znwm@PLT
.L_41faa0:

            mov RBP,RAX
            mov RDX,R12
            xor ESI,ESI
            mov RDI,RAX
            call memset@PLT

            mov BYTE PTR [RBP+2],BH
            mov BYTE PTR [RBP+3],BL
            movabs RCX,-3689348814741910323
            mov RBX,QWORD PTR [RSP+32]
            mov WORD PTR [RBP],56319
            mov RAX,QWORD PTR [RBX+80]
            mov RBX,QWORD PTR [RBX+88]
            mov R8,RBX
            mov QWORD PTR [RSP+8],RBX
            sub R8,RAX
            mov RDX,R8
            sar RDX,3
            imul RDX,RCX
            test RDX,RDX
            je .L_41fc68

            mov EBX,4
            lea R9,QWORD PTR [RIP+.L_421920]
            add R8,RAX
            mov RDX,RBX
.L_41fb04:

            movzx ESI,BYTE PTR [RAX+24]
            lea RCX,QWORD PTR [RDX+1]
            shl ESI,4
            add SIL,BYTE PTR [RAX+28]
            mov BYTE PTR [RBP+RDX*1],SIL
            lea RSI,QWORD PTR [RIP+.L_421820]
            jmp .L_41fb37
.L_41fb21:

            add RSI,4
            mov BYTE PTR [RDI],BH
            lea RDX,QWORD PTR [RCX+2]
            cmp RSI,R9
            mov BYTE PTR [RBP+RCX*1+1],BL
            je .L_41fb5d
.L_41fb34:

            mov RCX,RDX
.L_41fb37:

            movsxd RDI,DWORD PTR [RSI]
            mov R10D,DWORD PTR [RAX+24]
            mov RDX,QWORD PTR [RAX]
            test R10D,R10D
            mov EBX,DWORD PTR [RDX+RDI*4]
            lea RDX,QWORD PTR [RCX+1]
            lea RDI,QWORD PTR [RBP+RCX*1]
            jne .L_41fb21

            add RSI,4
            mov BYTE PTR [RDI],BL
            cmp R9,RSI
            jne .L_41fb34
.L_41fb5d:

            add RAX,40
            cmp R8,RAX
            jne .L_41fb04

            cmp RDX,1073741824
            mov RBX,RDX
            jbe .L_41fd01

            lea RAX,QWORD PTR [RDX-1073741825]
            xor R14D,R14D
            and RAX,-1073741824
            lea R12,QWORD PTR [RAX+1073741824]
            jmp .L_41fba6
          .byte 0x90
.L_41fb90:

            add R14,1073741824
            mov R13,RBX
            sub R13,R14
            cmp R14,R12
            je .L_41fd07
.L_41fba6:

            lea RSI,QWORD PTR [RBP+R14*1]
            mov EDX,1073741824
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
.L_41fbba:

            call RAX
.L_41fbbc:

            cmp EAX,1073741824
            je .L_41fb90

            mov RDI,RBP
            call _ZdlPv@PLT

            mov BYTE PTR [RSP+61],0
            jmp .L_41f768
.L_41fbd5:

            mov RAX,R13
            shl RAX,5
            add RDX,RAX
            mov R15,QWORD PTR [RDX+8]
            mov RAX,QWORD PTR [RDX]
            cmp R15,1073741824
            mov QWORD PTR [RSP+16],RAX
            jbe .L_41fe4c

            lea RAX,QWORD PTR [R15-1073741825]
            xor R12D,R12D
            and RAX,-1073741824
            add RAX,1073741824
            mov QWORD PTR [RSP+8],RAX
            jmp .L_41fc30
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41fc18:

            add R12,1073741824
            mov R14,R15
            sub R14,R12
            cmp R12,QWORD PTR [RSP+8]
            je .L_41fe58
.L_41fc30:

            mov RAX,QWORD PTR [RSP+16]
            mov EDX,1073741824
            mov RDI,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RAX+R12*1]
            mov RAX,QWORD PTR [RSP+40]
.L_41fc48:

            call RAX
.L_41fc4a:

            cmp EAX,1073741824
            je .L_41fc18

            mov RAX,QWORD PTR [RSP+32]
            movzx EBP,BYTE PTR [RSP+61]
            mov RDX,QWORD PTR [RAX+56]
            mov RAX,QWORD PTR [RAX+64]
            jmp .L_41f870
.L_41fc68:

            mov RSI,RBP
            mov R13D,4
.L_41fc71:

            mov RDX,R13
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
.L_41fc7e:

            call RAX
.L_41fc80:

            movsxd RBX,EAX
            mov RDI,RBP
            call _ZdlPv@PLT

            cmp RBX,R13
            jne .L_41f763
.L_41fc94:

            mov RAX,QWORD PTR [RSP+32]
            mov RBP,QWORD PTR [RAX+136]
            sub RBP,QWORD PTR [RAX+128]
            sar RBP,6
            lea RAX,QWORD PTR [RBP+RBP*2]
            mov R13,RAX
            lea R12,QWORD PTR [RAX+8]
            add R13,10
            jne .L_41fd22

            mov BYTE PTR [RAX+10],0
            ud2 
.L_41fcc3:

            xor EDX,EDX
            jmp .L_41f9b2
.L_41fcca:

            mov RDI,RBP
            mov RBX,RAX
            call _ZdlPv@PLT
.L_41fcd5:

            mov RDI,QWORD PTR [RSP+160]
            test RDI,RDI
            je .L_41fce7

            call _ZdlPv@PLT
.L_41fce7:

            mov RDI,QWORD PTR [RSP+128]
            test RDI,RDI
            je .L_41fcf9

            call _ZdlPv@PLT
.L_41fcf9:

            mov RDI,RBX
.L_41fcfc:

            call _Unwind_Resume@PLT
.L_41fd01:

            mov R13,RDX
            xor R12D,R12D
.L_41fd07:

            test R13,R13
            lea RSI,QWORD PTR [RBP+R12*1]
            jne .L_41fc71

            mov RDI,RBP
            call _ZdlPv@PLT

            jmp .L_41fc94
.L_41fd22:

            mov RDI,R13
.L_41fd25:

            call _Znwm@PLT
.L_41fd2a:

            mov RDX,R13
            xor ESI,ESI
            mov RDI,RAX
            mov RBX,RAX
            call memset@PLT

            mov R8,QWORD PTR [RSP+32]
            mov RAX,R12
            mov WORD PTR [RBX],49663
            shr RAX,8
            mov BYTE PTR [RBX+3],R12B
            mov BYTE PTR [RBX+4],8
            mov BYTE PTR [RBX+2],AL
            mov BYTE PTR [RBX+9],BPL
            xor ESI,ESI
            mov EAX,DWORD PTR [R8+4]
            mov EDX,10
            movabs RDI,-3689348814741910323
            mov BYTE PTR [RBX+5],AH
            mov BYTE PTR [RBX+6],AL
            mov EAX,DWORD PTR [R8]
            mov BYTE PTR [RBX+7],AH
            mov BYTE PTR [RBX+8],AL
.L_41fd7e:

            cmp RBP,RSI
            je .L_41fe0a

            mov RAX,RSI
            mov R9,QWORD PTR [R8+80]
            shl RAX,6
            add RAX,QWORD PTR [R8+128]
            mov ECX,DWORD PTR [RAX]
            mov BYTE PTR [RBX+RDX*1],CL
            mov ECX,DWORD PTR [RAX+4]
            shl ECX,4
            or ECX,DWORD PTR [RAX+8]
            mov BYTE PTR [RBX+RDX*1+1],CL
            mov RCX,QWORD PTR [RAX+16]
            mov RAX,QWORD PTR [R8+88]
            sub RAX,R9
            sar RAX,3
            imul RAX,RDI
            cmp RCX,RAX
            jae .L_41fdfd

            imul RCX,RCX,40
            add RDX,3
            add RSI,1
            mov EAX,DWORD PTR [R9+RCX*1+28]
            mov BYTE PTR [RBX+RDX*1-1],AL
            jmp .L_41fd7e
.L_41fdda:

            test RBP,RBP
            je .L_41ffcc

            mov RDX,RBP
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
.L_41fdf0:

            call RAX

            cdqe 
            cmp RAX,RBP
            je .L_41ffcc
.L_41fdfd:

            mov RDI,RBX
            call _ZdlPv@PLT

            jmp .L_41f763
.L_41fe0a:

            lea R12,QWORD PTR [RBX+RDX*1]
            mov RBP,RDX
.L_41fe11:

            mov RSI,R12
            sub RSI,RBP
            cmp RBP,1073741824
            jbe .L_41fdda

            mov EDX,1073741824
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
            call RAX
.L_41fe31:

            sub RBP,1073741824
            cmp EAX,1073741824
            je .L_41fe11

            jmp .L_41fdfd
.L_41fe41:

            mov R12D,4
            jmp .L_41fa98
.L_41fe4c:

            mov R14,R15
            mov QWORD PTR [RSP+8],0
.L_41fe58:

            mov RSI,QWORD PTR [RSP+16]
            add RSI,QWORD PTR [RSP+8]
            test R14,R14
            je .L_41fe7f

            mov RDX,R14
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
.L_41fe74:

            call RAX

            cdqe 
            cmp RAX,R14
            sete BPL
.L_41fe7f:

            mov RAX,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RAX+56]
            mov RAX,QWORD PTR [RAX+64]
            jmp .L_41f870
.L_41fe91:

            mov RBX,RAX
            jmp .L_41fcd5
.L_41fe99:

            call __stack_chk_fail@PLT
.L_41fe9e:

            movdqa XMM0,XMMWORD PTR [RIP+.L_4219f0]
            lea RSI,QWORD PTR [RSP+208]
            mov BYTE PTR [RSP+224],0
            mov BYTE PTR [RSP+225],0
            mov EDX,18
            movaps XMMWORD PTR [RSP+208],XMM0
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            cmp EAX,18
            jne .L_41f763

            jmp .L_41f8d3
.L_41fee5:

            mov RAX,R13
            shl RAX,5
            add RDX,RAX
            mov R15,QWORD PTR [RDX+8]
            mov RAX,QWORD PTR [RDX]
            cmp R15,1073741824
            mov QWORD PTR [RSP+16],RAX
            jbe .L_41ff87

            lea RAX,QWORD PTR [R15-1073741825]
            xor R12D,R12D
            and RAX,-1073741824
            add RAX,1073741824
            mov QWORD PTR [RSP+8],RAX
            jmp .L_41ff3c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ff28:

            add R12,1073741824
            mov R14,R15
            sub R14,R12
            cmp R12,QWORD PTR [RSP+8]
            je .L_41ff93
.L_41ff3c:

            mov RAX,QWORD PTR [RSP+16]
            mov EDX,1073741824
            mov RDI,QWORD PTR [RSP+48]
            lea RSI,QWORD PTR [RAX+R12*1]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            cmp EAX,1073741824
            je .L_41ff28

            mov RAX,QWORD PTR [RSP+32]
            movzx EBP,BYTE PTR [RSP+61]
            mov RDX,QWORD PTR [RAX+32]
            mov RAX,QWORD PTR [RAX+40]
            jmp .L_41f7f0
.L_41ff74:

            mov RBP,RAX
            mov RDI,RBX
            call _ZdlPv@PLT

            mov RBX,RBP
            jmp .L_41fcd5
.L_41ff87:

            mov R14,R15
            mov QWORD PTR [RSP+8],0
.L_41ff93:

            mov RSI,QWORD PTR [RSP+16]
            add RSI,QWORD PTR [RSP+8]
            test R14,R14
            je .L_41ffba

            mov RDX,R14
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            cdqe 
            cmp RAX,R14
            sete BPL
.L_41ffba:

            mov RAX,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RAX+32]
            mov RAX,QWORD PTR [RAX+40]
            jmp .L_41f7f0
.L_41ffcc:

            mov RDI,RBX
            call _ZdlPv@PLT

            mov RSI,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+48]
            lea RCX,QWORD PTR [RSP+128]
            mov RDI,QWORD PTR [RSP+32]
            lea R8,QWORD PTR [RSP+160]
            call .L_41d990

            test AL,AL
            je .L_41f763

            mov EDI,131072
            mov QWORD PTR [RSP+196],0
            call _Znam@PLT
.L_420016:

            mov R15,RAX
            xor R13D,R13D
            mov R12D,64
            xor R14D,R14D
            xor EAX,EAX
            mov DWORD PTR [RSP+92],0
            movabs RBP,-72340172838076673
.L_420039:

            mov RBX,QWORD PTR [RSP+32]
            mov EDI,DWORD PTR [RSP+92]
            cmp DWORD PTR [RBX+20],EDI
            jle .L_420f00

            mov DWORD PTR [RSP+96],0
.L_420053:

            mov RBX,QWORD PTR [RSP+32]
            mov EDI,DWORD PTR [RSP+96]
            cmp DWORD PTR [RBX+24],EDI
            jle .L_420ef6

            mov RCX,QWORD PTR [RBX+128]
            mov RBX,QWORD PTR [RBX+136]
            mov RDX,RBX
            mov QWORD PTR [RSP+8],RBX
            sub RDX,RCX
            sar RDX,6
            test RDX,RDX
            je .L_420c16

            lea RBX,QWORD PTR [RCX+4]
            lea RDI,QWORD PTR [RSP+196]
            mov RSI,QWORD PTR [RSP+128]
            add RDX,RDX
            mov QWORD PTR [RSP+72],RBX
            mov RBX,QWORD PTR [RSP+160]
            add RDX,RDI
            mov QWORD PTR [RSP+64],RDI
            mov EDI,R13D
            mov QWORD PTR [RSP+80],RSI
            mov R13,R14
            mov QWORD PTR [RSP+112],RDX
            mov R14D,R12D
            mov R12D,EDI
.L_4200cd:

            mov RDI,QWORD PTR [RSP+72]
            mov EDX,DWORD PTR [RDI+4]
            mov ESI,DWORD PTR [RDI]
            test EDX,EDX
            mov DWORD PTR [RSP+108],ESI
            jle .L_420bde

            mov EDI,DWORD PTR [RSP+92]
            mov ECX,DWORD PTR [RSP+96]
            mov R11,RBX
            mov EBX,R14D
            imul EDI,EDX
            imul ECX,ESI
            add EDX,EDI
            mov DWORD PTR [RSP+88],EDI
            mov DWORD PTR [RSP+120],ECX
            mov DWORD PTR [RSP+124],EDX
.L_420105:

            mov EDI,DWORD PTR [RSP+108]
            test EDI,EDI
            jle .L_420bc5

            mov RSI,QWORD PTR [RSP+64]
            movzx EDX,WORD PTR [RSI]
            mov ESI,DWORD PTR [RSP+120]
            add EDI,ESI
            mov DWORD PTR [RSP+56],ESI
            mov DWORD PTR [RSP+100],EDI
            lea RDI,QWORD PTR [RIP+.L_421920]
            mov QWORD PTR [RSP+24],RDI
.L_420133:

            mov RDI,QWORD PTR [RSP+72]
            mov ECX,DWORD PTR [RSP+88]
            imul ECX,DWORD PTR [RDI+20]
            mov RSI,QWORD PTR [RDI+36]
            add ECX,DWORD PTR [RSP+56]
            shl ECX,6
            movsxd RCX,ECX
            lea RDI,QWORD PTR [RSI+RCX*2]
            mov QWORD PTR [RSP+16],RDI
            movzx EDI,WORD PTR [RDI]
            mov WORD PTR [RSP+62],DI
            sub EDI,EDX
            test DI,DI
            mov EDX,EDI
            mov ECX,EDI
            jns .L_42016f

            neg ECX
            sub EDX,1
.L_42016f:

            movsx ECX,CX
            xor EDI,EDI
            test ECX,ECX
            je .L_42017e

            bsr ECX,ECX
            lea EDI,DWORD PTR [RCX+1]
.L_42017e:

            mov R10,QWORD PTR [RSP+80]
            movsxd RCX,EDI
            movzx ESI,BYTE PTR [R10+RCX*1]
            sub EBX,ESI
            movsxd RSI,DWORD PTR [R10+RCX*4+256]
            mov ECX,EBX
            shl RSI,CL
            or R13,RSI
            cmp EBX,16
            jg .L_42030b

            mov RCX,R13
            not RCX
            or RCX,65535
            lea RSI,QWORD PTR [RCX+RBP*1]
            not RCX
            and RCX,RSI
            movabs RSI,-9187201950435737472
            test RCX,RSI
            je .L_420db5

            mov RSI,R13
            shr RSI,56
            mov RCX,RSI
            jmp .L_4201ee
.L_4201dc:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_420204
.L_4201ec:

            xor ECX,ECX
.L_4201ee:

            cmp RAX,131071
            jbe .L_4201dc

            cmp ECX,255
            mov R12D,1
            je .L_4201ec
.L_420204:

            mov RCX,R13
            shr RCX,48
            movzx ECX,CL
            jmp .L_420222
.L_420210:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_420238
.L_420220:

            xor ECX,ECX
.L_420222:

            cmp RAX,131071
            jbe .L_420210

            cmp ECX,255
            mov R12D,1
            je .L_420220
.L_420238:

            mov RCX,R13
            shr RCX,40
            movzx ECX,CL
            jmp .L_420256
.L_420244:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_42026c
.L_420254:

            xor ECX,ECX
.L_420256:

            cmp RAX,131071
            jbe .L_420244

            cmp ECX,255
            mov R12D,1
            je .L_420254
.L_42026c:

            mov RCX,R13
            shr RCX,32
            movzx ECX,CL
            jmp .L_42028a
.L_420278:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_4202a0
.L_420288:

            xor ECX,ECX
.L_42028a:

            cmp RAX,131071
            jbe .L_420278

            cmp ECX,255
            mov R12D,1
            je .L_420288
.L_4202a0:

            mov ECX,R13D
            shr ECX,24
            jmp .L_4202ba
.L_4202a8:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_4202d0
.L_4202b8:

            xor ECX,ECX
.L_4202ba:

            cmp RAX,131071
            jbe .L_4202a8

            cmp ECX,255
            mov R12D,1
            je .L_4202b8
.L_4202d0:

            mov RCX,R13
            shr RCX,16
            movzx ECX,CL
            jmp .L_4202ee
.L_4202dc:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_420304
.L_4202ec:

            xor ECX,ECX
.L_4202ee:

            cmp RAX,131071
            jbe .L_4202dc

            cmp ECX,255
            mov R12D,1
            je .L_4202ec
.L_420304:

            shl R13,48
            add EBX,48
.L_42030b:

            test EDI,EDI
            jne .L_420c30
.L_420313:

            lea R8,QWORD PTR [RIP+.L_421824]
            xor ESI,ESI
            movabs R10,-9187201950435737472
            jmp .L_420342
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_420330:

            add ESI,1
.L_420333:

            add R8,4
            cmp R8,QWORD PTR [RSP+24]
            je .L_4209a3
.L_420342:

            movsxd RDX,DWORD PTR [R8]
            mov RDI,QWORD PTR [RSP+16]
            movzx EDI,WORD PTR [RDI+RDX*2]
            test DI,DI
            je .L_420330

            mov WORD PTR [RSP+8],DI
            jns .L_420366

            mov ECX,EDI
            sub EDI,1
            neg ECX
            mov WORD PTR [RSP+8],CX
.L_420366:

            cmp ESI,15
            jle .L_420586

            lea R14D,DWORD PTR [RSI-16]
            mov ECX,EBX
            mov R9D,R14D
            and R9D,15
            nop
            nop
            nop
            nop
.L_420380:

            movzx EDX,BYTE PTR [R11+240]
            sub ECX,EDX
            movsxd RDX,DWORD PTR [R11+1216]
            shl RDX,CL
            or R13,RDX
            cmp ECX,16
            jg .L_420572

            mov RDX,R13
            not RDX
            or RDX,65535
            lea RBX,QWORD PTR [RDX+RBP*1]
            not RDX
            and RDX,RBX
            test RDX,R10
            je .L_420510

            mov RBX,R13
            shr RBX,56
            mov RDX,RBX
            jmp .L_4203e2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4203d0:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_4203f8
.L_4203e0:

            xor EDX,EDX
.L_4203e2:

            cmp RAX,131071
            jbe .L_4203d0

            cmp EDX,255
            mov R12D,1
            je .L_4203e0
.L_4203f8:

            mov RDX,R13
            shr RDX,48
            movzx EDX,DL
            jmp .L_42041a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420408:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420430
.L_420418:

            xor EDX,EDX
.L_42041a:

            cmp RAX,131071
            jbe .L_420408

            cmp EDX,255
            mov R12D,1
            je .L_420418
.L_420430:

            mov RDX,R13
            shr RDX,40
            movzx EDX,DL
            jmp .L_420452
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420440:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420468
.L_420450:

            xor EDX,EDX
.L_420452:

            cmp RAX,131071
            jbe .L_420440

            cmp EDX,255
            mov R12D,1
            je .L_420450
.L_420468:

            mov RDX,R13
            shr RDX,32
            movzx EDX,DL
            jmp .L_42048a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420478:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_4204a0
.L_420488:

            xor EDX,EDX
.L_42048a:

            cmp RAX,131071
            jbe .L_420478

            cmp EDX,255
            mov R12D,1
            je .L_420488
.L_4204a0:

            mov EDX,R13D
            shr EDX,24
            jmp .L_4204c2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4204b0:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_4204d8
.L_4204c0:

            xor EDX,EDX
.L_4204c2:

            cmp RAX,131071
            jbe .L_4204b0

            cmp EDX,255
            mov R12D,1
            je .L_4204c0
.L_4204d8:

            mov RDX,R13
            shr RDX,16
            movzx EDX,DL
            jmp .L_4204fa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4204e8:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
.L_4204f0:

            cmp EDX,255
            jne .L_42056b

            xor EDX,EDX
.L_4204fa:

            cmp RAX,131071
            jbe .L_4204e8

            mov R12D,1
            jmp .L_4204f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420510:

            lea RDX,QWORD PTR [RAX+6]
            cmp RDX,131071
            ja .L_420920

            mov RBX,R13
            shr RBX,56
            mov BYTE PTR [R15+RAX*1],BL
            mov RBX,R13
            shr RBX,48
            mov BYTE PTR [R15+RAX*1+1],BL
            mov RBX,R13
            shr RBX,40
            mov BYTE PTR [R15+RAX*1+2],BL
            mov RBX,R13
            shr RBX,32
            mov BYTE PTR [R15+RAX*1+3],BL
            mov RBX,R13
            shr RBX,24
            mov BYTE PTR [R15+RAX*1+4],BL
            mov RBX,R13
            shr RBX,16
            mov BYTE PTR [R15+RAX*1+5],BL
            mov RAX,RDX
.L_42056b:

            shl R13,48
            add ECX,48
.L_420572:

            sub ESI,16
            cmp R9D,ESI
            jne .L_420380

            mov ESI,R14D
            mov EBX,ECX
            and ESI,15
.L_420586:

            movsx EDX,WORD PTR [RSP+8]
            shl ESI,4
            bsr EDX,EDX
            add EDX,1
            add ESI,EDX
            movsxd RSI,ESI
            movzx ECX,BYTE PTR [R11+RSI*1]
            movsxd RSI,DWORD PTR [R11+RSI*4+256]
            sub EBX,ECX
            mov ECX,EBX
            shl RSI,CL
            or R13,RSI
            cmp EBX,16
            jg .L_420782

            mov RCX,R13
            not RCX
            or RCX,65535
            lea RSI,QWORD PTR [RCX+RBP*1]
            not RCX
            and RCX,RSI
            test RCX,R10
            je .L_420720

            mov RSI,R13
            shr RSI,56
            mov RCX,RSI
            jmp .L_4205fa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4205e8:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_420610
.L_4205f8:

            xor ECX,ECX
.L_4205fa:

            cmp RAX,131071
            jbe .L_4205e8

            cmp ECX,255
            mov R12D,1
            je .L_4205f8
.L_420610:

            mov RCX,R13
            shr RCX,48
            movzx ECX,CL
            jmp .L_420632
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420620:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_420648
.L_420630:

            xor ECX,ECX
.L_420632:

            cmp RAX,131071
            jbe .L_420620

            cmp ECX,255
            mov R12D,1
            je .L_420630
.L_420648:

            mov RCX,R13
            shr RCX,40
            movzx ECX,CL
            jmp .L_42066a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420658:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_420680
.L_420668:

            xor ECX,ECX
.L_42066a:

            cmp RAX,131071
            jbe .L_420658

            cmp ECX,255
            mov R12D,1
            je .L_420668
.L_420680:

            mov RCX,R13
            shr RCX,32
            movzx ECX,CL
            jmp .L_4206a2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420690:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_4206b8
.L_4206a0:

            xor ECX,ECX
.L_4206a2:

            cmp RAX,131071
            jbe .L_420690

            cmp ECX,255
            mov R12D,1
            je .L_4206a0
.L_4206b8:

            mov ECX,R13D
            shr ECX,24
            jmp .L_4206d2
.L_4206c0:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
            cmp ECX,255
            jne .L_4206e8
.L_4206d0:

            xor ECX,ECX
.L_4206d2:

            cmp RAX,131071
            jbe .L_4206c0

            cmp ECX,255
            mov R12D,1
            je .L_4206d0
.L_4206e8:

            mov RCX,R13
            shr RCX,16
            movzx ECX,CL
            jmp .L_42070a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4206f8:

            mov BYTE PTR [R15+RAX*1],CL
            add RAX,1
.L_420700:

            cmp ECX,255
            jne .L_42077b

            xor ECX,ECX
.L_42070a:

            cmp RAX,131071
            jbe .L_4206f8

            mov R12D,1
            jmp .L_420700
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420720:

            lea RCX,QWORD PTR [RAX+6]
            cmp RCX,131071
            ja .L_420b28

            mov RSI,R13
            shr RSI,56
            mov BYTE PTR [R15+RAX*1],SIL
            mov RSI,R13
            shr RSI,48
            mov BYTE PTR [R15+RAX*1+1],SIL
            mov RSI,R13
            shr RSI,40
            mov BYTE PTR [R15+RAX*1+2],SIL
            mov RSI,R13
            shr RSI,32
            mov BYTE PTR [R15+RAX*1+3],SIL
            mov RSI,R13
            shr RSI,24
            mov BYTE PTR [R15+RAX*1+4],SIL
            mov RSI,R13
            shr RSI,16
            mov BYTE PTR [R15+RAX*1+5],SIL
            mov RAX,RCX
.L_42077b:

            shl R13,48
            add EBX,48
.L_420782:

            mov ECX,EDX
            mov ESI,1
            movsx EDI,DI
            shl ESI,CL
            sub EBX,EDX
            sub ESI,1
            mov ECX,EBX
            and EDI,ESI
            xor ESI,ESI
            movsxd RDI,EDI
            shl RDI,CL
            or R13,RDI
            cmp EBX,16
            jg .L_420333

            mov RDX,R13
            not RDX
            or RDX,65535
            lea RCX,QWORD PTR [RDX+RBP*1]
            not RDX
            and RDX,RCX
            test RDX,R10
            je .L_420930

            mov RDI,R13
            shr RDI,56
            mov RDX,RDI
            jmp .L_4207f2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4207e0:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420808
.L_4207f0:

            xor EDX,EDX
.L_4207f2:

            cmp RAX,131071
            jbe .L_4207e0

            cmp EDX,255
            mov R12D,1
            je .L_4207f0
.L_420808:

            mov RDX,R13
            shr RDX,48
            movzx EDX,DL
            jmp .L_42082a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420818:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420840
.L_420828:

            xor EDX,EDX
.L_42082a:

            cmp RAX,131071
            jbe .L_420818

            cmp EDX,255
            mov R12D,1
            je .L_420828
.L_420840:

            mov RDX,R13
            shr RDX,40
            movzx EDX,DL
            jmp .L_420862
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420850:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420878
.L_420860:

            xor EDX,EDX
.L_420862:

            cmp RAX,131071
            jbe .L_420850

            cmp EDX,255
            mov R12D,1
            je .L_420860
.L_420878:

            mov RDX,R13
            shr RDX,32
            movzx EDX,DL
            jmp .L_42089a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420888:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_4208b0
.L_420898:

            xor EDX,EDX
.L_42089a:

            cmp RAX,131071
            jbe .L_420888

            cmp EDX,255
            mov R12D,1
            je .L_420898
.L_4208b0:

            mov EDX,R13D
            shr EDX,24
            jmp .L_4208d2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4208c0:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_4208e8
.L_4208d0:

            xor EDX,EDX
.L_4208d2:

            cmp RAX,131071
            jbe .L_4208c0

            cmp EDX,255
            mov R12D,1
            je .L_4208d0
.L_4208e8:

            mov RDX,R13
            shr RDX,16
            movzx EDX,DL
            jmp .L_42090e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4208f8:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
.L_420900:

            cmp EDX,255
            jne .L_42098b

            xor EDX,EDX
.L_42090e:

            cmp RAX,131071
            jbe .L_4208f8

            mov R12D,1
            jmp .L_420900
          .byte 0x66
          .byte 0x90
.L_420920:

            mov R12D,1
            jmp .L_42056b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420930:

            lea RDX,QWORD PTR [RAX+6]
            cmp RDX,131071
            ja .L_420b38

            mov RCX,R13
            shr RCX,56
            mov BYTE PTR [R15+RAX*1],CL
            mov RCX,R13
            shr RCX,48
            mov BYTE PTR [R15+RAX*1+1],CL
            mov RCX,R13
            shr RCX,40
            mov BYTE PTR [R15+RAX*1+2],CL
            mov RCX,R13
            shr RCX,32
            mov BYTE PTR [R15+RAX*1+3],CL
            mov RCX,R13
            shr RCX,24
            mov BYTE PTR [R15+RAX*1+4],CL
            mov RCX,R13
            shr RCX,16
            mov BYTE PTR [R15+RAX*1+5],CL
            mov RAX,RDX
.L_42098b:

            shl R13,48
            add EBX,48
            xor ESI,ESI
            add R8,4
            cmp R8,QWORD PTR [RSP+24]
            jne .L_420342
.L_4209a3:

            test ESI,ESI
            je .L_420ba5

            movzx EDX,BYTE PTR [R11]
            sub EBX,EDX
            movsxd RDX,DWORD PTR [R11+256]
            mov ECX,EBX
            shl RDX,CL
            or R13,RDX
            cmp EBX,16
            jg .L_420ba5

            mov RDX,R13
            not RDX
            or RDX,65535
            lea RCX,QWORD PTR [RDX+RBP*1]
            not RDX
            and RDX,RCX
            movabs RCX,-9187201950435737472
            test RDX,RCX
            je .L_420b43

            mov RDI,R13
            shr RDI,56
            mov RDX,RDI
            jmp .L_420a11
.L_4209ff:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420a27
.L_420a0f:

            xor EDX,EDX
.L_420a11:

            cmp RAX,131071
            jbe .L_4209ff

            cmp EDX,255
            mov R12D,1
            je .L_420a0f
.L_420a27:

            mov RDX,R13
            shr RDX,48
            movzx EDX,DL
            jmp .L_420a45
.L_420a33:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420a5b
.L_420a43:

            xor EDX,EDX
.L_420a45:

            cmp RAX,131071
            jbe .L_420a33

            cmp EDX,255
            mov R12D,1
            je .L_420a43
.L_420a5b:

            mov RDX,R13
            shr RDX,40
            movzx EDX,DL
            jmp .L_420a79
.L_420a67:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420a8f
.L_420a77:

            xor EDX,EDX
.L_420a79:

            cmp RAX,131071
            jbe .L_420a67

            cmp EDX,255
            mov R12D,1
            je .L_420a77
.L_420a8f:

            mov RDX,R13
            shr RDX,32
            movzx EDX,DL
            jmp .L_420aad
.L_420a9b:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420ac3
.L_420aab:

            xor EDX,EDX
.L_420aad:

            cmp RAX,131071
            jbe .L_420a9b

            cmp EDX,255
            mov R12D,1
            je .L_420aab
.L_420ac3:

            mov EDX,R13D
            shr EDX,24
            jmp .L_420add
.L_420acb:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420af3
.L_420adb:

            xor EDX,EDX
.L_420add:

            cmp RAX,131071
            jbe .L_420acb

            cmp EDX,255
            mov R12D,1
            je .L_420adb
.L_420af3:

            mov RDX,R13
            shr RDX,16
            movzx EDX,DL
            jmp .L_420b15
.L_420aff:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
.L_420b07:

            cmp EDX,255
            jne .L_420b9e

            xor EDX,EDX
.L_420b15:

            cmp RAX,131071
            jbe .L_420aff

            mov R12D,1
            jmp .L_420b07
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_420b28:

            mov R12D,1
            jmp .L_42077b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_420b38:

            mov R12D,1
            jmp .L_42098b
.L_420b43:

            lea RDX,QWORD PTR [RAX+6]
            cmp RDX,131071
            ja .L_420e91

            mov RCX,R13
            shr RCX,56
            mov BYTE PTR [R15+RAX*1],CL
            mov RCX,R13
            shr RCX,48
            mov BYTE PTR [R15+RAX*1+1],CL
            mov RCX,R13
            shr RCX,40
            mov BYTE PTR [R15+RAX*1+2],CL
            mov RCX,R13
            shr RCX,32
            mov BYTE PTR [R15+RAX*1+3],CL
            mov RCX,R13
            shr RCX,24
            mov BYTE PTR [R15+RAX*1+4],CL
            mov RCX,R13
            shr RCX,16
            mov BYTE PTR [R15+RAX*1+5],CL
            mov RAX,RDX
.L_420b9e:

            shl R13,48
            add EBX,48
.L_420ba5:

            add DWORD PTR [RSP+56],1
            movzx EDX,WORD PTR [RSP+62]
            mov EDI,DWORD PTR [RSP+56]
            cmp DWORD PTR [RSP+100],EDI
            jne .L_420133

            mov RDI,QWORD PTR [RSP+64]
            mov WORD PTR [RDI],DX
.L_420bc5:

            add DWORD PTR [RSP+88],1
            mov EDI,DWORD PTR [RSP+88]
            cmp DWORD PTR [RSP+124],EDI
            jne .L_420105

            mov R14D,EBX
            mov RBX,R11
.L_420bde:

            add QWORD PTR [RSP+64],2
            add QWORD PTR [RSP+72],64
            add RBX,1280
            mov RDI,QWORD PTR [RSP+64]
            add QWORD PTR [RSP+80],1280
            cmp QWORD PTR [RSP+112],RDI
            jne .L_4200cd

            mov EBX,R12D
            mov R12D,R14D
            mov R14,R13
            mov R13D,EBX
.L_420c16:

            cmp RAX,65536
            ja .L_420ea4
.L_420c22:

            add DWORD PTR [RSP+96],1
            jmp .L_420053
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_420c30:

            mov ECX,EDI
            mov ESI,1
            movsx EDX,DX
            shl ESI,CL
            sub EBX,EDI
            mov ECX,ESI
            sub ECX,1
            and EDX,ECX
            mov ECX,EBX
            movsxd RDX,EDX
            shl RDX,CL
            or R13,RDX
            cmp EBX,16
            jg .L_420313

            mov RDX,R13
            not RDX
            or RDX,65535
            lea RCX,QWORD PTR [RDX+RBP*1]
            not RDX
            and RDX,RCX
            movabs RCX,-9187201950435737472
            test RDX,RCX
            je .L_420e1c

            mov RDI,R13
            shr RDI,56
            mov RDX,RDI
            jmp .L_420ca1
.L_420c8f:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420cb7
.L_420c9f:

            xor EDX,EDX
.L_420ca1:

            cmp RAX,131071
            jbe .L_420c8f

            cmp EDX,255
            mov R12D,1
            je .L_420c9f
.L_420cb7:

            mov RDX,R13
            shr RDX,48
            movzx EDX,DL
            jmp .L_420cd5
.L_420cc3:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420ceb
.L_420cd3:

            xor EDX,EDX
.L_420cd5:

            cmp RAX,131071
            jbe .L_420cc3

            cmp EDX,255
            mov R12D,1
            je .L_420cd3
.L_420ceb:

            mov RDX,R13
            shr RDX,40
            movzx EDX,DL
            jmp .L_420d09
.L_420cf7:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420d1f
.L_420d07:

            xor EDX,EDX
.L_420d09:

            cmp RAX,131071
            jbe .L_420cf7

            cmp EDX,255
            mov R12D,1
            je .L_420d07
.L_420d1f:

            mov RDX,R13
            shr RDX,32
            movzx EDX,DL
            jmp .L_420d3d
.L_420d2b:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420d53
.L_420d3b:

            xor EDX,EDX
.L_420d3d:

            cmp RAX,131071
            jbe .L_420d2b

            cmp EDX,255
            mov R12D,1
            je .L_420d3b
.L_420d53:

            mov EDX,R13D
            shr EDX,24
            jmp .L_420d6d
.L_420d5b:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
            cmp EDX,255
            jne .L_420d83
.L_420d6b:

            xor EDX,EDX
.L_420d6d:

            cmp RAX,131071
            jbe .L_420d5b

            cmp EDX,255
            mov R12D,1
            je .L_420d6b
.L_420d83:

            mov RDX,R13
            shr RDX,16
            movzx EDX,DL
            jmp .L_420da5
.L_420d8f:

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
.L_420d97:

            cmp EDX,255
            jne .L_420e73

            xor EDX,EDX
.L_420da5:

            cmp RAX,131071
            jbe .L_420d8f

            mov R12D,1
            jmp .L_420d97
.L_420db5:

            lea RSI,QWORD PTR [RAX+6]
            cmp RSI,131071
            ja .L_420e7f

            mov RCX,R13
            add EBX,48
            shr RCX,56
            mov BYTE PTR [R15+RAX*1],CL
            mov RCX,R13
            shr RCX,48
            mov BYTE PTR [R15+RAX*1+1],CL
            mov RCX,R13
            shr RCX,40
            mov BYTE PTR [R15+RAX*1+2],CL
            mov RCX,R13
            shr RCX,32
            mov BYTE PTR [R15+RAX*1+3],CL
            mov RCX,R13
            shr RCX,24
            mov BYTE PTR [R15+RAX*1+4],CL
            mov RCX,R13
            shl R13,48
            shr RCX,16
            mov BYTE PTR [R15+RAX*1+5],CL
            mov RAX,RSI
            jmp .L_42030b
.L_420e1c:

            lea RDX,QWORD PTR [RAX+6]
            cmp RDX,131071
            ja .L_420e9c

            mov RCX,R13
            shr RCX,56
            mov BYTE PTR [R15+RAX*1],CL
            mov RCX,R13
            shr RCX,48
            mov BYTE PTR [R15+RAX*1+1],CL
            mov RCX,R13
            shr RCX,40
            mov BYTE PTR [R15+RAX*1+2],CL
            mov RCX,R13
            shr RCX,32
            mov BYTE PTR [R15+RAX*1+3],CL
            mov RCX,R13
            shr RCX,24
            mov BYTE PTR [R15+RAX*1+4],CL
            mov RCX,R13
            shr RCX,16
            mov BYTE PTR [R15+RAX*1+5],CL
            mov RAX,RDX
.L_420e73:

            shl R13,48
            add EBX,48
            jmp .L_420313
.L_420e7f:

            mov R12D,1
            shl R13,48
            add EBX,48
            jmp .L_42030b
.L_420e91:

            mov R12D,1
            jmp .L_420b9e
.L_420e9c:

            mov R12D,1
            jmp .L_420e73
.L_420ea4:

            mov RBX,RAX
            lea RAX,QWORD PTR [R15+RAX*1]
            mov QWORD PTR [RSP+8],RAX
.L_420eb0:

            mov RSI,QWORD PTR [RSP+8]
            sub RSI,RBX
            cmp RBX,1073741824
            jbe .L_420f91

            mov EDX,1073741824
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
.L_420ed4:

            call RAX

            sub RBX,1073741824
            cmp EAX,1073741824
            je .L_420eb0
.L_420ee4:

            mov RDI,R15
            call _ZdaPv@PLT

            mov BYTE PTR [RSP+61],0
            jmp .L_41f768
.L_420ef6:

            add DWORD PTR [RSP+92],1
            jmp .L_420039
.L_420f00:

            mov ECX,R12D
.L_420f03:

            cmp ECX,56
            jg .L_420f3f

            mov RBX,R14
            shr RBX,56
            mov RDX,RBX
.L_420f12:

            cmp RAX,131071
            ja .L_420f37

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
.L_420f22:

            cmp EDX,255
            jne .L_420f2e

            xor EDX,EDX
            jmp .L_420f12
.L_420f2e:

            shl R14,8
            add ECX,8
            jmp .L_420f03
.L_420f37:

            mov R13D,1
            jmp .L_420f22
.L_420f3f:

            cmp ECX,63
            jg .L_420fba

            mov EDX,64
            sub EDX,ECX
            mov ECX,EDX
            mov EDX,255
            mov ESI,EDX
            mov RDX,R14
            sar ESI,CL
            shr RDX,56
            mov ECX,ESI
            not ECX
            and EDX,ECX
            or EDX,ESI
.L_420f65:

            cmp RAX,131071
            ja .L_420fb2

            mov BYTE PTR [R15+RAX*1],DL
            add RAX,1
.L_420f75:

            cmp EDX,255
            jne .L_420fba

            xor EDX,EDX
            jmp .L_420f65
.L_420f81:

            mov RDI,R15
            mov RBX,RAX
            call _ZdaPv@PLT

            jmp .L_41fcd5
.L_420f91:

            mov RDX,RBX
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,QWORD PTR [RSP+40]
            call RAX

            cdqe 
            cmp RAX,RBX
            jne .L_420ee4

            xor EAX,EAX
            jmp .L_420c22
.L_420fb2:

            mov R13D,1
            jmp .L_420f75
.L_420fba:

            test R13B,R13B
            jne .L_420ee4

            mov RDI,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+48]
            mov RCX,RAX
            mov RDX,R15
            call .L_41bbe0
.L_420fd8:

            test AL,AL
            je .L_420ee4

            mov RDI,R15
            call _ZdaPv@PLT

            mov RDI,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RIP+.L_43e980-119146]
            mov ECX,2
.L_420ffe:

            call .L_41bbe0

            test AL,AL
            je .L_41f763

            cmp BYTE PTR [RSP+104],0
            jne .L_41f768

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RAX+232]
            mov RDX,QWORD PTR [RAX+224]
            call .L_41bbe0
.L_421038:

            mov BYTE PTR [RSP+61],AL
            jmp .L_41f768
.L_421041:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421050:

            mov RCX,RSI
            lea RSI,QWORD PTR [RIP+.L_41bc90]
            mov R8,RDX
            xor EDX,EDX
            jmp .L_41d990
.L_421064:
          .string "guetzli/jpeg_data_writer.cc"
.L_421080:
          .string "pos == data.size()"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421098:
          .string "histograms.size() == 2 * num_components"
# WARNING: found overlapping blocks at address 20e75
# WARNING: found overlapping blocks at address 20e77
.L_4210c0:
          .string "vector::_M_default_append"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4210e0:

            test RSI,RSI
            je .L_421350

            push R15
            push R14
            movabs RCX,-71777214294589695
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_421104:

            mov R9,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
.L_42110c:

            sub RAX,R9
            sar RAX,2
            imul RAX,RCX
            cmp RAX,RSI
            jae .L_4212d0

            mov R8,QWORD PTR [RDI]
            mov R15,R9
            movabs RDX,17944303573647423
            mov RAX,RDX
            mov RBX,RSI
            sub R15,R8
            mov R12,R15
            sar R12,2
            imul R12,RCX
            sub RAX,R12
            cmp RSI,RAX
            ja .L_421391

            cmp RSI,R12
            mov RAX,R12
            cmovae RAX,RSI
            add RAX,R12
            jb .L_421358

            cmp RAX,RDX
            ja .L_421358

            test RAX,RAX
            je .L_421368

            mov R14,RAX
            shl R14,8
            add R14,RAX
            shl R14,2
.L_421183:

            mov RDI,R14
            call _Znwm@PLT

            mov R9,QWORD PTR [RBP+8]
            mov R8,QWORD PTR [RBP]
            mov R13,RAX
            add R14,RAX
.L_421199:

            lea RDX,QWORD PTR [R13+R15*1]
            mov RSI,RBX
            xor EAX,EAX
.L_4211a3:

            test RDX,RDX
            jne .L_4211b3

            sub RSI,1
            je .L_4211f3

            mov EDX,1028
.L_4211b3:

            lea RDI,QWORD PTR [RDX+8]
            mov RCX,RDX
            mov QWORD PTR [RDX+1020],0
            mov QWORD PTR [RDX],0
            add RDX,1028
            and RDI,-8
            sub RCX,RDI
            add ECX,1028
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RDX-4],1
            sub RSI,1
            jne .L_4211a3
.L_4211f3:

            cmp R9,R8
            je .L_421294

            lea RAX,QWORD PTR [R8+1028]
            mov RDX,R8
            sub R9,RAX
            mov RAX,R9
            movabs R9,4539908804132798209
            shr RAX,2
            imul RAX,R9
            movabs R9,4611686018427387903
            and RAX,R9
            add RAX,1
            mov RCX,RAX
            shl RCX,8
            add RAX,RCX
            lea R9,QWORD PTR [R13+RAX*4]
            mov RAX,R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_421248:

            test RAX,RAX
            je .L_421373
.L_421251:

            mov RCX,QWORD PTR [RDX]
            lea RDI,QWORD PTR [RAX+8]
            mov RSI,RDX
            add RDX,1028
            and RDI,-8
            mov QWORD PTR [RAX],RCX
            mov RCX,QWORD PTR [RDX-8]
            mov QWORD PTR [RAX+1020],RCX
            mov RCX,RAX
            add RAX,1028
            sub RCX,RDI
            sub RSI,RCX
            add ECX,1028
            shr ECX,3
            cmp RAX,R9

            rep movsq 

            jne .L_421248
.L_421294:

            test R8,R8
            je .L_4212a1

            mov RDI,R8
            call _ZdlPv@PLT
.L_4212a1:

            add RBX,R12
            mov QWORD PTR [RBP],R13
            mov QWORD PTR [RBP+16],R14
            mov R12,RBX
            shl R12,8
            add RBX,R12
            lea RAX,QWORD PTR [R13+RBX*4]
            mov QWORD PTR [RBP+8],RAX
            add RSP,8
.L_4212c3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_4212d0:

            mov RDX,R9
            mov R8,RSI
            xor EAX,EAX
.L_4212d8:

            test RDX,RDX
            jne .L_4212e8

            sub R8,1
            je .L_421328

            mov EDX,1028
.L_4212e8:

            lea RDI,QWORD PTR [RDX+8]
            mov RCX,RDX
            mov QWORD PTR [RDX+1020],0
            mov QWORD PTR [RDX],0
            add RDX,1028
            and RDI,-8
            sub RCX,RDI
            add ECX,1028
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RDX-4],1
            sub R8,1
            jne .L_4212d8
.L_421328:

            mov RBX,RSI
            shl RBX,8
            add RSI,RBX
            lea RAX,QWORD PTR [R9+RSI*4]
            mov QWORD PTR [RBP+8],RAX
            add RSP,8
.L_42133e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421350:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421358:

            mov R14,-772
            jmp .L_421183
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421368:

            xor R14D,R14D
            xor R13D,R13D
            jmp .L_421199
.L_421373:

            add RDX,1028
            cmp R9,1028
            je .L_421294

            mov EAX,1028
            jmp .L_421251
.L_421391:

            lea RDI,QWORD PTR [RIP+.L_4210c0]
            call _ZSt20__throw_length_errorPKc@PLT
.L_42139d:

            nop
            nop
            nop
.L_4213a0:

            test RSI,RSI
            je .L_421478

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,8
.L_4213bd:

            mov RBP,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            sub RAX,RBP
            cmp RAX,RSI
            jae .L_421450

            sub RBP,QWORD PTR [RDI]
            mov RAX,RBP
            not RAX
            cmp RSI,RAX
            ja .L_4214b3

            cmp RSI,RBP
            mov RDI,RBP
            cmovae RDI,RSI
            add RDI,RBP
            mov R13,RDI
            jb .L_421498

            xor R14D,R14D
            xor R15D,R15D
            test RDI,RDI
            jne .L_42149f
.L_421408:

            lea RDI,QWORD PTR [R15+RBP*1]
            mov RDX,RBX
            xor ESI,ESI
            call memset@PLT

            mov R13,QWORD PTR [R12]
            mov RDX,QWORD PTR [R12+8]
            sub RDX,R13
            jne .L_421480

            test R13,R13
            jne .L_42148b
.L_421429:

            add RBX,RBP
            mov QWORD PTR [R12],R15
            mov QWORD PTR [R12+16],R14
            add RBX,R15
            mov QWORD PTR [R12+8],RBX
            add RSP,8
.L_421441:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421450:

            mov RDX,RSI
            mov RDI,RBP
            xor ESI,ESI
            add RBP,RBX
            call memset@PLT

            mov QWORD PTR [R12+8],RBP
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_421478:

            ret 

            nop
            nop
            nop
            nop
            nop
            nop
.L_421480:

            mov RSI,R13
            mov RDI,R15
            call memmove@PLT
.L_42148b:

            mov RDI,R13
            call _ZdlPv@PLT

            jmp .L_421429
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_421498:

            mov R13,-1
.L_42149f:

            mov RDI,R13
            call _Znwm@PLT

            mov R15,RAX
            lea R14,QWORD PTR [RAX+R13*1]
            jmp .L_421408
.L_4214b3:

            lea RDI,QWORD PTR [RIP+.L_4210c0]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4214bf:

            nop
.L_4214c0:

            sub RSP,1304

            mov R10,RDI
            mov ECX,160
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1288],RAX
            xor EAX,EAX
            mov R8,RSP
            test RSI,RSI
            mov RDI,R8

            rep stosq QWORD PTR [RDI]

            je .L_421570

            mov R11,RSI
            mov RDX,R10
            mov R9,RSI
            nop
            nop
            nop
.L_421500:

            mov RAX,QWORD PTR [R8]
            lea RDI,QWORD PTR [RDX+8]
            mov RCX,RDX
            mov RSI,R8
            add RDX,1280
            and RDI,-8
            mov QWORD PTR [RDX-1280],RAX
            mov RAX,QWORD PTR [R8+1272]
            sub RCX,RDI
            sub RSI,RCX
            add ECX,1280
            shr ECX,3
            mov QWORD PTR [RDX-8],RAX
            sub R9,1

            rep movsq 

            jne .L_421500

            lea RAX,QWORD PTR [R11+R11*4]
            shl RAX,8
            add RAX,R10
.L_42154d:

            mov RDI,QWORD PTR [RSP+1288]
            xor RDI,QWORD PTR FS:[40]
            jne .L_421575

            add RSP,1304

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421570:

            mov RAX,R10
            jmp .L_42154d
.L_421575:

            call __stack_chk_fail@PLT
.L_42157a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_421580:

            test RSI,RSI
            je .L_4216a8

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            movabs RSI,-3689348814741910323
            sub RSP,8
.L_4215a7:

            mov RDI,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RBP+16]
            sub RAX,RDI
            sar RAX,8
            imul RAX,RSI
            cmp RAX,RBX
            jae .L_421688

            sub RDI,QWORD PTR [RBP]
            movabs RDX,14411518807585587
            mov RAX,RDX
            mov R12,RDI
            mov R14,RDI
            sar R12,8
            imul R12,RSI
            sub RAX,R12
            cmp RBX,RAX
            ja .L_4216db

            cmp RBX,R12
            mov RAX,R12
            cmovae RAX,RBX
            add RAX,R12
            jb .L_4216c0

            cmp RAX,RDX
            ja .L_4216c0

            test RAX,RAX
            je .L_4216d0

            lea R13,QWORD PTR [RAX+RAX*4]
            shl R13,8
.L_42161b:

            mov RDI,R13
            call _Znwm@PLT

            mov R15,RAX
            add R13,RAX
.L_421629:

            lea RDI,QWORD PTR [R15+R14*1]
            mov RSI,RBX
            call .L_4214c0

            mov R14,QWORD PTR [RBP]
            mov RDX,QWORD PTR [RBP+8]
            cmp RDX,R14
            je .L_4216b0

            sub RDX,R14
            mov RSI,R14
            mov RDI,R15
            call memmove@PLT
.L_421650:

            mov RDI,R14
            call _ZdlPv@PLT
.L_421658:

            add RBX,R12
            mov QWORD PTR [RBP],R15
            mov QWORD PTR [RBP+16],R13
            lea RAX,QWORD PTR [RBX+RBX*4]
            shl RAX,8
            add RAX,R15
            mov QWORD PTR [RBP+8],RAX
            add RSP,8
.L_421676:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421688:

            mov RSI,RBX
            call .L_4214c0

            mov QWORD PTR [RBP+8],RAX
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4216a8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4216b0:

            test R14,R14
            je .L_421658

            jmp .L_421650
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4216c0:

            mov R13,-256
            jmp .L_42161b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4216d0:

            xor R13D,R13D
            xor R15D,R15D
            jmp .L_421629
.L_4216db:

            lea RDI,QWORD PTR [RIP+.L_4210c0]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4216e7:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421700:
          .string "bool guetzli::{anonymous}::BuildAndEncodeHuffmanCodes(const guetzli::JPEGData&, guetzli::JPEGOutput, std::vector<guetzli::HuffmanCodeTable>*, std::vector<guetzli::HuffmanCodeTable>*)"
          .zero 9
.L_4217c0:
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65

            pop RDI
            je .L_4217e7
          .byte 0x67
          .byte 0x75
          .byte 0x65
          .byte 0x74
          .byte 0x7a
          .byte 0x6c
          .byte 0x69
          .byte 0x3a
          .byte 0x3a
          .byte 0x45
          .byte 0x73
          .byte 0x74
          .byte 0x69
          .byte 0x6d
          .byte 0x61
          .byte 0x74
          .byte 0x65
          .byte 0x4a
          .byte 0x70
          .byte 0x65
          .byte 0x67
          .byte 0x44
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x53
          .byte 0x69
          .byte 0x7a
          .byte 0x65

            sub BYTE PTR [RCX+110],CH
.L_4217e7:

            je .L_421815

            and BYTE PTR [RBX+111],AH
            outsb DX,BYTE PTR [RSI]
          .byte 0x73
          .byte 0x74

            and BYTE PTR [RBX+116],DH
            cmp BH,BYTE PTR FS:[RDX]
          .byte 0x76
          .byte 0x65
          .byte 0x63
          .byte 0x74

            outsd DX,DWORD PTR [RSI]
          .byte 0x72
          .byte 0x3c
          .byte 0x67
          .byte 0x75
          .byte 0x65
          .byte 0x74
          .byte 0x7a
          .byte 0x6c
          .byte 0x69

            cmp BH,BYTE PTR [RDX]
          .byte 0x4a
          .byte 0x70
          .byte 0x65
          .byte 0x67
          .byte 0x48
          .byte 0x69
          .byte 0x73
          .byte 0x74

            outsd DX,DWORD PTR [RSI]
          .byte 0x67
          .byte 0x72
          .byte 0x61
          .byte 0x6d
          .byte 0x3e
          .byte 0x26
          .byte 0x29
.L_421815:

            add BH,BH
            fcos 
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421820:
          .zero 4
.L_421824:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421920:
          .string "?"
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421960:
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421970:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421980:
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421990:
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4219a0:
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4219b0:
          .string ""
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4219c0:
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4219d0:
          .string "A"
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4219e0:

            inc DWORD PTR [RAX]
            inc DWORD PTR [RAX]
            inc DWORD PTR [RAX]
            inc DWORD PTR [RAX]
            inc DWORD PTR [RAX]
            inc DWORD PTR [RAX]
            inc DWORD PTR [RAX]
            inc DWORD PTR [RAX]
.L_4219f0:

            jmp RAX

            add BYTE PTR [RAX],DL
            add BYTE PTR [RCX],R8B
            add DWORD PTR [RAX],EAX
            add BYTE PTR [RCX],AL
            add BYTE PTR [RCX],AL
.L_421a00:

            push R13
            push R12
            movabs RAX,4294967297
            push RBP
            push RBX
            lea ECX,DWORD PTR [RDX+14]
            mov RBX,RDI
            sub RSP,8
.L_421a1a:

            mov QWORD PTR [RDI+8],RAX
            lea EAX,DWORD PTR [RSI+14]
            mov DWORD PTR [RDI],ESI
            add ESI,7
            mov DWORD PTR [RDI+4],EDX
            cmovns EAX,ESI
            mov QWORD PTR [RDI+32],0
            mov QWORD PTR [RDI+40],0
            sar EAX,3
            add EDX,7
            mov QWORD PTR [RDI+48],0
            cmovs EDX,ECX
            mov DWORD PTR [RDI+16],EAX
            mov QWORD PTR [RDI+56],0
            sar EDX,3
            mov QWORD PTR [RDI+64],0
            mov QWORD PTR [RDI+72],0
            imul EAX,EDX
            mov DWORD PTR [RDI+20],EDX
            mov DWORD PTR [RDI+24],EAX
            shl EAX,6
            movsxd RBP,EAX
            test RBP,RBP
            je .L_421ac0

            test EAX,EAX
            js .L_421ebb

            add RBP,RBP
            mov RDI,RBP
.L_421a8d:

            call _Znwm@PLT

            mov R13,QWORD PTR [RBX+32]
            lea R12,QWORD PTR [RAX+RBP*1]
            xor ESI,ESI
            mov RDX,RBP
            mov RDI,RAX
            call memset@PLT

            test R13,R13
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+40],R12
            mov QWORD PTR [RBX+48],R12
            je .L_421ac0

            mov RDI,R13
            call _ZdlPv@PLT
.L_421ac0:

            mov EAX,DWORD PTR [RBX]
            imul EAX,DWORD PTR [RBX+4]
            movsxd RBP,EAX
            test RBP,RBP
            je .L_421ea0

            test EAX,EAX
            js .L_421ec0

            lea R12,QWORD PTR [RBP+RBP*1]
            mov RDI,R12
            call _Znwm@PLT

            mov RDX,RAX
            lea RDI,QWORD PTR [RBP-1]
            mov ESI,9
            shr RDX,1
            lea R8,QWORD PTR [RAX+R12*1]
            neg RDX
            mov R9,RDI
            and EDX,7
            lea RCX,QWORD PTR [RDX+7]
            cmp RCX,9
            cmovb RCX,RSI
            cmp RDI,RCX
            jb .L_421e90

            test RDX,RDX
            je .L_421e80

            mov R10D,2048
            cmp RDX,1
            lea RDI,QWORD PTR [RAX+2]
            mov WORD PTR [RAX],R10W
            je .L_421bc3

            mov R9D,2048
            cmp RDX,2
            lea RDI,QWORD PTR [RAX+4]
            mov WORD PTR [RAX+2],R9W
            lea R9,QWORD PTR [RBP-2]
            je .L_421bc3

            mov EDI,2048
            cmp RDX,3
            lea R9,QWORD PTR [RBP-3]
            mov WORD PTR [RAX+4],DI
            lea RDI,QWORD PTR [RAX+6]
            je .L_421bc3

            mov ESI,2048
            cmp RDX,4
            lea R9,QWORD PTR [RBP-4]
            mov WORD PTR [RAX+6],SI
            lea RDI,QWORD PTR [RAX+8]
            je .L_421bc3

            mov ECX,2048
            cmp RDX,5
            lea R9,QWORD PTR [RBP-5]
            mov WORD PTR [RAX+8],CX
            lea RDI,QWORD PTR [RAX+10]
            je .L_421bc3

            mov R13D,2048
            cmp RDX,6
            lea R9,QWORD PTR [RBP-6]
            mov WORD PTR [RAX+10],R13W
            lea RDI,QWORD PTR [RAX+12]
            je .L_421bc3

            mov R12D,2048
            lea R9,QWORD PTR [RBP-7]
            lea RDI,QWORD PTR [RAX+14]
            mov WORD PTR [RAX+12],R12W
.L_421bc3:

            mov R10,RBP
            movdqa XMM0,XMMWORD PTR [RIP+.L_428dc0]
            sub R10,RDX
            lea RCX,QWORD PTR [RAX+RDX*2]
            xor EDX,EDX
            lea RSI,QWORD PTR [R10-8]
            shr RSI,3
            add RSI,1
            nop
            nop
            nop
            nop
            nop
.L_421be8:

            add RDX,1
            add RCX,16
            movaps XMMWORD PTR [RCX-16],XMM0
            cmp RSI,RDX
            ja .L_421be8

            lea RDX,QWORD PTR [RSI*8]
            shl RSI,4
            add RSI,RDI
            sub R9,RDX
            cmp R10,RDX
            mov RBP,R9
            je .L_421d10

            lea RDI,QWORD PTR [R9-1]
.L_421c1b:

            mov R11D,2048
            test RDI,RDI
            mov WORD PTR [RSI],R11W
            je .L_421d10

            mov R10D,2048
            cmp RBP,2
            mov WORD PTR [RSI+2],R10W
            je .L_421d10

            mov R9D,2048
            cmp RBP,3
            mov WORD PTR [RSI+4],R9W
            je .L_421d10

            mov EDI,2048
            cmp RBP,4
            mov WORD PTR [RSI+6],DI
            je .L_421d10

            mov ECX,2048
            cmp RBP,5
            mov WORD PTR [RSI+8],CX
            je .L_421d10

            mov EDX,2048
            cmp RBP,6
            mov WORD PTR [RSI+10],DX
            je .L_421d10

            mov R13D,2048
            cmp RBP,7
            mov WORD PTR [RSI+12],R13W
            je .L_421d10

            mov R12D,2048
            cmp RBP,8
            mov WORD PTR [RSI+14],R12W
            je .L_421d10

            mov R11D,2048
            cmp RBP,9
            mov WORD PTR [RSI+16],R11W
            je .L_421d10

            mov R10D,2048
            cmp RBP,10
            mov WORD PTR [RSI+18],R10W
            je .L_421d10

            mov R9D,2048
            cmp RBP,11
            mov WORD PTR [RSI+20],R9W
            je .L_421d10

            mov EDI,2048
            cmp RBP,12
            mov WORD PTR [RSI+22],DI
            je .L_421d10

            mov ECX,2048
            cmp RBP,13
            mov WORD PTR [RSI+24],CX
            je .L_421d10

            mov EDX,2048
            mov WORD PTR [RSI+26],DX
            nop
            nop
            nop
.L_421d10:

            mov RDI,QWORD PTR [RBX+56]
            mov QWORD PTR [RBX+64],R8
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+72],R8
            test RDI,RDI
            je .L_421d2a

            call _ZdlPv@PLT
.L_421d2a:

            lea RAX,QWORD PTR [RBX+80]
            shr RAX,2
            neg RAX
            and EAX,3
            je .L_421e40

            cmp EAX,1
            mov DWORD PTR [RBX+80],1
            je .L_421e30

            cmp EAX,2
            mov DWORD PTR [RBX+84],1
            je .L_421e70

            mov DWORD PTR [RBX+88],1
            mov ECX,61
            mov EDX,3
.L_421d6f:

            mov ESI,64
            movdqa XMM0,XMMWORD PTR [RIP+.L_428dd0]
            sub ESI,EAX
            mov EAX,EAX
            mov EDI,15
            lea RAX,QWORD PTR [RBX+RAX*4+80]
            movaps XMMWORD PTR [RAX],XMM0
            add RAX,16
.L_421d91:

            cmp EDI,15
            movaps XMMWORD PTR [RAX],XMM0
            movaps XMMWORD PTR [RAX+16],XMM0
            movaps XMMWORD PTR [RAX+32],XMM0
            movaps XMMWORD PTR [RAX+48],XMM0
            movaps XMMWORD PTR [RAX+64],XMM0
            movaps XMMWORD PTR [RAX+80],XMM0
            movaps XMMWORD PTR [RAX+96],XMM0
            movaps XMMWORD PTR [RAX+112],XMM0
            movaps XMMWORD PTR [RAX+128],XMM0
            movaps XMMWORD PTR [RAX+144],XMM0
            movaps XMMWORD PTR [RAX+160],XMM0
            movaps XMMWORD PTR [RAX+176],XMM0
            movaps XMMWORD PTR [RAX+192],XMM0
            movaps XMMWORD PTR [RAX+208],XMM0
            je .L_421eb0

            cmp ESI,64
            movaps XMMWORD PTR [RAX+224],XMM0
            lea EAX,DWORD PTR [RDX+64]
            lea EDX,DWORD PTR [RCX-64]
            je .L_421e25
.L_421df5:

            movsxd RCX,EAX
            cmp EDX,1
            mov DWORD PTR [RBX+RCX*4+80],1
            lea ECX,DWORD PTR [RAX+1]
            je .L_421e25

            movsxd RCX,ECX
            add EAX,2
            cmp EDX,2
            mov DWORD PTR [RBX+RCX*4+80],1
            je .L_421e25

            cdqe 
            mov DWORD PTR [RBX+RAX*4+80],1
.L_421e25:

            add RSP,8
.L_421e29:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_421e30:

            mov ECX,63
            mov EDX,1
            jmp .L_421d6f
          .byte 0x90
.L_421e40:

            movdqa XMM0,XMMWORD PTR [RIP+.L_428dd0]
            lea RAX,QWORD PTR [RBX+96]
            xor EDX,EDX
            mov EDI,16
            mov ECX,64
            movaps XMMWORD PTR [RBX+80],XMM0
            mov ESI,64
            jmp .L_421d91
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421e70:

            mov ECX,62
            mov EDX,2
            jmp .L_421d6f
          .byte 0x90
.L_421e80:

            mov RDI,RAX
            mov R9,RBP
            jmp .L_421bc3
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421e90:

            mov RSI,RAX
            jmp .L_421c1b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_421ea0:

            xor EAX,EAX
            xor R8D,R8D
            jmp .L_421d10
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_421eb0:

            lea EAX,DWORD PTR [RDX+60]
            lea EDX,DWORD PTR [RCX-60]
            jmp .L_421df5
.L_421ebb:

            call _ZSt17__throw_bad_allocv@PLT
.L_421ec0:

            call _ZSt17__throw_bad_allocv@PLT
.L_421ec5:

            mov RDI,QWORD PTR [RBX+56]
            mov RBP,RAX
            test RDI,RDI
            je .L_421ed6

            call _ZdlPv@PLT
.L_421ed6:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_421ee4

            call _ZdlPv@PLT
.L_421ee4:

            mov RDI,RBP
.L_421ee7:

            call _Unwind_Resume@PLT
.L_421eec:

            nop
            nop
            nop
            nop
.L_421ef0:

            push R12
            push RBP
            lea ECX,DWORD PTR [RSI*8]
            push RBX
.L_421efb:

            mov RBX,RDI
            mov EDI,EDX
            mov EAX,DWORD PTR [RBX]
            mov DWORD PTR [RBX+12],EDX
            mov DWORD PTR [RBX+8],ESI
            lea ESI,DWORD PTR [RDI*8]
            add EAX,ECX
            sub EAX,1
            cdq 
            idiv ECX
            mov ECX,EAX
            mov DWORD PTR [RBX+16],EAX
            mov EAX,DWORD PTR [RBX+4]
            add EAX,ESI
            sub EAX,1
            cdq 
            idiv ESI
            imul ECX,EAX
            mov DWORD PTR [RBX+20],EAX
            mov DWORD PTR [RBX+24],ECX
            shl ECX,6
            movsxd RBP,ECX
            test RBP,RBP
            je .L_422350

            test ECX,ECX
            js .L_42238b

            add RBP,RBP
            mov RDI,RBP
            call _Znwm@PLT

            mov RDX,RBP
            xor ESI,ESI
            mov RDI,RAX
            lea R12,QWORD PTR [RAX+RBP*1]
            call memset@PLT

            mov RCX,RAX
.L_421f66:

            mov RDI,QWORD PTR [RBX+32]
            mov QWORD PTR [RBX+40],R12
            mov QWORD PTR [RBX+32],RCX
            mov QWORD PTR [RBX+48],R12
            test RDI,RDI
            je .L_421f80

            call _ZdlPv@PLT
.L_421f80:

            mov EAX,DWORD PTR [RBX]
            imul EAX,DWORD PTR [RBX+4]
            movsxd RBP,EAX
            test RBP,RBP
            je .L_422360

            test EAX,EAX
            js .L_42238b

            lea R12,QWORD PTR [RBP+RBP*1]
            mov RDI,R12
            call _Znwm@PLT

            mov RDX,RAX
            lea RDI,QWORD PTR [RBP-1]
            mov ESI,9
            shr RDX,1
            lea R8,QWORD PTR [RAX+R12*1]
            neg RDX
            mov R9,RDI
            and EDX,7
            lea RCX,QWORD PTR [RDX+7]
            cmp RCX,9
            cmovb RCX,RSI
            cmp RDI,RCX
            jb .L_422370

            test RDX,RDX
            je .L_422340

            mov R12D,2048
            cmp RDX,1
            lea RDI,QWORD PTR [RAX+2]
            mov WORD PTR [RAX],R12W
            je .L_422083

            mov R11D,2048
            cmp RDX,2
            lea R9,QWORD PTR [RBP-2]
            mov WORD PTR [RAX+2],R11W
            lea RDI,QWORD PTR [RAX+4]
            je .L_422083

            mov R10D,2048
            cmp RDX,3
            lea R9,QWORD PTR [RBP-3]
            mov WORD PTR [RAX+4],R10W
            lea RDI,QWORD PTR [RAX+6]
            je .L_422083

            mov R9D,2048
            cmp RDX,4
            lea RDI,QWORD PTR [RAX+8]
            mov WORD PTR [RAX+6],R9W
            lea R9,QWORD PTR [RBP-4]
            je .L_422083

            mov EDI,2048
            cmp RDX,5
            lea R9,QWORD PTR [RBP-5]
            mov WORD PTR [RAX+8],DI
            lea RDI,QWORD PTR [RAX+10]
            je .L_422083

            mov ESI,2048
            cmp RDX,6
            lea R9,QWORD PTR [RBP-6]
            mov WORD PTR [RAX+10],SI
            lea RDI,QWORD PTR [RAX+12]
            je .L_422083

            mov ECX,2048
            lea R9,QWORD PTR [RBP-7]
            lea RDI,QWORD PTR [RAX+14]
            mov WORD PTR [RAX+12],CX
.L_422083:

            mov R10,RBP
            movdqa XMM0,XMMWORD PTR [RIP+.L_428dc0]
            sub R10,RDX
            lea RCX,QWORD PTR [RAX+RDX*2]
            xor EDX,EDX
            lea RSI,QWORD PTR [R10-8]
            shr RSI,3
            add RSI,1
            nop
            nop
            nop
            nop
            nop
.L_4220a8:

            add RDX,1
            add RCX,16
            movaps XMMWORD PTR [RCX-16],XMM0
            cmp RDX,RSI
            jb .L_4220a8

            lea RDX,QWORD PTR [RSI*8]
            shl RSI,4
            add RSI,RDI
            sub R9,RDX
            cmp R10,RDX
            mov RBP,R9
            je .L_4221d0

            lea RDI,QWORD PTR [R9-1]
.L_4220db:

            mov R12D,2048
            test RDI,RDI
            mov WORD PTR [RSI],R12W
            je .L_4221d0

            mov R11D,2048
            cmp RBP,2
            mov WORD PTR [RSI+2],R11W
            je .L_4221d0

            mov R10D,2048
            cmp RBP,3
            mov WORD PTR [RSI+4],R10W
            je .L_4221d0

            mov R9D,2048
            cmp RBP,4
            mov WORD PTR [RSI+6],R9W
            je .L_4221d0

            mov EDI,2048
            cmp RBP,5
            mov WORD PTR [RSI+8],DI
            je .L_4221d0

            mov ECX,2048
            cmp RBP,6
            mov WORD PTR [RSI+10],CX
            je .L_4221d0

            mov EDX,2048
            cmp RBP,7
            mov WORD PTR [RSI+12],DX
            je .L_4221d0

            mov R12D,2048
            cmp RBP,8
            mov WORD PTR [RSI+14],R12W
            je .L_4221d0

            mov R11D,2048
            cmp RBP,9
            mov WORD PTR [RSI+16],R11W
            je .L_4221d0

            mov R10D,2048
            cmp RBP,10
            mov WORD PTR [RSI+18],R10W
            je .L_4221d0

            mov R9D,2048
            cmp RBP,11
            mov WORD PTR [RSI+20],R9W
            je .L_4221d0

            mov EDI,2048
            cmp RBP,12
            mov WORD PTR [RSI+22],DI
            je .L_4221d0

            mov ECX,2048
            cmp RBP,13
            mov WORD PTR [RSI+24],CX
            je .L_4221d0

            mov EDX,2048
            mov WORD PTR [RSI+26],DX
            nop
            nop
            nop
.L_4221d0:

            mov RDI,QWORD PTR [RBX+56]
            mov QWORD PTR [RBX+64],R8
            mov QWORD PTR [RBX+56],RAX
            mov QWORD PTR [RBX+72],R8
            test RDI,RDI
            je .L_4221ea

            call _ZdlPv@PLT
.L_4221ea:

            lea RAX,QWORD PTR [RBX+80]
            shr RAX,2
            neg RAX
            and EAX,3
            je .L_422300

            cmp EAX,1
            mov DWORD PTR [RBX+80],1
            je .L_4222f0

            cmp EAX,2
            mov DWORD PTR [RBX+84],1
            je .L_422330

            mov DWORD PTR [RBX+88],1
            mov ECX,61
            mov EDX,3
.L_42222f:

            mov ESI,64
            movdqa XMM0,XMMWORD PTR [RIP+.L_428dd0]
            sub ESI,EAX
            mov EAX,EAX
            mov EDI,15
            lea RAX,QWORD PTR [RBX+RAX*4+80]
            movaps XMMWORD PTR [RAX],XMM0
            add RAX,16
.L_422251:

            cmp EDI,15
            movaps XMMWORD PTR [RAX],XMM0
            movaps XMMWORD PTR [RAX+16],XMM0
            movaps XMMWORD PTR [RAX+32],XMM0
            movaps XMMWORD PTR [RAX+48],XMM0
            movaps XMMWORD PTR [RAX+64],XMM0
            movaps XMMWORD PTR [RAX+80],XMM0
            movaps XMMWORD PTR [RAX+96],XMM0
            movaps XMMWORD PTR [RAX+112],XMM0
            movaps XMMWORD PTR [RAX+128],XMM0
            movaps XMMWORD PTR [RAX+144],XMM0
            movaps XMMWORD PTR [RAX+160],XMM0
            movaps XMMWORD PTR [RAX+176],XMM0
            movaps XMMWORD PTR [RAX+192],XMM0
            movaps XMMWORD PTR [RAX+208],XMM0
            je .L_422380

            cmp ESI,64
            movaps XMMWORD PTR [RAX+224],XMM0
            lea EAX,DWORD PTR [RDX+64]
            lea EDX,DWORD PTR [RCX-64]
            je .L_4222e5
.L_4222b5:

            movsxd RCX,EAX
            cmp EDX,1
            mov DWORD PTR [RBX+RCX*4+80],1
            lea ECX,DWORD PTR [RAX+1]
            je .L_4222e5

            movsxd RCX,ECX
            add EAX,2
            cmp EDX,2
            mov DWORD PTR [RBX+RCX*4+80],1
            je .L_4222e5

            cdqe 
            mov DWORD PTR [RBX+RAX*4+80],1
.L_4222e5:

            pop RBX
.L_4222e6:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4222f0:

            mov ECX,63
            mov EDX,1
            jmp .L_42222f
          .byte 0x90
.L_422300:

            movdqa XMM0,XMMWORD PTR [RIP+.L_428dd0]
            lea RAX,QWORD PTR [RBX+96]
            mov ESI,64
            mov ECX,64
            xor EDX,EDX
            movaps XMMWORD PTR [RBX+80],XMM0
            mov EDI,16
            jmp .L_422251
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422330:

            mov ECX,62
            mov EDX,2
            jmp .L_42222f
          .byte 0x90
.L_422340:

            mov RDI,RAX
            mov R9,RBP
            jmp .L_422083
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422350:

            xor ECX,ECX
            xor R12D,R12D
            jmp .L_421f66
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422360:

            xor EAX,EAX
            xor R8D,R8D
            jmp .L_4221d0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422370:

            mov RSI,RAX
            jmp .L_4220db
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422380:

            lea EAX,DWORD PTR [RDX+60]
            lea EDX,DWORD PTR [RCX-60]
            jmp .L_4222b5
.L_42238b:

            call _ZSt17__throw_bad_allocv@PLT
.L_422390:

            mov EDX,DWORD PTR [RDI+24]
            shl EDX,6
            test EDX,EDX
            jle .L_4223c8

            mov RAX,QWORD PTR [RDI+32]
            cmp WORD PTR [RAX],0
            jne .L_4223d0

            add RAX,2
            sub EDX,1
            lea RDX,QWORD PTR [RAX+RDX*2]
            jmp .L_4223c3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4223b8:

            add RAX,2
            cmp WORD PTR [RAX-2],0
            jne .L_4223d0
.L_4223c3:

            cmp RAX,RDX
            jne .L_4223b8
.L_4223c8:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x90
.L_4223d0:

            xor EAX,EAX
            ret 
.L_4223d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4223e0:

            sub RSP,8
.L_4223e4:

            mov EAX,DWORD PTR [RDI+16]
            cmp EAX,ESI
            jle .L_42244d

            cmp DWORD PTR [RDI+20],EDX
            jle .L_42246c

            imul EAX,EDX
            mov RDX,QWORD PTR [RDI+32]
            add EAX,ESI
            shl EAX,6
            cdqe 
            lea RAX,QWORD PTR [RDX+RAX*2]
            movdqu XMM0,XMMWORD PTR [RAX]
            movups XMMWORD PTR [RCX],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movups XMMWORD PTR [RCX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movups XMMWORD PTR [RCX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+48]
            movups XMMWORD PTR [RCX+48],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+64]
            movups XMMWORD PTR [RCX+64],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+80]
            movups XMMWORD PTR [RCX+80],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+96]
            movups XMMWORD PTR [RCX+96],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+112]
            movups XMMWORD PTR [RCX+112],XMM0
            add RSP,8
.L_42244c:

            ret 
.L_42244d:

            lea RCX,QWORD PTR [RIP+.L_427960]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427367]
            mov EDX,61
            call __assert_fail@PLT
.L_42246c:

            call .L_401584
.L_422471:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422480:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_42248e:

            test ESI,ESI
            js .L_422628

            test EDX,EDX
            js .L_422685

            mov EAX,DWORD PTR [RDI]
            cmp EAX,ESI
            jle .L_422666

            mov R10D,DWORD PTR [RDI+4]
            cmp R10D,EDX
            jle .L_422647

            lea EBX,DWORD PTR [RDX+R8*1]
            mov R15D,DWORD PTR [RSP+80]
            lea R12D,DWORD PTR [RSI+RCX*1]
            cmp R10D,EBX
            mov DWORD PTR [RSP+8],EBX
            cmovg R10D,EBX
            neg R15D
            cmp EDX,R10D
            mov DWORD PTR [RSP],R10D
            jge .L_4225b4

            movsxd RBX,DWORD PTR [RSP+80]
            lea R10D,DWORD PTR [R12-1]
            mov R14D,ESI
            not R14D
            movsxd R15,R15D
            mov DWORD PTR [RSP+12],ECX
            mov DWORD PTR [RSP+4],R10D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_422500:

            cmp R12D,EAX
            mov R13D,EAX
            cmovle R13D,R12D
            imul EAX,EDX
            add EAX,ESI
            cmp ESI,R13D
            jge .L_422620

            lea R8D,DWORD PTR [R14+R13*1]
            cdqe 
            mov R10D,ESI
            lea RCX,QWORD PTR [RAX+RAX*1]
            lea RBP,QWORD PTR [RAX+R8*1+1]
            mov R8,R9
            add RBP,RBP
.L_422530:

            mov RAX,QWORD PTR [RDI+56]
            mov R11D,R10D
            add R10D,1
            and R11D,1
            movzx EAX,WORD PTR [RAX+RCX*1]
            add RCX,2
            add EAX,8
            sub EAX,R11D
            sar EAX,4
            mov BYTE PTR [R8],AL
            add R8,RBX
            cmp RBP,RCX
            jne .L_422530

            lea EAX,DWORD PTR [R14+R13*1]
            add RAX,1
            imul RAX,RBX
            add R9,RAX
.L_42256a:

            cmp R13D,R12D
            jge .L_42259d

            mov ECX,R13D
            mov RAX,R9
            nop
            nop
            nop
.L_422578:

            movzx R8D,BYTE PTR [RAX+R15*1]
            add ECX,1
            mov BYTE PTR [RAX],R8B
            add RAX,RBX
            cmp ECX,R12D
            jne .L_422578

            mov EAX,DWORD PTR [RSP+4]
            sub EAX,R13D
            add RAX,1
            imul RAX,RBX
            add R9,RAX
.L_42259d:

            add EDX,1
            cmp EDX,DWORD PTR [RSP]
            je .L_4225b0

            mov EAX,DWORD PTR [RDI]
            jmp .L_422500
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4225b0:

            mov ECX,DWORD PTR [RSP+12]
.L_4225b4:

            cmp DWORD PTR [RSP+8],EDX
            jle .L_42260c

            mov R10D,DWORD PTR [RSP+80]
            neg R10D
            imul R10D,ECX
            test ECX,ECX
            jle .L_42260c

            movsxd R8,DWORD PTR [RSP+80]
            lea R11D,DWORD PTR [RCX-1]
            mov EBX,DWORD PTR [RSP+8]
            movsxd R10,R10D
            add R11,1
            imul R11,R8
            nop
            nop
            nop
            nop
            nop
            nop
.L_4225e8:

            mov RAX,R9
            xor ESI,ESI
            nop
            nop
            nop
.L_4225f0:

            movzx EDI,BYTE PTR [RAX+R10*1]
            add ESI,1
            mov BYTE PTR [RAX],DIL
            add RAX,R8
            cmp ECX,ESI
            jne .L_4225f0

            add EDX,1
            add R9,R11
            cmp EBX,EDX
            jne .L_4225e8
.L_42260c:

            add RSP,24
.L_422610:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422620:

            mov R13D,ESI
            jmp .L_42256a
.L_422628:

            lea RCX,QWORD PTR [RIP+.L_427900]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427382]
            mov EDX,69
            call __assert_fail@PLT
.L_422647:

            lea RCX,QWORD PTR [RIP+.L_427900]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4273a4]
            mov EDX,72
            call __assert_fail@PLT
.L_422666:

            lea RCX,QWORD PTR [RIP+.L_427900]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427396]
            mov EDX,71
            call __assert_fail@PLT
.L_422685:

            lea RCX,QWORD PTR [RIP+.L_427900]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_42738c]
            mov EDX,70
            call __assert_fail@PLT
.L_4226a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4226b0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,728
.L_4226c1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+712],RAX
            xor EAX,EAX
            cmp DWORD PTR [RDI+8],1
            jne .L_422ccb

            cmp DWORD PTR [RDI+12],1
            mov R14,RDI
            jne .L_422cef

            mov EBP,EDX
            mov EDX,DWORD PTR [RDI+20]
            test EDX,EDX
            jle .L_422ca6

            movsd XMM3,QWORD PTR [RIP+.L_428de0]
            mov EAX,DWORD PTR [RDI+16]
            mov R15,RSI
            mov DWORD PTR [RSP+8],8
            mov DWORD PTR [RSP+56],0
            movapd XMM5,XMM3
            nop
            nop
            nop
            nop
            nop
            nop
.L_422720:

            test EAX,EAX
            jle .L_422c90

            cmp DWORD PTR [RSP+56],EDX
            jge .L_422c86

            mov EBX,DWORD PTR [RSP+56]
            lea RDI,QWORD PTR [RSP+192]
            lea R12,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RIP+.L_428de0]
            mov DWORD PTR [RSP+12],0
            mov QWORD PTR [RSP+16],RDI
            shl EBX,3
            mov DWORD PTR [RSP+60],EBX
            mov EBX,7
            nop
            nop
            nop
            nop
.L_422768:

            imul EAX,DWORD PTR [RSP+56]
            mov R13D,DWORD PTR [RSP+12]
            mov RDX,QWORD PTR [R14+32]
            movsd QWORD PTR [RSP+48],XMM5
            pxor XMM6,XMM6
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM4
            movdqa XMM13,XMM6
            add EAX,R13D
            shl R13D,3
            shl EAX,6
            cdqe 
            lea RAX,QWORD PTR [RDX+RAX*2]
            movdqu XMM11,XMMWORD PTR [RAX]
            pcmpgtw XMM13,XMM11
            movdqa XMM12,XMM11
            movaps XMMWORD PTR [R12],XMM11
            punpcklwd XMM12,XMM13
            punpckhwd XMM11,XMM13
            cvtdq2pd XMM13,XMM12
            pshufd XMM12,XMM12,238
            movdqu XMM10,XMMWORD PTR [RAX+16]
            cvtdq2pd XMM12,XMM12
            movaps XMMWORD PTR [RSP+208],XMM12
            cvtdq2pd XMM12,XMM11
            pshufd XMM11,XMM11,238
            movaps XMMWORD PTR [R12+16],XMM10
            cvtdq2pd XMM11,XMM11
            movaps XMMWORD PTR [RSP+192],XMM13
            movdqu XMM9,XMMWORD PTR [RAX+32]
            movaps XMMWORD PTR [RSP+224],XMM12
            movdqa XMM12,XMM6
            movaps XMMWORD PTR [R12+32],XMM9
            pcmpgtw XMM12,XMM10
            movdqu XMM8,XMMWORD PTR [RAX+48]
            movaps XMMWORD PTR [RSP+240],XMM11
            movdqa XMM11,XMM10
            punpckhwd XMM10,XMM12
            punpcklwd XMM11,XMM12
            movdqu XMM7,XMMWORD PTR [RAX+64]
            cvtdq2pd XMM12,XMM11
            pshufd XMM11,XMM11,238
            movdqu XMM2,XMMWORD PTR [RAX+80]
            cvtdq2pd XMM11,XMM11
            movaps XMMWORD PTR [RSP+272],XMM11
            cvtdq2pd XMM11,XMM10
            pshufd XMM10,XMM10,238
            movaps XMMWORD PTR [R12+48],XMM8
            cvtdq2pd XMM10,XMM10
            movaps XMMWORD PTR [R12+64],XMM7
            movaps XMMWORD PTR [R12+80],XMM2
            movaps XMMWORD PTR [RSP+256],XMM12
            movdqu XMM1,XMMWORD PTR [RAX+96]
            movaps XMMWORD PTR [RSP+288],XMM11
            movdqa XMM11,XMM6
            movaps XMMWORD PTR [R12+96],XMM1
            pcmpgtw XMM11,XMM9
            movdqu XMM0,XMMWORD PTR [RAX+112]
            movaps XMMWORD PTR [RSP+304],XMM10
            movdqa XMM10,XMM9
            punpckhwd XMM9,XMM11
            punpcklwd XMM10,XMM11
            movaps XMMWORD PTR [R12+112],XMM0
            cvtdq2pd XMM11,XMM10
            pshufd XMM10,XMM10,238
            movaps XMMWORD PTR [RSP+320],XMM11
            cvtdq2pd XMM10,XMM10
            movaps XMMWORD PTR [RSP+336],XMM10
            cvtdq2pd XMM10,XMM9
            pshufd XMM9,XMM9,238
            movaps XMMWORD PTR [RSP+352],XMM10
            movdqa XMM10,XMM6
            cvtdq2pd XMM9,XMM9
            movaps XMMWORD PTR [RSP+368],XMM9
            pcmpgtw XMM10,XMM8
            movdqa XMM9,XMM8
            punpcklwd XMM9,XMM10
            punpckhwd XMM8,XMM10
            mov RDI,QWORD PTR [RSP+16]
            cvtdq2pd XMM10,XMM9
            pshufd XMM9,XMM9,238
            movaps XMMWORD PTR [RSP+384],XMM10
            cvtdq2pd XMM9,XMM9
            movaps XMMWORD PTR [RSP+400],XMM9
            cvtdq2pd XMM9,XMM8
            pshufd XMM8,XMM8,238
            movaps XMMWORD PTR [RSP+416],XMM9
            movdqa XMM9,XMM6
            cvtdq2pd XMM8,XMM8
            movaps XMMWORD PTR [RSP+432],XMM8
            pcmpgtw XMM9,XMM7
            movdqa XMM8,XMM7
            punpcklwd XMM8,XMM9
            punpckhwd XMM7,XMM9
            cvtdq2pd XMM9,XMM8
            pshufd XMM8,XMM8,238
            movaps XMMWORD PTR [RSP+448],XMM9
            cvtdq2pd XMM8,XMM8
            movaps XMMWORD PTR [RSP+464],XMM8
            cvtdq2pd XMM8,XMM7
            pshufd XMM7,XMM7,238
            movaps XMMWORD PTR [RSP+480],XMM8
            movdqa XMM8,XMM6
            cvtdq2pd XMM7,XMM7
            movaps XMMWORD PTR [RSP+496],XMM7
            pcmpgtw XMM8,XMM2
            movdqa XMM7,XMM2
            punpcklwd XMM7,XMM8
            punpckhwd XMM2,XMM8
            cvtdq2pd XMM8,XMM7
            pshufd XMM7,XMM7,238
            movaps XMMWORD PTR [RSP+512],XMM8
            cvtdq2pd XMM7,XMM7
            movaps XMMWORD PTR [RSP+528],XMM7
            cvtdq2pd XMM7,XMM2
            pshufd XMM2,XMM2,238
            movaps XMMWORD PTR [RSP+544],XMM7
            movdqa XMM7,XMM6
            cvtdq2pd XMM2,XMM2
            movaps XMMWORD PTR [RSP+560],XMM2
            pcmpgtw XMM7,XMM1
            movdqa XMM2,XMM1
            pcmpgtw XMM6,XMM0
            punpcklwd XMM2,XMM7
            punpckhwd XMM1,XMM7
            cvtdq2pd XMM7,XMM2
            pshufd XMM2,XMM2,238
            movaps XMMWORD PTR [RSP+576],XMM7
            cvtdq2pd XMM2,XMM2
            movaps XMMWORD PTR [RSP+592],XMM2
            cvtdq2pd XMM2,XMM1
            pshufd XMM1,XMM1,238
            movaps XMMWORD PTR [RSP+608],XMM2
            cvtdq2pd XMM1,XMM1
            movaps XMMWORD PTR [RSP+624],XMM1
            movdqa XMM1,XMM0
            punpckhwd XMM0,XMM6
            punpcklwd XMM1,XMM6
            cvtdq2pd XMM2,XMM1
            pshufd XMM1,XMM1,238
            movaps XMMWORD PTR [RSP+640],XMM2
            cvtdq2pd XMM1,XMM1
            movaps XMMWORD PTR [RSP+656],XMM1
            cvtdq2pd XMM1,XMM0
            pshufd XMM0,XMM0,238
            movaps XMMWORD PTR [RSP+672],XMM1
            cvtdq2pd XMM0,XMM0
            movaps XMMWORD PTR [RSP+688],XMM0
            call .L_43bef0

            lea R11D,DWORD PTR [RBX-6]
            lea R10D,DWORD PTR [RBX-5]
            lea R9D,DWORD PTR [RBX-4]
            lea R8D,DWORD PTR [RBX-3]
            lea EDI,DWORD PTR [RBX-2]
            mov EAX,DWORD PTR [R14+4]
            movsd XMM0,QWORD PTR [RIP+.L_428de0]
            mov RCX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+60]
            movapd XMM8,XMM0
            movapd XMM7,XMM0
            mov DWORD PTR [RSP+4],EAX
            lea EAX,DWORD PTR [RBX-1]
            mov QWORD PTR [RSP+24],R12
            movapd XMM6,XMM0
            movapd XMM2,XMM0
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            mov R12D,EAX
            movsd XMM4,QWORD PTR [RSP+32]
            nop
            nop
            nop
            nop
.L_422b18:

            cmp EDX,DWORD PTR [RSP+4]
            jge .L_422c4e

            mov EAX,DWORD PTR [R14]
            cmp EAX,R13D
            jle .L_422b4a

            mov ESI,EDX
            movsd XMM1,QWORD PTR [RCX]
            imul ESI,EAX
            addsd XMM1,XMM2
            add ESI,R13D
            imul ESI,EBP
            cvtsd2ss XMM1,XMM1
            movsxd RSI,ESI
            movss DWORD PTR [R15+RSI*4],XMM1
.L_422b4a:

            cmp EAX,R11D
            jle .L_422b70

            mov ESI,EDX
            movsd XMM1,QWORD PTR [RCX+8]
            imul ESI,EAX
            addsd XMM1,XMM6
            add ESI,R11D
            imul ESI,EBP
            cvtsd2ss XMM1,XMM1
            movsxd RSI,ESI
            movss DWORD PTR [R15+RSI*4],XMM1
.L_422b70:

            cmp EAX,R10D
            jle .L_422b96

            mov ESI,EDX
            movsd XMM1,QWORD PTR [RCX+16]
            imul ESI,EAX
            addsd XMM1,XMM7
            add ESI,R10D
            imul ESI,EBP
            cvtsd2ss XMM1,XMM1
            movsxd RSI,ESI
            movss DWORD PTR [R15+RSI*4],XMM1
.L_422b96:

            cmp R9D,EAX
            jge .L_422bbd

            mov ESI,EDX
            movsd XMM1,QWORD PTR [RCX+24]
            imul ESI,EAX
            addsd XMM1,XMM8
            add ESI,R9D
            imul ESI,EBP
            cvtsd2ss XMM1,XMM1
            movsxd RSI,ESI
            movss DWORD PTR [R15+RSI*4],XMM1
.L_422bbd:

            cmp EAX,R8D
            jle .L_422be3

            mov ESI,EDX
            movsd XMM1,QWORD PTR [RCX+32]
            imul ESI,EAX
            addsd XMM1,XMM0
            add ESI,R8D
            imul ESI,EBP
            cvtsd2ss XMM1,XMM1
            movsxd RSI,ESI
            movss DWORD PTR [R15+RSI*4],XMM1
.L_422be3:

            cmp EAX,EDI
            jle .L_422c07

            mov ESI,EDX
            movsd XMM1,QWORD PTR [RCX+40]
            imul ESI,EAX
            addsd XMM1,XMM4
            add ESI,EDI
            imul ESI,EBP
            cvtsd2ss XMM1,XMM1
            movsxd RSI,ESI
            movss DWORD PTR [R15+RSI*4],XMM1
.L_422c07:

            cmp EAX,R12D
            jle .L_422c2d

            mov ESI,EDX
            movsd XMM1,QWORD PTR [RCX+48]
            imul ESI,EAX
            addsd XMM1,XMM5
            add ESI,R12D
            imul ESI,EBP
            cvtsd2ss XMM1,XMM1
            movsxd RSI,ESI
            movss DWORD PTR [R15+RSI*4],XMM1
.L_422c2d:

            cmp EAX,EBX
            jle .L_422c4e

            imul EAX,EDX
            movsd XMM1,QWORD PTR [RCX+56]
            addsd XMM1,XMM3
            add EAX,EBX
            imul EAX,EBP
            cvtsd2ss XMM1,XMM1
            cdqe 
            movss DWORD PTR [R15+RAX*4],XMM1
.L_422c4e:

            add EDX,1
            add RCX,64
            cmp EDX,DWORD PTR [RSP+8]
            jne .L_422b18

            add DWORD PTR [RSP+12],1
            mov EAX,DWORD PTR [R14+16]
            mov EDI,DWORD PTR [RSP+12]
            mov R12,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [R14+20]
            cmp EAX,EDI
            jle .L_422c90

            add EBX,8
            cmp EDX,DWORD PTR [RSP+56]
            jg .L_422768
.L_422c86:

            call .L_401584

            nop
            nop
            nop
            nop
            nop
.L_422c90:

            add DWORD PTR [RSP+56],1
            add DWORD PTR [RSP+8],8
            mov EBX,DWORD PTR [RSP+56]
            cmp EBX,EDX
            jl .L_422720
.L_422ca6:

            mov RAX,QWORD PTR [RSP+712]
            xor RAX,QWORD PTR FS:[40]
            jne .L_422cea

            add RSP,728
.L_422cc0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_422ccb:

            lea RCX,QWORD PTR [RIP+.L_4278a0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4273b3]
            mov EDX,100
            call __assert_fail@PLT
.L_422cea:

            call __stack_chk_fail@PLT
.L_422cef:

            lea RCX,QWORD PTR [RIP+.L_4278a0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4273c2]
            mov EDX,101
            call __assert_fail@PLT
.L_422d0e:

            nop
            nop
.L_422d10:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,264
.L_422d24:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+248],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            mov DWORD PTR [RSP+44],EDX
            movabs RDX,4294967297
            mov DWORD PTR [RSP+40],ESI
            mov QWORD PTR [RSP+32],RCX
            cmp RAX,RDX
            je .L_42309f

            movabs RDX,8589934594
            cmp RAX,RDX
            jne .L_4232b7

            mov EAX,DWORD PTR [RSP+44]
            mov R14D,DWORD PTR [RDI]
            shl ESI,4
            mov R12D,10
            xor R11D,R11D
            mov QWORD PTR [RSP+24],RDI
            shl EAX,4
            mov DWORD PTR [RSP+16],EAX
            mov EAX,DWORD PTR [RDI+4]
            mov DWORD PTR [RSP+8],EAX
            nop
            nop
            nop
            nop
.L_422d98:

            cmp R11D,9
            je .L_4232ed

            lea EDI,DWORD PTR [R11+R11*1]
.L_422da6:

            add EDI,DWORD PTR [RSP+16]
            lea EAX,DWORD PTR [R11*8]
            cmp R11D,9
            mov R13D,0
            mov EBX,0
            mov DWORD PTR [RSP+12],EAX
            cmovne R13D,R12D
            lea R10D,DWORD PTR [R13+1]
            mov DWORD PTR [RSP+20],R13D
            mov EBP,EDI
            mov EAX,EDI
            imul EBP,R14D
            sub EAX,1
            cmovs EAX,EBX
            imul EAX,R14D
            mov EBX,EAX
            xor EAX,EAX
            jmp .L_422e1c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_422df0:

            test EDI,EDI
            js .L_422fb8

            cmp ECX,R14D
            jl .L_422fd0

            lea ECX,DWORD PTR [RDX-1]
            movsxd RDX,EDX
            movsxd RCX,ECX
            movzx ECX,WORD PTR [RSP+RCX*2+48]
            mov WORD PTR [RSP+RDX*2+48],CX
.L_422e14:

            add EAX,1
            cmp EAX,10
            je .L_422e4b
.L_422e1c:

            cmp EAX,9
            je .L_4232da

            lea EDX,DWORD PTR [R10+RAX*1]
            lea ECX,DWORD PTR [RAX+RAX*1]
.L_422e2c:

            add ECX,ESI
            jns .L_422df0

            lea ECX,DWORD PTR [RDX+1]
            add EAX,1
            movsxd RDX,EDX
            cmp EAX,10
            movsxd RCX,ECX
            movzx ECX,WORD PTR [RSP+RCX*2+48]
            mov WORD PTR [RSP+RDX*2+48],CX
            jne .L_422e1c
.L_422e4b:

            add R11D,1
            add R12D,10
            cmp R11D,10
            jne .L_422d98

            mov EDI,DWORD PTR [RSP+40]
            xor ECX,ECX
            lea R12D,DWORD PTR [R14-1]
            mov EBX,DWORD PTR [RSP+16]
            mov R13,QWORD PTR [RSP+24]
            mov EDX,EDI
            shl EDX,4
            mov EBP,EBX
            mov EAX,EDX
            sub EAX,1
            cmovs EAX,ECX
            add EDX,16
            cmp R12D,EDX
            cmovg R12D,EDX
            mov EDX,DWORD PTR [RSP+8]
            sub EBP,1
            cmovs EBP,ECX
            add EBX,16
            mov ECX,EBX
            sub EDX,1
            cmp EDX,EBX
            cmovle ECX,EDX
            cmp EBP,ECX
            jg .L_422f8c

            mov EBX,DWORD PTR [RSP+44]
            mov RSI,QWORD PTR [R13+56]
            shl EBX,3
            mov DWORD PTR [RSP+8],EBX
            mov EBX,EDI
            shl EBX,3
            cmp EAX,R12D
            jg .L_422f8c

            mov EDX,R14D
            movsxd R13,R14D
            lea R14D,DWORD PTR [RCX+1]
            imul EDX,EBP
            add R13,R13
            movsxd R15,EAX
            sub R12D,EAX
            movsxd RDX,EDX
            lea R10,QWORD PTR [RSI+RDX*2]
            nop
            nop
            nop
            nop
            nop
            nop
.L_422ee8:

            mov EAX,EBP
            mov EDX,4294967295
            lea RDI,QWORD PTR [R15+1]
            sar EAX,1
            sub EAX,DWORD PTR [RSP+8]
            mov RSI,R15
            lea R11,QWORD PTR [R12+RDI*1]
            lea R9D,DWORD PTR [RAX+RAX*4+5]
            mov EAX,EBP
            and EAX,1
            lea EAX,DWORD PTR [RDX+RAX*2]
            add R9D,R9D
            lea R8D,DWORD PTR [RAX+RAX*4]
            add R8D,R8D
            jmp .L_422f24
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_422f20:

            add RDI,1
.L_422f24:

            mov EAX,ESI
            sar EAX,1
            sub EAX,EBX
            lea ECX,DWORD PTR [R9+RAX*1+1]
            mov EAX,ESI
            and EAX,1
            lea EDX,DWORD PTR [RCX+RAX*2-1]
            lea EAX,DWORD PTR [R8+RCX*1]
            movsxd RCX,ECX
            movzx ECX,WORD PTR [RSP+RCX*2+48]
            cdqe 
            movzx EAX,WORD PTR [RSP+RAX*2+48]
            lea ECX,DWORD PTR [RCX+RCX*8]
            lea EAX,DWORD PTR [RAX+RAX*2]
            add EAX,ECX
            movsxd RCX,EDX
            add EDX,R8D
            movzx ECX,WORD PTR [RSP+RCX*2+48]
            movsxd RDX,EDX
            movzx EDX,WORD PTR [RSP+RDX*2+48]
            lea ECX,DWORD PTR [RCX+RCX*2]
            add EAX,ECX
            add EAX,EDX
            sar EAX,4
            cmp R11,RDI
            mov WORD PTR [R10+RSI*2],AX
            mov RSI,RDI
            jne .L_422f20

            add EBP,1
            add R10,R13
            cmp EBP,R14D
            jne .L_422ee8
.L_422f8c:

            mov RAX,QWORD PTR [RSP+248]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4232e8

            add RSP,264
.L_422faa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_422fb8:

            lea ECX,DWORD PTR [RDX+10]
            movsxd RDX,EDX
            movsxd RCX,ECX
            movzx ECX,WORD PTR [RSP+RCX*2+48]
            mov WORD PTR [RSP+RDX*2+48],CX
            jmp .L_422e14
.L_422fd0:

            cmp EDI,DWORD PTR [RSP+8]
            jl .L_422ff0

            lea ECX,DWORD PTR [RDX-10]
            movsxd RDX,EDX
            movsxd RCX,ECX
            movzx ECX,WORD PTR [RSP+RCX*2+48]
            mov WORD PTR [RSP+RDX*2+48],CX
            jmp .L_422e14
          .byte 0x66
          .byte 0x90
.L_422ff0:

            cmp EAX,7
            jg .L_423020

            cmp R11D,7
            jg .L_423020

            mov ECX,DWORD PTR [RSP+12]
            mov R9,QWORD PTR [RSP+32]
            movsxd RDX,EDX
            add ECX,EAX
            movzx ECX,BYTE PTR [R9+RCX*1]
            shl ECX,4
            mov WORD PTR [RSP+RDX*2+48],CX
            jmp .L_422e14
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423020:

            lea R8D,DWORD PTR [RCX-1]
            mov R9D,0
            lea R13D,DWORD PTR [RBP+RCX*1]
            movsxd RDX,EDX
            cmp R8D,-1
            movsxd R13,R13D
            cmove R8D,R9D
            mov R9,QWORD PTR [RSP+24]
            add ECX,EBX
            lea R15D,DWORD PTR [RBX+R8*1]
            add R8D,EBP
            movsxd RCX,ECX
            movsxd R8,R8D
            mov R9,QWORD PTR [R9+56]
            movsxd R15,R15D
            movzx R13D,WORD PTR [R9+R13*2]
            movzx R15D,WORD PTR [R9+R15*2]
            movzx R8D,WORD PTR [R9+R8*2]
            movzx ECX,WORD PTR [R9+RCX*2]
            lea R13D,DWORD PTR [R13+R13*8]
            add R13D,R15D
            lea R15D,DWORD PTR [R8*4]
            sub R8D,R15D
            add R13D,R8D
            lea R8D,DWORD PTR [RCX*4]
            sub ECX,R8D
            add R13D,ECX
            sar R13D,2
            mov WORD PTR [RSP+RDX*2+48],R13W
            jmp .L_422e14
.L_42309f:

            mov R9D,ESI
            mov EAX,DWORD PTR [RDI]
            shl R9D,3
            lea EDI,DWORD PTR [R9+5]
            lea R15D,DWORD PTR [R9+1]
            lea R12D,DWORD PTR [R9+2]
            lea EBP,DWORD PTR [R9+3]
            lea EBX,DWORD PTR [R9+4]
            lea R11D,DWORD PTR [R9+6]
            mov DWORD PTR [RSP+12],EDI
            lea EDI,DWORD PTR [R9+7]
            mov DWORD PTR [RSP+8],EDI
            mov EDI,DWORD PTR [RSP+44]
            shl EDI,3
            mov EDX,EDI
            mov DWORD PTR [RSP+16],EDI
            xor EDI,EDI
            imul EDX,EAX
            jmp .L_4231f7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4230e8:

            cmp DWORD PTR [R13+4],R8D
            jle .L_423208

            movzx R14D,BYTE PTR [RCX]
            mov RSI,QWORD PTR [R13+56]
            lea R10D,DWORD PTR [R9+RDX*1]
            movsxd R10,R10D
            shl R14D,4
            cmp R15D,EAX
            mov WORD PTR [RSI+R10*2],R14W
            jge .L_423291
.L_423113:

            movzx R14D,BYTE PTR [RCX+1]
            lea R10D,DWORD PTR [R15+RDX*1]
            movsxd R10,R10D
            shl R14D,4
            cmp R12D,EAX
            mov WORD PTR [RSI+R10*2],R14W
            jge .L_423226
.L_423131:

            movzx R14D,BYTE PTR [RCX+2]
            lea R10D,DWORD PTR [R12+RDX*1]
            movsxd R10,R10D
            shl R14D,4
            cmp EBP,EAX
            mov WORD PTR [RSI+R10*2],R14W
            jge .L_423230
.L_42314e:

            movzx R14D,BYTE PTR [RCX+3]
            lea R10D,DWORD PTR [RBP+RDX*1]
            movsxd R10,R10D
            shl R14D,4
            cmp EBX,EAX
            mov WORD PTR [RSI+R10*2],R14W
            jge .L_423258
.L_42316c:

            movzx R14D,BYTE PTR [RCX+4]
            lea R10D,DWORD PTR [RBX+RDX*1]
            movsxd R10,R10D
            shl R14D,4
            cmp DWORD PTR [RSP+12],EAX
            mov WORD PTR [RSI+R10*2],R14W
            jge .L_423270
.L_42318b:

            mov R14D,DWORD PTR [RSP+12]
            lea R10D,DWORD PTR [R14+RDX*1]
            movzx R14D,BYTE PTR [RCX+5]
            movsxd R10,R10D
            shl R14D,4
            cmp R11D,EAX
            mov WORD PTR [RSI+R10*2],R14W
            jge .L_42323f
.L_4231ae:

            movzx R10D,BYTE PTR [RCX+6]
            lea R8D,DWORD PTR [R11+RDX*1]
            movsxd R8,R8D
            shl R10D,4
            cmp DWORD PTR [RSP+8],EAX
            mov WORD PTR [RSI+R8*2],R10W
            jge .L_4231e3
.L_4231c9:

            mov R14D,DWORD PTR [RSP+8]
            movzx R10D,BYTE PTR [RCX+7]
            lea R8D,DWORD PTR [R14+RDX*1]
            shl R10D,4
            movsxd R8,R8D
            mov WORD PTR [RSI+R8*2],R10W
.L_4231e3:

            add RDI,1
            add EDX,EAX
            add RCX,8
            cmp RDI,8
            je .L_422f8c
.L_4231f7:

            mov ESI,DWORD PTR [RSP+16]
            cmp R9D,EAX
            lea R8D,DWORD PTR [RSI+RDI*1]
            jl .L_4230e8
.L_423208:

            cmp R15D,EAX
            jge .L_423217

            cmp DWORD PTR [R13+4],R8D
            jg .L_42329c
.L_423217:

            cmp R12D,EAX
            jge .L_423226

            cmp DWORD PTR [R13+4],R8D
            jg .L_4232ae
.L_423226:

            cmp EBP,EAX
            jge .L_423230

            cmp DWORD PTR [R13+4],R8D
            jg .L_4232a5
.L_423230:

            cmp EBX,EAX
            jge .L_423258

            cmp DWORD PTR [R13+4],R8D
            jg .L_423288
.L_42323a:

            cmp R11D,EAX
            jl .L_4231e3
.L_42323f:

            cmp DWORD PTR [RSP+8],EAX
            jge .L_4231e3

            cmp DWORD PTR [R13+4],R8D
            jle .L_4231e3

            mov RSI,QWORD PTR [R13+56]
            jmp .L_4231c9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_423258:

            cmp DWORD PTR [RSP+12],EAX
            jge .L_423270

            cmp DWORD PTR [R13+4],R8D
            jle .L_42323a

            mov RSI,QWORD PTR [R13+56]
            jmp .L_42318b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423270:

            cmp R11D,EAX
            jge .L_42323f

            cmp DWORD PTR [R13+4],R8D
            jle .L_4231e3

            mov RSI,QWORD PTR [R13+56]
            jmp .L_4231ae
.L_423288:

            mov RSI,QWORD PTR [R13+56]
            jmp .L_42316c
.L_423291:

            cmp R12D,EAX
            jl .L_423131

            jmp .L_423226
.L_42329c:

            mov RSI,QWORD PTR [R13+56]
            jmp .L_423113
.L_4232a5:

            mov RSI,QWORD PTR [R13+56]
            jmp .L_42314e
.L_4232ae:

            mov RSI,QWORD PTR [R13+56]
            jmp .L_423131
.L_4232b7:

            mov ECX,DWORD PTR [RDI+12]
            mov EDX,DWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_427420]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov EDI,1
            call exit@PLT
.L_4232da:

            mov EDX,DWORD PTR [RSP+20]
            mov ECX,4294967294
            jmp .L_422e2c
.L_4232e8:

            call __stack_chk_fail@PLT
.L_4232ed:

            mov EDI,4294967294
            jmp .L_422da6
.L_4232f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423300:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_42330a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RDI+16]
            cmp EAX,ESI
            jle .L_4233cc

            cmp DWORD PTR [RDI+20],EDX
            mov RBX,RDI
            mov R12D,EDX
            jle .L_4233f0

            imul EAX,EDX
            movdqu XMM0,XMMWORD PTR [RCX]
            mov R13,RSP
            mov EBP,ESI
            lea EDI,DWORD PTR [RAX+RSI*1]
            mov RAX,QWORD PTR [RBX+32]
            mov RSI,R13
            shl EDI,6
            movsxd RDI,EDI
            add RDI,RDI
            add RAX,RDI
            movups XMMWORD PTR [RAX],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+32]
            movups XMMWORD PTR [RAX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+48]
            movups XMMWORD PTR [RAX+48],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+64]
            movups XMMWORD PTR [RAX+64],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+80]
            movups XMMWORD PTR [RAX+80],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+96]
            movups XMMWORD PTR [RAX+96],XMM0
            movdqu XMM0,XMMWORD PTR [RCX+112]
            movups XMMWORD PTR [RAX+112],XMM0
            add RDI,QWORD PTR [RBX+32]
            call .L_43d9c0

            mov RCX,R13
            mov EDX,R12D
            mov ESI,EBP
            mov RDI,RBX
            call .L_422d10

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4233eb

            add RSP,88
.L_4233c5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4233cc:

            lea RCX,QWORD PTR [RIP+.L_427840]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427367]
            mov EDX,125
            call __assert_fail@PLT
.L_4233eb:

            call __stack_chk_fail@PLT
.L_4233f0:

            call .L_4015a8
.L_4233f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423400:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,840
.L_423414:

            mov RAX,QWORD PTR [RBX+8]
            sub RAX,QWORD PTR [RBX]
            mov DWORD PTR [RSP+44],EDX
            mov EDX,DWORD PTR [RCX]
            imul EDX,DWORD PTR [RCX+4]
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+824],RDI
            xor EDI,EDI
            sar RAX,2
            mov QWORD PTR [RSP+24],RCX
            movsxd RDX,EDX
            cmp RDX,RAX
            jne .L_42380a

            mov RBP,QWORD PTR [RSP+24]
            mov R15D,DWORD PTR [RSP+44]
            mov R14D,ESI
            mov EDX,R15D
            mov RDI,RBP
            call .L_421ef0

            mov EDX,DWORD PTR [RBP+20]
            test EDX,EDX
            jle .L_4237a2

            mov EAX,R15D
            lea ESI,DWORD PTR [R15*8]
            mov DWORD PTR [RSP+52],R15D
            imul EAX,R14D
            lea R15,QWORD PTR [RSP+240]
            lea RDI,QWORD PTR [RSP+752]
            mov DWORD PTR [RSP+96],ESI
            lea ESI,DWORD PTR [R14*8]
            mov DWORD PTR [RSP+40],0
            mov R13,R15
            mov QWORD PTR [RSP+56],RDI
            mov R15,RBX
            mov DWORD PTR [RSP+88],EAX
            mov EAX,DWORD PTR [RBP+16]
            mov DWORD PTR [RSP+92],ESI
            sub ESI,R14D
            mov DWORD PTR [RSP+100],ESI
.L_4234c5:

            test EAX,EAX
            jle .L_423789

            mov EAX,DWORD PTR [RSP+52]
            sub EAX,DWORD PTR [RSP+44]
            mov DWORD PTR [RSP+68],EAX
            mov RAX,QWORD PTR [RSP+24]
            mov EBP,DWORD PTR [RAX]
            test EBP,EBP
            jle .L_4237c7

            mov R10D,DWORD PTR [RAX+4]
            cmp R10D,DWORD PTR [RSP+68]
            jle .L_423754

            pxor XMM2,XMM2
            lea RAX,QWORD PTR [RSP+112]
            mov DWORD PTR [RSP+36],R14D
            mov DWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+72],RAX
            mov EAX,DWORD PTR [RSP+44]
            cvtsi2ss XMM2,DWORD PTR [RSP+88]
            add EAX,EAX
            mov DWORD PTR [RSP+64],EAX
            lea RAX,QWORD PTR [RSP+752]
            mov QWORD PTR [RSP+80],RAX
            movss DWORD PTR [RSP+32],XMM2
.L_423535:

            mov R12,R13
            mov QWORD PTR [RSP+104],R13
            mov R11D,DWORD PTR [RSP+52]
            mov R13D,DWORD PTR [RSP+44]
            lea ECX,DWORD PTR [RBP-1]
            sub R10D,1
.L_42354e:

            mov EAX,R11D
            mov R8D,DWORD PTR [RSP+36]
            sub EAX,R13D
            mov DWORD PTR [RSP+20],EAX
            lea RAX,QWORD PTR [R12+64]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423570:

            test R13D,R13D
            jle .L_423778

            mov R9D,DWORD PTR [RSP+20]
            pxor XMM0,XMM0
            mov EBX,R8D
            sub EBX,R14D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423590:

            test R14D,R14D
            jle .L_4235c8

            cmp R10D,R9D
            mov ESI,R9D
            mov RDI,QWORD PTR [R15]
            cmovle ESI,R10D
            mov EDX,EBX
            imul ESI,EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4235b0:

            cmp EDX,ECX
            mov EAX,ECX
            cmovle EAX,EDX
            add EDX,1
            add EAX,ESI
            cmp R8D,EDX
            cdqe 
            addss XMM0,DWORD PTR [RDI+RAX*4]
            jne .L_4235b0
.L_4235c8:

            add R9D,1
            cmp R11D,R9D
            jne .L_423590
.L_4235d1:

            divss XMM0,DWORD PTR [RSP+32]
            add R12,8
            add R8D,R14D
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [R12-8],XMM0
            cmp QWORD PTR [RSP+8],R12
            jne .L_423570

            mov R11D,DWORD PTR [RSP+20]
            mov RBX,QWORD PTR [RSP+8]
            add R11D,DWORD PTR [RSP+64]
            cmp QWORD PTR [RSP+56],RBX
            jne .L_42354e

            mov R13,QWORD PTR [RSP+104]
            xor EBX,EBX
            mov RDI,R13
            call .L_43bee0

            movsd XMM0,QWORD PTR [RSP+240]
            mov RBP,QWORD PTR [RSP+72]
            subsd XMM0,QWORD PTR [RIP+.L_428de8]
            movsd QWORD PTR [RSP+240],XMM0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_423640:

            movsd XMM0,QWORD PTR [R13+RBX*8]
            call round@PLT

            cvttsd2si EAX,XMM0
            mov WORD PTR [RBP+RBX*2],AX
            add RBX,1
            cmp RBX,64
            jne .L_423640

            mov RAX,QWORD PTR [RSP+24]
            mov EAX,DWORD PTR [RAX+16]
            cmp EAX,DWORD PTR [RSP+48]
            jle .L_4237eb

            mov RBX,QWORD PTR [RSP+24]
            mov EDI,DWORD PTR [RSP+40]
            cmp DWORD PTR [RBX+20],EDI
            jle .L_4237e6

            mov EBP,DWORD PTR [RSP+48]
            mov R12D,EDI
            mov RBX,QWORD PTR [RSP+72]
            imul EAX,EDI
            mov RDI,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+80]
            movdqa XMM0,XMMWORD PTR [RBX]
            add EAX,EBP
            mov RDX,QWORD PTR [RDI+32]
            shl EAX,6
            cdqe 
            add RAX,RAX
            add RDX,RAX
            movups XMMWORD PTR [RDX],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+16]
            movups XMMWORD PTR [RDX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+32]
            movups XMMWORD PTR [RDX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+48]
            movups XMMWORD PTR [RDX+48],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+64]
            movups XMMWORD PTR [RDX+64],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+80]
            movups XMMWORD PTR [RDX+80],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+96]
            movups XMMWORD PTR [RDX+96],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+112]
            mov RBX,RDI
            movups XMMWORD PTR [RDX+112],XMM0
            add RAX,QWORD PTR [RDI+32]
            mov RDI,RAX
            call .L_43d9c0

            mov RCX,QWORD PTR [RSP+80]
            mov ESI,EBP
            mov EDX,R12D
            mov RDI,RBX
            add EBP,1
            call .L_422d10

            mov EAX,DWORD PTR [RBX+16]
            mov DWORD PTR [RSP+48],EBP
            cmp EBP,EAX
            jge .L_423781

            mov RDI,QWORD PTR [RSP+24]
            mov EAX,DWORD PTR [RSP+100]
            mov EBX,DWORD PTR [RSP+36]
            mov EBP,DWORD PTR [RDI]
            add EAX,EBX
            cmp EAX,EBP
            jge .L_4237c7

            mov EAX,DWORD PTR [RSP+92]
            mov R10D,DWORD PTR [RDI+4]
            add EBX,EAX
            cmp R10D,DWORD PTR [RSP+68]
            mov DWORD PTR [RSP+36],EBX
            jg .L_423535
.L_423754:

            lea RCX,QWORD PTR [RIP+.L_4276e0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4273e4]
            mov EDX,276
            call __assert_fail@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_423778:

            pxor XMM0,XMM0
            jmp .L_4235d1
.L_423781:

            mov RBX,QWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RBX+20]
.L_423789:

            add DWORD PTR [RSP+40],1
            mov ESI,DWORD PTR [RSP+96]
            mov EBX,DWORD PTR [RSP+40]
            add DWORD PTR [RSP+52],ESI
            cmp EBX,EDX
            jl .L_4234c5
.L_4237a2:

            mov RAX,QWORD PTR [RSP+824]
            xor RAX,QWORD PTR FS:[40]
            jne .L_423829

            add RSP,840
.L_4237bc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4237c7:

            lea RCX,QWORD PTR [RIP+.L_4276e0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4273d1]
            mov EDX,275
            call __assert_fail@PLT
.L_4237e6:

            call .L_4015a8
.L_4237eb:

            lea RCX,QWORD PTR [RIP+.L_427840]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427367]
            mov EDX,125
            call __assert_fail@PLT
.L_42380a:

            lea RCX,QWORD PTR [RIP+.L_4276e0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427460]
            mov EDX,268
            call __assert_fail@PLT
.L_423829:

            call __stack_chk_fail@PLT
.L_42382e:

            nop
            nop
.L_423830:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R15,R8
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,248
.L_42384a:

            mov QWORD PTR [RSP+16],RSI
            mov ESI,EDX
            mov EDX,ECX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+232],RAX
            xor EAX,EAX
            call .L_421ef0

            mov EAX,DWORD PTR [R14+16]
            mov ECX,DWORD PTR [RBX+24]
            cmp EAX,ECX
            jg .L_423c83

            mov RSI,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [R14+20]
            cmp EDX,DWORD PTR [RSI+28]
            jg .L_423ca2

            shl ECX,6
            test EDX,EDX
            movsxd R13,ECX
            jle .L_423b70

            lea RCX,QWORD PTR [R13+R13*1]
            lea R12,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+8],0
            xor EBP,EBP
            mov QWORD PTR [RSP+24],RCX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4238c0:

            mov RCX,QWORD PTR [RSP+16]
            mov R13,QWORD PTR [RSP+8]
            add R13,QWORD PTR [RCX+40]
            test EAX,EAX
            jle .L_423b5b

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4238e0:

            movdqu XMM2,XMMWORD PTR [R15+16]
            cmp EBP,EDX
            movdqu XMM0,XMMWORD PTR [R15]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM2
            movdqu XMM3,XMMWORD PTR [R13]
            punpckhwd XMM1,XMM2
            movdqu XMM4,XMMWORD PTR [R13+16]
            movdqa XMM2,XMM0
            punpcklwd XMM0,XMM1
            movdqu XMM5,XMMWORD PTR [R13+32]
            punpckhwd XMM2,XMM1
            movdqu XMM6,XMMWORD PTR [R13+48]
            punpcklwd XMM0,XMM2
            movdqu XMM2,XMMWORD PTR [R15+48]
            pmullw XMM0,XMM3
            movaps XMMWORD PTR [RSP+32],XMM0
            movdqu XMM0,XMMWORD PTR [R15+32]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM2
            movdqu XMM7,XMMWORD PTR [R13+64]
            punpckhwd XMM1,XMM2
            movdqu XMM3,XMMWORD PTR [R13+80]
            movdqa XMM2,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM2,XMM1
            punpcklwd XMM0,XMM2
            movdqu XMM2,XMMWORD PTR [R15+80]
            pmullw XMM0,XMM4
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [R15+64]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM2
            movdqu XMM4,XMMWORD PTR [R13+96]
            punpckhwd XMM1,XMM2
            movdqa XMM2,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM2,XMM1
            punpcklwd XMM0,XMM2
            movdqu XMM2,XMMWORD PTR [R15+112]
            pmullw XMM0,XMM5
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [R15+96]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM2
            movdqu XMM5,XMMWORD PTR [R13+112]
            punpckhwd XMM1,XMM2
            movdqa XMM2,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM2,XMM1
            punpcklwd XMM0,XMM2
            movdqu XMM2,XMMWORD PTR [R15+144]
            pmullw XMM0,XMM6
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [R15+128]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM2
            punpckhwd XMM1,XMM2
            movdqa XMM2,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM2,XMM1
            punpcklwd XMM0,XMM2
            movdqu XMM2,XMMWORD PTR [R15+176]
            pmullw XMM0,XMM7
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [R15+160]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM2
            punpckhwd XMM1,XMM2
            movdqa XMM2,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM2,XMM1
            punpcklwd XMM0,XMM2
            movdqu XMM2,XMMWORD PTR [R15+208]
            pmullw XMM0,XMM3
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [R15+192]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM2
            punpckhwd XMM1,XMM2
            movdqa XMM2,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM2,XMM1
            punpcklwd XMM0,XMM2
            movdqu XMM2,XMMWORD PTR [R15+240]
            pmullw XMM0,XMM4
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [R15+224]
            movdqa XMM1,XMM0
            punpcklwd XMM0,XMM2
            punpckhwd XMM1,XMM2
            movdqa XMM2,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM2,XMM1
            punpcklwd XMM0,XMM2
            pmullw XMM0,XMM5
            movaps XMMWORD PTR [RSP+144],XMM0
            jge .L_423cc1

            imul EAX,EBP
            mov RSI,R12
            sub R13,-128
            mov RDX,QWORD PTR [R14+32]
            add EAX,EBX
            movdqa XMM0,XMMWORD PTR [RSP+32]
            shl EAX,6
            cdqe 
            add RAX,RAX
            add RDX,RAX
            movups XMMWORD PTR [RDX],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+48]
            movups XMMWORD PTR [RDX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+64]
            movups XMMWORD PTR [RDX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+80]
            movups XMMWORD PTR [RDX+48],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+96]
            movups XMMWORD PTR [RDX+64],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RDX+80],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RDX+96],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RDX+112],XMM0
            add RAX,QWORD PTR [R14+32]
            mov RDI,RAX
            call .L_43d9c0

            mov EDX,EBP
            mov ESI,EBX
            mov RCX,R12
            mov RDI,R14
            add EBX,1
            call .L_422d10

            mov EAX,DWORD PTR [R14+16]
            mov EDX,DWORD PTR [R14+20]
            cmp EAX,EBX
            jg .L_4238e0
.L_423b5b:

            add EBP,1
            mov RSI,QWORD PTR [RSP+24]
            add QWORD PTR [RSP+8],RSI
            cmp EBP,EDX
            jl .L_4238c0
.L_423b70:

            movdqu XMM0,XMMWORD PTR [R15]
            movups XMMWORD PTR [R14+80],XMM0
            movdqu XMM0,XMMWORD PTR [R15+16]
            movups XMMWORD PTR [R14+96],XMM0
            movdqu XMM0,XMMWORD PTR [R15+32]
            movups XMMWORD PTR [R14+112],XMM0
            movdqu XMM0,XMMWORD PTR [R15+48]
            movups XMMWORD PTR [R14+128],XMM0
            movdqu XMM0,XMMWORD PTR [R15+64]
            movups XMMWORD PTR [R14+144],XMM0
            movdqu XMM0,XMMWORD PTR [R15+80]
            movups XMMWORD PTR [R14+160],XMM0
            movdqu XMM0,XMMWORD PTR [R15+96]
            movups XMMWORD PTR [R14+176],XMM0
            movdqu XMM0,XMMWORD PTR [R15+112]
            movups XMMWORD PTR [R14+192],XMM0
            movdqu XMM0,XMMWORD PTR [R15+128]
            movups XMMWORD PTR [R14+208],XMM0
            movdqu XMM0,XMMWORD PTR [R15+144]
            movups XMMWORD PTR [R14+224],XMM0
            movdqu XMM0,XMMWORD PTR [R15+160]
            movups XMMWORD PTR [R14+240],XMM0
            movdqu XMM0,XMMWORD PTR [R15+176]
            movups XMMWORD PTR [R14+256],XMM0
            movdqu XMM0,XMMWORD PTR [R15+192]
            movups XMMWORD PTR [R14+272],XMM0
            movdqu XMM0,XMMWORD PTR [R15+208]
            movups XMMWORD PTR [R14+288],XMM0
            movdqu XMM0,XMMWORD PTR [R15+224]
            movups XMMWORD PTR [R14+304],XMM0
            movdqu XMM0,XMMWORD PTR [R15+240]
            movups XMMWORD PTR [R14+320],XMM0
            mov RAX,QWORD PTR [RSP+232]
            xor RAX,QWORD PTR FS:[40]
            jne .L_423cc6

            add RSP,248
.L_423c78:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_423c83:

            lea RCX,QWORD PTR [RIP+.L_4277c0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427490]
            mov EDX,215
            call __assert_fail@PLT
.L_423ca2:

            lea RCX,QWORD PTR [RIP+.L_4277c0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4274c0]
            mov EDX,216
            call __assert_fail@PLT
.L_423cc1:

            call .L_4015a8
.L_423cc6:

            call __stack_chk_fail@PLT
.L_423ccb:

            nop
            nop
            nop
            nop
            nop
.L_423cd0:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            sub RSP,216
.L_423ce7:

            mov EDX,DWORD PTR [RDI+20]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            test EDX,EDX
            jle .L_423e5b

            mov EAX,DWORD PTR [RDI+16]
            lea R13,QWORD PTR [RSP+128]
            xor EBP,EBP
            mov RBX,RSP
            nop
            nop
            nop
.L_423d18:

            test EAX,EAX
            jle .L_423e50

            cmp EBP,EDX
            jge .L_423f7e

            xor R14D,R14D
            jmp .L_423d4d
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423d30:

            mov EAX,DWORD PTR [R15+16]
            add R14D,1
            mov EDX,DWORD PTR [R15+20]
            cmp EAX,R14D
            jle .L_423e50

            cmp EBP,EDX
            jge .L_423f7e
.L_423d4d:

            imul EAX,EBP
            mov RDX,QWORD PTR [R15+32]
            mov RSI,R12
            mov RDI,RBX
            add EAX,R14D
            shl EAX,6
            cdqe 
            lea RAX,QWORD PTR [RDX+RAX*2]
            movdqu XMM0,XMMWORD PTR [RAX]
            movaps XMMWORD PTR [RBX],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+16]
            movaps XMMWORD PTR [RBX+16],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+32]
            movaps XMMWORD PTR [RBX+32],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+48]
            movaps XMMWORD PTR [RBX+48],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+64]
            movaps XMMWORD PTR [RBX+64],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+80]
            movaps XMMWORD PTR [RBX+80],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+96]
            movaps XMMWORD PTR [RBX+96],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+112]
            movaps XMMWORD PTR [RBX+112],XMM0
            call .L_42dd70

            test AL,AL
            je .L_423d30

            mov EDI,DWORD PTR [R15+16]
            cmp EDI,R14D
            jle .L_423f88

            cmp EBP,DWORD PTR [R15+20]
            jge .L_423f83

            imul EDI,EBP
            mov RAX,QWORD PTR [R15+32]
            mov RSI,R13
            movdqa XMM0,XMMWORD PTR [RBX]
            add EDI,R14D
            shl EDI,6
            movsxd RDI,EDI
            add RDI,RDI
            add RAX,RDI
            movups XMMWORD PTR [RAX],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+16]
            movups XMMWORD PTR [RAX+16],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+32]
            movups XMMWORD PTR [RAX+32],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+48]
            movups XMMWORD PTR [RAX+48],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+64]
            movups XMMWORD PTR [RAX+64],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+80]
            movups XMMWORD PTR [RAX+80],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+96]
            movups XMMWORD PTR [RAX+96],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+112]
            movups XMMWORD PTR [RAX+112],XMM0
            add RDI,QWORD PTR [R15+32]
            call .L_43d9c0

            mov RCX,R13
            mov EDX,EBP
            mov ESI,R14D
            mov RDI,R15
            call .L_422d10

            jmp .L_423d30
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_423e50:

            add EBP,1
            cmp EBP,EDX
            jl .L_423d18
.L_423e5b:

            movdqu XMM0,XMMWORD PTR [R12]
            movups XMMWORD PTR [R15+80],XMM0
            movdqu XMM0,XMMWORD PTR [R12+16]
            movups XMMWORD PTR [R15+96],XMM0
            movdqu XMM0,XMMWORD PTR [R12+32]
            movups XMMWORD PTR [R15+112],XMM0
            movdqu XMM0,XMMWORD PTR [R12+48]
            movups XMMWORD PTR [R15+128],XMM0
            movdqu XMM0,XMMWORD PTR [R12+64]
            movups XMMWORD PTR [R15+144],XMM0
            movdqu XMM0,XMMWORD PTR [R12+80]
            movups XMMWORD PTR [R15+160],XMM0
            movdqu XMM0,XMMWORD PTR [R12+96]
            movups XMMWORD PTR [R15+176],XMM0
            movdqu XMM0,XMMWORD PTR [R12+112]
            movups XMMWORD PTR [R15+192],XMM0
            movdqu XMM0,XMMWORD PTR [R12+128]
            movups XMMWORD PTR [R15+208],XMM0
            movdqu XMM0,XMMWORD PTR [R12+144]
            movups XMMWORD PTR [R15+224],XMM0
            movdqu XMM0,XMMWORD PTR [R12+160]
            movups XMMWORD PTR [R15+240],XMM0
            movdqu XMM0,XMMWORD PTR [R12+176]
            movups XMMWORD PTR [R15+256],XMM0
            movdqu XMM0,XMMWORD PTR [R12+192]
            movups XMMWORD PTR [R15+272],XMM0
            movdqu XMM0,XMMWORD PTR [R12+208]
            movups XMMWORD PTR [R15+288],XMM0
            movdqu XMM0,XMMWORD PTR [R12+224]
            movups XMMWORD PTR [R15+304],XMM0
            movdqu XMM0,XMMWORD PTR [R12+240]
            movups XMMWORD PTR [R15+320],XMM0
            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            jne .L_423fa7

            add RSP,216
.L_423f73:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_423f7e:

            call .L_401584
.L_423f83:

            call .L_4015a8
.L_423f88:

            lea RCX,QWORD PTR [RIP+.L_427840]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427367]
            mov EDX,125
            call __assert_fail@PLT
.L_423fa7:

            call __stack_chk_fail@PLT
.L_423fac:

            nop
            nop
            nop
            nop
.L_423fb0:

            push R15
            push R14
            lea ECX,DWORD PTR [RDX+14]
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,376
.L_423fc7:

            mov DWORD PTR [RDI],ESI
            mov DWORD PTR [RDI+4],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+360],RAX
            xor EAX,EAX
            movabs RAX,4294967297
            mov DWORD PTR [RSP+16],ESI
            mov DWORD PTR [RSP+20],EDX
            mov QWORD PTR [RSP+24],RAX
            lea EAX,DWORD PTR [RSI+14]
            add ESI,7
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+56],0
            cmovns EAX,ESI
            mov QWORD PTR [RSP+64],0
            mov QWORD PTR [RSP+72],0
            sar EAX,3
            add EDX,7
            mov QWORD PTR [RSP+80],0
            cmovs EDX,ECX
            mov DWORD PTR [RSP+32],EAX
            mov QWORD PTR [RSP+88],0
            sar EDX,3
            imul EAX,EDX
            mov DWORD PTR [RSP+36],EDX
            mov DWORD PTR [RSP+40],EAX
            shl EAX,6
            movsxd RBX,EAX
            test RBX,RBX
            je .L_4246a0

            test EAX,EAX
            js .L_424715

            add RBX,RBX
            mov RDI,RBX
.L_42406d:

            call _Znwm@PLT

            lea R12,QWORD PTR [RAX+RBX*1]
            xor ESI,ESI
            mov RDX,RBX
            mov RDI,RAX
            mov R13,QWORD PTR [RSP+48]
            call memset@PLT

            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+64],R12
            movq XMM0,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+8],R12
            test R13,R13
            movhps XMM0,QWORD PTR [RSP+8]
            movaps XMMWORD PTR [RSP+48],XMM0
            je .L_4240b4

            mov RDI,R13
            call _ZdlPv@PLT
.L_4240b4:

            mov EAX,DWORD PTR [RSP+16]
            imul EAX,DWORD PTR [RSP+20]
            movsxd RBX,EAX
            test RBX,RBX
            je .L_4246b0

            test EAX,EAX
            js .L_4246e2

            lea R12,QWORD PTR [RBX+RBX*1]
            mov RDI,R12
            call _Znwm@PLT
.L_4240dd:

            mov RDX,RAX
            lea RDI,QWORD PTR [RBX-1]
            mov ESI,9
            shr RDX,1
            lea R8,QWORD PTR [RAX+R12*1]
            neg RDX
            mov R9,RDI
            and EDX,7
            lea RCX,QWORD PTR [RDX+7]
            cmp RCX,9
            cmovb RCX,RSI
            cmp RCX,RDI
            ja .L_424690

            test RDX,RDX
            je .L_424680

            mov ECX,2048
            cmp RDX,1
            lea RDI,QWORD PTR [RAX+2]
            mov WORD PTR [RAX],CX
            je .L_4241bd

            mov R15D,2048
            cmp RDX,2
            lea R9,QWORD PTR [RBX-2]
            mov WORD PTR [RAX+2],R15W
            lea RDI,QWORD PTR [RAX+4]
            je .L_4241bd

            mov R14D,2048
            cmp RDX,3
            lea R9,QWORD PTR [RBX-3]
            mov WORD PTR [RAX+4],R14W
            lea RDI,QWORD PTR [RAX+6]
            je .L_4241bd

            mov R13D,2048
            cmp RDX,4
            lea R9,QWORD PTR [RBX-4]
            mov WORD PTR [RAX+6],R13W
            lea RDI,QWORD PTR [RAX+8]
            je .L_4241bd

            mov R12D,2048
            cmp RDX,5
            lea R9,QWORD PTR [RBX-5]
            mov WORD PTR [RAX+8],R12W
            lea RDI,QWORD PTR [RAX+10]
            je .L_4241bd

            mov R11D,2048
            cmp RDX,6
            lea R9,QWORD PTR [RBX-6]
            mov WORD PTR [RAX+10],R11W
            lea RDI,QWORD PTR [RAX+12]
            je .L_4241bd

            mov R10D,2048
            lea R9,QWORD PTR [RBX-7]
            lea RDI,QWORD PTR [RAX+14]
            mov WORD PTR [RAX+12],R10W
.L_4241bd:

            sub RBX,RDX
            movdqa XMM0,XMMWORD PTR [RIP+.L_428dc0]
            lea RSI,QWORD PTR [RBX-8]
            lea RCX,QWORD PTR [RAX+RDX*2]
            mov R10,RBX
            xor EDX,EDX
            shr RSI,3
            add RSI,1
            nop
            nop
            nop
.L_4241e0:

            add RDX,1
            add RCX,16
            movaps XMMWORD PTR [RCX-16],XMM0
            cmp RSI,RDX
            ja .L_4241e0

            lea RDX,QWORD PTR [RSI*8]
            mov RBX,R9
            shl RSI,4
            add RSI,RDI
            sub RBX,RDX
            cmp RDX,R10
            je .L_424308

            lea RDI,QWORD PTR [RBX-1]
.L_424213:

            mov R9D,2048
            test RDI,RDI
            mov WORD PTR [RSI],R9W
            je .L_424308

            mov EDI,2048
            cmp RBX,2
            mov WORD PTR [RSI+2],DI
            je .L_424308

            mov ECX,2048
            cmp RBX,3
            mov WORD PTR [RSI+4],CX
            je .L_424308

            mov EDX,2048
            cmp RBX,4
            mov WORD PTR [RSI+6],DX
            je .L_424308

            mov R15D,2048
            cmp RBX,5
            mov WORD PTR [RSI+8],R15W
            je .L_424308

            mov R14D,2048
            cmp RBX,6
            mov WORD PTR [RSI+10],R14W
            je .L_424308

            mov R13D,2048
            cmp RBX,7
            mov WORD PTR [RSI+12],R13W
            je .L_424308

            mov R12D,2048
            cmp RBX,8
            mov WORD PTR [RSI+14],R12W
            je .L_424308

            mov R11D,2048
            cmp RBX,9
            mov WORD PTR [RSI+16],R11W
            je .L_424308

            mov R10D,2048
            cmp RBX,10
            mov WORD PTR [RSI+18],R10W
            je .L_424308

            mov R9D,2048
            cmp RBX,11
            mov WORD PTR [RSI+20],R9W
            je .L_424308

            mov EDI,2048
            cmp RBX,12
            mov WORD PTR [RSI+22],DI
            je .L_424308

            mov ECX,2048
            cmp RBX,13
            mov WORD PTR [RSI+24],CX
            je .L_424308

            mov EDX,2048
            mov WORD PTR [RSI+26],DX
            nop
            nop
            nop
.L_424308:

            mov RDI,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+80],R8
            mov QWORD PTR [RSP+72],RAX
            mov QWORD PTR [RSP+88],R8
            test RDI,RDI
            je .L_424326

            call _ZdlPv@PLT
.L_424326:

            movdqa XMM0,XMMWORD PTR [RIP+.L_428dd0]
            mov EDI,1008
            mov QWORD PTR [RBP+8],0
            mov QWORD PTR [RBP+16],0
            mov QWORD PTR [RBP+24],0
            movaps XMMWORD PTR [RSP+96],XMM0
            movaps XMMWORD PTR [RSP+112],XMM0
            movaps XMMWORD PTR [RSP+128],XMM0
            movaps XMMWORD PTR [RSP+144],XMM0
            movaps XMMWORD PTR [RSP+160],XMM0
            movaps XMMWORD PTR [RSP+176],XMM0
            movaps XMMWORD PTR [RSP+192],XMM0
            movaps XMMWORD PTR [RSP+208],XMM0
            movaps XMMWORD PTR [RSP+224],XMM0
            movaps XMMWORD PTR [RSP+240],XMM0
            movaps XMMWORD PTR [RSP+256],XMM0
            movaps XMMWORD PTR [RSP+272],XMM0
            movaps XMMWORD PTR [RSP+288],XMM0
            movaps XMMWORD PTR [RSP+304],XMM0
            movaps XMMWORD PTR [RSP+320],XMM0
            movaps XMMWORD PTR [RSP+336],XMM0
.L_4243c5:

            call _Znwm@PLT
.L_4243ca:

            lea R12,QWORD PTR [RAX+1008]
            mov R13,RAX
            mov RBX,RAX
            mov QWORD PTR [RBP+8],RAX
            mov QWORD PTR [RBP+16],RAX
            mov QWORD PTR [RBP+24],R12
            nop
            nop
            nop
            nop
            nop
.L_4243e8:

            test RBX,RBX
            je .L_424602

            mov EAX,DWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+48]
            mov QWORD PTR [RBX+32],0
            mov QWORD PTR [RBX+40],0
            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX],EAX
            mov EAX,DWORD PTR [RSP+20]
            mov DWORD PTR [RBX+4],EAX
            mov EAX,DWORD PTR [RSP+24]
            mov DWORD PTR [RBX+8],EAX
            mov EAX,DWORD PTR [RSP+28]
            mov DWORD PTR [RBX+12],EAX
            mov EAX,DWORD PTR [RSP+32]
            mov DWORD PTR [RBX+16],EAX
            mov EAX,DWORD PTR [RSP+36]
            mov DWORD PTR [RBX+20],EAX
            mov EAX,DWORD PTR [RSP+40]
            mov DWORD PTR [RBX+24],EAX
            mov RAX,QWORD PTR [RSP+56]
            mov R14,RAX
            sub R14,RSI
            je .L_424660

            js .L_42471a

            mov RDI,R14
.L_424458:

            call _Znwm@PLT
.L_42445d:

            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+48]
            mov R15,RAX
            sub R15,RSI
.L_424470:

            add R14,RCX
            cmp RAX,RSI
            mov QWORD PTR [RBX+32],RCX
            mov QWORD PTR [RBX+40],RCX
            mov QWORD PTR [RBX+48],R14
            je .L_424492

            mov RDI,RCX
            mov RDX,R15
            call memmove@PLT

            mov RCX,RAX
.L_424492:

            mov RAX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            add RCX,R15
            mov QWORD PTR [RBX+40],RCX
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+64],0
            mov QWORD PTR [RBX+72],0
            mov R14,RAX
            sub R14,RSI
            je .L_424670

            js .L_4246ba

            mov RDI,R14
.L_4244d0:

            call _Znwm@PLT

            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+72]
            mov R15,RAX
            sub R15,RSI
.L_4244e8:

            add R14,RCX
            cmp RAX,RSI
            mov QWORD PTR [RBX+56],RCX
            mov QWORD PTR [RBX+64],RCX
            mov QWORD PTR [RBX+72],R14
            je .L_42450a

            mov RDI,RCX
            mov RDX,R15
            call memmove@PLT

            mov RCX,RAX
.L_42450a:

            movdqa XMM0,XMMWORD PTR [RSP+96]
            add RCX,R15
            mov QWORD PTR [RBX+64],RCX
            movups XMMWORD PTR [RBX+80],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+112]
            movups XMMWORD PTR [RBX+96],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+128]
            movups XMMWORD PTR [RBX+112],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+144]
            movups XMMWORD PTR [RBX+128],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+160]
            movups XMMWORD PTR [RBX+144],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+176]
            movups XMMWORD PTR [RBX+160],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+192]
            movups XMMWORD PTR [RBX+176],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+208]
            movups XMMWORD PTR [RBX+192],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+224]
            movups XMMWORD PTR [RBX+208],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+240]
            movups XMMWORD PTR [RBX+224],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+256]
            movups XMMWORD PTR [RBX+240],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+272]
            movups XMMWORD PTR [RBX+256],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+288]
            movups XMMWORD PTR [RBX+272],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+304]
            movups XMMWORD PTR [RBX+288],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+320]
            movups XMMWORD PTR [RBX+304],XMM0
            movdqa XMM0,XMMWORD PTR [RSP+336]
            movups XMMWORD PTR [RBX+320],XMM0
.L_424602:

            add RBX,336
            cmp R12,RBX
            jne .L_4243e8

            mov RDI,QWORD PTR [RSP+72]
            mov QWORD PTR [RBP+16],R12
            test RDI,RDI
            je .L_424625

            call _ZdlPv@PLT
.L_424625:

            mov RDI,QWORD PTR [RSP+48]
            test RDI,RDI
            je .L_424634

            call _ZdlPv@PLT
.L_424634:

            mov RAX,QWORD PTR [RSP+360]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4246bf

            add RSP,376
.L_42464e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424660:

            xor R15D,R15D
            xor R14D,R14D
            xor ECX,ECX
            jmp .L_424470
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424670:

            xor R15D,R15D
            xor R14D,R14D
            xor ECX,ECX
            jmp .L_4244e8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_424680:

            mov RDI,RAX
            mov R9,RBX
            jmp .L_4241bd
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_424690:

            mov RSI,RAX
            jmp .L_424213
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4246a0:

            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP+48],XMM0
            jmp .L_4240b4
          .byte 0x66
          .byte 0x90
.L_4246b0:

            xor EAX,EAX
            xor R8D,R8D
            jmp .L_424308
.L_4246ba:

            call _ZSt17__throw_bad_allocv@PLT
.L_4246bf:

            call __stack_chk_fail@PLT
.L_4246c4:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_4246cc:

            cmp R13,RBX
            je .L_424710

            mov RDI,R13
            add R13,336
            call .L_427630

            jmp .L_4246cc
.L_4246e2:

            call _ZSt17__throw_bad_allocv@PLT
.L_4246e7:

            mov RDI,QWORD PTR [RSP+72]
            mov RBX,RAX
            test RDI,RDI
            je .L_4246f9

            call _ZdlPv@PLT
.L_4246f9:

            mov RDI,QWORD PTR [RSP+48]
            test RDI,RDI
            je .L_424708

            call _ZdlPv@PLT
.L_424708:

            mov RDI,RBX
.L_42470b:

            call _Unwind_Resume@PLT
.L_424710:

            call __cxa_rethrow@PLT
.L_424715:

            call _ZSt17__throw_bad_allocv@PLT
.L_42471a:

            call _ZSt17__throw_bad_allocv@PLT
.L_42471f:

            mov RDI,QWORD PTR [RBX+32]
            mov R12,RAX
            test RDI,RDI
            je .L_424730

            call _ZdlPv@PLT
.L_424730:

            mov RAX,R12
            jmp .L_4246c4
.L_424735:

            mov RBX,RAX
.L_424738:

            lea RDI,QWORD PTR [RSP+16]
            call .L_427630

            jmp .L_424708
.L_424744:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBP+8]
            test RDI,RDI
            je .L_424738

            call _ZdlPv@PLT

            jmp .L_424738
.L_42475c:

            nop
            nop
            nop
            nop
.L_424760:

            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
.L_42476b:

            mov RSI,QWORD PTR [RSI+128]
            cmp QWORD PTR [R12+136],RSI
            je .L_424873

            mov R10D,DWORD PTR [R12+12]
            mov R9D,DWORD PTR [RSI+4]
            mov RBX,RDI
            mov EAX,R10D
            cdq 
            idiv R9D
            test EDX,EDX
            jne .L_42487c

            mov ECX,DWORD PTR [R12+16]
            mov R8D,DWORD PTR [RSI+8]
            mov EAX,ECX
            cdq 
            idiv R8D
            test EDX,EDX
            jne .L_4248ba

            xor R14D,R14D
            xor R13D,R13D
            movabs RBP,-3689348814741910323
            jmp .L_424808
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4247c8:

            mov RAX,R13
            mov R10D,DWORD PTR [R12+12]
            shl RAX,6
            add RSI,RAX
            mov R9D,DWORD PTR [RSI+4]
            mov EAX,R10D
            cdq 
            idiv R9D
            test EDX,EDX
            jne .L_42487c

            mov ECX,DWORD PTR [R12+16]
            mov R8D,DWORD PTR [RSI+8]
            add R14,336
            mov EAX,ECX
            cdq 
            idiv R8D
            test EDX,EDX
            jne .L_4248ba
.L_424808:

            mov EAX,R10D
            mov R11,QWORD PTR [R12+80]
            cdq 
            idiv R9D
            mov R9,QWORD PTR [RSI+16]
            mov R10D,EAX
            mov EAX,ECX
            cdq 
            idiv R8D
            mov R8,QWORD PTR [R12+88]
            sub R8,R11
            sar R8,3
            imul R8,RBP
            mov ECX,EAX
            cmp R9,R8
            jae .L_42489b

            lea RAX,QWORD PTR [R9+R9*4]
            mov RDI,QWORD PTR [RBX+8]
            mov EDX,R10D
            add R13,1
            mov R8,QWORD PTR [R11+RAX*8]
            add RDI,R14
            call .L_423830

            mov RSI,QWORD PTR [R12+128]
            mov RAX,QWORD PTR [R12+136]
            sub RAX,RSI
            sar RAX,6
            cmp R13,RAX
            jb .L_4247c8
.L_424873:

            pop RBX
.L_424874:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_42487c:

            lea RCX,QWORD PTR [RIP+.L_427760]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4274f0]
            mov EDX,253
            call __assert_fail@PLT
.L_42489b:

            lea RCX,QWORD PTR [RIP+.L_427760]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427550]
            mov EDX,257
            call __assert_fail@PLT
.L_4248ba:

            lea RCX,QWORD PTR [RIP+.L_427760]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427520]
            mov EDX,254
            call __assert_fail@PLT
.L_4248d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4248e0:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
            mov RDI,QWORD PTR [RDI+8]
            call .L_423cd0

            mov RAX,QWORD PTR [RBP+8]
            lea RSI,QWORD PTR [RBX+256]
            lea RDI,QWORD PTR [RAX+336]
            call .L_423cd0

            mov RDI,QWORD PTR [RBP+8]
            add RSP,8
            lea RSI,QWORD PTR [RBX+512]
            pop RBX
            pop RBP
            add RDI,672
            jmp .L_423cd0
.L_424929:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424930:

            mov EAX,R8D
            push R15
            push R14
            imul EAX,R9D
            push R13
            push R12
            push RBP
            push RBX
            xor R12D,R12D
            mov EBX,EDX
            lea EBP,DWORD PTR [RAX+RAX*2]
            sub RSP,88
.L_42494d:

            mov QWORD PTR [RDI],0
            mov DWORD PTR [RSP+16],ECX
            xor ECX,ECX
            mov QWORD PTR [RSP+24],RDI
            movsxd RBP,EBP
            mov QWORD PTR [RSP+48],RSI
            mov DWORD PTR [RSP+56],R8D
            test RBP,RBP
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            je .L_4249b6

            mov RDI,RBP
            mov DWORD PTR [RSP+8],R9D
            call _Znwm@PLT

            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+24]
            mov RDX,RBP
            lea R12,QWORD PTR [RCX+RBP*1]
            mov RDI,RCX
            xor ESI,ESI
            mov QWORD PTR [RAX],RCX
            mov QWORD PTR [RAX+16],R12
            call memset@PLT

            mov R9D,DWORD PTR [RSP+8]
            mov RCX,RAX
.L_4249b6:

            mov EDI,DWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+24]
            mov R15D,EBX
            add R9D,DWORD PTR [RSP+16]
            mov QWORD PTR [RSP+32],0
            not R15D
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RAX+8],R12
            lea EAX,DWORD PTR [RDI*4]
            mov EBP,EDI
            lea R13D,DWORD PTR [RDI+RBX*1]
            sub EBP,EAX
            lea EAX,DWORD PTR [RDI-1]
            mov DWORD PTR [RSP+20],R9D
            lea EDI,DWORD PTR [R13-1]
            movsxd RBP,EBP
            lea RSI,QWORD PTR [RAX+RAX*2+3]
            mov DWORD PTR [RSP+60],EDI
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+72],RSI
.L_424a11:

            mov RAX,QWORD PTR [RSP+48]
            mov R10,QWORD PTR [RSP+32]
            add R10,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RSP+8]
            test EBX,EBX
            lea RDX,QWORD PTR [RCX+RAX*1]
            js .L_424c48

            mov ECX,DWORD PTR [RSP+16]
            test ECX,ECX
            js .L_424ca5

            mov ECX,DWORD PTR [R10]
            cmp EBX,ECX
            jge .L_424c86

            mov R14D,DWORD PTR [R10+4]
            cmp DWORD PTR [RSP+16],R14D
            jge .L_424c67

            mov EAX,DWORD PTR [RSP+20]
            cmp R14D,EAX
            cmovg R14D,EAX
            mov EAX,DWORD PTR [RSP+16]
            cmp EAX,R14D
            mov R11D,EAX
            jge .L_424b25

            mov QWORD PTR [RSP+40],RBP
            mov EBP,DWORD PTR [RSP+60]
            nop
            nop
            nop
            nop
            nop
            nop
.L_424a80:

            cmp R13D,ECX
            mov R12D,ECX
            cmovle R12D,R13D
            imul ECX,R11D
            add ECX,EBX
            cmp EBX,R12D
            jge .L_424c40

            lea EAX,DWORD PTR [R15+R12*1]
            movsxd RCX,ECX
            mov RSI,RDX
            add RCX,RCX
            mov EDI,EBX
            lea R9,QWORD PTR [RAX+RAX*2+3]
            add R9,RDX
.L_424ab0:

            mov RAX,QWORD PTR [R10+56]
            mov R8D,EDI
            add RSI,3
            and R8D,1
            add EDI,1
            movzx EAX,WORD PTR [RAX+RCX*1]
            add RCX,2
            add EAX,8
            sub EAX,R8D
            sar EAX,4
            mov BYTE PTR [RSI-3],AL
            cmp RSI,R9
            jne .L_424ab0

            lea EAX,DWORD PTR [R15+R12*1]
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            add RDX,RAX
.L_424ae7:

            cmp R12D,R13D
            jge .L_424b0b

            mov EAX,EBP
            movzx ECX,BYTE PTR [RDX-3]
            sub EAX,R12D
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            add RAX,RDX
            nop
            nop
            nop
.L_424b00:

            mov BYTE PTR [RDX],CL
            add RDX,3
            cmp RDX,RAX
            jne .L_424b00
.L_424b0b:

            add R11D,1
            cmp R14D,R11D
            je .L_424b20

            mov ECX,DWORD PTR [R10]
            jmp .L_424a80
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_424b20:

            mov RBP,QWORD PTR [RSP+40]
.L_424b25:

            cmp DWORD PTR [RSP+20],R11D
            jle .L_424b6c

            mov EAX,DWORD PTR [RSP+56]
            test EAX,EAX
            jle .L_424b6c

            mov RDI,QWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RSP+20]
            mov R9,QWORD PTR [RSP+72]
            nop
            nop
            nop
            nop
            nop
.L_424b48:

            lea RSI,QWORD PTR [RDX+R9*1]
            mov RAX,RDX
            nop
.L_424b50:

            movzx ECX,BYTE PTR [RAX+RBP*1]
            add RAX,3
            mov BYTE PTR [RAX-3],CL
            cmp RAX,RSI
            jne .L_424b50

            add R11D,1
            add RDX,RDI
            cmp R8D,R11D
            jne .L_424b48
.L_424b6c:

            mov RAX,QWORD PTR [RSP+24]
            add QWORD PTR [RSP+8],1
            add QWORD PTR [RSP+32],336
            mov RCX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP+8]
            cmp RAX,3
            jne .L_424a11

            mov RSI,QWORD PTR [RSP+24]
            cmp RCX,QWORD PTR [RSI+8]
            je .L_424c2a

            lea RBX,QWORD PTR [RIP+.L_4289c0]
            lea R8,QWORD PTR [RIP+.L_427b40]
            lea R11,QWORD PTR [RIP+.L_4281c0]
            lea R10,QWORD PTR [RIP+.L_427dc0]
            lea R9,QWORD PTR [RIP+.L_4285c0]
            xor EDI,EDI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424bd0:

            lea RAX,QWORD PTR [RCX+RDI*1]
            add RDI,3
            movzx R12D,BYTE PTR [RAX+2]
            movzx ECX,BYTE PTR [RAX]
            movzx EBP,BYTE PTR [RAX+1]
            mov EDX,DWORD PTR [RBX+R12*4]
            add EDX,ECX
            movsxd RDX,EDX
            movzx EDX,BYTE PTR [R8+RDX*1]
            mov BYTE PTR [RAX],DL
            mov EDX,DWORD PTR [R10+RBP*4]
            add EDX,DWORD PTR [R11+R12*4]
            sar EDX,16
            add EDX,ECX
            add ECX,DWORD PTR [R9+RBP*4]
            movsxd RDX,EDX
            movzx EDX,BYTE PTR [R8+RDX*1]
            movsxd RCX,ECX
            mov BYTE PTR [RAX+1],DL
            movzx EDX,BYTE PTR [R8+RCX*1]
            mov BYTE PTR [RAX+2],DL
            mov RCX,QWORD PTR [RSI]
            mov RAX,QWORD PTR [RSI+8]
            sub RAX,RCX
            cmp RDI,RAX
            jb .L_424bd0
.L_424c2a:

            mov RAX,QWORD PTR [RSP+24]
            add RSP,88
.L_424c33:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_424c40:

            mov R12D,EBX
            jmp .L_424ae7
.L_424c48:

            lea RCX,QWORD PTR [RIP+.L_427900]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427382]
            mov EDX,69
            call __assert_fail@PLT
.L_424c67:

            lea RCX,QWORD PTR [RIP+.L_427900]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4273a4]
            mov EDX,72
            call __assert_fail@PLT
.L_424c86:

            lea RCX,QWORD PTR [RIP+.L_427900]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427396]
            mov EDX,71
            call __assert_fail@PLT
.L_424ca5:

            lea RCX,QWORD PTR [RIP+.L_427900]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_42738c]
            mov EDX,70
            call __assert_fail@PLT
.L_424cc4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424cd0:

            push RBX
            xor ECX,ECX
            xor EDX,EDX
            mov RBX,RDI
            sub RSP,16
            mov R9D,DWORD PTR [RSI+4]
            mov R8D,DWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_424930

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            jne .L_424d11

            add RSP,16
            mov RAX,RBX
            pop RBX
            ret 
.L_424d11:

            call __stack_chk_fail@PLT
.L_424d16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424d20:

            push R15
            push R14
            mov R15D,ESI
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            mov EBP,ECX
            mov R12D,R8D
            mov R13,R9
            sub RSP,56
.L_424d3c:

            mov DWORD PTR [RSP+12],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            call .L_4198b0

            mov EDX,DWORD PTR [RSP+12]
            mov R8D,EBP
            lea RDI,QWORD PTR [RSP+16]
            imul EBP,R12D
            mov R9D,R12D
            mov RSI,R14
            mov RBX,RAX
            mov ECX,EDX
            mov EDX,R15D
            call .L_424930

            test EBP,EBP
            mov RDI,QWORD PTR [RSP+16]
            jle .L_424ded

            mov RAX,QWORD PTR [R13]
            mov RDX,RDI
            xor ECX,ECX
            mov R9,QWORD PTR [RAX]
            mov R11,QWORD PTR [RAX+24]
            mov R10,QWORD PTR [RAX+48]
            lea EAX,DWORD PTR [RBP-1]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RSI,QWORD PTR [RDI+RAX*1+3]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424da8:

            movzx EAX,BYTE PTR [RDX]
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            add RDX,3
            pxor XMM2,XMM2
            cvtsd2ss XMM0,QWORD PTR [RBX+RAX*8]
            movss DWORD PTR [R9+RCX*1],XMM0
            movzx EAX,BYTE PTR [RDX-2]
            cvtsd2ss XMM1,QWORD PTR [RBX+RAX*8]
            movss DWORD PTR [R11+RCX*1],XMM1
            movzx EAX,BYTE PTR [RDX-1]
            cvtsd2ss XMM2,QWORD PTR [RBX+RAX*8]
            movss DWORD PTR [R10+RCX*1],XMM2
            add RCX,4
            cmp RSI,RDX
            jne .L_424da8
.L_424ded:

            test RDI,RDI
            je .L_424df7

            call _ZdlPv@PLT
.L_424df7:

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_424e16

            add RSP,56
.L_424e0b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_424e16:

            call __stack_chk_fail@PLT
.L_424e1b:

            nop
            nop
            nop
            nop
            nop
.L_424e20:

            push R14
            push R13
            mov R13,RSI
            push R12
            push RBP
            mov R12,RDI
            push RBX
            sub RSP,32
.L_424e32:

            mov EBP,DWORD PTR [RDI+4]
            mov R14D,DWORD PTR [RDI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_4198b0

            mov R9D,EBP
            mov RDI,RSP
            xor ECX,ECX
            imul EBP,R14D
            xor EDX,EDX
            mov R8D,R14D
            mov RSI,R12
            mov RBX,RAX
            call .L_424930

            test EBP,EBP
            mov RDI,QWORD PTR [RSP]
            jle .L_424edd

            mov RAX,QWORD PTR [R13]
            mov RDX,RDI
            xor ECX,ECX
            mov R8,QWORD PTR [RAX]
            mov R11,QWORD PTR [RAX+24]
            mov R10,QWORD PTR [RAX+48]
            lea EAX,DWORD PTR [RBP-1]
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea RSI,QWORD PTR [RDI+RAX*1+3]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424e98:

            movzx EAX,BYTE PTR [RDX]
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            add RDX,3
            pxor XMM2,XMM2
            cvtsd2ss XMM0,QWORD PTR [RBX+RAX*8]
            movss DWORD PTR [R8+RCX*1],XMM0
            movzx EAX,BYTE PTR [RDX-2]
            cvtsd2ss XMM1,QWORD PTR [RBX+RAX*8]
            movss DWORD PTR [R11+RCX*1],XMM1
            movzx EAX,BYTE PTR [RDX-1]
            cvtsd2ss XMM2,QWORD PTR [RBX+RAX*8]
            movss DWORD PTR [R10+RCX*1],XMM2
            add RCX,4
            cmp RSI,RDX
            jne .L_424e98
.L_424edd:

            test RDI,RDI
            je .L_424ee7

            call _ZdlPv@PLT
.L_424ee7:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_424f04

            add RSP,32
.L_424efb:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_424f04:

            call __stack_chk_fail@PLT
.L_424f09:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_424f10:

            push R12
            push RBP
            lea R8,QWORD PTR [RIP+.L_4273f8]
            push RBX
            mov RBP,RDI
            mov ECX,128
            sub RSP,160
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+152],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI+8]
            lea R12,QWORD PTR [RSP+16]
            sub RSP,8
            mov ESI,128
            mov RDI,R12
            mov EDX,DWORD PTR [RAX+684]
            push RDX
            mov EDX,DWORD PTR [RAX+680]
            push RDX
            mov EDX,DWORD PTR [RAX+348]
            push RDX
            mov EDX,DWORD PTR [RAX+344]
            push RDX
            mov EDX,DWORD PTR [RAX+12]
            push RDX
            mov R9D,DWORD PTR [RAX+8]
            mov EDX,1
            xor EAX,EAX
            call __snprintf_chk@PLT

            movsxd RDX,EAX
            lea RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RSP+56],RDX
            add RSP,48
.L_424f92:

            cmp EDX,15
            mov RBX,RDX
            mov QWORD PTR [RBP],RAX
            jg .L_425038
.L_424fa2:

            cmp EBX,8
            jae .L_424fd0

            test BL,4
            jne .L_425060

            test EBX,EBX
            je .L_425000

            movzx EDX,BYTE PTR [R12]
            test BL,2
            mov BYTE PTR [RAX],DL
            je .L_425000

            mov EBX,EBX
            movzx EDX,WORD PTR [R12+RBX*1-2]
            mov WORD PTR [RAX+RBX*1-2],DX
            jmp .L_425000
          .byte 0x90
.L_424fd0:

            mov RDX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RAX+8]
            mov RSI,R12
            and RDI,-8
            mov QWORD PTR [RAX],RDX
            mov EDX,EBX
            mov RCX,QWORD PTR [R12+RDX*1-8]
            mov QWORD PTR [RAX+RDX*1-8],RCX
            sub RAX,RDI
            lea ECX,DWORD PTR [RBX+RAX*1]
            sub RSI,RAX
            shr ECX,3
            mov ECX,ECX

            rep movsq 
.L_425000:

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RBP]
            mov RDI,QWORD PTR [RSP+152]
            xor RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RBP+8],RAX
            mov BYTE PTR [RDX+RAX*1],0
            mov RAX,RBP
            jne .L_425073

            add RSP,160
.L_42502e:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425038:

            lea RSI,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov RDI,RBP
            call _ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm@PLT

            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBP],RAX
            mov QWORD PTR [RBP+16],RDX
            jmp .L_424fa2
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425060:

            mov EDX,DWORD PTR [R12]
            mov EBX,EBX
            mov DWORD PTR [RAX],EDX
            mov EDX,DWORD PTR [R12+RBX*1-4]
            mov DWORD PTR [RAX+RBX*1-4],EDX
            jmp .L_425000
.L_425073:

            call __stack_chk_fail@PLT
.L_425078:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425080:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            mov R15,RDI
            push RBX
            mov R13,RSI
            sub RSP,2376
.L_42509a:

            mov RCX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
            mov EDX,DWORD PTR [RCX+360]
            shl EDX,6
            test EDX,EDX
            jle .L_4250f0

            mov RAX,QWORD PTR [RCX+368]
            cmp WORD PTR [RAX],0
            jne .L_425158

            add RAX,2
            sub EDX,1
            lea RDX,QWORD PTR [RAX+RDX*2]
            jmp .L_4250eb
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4250e0:

            add RAX,2
            cmp WORD PTR [RAX-2],0
            jne .L_425158
.L_4250eb:

            cmp RDX,RAX
            jne .L_4250e0
.L_4250f0:

            mov EDX,DWORD PTR [RCX+696]
            shl EDX,6
            test EDX,EDX
            jle .L_425130

            mov RAX,QWORD PTR [RCX+704]
            cmp WORD PTR [RAX],0
            jne .L_425158

            add RAX,2
            sub EDX,1
            lea RDX,QWORD PTR [RAX+RDX*2]
            jmp .L_42512b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425120:

            add RAX,2
            cmp WORD PTR [RAX-2],0
            jne .L_425158
.L_42512b:

            cmp RDX,RAX
            jne .L_425120
.L_425130:

            mov RAX,QWORD PTR [RBP-56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_425c5f

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_425151:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425158:

            cmp BYTE PTR [R13+20],0
            mov R9D,DWORD PTR [R15+4]
            mov R8D,DWORD PTR [R15]
            je .L_425171

            cmp DWORD PTR [R13],2
            je .L_42569a
.L_425171:

            imul R9D,R8D
            movsxd RAX,R9D
            test RAX,RAX
            mov RDI,RAX
            je .L_425c27

            movabs RAX,4611686018427387903
            cmp RDI,RAX
            ja .L_425c55

            mov RAX,RDI
            shl RAX,2
            mov RBX,RAX
            mov RDI,RAX
.L_4251a4:

            call _Znwm@PLT
.L_4251a9:

            mov RDX,RBX
            mov RDI,RAX
            xor ESI,ESI
            mov R14,RAX
            call memset@PLT

            pxor XMM0,XMM0
            mov RAX,RBX
            add RAX,R14
            mov EDI,72
            mov QWORD PTR [RBP-2256],0
            mov R12,RAX
            movaps XMMWORD PTR [RBP-2272],XMM0
.L_4251dd:

            call _Znwm@PLT
.L_4251e2:

            mov RBX,RAX
.L_4251e5:

            lea RAX,QWORD PTR [RBX+72]
            mov RDI,R12
            sub R12,R14
            mov QWORD PTR [RBP-2280],RBX
            movq XMM0,QWORD PTR [RBP-2280]
            mov QWORD PTR [RBP-2288],RAX
            punpcklqdq XMM0,XMM0
            mov QWORD PTR [RBP-2256],RAX
            mov RAX,R12
            sar RAX,2
            cmp RDI,R14
            movaps XMMWORD PTR [RBP-2272],XMM0
            je .L_425af0

            test RAX,RAX
            je .L_425d00

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_425b94

            mov QWORD PTR [RBP-2280],RBX
.L_42524a:

            mov RDI,QWORD PTR [RBP-2280]
            test RDI,RDI
            je .L_4252ae

            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov RDI,R12
.L_425270:

            call _Znwm@PLT
.L_425275:

            mov RDI,QWORD PTR [RBP-2280]
            lea RCX,QWORD PTR [RAX+R12*1]
            mov RDX,R12
            mov RSI,R14
            mov QWORD PTR [RBP-2296],RCX
            mov QWORD PTR [RDI+16],RCX
            mov QWORD PTR [RDI],RAX
            mov RDI,RAX
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP-2280]
            mov RCX,QWORD PTR [RBP-2296]
            mov QWORD PTR [RAX+8],RCX
.L_4252ae:

            add QWORD PTR [RBP-2280],24
            mov RAX,QWORD PTR [RBP-2280]
            cmp QWORD PTR [RBP-2288],RAX
            jne .L_42524a
.L_4252c6:

            test R14,R14
            mov QWORD PTR [RBP-2264],RAX
            je .L_4252da

            mov RDI,R14
            call _ZdlPv@PLT
.L_4252da:

            lea R14,QWORD PTR [RBP-2272]
            xor EBX,EBX
            xor R12D,R12D
.L_4252e6:

            mov RAX,QWORD PTR [RBP-2272]
            mov RDI,QWORD PTR [R15+8]
            mov EDX,1
            mov QWORD PTR [RBP-2280],R14
            mov RSI,QWORD PTR [RAX+RBX*1]
            add RDI,R12
.L_425304:

            call .L_4226b0

            add RBX,24
            add R12,336
            cmp RBX,72
            jne .L_4252e6

            lea RAX,QWORD PTR [RBP-2272]
            movzx R9D,BYTE PTR [R13+17]
            movzx R8D,BYTE PTR [R13+16]
            mov EDX,DWORD PTR [R15+4]
            sub RSP,8
            mov ESI,DWORD PTR [R15]
            lea RDI,QWORD PTR [RBP-2240]
            push RAX
            mov ECX,2
            movss XMM1,DWORD PTR [RIP+.L_428df4]
            mov QWORD PTR [RBP-2280],RAX
            movss XMM0,DWORD PTR [RIP+.L_428df8]
.L_42535a:

            call .L_42a7a0

            mov RDX,QWORD PTR [RBP-2240]
            mov R12,QWORD PTR [RBP-2272]
            mov RAX,QWORD PTR [RBP-2264]
            pxor XMM0,XMM0
            pop RCX
            mov QWORD PTR [RBP-2272],RDX
            mov RDX,QWORD PTR [RBP-2232]
            cmp R12,RAX
            pop RSI
            mov QWORD PTR [RBP-2264],RDX
            mov RDX,QWORD PTR [RBP-2224]
            movaps XMMWORD PTR [RBP-2240],XMM0
            mov QWORD PTR [RBP-2224],0
            mov QWORD PTR [RBP-2256],RDX
            je .L_4253ea

            lea RDX,QWORD PTR [R12+24]
            mov RBX,R12
            sub RAX,RDX
            shr RAX,3
            lea R14,QWORD PTR [R12+RAX*8+24]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4253d0:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_425670

            add RBX,24
            call _ZdlPv@PLT

            cmp R14,RBX
            jne .L_4253d0
.L_4253ea:

            test R12,R12
            je .L_4253f7

            mov RDI,R12
            call _ZdlPv@PLT
.L_4253f7:

            mov RDX,QWORD PTR [RBP-2232]
            mov RAX,QWORD PTR [RBP-2240]
            cmp RDX,RAX
            je .L_425458

            lea RBX,QWORD PTR [RAX+24]
            mov RDI,QWORD PTR [RBP-2280]
            sub RDX,RBX
            shr RDX,3
            mov R14,RDI
            lea R12,QWORD PTR [RAX+RDX*8+24]
            jmp .L_425441
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425430:

            call _ZdlPv@PLT

            cmp RBX,R12
            mov RAX,RBX
            je .L_425451
.L_42543d:

            add RBX,24
.L_425441:

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            jne .L_425430

            cmp RBX,R12
            mov RAX,RBX
            jne .L_42543d
.L_425451:

            mov QWORD PTR [RBP-2280],R14
.L_425458:

            mov RDI,QWORD PTR [RBP-2240]
            test RDI,RDI
            je .L_425469

            call _ZdlPv@PLT
.L_425469:

            movzx R9D,BYTE PTR [R13+19]
            movzx R8D,BYTE PTR [R13+18]
            sub RSP,8
            mov EDX,DWORD PTR [R15+4]
            mov ESI,DWORD PTR [R15]
            lea RDI,QWORD PTR [RBP-2208]
            push QWORD PTR [RBP-2280]
            movss XMM1,DWORD PTR [RIP+.L_428df4]
            movss XMM0,DWORD PTR [RIP+.L_428df8]
            mov ECX,1
            call .L_42a7a0

            pop RAX
            pop RDX
            mov RDX,QWORD PTR [RBP-2208]
            mov R12,QWORD PTR [RBP-2272]
            mov RAX,QWORD PTR [RBP-2264]
            pxor XMM0,XMM0
            mov QWORD PTR [RBP-2272],RDX
            mov RDX,QWORD PTR [RBP-2200]
            cmp R12,RAX
            movaps XMMWORD PTR [RBP-2208],XMM0
            mov QWORD PTR [RBP-2264],RDX
            mov RDX,QWORD PTR [RBP-2192]
            mov QWORD PTR [RBP-2192],0
            mov QWORD PTR [RBP-2256],RDX
            je .L_42552a

            lea RDX,QWORD PTR [R12+24]
            mov RBX,R12
            sub RAX,RDX
            shr RAX,3
            lea R14,QWORD PTR [R12+RAX*8+24]
            nop
            nop
.L_425510:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_425688

            add RBX,24
            call _ZdlPv@PLT

            cmp R14,RBX
            jne .L_425510
.L_42552a:

            test R12,R12
            je .L_425537

            mov RDI,R12
            call _ZdlPv@PLT
.L_425537:

            mov RDX,QWORD PTR [RBP-2200]
            mov RAX,QWORD PTR [RBP-2208]
            cmp RDX,RAX
            je .L_425598

            lea RBX,QWORD PTR [RAX+24]
            mov RSI,QWORD PTR [RBP-2280]
            sub RDX,RBX
            shr RDX,3
            mov R14,RSI
            lea R12,QWORD PTR [RAX+RDX*8+24]
            jmp .L_425581
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425570:

            call _ZdlPv@PLT

            cmp RBX,R12
            mov RAX,RBX
            je .L_425591
.L_42557d:

            add RBX,24
.L_425581:

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            jne .L_425570

            cmp RBX,R12
            mov RAX,RBX
            jne .L_42557d
.L_425591:

            mov QWORD PTR [RBP-2280],R14
.L_425598:

            mov RDI,QWORD PTR [RBP-2208]
            test RDI,RDI
            je .L_4255a9

            call _ZdlPv@PLT
.L_4255a9:

            mov ESI,DWORD PTR [R13]
            mov EDX,DWORD PTR [R13+4]
            cmp ESI,1
            jne .L_4255bb

            cmp EDX,1
            je .L_4255d6
.L_4255bb:

            mov RAX,QWORD PTR [R15+8]
            lea RCX,QWORD PTR [RAX+336]
            mov RAX,QWORD PTR [RBP-2272]
            lea RDI,QWORD PTR [RAX+24]

            call .L_423400
.L_4255d6:

            mov ESI,DWORD PTR [R13+8]
            mov EDX,DWORD PTR [R13+12]
            cmp ESI,1
            jne .L_4255e8

            cmp EDX,1
            je .L_425603
.L_4255e8:

            mov RAX,QWORD PTR [RBP-2272]
            mov RCX,QWORD PTR [R15+8]
            lea RDI,QWORD PTR [RAX+48]
            add RCX,672
            call .L_423400
.L_425603:

            mov RDX,QWORD PTR [RBP-2264]
            mov RAX,QWORD PTR [RBP-2272]
            cmp RDX,RAX
            je .L_425651

            lea RBX,QWORD PTR [RAX+24]
            sub RDX,RBX
            shr RDX,3
            lea RCX,QWORD PTR [RAX+RDX*8+24]
            mov R15,RCX
            jmp .L_425641
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425630:

            call _ZdlPv@PLT

            cmp R15,RBX
            mov RAX,RBX
            je .L_425651
.L_42563d:

            add RBX,24
.L_425641:

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            jne .L_425630

            cmp RBX,R15
            mov RAX,RBX
            jne .L_42563d
.L_425651:

            mov RDI,QWORD PTR [RBP-2272]
            test RDI,RDI
            je .L_425130
.L_425661:

            call _ZdlPv@PLT

            jmp .L_425130
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425670:

            add RBX,24
            cmp RBX,R14
            jne .L_4253d0

            jmp .L_4253ea
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425688:

            add RBX,24
            cmp RBX,R14
            jne .L_425510

            jmp .L_42552a
.L_42569a:

            cmp DWORD PTR [R13+4],2
            jne .L_425171

            cmp DWORD PTR [R13+8],2
            jne .L_425171

            cmp DWORD PTR [R13+12],2
            jne .L_425171

            lea RBX,QWORD PTR [RBP-2240]
            xor ECX,ECX
            xor EDX,EDX
            mov RSI,R15
            mov RDI,RBX
.L_4256cc:

            call .L_424930
.L_4256d1:

            lea RAX,QWORD PTR [RBP-2208]
            mov ECX,DWORD PTR [R15+4]
            mov EDX,DWORD PTR [R15]
            mov RSI,RBX
            mov RDI,RAX
            mov QWORD PTR [RBP-2416],RAX
.L_4256ec:

            call .L_42c610
.L_4256f1:

            mov RAX,QWORD PTR [RBP-2208]
            mov R12,QWORD PTR [R15+8]
            mov RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RBP-2336],RAX
            sub RDX,QWORD PTR [RAX]
            mov EAX,DWORD PTR [R12]
            imul EAX,DWORD PTR [R12+4]
            sar RDX,2
            cdqe 
            cmp RDX,RAX
            jne .L_425cdc

            mov EDX,1
            mov ESI,1
            mov RDI,R12
.L_425730:

            call .L_421ef0

            lea RAX,QWORD PTR [RBP-1792]
            mov DWORD PTR [RBP-2296],0
            mov QWORD PTR [RBP-2280],RAX
.L_42574d:

            mov EAX,DWORD PTR [RBP-2296]
            cmp DWORD PTR [R12+20],EAX
            jle .L_425d59

            cmp DWORD PTR [R12+16],0
            jle .L_425d4d

            mov EAX,DWORD PTR [RBP-2296]
            mov R9D,DWORD PTR [R12]
            shl EAX,3
            test R9D,R9D
            mov DWORD PTR [RBP-2304],EAX
            jle .L_425b75

            mov EDI,DWORD PTR [R12+4]
            cmp DWORD PTR [RBP-2304],EDI
            jge .L_425acb

            mov RAX,QWORD PTR [RBP-2280]
            xor R13D,R13D
            mov DWORD PTR [RBP-2300],0
            add RAX,512
            mov QWORD PTR [RBP-2312],RAX
            lea RAX,QWORD PTR [RBP-256]
            mov QWORD PTR [RBP-2344],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4257d0:

            mov RAX,QWORD PTR [RBP-2336]
            lea R10D,DWORD PTR [R13+2]
            lea EBX,DWORD PTR [R13+5]
            lea ECX,DWORD PTR [R13+6]
            mov ESI,DWORD PTR [RBP-2304]
            mov RDX,QWORD PTR [RAX]
            lea EAX,DWORD PTR [R9-1]
            cmp R13D,EAX
            mov R11D,EAX
            cmovle R11D,R13D
            cmp R10D,EAX
            cmovg R10D,EAX
            cmp EBX,EAX
            cmovg EBX,EAX
            cmp ECX,EAX
            cmovg ECX,EAX
            mov DWORD PTR [RBP-2288],ECX
            lea ECX,DWORD PTR [R13+1]
            cmp ECX,EAX
            cmovg ECX,EAX
            sub EDI,1
            mov DWORD PTR [RBP-2316],ECX
            lea ECX,DWORD PTR [R13+7]
            cmp ECX,EAX
            cmovg ECX,EAX
            mov DWORD PTR [RBP-2320],ECX
            lea ECX,DWORD PTR [R13+3]
            cmp ECX,EAX
            cmovg ECX,EAX
            mov DWORD PTR [RBP-2324],ECX
            lea ECX,DWORD PTR [R13+4]
            cmp ECX,EAX
            cmovle EAX,ECX
            mov R14D,EAX
            mov RAX,QWORD PTR [RBP-2280]
            mov RCX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_425860:

            cmp ESI,EDI
            mov EAX,EDI
            mov R8D,DWORD PTR [RBP-2288]
            cmovle EAX,ESI
            pxor XMM0,XMM0
            imul EAX,R9D
            pxor XMM1,XMM1
            pxor XMM2,XMM2
            add ESI,1
            pxor XMM3,XMM3
            add RCX,64
            add R8D,EAX
            pxor XMM4,XMM4
            movsxd R8,R8D
            addss XMM0,DWORD PTR [RDX+R8*4]
            mov R8D,DWORD PTR [RBP-2320]
            add R8D,EAX
            movsxd R8,R8D
            addss XMM1,DWORD PTR [RDX+R8*4]
            lea R8D,DWORD PTR [RAX+R14*1]
            cvtss2sd XMM0,XMM0
            movsxd R8,R8D
            cvtss2sd XMM1,XMM1
            unpcklpd XMM0,XMM1
            pxor XMM1,XMM1
            addss XMM1,DWORD PTR [RDX+R8*4]
            lea R8D,DWORD PTR [RAX+RBX*1]
            movsxd R8,R8D
            addss XMM2,DWORD PTR [RDX+R8*4]
            lea R8D,DWORD PTR [RAX+R10*1]
            movsxd R8,R8D
            cvtss2sd XMM1,XMM1
            cvtss2sd XMM2,XMM2
            unpcklpd XMM1,XMM2
            pxor XMM2,XMM2
            addss XMM2,DWORD PTR [RDX+R8*4]
            mov R8D,DWORD PTR [RBP-2324]
            add R8D,EAX
            movsxd R8,R8D
            addss XMM3,DWORD PTR [RDX+R8*4]
            lea R8D,DWORD PTR [RAX+R11*1]
            add EAX,DWORD PTR [RBP-2316]
            cvtss2sd XMM2,XMM2
            movsxd R8,R8D
            cdqe 
            addss XMM4,DWORD PTR [RDX+RAX*4]
            cvtss2sd XMM3,XMM3
            unpcklpd XMM2,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM4,XMM4
            addss XMM3,DWORD PTR [RDX+R8*4]
            movaps XMMWORD PTR [RCX-48],XMM2
            movaps XMMWORD PTR [RCX-32],XMM1
            movaps XMMWORD PTR [RCX-16],XMM0
            cvtss2sd XMM3,XMM3
            unpcklpd XMM3,XMM4
            movaps XMMWORD PTR [RCX-64],XMM3
            cmp QWORD PTR [RBP-2312],RCX
            jne .L_425860

            mov RAX,QWORD PTR [RBP-2280]
            mov RDI,RAX
            call .L_43bee0

            movsd XMM0,QWORD PTR [RBP-1792]
            mov RAX,QWORD PTR [RBP-2280]
            lea RBX,QWORD PTR [RBP-2176]
            xor R14D,R14D
            subsd XMM0,QWORD PTR [RIP+.L_428de8]
            mov QWORD PTR [RBP-2288],RAX
            movsd QWORD PTR [RBP-1792],XMM0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4259a0:

            mov RAX,QWORD PTR [RBP-2288]
            movsd XMM5,QWORD PTR [RAX+R14*8]
            movapd XMM0,XMM5
            movsd QWORD PTR [RBP-2280],XMM5
            call round@PLT

            cvttsd2si EAX,XMM0
            mov WORD PTR [RBX+R14*2],AX
            add R14,1
            cmp R14,64
            jne .L_4259a0

            mov RAX,QWORD PTR [RBP-2288]
            mov QWORD PTR [RBP-2280],RAX
            mov EAX,DWORD PTR [R12+16]
            cmp EAX,DWORD PTR [RBP-2300]
            jle .L_426b7b

            mov ECX,DWORD PTR [RBP-2296]
            cmp ECX,DWORD PTR [R12+20]
            jge .L_426b76

            imul EAX,DWORD PTR [RBP-2296]
            mov R14D,DWORD PTR [RBP-2300]
            mov RSI,QWORD PTR [R12+32]
            movdqa XMM0,XMMWORD PTR [RBX]
            add EAX,R14D
            shl EAX,6
            cdqe 
            add RAX,RAX
            add RSI,RAX
            movups XMMWORD PTR [RSI],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+16]
            movups XMMWORD PTR [RSI+16],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+32]
            movups XMMWORD PTR [RSI+32],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+48]
            movups XMMWORD PTR [RSI+48],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+64]
            movups XMMWORD PTR [RSI+64],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+80]
            movups XMMWORD PTR [RSI+80],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+96]
            movups XMMWORD PTR [RSI+96],XMM0
            movdqa XMM0,XMMWORD PTR [RBX+112]
            mov RBX,QWORD PTR [RBP-2344]
            movups XMMWORD PTR [RSI+112],XMM0
            add RAX,QWORD PTR [R12+32]
            mov RSI,RBX
            mov RDI,RAX
            call .L_43d9c0

            mov EDX,DWORD PTR [RBP-2296]
            mov RCX,RBX
            mov ESI,R14D
            mov RDI,R12
            call .L_422d10
.L_425a93:

            add R14D,1
            cmp DWORD PTR [R12+16],R14D
            mov DWORD PTR [RBP-2300],R14D
            jle .L_425d4d

            mov R9D,DWORD PTR [R12]
            add R13D,8
            cmp R9D,R13D
            jle .L_425b75

            mov EDI,DWORD PTR [R12+4]
            cmp EDI,DWORD PTR [RBP-2304]
            jg .L_4257d0
.L_425acb:

            lea RCX,QWORD PTR [RIP+.L_4276e0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4273e4]
            mov EDX,276
            call __assert_fail@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425af0:

            test RAX,RAX
            je .L_425c64

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_425b94

            mov QWORD PTR [RBP-2280],RBX
            nop
            nop
            nop
            nop
            nop
.L_425b18:

            mov RSI,QWORD PTR [RBP-2280]
            test RSI,RSI
            je .L_425b58

            mov QWORD PTR [RSI],0
            mov QWORD PTR [RSI+8],0
            mov RDI,R12
            mov QWORD PTR [RSI+16],0
.L_425b3e:

            call _Znwm@PLT
.L_425b43:

            mov RSI,QWORD PTR [RBP-2280]
            mov QWORD PTR [RSI],RAX
            add RAX,R12
            mov QWORD PTR [RSI+16],RAX
            mov QWORD PTR [RSI+8],RAX
.L_425b58:

            add QWORD PTR [RBP-2280],24
            mov RAX,QWORD PTR [RBP-2280]
            cmp QWORD PTR [RBP-2288],RAX
            jne .L_425b18

            jmp .L_4252c6
.L_425b75:

            lea RCX,QWORD PTR [RIP+.L_4276e0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4273d1]
            mov EDX,275
            call __assert_fail@PLT
.L_425b94:

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
.L_425bab:

            call _ZSt17__throw_bad_allocv@PLT
.L_425bb0:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            mov RAX,QWORD PTR [RBP-2280]
            mov R15,RAX
.L_425bc2:

            cmp RBX,R15
            je .L_425bda

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_425bd4

            call _ZdlPv@PLT
.L_425bd4:

            add RBX,24
            jmp .L_425bc2
.L_425bda:

            call __cxa_rethrow@PLT
.L_425bdf:

            mov QWORD PTR [RBP-2280],RBX
            jmp .L_425bb0
.L_425be8:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBP-2272]
            test RDI,RDI
            je .L_425c01

            call _ZdlPv@PLT
.L_425c01:

            test R14,R14
            je .L_425c0e
.L_425c06:

            mov RDI,R14
.L_425c09:

            call _ZdlPv@PLT
.L_425c0e:

            mov RDI,RBX
.L_425c11:

            call _Unwind_Resume@PLT
.L_425c16:

            mov RDI,QWORD PTR [RBP-2280]
            mov RBX,RAX
            call .L_4189d0

            jmp .L_425c0e
.L_425c27:

            pxor XMM0,XMM0
            mov EDI,72
            mov QWORD PTR [RBP-2256],0
            xor R14D,R14D
            xor R12D,R12D
            movaps XMMWORD PTR [RBP-2272],XMM0
            call _Znwm@PLT

            mov RBX,RAX
            jmp .L_4251e5
.L_425c55:

            call _ZSt17__throw_bad_allocv@PLT
.L_425c5a:

            mov RBX,RAX
            jmp .L_425c06
.L_425c5f:

            call __stack_chk_fail@PLT
.L_425c64:

            cmp RBX,-24
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+16],R12
            mov QWORD PTR [RBX+8],R12
            je .L_425cb1

            mov QWORD PTR [RBX+24],0
            mov QWORD PTR [RBX+40],R12
            mov QWORD PTR [RBX+32],R12
            add RBX,48
            je .L_425c9e
.L_425c8f:

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+16],R12
            mov QWORD PTR [RBX+8],R12
.L_425c9e:

            mov RAX,QWORD PTR [RBP-2288]
            mov QWORD PTR [RBP-2280],RAX
            jmp .L_4252c6
.L_425cb1:

            mov EBX,24
            jmp .L_425c8f
.L_425cb8:

            mov RDI,QWORD PTR [RBP-2416]
            mov RBX,RAX
            call .L_4189d0
.L_425cc7:

            mov RDI,QWORD PTR [RBP-2240]
            test RDI,RDI
            jne .L_425c09

            jmp .L_425c0e
.L_425cdc:

            lea RCX,QWORD PTR [RIP+.L_4276e0]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427460]
            mov EDX,268
            call __assert_fail@PLT
.L_425cfb:

            mov RBX,RAX
            jmp .L_425cc7
.L_425d00:

            test RBX,RBX
            je .L_425d38
.L_425d05:

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+16],R12
            xor EDI,EDI
            mov RDX,R12
            mov RSI,R14
            add RBX,24
            call memcpy@PLT

            mov QWORD PTR [RBX-16],R12
            cmp QWORD PTR [RBP-2288],RBX
            jne .L_425d00

            jmp .L_425c9e
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_425d38:

            cmp QWORD PTR [RBP-2288],24
            je .L_425c9e

            mov EBX,24
            jmp .L_425d05
.L_425d4d:

            add DWORD PTR [RBP-2296],1
            jmp .L_42574d
.L_425d59:

            mov RAX,QWORD PTR [R15+8]
            mov RCX,QWORD PTR [RBP-2208]
            mov RDX,QWORD PTR [RCX+32]
            mov QWORD PTR [RBP-2400],RCX
            lea RDI,QWORD PTR [RAX+336]
            sub RDX,QWORD PTR [RCX+24]
            mov RCX,RAX
            mov QWORD PTR [RBP-2280],RAX
            mov EAX,DWORD PTR [RAX+336]
            mov QWORD PTR [RBP-2408],RDI
            imul EAX,DWORD PTR [RCX+340]
            sar RDX,2
            cdqe 
            cmp RDX,RAX
            jne .L_425cdc

            mov EDX,2
            mov ESI,2
.L_425db1:

            call .L_421ef0

            xor R12D,R12D
.L_425db9:

            mov RAX,QWORD PTR [RBP-2280]
            cmp DWORD PTR [RAX+356],R12D
            jle .L_426438

            cmp DWORD PTR [RAX+352],0
            jle .L_42642f

            mov RSI,QWORD PTR [RBP-2280]
            mov EAX,R12D
            shl EAX,4
            mov DWORD PTR [RBP-2372],EAX
            mov R13D,DWORD PTR [RSI+336]
            test R13D,R13D
            jle .L_425b75

            mov R8D,DWORD PTR [RSI+340]
            cmp EAX,R8D
            jge .L_425acb

            lea RBX,QWORD PTR [RBP-1280]
            mov DWORD PTR [RBP-2364],15
            mov DWORD PTR [RBP-2360],14
            mov DWORD PTR [RBP-2356],13
            mov DWORD PTR [RBP-2352],12
            lea RAX,QWORD PTR [RBX+512]
            mov DWORD PTR [RBP-2348],11
            mov DWORD PTR [RBP-2328],10
            mov DWORD PTR [RBP-2344],9
            mov DWORD PTR [RBP-2336],8
            mov QWORD PTR [RBP-2384],RAX
            lea RAX,QWORD PTR [RBP-192]
            mov DWORD PTR [RBP-2324],7
            mov DWORD PTR [RBP-2320],6
            mov DWORD PTR [RBP-2316],5
            mov DWORD PTR [RBP-2312],4
            mov DWORD PTR [RBP-2304],3
            mov DWORD PTR [RBP-2300],2
            mov DWORD PTR [RBP-2296],1
            mov DWORD PTR [RBP-2288],0
            mov DWORD PTR [RBP-2368],0
            mov QWORD PTR [RBP-2392],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_425ee0:

            mov RAX,QWORD PTR [RBP-2400]
            mov R11D,DWORD PTR [RBP-2372]
            sub R8D,1
            mov RDI,RBX
            mov RDX,QWORD PTR [RAX+24]
            lea EAX,DWORD PTR [R13-1]
            nop
            nop
            nop
.L_425f00:

            cmp R11D,R8D
            lea ECX,DWORD PTR [R11+1]
            mov ESI,R8D
            cmovle ESI,R11D
            mov R10D,DWORD PTR [RBP-2288]
            imul ESI,R13D
            cmp ECX,R8D
            cmovg ECX,R8D
            pxor XMM3,XMM3
            pxor XMM7,XMM7
            imul ECX,R13D
            cmp R10D,EAX
            cmovg R10D,EAX
            pxor XMM2,XMM2
            lea R9D,DWORD PTR [RSI+R10*1]
            pxor XMM6,XMM6
            pxor XMM1,XMM1
            movsxd R9,R9D
            pxor XMM5,XMM5
            addss XMM3,DWORD PTR [RDX+R9*4]
            mov R9D,DWORD PTR [RBP-2296]
            pxor XMM0,XMM0
            pxor XMM4,XMM4
            cmp R9D,EAX
            cmovg R9D,EAX
            add R10D,ECX
            lea R14D,DWORD PTR [RSI+R9*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R9,R9D
            movsxd R14,R14D
            addss XMM3,DWORD PTR [RDX+R14*4]
            mov R14D,DWORD PTR [RBP-2304]
            addss XMM3,DWORD PTR [RDX+R10*4]
            mov R10D,DWORD PTR [RBP-2300]
            cmp R10D,EAX
            cmovg R10D,EAX
            cmp R14D,EAX
            addss XMM3,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R10*1]
            movsxd R9,R9D
            addss XMM7,DWORD PTR [RDX+R9*4]
            mov R9D,R14D
            cmovg R9D,EAX
            add R10D,ECX
            lea R14D,DWORD PTR [RSI+R9*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R9,R9D
            movsxd R14,R14D
            addss XMM7,DWORD PTR [RDX+R14*4]
            mov R14D,DWORD PTR [RBP-2316]
            addss XMM7,DWORD PTR [RDX+R10*4]
            mov R10D,DWORD PTR [RBP-2312]
            cmp R10D,EAX
            cmovg R10D,EAX
            cmp R14D,EAX
            addss XMM7,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R10*1]
            movsxd R9,R9D
            addss XMM2,DWORD PTR [RDX+R9*4]
            mov R9D,R14D
            cmovg R9D,EAX
            add R10D,ECX
            lea R14D,DWORD PTR [RSI+R9*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R9,R9D
            movsxd R14,R14D
            addss XMM2,DWORD PTR [RDX+R14*4]
            mov R14D,DWORD PTR [RBP-2324]
            addss XMM2,DWORD PTR [RDX+R10*4]
            mov R10D,DWORD PTR [RBP-2320]
            cmp R10D,EAX
            cmovg R10D,EAX
            cmp R14D,EAX
            addss XMM2,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R10*1]
            movsxd R9,R9D
            addss XMM6,DWORD PTR [RDX+R9*4]
            mov R9D,R14D
            cmovg R9D,EAX
            add R10D,ECX
            lea R14D,DWORD PTR [RSI+R9*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R9,R9D
            movsxd R14,R14D
            addss XMM6,DWORD PTR [RDX+R14*4]
            addss XMM6,DWORD PTR [RDX+R10*4]
            mov R10D,DWORD PTR [RBP-2336]
            cmp R10D,EAX
            cmovg R10D,EAX
            addss XMM6,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R10*1]
            movsxd R9,R9D
            addss XMM1,DWORD PTR [RDX+R9*4]
            mov R9D,DWORD PTR [RBP-2344]
            cmp R9D,EAX
            cmovg R9D,EAX
            add R10D,ECX
            lea R14D,DWORD PTR [RSI+R9*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R9,R9D
            movsxd R14,R14D
            addss XMM1,DWORD PTR [RDX+R14*4]
            addss XMM1,DWORD PTR [RDX+R10*4]
            mov R10D,DWORD PTR [RBP-2328]
            cmp R10D,EAX
            cmovg R10D,EAX
            addss XMM1,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R10*1]
            movsxd R9,R9D
            addss XMM5,DWORD PTR [RDX+R9*4]
            mov R14D,DWORD PTR [RBP-2348]
            mulss XMM3,DWORD PTR [RIP+.L_428df0]
            mulss XMM7,DWORD PTR [RIP+.L_428df0]
            cmp R14D,EAX
            mov R9D,R14D
            mulss XMM2,DWORD PTR [RIP+.L_428df0]
            cmovg R9D,EAX
            add R10D,ECX
            mulss XMM1,DWORD PTR [RIP+.L_428df0]
            lea R14D,DWORD PTR [RSI+R9*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R9,R9D
            movsxd R14,R14D
            cvtss2sd XMM3,XMM3
            addss XMM5,DWORD PTR [RDX+R14*4]
            mov R14D,DWORD PTR [RBP-2356]
            cvtss2sd XMM7,XMM7
            cvtss2sd XMM2,XMM2
            unpcklpd XMM3,XMM7
            cvtss2sd XMM1,XMM1
            addss XMM5,DWORD PTR [RDX+R10*4]
            mov R10D,DWORD PTR [RBP-2352]
            cmp R10D,EAX
            cmovg R10D,EAX
            cmp R14D,EAX
            addss XMM5,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [R10+RSI*1]
            movsxd R9,R9D
            addss XMM0,DWORD PTR [RDX+R9*4]
            mov R9D,R14D
            cmovg R9D,EAX
            add R10D,ECX
            lea R14D,DWORD PTR [R9+RSI*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R9,R9D
            movsxd R14,R14D
            addss XMM0,DWORD PTR [RDX+R14*4]
            addss XMM0,DWORD PTR [RDX+R10*4]
            mov R10D,DWORD PTR [RBP-2360]
            cmp R10D,EAX
            addss XMM0,DWORD PTR [RDX+R9*4]
            mov R9D,R10D
            cmovg R9D,EAX
            lea R10D,DWORD PTR [R9+RSI*1]
            movsxd R10,R10D
            addss XMM4,DWORD PTR [RDX+R10*4]
            mov R10D,DWORD PTR [RBP-2364]
            mulss XMM0,DWORD PTR [RIP+.L_428df0]
            cmp R10D,EAX
            cmovg R10D,EAX
            add R11D,2
            add RDI,64
            add ESI,R10D
            movsxd RSI,ESI
            addss XMM4,DWORD PTR [RDX+RSI*4]
            lea ESI,DWORD PTR [R9+RCX*1]
            add ECX,R10D
            movsxd RCX,ECX
            cvtss2sd XMM0,XMM0
            movsxd RSI,ESI
            addss XMM4,DWORD PTR [RDX+RSI*4]
            addss XMM4,DWORD PTR [RDX+RCX*4]
            movaps XMMWORD PTR [RDI-64],XMM3
            movss XMM3,DWORD PTR [RIP+.L_428df0]
            mulss XMM3,XMM6
            cvtss2sd XMM3,XMM3
            unpcklpd XMM2,XMM3
            movaps XMMWORD PTR [RDI-48],XMM2
            movss XMM2,DWORD PTR [RIP+.L_428df0]
            mulss XMM2,XMM5
            cvtss2sd XMM2,XMM2
            unpcklpd XMM1,XMM2
            movaps XMMWORD PTR [RDI-32],XMM1
            movss XMM1,DWORD PTR [RIP+.L_428df0]
            mulss XMM1,XMM4
            cvtss2sd XMM1,XMM1
            unpcklpd XMM0,XMM1
            movaps XMMWORD PTR [RDI-16],XMM0
            cmp QWORD PTR [RBP-2384],RDI
            jne .L_425f00

            mov RDI,RBX
            call .L_43bee0

            movsd XMM0,QWORD PTR [RBP-1280]
            lea R14,QWORD PTR [RBP-2048]
            xor R13D,R13D
            subsd XMM0,QWORD PTR [RIP+.L_428de8]
            movsd QWORD PTR [RBP-1280],XMM0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426290:

            movsd XMM0,QWORD PTR [RBX+R13*8]
            call round@PLT

            cvttsd2si EAX,XMM0
            mov WORD PTR [R14+R13*2],AX
            add R13,1
            cmp R13,64
            jne .L_426290

            mov RSI,QWORD PTR [RBP-2280]
            mov R13D,DWORD PTR [RBP-2368]
            mov EAX,DWORD PTR [RSI+352]
            cmp EAX,R13D
            jle .L_426b7b

            cmp R12D,DWORD PTR [RSI+356]
            jge .L_426b76

            imul EAX,R12D
            mov RDX,QWORD PTR [RSI+368]
            movdqa XMM0,XMMWORD PTR [R14]
            add EAX,R13D
            shl EAX,6
            cdqe 
            add RAX,RAX
            add RDX,RAX
            movups XMMWORD PTR [RDX],XMM0
            movdqa XMM0,XMMWORD PTR [R14+16]
            movups XMMWORD PTR [RDX+16],XMM0
            movdqa XMM0,XMMWORD PTR [R14+32]
            movups XMMWORD PTR [RDX+32],XMM0
            movdqa XMM0,XMMWORD PTR [R14+48]
            movups XMMWORD PTR [RDX+48],XMM0
            movdqa XMM0,XMMWORD PTR [R14+64]
            movups XMMWORD PTR [RDX+64],XMM0
            movdqa XMM0,XMMWORD PTR [R14+80]
            movups XMMWORD PTR [RDX+80],XMM0
            movdqa XMM0,XMMWORD PTR [R14+96]
            movups XMMWORD PTR [RDX+96],XMM0
            movdqa XMM0,XMMWORD PTR [R14+112]
            mov R14,RSI
            movups XMMWORD PTR [RDX+112],XMM0
            add RAX,QWORD PTR [RSI+368]
            mov RSI,QWORD PTR [RBP-2392]
            mov RDI,RAX
            call .L_43d9c0

            mov RCX,QWORD PTR [RBP-2392]
            mov RDI,QWORD PTR [RBP-2408]
            mov EDX,R12D
            mov ESI,R13D
            call .L_422d10

            add R13D,1
            cmp DWORD PTR [R14+352],R13D
            mov DWORD PTR [RBP-2368],R13D
            jle .L_42642f

            mov RDI,QWORD PTR [RBP-2280]
            add DWORD PTR [RBP-2288],16
            mov EAX,DWORD PTR [RBP-2288]
            mov R13D,DWORD PTR [RDI+336]
            cmp R13D,EAX
            jle .L_425b75

            mov R8D,DWORD PTR [RDI+340]
            add DWORD PTR [RBP-2296],16
            add DWORD PTR [RBP-2300],16
            add DWORD PTR [RBP-2304],16
            add DWORD PTR [RBP-2312],16
            add DWORD PTR [RBP-2316],16
            add DWORD PTR [RBP-2320],16
            add DWORD PTR [RBP-2324],16
            add DWORD PTR [RBP-2336],16
            add DWORD PTR [RBP-2344],16
            add DWORD PTR [RBP-2328],16
            add DWORD PTR [RBP-2348],16
            add DWORD PTR [RBP-2352],16
            add DWORD PTR [RBP-2356],16
            add DWORD PTR [RBP-2360],16
            add DWORD PTR [RBP-2364],16
            cmp R8D,DWORD PTR [RBP-2372]
            jg .L_425ee0

            jmp .L_425acb
.L_42642f:

            add R12D,1
            jmp .L_425db9
.L_426438:

            mov RAX,QWORD PTR [RBP-2208]
            mov RBX,QWORD PTR [R15+8]
            mov RDX,QWORD PTR [RAX+56]
            mov QWORD PTR [RBP-2384],RAX
            lea RDI,QWORD PTR [RBX+672]
            sub RDX,QWORD PTR [RAX+48]
            mov EAX,DWORD PTR [RBX+672]
            imul EAX,DWORD PTR [RBX+676]
            mov QWORD PTR [RBP-2392],RDI
            sar RDX,2
            cdqe 
            cmp RDX,RAX
            jne .L_425cdc

            mov EDX,2
            mov ESI,2
            call .L_421ef0

            xor R12D,R12D
.L_42648e:

            cmp DWORD PTR [RBX+692],R12D
            jle .L_426b27

            cmp DWORD PTR [RBX+688],0
            jle .L_426b1e

            mov R8D,DWORD PTR [RBX+672]
            mov EAX,R12D
            shl EAX,4
            mov DWORD PTR [RBP-2372],EAX
            test R8D,R8D
            jle .L_425b75

            mov ECX,DWORD PTR [RBX+676]
            cmp ECX,EAX
            jle .L_425acb

            lea RAX,QWORD PTR [RBP-768]
            mov DWORD PTR [RBP-2368],15
            mov DWORD PTR [RBP-2364],14
            mov DWORD PTR [RBP-2360],13
            mov DWORD PTR [RBP-2356],12
            xor R13D,R13D
            mov QWORD PTR [RBP-2280],RAX
            add RAX,512
            mov DWORD PTR [RBP-2352],11
            mov QWORD PTR [RBP-2400],RAX
            lea RAX,QWORD PTR [RBP-128]
            mov DWORD PTR [RBP-2348],10
            mov DWORD PTR [RBP-2328],9
            mov DWORD PTR [RBP-2316],8
            mov DWORD PTR [RBP-2324],7
            mov DWORD PTR [RBP-2336],6
            mov DWORD PTR [RBP-2344],5
            mov DWORD PTR [RBP-2320],4
            mov DWORD PTR [RBP-2312],3
            mov DWORD PTR [RBP-2304],2
            mov DWORD PTR [RBP-2300],1
            mov DWORD PTR [RBP-2296],0
            mov QWORD PTR [RBP-2408],RAX
.L_42659b:

            mov RAX,QWORD PTR [RBP-2384]
            mov RSI,QWORD PTR [RBP-2280]
            lea R14D,DWORD PTR [RCX-1]
            mov R11D,DWORD PTR [RBP-2372]
            mov RDX,QWORD PTR [RAX+48]
            lea EAX,DWORD PTR [R8-1]
            mov RDI,RSI
            nop
.L_4265c0:

            cmp R11D,R14D
            lea ECX,DWORD PTR [R11+1]
            mov ESI,R14D
            cmovle ESI,R11D
            mov R15D,DWORD PTR [RBP-2296]
            imul ESI,R8D
            cmp ECX,R14D
            cmovg ECX,R14D
            pxor XMM3,XMM3
            pxor XMM7,XMM7
            imul ECX,R8D
            cmp R15D,EAX
            cmovg R15D,EAX
            pxor XMM2,XMM2
            lea R9D,DWORD PTR [RSI+R15*1]
            mov R10D,R15D
            mov R15D,DWORD PTR [RBP-2300]
            pxor XMM6,XMM6
            movsxd R9,R9D
            pxor XMM1,XMM1
            addss XMM3,DWORD PTR [RDX+R9*4]
            cmp R15D,EAX
            cmovg R15D,EAX
            add R10D,ECX
            mov R9D,R15D
            lea R15D,DWORD PTR [R15+RSI*1]
            movsxd R10,R10D
            add R9D,ECX
            pxor XMM5,XMM5
            movsxd R15,R15D
            movsxd R9,R9D
            pxor XMM0,XMM0
            addss XMM3,DWORD PTR [RDX+R15*4]
            mov R15D,DWORD PTR [RBP-2304]
            pxor XMM4,XMM4
            cmp R15D,EAX
            cmovg R15D,EAX
            addss XMM3,DWORD PTR [RDX+R10*4]
            mov R10D,R15D
            addss XMM3,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R15*1]
            mov R15D,DWORD PTR [RBP-2312]
            movsxd R9,R9D
            addss XMM7,DWORD PTR [RDX+R9*4]
            cmp R15D,EAX
            cmovg R15D,EAX
            add R10D,ECX
            mov R9D,R15D
            lea R15D,DWORD PTR [RSI+R15*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R15,R15D
            movsxd R9,R9D
            addss XMM7,DWORD PTR [RDX+R15*4]
            mov R15D,DWORD PTR [RBP-2320]
            cmp R15D,EAX
            cmovg R15D,EAX
            addss XMM7,DWORD PTR [RDX+R10*4]
            mov R10D,R15D
            addss XMM7,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R15*1]
            mov R15D,DWORD PTR [RBP-2344]
            movsxd R9,R9D
            addss XMM2,DWORD PTR [RDX+R9*4]
            cmp R15D,EAX
            cmovg R15D,EAX
            add R10D,ECX
            mov R9D,R15D
            lea R15D,DWORD PTR [RSI+R15*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R15,R15D
            movsxd R9,R9D
            addss XMM2,DWORD PTR [RDX+R15*4]
            mov R15D,DWORD PTR [RBP-2336]
            cmp R15D,EAX
            cmovg R15D,EAX
            addss XMM2,DWORD PTR [RDX+R10*4]
            mov R10D,R15D
            addss XMM2,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R15*1]
            mov R15D,DWORD PTR [RBP-2324]
            movsxd R9,R9D
            addss XMM6,DWORD PTR [RDX+R9*4]
            cmp R15D,EAX
            cmovg R15D,EAX
            add R10D,ECX
            mov R9D,R15D
            lea R15D,DWORD PTR [RSI+R15*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R15,R15D
            movsxd R9,R9D
            addss XMM6,DWORD PTR [RDX+R15*4]
            mov R15D,DWORD PTR [RBP-2316]
            cmp R15D,EAX
            cmovg R15D,EAX
            addss XMM6,DWORD PTR [RDX+R10*4]
            mov R10D,R15D
            addss XMM6,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R15*1]
            mov R15D,DWORD PTR [RBP-2328]
            movsxd R9,R9D
            addss XMM1,DWORD PTR [RDX+R9*4]
            cmp R15D,EAX
            cmovg R15D,EAX
            add R10D,ECX
            mov R9D,R15D
            lea R15D,DWORD PTR [RSI+R15*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R15,R15D
            movsxd R9,R9D
            addss XMM1,DWORD PTR [RDX+R15*4]
            mov R15D,DWORD PTR [RBP-2348]
            cmp R15D,EAX
            cmovg R15D,EAX
            addss XMM1,DWORD PTR [RDX+R10*4]
            mov R10D,R15D
            addss XMM1,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R15*1]
            movsxd R9,R9D
            addss XMM5,DWORD PTR [RDX+R9*4]
            mov R15D,DWORD PTR [RBP-2352]
            mulss XMM3,DWORD PTR [RIP+.L_428df0]
            mulss XMM7,DWORD PTR [RIP+.L_428df0]
            cmp R15D,EAX
            mulss XMM2,DWORD PTR [RIP+.L_428df0]
            cmovg R15D,EAX
            add R10D,ECX
            mulss XMM1,DWORD PTR [RIP+.L_428df0]
            mov R9D,R15D
            lea R15D,DWORD PTR [RSI+R15*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R15,R15D
            movsxd R9,R9D
            cvtss2sd XMM3,XMM3
            addss XMM5,DWORD PTR [RDX+R15*4]
            mov R15D,DWORD PTR [RBP-2356]
            cvtss2sd XMM7,XMM7
            cvtss2sd XMM2,XMM2
            unpcklpd XMM3,XMM7
            cvtss2sd XMM1,XMM1
            cmp R15D,EAX
            cmovg R15D,EAX
            addss XMM5,DWORD PTR [RDX+R10*4]
            mov R10D,R15D
            addss XMM5,DWORD PTR [RDX+R9*4]
            lea R9D,DWORD PTR [RSI+R15*1]
            mov R15D,DWORD PTR [RBP-2360]
            movsxd R9,R9D
            addss XMM0,DWORD PTR [RDX+R9*4]
            cmp R15D,EAX
            cmovg R15D,EAX
            add R10D,ECX
            mov R9D,R15D
            lea R15D,DWORD PTR [RSI+R15*1]
            movsxd R10,R10D
            add R9D,ECX
            movsxd R15,R15D
            movsxd R9,R9D
            addss XMM0,DWORD PTR [RDX+R15*4]
            mov R15D,DWORD PTR [RBP-2364]
            cmp R15D,EAX
            cmovg R15D,EAX
            addss XMM0,DWORD PTR [RDX+R10*4]
            lea R10D,DWORD PTR [R15+RSI*1]
            movsxd R10,R10D
            addss XMM4,DWORD PTR [RDX+R10*4]
            addss XMM0,DWORD PTR [RDX+R9*4]
            mov R9D,R15D
            mov R15D,DWORD PTR [RBP-2368]
            cmp R15D,EAX
            cmovg R15D,EAX
            add R11D,2
            add RDI,64
            add ESI,R15D
            movsxd RSI,ESI
            mulss XMM0,DWORD PTR [RIP+.L_428df0]
            addss XMM4,DWORD PTR [RDX+RSI*4]
            lea ESI,DWORD PTR [R9+RCX*1]
            add ECX,R15D
            movsxd RCX,ECX
            movsxd RSI,ESI
            cvtss2sd XMM0,XMM0
            addss XMM4,DWORD PTR [RDX+RSI*4]
            addss XMM4,DWORD PTR [RDX+RCX*4]
            movaps XMMWORD PTR [RDI-64],XMM3
            movss XMM3,DWORD PTR [RIP+.L_428df0]
            mulss XMM3,XMM6
            cvtss2sd XMM3,XMM3
            unpcklpd XMM2,XMM3
            movaps XMMWORD PTR [RDI-48],XMM2
            movss XMM2,DWORD PTR [RIP+.L_428df0]
            mulss XMM2,XMM5
            cvtss2sd XMM2,XMM2
            unpcklpd XMM1,XMM2
            movaps XMMWORD PTR [RDI-32],XMM1
            movss XMM1,DWORD PTR [RIP+.L_428df0]
            mulss XMM1,XMM4
            cvtss2sd XMM1,XMM1
            unpcklpd XMM0,XMM1
            movaps XMMWORD PTR [RDI-16],XMM0
            cmp RDI,QWORD PTR [RBP-2400]
            jne .L_4265c0

            mov RAX,QWORD PTR [RBP-2280]
            mov RDI,RAX
            call .L_43bee0

            movsd XMM0,QWORD PTR [RBP-768]
            mov RAX,QWORD PTR [RBP-2280]
            lea R14,QWORD PTR [RBP-1920]
            xor R15D,R15D
            subsd XMM0,QWORD PTR [RIP+.L_428de8]
            mov QWORD PTR [RBP-2288],RAX
            movsd QWORD PTR [RBP-768],XMM0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_426980:

            mov RAX,QWORD PTR [RBP-2288]
            movsd XMM6,QWORD PTR [RAX+R15*8]
            movapd XMM0,XMM6
            movsd QWORD PTR [RBP-2280],XMM6
            call round@PLT

            cvttsd2si EAX,XMM0
            mov WORD PTR [R14+R15*2],AX
            add R15,1
            cmp R15,64
            jne .L_426980

            mov RAX,QWORD PTR [RBP-2288]
            mov QWORD PTR [RBP-2280],RAX
            mov EAX,DWORD PTR [RBX+688]
            cmp EAX,R13D
            jle .L_426b7b

            cmp R12D,DWORD PTR [RBX+692]
            jge .L_426b76

            imul EAX,R12D
            mov RCX,QWORD PTR [RBX+704]
            mov R15,QWORD PTR [RBP-2408]
            movdqa XMM0,XMMWORD PTR [R14]
            add EAX,R13D
            mov RSI,R15
            shl EAX,6
            cdqe 
            add RAX,RAX
            add RCX,RAX
            movups XMMWORD PTR [RCX],XMM0
            movdqa XMM0,XMMWORD PTR [R14+16]
            movups XMMWORD PTR [RCX+16],XMM0
            movdqa XMM0,XMMWORD PTR [R14+32]
            movups XMMWORD PTR [RCX+32],XMM0
            movdqa XMM0,XMMWORD PTR [R14+48]
            movups XMMWORD PTR [RCX+48],XMM0
            movdqa XMM0,XMMWORD PTR [R14+64]
            movups XMMWORD PTR [RCX+64],XMM0
            movdqa XMM0,XMMWORD PTR [R14+80]
            movups XMMWORD PTR [RCX+80],XMM0
            movdqa XMM0,XMMWORD PTR [R14+96]
            movups XMMWORD PTR [RCX+96],XMM0
            movdqa XMM0,XMMWORD PTR [R14+112]
            movups XMMWORD PTR [RCX+112],XMM0
            add RAX,QWORD PTR [RBX+704]
            mov RDI,RAX
            call .L_43d9c0

            mov RDI,QWORD PTR [RBP-2392]
            mov RCX,R15
            mov EDX,R12D
            mov ESI,R13D
            call .L_422d10
.L_426a70:

            add R13D,1
            cmp DWORD PTR [RBX+688],R13D
            jle .L_426b1e

            add DWORD PTR [RBP-2296],16
            mov R8D,DWORD PTR [RBX+672]
            mov EAX,DWORD PTR [RBP-2296]
            cmp R8D,EAX
            jle .L_425b75

            mov ECX,DWORD PTR [RBX+676]
            add DWORD PTR [RBP-2300],16
            add DWORD PTR [RBP-2304],16
            add DWORD PTR [RBP-2312],16
            add DWORD PTR [RBP-2320],16
            add DWORD PTR [RBP-2344],16
            add DWORD PTR [RBP-2336],16
            add DWORD PTR [RBP-2324],16
            add DWORD PTR [RBP-2316],16
            add DWORD PTR [RBP-2328],16
            add DWORD PTR [RBP-2348],16
            add DWORD PTR [RBP-2352],16
            add DWORD PTR [RBP-2356],16
            add DWORD PTR [RBP-2360],16
            add DWORD PTR [RBP-2364],16
            add DWORD PTR [RBP-2368],16
            cmp ECX,DWORD PTR [RBP-2372]
            jg .L_42659b

            jmp .L_425acb
.L_426b1e:

            add R12D,1
            jmp .L_42648e
.L_426b27:

            mov RAX,QWORD PTR [RBP-2200]
            mov RBX,QWORD PTR [RBP-2208]
            mov R15,RAX
.L_426b38:

            cmp R15,RBX
            je .L_426b50

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_426b4a

            call _ZdlPv@PLT
.L_426b4a:

            add RBX,24
            jmp .L_426b38
.L_426b50:

            mov RDI,QWORD PTR [RBP-2208]
            test RDI,RDI
            je .L_426b61

            call _ZdlPv@PLT
.L_426b61:

            mov RDI,QWORD PTR [RBP-2240]
            test RDI,RDI
            jne .L_425661

            jmp .L_425130
.L_426b76:

            call .L_4015a8
.L_426b7b:

            lea RCX,QWORD PTR [RIP+.L_427840]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427367]
            mov EDX,125
            call __assert_fail@PLT
.L_426b9a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_426ba0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,824
.L_426bb1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+808],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+8]
            cmp DWORD PTR [RAX+8],1
            jne .L_427280

            mov R15,RDI
            mov EDI,DWORD PTR [RAX+12]
            cmp EDI,1
            mov DWORD PTR [RSP+16],EDI
            jne .L_427314

            mov EDX,DWORD PTR [R15]
            movabs RDI,4294967297
            mov R12,RSI
            mov DWORD PTR [RSI],EDX
            mov EDX,DWORD PTR [R15+4]
            mov QWORD PTR [RSI+12],RDI
            mov EDI,DWORD PTR [RAX+360]
            mov DWORD PTR [RSI+4],EDX
            mov ECX,DWORD PTR [RAX+16]
            shl EDI,6
            test EDI,EDI
            mov DWORD PTR [RSI+24],ECX
            mov ESI,DWORD PTR [RAX+20]
            mov DWORD PTR [R12+20],ESI
            jle .L_426c47

            mov RDX,QWORD PTR [RAX+368]
            cmp WORD PTR [RDX],0
            jne .L_426c90

            add RDX,2
            sub EDI,1
            lea RDI,QWORD PTR [RDX+RDI*2]
            jmp .L_426c42
.L_426c37:

            add RDX,2
            cmp WORD PTR [RDX-2],0
            jne .L_426c90
.L_426c42:

            cmp RDI,RDX
            jne .L_426c37
.L_426c47:

            mov EDI,DWORD PTR [RAX+696]
            shl EDI,6
            test EDI,EDI
            jle .L_426c7e

            mov RDX,QWORD PTR [RAX+704]
            cmp WORD PTR [RDX],0
            jne .L_426c90

            add RDX,2
            sub EDI,1
            lea RDI,QWORD PTR [RDX+RDI*2]
            jmp .L_426c79
.L_426c6e:

            add RDX,2
            cmp WORD PTR [RDX-2],0
            jne .L_426c90
.L_426c79:

            cmp RDI,RDX
            jne .L_426c6e
.L_426c7e:

            mov EBX,64
            mov EDX,1
            jmp .L_426d3b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_426c90:

            mov EDI,DWORD PTR [RAX+344]
            mov EDX,1
            mov EBX,192
            mov DWORD PTR [RSP+16],3
            test EDI,EDI
            cmovg EDX,DWORD PTR [RAX+344]
            mov DWORD PTR [R12+12],EDX
            cmp DWORD PTR [RAX+348],EDX
            mov EDI,EDX
            cmovge EDI,DWORD PTR [RAX+348]
            mov DWORD PTR [R12+16],EDI
            cmp DWORD PTR [RAX+352],ECX
            cmovle ECX,DWORD PTR [RAX+352]
            mov DWORD PTR [R12+24],ECX
            cmp DWORD PTR [RAX+356],ESI
            cmovle ESI,DWORD PTR [RAX+356]
            mov DWORD PTR [R12+20],ESI
            cmp DWORD PTR [RAX+680],EDX
            cmovge EDX,DWORD PTR [RAX+680]
            mov DWORD PTR [R12+12],EDX
            cmp DWORD PTR [RAX+684],EDX
            cmovge EDX,DWORD PTR [RAX+684]
            mov DWORD PTR [R12+16],EDX
            cmp DWORD PTR [RAX+688],ECX
            mov EDX,3
            cmovle ECX,DWORD PTR [RAX+688]
            mov DWORD PTR [R12+24],ECX
            cmp DWORD PTR [RAX+692],ESI
            cmovle ESI,DWORD PTR [RAX+692]
            mov DWORD PTR [R12+20],ESI
.L_426d3b:

            mov R13,QWORD PTR [R12+136]
            mov RSI,QWORD PTR [R12+128]
            mov RCX,R13
            sub RCX,RSI
            sar RCX,6
            cmp RCX,RDX
            jb .L_42725c

            jbe .L_426d9a

            add RBX,RSI
            cmp R13,RBX
            je .L_426d92

            mov RBP,RBX
.L_426d6b:

            mov RDI,QWORD PTR [RBP+40]
            test RDI,RDI
            je .L_427222

            add RBP,64
            call _ZdlPv@PLT

            cmp RBP,R13
            jne .L_426d6b
.L_426d86:

            mov RAX,QWORD PTR [R15+8]
            mov RSI,QWORD PTR [R12+128]
.L_426d92:

            mov QWORD PTR [R12+136],RBX
.L_426d9a:

            movdqu XMM0,XMMWORD PTR [RAX+80]
            lea RBX,QWORD PTR [RSP+32]
            xor R14D,R14D
            movaps XMMWORD PTR [RSP+32],XMM0
            mov QWORD PTR [RSP+24],RBX
            movdqu XMM0,XMMWORD PTR [RAX+96]
            movaps XMMWORD PTR [RSP+48],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+112]
            movaps XMMWORD PTR [RSP+64],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+128]
            movaps XMMWORD PTR [RSP+80],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+144]
            movaps XMMWORD PTR [RSP+96],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+160]
            movaps XMMWORD PTR [RSP+112],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+176]
            movaps XMMWORD PTR [RSP+128],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+192]
            movaps XMMWORD PTR [RSP+144],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+208]
            movaps XMMWORD PTR [RSP+160],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+224]
            movaps XMMWORD PTR [RSP+176],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+240]
            movaps XMMWORD PTR [RSP+192],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+256]
            movaps XMMWORD PTR [RSP+208],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+272]
            movaps XMMWORD PTR [RSP+224],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+288]
            movaps XMMWORD PTR [RSP+240],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+304]
            movaps XMMWORD PTR [RSP+256],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+320]
            movaps XMMWORD PTR [RSP+272],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+416]
            movaps XMMWORD PTR [RSP+288],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+432]
            movaps XMMWORD PTR [RBX+272],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+448]
            movaps XMMWORD PTR [RBX+288],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+464]
            movaps XMMWORD PTR [RBX+304],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+480]
            movaps XMMWORD PTR [RBX+320],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+496]
            movaps XMMWORD PTR [RBX+336],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+512]
            movaps XMMWORD PTR [RBX+352],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+528]
            movaps XMMWORD PTR [RBX+368],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+544]
            movaps XMMWORD PTR [RBX+384],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+560]
            movaps XMMWORD PTR [RBX+400],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+576]
            movaps XMMWORD PTR [RBX+416],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+592]
            movaps XMMWORD PTR [RBX+432],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+608]
            movaps XMMWORD PTR [RBX+448],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+624]
            movaps XMMWORD PTR [RBX+464],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+640]
            movaps XMMWORD PTR [RBX+480],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+656]
            movaps XMMWORD PTR [RBX+496],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+752]
            movaps XMMWORD PTR [RSP+544],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+768]
            movaps XMMWORD PTR [RBX+528],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+784]
            movaps XMMWORD PTR [RBX+544],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+800]
            movaps XMMWORD PTR [RBX+560],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+816]
            movaps XMMWORD PTR [RBX+576],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+832]
            movaps XMMWORD PTR [RBX+592],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+848]
            movaps XMMWORD PTR [RBX+608],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+864]
            movaps XMMWORD PTR [RBX+624],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+880]
            movaps XMMWORD PTR [RBX+640],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+896]
            movaps XMMWORD PTR [RBX+656],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+912]
            movaps XMMWORD PTR [RBX+672],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+928]
            movaps XMMWORD PTR [RBX+688],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+944]
            movaps XMMWORD PTR [RBX+704],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+960]
            movaps XMMWORD PTR [RBX+720],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+976]
            movaps XMMWORD PTR [RBX+736],XMM0
            movdqu XMM0,XMMWORD PTR [RAX+992]
            movaps XMMWORD PTR [RBX+752],XMM0
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP],0
.L_42707f:

            mov ECX,DWORD PTR [R12+12]
            mov RDI,QWORD PTR [RSP+8]
            mov RBP,QWORD PTR [RSP]
            add RDI,RAX
            mov EAX,ECX
            cdq 
            shl RBP,6
            idiv DWORD PTR [RDI+8]
            add RBP,RSI
            test EDX,EDX
            jne .L_4272f5

            mov ESI,DWORD PTR [R12+16]
            mov EAX,ESI
            cdq 
            idiv DWORD PTR [RDI+12]
            test EDX,EDX
            jne .L_4272d1

            mov EAX,DWORD PTR [RSP]
            mov DWORD PTR [RBP],EAX
            mov EAX,ECX
            cdq 
            idiv DWORD PTR [RDI+8]
            mov ECX,EAX
            mov DWORD PTR [RBP+4],EAX
            mov EAX,ESI
            cdq 
            mov RSI,QWORD PTR [RBP+40]
            idiv DWORD PTR [RDI+12]
            imul ECX,DWORD PTR [R12+24]
            mov DWORD PTR [RBP+8],EAX
            imul EAX,DWORD PTR [R12+20]
            mov DWORD PTR [RBP+24],ECX
            mov EDX,EAX
            mov DWORD PTR [RBP+28],EAX
            mov EAX,ECX
            imul EAX,EDX
            mov RCX,QWORD PTR [RBP+48]
            mov DWORD PTR [RBP+32],EAX
            sub RCX,RSI
            shl EAX,6
            cdqe 
            sar RCX,1
            cmp RAX,RCX
            ja .L_427238

            jae .L_427114

            lea RAX,QWORD PTR [RSI+RAX*2]
            mov QWORD PTR [RBP+48],RAX
.L_427114:

            test EDX,EDX
            mov R8,QWORD PTR [RDI+32]
            jle .L_42719b

            mov EAX,DWORD PTR [RBP+24]
            xor R10D,R10D
            mov DWORD PTR [RSP+20],EAX
            xor EAX,EAX
.L_427128:

            mov ECX,DWORD PTR [RSP+20]
            test ECX,ECX
            jle .L_427192

            mov R13,QWORD PTR [RSP+8]
            add R13,QWORD PTR [R15+8]
            xor R9D,R9D
            mov R11D,DWORD PTR [R13+20]
.L_427140:

            cmp R11D,R10D
            jle .L_4271d0

            cmp DWORD PTR [R13+16],R9D
            jle .L_4271d0

            xor ECX,ECX
            nop
            nop
            nop
.L_427158:

            movsx EAX,WORD PTR [R8+RCX*1]
            cdq 
            idiv DWORD PTR [RBX+RCX*2]
            test EDX,EDX
            jne .L_427203

            mov WORD PTR [RSI+RCX*1],AX
            add RCX,2
            cmp RCX,128
            jne .L_427158

            sub R8,-128
.L_42717e:

            movsx EAX,WORD PTR [RSI]
            add R9D,1
            sub RSI,-128
            cmp DWORD PTR [RBP+24],R9D
            jg .L_427140

            mov EDX,DWORD PTR [RBP+28]
.L_427192:

            add R10D,1
            cmp R10D,EDX
            jl .L_427128
.L_42719b:

            add QWORD PTR [RSP],1
            add QWORD PTR [RSP+8],336
            add RBX,256
            mov RAX,QWORD PTR [RSP]
            cmp DWORD PTR [RSP+16],EAX
            jle .L_42729f

            mov RAX,QWORD PTR [R15+8]
            mov RSI,QWORD PTR [R12+128]
            jmp .L_42707f
          .byte 0x90
.L_4271d0:

            lea RDI,QWORD PTR [RSI+10]
            mov WORD PTR [RSI],AX
            mov EAX,ESI
            mov QWORD PTR [RSI+2],0
            mov QWORD PTR [RSI+120],0
            and RDI,-8
            sub EAX,EDI
            lea ECX,DWORD PTR [RAX+128]
            mov RAX,R14
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            jmp .L_42717e
.L_427203:

            lea RCX,QWORD PTR [RIP+.L_427680]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427406]
            mov EDX,398
            call __assert_fail@PLT
.L_427222:

            add RBP,64
            cmp R13,RBP
            jne .L_426d6b

            jmp .L_426d86
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_427238:

            sub RAX,RCX
            lea RDI,QWORD PTR [RBP+40]
            mov RSI,RAX
            call .L_406b20

            mov RDI,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RBP+28]
            mov RSI,QWORD PTR [RBP+40]
            add RDI,QWORD PTR [R15+8]
            jmp .L_427114
.L_42725c:

            mov RSI,RDX
            lea RDI,QWORD PTR [R12+128]
            sub RSI,RCX
            call .L_406830

            mov RAX,QWORD PTR [R15+8]
            mov RSI,QWORD PTR [R12+128]
            jmp .L_426d9a
.L_427280:

            lea RCX,QWORD PTR [RIP+.L_427680]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427578]
            mov EDX,349
            call __assert_fail@PLT
.L_42729f:

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R12
            call .L_419e90

            mov RAX,QWORD PTR [RSP+808]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4272f0

            add RSP,824
.L_4272c6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4272d1:

            lea RCX,QWORD PTR [RIP+.L_427680]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4275f0]
            mov EDX,374
            call __assert_fail@PLT
.L_4272f0:

            call __stack_chk_fail@PLT
.L_4272f5:

            lea RCX,QWORD PTR [RIP+.L_427680]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_4275b8]
            mov EDX,373
            call __assert_fail@PLT
.L_427314:

            lea RCX,QWORD PTR [RIP+.L_427680]
            lea RSI,QWORD PTR [RIP+.L_427333]
            lea RDI,QWORD PTR [RIP+.L_427598]
            mov EDX,350
            call __assert_fail@PLT
.L_427333:
          .string "guetzli/output_image.cc"
.L_42734b:
          .string "block_y < height_in_blocks_"
.L_427367:
          .string "block_x < width_in_blocks_"
.L_427382:
          .string "xmin >= 0"
.L_42738c:
          .string "ymin >= 0"
.L_427396:
          .string "xmin < width_"
.L_4273a4:
          .string "ymin < height_"
.L_4273b3:
          .string "factor_x_ == 1"
.L_4273c2:
          .string "factor_y_ == 1"
.L_4273d1:
          .string "x0 < comp->width()"
.L_4273e4:
          .string "y0 < comp->height()"
.L_4273f8:
          .string "f%d%d%d%d%d%d"
.L_427406:
          .string "coeff % quant == 0"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427420:
          .string "Sampling ratio not supported: factor_x = %d factor_y = %d\n"
          .zero 5
.L_427460:
          .string "pixels.size() == comp->width() * comp->height()"
.L_427490:
          .string "width_in_blocks_ <= comp.width_in_blocks"
          .zero 7
.L_4274c0:
          .string "height_in_blocks_ <= comp.height_in_blocks"
          .zero 5
.L_4274f0:
          .string "jpg.max_h_samp_factor % comp.h_samp_factor == 0"
.L_427520:
          .string "jpg.max_v_samp_factor % comp.v_samp_factor == 0"
.L_427550:
          .string "comp.quant_idx < jpg.quant.size()"
          .zero 6
.L_427578:
          .string "components_[0].factor_x() == 1"
          .zero 1
.L_427598:
          .string "components_[0].factor_y() == 1"
          .zero 1
.L_4275b8:
          .string "jpg->max_h_samp_factor % components_[c].factor_x() == 0"
.L_4275f0:
          .string "jpg->max_v_samp_factor % components_[c].factor_y() == 0"
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427630:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+56]
            test RDI,RDI
            je .L_427642

            call _ZdlPv@PLT
.L_427642:

            mov RDI,QWORD PTR [RBX+32]
            test RDI,RDI
            je .L_427658

            pop RBX
            jmp _ZdlPv@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_427658:

            pop RBX
            ret 
.L_42765a:
          .byte 0x76
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x3a
          .byte 0x5f
          .byte 0x4d
          .byte 0x5f
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x61
          .byte 0x75
          .byte 0x6c
          .byte 0x74
          .byte 0x5f
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x90
.L_427680:
          .string "void guetzli::OutputImage::SaveToJpegData(guetzli::JPEGData*) const"
          .zero 28
.L_4276e0:
          .string "void guetzli::{anonymous}::SetDownsampledCoefficients(const std::vector<float>&, int, int, guetzli::OutputImageComponent*)"
          .zero 5
.L_427760:
          .string "void guetzli::OutputImage::CopyFromJpegData(const guetzli::JPEGData&)"
          .zero 26
.L_4277c0:
          .string "void guetzli::OutputImageComponent::CopyFromJpegComponent(const guetzli::JPEGComponent&, int, int, const int*)"
          .zero 17
.L_427840:
          .string "void guetzli::OutputImageComponent::SetCoeffBlock(int, int, const coeff_t*)"
          .zero 20
.L_4278a0:
          .string "void guetzli::OutputImageComponent::ToFloatPixels(float*, int) const"
          .zero 27
.L_427900:
          .string "void guetzli::OutputImageComponent::ToPixels(int, int, int, int, uint8_t*, int) const"
          .zero 10
.L_427960:
          .string "void guetzli::OutputImageComponent::GetCoeffBlock(int, int, guetzli::coeff_t*) const"
          .zero 395
.L_427b40:
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x4
          .byte 0x5
          .byte 0x6
          .byte 0x7
          .byte 0x8
          .byte 0x9
          .byte 0xa
          .byte 0xb
          .byte 0xc
          .byte 0xd
          .byte 0xe
          .byte 0xf
          .byte 0x10
          .byte 0x11
          .byte 0x12
          .byte 0x13
          .byte 0x14
          .byte 0x15
          .byte 0x16
          .byte 0x17
          .byte 0x18
          .byte 0x19
          .byte 0x1a
          .byte 0x1b
          .byte 0x1c
          .byte 0x1d
          .byte 0x1e
          .byte 0x1f
          .byte 0x20
          .byte 0x21
          .byte 0x22
          .byte 0x23
          .byte 0x24
          .byte 0x25
          .byte 0x26
          .byte 0x27
          .byte 0x28
          .byte 0x29
          .byte 0x2a
          .byte 0x2b
          .byte 0x2c
          .byte 0x2d
          .byte 0x2e
          .byte 0x2f
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x3a
          .byte 0x3b
          .byte 0x3c
          .byte 0x3d
          .byte 0x3e
          .byte 0x3f
          .byte 0x40
          .byte 0x41
          .byte 0x42
          .byte 0x43
          .byte 0x44
          .byte 0x45
          .byte 0x46
          .byte 0x47
          .byte 0x48
          .byte 0x49
          .byte 0x4a
          .byte 0x4b
          .byte 0x4c
          .byte 0x4d
          .byte 0x4e
          .byte 0x4f
          .byte 0x50
          .byte 0x51
          .byte 0x52
          .byte 0x53
          .byte 0x54
          .byte 0x55
          .byte 0x56
          .byte 0x57
          .byte 0x58
          .byte 0x59
          .byte 0x5a
          .byte 0x5b
          .byte 0x5c
          .byte 0x5d
          .byte 0x5e
          .byte 0x5f
          .byte 0x60
          .byte 0x61
          .byte 0x62
          .byte 0x63
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x67
          .byte 0x68
          .byte 0x69
          .byte 0x6a
          .byte 0x6b
          .byte 0x6c
          .byte 0x6d
          .byte 0x6e
          .byte 0x6f
          .byte 0x70
          .byte 0x71
          .byte 0x72
          .byte 0x73
          .byte 0x74
          .byte 0x75
          .byte 0x76
          .byte 0x77
          .byte 0x78
          .byte 0x79
          .byte 0x7a
          .byte 0x7b
          .byte 0x7c
          .byte 0x7d
          .byte 0x7e
          .byte 0x7f
          .byte 0x80
          .byte 0x81
          .byte 0x82
          .byte 0x83
          .byte 0x84
          .byte 0x85
          .byte 0x86
          .byte 0x87
          .byte 0x88
          .byte 0x89
          .byte 0x8a
          .byte 0x8b
          .byte 0x8c
          .byte 0x8d
          .byte 0x8e
          .byte 0x8f
          .byte 0x90
          .byte 0x91
          .byte 0x92
          .byte 0x93
          .byte 0x94
          .byte 0x95
          .byte 0x96
          .byte 0x97
          .byte 0x98
          .byte 0x99
          .byte 0x9a
          .byte 0x9b
          .byte 0x9c
          .byte 0x9d
          .byte 0x9e
          .byte 0x9f
          .byte 0xa0
          .byte 0xa1
          .byte 0xa2
          .byte 0xa3
          .byte 0xa4
          .byte 0xa5
          .byte 0xa6
          .byte 0xa7
          .byte 0xa8
          .byte 0xa9
          .byte 0xaa
          .byte 0xab
          .byte 0xac
          .byte 0xad
          .byte 0xae
          .byte 0xaf
          .byte 0xb0
          .byte 0xb1
          .byte 0xb2
          .byte 0xb3
          .byte 0xb4
          .byte 0xb5
          .byte 0xb6
          .byte 0xb7
          .byte 0xb8
          .byte 0xb9
          .byte 0xba
          .byte 0xbb
          .byte 0xbc
          .byte 0xbd
          .byte 0xbe
          .byte 0xbf
          .byte 0xc0
          .byte 0xc1
          .byte 0xc2
          .byte 0xc3
          .byte 0xc4
          .byte 0xc5
          .byte 0xc6
          .byte 0xc7
          .byte 0xc8
          .byte 0xc9
          .byte 0xca
          .byte 0xcb
          .byte 0xcc
          .byte 0xcd
          .byte 0xce
          .byte 0xcf
          .byte 0xd0
          .byte 0xd1
          .byte 0xd2
          .byte 0xd3
          .byte 0xd4
          .byte 0xd5
          .byte 0xd6
          .byte 0xd7
          .byte 0xd8
          .byte 0xd9
          .byte 0xda
          .byte 0xdb
          .byte 0xdc
          .byte 0xdd
          .byte 0xde
          .byte 0xdf
          .byte 0xe0
          .byte 0xe1
          .byte 0xe2
          .byte 0xe3
          .byte 0xe4
          .byte 0xe5
          .byte 0xe6
          .byte 0xe7
          .byte 0xe8
          .byte 0xe9
          .byte 0xea
          .byte 0xeb
          .byte 0xec
          .byte 0xed
          .byte 0xee
          .byte 0xef
          .byte 0xf0
          .byte 0xf1
          .byte 0xf2
          .byte 0xf3
          .byte 0xf4
          .byte 0xf5
          .byte 0xf6
          .byte 0xf7
          .byte 0xf8
          .byte 0xf9
          .byte 0xfa
          .byte 0xfb
          .byte 0xfc
          .byte 0xfd
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_427dc0:

            add BYTE PTR [RBP+887488556],CL
            sub AL,0
            int3 
          .byte 0xdc
          .byte 0x2b
          .byte 0x0
          .byte 0xb2
          .byte 0x84
          .byte 0x2b
          .byte 0x0
          .byte 0x98
          .byte 0x2c
          .byte 0x2b
          .byte 0x0
          .byte 0x7e
          .byte 0xd4
          .byte 0x2a
          .byte 0x0
          .byte 0x64
          .byte 0x7c
          .byte 0x2a
          .byte 0x0
          .byte 0x4a
          .byte 0x24
          .byte 0x2a
          .byte 0x0
          .byte 0x30
          .byte 0xcc
          .byte 0x29
          .byte 0x0
          .byte 0x16
          .byte 0x74
          .byte 0x29
          .byte 0x0
          .byte 0xfc
          .byte 0x1b
          .byte 0x29
          .byte 0x0
          .byte 0xe2
          .byte 0xc3
          .byte 0x28
          .byte 0x0
          .byte 0xc8
          .byte 0x6b
          .byte 0x28
          .byte 0x0
          .byte 0xae
          .byte 0x13
          .byte 0x28
          .byte 0x0
          .byte 0x94
          .byte 0xbb
          .byte 0x27
          .byte 0x0
          .byte 0x7a
          .byte 0x63
          .byte 0x27
          .byte 0x0
          .byte 0x60
          .byte 0xb
          .byte 0x27
          .byte 0x0
          .byte 0x46
          .byte 0xb3
          .byte 0x26
          .byte 0x0
          .byte 0x2c
          .byte 0x5b
          .byte 0x26
          .byte 0x0
          .byte 0x12
          .byte 0x3
          .byte 0x26
          .byte 0x0
          .byte 0xf8
          .byte 0xaa
          .byte 0x25
          .byte 0x0
          .byte 0xde
          .byte 0x52
          .byte 0x25
          .byte 0x0
          .byte 0xc4
          .byte 0xfa
          .byte 0x24
          .byte 0x0
          .byte 0xaa
          .byte 0xa2
          .byte 0x24
          .byte 0x0
          .byte 0x90
          .byte 0x4a
          .byte 0x24
          .byte 0x0
          .byte 0x76
          .byte 0xf2
          .byte 0x23
          .byte 0x0
          .byte 0x5c
          .byte 0x9a
          .byte 0x23
          .byte 0x0
          .byte 0x42
          .byte 0x42
          .byte 0x23
          .byte 0x0
          .byte 0x28
          .byte 0xea
          .byte 0x22
          .byte 0x0
          .byte 0xe
          .byte 0x92
          .byte 0x22
          .byte 0x0
          .byte 0xf4
          .byte 0x39
          .byte 0x22
          .byte 0x0
          .byte 0xda
          .byte 0xe1
          .byte 0x21
          .byte 0x0
          .byte 0xc0
          .byte 0x89
          .byte 0x21
          .byte 0x0
          .byte 0xa6
          .byte 0x31
          .byte 0x21
          .byte 0x0
          .byte 0x8c
          .byte 0xd9
          .byte 0x20
          .byte 0x0
          .byte 0x72
          .byte 0x81
          .byte 0x20
          .byte 0x0
          .byte 0x58
          .byte 0x29
          .byte 0x20
          .byte 0x0
          .byte 0x3e
          .byte 0xd1
          .byte 0x1f
          .byte 0x0
          .byte 0x24
          .byte 0x79
          .byte 0x1f
          .byte 0x0
          .byte 0xa
          .byte 0x21
          .byte 0x1f
          .byte 0x0
          .byte 0xf0
          .byte 0xc8
          .byte 0x1e
          .byte 0x0
          .byte 0xd6
          .byte 0x70
          .byte 0x1e
          .byte 0x0
          .byte 0xbc
          .byte 0x18
          .byte 0x1e
          .byte 0x0
          .byte 0xa2
          .byte 0xc0
          .byte 0x1d
          .byte 0x0
          .byte 0x88
          .byte 0x68
          .byte 0x1d
          .byte 0x0
          .byte 0x6e
          .byte 0x10
          .byte 0x1d
          .byte 0x0
          .byte 0x54
          .byte 0xb8
          .byte 0x1c
          .byte 0x0
          .byte 0x3a
          .byte 0x60
          .byte 0x1c
          .byte 0x0
          .byte 0x20
          .byte 0x8
          .byte 0x1c
          .byte 0x0
          .byte 0x6
          .byte 0xb0
          .byte 0x1b
          .byte 0x0
          .byte 0xec
          .byte 0x57
          .byte 0x1b
          .byte 0x0
          .byte 0xd2
          .byte 0xff
          .byte 0x1a
          .byte 0x0
          .byte 0xb8
          .byte 0xa7
          .byte 0x1a
          .byte 0x0
          .byte 0x9e
          .byte 0x4f
          .byte 0x1a
          .byte 0x0
          .byte 0x84
          .byte 0xf7
          .byte 0x19
          .byte 0x0
          .byte 0x6a
          .byte 0x9f
          .byte 0x19
          .byte 0x0
          .byte 0x50
          .byte 0x47
          .byte 0x19
          .byte 0x0
          .byte 0x36
          .byte 0xef
          .byte 0x18
          .byte 0x0
          .byte 0x1c
          .byte 0x97
          .byte 0x18
          .byte 0x0
          .byte 0x2
          .byte 0x3f
          .byte 0x18
          .byte 0x0
          .byte 0xe8
          .byte 0xe6
          .byte 0x17
          .byte 0x0
          .byte 0xce
          .byte 0x8e
          .byte 0x17
          .byte 0x0
          .byte 0xb4
          .byte 0x36
          .byte 0x17
          .byte 0x0
          .byte 0x9a
          .byte 0xde
          .byte 0x16
          .byte 0x0
          .byte 0x80
          .byte 0x86
          .byte 0x16
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0x16
          .byte 0x0
          .byte 0x4c
          .byte 0xd6
          .byte 0x15
          .byte 0x0
          .byte 0x32
          .byte 0x7e
          .byte 0x15
          .byte 0x0
          .byte 0x18
          .byte 0x26
          .byte 0x15
          .byte 0x0
          .byte 0xfe
          .byte 0xcd
          .byte 0x14
          .byte 0x0
          .byte 0xe4
          .byte 0x75
          .byte 0x14
          .byte 0x0
          .byte 0xca
          .byte 0x1d
          .byte 0x14
          .byte 0x0
          .byte 0xb0
          .byte 0xc5
          .byte 0x13
          .byte 0x0
          .byte 0x96
          .byte 0x6d
          .byte 0x13
          .byte 0x0
          .byte 0x7c
          .byte 0x15
          .byte 0x13
          .byte 0x0
          .byte 0x62
          .byte 0xbd
          .byte 0x12
          .byte 0x0
          .byte 0x48
          .byte 0x65
          .byte 0x12
          .byte 0x0
          .byte 0x2e
          .byte 0xd
          .byte 0x12
          .byte 0x0
          .byte 0x14
          .byte 0xb5
          .byte 0x11
          .byte 0x0
          .byte 0xfa
          .byte 0x5c
          .byte 0x11
          .byte 0x0
          .byte 0xe0
          .byte 0x4
          .byte 0x11
          .byte 0x0
          .byte 0xc6
          .byte 0xac
          .byte 0x10
          .byte 0x0
          .byte 0xac
          .byte 0x54
          .byte 0x10
          .byte 0x0
          .byte 0x92
          .byte 0xfc
          .byte 0xf
          .byte 0x0
          .byte 0x78
          .byte 0xa4
          .byte 0xf
          .byte 0x0
          .byte 0x5e
          .byte 0x4c
          .byte 0xf
          .byte 0x0
          .byte 0x44
          .byte 0xf4
          .byte 0xe
          .byte 0x0
          .byte 0x2a
          .byte 0x9c
          .byte 0xe
          .byte 0x0
          .byte 0x10
          .byte 0x44
          .byte 0xe
          .byte 0x0
          .byte 0xf6
          .byte 0xeb
          .byte 0xd
          .byte 0x0
          .byte 0xdc
          .byte 0x93
          .byte 0xd
          .byte 0x0
          .byte 0xc2
          .byte 0x3b
          .byte 0xd
          .byte 0x0
          .byte 0xa8
          .byte 0xe3
          .byte 0xc
          .byte 0x0
          .byte 0x8e
          .byte 0x8b
          .byte 0xc
          .byte 0x0
          .byte 0x74
          .byte 0x33
          .byte 0xc
          .byte 0x0
          .byte 0x5a
          .byte 0xdb
          .byte 0xb
          .byte 0x0
          .byte 0x40
          .byte 0x83
          .byte 0xb
          .byte 0x0
          .byte 0x26
          .byte 0x2b
          .byte 0xb
          .byte 0x0
          .byte 0xc
          .byte 0xd3
          .byte 0xa
          .byte 0x0
          .byte 0xf2
          .byte 0x7a
          .byte 0xa
          .byte 0x0
          .byte 0xd8
          .byte 0x22
          .byte 0xa
          .byte 0x0
          .byte 0xbe
          .byte 0xca
          .byte 0x9
          .byte 0x0
          .byte 0xa4
          .byte 0x72
          .byte 0x9
          .byte 0x0
          .byte 0x8a
          .byte 0x1a
          .byte 0x9
          .byte 0x0
          .byte 0x70
          .byte 0xc2
          .byte 0x8
          .byte 0x0
          .byte 0x56
          .byte 0x6a
          .byte 0x8
          .byte 0x0
          .byte 0x3c
          .byte 0x12
          .byte 0x8
          .byte 0x0
          .byte 0x22
          .byte 0xba
          .byte 0x7
          .byte 0x0
          .byte 0x8
          .byte 0x62
          .byte 0x7
          .byte 0x0
          .byte 0xee
          .byte 0x9
          .byte 0x7
          .byte 0x0
          .byte 0xd4
          .byte 0xb1
          .byte 0x6
          .byte 0x0
          .byte 0xba
          .byte 0x59
          .byte 0x6
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x6
          .byte 0x0
          .byte 0x86
          .byte 0xa9
          .byte 0x5
          .byte 0x0
          .byte 0x6c
          .byte 0x51
          .byte 0x5
          .byte 0x0
          .byte 0x52
          .byte 0xf9
          .byte 0x4
          .byte 0x0
          .byte 0x38
          .byte 0xa1
          .byte 0x4
          .byte 0x0
          .byte 0x1e
          .byte 0x49
          .byte 0x4
          .byte 0x0
          .byte 0x4
          .byte 0xf1
          .byte 0x3
          .byte 0x0
          .byte 0xea
          .byte 0x98
          .byte 0x3
          .byte 0x0
          .byte 0xd0
          .byte 0x40
          .byte 0x3
          .byte 0x0
          .byte 0xb6
          .byte 0xe8
          .byte 0x2
          .byte 0x0
          .byte 0x9c
          .byte 0x90
          .byte 0x2
          .byte 0x0
          .byte 0x82
          .byte 0x38
          .byte 0x2
          .byte 0x0
          .byte 0x68
          .byte 0xe0
          .byte 0x1
          .byte 0x0
          .byte 0x4e
          .byte 0x88
          .byte 0x1
          .byte 0x0
          .byte 0x34
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x1a
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0xcf
          .byte 0xff
          .byte 0xff
          .byte 0xb2
          .byte 0x77
          .byte 0xff
          .byte 0xff
          .byte 0x98
          .byte 0x1f
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0xc7
          .byte 0xfe
          .byte 0xff
          .byte 0x64
          .byte 0x6f
          .byte 0xfe
          .byte 0xff
          .byte 0x4a
          .byte 0x17
          .byte 0xfe
          .byte 0xff
          .byte 0x30
          .byte 0xbf
          .byte 0xfd
          .byte 0xff
          .byte 0x16
          .byte 0x67
          .byte 0xfd
          .byte 0xff
          .byte 0xfc
          .byte 0xe
          .byte 0xfd
          .byte 0xff
          .byte 0xe2
          .byte 0xb6
          .byte 0xfc
          .byte 0xff
          .byte 0xc8
          .byte 0x5e
          .byte 0xfc
          .byte 0xff
          .byte 0xae
          .byte 0x6
          .byte 0xfc
          .byte 0xff
          .byte 0x94
          .byte 0xae
          .byte 0xfb
          .byte 0xff
          .byte 0x7a
          .byte 0x56
          .byte 0xfb
          .byte 0xff
          .byte 0x60
          .byte 0xfe
          .byte 0xfa
          .byte 0xff
          .byte 0x46
          .byte 0xa6
          .byte 0xfa
          .byte 0xff
          .byte 0x2c
          .byte 0x4e
          .byte 0xfa
          .byte 0xff
          .byte 0x12
          .byte 0xf6
          .byte 0xf9
          .byte 0xff
          .byte 0xf8
          .byte 0x9d
          .byte 0xf9
          .byte 0xff
          .byte 0xde
          .byte 0x45
          .byte 0xf9
          .byte 0xff
          .byte 0xc4
          .byte 0xed
          .byte 0xf8
          .byte 0xff
          .byte 0xaa
          .byte 0x95
          .byte 0xf8
          .byte 0xff
          .byte 0x90
          .byte 0x3d
          .byte 0xf8
          .byte 0xff
          .byte 0x76
          .byte 0xe5
          .byte 0xf7
          .byte 0xff
          .byte 0x5c
          .byte 0x8d
          .byte 0xf7
          .byte 0xff
          .byte 0x42
          .byte 0x35
          .byte 0xf7
          .byte 0xff
          .byte 0x28
          .byte 0xdd
          .byte 0xf6
          .byte 0xff
          .byte 0xe
          .byte 0x85
          .byte 0xf6
          .byte 0xff
          .byte 0xf4
          .byte 0x2c
          .byte 0xf6
          .byte 0xff
          .byte 0xda
          .byte 0xd4
          .byte 0xf5
          .byte 0xff
          .byte 0xc0
          .byte 0x7c
          .byte 0xf5
          .byte 0xff
          .byte 0xa6
          .byte 0x24
          .byte 0xf5
          .byte 0xff
          .byte 0x8c
          .byte 0xcc
          .byte 0xf4
          .byte 0xff
          .byte 0x72
          .byte 0x74
          .byte 0xf4
          .byte 0xff
          .byte 0x58
          .byte 0x1c
          .byte 0xf4
          .byte 0xff
          .byte 0x3e
          .byte 0xc4
          .byte 0xf3
          .byte 0xff
          .byte 0x24
          .byte 0x6c
          .byte 0xf3
          .byte 0xff
          .byte 0xa
          .byte 0x14
          .byte 0xf3
          .byte 0xff
          .byte 0xf0
          .byte 0xbb
          .byte 0xf2
          .byte 0xff
          .byte 0xd6
          .byte 0x63
          .byte 0xf2
          .byte 0xff
          .byte 0xbc
          .byte 0xb
          .byte 0xf2
          .byte 0xff
          .byte 0xa2
          .byte 0xb3
          .byte 0xf1
          .byte 0xff
          .byte 0x88
          .byte 0x5b
          .byte 0xf1
          .byte 0xff
          .byte 0x6e
          .byte 0x3
          .byte 0xf1
          .byte 0xff
          .byte 0x54
          .byte 0xab
          .byte 0xf0
          .byte 0xff
          .byte 0x3a
          .byte 0x53
          .byte 0xf0
          .byte 0xff
          .byte 0x20
          .byte 0xfb
          .byte 0xef
          .byte 0xff
          .byte 0x6
          .byte 0xa3
          .byte 0xef
          .byte 0xff
          .byte 0xec
          .byte 0x4a
          .byte 0xef
          .byte 0xff
          .byte 0xd2
          .byte 0xf2
          .byte 0xee
          .byte 0xff
          .byte 0xb8
          .byte 0x9a
          .byte 0xee
          .byte 0xff
          .byte 0x9e
          .byte 0x42
          .byte 0xee
          .byte 0xff
          .byte 0x84
          .byte 0xea
          .byte 0xed
          .byte 0xff
          .byte 0x6a
          .byte 0x92
          .byte 0xed
          .byte 0xff
          .byte 0x50
          .byte 0x3a
          .byte 0xed
          .byte 0xff
          .byte 0x36
          .byte 0xe2
          .byte 0xec
          .byte 0xff
          .byte 0x1c
          .byte 0x8a
          .byte 0xec
          .byte 0xff
          .byte 0x2
          .byte 0x32
          .byte 0xec
          .byte 0xff
          .byte 0xe8
          .byte 0xd9
          .byte 0xeb
          .byte 0xff
          .byte 0xce
          .byte 0x81
          .byte 0xeb
          .byte 0xff
          .byte 0xb4
          .byte 0x29
          .byte 0xeb
          .byte 0xff
          .byte 0x9a
          .byte 0xd1
          .byte 0xea
          .byte 0xff
          .byte 0x80
          .byte 0x79
          .byte 0xea
          .byte 0xff
          .byte 0x66
          .byte 0x21
          .byte 0xea
          .byte 0xff
          .byte 0x4c
          .byte 0xc9
          .byte 0xe9
          .byte 0xff
          .byte 0x32
          .byte 0x71
          .byte 0xe9
          .byte 0xff
          .byte 0x18
          .byte 0x19
          .byte 0xe9
          .byte 0xff
          .byte 0xfe
          .byte 0xc0
          .byte 0xe8
          .byte 0xff
          .byte 0xe4
          .byte 0x68
          .byte 0xe8
          .byte 0xff
          .byte 0xca
          .byte 0x10
          .byte 0xe8
          .byte 0xff
          .byte 0xb0
          .byte 0xb8
          .byte 0xe7
          .byte 0xff
          .byte 0x96
          .byte 0x60
          .byte 0xe7
          .byte 0xff
          .byte 0x7c
          .byte 0x8
          .byte 0xe7
          .byte 0xff
          .byte 0x62
          .byte 0xb0
          .byte 0xe6
          .byte 0xff
          .byte 0x48
          .byte 0x58
          .byte 0xe6
          .byte 0xff
          .byte 0x2e
          .byte 0x0
          .byte 0xe6
          .byte 0xff
          .byte 0x14
          .byte 0xa8
          .byte 0xe5
          .byte 0xff
          .byte 0xfa
          .byte 0x4f
          .byte 0xe5
          .byte 0xff
          .byte 0xe0
          .byte 0xf7
          .byte 0xe4
          .byte 0xff
          .byte 0xc6
          .byte 0x9f
          .byte 0xe4
          .byte 0xff
          .byte 0xac
          .byte 0x47
          .byte 0xe4
          .byte 0xff
          .byte 0x92
          .byte 0xef
          .byte 0xe3
          .byte 0xff
          .byte 0x78
          .byte 0x97
          .byte 0xe3
          .byte 0xff
          .byte 0x5e
          .byte 0x3f
          .byte 0xe3
          .byte 0xff
          .byte 0x44
          .byte 0xe7
          .byte 0xe2
          .byte 0xff
          .byte 0x2a
          .byte 0x8f
          .byte 0xe2
          .byte 0xff
          .byte 0x10
          .byte 0x37
          .byte 0xe2
          .byte 0xff
          .byte 0xf6
          .byte 0xde
          .byte 0xe1
          .byte 0xff
          .byte 0xdc
          .byte 0x86
          .byte 0xe1
          .byte 0xff
          .byte 0xc2
          .byte 0x2e
          .byte 0xe1
          .byte 0xff
          .byte 0xa8
          .byte 0xd6
          .byte 0xe0
          .byte 0xff
          .byte 0x8e
          .byte 0x7e
          .byte 0xe0
          .byte 0xff
          .byte 0x74
          .byte 0x26
          .byte 0xe0
          .byte 0xff
          .byte 0x5a
          .byte 0xce
          .byte 0xdf
          .byte 0xff
          .byte 0x40
          .byte 0x76
          .byte 0xdf
          .byte 0xff
          .byte 0x26
          .byte 0x1e
          .byte 0xdf
          .byte 0xff
          .byte 0xc
          .byte 0xc6
          .byte 0xde
          .byte 0xff
          .byte 0xf2
          .byte 0x6d
          .byte 0xde
          .byte 0xff
          .byte 0xd8
          .byte 0x15
          .byte 0xde
          .byte 0xff
          .byte 0xbe
          .byte 0xbd
          .byte 0xdd
          .byte 0xff
          .byte 0xa4
          .byte 0x65
          .byte 0xdd
          .byte 0xff
          .byte 0x8a
          .byte 0xd
          .byte 0xdd
          .byte 0xff
          .byte 0x70
          .byte 0xb5
          .byte 0xdc
          .byte 0xff
          .byte 0x56
          .byte 0x5d
          .byte 0xdc
          .byte 0xff
          .byte 0x3c
          .byte 0x5
          .byte 0xdc
          .byte 0xff
          .byte 0x22
          .byte 0xad
          .byte 0xdb
          .byte 0xff
          .byte 0x8
          .byte 0x55
          .byte 0xdb
          .byte 0xff
          .byte 0xee
          .byte 0xfc
          .byte 0xda
          .byte 0xff
          .byte 0xd4
          .byte 0xa4
          .byte 0xda
          .byte 0xff
          .byte 0xba
          .byte 0x4c
          .byte 0xda
          .byte 0xff
          .byte 0xa0
          .byte 0xf4
          .byte 0xd9
          .byte 0xff
          .byte 0x86
          .byte 0x9c
          .byte 0xd9
          .byte 0xff
          .byte 0x6c
          .byte 0x44
          .byte 0xd9
          .byte 0xff
          .byte 0x52
          .byte 0xec
          .byte 0xd8
          .byte 0xff
          .byte 0x38
          .byte 0x94
          .byte 0xd8
          .byte 0xff
          .byte 0x1e
          .byte 0x3c
          .byte 0xd8
          .byte 0xff
          .byte 0x4
          .byte 0xe4
          .byte 0xd7
          .byte 0xff
          .byte 0xea
          .byte 0x8b
          .byte 0xd7
          .byte 0xff
          .byte 0xd0
          .byte 0x33
          .byte 0xd7
          .byte 0xff
          .byte 0xb6
          .byte 0xdb
          .byte 0xd6
          .byte 0xff
          .byte 0x9c
          .byte 0x83
          .byte 0xd6
          .byte 0xff
          .byte 0x82
          .byte 0x2b
          .byte 0xd6
          .byte 0xff
          .byte 0x68
          .byte 0xd3
          .byte 0xd5
          .byte 0xff
          .byte 0x4e
          .byte 0x7b
          .byte 0xd5
          .byte 0xff
          .byte 0x34
          .byte 0x23
          .byte 0xd5
          .byte 0xff
          .byte 0x1a
          .byte 0xcb
          .byte 0xd4
          .byte 0xff
.L_4281c0:
          .byte 0x0
          .byte 0x69
          .byte 0x5b
          .byte 0x0
          .byte 0x2e
          .byte 0xb2
          .byte 0x5a
          .byte 0x0
          .byte 0x5c
          .byte 0xfb
          .byte 0x59
          .byte 0x0
          .byte 0x8a
          .byte 0x44
          .byte 0x59
          .byte 0x0
          .byte 0xb8
          .byte 0x8d
          .byte 0x58
          .byte 0x0
          .byte 0xe6
          .byte 0xd6
          .byte 0x57
          .byte 0x0
          .byte 0x14
          .byte 0x20
          .byte 0x57
          .byte 0x0
          .byte 0x42
          .byte 0x69
          .byte 0x56
          .byte 0x0
          .byte 0x70
          .byte 0xb2
          .byte 0x55
          .byte 0x0
          .byte 0x9e
          .byte 0xfb
          .byte 0x54
          .byte 0x0
          .byte 0xcc
          .byte 0x44
          .byte 0x54
          .byte 0x0
          .byte 0xfa
          .byte 0x8d
          .byte 0x53
          .byte 0x0
          .byte 0x28
          .byte 0xd7
          .byte 0x52
          .byte 0x0
          .byte 0x56
          .byte 0x20
          .byte 0x52
          .byte 0x0
          .byte 0x84
          .byte 0x69
          .byte 0x51
          .byte 0x0
          .byte 0xb2
          .byte 0xb2
          .byte 0x50
          .byte 0x0
          .byte 0xe0
          .byte 0xfb
          .byte 0x4f
          .byte 0x0
          .byte 0xe
          .byte 0x45
          .byte 0x4f
          .byte 0x0
          .byte 0x3c
          .byte 0x8e
          .byte 0x4e
          .byte 0x0
          .byte 0x6a
          .byte 0xd7
          .byte 0x4d
          .byte 0x0
          .byte 0x98
          .byte 0x20
          .byte 0x4d
          .byte 0x0
          .byte 0xc6
          .byte 0x69
          .byte 0x4c
          .byte 0x0
          .byte 0xf4
          .byte 0xb2
          .byte 0x4b
          .byte 0x0
          .byte 0x22
          .byte 0xfc
          .byte 0x4a
          .byte 0x0
          .byte 0x50
          .byte 0x45
          .byte 0x4a
          .byte 0x0
          .byte 0x7e
          .byte 0x8e
          .byte 0x49
          .byte 0x0
          .byte 0xac
          .byte 0xd7
          .byte 0x48
          .byte 0x0
          .byte 0xda
          .byte 0x20
          .byte 0x48
          .byte 0x0
          .byte 0x8
          .byte 0x6a
          .byte 0x47
          .byte 0x0
          .byte 0x36
          .byte 0xb3
          .byte 0x46
          .byte 0x0
          .byte 0x64
          .byte 0xfc
          .byte 0x45
          .byte 0x0
          .byte 0x92
          .byte 0x45
          .byte 0x45
          .byte 0x0
          .byte 0xc0
          .byte 0x8e
          .byte 0x44
          .byte 0x0
          .byte 0xee
          .byte 0xd7
          .byte 0x43
          .byte 0x0
          .byte 0x1c
          .byte 0x21
          .byte 0x43
          .byte 0x0
          .byte 0x4a
          .byte 0x6a
          .byte 0x42
          .byte 0x0
          .byte 0x78
          .byte 0xb3
          .byte 0x41
          .byte 0x0
          .byte 0xa6
          .byte 0xfc
          .byte 0x40
          .byte 0x0
          .byte 0xd4
          .byte 0x45
          .byte 0x40
          .byte 0x0
          .byte 0x2
          .byte 0x8f
          .byte 0x3f
          .byte 0x0
          .byte 0x30
          .byte 0xd8
          .byte 0x3e
          .byte 0x0
          .byte 0x5e
          .byte 0x21
          .byte 0x3e
          .byte 0x0
          .byte 0x8c
          .byte 0x6a
          .byte 0x3d
          .byte 0x0
          .byte 0xba
          .byte 0xb3
          .byte 0x3c
          .byte 0x0
          .byte 0xe8
          .byte 0xfc
          .byte 0x3b
          .byte 0x0
          .byte 0x16
          .byte 0x46
          .byte 0x3b
          .byte 0x0
          .byte 0x44
          .byte 0x8f
          .byte 0x3a
          .byte 0x0
          .byte 0x72
          .byte 0xd8
          .byte 0x39
          .byte 0x0
          .byte 0xa0
          .byte 0x21
          .byte 0x39
          .byte 0x0
          .byte 0xce
          .byte 0x6a
          .byte 0x38
          .byte 0x0
          .byte 0xfc
          .byte 0xb3
          .byte 0x37
          .byte 0x0
          .byte 0x2a
          .byte 0xfd
          .byte 0x36
          .byte 0x0
          .byte 0x58
          .byte 0x46
          .byte 0x36
          .byte 0x0
          .byte 0x86
          .byte 0x8f
          .byte 0x35
          .byte 0x0
          .byte 0xb4
          .byte 0xd8
          .byte 0x34
          .byte 0x0
          .byte 0xe2
          .byte 0x21
          .byte 0x34
          .byte 0x0
          .byte 0x10
          .byte 0x6b
          .byte 0x33
          .byte 0x0
          .byte 0x3e
          .byte 0xb4
          .byte 0x32
          .byte 0x0
          .byte 0x6c
          .byte 0xfd
          .byte 0x31
          .byte 0x0
          .byte 0x9a
          .byte 0x46
          .byte 0x31
          .byte 0x0
          .byte 0xc8
          .byte 0x8f
          .byte 0x30
          .byte 0x0
          .byte 0xf6
          .byte 0xd8
          .byte 0x2f
          .byte 0x0
          .byte 0x24
          .byte 0x22
          .byte 0x2f
          .byte 0x0
          .byte 0x52
          .byte 0x6b
          .byte 0x2e
          .byte 0x0
          .byte 0x80
          .byte 0xb4
          .byte 0x2d
          .byte 0x0
          .byte 0xae
          .byte 0xfd
          .byte 0x2c
          .byte 0x0
          .byte 0xdc
          .byte 0x46
          .byte 0x2c
          .byte 0x0
          .byte 0xa
          .byte 0x90
          .byte 0x2b
          .byte 0x0
          .byte 0x38
          .byte 0xd9
          .byte 0x2a
          .byte 0x0
          .byte 0x66
          .byte 0x22
          .byte 0x2a
          .byte 0x0
          .byte 0x94
          .byte 0x6b
          .byte 0x29
          .byte 0x0
          .byte 0xc2
          .byte 0xb4
          .byte 0x28
          .byte 0x0
          .byte 0xf0
          .byte 0xfd
          .byte 0x27
          .byte 0x0
          .byte 0x1e
          .byte 0x47
          .byte 0x27
          .byte 0x0
          .byte 0x4c
          .byte 0x90
          .byte 0x26
          .byte 0x0
          .byte 0x7a
          .byte 0xd9
          .byte 0x25
          .byte 0x0
          .byte 0xa8
          .byte 0x22
          .byte 0x25
          .byte 0x0
          .byte 0xd6
          .byte 0x6b
          .byte 0x24
          .byte 0x0
          .byte 0x4
          .byte 0xb5
          .byte 0x23
          .byte 0x0
          .byte 0x32
          .byte 0xfe
          .byte 0x22
          .byte 0x0
          .byte 0x60
          .byte 0x47
          .byte 0x22
          .byte 0x0
          .byte 0x8e
          .byte 0x90
          .byte 0x21
          .byte 0x0
          .byte 0xbc
          .byte 0xd9
          .byte 0x20
          .byte 0x0
          .byte 0xea
          .byte 0x22
          .byte 0x20
          .byte 0x0
          .byte 0x18
          .byte 0x6c
          .byte 0x1f
          .byte 0x0
          .byte 0x46
          .byte 0xb5
          .byte 0x1e
          .byte 0x0
          .byte 0x74
          .byte 0xfe
          .byte 0x1d
          .byte 0x0
          .byte 0xa2
          .byte 0x47
          .byte 0x1d
          .byte 0x0
          .byte 0xd0
          .byte 0x90
          .byte 0x1c
          .byte 0x0
          .byte 0xfe
          .byte 0xd9
          .byte 0x1b
          .byte 0x0
          .byte 0x2c
          .byte 0x23
          .byte 0x1b
          .byte 0x0
          .byte 0x5a
          .byte 0x6c
          .byte 0x1a
          .byte 0x0
          .byte 0x88
          .byte 0xb5
          .byte 0x19
          .byte 0x0
          .byte 0xb6
          .byte 0xfe
          .byte 0x18
          .byte 0x0
          .byte 0xe4
          .byte 0x47
          .byte 0x18
          .byte 0x0
          .byte 0x12
          .byte 0x91
          .byte 0x17
          .byte 0x0
          .byte 0x40
          .byte 0xda
          .byte 0x16
          .byte 0x0
          .byte 0x6e
          .byte 0x23
          .byte 0x16
          .byte 0x0
          .byte 0x9c
          .byte 0x6c
          .byte 0x15
          .byte 0x0
          .byte 0xca
          .byte 0xb5
          .byte 0x14
          .byte 0x0
          .byte 0xf8
          .byte 0xfe
          .byte 0x13
          .byte 0x0
          .byte 0x26
          .byte 0x48
          .byte 0x13
          .byte 0x0
          .byte 0x54
          .byte 0x91
          .byte 0x12
          .byte 0x0
          .byte 0x82
          .byte 0xda
          .byte 0x11
          .byte 0x0
          .byte 0xb0
          .byte 0x23
          .byte 0x11
          .byte 0x0
          .byte 0xde
          .byte 0x6c
          .byte 0x10
          .byte 0x0
          .byte 0xc
          .byte 0xb6
          .byte 0xf
          .byte 0x0
          .byte 0x3a
          .byte 0xff
          .byte 0xe
          .byte 0x0
          .byte 0x68
          .byte 0x48
          .byte 0xe
          .byte 0x0
          .byte 0x96
          .byte 0x91
          .byte 0xd
          .byte 0x0
          .byte 0xc4
          .byte 0xda
          .byte 0xc
          .byte 0x0
          .byte 0xf2
          .byte 0x23
          .byte 0xc
          .byte 0x0
          .byte 0x20
          .byte 0x6d
          .byte 0xb
          .byte 0x0
          .byte 0x4e
          .byte 0xb6
          .byte 0xa
          .byte 0x0
          .byte 0x7c
          .byte 0xff
          .byte 0x9
          .byte 0x0
          .byte 0xaa
          .byte 0x48
          .byte 0x9
          .byte 0x0
          .byte 0xd8
          .byte 0x91
          .byte 0x8
          .byte 0x0
          .byte 0x6
          .byte 0xdb
          .byte 0x7
          .byte 0x0
          .byte 0x34
          .byte 0x24
          .byte 0x7
          .byte 0x0
          .byte 0x62
          .byte 0x6d
          .byte 0x6
          .byte 0x0
          .byte 0x90
          .byte 0xb6
          .byte 0x5
          .byte 0x0
          .byte 0xbe
          .byte 0xff
          .byte 0x4
          .byte 0x0
          .byte 0xec
          .byte 0x48
          .byte 0x4
          .byte 0x0
          .byte 0x1a
          .byte 0x92
          .byte 0x3
          .byte 0x0
          .byte 0x48
          .byte 0xdb
          .byte 0x2
          .byte 0x0
          .byte 0x76
          .byte 0x24
          .byte 0x2
          .byte 0x0
          .byte 0xa4
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0xd2
          .byte 0xb6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x49
          .byte 0xff
          .byte 0xff
          .byte 0x5c
          .byte 0x92
          .byte 0xfe
          .byte 0xff
          .byte 0x8a
          .byte 0xdb
          .byte 0xfd
          .byte 0xff
          .byte 0xb8
          .byte 0x24
          .byte 0xfd
          .byte 0xff
          .byte 0xe6
          .byte 0x6d
          .byte 0xfc
          .byte 0xff
          .byte 0x14
          .byte 0xb7
          .byte 0xfb
          .byte 0xff
          .byte 0x42
          .byte 0x0
          .byte 0xfb
          .byte 0xff
          .byte 0x70
          .byte 0x49
          .byte 0xfa
          .byte 0xff
          .byte 0x9e
          .byte 0x92
          .byte 0xf9
          .byte 0xff
          .byte 0xcc
          .byte 0xdb
          .byte 0xf8
          .byte 0xff
          .byte 0xfa
          .byte 0x24
          .byte 0xf8
          .byte 0xff
          .byte 0x28
          .byte 0x6e
          .byte 0xf7
          .byte 0xff
          .byte 0x56
          .byte 0xb7
          .byte 0xf6
          .byte 0xff
          .byte 0x84
          .byte 0x0
          .byte 0xf6
          .byte 0xff
          .byte 0xb2
          .byte 0x49
          .byte 0xf5
          .byte 0xff
          .byte 0xe0
          .byte 0x92
          .byte 0xf4
          .byte 0xff
          .byte 0xe
          .byte 0xdc
          .byte 0xf3
          .byte 0xff
          .byte 0x3c
          .byte 0x25
          .byte 0xf3
          .byte 0xff
          .byte 0x6a
          .byte 0x6e
          .byte 0xf2
          .byte 0xff
          .byte 0x98
          .byte 0xb7
          .byte 0xf1
          .byte 0xff
          .byte 0xc6
          .byte 0x0
          .byte 0xf1
          .byte 0xff
          .byte 0xf4
          .byte 0x49
          .byte 0xf0
          .byte 0xff
          .byte 0x22
          .byte 0x93
          .byte 0xef
          .byte 0xff
          .byte 0x50
          .byte 0xdc
          .byte 0xee
          .byte 0xff
          .byte 0x7e
          .byte 0x25
          .byte 0xee
          .byte 0xff
          .byte 0xac
          .byte 0x6e
          .byte 0xed
          .byte 0xff
          .byte 0xda
          .byte 0xb7
          .byte 0xec
          .byte 0xff
          .byte 0x8
          .byte 0x1
          .byte 0xec
          .byte 0xff
          .byte 0x36
          .byte 0x4a
          .byte 0xeb
          .byte 0xff
          .byte 0x64
          .byte 0x93
          .byte 0xea
          .byte 0xff
          .byte 0x92
          .byte 0xdc
          .byte 0xe9
          .byte 0xff
          .byte 0xc0
          .byte 0x25
          .byte 0xe9
          .byte 0xff
          .byte 0xee
          .byte 0x6e
          .byte 0xe8
          .byte 0xff
          .byte 0x1c
          .byte 0xb8
          .byte 0xe7
          .byte 0xff
          .byte 0x4a
          .byte 0x1
          .byte 0xe7
          .byte 0xff
          .byte 0x78
          .byte 0x4a
          .byte 0xe6
          .byte 0xff
          .byte 0xa6
          .byte 0x93
          .byte 0xe5
          .byte 0xff
          .byte 0xd4
          .byte 0xdc
          .byte 0xe4
          .byte 0xff
          .byte 0x2
          .byte 0x26
          .byte 0xe4
          .byte 0xff
          .byte 0x30
          .byte 0x6f
          .byte 0xe3
          .byte 0xff
          .byte 0x5e
          .byte 0xb8
          .byte 0xe2
          .byte 0xff
          .byte 0x8c
          .byte 0x1
          .byte 0xe2
          .byte 0xff
          .byte 0xba
          .byte 0x4a
          .byte 0xe1
          .byte 0xff
          .byte 0xe8
          .byte 0x93
          .byte 0xe0
          .byte 0xff
          .byte 0x16
          .byte 0xdd
          .byte 0xdf
          .byte 0xff
          .byte 0x44
          .byte 0x26
          .byte 0xdf
          .byte 0xff
          .byte 0x72
          .byte 0x6f
          .byte 0xde
          .byte 0xff
          .byte 0xa0
          .byte 0xb8
          .byte 0xdd
          .byte 0xff
          .byte 0xce
          .byte 0x1
          .byte 0xdd
          .byte 0xff
          .byte 0xfc
          .byte 0x4a
          .byte 0xdc
          .byte 0xff
          .byte 0x2a
          .byte 0x94
          .byte 0xdb
          .byte 0xff
          .byte 0x58
          .byte 0xdd
          .byte 0xda
          .byte 0xff
          .byte 0x86
          .byte 0x26
          .byte 0xda
          .byte 0xff
          .byte 0xb4
          .byte 0x6f
          .byte 0xd9
          .byte 0xff
          .byte 0xe2
          .byte 0xb8
          .byte 0xd8
          .byte 0xff
          .byte 0x10
          .byte 0x2
          .byte 0xd8
          .byte 0xff
          .byte 0x3e
          .byte 0x4b
          .byte 0xd7
          .byte 0xff
          .byte 0x6c
          .byte 0x94
          .byte 0xd6
          .byte 0xff
          .byte 0x9a
          .byte 0xdd
          .byte 0xd5
          .byte 0xff
          .byte 0xc8
          .byte 0x26
          .byte 0xd5
          .byte 0xff
          .byte 0xf6
          .byte 0x6f
          .byte 0xd4
          .byte 0xff
          .byte 0x24
          .byte 0xb9
          .byte 0xd3
          .byte 0xff
          .byte 0x52
          .byte 0x2
          .byte 0xd3
          .byte 0xff
          .byte 0x80
          .byte 0x4b
          .byte 0xd2
          .byte 0xff
          .byte 0xae
          .byte 0x94
          .byte 0xd1
          .byte 0xff
          .byte 0xdc
          .byte 0xdd
          .byte 0xd0
          .byte 0xff
          .byte 0xa
          .byte 0x27
          .byte 0xd0
          .byte 0xff
          .byte 0x38
          .byte 0x70
          .byte 0xcf
          .byte 0xff
          .byte 0x66
          .byte 0xb9
          .byte 0xce
          .byte 0xff
          .byte 0x94
          .byte 0x2
          .byte 0xce
          .byte 0xff
          .byte 0xc2
          .byte 0x4b
          .byte 0xcd

            push RAX
            xchg ESP,EAX
            int3 

            call QWORD PTR [RSI]
          .byte 0xde
          .byte 0xcb
          .byte 0xff
          .byte 0x4c
          .byte 0x27
          .byte 0xcb
          .byte 0xff
          .byte 0x7a
          .byte 0x70
          .byte 0xca
          .byte 0xff
          .byte 0xa8
          .byte 0xb9
          .byte 0xc9
          .byte 0xff
          .byte 0xd6
          .byte 0x2
          .byte 0xc9
          .byte 0xff
          .byte 0x4
          .byte 0x4c
          .byte 0xc8
          .byte 0xff
          .byte 0x32
          .byte 0x95
          .byte 0xc7
          .byte 0xff
          .byte 0x60
          .byte 0xde
          .byte 0xc6
          .byte 0xff
          .byte 0x8e
          .byte 0x27
          .byte 0xc6
          .byte 0xff
          .byte 0xbc
          .byte 0x70
          .byte 0xc5
          .byte 0xff
          .byte 0xea
          .byte 0xb9
          .byte 0xc4
          .byte 0xff
          .byte 0x18
          .byte 0x3
          .byte 0xc4
          .byte 0xff
          .byte 0x46
          .byte 0x4c
          .byte 0xc3
          .byte 0xff
          .byte 0x74
          .byte 0x95
          .byte 0xc2
          .byte 0xff
          .byte 0xa2
          .byte 0xde
          .byte 0xc1
          .byte 0xff
          .byte 0xd0
          .byte 0x27
          .byte 0xc1
          .byte 0xff
          .byte 0xfe
          .byte 0x70
          .byte 0xc0
          .byte 0xff
          .byte 0x2c
          .byte 0xba
          .byte 0xbf
          .byte 0xff
          .byte 0x5a
          .byte 0x3
          .byte 0xbf
          .byte 0xff
          .byte 0x88
          .byte 0x4c
          .byte 0xbe
          .byte 0xff
          .byte 0xb6
          .byte 0x95
          .byte 0xbd
          .byte 0xff
          .byte 0xe4
          .byte 0xde
          .byte 0xbc
          .byte 0xff
          .byte 0x12
          .byte 0x28
          .byte 0xbc
          .byte 0xff
          .byte 0x40
          .byte 0x71
          .byte 0xbb
          .byte 0xff
          .byte 0x6e
          .byte 0xba
          .byte 0xba
          .byte 0xff
          .byte 0x9c
          .byte 0x3
          .byte 0xba
          .byte 0xff
          .byte 0xca
          .byte 0x4c
          .byte 0xb9
          .byte 0xff
          .byte 0xf8
          .byte 0x95
          .byte 0xb8
          .byte 0xff
          .byte 0x26
          .byte 0xdf
          .byte 0xb7
          .byte 0xff
          .byte 0x54
          .byte 0x28
          .byte 0xb7
          .byte 0xff
          .byte 0x82
          .byte 0x71
          .byte 0xb6
          .byte 0xff
          .byte 0xb0
          .byte 0xba
          .byte 0xb5
          .byte 0xff
          .byte 0xde
          .byte 0x3
          .byte 0xb5
          .byte 0xff
          .byte 0xc
          .byte 0x4d
          .byte 0xb4
          .byte 0xff
          .byte 0x3a
          .byte 0x96
          .byte 0xb3
          .byte 0xff
          .byte 0x68
          .byte 0xdf
          .byte 0xb2
          .byte 0xff
          .byte 0x96
          .byte 0x28
          .byte 0xb2
          .byte 0xff
          .byte 0xc4
          .byte 0x71
          .byte 0xb1
          .byte 0xff
          .byte 0xf2
          .byte 0xba
          .byte 0xb0
          .byte 0xff
          .byte 0x20
          .byte 0x4
          .byte 0xb0
          .byte 0xff
          .byte 0x4e
          .byte 0x4d
          .byte 0xaf
          .byte 0xff
          .byte 0x7c
          .byte 0x96
          .byte 0xae
          .byte 0xff
          .byte 0xaa
          .byte 0xdf
          .byte 0xad
          .byte 0xff
          .byte 0xd8
          .byte 0x28
          .byte 0xad
          .byte 0xff
          .byte 0x6
          .byte 0x72
          .byte 0xac
          .byte 0xff
          .byte 0x34
          .byte 0xbb
          .byte 0xab
          .byte 0xff
          .byte 0x62
          .byte 0x4
          .byte 0xab
          .byte 0xff
          .byte 0x90
          .byte 0x4d
          .byte 0xaa
          .byte 0xff
          .byte 0xbe
          .byte 0x96
          .byte 0xa9
          .byte 0xff
          .byte 0xec
          .byte 0xdf
          .byte 0xa8
          .byte 0xff
          .byte 0x1a
          .byte 0x29
          .byte 0xa8
          .byte 0xff
          .byte 0x48
          .byte 0x72
          .byte 0xa7
          .byte 0xff
          .byte 0x76
          .byte 0xbb
          .byte 0xa6
          .byte 0xff
          .byte 0xa4
          .byte 0x4
          .byte 0xa6
          .byte 0xff
          .byte 0xd2
          .byte 0x4d
          .byte 0xa5
          .byte 0xff
.L_4285c0:
          .byte 0x1d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x21
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x22
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x24
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x26
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x28
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x2a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x2b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x2d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x2f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x31
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x32
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x34
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x36
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x38
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x3f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x41
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x42
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x44
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x46
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x48
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x49
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x4b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x4d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x4f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x51
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x52
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x54
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x56
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x58
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x59
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x61
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x62
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x64
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x66
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x68
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x69
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x70
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x72
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x74
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x76
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x78
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x79
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x82
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x84
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x86
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x88
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x89
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x90
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x92
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x94
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x96
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x97
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x99
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xab
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xad
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xae
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbd
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcd
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xce
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdd
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xde
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xeb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xed
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xee
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfc
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4289c0:
          .byte 0x4d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x4e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x4f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x51
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x52
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x54
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x55
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x56
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x58
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x59
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5c
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x5f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x60
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x62
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x63
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x64
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x66
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x67
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x69
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x6e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x70
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x71
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x72
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x74
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x75
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x77
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x78
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x79
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7c
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x80
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x82
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x83
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x85
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x86
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x87
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x89
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8c
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8d
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x8e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x90
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x91
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x93
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x94
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x95
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x97
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x98
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9a
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9b
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9c
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9e
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x9f
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa3
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xa9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xaa
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xac
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xad
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xaf
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb3
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xb8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xba
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbd
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xbe
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xc9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcc
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xce
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xcf
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd3
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xd9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xda
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdc
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xdd
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xde
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe3
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe4
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe7
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xe8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xea
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xeb
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xec
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xee
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xef
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf1
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf2
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf3
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf5
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf6
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf8
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xf9
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfa
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfc
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xfd
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428dc0:
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x8
.L_428dd0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428de0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x40
.L_428de8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x40
.L_428df0:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3e
.L_428df4:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
.L_428df8:
          .byte 0x66
          .byte 0x66
          .byte 0xa6
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428e00:

            sub RSP,40
.L_428e04:

            mov RCX,QWORD PTR [RDX]
            mov R8,QWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            mov RDX,QWORD PTR [RDX+8]
            mov RAX,QWORD PTR [RSI+8]
            sub RDX,RCX
            sub RAX,R8
            sar RDX,2
            sar RAX,2
            cmp RDX,RAX
            jne .L_428ed3

            mov RSI,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            sub RAX,RSI
            sar RAX,2
            cmp RDX,RAX
            jne .L_428ef7

            xor EAX,EAX
            test RDX,RDX
            movss XMM2,DWORD PTR [RIP+.L_42dc1c]
            pxor XMM3,XMM3
            je .L_428eaa

            nop
            nop
            nop
            nop
            nop
.L_428e68:

            movss XMM1,DWORD PTR [R8+RAX*4]
            subss XMM1,DWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RCX+RAX*4]
            movss DWORD PTR [RSP+20],XMM2
            subss XMM0,XMM1
            ucomiss XMM2,XMM0
            movss DWORD PTR [RSP+12],XMM0
            jbe .L_428ec0

            ucomiss XMM0,XMM3
            mov DWORD PTR [RSP+16],0
            ja .L_428ec3

            mov DWORD PTR [RCX+RAX*4],0
            add RAX,1
            cmp RDX,RAX
            jne .L_428e68
.L_428eaa:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_428ef2

            add RSP,40
.L_428ebe:

            ret 
          .byte 0x90
.L_428ec0:

            movaps XMM0,XMM2
.L_428ec3:

            movss DWORD PTR [RCX+RAX*4],XMM0
            add RAX,1
            cmp RDX,RAX
            jne .L_428e68

            jmp .L_428eaa
.L_428ed3:

            lea RCX,QWORD PTR [RIP+.L_42dac0]
            lea RSI,QWORD PTR [RIP+.L_42d380]
            lea RDI,QWORD PTR [RIP+.L_42d3a8]
            mov EDX,442
            call __assert_fail@PLT
.L_428ef2:

            call __stack_chk_fail@PLT
.L_428ef7:

            lea RCX,QWORD PTR [RIP+.L_42dac0]
            lea RSI,QWORD PTR [RIP+.L_42d380]
            lea RDI,QWORD PTR [RIP+.L_42d3d0]
            mov EDX,443
            call __assert_fail@PLT
.L_428f16:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428f20:

            lea EAX,DWORD PTR [RDX+1]
            push R15
            push R14
            push R13
            push R12
            mov R13D,ECX
            push RBP
            mov EBP,EAX
            push RBX
            shr EBP,31
            mov R12D,EDX
            add EBP,EAX
            lea EAX,DWORD PTR [RCX+1]
            sub RSP,40
.L_428f41:

            sar EBP,1
            mov ECX,EAX
            mov EDX,EBP
            shr ECX,31
            add ECX,EAX
            mov RAX,QWORD PTR [RSI+8]
            sub RAX,QWORD PTR [RSI]
            sar ECX,1
            imul EDX,ECX
            sar RAX,2
            movsxd RDX,EDX
            cmp RDX,RAX
            jne .L_4290f0

            mov EDX,R12D
            mov RBX,RDI
            mov R15,RSI
            imul EDX,R13D
            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            movsxd RDX,EDX
            test RDX,RDX
            je .L_4290e0

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_4290eb

            lea R14,QWORD PTR [RDX*4]
            mov DWORD PTR [RSP+16],ECX
            mov RDI,R14
            call _Znwm@PLT

            lea R9,QWORD PTR [RAX+R14*1]
            mov QWORD PTR [RBX],RAX
            mov RDX,R14
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RBX+16],R9
            mov QWORD PTR [RSP+8],R9
            call memset@PLT

            mov ECX,DWORD PTR [RSP+16]
            mov R9,QWORD PTR [RSP+8]
            mov R8,RAX
.L_428fe8:

            test ECX,ECX
            mov QWORD PTR [RBX+8],R9
            jg .L_429008
.L_428ff0:

            add RSP,40
.L_428ff4:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429008:

            test EBP,EBP
            jle .L_428ff0

            lea EAX,DWORD PTR [RCX+RCX*1]
            lea R10D,DWORD PTR [R12-1]
            xor R9D,R9D
            sub R13D,1
            mov DWORD PTR [RSP+28],EAX
            mov RAX,QWORD PTR [R15]
            xor R15D,R15D
            mov QWORD PTR [RSP+16],RAX
            lea EAX,DWORD PTR [RBP+RBP*1]
            mov DWORD PTR [RSP+8],EAX
.L_429032:

            cmp R9D,R13D
            lea EAX,DWORD PTR [R9+1]
            mov R11D,R13D
            cmovle R11D,R9D
            mov RSI,QWORD PTR [RSP+16]
            imul R11D,R12D
            cmp EAX,R13D
            cmovg EAX,R13D
            mov EDX,EAX
            movsxd RAX,R15D
            imul EDX,R12D
            lea RDI,QWORD PTR [RSI+RAX*4]
            xor ESI,ESI
.L_42905f:

            cmp ESI,R10D
            mov ECX,R10D
            cmovle ECX,ESI
            movss XMM0,DWORD PTR [RDI]
            lea EAX,DWORD PTR [R11+RCX*1]
            cdqe 
            movss DWORD PTR [R8+RAX*4],XMM0
            lea EAX,DWORD PTR [RSI+1]
            cmp EAX,R10D
            movss XMM0,DWORD PTR [RDI]
            cmovg EAX,R10D
            add ECX,EDX
            add ESI,2
            lea R14D,DWORD PTR [RAX+R11*1]
            movsxd RCX,ECX
            add EAX,EDX
            add RDI,4
            cdqe 
            movsxd R14,R14D
            movss DWORD PTR [R8+R14*4],XMM0
            movss XMM0,DWORD PTR [RDI-4]
            movss DWORD PTR [R8+RCX*4],XMM0
            movss XMM0,DWORD PTR [RDI-4]
            cmp ESI,DWORD PTR [RSP+8]
            movss DWORD PTR [R8+RAX*4],XMM0
            jne .L_42905f

            add R15D,EBP
            add R9D,2
            cmp DWORD PTR [RSP+28],R9D
            je .L_428ff0

            jmp .L_429032
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4290e0:

            xor R8D,R8D
            xor R9D,R9D
            jmp .L_428fe8
.L_4290eb:

            call _ZSt17__throw_bad_allocv@PLT
.L_4290f0:

            lea RCX,QWORD PTR [RIP+.L_42da60]
            lea RSI,QWORD PTR [RIP+.L_42d380]
            lea RDI,QWORD PTR [RIP+.L_42d414]
            mov EDX,388
            call __assert_fail@PLT
.L_42910f:

            nop
.L_429110:

            push R14
            push R13
            movabs RDX,-6148914691236517205
            push R12
            push RBP
            push RBX
            sub RSP,16
.L_429126:

            mov RCX,QWORD PTR [RSI+8]
            sub RCX,QWORD PTR [RSI]
            sar RCX,2
            mov RAX,RCX
            mul RDX
            shr RDX,1
            lea RAX,QWORD PTR [RDX+RDX*2]
            cmp RCX,RAX
            jne .L_4292dc

            test RDX,RDX
            mov R13,RDI
            mov R12,RSI
            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            je .L_4292d0

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_4292d7

            lea RBX,QWORD PTR [RDX*4]
            mov RDI,RBX
            call _Znwm@PLT

            lea RBP,QWORD PTR [RAX+RBX*1]
            mov QWORD PTR [R13],RAX
            mov RDX,RBX
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [R13+16],RBP
            call memset@PLT
.L_4291a9:

            mov QWORD PTR [R13+8],RBP
            mov RDX,QWORD PTR [R12]
            cmp RDX,QWORD PTR [R12+8]
            je .L_4292b9

            xor EBP,EBP
            xor EBX,EBX
.L_4291c0:

            movss XMM0,DWORD PTR [RDX+RBP*1+8]
            divss XMM0,DWORD PTR [RIP+.L_42dc1c]
            movsd XMM1,QWORD PTR [RIP+.L_42dc70]
            cvtss2sd XMM0,XMM0
            call pow@PLT

            mov RAX,QWORD PTR [R12]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_42dc70]
            movss XMM0,DWORD PTR [RAX+RBP*1+4]
            divss XMM0,DWORD PTR [RIP+.L_42dc1c]
            cvtss2sd XMM0,XMM0
            call pow@PLT

            mov RAX,QWORD PTR [R12]
            movsd QWORD PTR [RSP],XMM0
            movsd XMM1,QWORD PTR [RIP+.L_42dc70]
            movss XMM0,DWORD PTR [RAX+RBP*1]
            add RBP,12
            divss XMM0,DWORD PTR [RIP+.L_42dc1c]
            cvtss2sd XMM0,XMM0
            call pow@PLT

            cvtsd2ss XMM0,XMM0
            pxor XMM1,XMM1
            mov RAX,QWORD PTR [R13]
            mulss XMM0,DWORD PTR [RIP+.L_42dc20]
            cvtsd2ss XMM1,QWORD PTR [RSP]
            mulss XMM1,DWORD PTR [RIP+.L_42dc24]
            lea R14,QWORD PTR [RAX+RBX*4]
            add RBX,1
            addss XMM0,XMM1
            pxor XMM1,XMM1
            cvtsd2ss XMM1,QWORD PTR [RSP+8]
            mulss XMM1,DWORD PTR [RIP+.L_42dc28]
            addss XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_42dc78]
            cvtss2sd XMM0,XMM0
            call pow@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_42dc80]
            mov RDX,QWORD PTR [R12]
            lea RCX,QWORD PTR [RBX+RBX*2]
            pxor XMM4,XMM4
            mov RAX,QWORD PTR [R12+8]
            sub RAX,RDX
            sar RAX,2
            cvtsd2ss XMM4,XMM0
            cmp RCX,RAX
            movss DWORD PTR [R14],XMM4
            jb .L_4291c0
.L_4292b9:

            add RSP,16
.L_4292bd:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4292d0:

            xor EBP,EBP
            jmp .L_4291a9
.L_4292d7:

            call _ZSt17__throw_bad_allocv@PLT
.L_4292dc:

            lea RCX,QWORD PTR [RIP+.L_42dbc0]
            lea RSI,QWORD PTR [RIP+.L_42d380]
            lea RDI,QWORD PTR [RIP+.L_42d42b]
            mov EDX,322
            call __assert_fail@PLT
.L_4292fb:

            nop
            nop
            nop
            nop
            nop
.L_429300:

            push R15
            push R14
            push R13
            push R12
            mov R12D,EDX
            mov EDX,ECX
            push RBP
            push RBX
            imul EDX,R12D
            mov RBX,RSI
            sub RSP,152
.L_42931d:

            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            movsxd RDX,EDX
            mov QWORD PTR [RSP+120],RDI
            mov DWORD PTR [RSP+60],ECX
            test RDX,RDX
            mov QWORD PTR [RDI+16],0
            je .L_429750

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_429764

            lea RBP,QWORD PTR [RDX*4]
            mov RDI,RBP
            call _Znwm@PLT

            mov RDI,RAX
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [RSP+120]
            lea R13,QWORD PTR [RDI+RBP*1]
            mov RDX,RBP
            xor ESI,ESI
            mov QWORD PTR [RAX],RDI
            mov QWORD PTR [RAX+16],R13
            call memset@PLT

            mov RAX,QWORD PTR [RSP+120]
.L_4293a6:

            mov EDI,DWORD PTR [RSP+60]
            mov QWORD PTR [RAX+8],R13
            test EDI,EDI
            jle .L_42972b

            test R12D,R12D
            jle .L_42972b

            lea EAX,DWORD PTR [R12+R12*1]
            lea R10D,DWORD PTR [RDI-1]
            lea R13D,DWORD PTR [R12-1]
            mov RBP,QWORD PTR [RBX]
            mov DWORD PTR [RSP+76],R12D
            xor R11D,R11D
            mov DWORD PTR [RSP+100],EAX
            cdqe 
            mov DWORD PTR [RSP+36],1
            shl RAX,2
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [RSP+24]
            movss XMM2,DWORD PTR [RIP+.L_42dc2c]
            movss XMM4,DWORD PTR [RIP+.L_42dc30]
            mov QWORD PTR [RSP+40],RAX
            mov EAX,R10D
            and EAX,4294967294
            movss XMM3,DWORD PTR [RIP+.L_42dc34]
            add EAX,3
            mov DWORD PTR [RSP+96],EAX
            lea RAX,QWORD PTR [RSP+132]
            mov QWORD PTR [RSP+112],RAX
            lea RAX,QWORD PTR [RSP+128]
            mov QWORD PTR [RSP+104],RAX
            mov EAX,R13D
            and EAX,4294967294
            add EAX,2
            mov DWORD PTR [RSP+64],EAX
            nop
            nop
            nop
.L_429450:

            mov EDI,DWORD PTR [RSP+36]
            mov RCX,QWORD PTR [RSP+112]
            mov R8D,4294967294
            lea EAX,DWORD PTR [RDI-3]
            test EAX,EAX
            mov DWORD PTR [RSP+48],EAX
            mov RAX,QWORD PTR [RSP+104]
            mov R9,RAX
            cmovg R9,RCX
            add EDI,1
            test EDI,EDI
            mov DWORD PTR [RSP+52],EDI
            cmovg RAX,RCX
            xor EDI,EDI
            xor ECX,ECX
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+80]
            add RAX,RBP
            mov QWORD PTR [RSP+8],RAX
            lea EAX,DWORD PTR [R11-1]
            mov DWORD PTR [RSP+68],EAX
            mov EAX,DWORD PTR [RSP+76]
            lea EBX,DWORD PTR [RAX+R8*1]
            sub EAX,1
            mov DWORD PTR [RSP+72],EAX
            mov DWORD PTR [RSP+56],EBX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4294b8:

            test R8D,R8D
            mov EBX,DWORD PTR [RSP+48]
            mov EAX,0
            cmovns EAX,R8D
            mov DWORD PTR [RSP+128],0
            mov EDX,R10D
            cmp EAX,R13D
            cmovg EAX,R13D
            mov DWORD PTR [RSP+132],EBX
            cmp DWORD PTR [R9],R10D
            cmovle EDX,DWORD PTR [R9]
            lea ESI,DWORD PTR [RAX+R11*1]
            mov RBX,QWORD PTR [RSP+8]
            movsxd RSI,ESI
            movss XMM1,DWORD PTR [RBP+RSI*4]
            imul EDX,R12D
            movss XMM0,DWORD PTR [RBX+RDI*1]
            mulss XMM1,XMM2
            lea EBX,DWORD PTR [RCX+1]
            mulss XMM0,XMM4
            lea ESI,DWORD PTR [RDX+RCX*1]
            add EAX,EDX
            cmp R12D,EBX
            cdqe 
            lea EDX,DWORD PTR [RCX+2]
            movsxd RSI,ESI
            addss XMM0,XMM1
            movss XMM1,DWORD PTR [RBP+RSI*4]
            mulss XMM1,XMM2
            addss XMM0,XMM1
            addss XMM0,DWORD PTR [RBP+RAX*4]
            mov RAX,QWORD PTR [RSP+40]
            mulss XMM0,XMM3
            movss DWORD PTR [RAX+RDI*1],XMM0
            jle .L_4295bf

            cmp EDX,R13D
            mov EAX,R13D
            mov ESI,R10D
            cmovle EAX,EDX
            cmp DWORD PTR [R9],R10D
            lea R15D,DWORD PTR [RAX+R11*1]
            cmovle ESI,DWORD PTR [R9]
            mov R14D,DWORD PTR [RSP+68]
            movsxd R15,R15D
            movss XMM1,DWORD PTR [RBP+R15*4]
            mov R15,QWORD PTR [RSP+8]
            add R14D,EDX
            imul ESI,R12D
            mulss XMM1,XMM2
            movsxd R14,R14D
            movss XMM0,DWORD PTR [R15+RDI*1]
            mulss XMM0,XMM4
            lea R15D,DWORD PTR [RSI+RCX*1]
            add EAX,ESI
            cdqe 
            movsxd R15,R15D
            addss XMM0,XMM1
            movss XMM1,DWORD PTR [RBP+R15*4]
            mulss XMM1,XMM2
            addss XMM0,XMM1
            addss XMM0,DWORD PTR [RBP+RAX*4]
            mov RAX,QWORD PTR [RSP+24]
            mulss XMM0,XMM3
            movss DWORD PTR [RAX+R14*4],XMM0
.L_4295bf:

            mov ESI,DWORD PTR [RSP+36]
            cmp DWORD PTR [RSP+60],ESI
            jle .L_4296e5

            mov R14,QWORD PTR [RSP+16]
            test R8D,R8D
            mov ESI,DWORD PTR [RSP+52]
            mov EAX,0
            mov R15D,DWORD PTR [RSP+56]
            mov DWORD PTR [RSP+128],0
            cmovns EAX,R8D
            cmp EAX,R13D
            mov DWORD PTR [RSP+132],ESI
            mov ESI,R10D
            cmovg EAX,R13D
            cmp DWORD PTR [R14],R10D
            cmovle ESI,DWORD PTR [R14]
            lea R14D,DWORD PTR [R15+RDX*1]
            lea R15D,DWORD PTR [R11+RAX*1]
            movsxd R15,R15D
            movsxd R14,R14D
            movss XMM1,DWORD PTR [RBP+R15*4]
            mov R15,QWORD PTR [RSP+8]
            imul ESI,R12D
            mulss XMM1,XMM2
            movss XMM0,DWORD PTR [R15+RDI*1]
            mulss XMM0,XMM4
            lea R15D,DWORD PTR [RSI+RCX*1]
            add EAX,ESI
            cdqe 
            cmp R12D,EBX
            movsxd R15,R15D
            addss XMM0,XMM1
            movss XMM1,DWORD PTR [RBP+R15*4]
            mulss XMM1,XMM2
            addss XMM0,XMM1
            addss XMM0,DWORD PTR [RBP+RAX*4]
            mov RAX,QWORD PTR [RSP+24]
            mulss XMM0,XMM3
            movss DWORD PTR [RAX+R14*4],XMM0
            jle .L_4296e5

            mov R14,QWORD PTR [RSP+16]
            cmp EDX,R13D
            mov EBX,R13D
            cmovle EBX,EDX
            mov ESI,R10D
            mov R15,QWORD PTR [RSP+8]
            mov EAX,EBX
            mov EBX,DWORD PTR [RSP+72]
            cmp DWORD PTR [R14],R10D
            cmovle ESI,DWORD PTR [R14]
            lea R14D,DWORD PTR [RAX+R11*1]
            movss XMM0,DWORD PTR [R15+RDI*1]
            add EBX,EDX
            movsxd R14,R14D
            mulss XMM0,XMM4
            movsxd RBX,EBX
            movss XMM1,DWORD PTR [RBP+R14*4]
            imul ESI,R12D
            mulss XMM1,XMM2
            add ECX,ESI
            add EAX,ESI
            movsxd RCX,ECX
            addss XMM0,XMM1
            cdqe 
            movss XMM1,DWORD PTR [RBP+RCX*4]
            mulss XMM1,XMM2
            addss XMM0,XMM1
            addss XMM0,DWORD PTR [RBP+RAX*4]
            mov RAX,QWORD PTR [RSP+24]
            mulss XMM0,XMM3
            movss DWORD PTR [RAX+RBX*4],XMM0
.L_4296e5:

            add R8D,2
            add RDI,8
            cmp DWORD PTR [RSP+64],EDX
            mov ECX,EDX
            jne .L_4294b8

            mov EAX,DWORD PTR [RSP+100]
            add DWORD PTR [RSP+36],2
            mov RDI,QWORD PTR [RSP+88]
            add DWORD PTR [RSP+76],EAX
            add QWORD PTR [RSP+80],RDI
            add R11D,EAX
            add QWORD PTR [RSP+40],RDI
            mov EAX,DWORD PTR [RSP+36]
            cmp DWORD PTR [RSP+96],EAX
            jne .L_429450

            mov RAX,QWORD PTR [RSP+120]
.L_42972b:

            mov RDI,QWORD PTR [RSP+136]
            xor RDI,QWORD PTR FS:[40]
            jne .L_429769

            add RSP,152
.L_429745:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_429750:

            mov QWORD PTR [RSP+24],0
            xor R13D,R13D
            mov RAX,RDI
            jmp .L_4293a6
.L_429764:

            call _ZSt17__throw_bad_allocv@PLT
.L_429769:

            call __stack_chk_fail@PLT
.L_42976e:

            nop
            nop
.L_429770:

            push R15
            push R14
            mov R8D,EDX
            push R13
            push R12
            lea EDX,DWORD PTR [RDX+RDX*2]
            push RBP
            push RBX
            imul EDX,ECX
            sub RSP,88
.L_429787:

            mov RAX,QWORD PTR [RSI+8]
            sub RAX,QWORD PTR [RSI]
            movsxd RDX,EDX
            sar RAX,2
            cmp RDX,RAX
            jne .L_429a48

            lea EAX,DWORD PTR [R8+1]
            lea EDX,DWORD PTR [RCX+1]
            mov RBX,RDI
            mov R9,RSI
            mov R12D,ECX
            mov QWORD PTR [RDI],0
            mov R13D,EAX
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            shr R13D,31
            add R13D,EAX
            mov EAX,EDX
            sar R13D,1
            shr EAX,31
            add EAX,EDX
            lea EDX,DWORD PTR [R13+R13*2]
            sar EAX,1
            imul EDX,EAX
            mov DWORD PTR [RSP+8],EAX
            movsxd RDX,EDX
            test RDX,RDX
            je .L_429a40

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_429a67

            lea RBP,QWORD PTR [RDX*4]
            mov DWORD PTR [RSP+12],R8D
            mov QWORD PTR [RSP],RSI
            mov RDI,RBP
            call _Znwm@PLT

            lea R14,QWORD PTR [RAX+RBP*1]
            mov QWORD PTR [RBX],RAX
            mov RDX,RBP
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RBX+16],R14
            call memset@PLT

            mov R8D,DWORD PTR [RSP+12]
            mov R9,QWORD PTR [RSP]
.L_429840:

            mov EAX,DWORD PTR [RSP+8]
            mov QWORD PTR [RBX+8],R14
            test EAX,EAX
            jle .L_429851

            test R13D,R13D
            jg .L_429868
.L_429851:

            add RSP,88
.L_429855:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429868:

            lea ECX,DWORD PTR [R13+R13*2]
            lea EAX,DWORD PTR [R13-1]
            xor R13D,R13D
            mov DWORD PTR [RSP+12],0
            mov R15D,R13D
            mov QWORD PTR [RSP+16],RBX
            mov DWORD PTR [RSP+48],ECX
            lea ECX,DWORD PTR [R12-1]
            lea RAX,QWORD PTR [RAX+RAX*2+3]
            mov QWORD PTR [RSP+72],R9
            mov DWORD PTR [RSP+60],R8D
            mov DWORD PTR [RSP+56],ECX
            lea ECX,DWORD PTR [R8-1]
            mov QWORD PTR [RSP+40],RAX
            mov DWORD PTR [RSP+52],ECX
            jmp .L_42993a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4298b8:

            cmp QWORD PTR [RSP+32],1
            mov R15,RBX
            jne .L_429a20

            mulss XMM0,DWORD PTR [RIP+.L_42dc38]
            mov QWORD PTR [RSP+32],RAX
            add R14D,1
            movsd XMM1,QWORD PTR [RIP+.L_42dc78]
            mov RBX,QWORD PTR [RSP+64]
            add R13,4
            cvtss2sd XMM0,XMM0
            call pow@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_42dc80]
            mov RAX,QWORD PTR [RSP+32]
            cmp R14D,3
            pxor XMM2,XMM2
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [RAX],XMM2
            jne .L_429970

            add EBP,2
            add RBX,12
            cmp QWORD PTR [RSP],RBX
            jne .L_429967

            mov R15D,DWORD PTR [RSP+24]
            mov EDI,DWORD PTR [RSP+48]
            add DWORD PTR [RSP+12],EDI
            add R15D,1
            cmp DWORD PTR [RSP+8],R15D
            je .L_429a30
.L_42993a:

            movsxd RBP,DWORD PTR [RSP+12]
            mov DWORD PTR [RSP+24],R15D
            lea RBX,QWORD PTR [RBP*4]
            add RBP,QWORD PTR [RSP+40]
            lea RAX,QWORD PTR [RBP*4]
            xor EBP,EBP
            mov QWORD PTR [RSP],RAX
            lea EAX,DWORD PTR [R15+R15*1]
            mov DWORD PTR [RSP+28],EAX
.L_429967:

            xor R13D,R13D
            mov R14D,R13D
            mov R13,RBX
.L_429970:

            mov RAX,QWORD PTR [RSP+16]
            mov R15,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+64],RBX
            mov RAX,QWORD PTR [RAX]
            mov DWORD PTR [RAX+R13*1],0
.L_429993:

            mov R12D,DWORD PTR [RSP+28]
            add R12D,DWORD PTR [RSP+32]
            mov EAX,DWORD PTR [RSP+56]
            cmp R12D,EAX
            cmovg R12D,EAX
            xor EBX,EBX
            mov RAX,R15
            imul R12D,DWORD PTR [RSP+60]
            mov R15,RBX
            mov RBX,RAX
.L_4299b9:

            mov ESI,DWORD PTR [RSP+52]
            lea EAX,DWORD PTR [RBP+R15*1]
            mov RCX,QWORD PTR [RBX]
            movsd XMM1,QWORD PTR [RIP+.L_42dc70]
            cmp EAX,ESI
            cmovg EAX,ESI
            add EAX,R12D
            lea EAX,DWORD PTR [RAX+RAX*2]
            add EAX,R14D
            cdqe 
            movss XMM0,DWORD PTR [RCX+RAX*4]
            divss XMM0,DWORD PTR [RIP+.L_42dc1c]
            cvtss2sd XMM0,XMM0
            call pow@PLT

            cvtsd2ss XMM0,XMM0
            mov RCX,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RCX]
            add RAX,R13
            cmp R15,1
            addss XMM0,DWORD PTR [RAX]
            movss DWORD PTR [RAX],XMM0
            je .L_4298b8

            mov R15D,1
            jmp .L_4299b9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429a20:

            mov QWORD PTR [RSP+32],1
            jmp .L_429993
          .byte 0x66
          .byte 0x90
.L_429a30:

            mov RBX,QWORD PTR [RSP+16]
            jmp .L_429851
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429a40:

            xor R14D,R14D
            jmp .L_429840
.L_429a48:

            lea RCX,QWORD PTR [RIP+.L_42db40]
            lea RSI,QWORD PTR [RIP+.L_42d380]
            lea RDI,QWORD PTR [RIP+.L_42d3f0]
            mov EDX,334
            call __assert_fail@PLT
.L_429a67:

            call _ZSt17__throw_bad_allocv@PLT
.L_429a6c:

            nop
            nop
            nop
            nop
.L_429a70:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            movabs RBX,-6148914691236517205
            mov RBP,RDI
            sub RSP,24
.L_429a8b:

            mov RDX,QWORD PTR [RSI+8]
            sub RDX,QWORD PTR [RSI]
            mov QWORD PTR [RSP+8],RSI
            sar RDX,2
            mov RAX,RDX
            mul RBX
            shr RDX,1
            je .L_429d80

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_429df4

            lea RBX,QWORD PTR [RDX*4]
            mov RDI,RBX
.L_429ac8:

            call _Znwm@PLT
.L_429acd:

            mov RDX,RBX
            mov RDI,RAX
            xor ESI,ESI
            mov R13,RAX
            call memset@PLT

            mov QWORD PTR [RBP],0
            mov QWORD PTR [RBP+8],0
            mov EDI,72
            mov QWORD PTR [RBP+16],0
            add RBX,R13
.L_429afd:

            call _Znwm@PLT
.L_429b02:

            mov R15,RAX
.L_429b05:

            mov R12,RBX
            lea R14,QWORD PTR [R15+72]
            mov QWORD PTR [RBP],R15
            sub R12,R13
            mov QWORD PTR [RBP+8],R15
            movabs RDX,4611686018427387903
            mov RAX,R12
            mov QWORD PTR [RBP+16],R14
            sar RAX,2
            cmp RBX,R13
            je .L_429ce0

            cmp RAX,RDX
            ja .L_429e0c

            test RAX,RAX
            mov RBX,R15
            je .L_429d40

            nop
            nop
            nop
            nop
            nop
            nop
.L_429b50:

            test RBX,RBX
            je .L_429b99

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov RDI,R12
            mov QWORD PTR [RBX+16],0
.L_429b6f:

            call _Znwm@PLT

            lea RCX,QWORD PTR [RAX+R12*1]
            mov QWORD PTR [RBX],RAX
            mov RDX,R12
            mov RSI,R13
            mov RDI,RAX
            mov QWORD PTR [RBX+16],RCX
            mov QWORD PTR [RSP],RCX
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP]
            mov QWORD PTR [RBX+8],RCX
.L_429b99:

            add RBX,24
            cmp R14,RBX
            jne .L_429b50
.L_429ba2:

            test R13,R13
            mov QWORD PTR [RBP+8],RBX
            je .L_429bb3

            mov RDI,R13
            call _ZdlPv@PLT
.L_429bb3:

            mov RAX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RAX+8]
            sub RSI,RCX
            sar RSI,2
            test RSI,RSI
            je .L_429ccc

            mov RAX,QWORD PTR [RBP]
            xor EDX,EDX
            movss XMM10,DWORD PTR [RIP+.L_42dc20]
            movss XMM9,DWORD PTR [RIP+.L_42dc24]
            mov R9,QWORD PTR [RAX]
            mov R8,QWORD PTR [RAX+24]
            mov RDI,QWORD PTR [RAX+48]
            movss XMM8,DWORD PTR [RIP+.L_42dc28]
            xor EAX,EAX
            movss XMM7,DWORD PTR [RIP+.L_42dc3c]
            movss XMM6,DWORD PTR [RIP+.L_42dc40]
            movss XMM3,DWORD PTR [RIP+.L_42dc44]
            movss XMM2,DWORD PTR [RIP+.L_42dc48]
            movss XMM5,DWORD PTR [RIP+.L_42dc4c]
            movss XMM4,DWORD PTR [RIP+.L_42dc50]
            nop
            nop
            nop
.L_429c30:

            movss XMM0,DWORD PTR [RCX+RAX*4]
            movss XMM12,DWORD PTR [RCX+RAX*4+4]
            movaps XMM1,XMM0
            movaps XMM13,XMM12
            mulss XMM1,XMM10
            movss XMM11,DWORD PTR [RCX+RAX*4+8]
            mulss XMM13,XMM9
            add RAX,3
            addss XMM1,XMM13
            movaps XMM13,XMM11
            mulss XMM13,XMM8
            addss XMM1,XMM13
            movaps XMM13,XMM12
            mulss XMM12,XMM5
            mulss XMM13,XMM6
            movss DWORD PTR [R9+RDX*4],XMM1
            movaps XMM1,XMM0
            mulss XMM0,XMM3
            mulss XMM1,XMM7
            subss XMM0,XMM12
            subss XMM1,XMM13
            movaps XMM13,XMM11
            mulss XMM11,XMM4
            mulss XMM13,XMM3
            subss XMM0,XMM11
            addss XMM1,XMM13
            addss XMM0,XMM2
            addss XMM1,XMM2
            movss DWORD PTR [R8+RDX*4],XMM1
            movss DWORD PTR [RDI+RDX*4],XMM0
            add RDX,1
            cmp RAX,RSI
            jb .L_429c30
.L_429ccc:

            add RSP,24
.L_429cd0:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_429ce0:

            cmp RAX,RDX
            ja .L_429e0c

            test RAX,RAX
            mov RBX,R15
            je .L_429dae

            nop
            nop
            nop
.L_429cf8:

            test RBX,RBX
            je .L_429d2a

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov RDI,R12
            mov QWORD PTR [RBX+16],0
            call _Znwm@PLT
.L_429d1c:

            mov QWORD PTR [RBX],RAX
            add RAX,R12
            mov QWORD PTR [RBX+16],RAX
            mov QWORD PTR [RBX+8],RAX
.L_429d2a:

            add RBX,24
            cmp R14,RBX
            jne .L_429cf8

            jmp .L_429ba2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429d40:

            test R15,R15
            jne .L_429d51

            cmp R14,24
            je .L_429d76

            mov R15D,24
.L_429d51:

            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+16],R12
            xor EDI,EDI
            mov RDX,R12
            mov RSI,R13
            add R15,24
            call memcpy@PLT

            mov QWORD PTR [R15-16],R12
            cmp R14,R15
            jne .L_429d40
.L_429d76:

            mov RBX,R14
            jmp .L_429ba2
          .byte 0x66
          .byte 0x90
.L_429d80:

            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],0
            xor EBX,EBX
            mov QWORD PTR [RDI+16],0
            mov EDI,72
            xor R13D,R13D
.L_429da1:

            call _Znwm@PLT

            mov R15,RAX
            jmp .L_429b05
.L_429dae:

            cmp R15,-24
            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+16],R12
            mov QWORD PTR [R15+8],R12
            mov EAX,24
            jne .L_429dd9
.L_429dc8:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+16],R12
            mov QWORD PTR [RAX+8],R12
            jmp .L_429d76
.L_429dd9:

            mov RAX,R15
            mov QWORD PTR [R15+24],0
            mov QWORD PTR [R15+40],R12
            add RAX,48
            mov QWORD PTR [R15+32],R12
            je .L_429d76

            jmp .L_429dc8
.L_429df4:

            call _ZSt17__throw_bad_allocv@PLT
.L_429df9:

            mov RBX,RAX
.L_429dfc:

            mov RDI,R13
            call _ZdlPv@PLT
.L_429e04:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_429e0c:

            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+8],0
            mov QWORD PTR [R15+16],0
.L_429e23:

            call _ZSt17__throw_bad_allocv@PLT
.L_429e28:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_429e30:

            cmp R15,RBX
            je .L_429e48

            mov RDI,QWORD PTR [R15]
            test RDI,RDI
            je .L_429e42

            call _ZdlPv@PLT
.L_429e42:

            add R15,24
            jmp .L_429e30
.L_429e48:

            call __cxa_rethrow@PLT
.L_429e4d:

            mov RBX,R15
            jmp .L_429e28
.L_429e52:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_429e68

            call _ZdlPv@PLT
.L_429e68:

            test R13,R13
            jne .L_429dfc

            jmp .L_429e04
.L_429e6f:

            nop
.L_429e70:

            push R15
            push R14
            mov R14,R8
            push R13
            push R12
            mov R15,RDI
            push RBP
            push RBX
            mov R13D,R9D
            sub RSP,72
.L_429e87:

            mov RAX,QWORD PTR [RSI+8]
            mov R8,QWORD PTR [RSI]
            mov DWORD PTR [RSP+48],EDX
            mov DWORD PTR [RSP+52],ECX
            movsd QWORD PTR [RSP+24],XMM0
            mov RDI,RAX
            sub RDI,R8
            mov RDX,RDI
            mov QWORD PTR [RSP+8],RDI
            sar RDX,2
            test RDX,RDX
            je .L_42a1af

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_42a1d2

            mov RBX,RSI
.L_429ecd:

            call _Znwm@PLT
.L_429ed2:

            mov QWORD PTR [RSP+16],RAX
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RBX+8]
            mov R8,QWORD PTR [RBX]
            mov RSI,RAX
            sub RSI,R8
            mov RCX,RSI
            mov QWORD PTR [RSP+8],RSI
            sar RCX,2
.L_429ef5:

            cmp RAX,R8
            je .L_429f20

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R8
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+40],R8
            call memmove@PLT

            mov RCX,QWORD PTR [RSP+56]
            mov R8,QWORD PTR [RSP+40]
.L_429f20:

            mov EBP,R13D
            mov R10,QWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+8]
            shr EBP,31
            add EBP,R13D
            add RAX,R10
            sar EBP,1
            test RCX,RCX
            mov QWORD PTR [RSP+40],RAX
            je .L_42a180

            movsxd R12,DWORD PTR [RSP+48]
            movsxd RDI,EBP
            lea ESI,DWORD PTR [R13-1]
            neg RDI
            xor EBX,EBX
            shl RDI,2
            add RSI,1
            mov R9,R12
            nop
            nop
            nop
            nop
            nop
            nop
.L_429f68:

            xor EDX,EDX
            mov RAX,RBX
            div R12
            cmp EBP,EDX
            jg .L_429fe4

            lea R11D,DWORD PTR [R13+RDX*1]
            sub R11D,EBP
            cmp R11D,R9D
            jg .L_429fe4

            test R13D,R13D
            jle .L_42a170

            imul EAX,R9D
            movsxd RDX,EDX
            pxor XMM0,XMM0
            cdqe 
            add RDX,RAX
            xor EAX,EAX
            lea RDX,QWORD PTR [RDI+RDX*4]
            add RDX,R8
            nop
            nop
            nop
            nop
            nop
.L_429fa8:

            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            cvtss2sd XMM1,DWORD PTR [RDX+RAX*4]
            mulsd XMM1,QWORD PTR [R14+RAX*8]
            add RAX,1
            cmp RSI,RAX
            addsd XMM0,XMM1
            cvtsd2ss XMM0,XMM0
            jne .L_429fa8

            cvtss2sd XMM0,XMM0
.L_429fd0:

            mulsd XMM0,QWORD PTR [RSP+24]
            pxor XMM3,XMM3
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [R10+RBX*4],XMM3
.L_429fe4:

            add RBX,1
            cmp RBX,RCX
            jne .L_429f68

            movabs RAX,4611686018427387903
            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+8],0
            cmp RBX,RAX
            mov QWORD PTR [R15+16],0
            ja .L_42a1f4

            mov RDI,QWORD PTR [RSP+8]
.L_42a020:

            call _Znwm@PLT
.L_42a025:

            mov R8,RAX
            mov QWORD PTR [R15],RAX
            mov QWORD PTR [R15+8],RAX
            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+40]
            cmp QWORD PTR [RSP+32],RDI
            lea RCX,QWORD PTR [R8+RAX*1]
            mov QWORD PTR [R15+16],RCX
            je .L_42a150
.L_42a04c:

            mov RDX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,R8
            mov QWORD PTR [RSP+32],RCX
            call memcpy@PLT

            mov RCX,QWORD PTR [RSP+32]
            test RBX,RBX
            mov R8,RAX
            mov QWORD PTR [R15+8],RCX
            je .L_42a12a

            movsxd R12,DWORD PTR [RSP+48]
.L_42a07d:

            lea EAX,DWORD PTR [R13-1]
            mov R10D,DWORD PTR [RSP+48]
            mov R9D,DWORD PTR [RSP+52]
            lea RDI,QWORD PTR [R12*4]
            xor ECX,ECX
            lea RSI,QWORD PTR [R14+RAX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a0a0:

            xor EDX,EDX
            mov RAX,RCX
            div R12
            cmp EBP,EAX
            jg .L_42a11d

            lea R11D,DWORD PTR [R13+RAX*1]
            sub R11D,EBP
            cmp R11D,R9D
            jg .L_42a11d

            test R13D,R13D
            jle .L_42a160

            sub EAX,EBP
            movsxd RDX,EDX
            imul EAX,R10D
            pxor XMM0,XMM0
            cdqe 
            add RDX,RAX
            mov RAX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+RDX*4]
            mov RAX,R14
.L_42a0e0:

            pxor XMM1,XMM1
            cvtss2sd XMM0,XMM0
            add RAX,8
            cvtss2sd XMM1,DWORD PTR [RDX]
            add RDX,RDI
            mulsd XMM1,QWORD PTR [RAX-8]
            cmp RSI,RAX
            addsd XMM0,XMM1
            cvtsd2ss XMM0,XMM0
            jne .L_42a0e0

            cvtss2sd XMM0,XMM0
.L_42a109:

            mulsd XMM0,QWORD PTR [RSP+24]
            pxor XMM5,XMM5
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [R8+RCX*4],XMM5
.L_42a11d:

            add RCX,1
            cmp RCX,RBX
            jne .L_42a0a0
.L_42a12a:

            mov RAX,QWORD PTR [RSP+16]
            test RAX,RAX
            je .L_42a13c

            mov RDI,RAX
            call _ZdlPv@PLT
.L_42a13c:

            add RSP,72
.L_42a140:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42a150:

            mov QWORD PTR [R15+8],RCX
            jmp .L_42a07d
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a160:

            pxor XMM0,XMM0
            jmp .L_42a109
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a170:

            pxor XMM0,XMM0
            jmp .L_429fd0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a180:

            mov RDI,RAX
            cmp QWORD PTR [RSP+32],RDI
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+8],0
            mov RCX,RAX
            mov QWORD PTR [R15+16],RAX
            je .L_42a1c9

            xor EBX,EBX
            xor R8D,R8D
            jmp .L_42a04c
.L_42a1af:

            mov RCX,RDX
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+16],0
            jmp .L_429ef5
.L_42a1c9:

            mov QWORD PTR [R15+8],RAX
            jmp .L_42a12a
.L_42a1d2:

            call _ZSt17__throw_bad_allocv@PLT
.L_42a1d7:

            mov RBX,RAX
            mov RAX,QWORD PTR [RSP+16]
            test RAX,RAX
            je .L_42a1ec

            mov RDI,RAX
            call _ZdlPv@PLT
.L_42a1ec:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_42a1f4:

            call _ZSt17__throw_bad_allocv@PLT
.L_42a1f9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a200:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDX
            mov EBX,EDI
            sub RSP,88
.L_42a213:

            mov R15,QWORD PTR [RDX+16]
            mov R12D,DWORD PTR [RDX+24]
            mov DWORD PTR [RSP+12],ESI
            mov RSI,QWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RCX,R15
            mov EAX,DWORD PTR [RDX+8]
            mov QWORD PTR [RSP+32],0
            sub RCX,RSI
            mov DWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            lea R13,QWORD PTR [R12+RCX*8]
            mov DWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            sub R13,RAX
            jne .L_42a46b

            xor R9D,R9D
            mov R14D,63
.L_42a27c:

            test R13,R13
            mov RAX,R13
            cmovns R14,R13
            sar RAX,63
            shr RAX,58
            sar R14,6
            add R13,RAX
            lea RDX,QWORD PTR [R9+R14*8]
            and R13D,63
            sub R13,RAX
            jns .L_42a2aa

            add R13,64
            sub RDX,8
.L_42a2aa:

            cmp RSI,R15
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+56],R13D
            mov RDI,R9
            je .L_42a2d4

            mov RDX,RCX
            mov QWORD PTR [RSP],RCX
            call memmove@PLT

            mov RDI,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP]
            mov R9,RAX
.L_42a2d4:

            add R9,RCX
            test R12,R12
            je .L_42a330

            xor ECX,ECX
            mov R10D,1
            jmp .L_42a2f9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a2f0:

            add ECX,1
            sub R12,1
            je .L_42a330
.L_42a2f9:

            mov RSI,QWORD PTR [R9]
            mov RDX,R10
            shl RDX,CL
            mov RAX,RDX
            mov R8,RSI
            not RAX
            or R8,RDX
            and RAX,RSI
            test QWORD PTR [R15],RDX
            cmovne RAX,R8
            cmp ECX,63
            mov QWORD PTR [R9],RAX
            jne .L_42a2f0

            add R15,8
            add R9,8
            xor ECX,ECX
            sub R12,1
            jne .L_42a2f9
.L_42a330:

            movsxd RAX,EBX
            mov R15D,1
            mov R11D,EBX
            mov QWORD PTR [RSP+16],RAX
            add R15D,1
            add RAX,RAX
            cmp R15D,DWORD PTR [RSP+12]
            mov R10D,1
            mov QWORD PTR [RSP+24],RAX
            jge .L_42a442

            nop
            nop
.L_42a360:

            movsxd R12,R11D
            mov EAX,1
            lea R8,QWORD PTR [R12+1]
            jmp .L_42a3fd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a378:

            lea R9,QWORD PTR [R8-1]
            lea ECX,DWORD PTR [RAX+R12*1-2]
            mov R14,R10
            shr R9,6
            shl R14,CL
            test QWORD PTR [RDI+R9*8],R14
            je .L_42a428

            lea R9,QWORD PTR [R8+1]
            lea ECX,DWORD PTR [R8+1]
            mov R14,R10
            mov DWORD PTR [RSP],R8D
            mov R13,R9
            shl R14,CL
            shr R13,6
            test QWORD PTR [RDI+R13*8],R14
            je .L_42a3f0

            mov R13,R8
            sub R13,QWORD PTR [RSP+16]
            mov ECX,R8D
            sub ECX,EBX
            mov R8,R10
            shl R8,CL
            mov R14,R13
            shr R14,6
            test QWORD PTR [RDI+R14*8],R8
            je .L_42a3f0

            add R13,QWORD PTR [RSP+24]
            mov ECX,DWORD PTR [RSP]
            mov R14,R10
            add ECX,EBX
            shr R13,6
            shl R14,CL
            test QWORD PTR [RDI+R13*8],R14
            jne .L_42a3fa

            nop
            nop
.L_42a3f0:

            add RSI,QWORD PTR [RBP]
            not RDX
            and QWORD PTR [RSI],RDX
.L_42a3fa:

            mov R8,R9
.L_42a3fd:

            add EAX,1
            cmp EAX,EBX
            jge .L_42a430

            mov R9,R8
            lea ECX,DWORD PTR [RAX+R11*1-1]
            mov RDX,R10
            shr R9,6
            shl RDX,CL
            test QWORD PTR [RDI+R9*8],RDX
            lea RSI,QWORD PTR [R9*8]
            jne .L_42a378
.L_42a428:

            lea R9,QWORD PTR [R8+1]
            jmp .L_42a3f0
          .byte 0x66
          .byte 0x90
.L_42a430:

            add R11D,EBX
            add R15D,1
            cmp R15D,DWORD PTR [RSP+12]
            jl .L_42a360
.L_42a442:

            test RDI,RDI
            je .L_42a44c

            call _ZdlPv@PLT
.L_42a44c:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42a4c6

            add RSP,88
.L_42a460:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a46b:

            lea R14,QWORD PTR [R13+63]
            mov R12,R14
            shr R12,6
            shl R12,3
            mov RDI,R12
.L_42a47d:

            call _Znwm@PLT
.L_42a482:

            mov R15,QWORD PTR [RBP+16]
            mov RSI,QWORD PTR [RBP]
            add R12,RAX
            mov QWORD PTR [RSP+64],R12
            mov R9,RAX
            mov QWORD PTR [RSP+32],RAX
            mov DWORD PTR [RSP+40],0
            mov R12D,DWORD PTR [RBP+24]
            mov RCX,R15
            sub RCX,RSI
            jmp .L_42a27c
.L_42a4b1:

            lea RDI,QWORD PTR [RSP+32]
            mov RBX,RAX
            call .L_4084e0

            mov RDI,RBX
.L_42a4c1:

            call _Unwind_Resume@PLT
.L_42a4c6:

            call __stack_chk_fail@PLT
.L_42a4cb:

            nop
            nop
            nop
            nop
            nop
.L_42a4d0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDX
            mov EBX,EDI
            sub RSP,88
.L_42a4e3:

            mov R15,QWORD PTR [RDX+16]
            mov R12D,DWORD PTR [RDX+24]
            mov DWORD PTR [RSP+12],ESI
            mov RSI,QWORD PTR [RDX]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            mov RCX,R15
            mov EAX,DWORD PTR [RDX+8]
            mov QWORD PTR [RSP+32],0
            sub RCX,RSI
            mov DWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+48],0
            lea R13,QWORD PTR [R12+RCX*8]
            mov DWORD PTR [RSP+56],0
            mov QWORD PTR [RSP+64],0
            sub R13,RAX
            jne .L_42a73b

            xor R9D,R9D
            mov R14D,63
.L_42a54c:

            test R13,R13
            mov RAX,R13
            cmovns R14,R13
            sar RAX,63
            shr RAX,58
            sar R14,6
            add R13,RAX
            lea RDX,QWORD PTR [R9+R14*8]
            and R13D,63
            sub R13,RAX
            jns .L_42a57a

            add R13,64
            sub RDX,8
.L_42a57a:

            cmp RSI,R15
            mov QWORD PTR [RSP+48],RDX
            mov DWORD PTR [RSP+56],R13D
            mov RDI,R9
            je .L_42a5a4

            mov RDX,RCX
            mov QWORD PTR [RSP],RCX
            call memmove@PLT

            mov RDI,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP]
            mov R9,RAX
.L_42a5a4:

            add R9,RCX
            test R12,R12
            je .L_42a600

            xor ECX,ECX
            mov R10D,1
            jmp .L_42a5c9
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42a5c0:

            add ECX,1
            sub R12,1
            je .L_42a600
.L_42a5c9:

            mov RSI,QWORD PTR [R9]
            mov RDX,R10
            shl RDX,CL
            mov RAX,RDX
            mov R8,RSI
            not RAX
            or R8,RDX
            and RAX,RSI
            test QWORD PTR [R15],RDX
            cmovne RAX,R8
            cmp ECX,63
            mov QWORD PTR [R9],RAX
            jne .L_42a5c0

            add R15,8
            add R9,8
            xor ECX,ECX
            sub R12,1
            jne .L_42a5c9
.L_42a600:

            movsxd RAX,EBX
            mov R15D,1
            mov R11D,EBX
            mov QWORD PTR [RSP+16],RAX
            add R15D,1
            add RAX,RAX
            cmp R15D,DWORD PTR [RSP+12]
            mov R10D,1
            mov QWORD PTR [RSP+24],RAX
            jge .L_42a712

            nop
            nop
.L_42a630:

            movsxd R12,R11D
            mov EAX,1
            lea RSI,QWORD PTR [R12+1]
            jmp .L_42a6ca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a648:

            lea R9,QWORD PTR [RSI-1]
            lea ECX,DWORD PTR [RAX+R12*1-2]
            mov R14,R10
            shr R9,6
            shl R14,CL
            test QWORD PTR [RDI+R9*8],R14
            jne .L_42a6f5

            lea R9,QWORD PTR [RSI+1]
            lea ECX,DWORD PTR [RSI+1]
            mov R14,R10
            mov DWORD PTR [RSP],ESI
            mov R13,R9
            shl R14,CL
            shr R13,6
            test QWORD PTR [RDI+R13*8],R14
            jne .L_42a6c0

            mov R13,RSI
            sub R13,QWORD PTR [RSP+16]
            mov ECX,ESI
            sub ECX,EBX
            mov RSI,R10
            shl RSI,CL
            mov R14,R13
            shr R14,6
            test QWORD PTR [RDI+R14*8],RSI
            jne .L_42a6c0

            add R13,QWORD PTR [RSP+24]
            mov ECX,DWORD PTR [RSP]
            mov RSI,R10
            add ECX,EBX
            shr R13,6
            shl RSI,CL
            test QWORD PTR [RDI+R13*8],RSI
            je .L_42a6c7

            nop
            nop
            nop
            nop
            nop
.L_42a6c0:

            add RDX,QWORD PTR [RBP]
            or QWORD PTR [RDX],R8
.L_42a6c7:

            mov RSI,R9
.L_42a6ca:

            add EAX,1
            cmp EAX,EBX
            jge .L_42a700

            mov R9,RSI
            lea ECX,DWORD PTR [RAX+R11*1-1]
            mov R8,R10
            shr R9,6
            shl R8,CL
            test QWORD PTR [RDI+R9*8],R8
            lea RDX,QWORD PTR [R9*8]
            je .L_42a648
.L_42a6f5:

            lea R9,QWORD PTR [RSI+1]
            jmp .L_42a6c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42a700:

            add R11D,EBX
            add R15D,1
            cmp R15D,DWORD PTR [RSP+12]
            jl .L_42a630
.L_42a712:

            test RDI,RDI
            je .L_42a71c

            call _ZdlPv@PLT
.L_42a71c:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42a796

            add RSP,88
.L_42a730:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_42a73b:

            lea R14,QWORD PTR [R13+63]
            mov R12,R14
            shr R12,6
            shl R12,3
            mov RDI,R12
.L_42a74d:

            call _Znwm@PLT
.L_42a752:

            mov R15,QWORD PTR [RBP+16]
            mov RSI,QWORD PTR [RBP]
            add R12,RAX
            mov QWORD PTR [RSP+64],R12
            mov R9,RAX
            mov QWORD PTR [RSP+32],RAX
            mov DWORD PTR [RSP+40],0
            mov R12D,DWORD PTR [RBP+24]
            mov RCX,R15
            sub RCX,RSI
            jmp .L_42a54c
.L_42a781:

            lea RDI,QWORD PTR [RSP+32]
            mov RBX,RAX
            call .L_4084e0

            mov RDI,RBX
.L_42a791:

            call _Unwind_Resume@PLT
.L_42a796:

            call __stack_chk_fail@PLT
.L_42a79b:

            nop
            nop
            nop
            nop
            nop
.L_42a7a0:

            push R15
            push R14
            mov R15D,ECX
            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            sub RSP,376
.L_42a7b7:

            mov R14,QWORD PTR [RSP+432]
            mov DWORD PTR [RSP+8],EDX
            movabs RDX,-6148914691236517205
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+360],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+32],RDI
            movss DWORD PTR [RSP+56],XMM0
            mov BYTE PTR [RSP+63],R8B
            mov RAX,QWORD PTR [R14+8]
            mov RBP,QWORD PTR [R14]
            movss DWORD PTR [RSP+40],XMM1
            mov BYTE PTR [RSP+62],R9B
            mov RBX,RAX
            mov QWORD PTR [RSP+16],RAX
            sub RBX,RBP
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            test R8B,R8B
            jne .L_42a968

            test R9B,R9B
            jne .L_42a968

            test RAX,RAX
            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            je .L_42c470

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_42c559

            mov RDI,RBX
.L_42a860:

            call _Znwm@PLT
.L_42a865:

            mov R15,RAX
            mov RAX,QWORD PTR [RSP+32]
.L_42a86d:

            add RBX,R15
            mov QWORD PTR [RAX],R15
            mov QWORD PTR [RAX+8],R15
            mov QWORD PTR [RAX+16],RBX
            mov R13,QWORD PTR [R14+8]
            mov RBX,R15
            mov RBP,QWORD PTR [R14]
            cmp R13,RBP
            je .L_42a932

            movabs R14,4611686018427387903
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42a8a0:

            test RBX,RBX
            je .L_42a91c

            mov R12,QWORD PTR [RBP+8]
            sub R12,QWORD PTR [RBP]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R12
            sar RAX,2
            test RAX,RAX
            je .L_42a8e6

            cmp RAX,R14
            ja .L_42c5be

            mov RDI,R12
.L_42a8de:

            call _Znwm@PLT
.L_42a8e3:

            mov RCX,RAX
.L_42a8e6:

            add R12,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R12
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov R12,RAX
            sub R12,RSI
            cmp RAX,RSI
            je .L_42a915

            mov RDI,RCX
            mov RDX,R12
            call memmove@PLT

            mov RCX,RAX
.L_42a915:

            add RCX,R12
            mov QWORD PTR [RBX+8],RCX
.L_42a91c:

            add RBP,24
            add RBX,24
            cmp R13,RBP
            jne .L_42a8a0

            mov RAX,QWORD PTR [RSP+32]
.L_42a932:

            mov QWORD PTR [RAX+8],RBX
.L_42a936:

            mov RBX,QWORD PTR [RSP+360]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+32]
            jne .L_42c51b

            add RSP,376
.L_42a959:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42a968:

            pxor XMM0,XMM0
            test RAX,RAX
            mov QWORD PTR [RSP+96],0
            movaps XMMWORD PTR [RSP+80],XMM0
            je .L_42c245

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_42c559

            mov RDI,RBX
.L_42a999:

            call _Znwm@PLT
.L_42a99e:

            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [R14+8]
            mov RBP,QWORD PTR [R14]
            mov QWORD PTR [RSP+16],RAX
.L_42a9af:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+48],RAX
            add RBX,RAX
            cmp QWORD PTR [RSP+16],RBP
            movq XMM0,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+96],RBX
            punpcklqdq XMM0,XMM0
            mov RBX,RAX
            movaps XMMWORD PTR [RSP+80],XMM0
            je .L_42aa8a

            nop
            nop
.L_42a9e0:

            test RBX,RBX
            je .L_42aa6a

            mov R12,QWORD PTR [RBP+8]
            sub R12,QWORD PTR [RBP]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R12
            sar RAX,2
            test RAX,RAX
            je .L_42aa34

            movabs RSI,4611686018427387903
            cmp RAX,RSI
            ja .L_42c55e

            mov RDI,R12
.L_42aa2c:

            call _Znwm@PLT
.L_42aa31:

            mov RCX,RAX
.L_42aa34:

            add R12,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R12
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov R12,RAX
            sub R12,RSI
            cmp RAX,RSI
            je .L_42aa63

            mov RDI,RCX
            mov RDX,R12
            call memmove@PLT

            mov RCX,RAX
.L_42aa63:

            add RCX,R12
            mov QWORD PTR [RBX+8],RCX
.L_42aa6a:

            add RBX,24
            add RBP,24
            cmp QWORD PTR [RSP+16],RBP
            jne .L_42a9e0

            mov RAX,QWORD PTR [RSP+80]
            mov RBP,QWORD PTR [R14]
            mov QWORD PTR [RSP+24],RAX
.L_42aa8a:

            mov RCX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+8]
            mov QWORD PTR [RSP+88],RBX
            mov R8,RAX
            mov QWORD PTR [RSP+16],RAX
            sub R8,RCX
            sar R8,2
            test R8,R8
            je .L_42ae2c

            mov RAX,QWORD PTR [RSP+24]
            lea R11,QWORD PTR [RCX+16]
            mov R9,QWORD PTR [RAX+48]
            mov RDI,QWORD PTR [RAX+24]
            lea R10,QWORD PTR [R9+16]
            lea RSI,QWORD PTR [RDI+16]
            cmp RCX,R10
            setae DL
            cmp R9,R11
            setae AL
            or EDX,EAX
            cmp RCX,RSI
            setae AL
            cmp RDI,R11
            setae R11B
            or EAX,R11D
            and EDX,EAX
            cmp RDI,R10
            setae AL
            cmp R9,RSI
            setae SIL
            or EAX,ESI
            test DL,AL
            je .L_42c403

            cmp R8,6
            jbe .L_42c403

            mov RDX,RCX
            xor R12D,R12D
            shr RDX,2
            neg RDX
            and EDX,3
            je .L_42abe5

            movss XMM1,DWORD PTR [RCX]
            cmp RDX,1
            mov R12D,1
            movss XMM0,DWORD PTR [RIP+.L_42dc1c]
            divss XMM1,XMM0
            movss DWORD PTR [RCX],XMM1
            movss XMM1,DWORD PTR [RIP+.L_42dc44]
            movss XMM2,DWORD PTR [RDI]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDI],XMM2
            movss XMM2,DWORD PTR [R9]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [R9],XMM2
            je .L_42abe5

            movss XMM2,DWORD PTR [RCX+4]
            cmp RDX,3
            mov R12D,2
            divss XMM2,XMM0
            movss DWORD PTR [RCX+4],XMM2
            movss XMM2,DWORD PTR [RDI+4]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDI+4],XMM2
            movss XMM2,DWORD PTR [R9+4]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [R9+4],XMM2
            jne .L_42abe5

            movss XMM2,DWORD PTR [RCX+8]
            mov R12D,3
            divss XMM2,XMM0
            movss DWORD PTR [RCX+8],XMM2
            movss XMM2,DWORD PTR [RDI+8]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDI+8],XMM2
            movss XMM2,DWORD PTR [R9+8]
            divss XMM2,XMM0
            movaps XMM0,XMM2
            subss XMM0,XMM1
            movss DWORD PTR [R9+8],XMM0
.L_42abe5:

            mov RAX,R8
            movaps XMM0,XMMWORD PTR [RIP+.L_42dd20]
            sub RAX,RDX
            shl RDX,2
            xor ESI,ESI
            mov RBX,RAX
            movaps XMM2,XMMWORD PTR [RIP+.L_42dd30]
            mov QWORD PTR [RSP+16],RAX
            lea R11,QWORD PTR [RCX+RDX*1]
            lea R10,QWORD PTR [RDI+RDX*1]
            shr RBX,2
            add RDX,R9
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ac20:

            movaps XMM1,XMMWORD PTR [R11+RAX*1]
            add RSI,1
            divps XMM1,XMM0
            movaps XMMWORD PTR [R11+RAX*1],XMM1
            movups XMM1,XMMWORD PTR [R10+RAX*1]
            divps XMM1,XMM0
            addps XMM1,XMM2
            movups XMMWORD PTR [R10+RAX*1],XMM1
            movups XMM1,XMMWORD PTR [RDX+RAX*1]
            divps XMM1,XMM0
            addps XMM1,XMM2
            movups XMMWORD PTR [RDX+RAX*1],XMM1
            add RAX,16
            cmp RBX,RSI
            ja .L_42ac20

            mov RBX,QWORD PTR [RSP+16]
            mov RAX,RBX
            and RAX,-4
            add R12,RAX
            cmp RAX,RBX
            je .L_42ae2c

            lea RAX,QWORD PTR [R12*4]
            movss XMM0,DWORD PTR [RIP+.L_42dc1c]
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM1,DWORD PTR [RDX]
            divss XMM1,XMM0
            movss DWORD PTR [RDX],XMM1
            lea RDX,QWORD PTR [RDI+RAX*1]
            add RAX,R9
            movss XMM1,DWORD PTR [RIP+.L_42dc44]
            movss XMM2,DWORD PTR [RDX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [R12+1]
            cmp R8,RAX
            jbe .L_42ae2c

            shl RAX,2
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM2,DWORD PTR [RDX]
            divss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            lea RDX,QWORD PTR [RDI+RAX*1]
            add RAX,R9
            movss XMM2,DWORD PTR [RDX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [R12+2]
            cmp R8,RAX
            jbe .L_42ae2c

            shl RAX,2
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM2,DWORD PTR [RDX]
            divss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            lea RDX,QWORD PTR [RDI+RAX*1]
            add RAX,R9
            movss XMM2,DWORD PTR [RDX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [R12+3]
            cmp RAX,R8
            jae .L_42ae2c

            shl RAX,2
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM2,DWORD PTR [RDX]
            divss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            lea RDX,QWORD PTR [RDI+RAX*1]
            add RAX,R9
            movss XMM2,DWORD PTR [RDX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [R12+4]
            cmp R8,RAX
            jbe .L_42ae2c

            shl RAX,2
            add R12,5
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM2,DWORD PTR [RDX]
            divss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            lea RDX,QWORD PTR [RDI+RAX*1]
            add RAX,R9
            cmp R8,R12
            movss XMM2,DWORD PTR [RDX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RAX],XMM2
            jbe .L_42ae2c

            lea RAX,QWORD PTR [R12*4]
            add RCX,RAX
            add RDI,RAX
            add RAX,R9
            movss XMM2,DWORD PTR [RCX]
            divss XMM2,XMM0
            movss DWORD PTR [RCX],XMM2
            movss XMM2,DWORD PTR [RDI]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDI],XMM2
            movss XMM2,DWORD PTR [RAX]
            divss XMM2,XMM0
            movaps XMM0,XMM2
            subss XMM0,XMM1
            movss DWORD PTR [RAX],XMM0
.L_42ae2c:

            mov RBX,QWORD PTR [RBP+8]
            sub RBX,QWORD PTR [RBP]
            mov QWORD PTR [RSP+176],0
            mov DWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+192],0
            mov DWORD PTR [RSP+200],0
            mov QWORD PTR [RSP+208],0
            sar RBX,2
            test RBX,RBX
            jne .L_42c2a0

            xor R8D,R8D
            xor EBP,EBP
            mov R12D,63
.L_42ae86:

            test RBX,RBX
            mov RAX,RBX
            cmovns R12,RBX
            sar RAX,63
            shr RAX,58
            sar R12,6
            add RBX,RAX
            lea RDX,QWORD PTR [R8+R12*8]
            and EBX,63
            sub RBX,RAX
            jns .L_42aeb3

            add RBX,64
            sub RDX,8
.L_42aeb3:

            cmp RBP,R8
            mov QWORD PTR [RSP+192],RDX
            mov DWORD PTR [RSP+200],EBX
            je .L_42aee7

            lea RAX,QWORD PTR [R8+8]
            mov RDI,R8
            xor ESI,ESI
            sub RBP,RAX
            shr RBP,3
            lea RDX,QWORD PTR [RBP*8+8]
            call memset@PLT

            mov R8,RAX
.L_42aee7:

            mov ESI,DWORD PTR [RSP+8]
            test ESI,ESI
            jle .L_42b065

            test R13D,R13D
            mov RDX,QWORD PTR [RSP+80]
            jle .L_42b065

            movsd XMM7,QWORD PTR [RIP+.L_42dc98]
            lea R10D,DWORD PTR [R13-1]
            movsxd R11,R13D
            movsd XMM9,QWORD PTR [RIP+.L_42dca0]
            mov RDI,QWORD PTR [RDX]
            mov RSI,QWORD PTR [RDX+24]
            mov DWORD PTR [RSP+16],R13D
            lea RAX,QWORD PTR [R10+1]
            mov RDX,QWORD PTR [RDX+48]
            mov R13D,DWORD PTR [RSP+8]
            xor R9D,R9D
            movapd XMM8,XMM7
            not R10
            movapd XMM10,XMM9
            mov R12D,1
            movss XMM6,DWORD PTR [RIP+.L_42dc54]
            movss XMM5,DWORD PTR [RIP+.L_42dc58]
            movss XMM4,DWORD PTR [RIP+.L_42dc5c]
            movss XMM3,DWORD PTR [RIP+.L_42dc60]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42af70:

            lea RCX,QWORD PTR [R10+RAX*1]
            jmp .L_42afcd
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42af80:

            cmp R15D,1
            jne .L_42afc0

            cvtss2sd XMM11,XMM11
            ucomisd XMM7,XMM11
            jbe .L_42afc0

            cvtss2sd XMM12,XMM12
            ucomisd XMM7,XMM12
            jbe .L_42afc0

            cvtss2sd XMM1,XMM1
            ucomisd XMM9,XMM1
            jbe .L_42afc0
.L_42afa9:

            mov RBX,RCX
            mov RBP,R12
            shr RBX,6
            shl RBP,CL
            or QWORD PTR [R8+RBX*8],RBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_42afc0:

            add RCX,1
            cmp RCX,RAX
            je .L_42b050
.L_42afcd:

            movss XMM1,DWORD PTR [RSI+RCX*4]
            cmp R15D,2
            movaps XMM12,XMM1
            movss XMM0,DWORD PTR [RDI+RCX*4]
            movaps XMM13,XMM0
            mulss XMM1,XMM3
            mulss XMM12,XMM5
            movss XMM2,DWORD PTR [RDX+RCX*4]
            movaps XMM11,XMM2
            mulss XMM2,XMM4
            mulss XMM11,XMM6
            addss XMM1,XMM0
            subss XMM13,XMM12
            addss XMM11,XMM0
            movaps XMM12,XMM13
            subss XMM12,XMM2
            jne .L_42af80

            cvtss2sd XMM12,XMM12
            ucomisd XMM8,XMM12
            jbe .L_42afc0

            cvtss2sd XMM1,XMM1
            ucomisd XMM8,XMM1
            jbe .L_42afc0

            cvtss2sd XMM11,XMM11
            ucomisd XMM10,XMM11
            ja .L_42afa9

            add RCX,1
            cmp RCX,RAX
            jne .L_42afcd

            nop
            nop
            nop
            nop
            nop
.L_42b050:

            add R9D,1
            add RAX,R11
            cmp R13D,R9D
            jne .L_42af70

            mov R13D,DWORD PTR [RSP+16]
.L_42b065:

            mov EBP,DWORD PTR [RSP+8]
            lea RBX,QWORD PTR [RSP+176]
            mov EDI,R13D
            mov RDX,RBX
            mov QWORD PTR [RSP+64],RBX
            mov ESI,EBP
.L_42b07e:

            call .L_42a200

            mov RDX,RBX
            mov ESI,EBP
            mov EDI,R13D
            call .L_42a200

            mov RDX,RBX
            mov ESI,EBP
            mov EDI,R13D
            call .L_42a200
.L_42b09d:

            mov RAX,QWORD PTR [R14]
            mov RBX,QWORD PTR [RAX+8]
            sub RBX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+224],0
            mov DWORD PTR [RSP+232],0
            mov QWORD PTR [RSP+240],0
            mov DWORD PTR [RSP+248],0
            mov QWORD PTR [RSP+256],0
            sar RBX,2
            test RBX,RBX
            jne .L_42c338

            xor R8D,R8D
            xor EBP,EBP
            mov R12D,63
.L_42b0f9:

            test RBX,RBX
            mov RAX,RBX
            cmovns R12,RBX
            sar RAX,63
            shr RAX,58
            sar R12,6
            add RBX,RAX
            lea RDX,QWORD PTR [R8+R12*8]
            and EBX,63
            sub RBX,RAX
            jns .L_42b126

            add RBX,64
            sub RDX,8
.L_42b126:

            cmp RBP,R8
            mov QWORD PTR [RSP+240],RDX
            mov DWORD PTR [RSP+248],EBX
            je .L_42b15a

            lea RAX,QWORD PTR [R8+8]
            mov RDI,R8
            xor ESI,ESI
            sub RBP,RAX
            shr RBP,3
            lea RDX,QWORD PTR [RBP*8+8]
            call memset@PLT

            mov R8,RAX
.L_42b15a:

            mov ECX,DWORD PTR [RSP+8]
            test ECX,ECX
            jle .L_42b24d

            lea R12D,DWORD PTR [R13-1]
            mov QWORD PTR [RSP+16],R14
            mov R10,QWORD PTR [RSP+80]
            mov R14D,DWORD PTR [RSP+8]
            movsd XMM3,QWORD PTR [RIP+.L_42dcc0]
            movsd XMM6,QWORD PTR [RIP+.L_42dcd8]
            xor EDI,EDI
            movsd XMM5,QWORD PTR [RIP+.L_42dce0]
            xor ESI,ESI
            movsd XMM4,QWORD PTR [RIP+.L_42dcb8]
            add R12,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b1a8:

            test R13D,R13D
            jle .L_42b239

            cmp R15D,2
            mov RAX,QWORD PTR [R10+24]
            mov RDX,QWORD PTR [R10+48]
            je .L_42c1a8

            cmp R15D,1
            jne .L_42b239

            movsxd RCX,EDI
            movsd XMM8,QWORD PTR [RIP+.L_42dca8]
            lea R9,QWORD PTR [R12+RCX*1]
            movsd XMM7,QWORD PTR [RIP+.L_42dcb0]
            mov EBX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b1f0:

            pxor XMM2,XMM2
            pxor XMM1,XMM1
            cvtss2sd XMM2,DWORD PTR [RAX+RCX*4]
            cvtss2sd XMM1,DWORD PTR [RDX+RCX*4]
            movapd XMM0,XMM2
            mulsd XMM0,XMM8
            subsd XMM0,XMM7
            ucomisd XMM0,XMM1
            jbe .L_42b230

            mulsd XMM1,XMM4
            ucomisd XMM2,XMM1
            jbe .L_42b230

            mov R11,RCX
            mov RBP,RBX
            shr R11,6
            shl RBP,CL
            or QWORD PTR [R8+R11*8],RBP
.L_42b230:

            add RCX,1
            cmp RCX,R9
            jne .L_42b1f0
.L_42b239:

            add ESI,1
            add EDI,R13D
            cmp R14D,ESI
            jne .L_42b1a8
.L_42b248:

            mov R14,QWORD PTR [RSP+16]
.L_42b24d:

            mov EBP,DWORD PTR [RSP+8]
            lea RBX,QWORD PTR [RSP+224]
            mov EDI,R13D
            mov RDX,RBX
            mov QWORD PTR [RSP+72],RBX
            mov ESI,EBP
.L_42b266:

            call .L_42a4d0

            mov RDX,RBX
            mov ESI,EBP
            mov EDI,R13D
            call .L_42a4d0

            mov RDX,RBX
            mov ESI,EBP
            mov EDI,R13D
            call .L_42a4d0
.L_42b285:

            mov RAX,QWORD PTR [R14]
            mov RBP,QWORD PTR [RAX+8]
            sub RBP,QWORD PTR [RAX]
            mov QWORD PTR [RSP+272],0
            mov DWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+288],0
            mov DWORD PTR [RSP+296],0
            mov QWORD PTR [RSP+304],0
            sar RBP,2
            test RBP,RBP
            mov QWORD PTR [RSP+24],RBP
            jne .L_42c2e0

            xor EBX,EBX
            xor R8D,R8D
            xor EAX,EAX
            mov R12D,63
.L_42b2e8:

            test RBP,RBP
            mov RDX,RBP
            cmovns R12,RBP
            sar RDX,63
            shr RDX,58
            sar R12,6
            add RBP,RDX
            lea RCX,QWORD PTR [R8+R12*8]
            and EBP,63
            sub RBP,RDX
            jns .L_42b315

            add RBP,64
            sub RCX,8
.L_42b315:

            cmp RAX,R8
            mov QWORD PTR [RSP+288],RCX
            mov DWORD PTR [RSP+296],EBP
            je .L_42b349

            lea RDX,QWORD PTR [R8+8]
            mov RDI,R8
            xor ESI,ESI
            sub RAX,RDX
            shr RAX,3
            lea RDX,QWORD PTR [RAX*8+8]
            call memset@PLT

            mov R8,RAX
.L_42b349:

            mov EDX,DWORD PTR [RSP+8]
            test EDX,EDX
            jle .L_42b406

            test R13D,R13D
            mov R9,QWORD PTR [RSP+224]
            mov R11,QWORD PTR [RSP+176]
            jle .L_42b406

            lea R12D,DWORD PTR [R13-1]
            movsxd RAX,R13D
            mov DWORD PTR [RSP+48],R13D
            mov R13D,DWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RBX
            xor EBP,EBP
            lea RDI,QWORD PTR [R12+1]
            mov R10D,1
            not R12
            mov RBX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b3a0:

            lea RCX,QWORD PTR [R12+RDI*1]
            jmp .L_42b3c5
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42b3b0:

            test QWORD PTR [R11+RDX*8],RAX
            je .L_42b3df

            add RCX,1
            or RAX,R14
            cmp RCX,RDI
            mov QWORD PTR [RSI],RAX
            je .L_42b3f1
.L_42b3c5:

            mov RDX,RCX
            mov RAX,R10
            shr RDX,6
            shl RAX,CL
            test QWORD PTR [R9+RDX*8],RAX
            lea RSI,QWORD PTR [R8+RDX*8]
            mov R14,QWORD PTR [RSI]
            jne .L_42b3b0
.L_42b3df:

            not RAX
            add RCX,1
            and RAX,R14
            cmp RCX,RDI
            mov QWORD PTR [RSI],RAX
            jne .L_42b3c5
.L_42b3f1:

            add EBP,1
            add RDI,RBX
            cmp R13D,EBP
            jne .L_42b3a0

            mov RBX,QWORD PTR [RSP+16]
            mov R13D,DWORD PTR [RSP+48]
.L_42b406:

            movsd XMM3,QWORD PTR [RIP+.L_42dc90]
            cmp R15D,2
            movsd QWORD PTR [RSP+16],XMM3
            jne .L_42b428

            movsd XMM6,QWORD PTR [RIP+.L_42dc88]
            movsd QWORD PTR [RSP+16],XMM6
.L_42b428:

            xor EDI,EDI
            xor EBP,EBP
            cmp QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+320],0
            mov DWORD PTR [RSP+328],0
            mov QWORD PTR [RSP+336],0
            mov DWORD PTR [RSP+344],0
            mov QWORD PTR [RSP+352],0
            jne .L_42c258
.L_42b472:

            lea RAX,QWORD PTR [RBX+63]
            test RBX,RBX
            cmovns RAX,RBX
            sar RAX,6
            lea RDX,QWORD PTR [RDI+RAX*8]
            mov RAX,RBX
            sar RAX,63
            shr RAX,58
            add RBX,RAX
            and EBX,63
            sub RBX,RAX
            jns .L_42b4a3

            add RBX,64
            sub RDX,8
.L_42b4a3:

            cmp RBP,RDI
            mov QWORD PTR [RSP+336],RDX
            mov DWORD PTR [RSP+344],EBX
            je .L_42b4d1

            lea RAX,QWORD PTR [RDI+8]
            xor ESI,ESI
            sub RBP,RAX
            shr RBP,3
            lea RDX,QWORD PTR [RBP*8+8]
            call memset@PLT
.L_42b4d1:

            movsxd RAX,R15D
            lea RBP,QWORD PTR [RAX+RAX*2]
            lea RAX,QWORD PTR [RBP*8]
            mov RBP,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+48],RAX
            add RBP,RAX
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov RDI,RAX
            sub RDI,RSI
            mov RDX,RDI
            sar RDX,2
            test RDX,RDX
            je .L_42c469

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_42c4f4
.L_42b51e:

            call _Znwm@PLT
.L_42b523:

            mov RBX,RAX
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov RDI,RAX
            sub RDI,RSI
.L_42b534:

            cmp RAX,RSI
            je .L_42b54f

            mov RDX,RDI
            mov RDI,RBX
            call memmove@PLT

            mov RSI,QWORD PTR [RBP]
            mov RDI,QWORD PTR [RBP+8]
            sub RDI,RSI
.L_42b54f:

            sar RDI,2
            xor ECX,ECX
            test RDI,RDI
            je .L_42b6e0

            pxor XMM2,XMM2
            movsxd R8,R13D
            movsd XMM3,QWORD PTR [RIP+.L_42dce8]
            nop
            nop
            nop
.L_42b570:

            add RCX,1
            cmp RCX,RDI
            je .L_42b6e0
.L_42b57d:

            xor EDX,EDX
            mov RAX,RCX
            div R8
            test EDX,EDX
            jle .L_42b570

            lea R9D,DWORD PTR [RDX+2]
            cmp R13D,R9D
            jl .L_42b570

            test EAX,EAX
            jle .L_42b570

            lea R9D,DWORD PTR [RAX+2]
            cmp DWORD PTR [RSP+8],R9D
            jl .L_42b570

            sub EAX,1
            lea R11D,DWORD PTR [RDX-1]
            lea R10D,DWORD PTR [RDX+1]
            imul EAX,R13D
            pxor XMM0,XMM0
            pxor XMM1,XMM1
            pxor XMM5,XMM5
            lea R9D,DWORD PTR [R11+RAX*1]
            movsxd R9,R9D
            cvtss2sd XMM0,DWORD PTR [RSI+R9*4]
            lea R9D,DWORD PTR [RAX+RDX*1]
            mulsd XMM0,XMM2
            movsxd R9,R9D
            cvtss2sd XMM1,DWORD PTR [RSI+R9*4]
            lea R9D,DWORD PTR [RAX+R10*1]
            add EAX,R13D
            movsxd R9,R9D
            addsd XMM0,XMM2
            cvtsd2ss XMM0,XMM0
            cvtss2sd XMM0,XMM0
            subsd XMM0,XMM1
            pxor XMM1,XMM1
            cvtss2sd XMM1,DWORD PTR [RSI+R9*4]
            lea R9D,DWORD PTR [RAX+R11*1]
            cvtsd2ss XMM0,XMM0
            cvtss2sd XMM0,XMM0
            mulsd XMM1,XMM2
            movsxd R9,R9D
            addsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+R9*4]
            lea R9D,DWORD PTR [RAX+RDX*1]
            cvtsd2ss XMM1,XMM1
            cvtss2sd XMM1,XMM1
            movsxd R9,R9D
            subsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+R9*4]
            lea R9D,DWORD PTR [RAX+R10*1]
            cvtsd2ss XMM1,XMM1
            cvtss2sd XMM1,XMM1
            mulsd XMM0,XMM3
            movsxd R9,R9D
            addsd XMM0,XMM1
            pxor XMM1,XMM1
            cvtss2sd XMM1,DWORD PTR [RSI+R9*4]
            lea R9D,DWORD PTR [R13+RAX*1]
            cvtsd2ss XMM0,XMM0
            cvtss2sd XMM0,XMM0
            add R11D,R9D
            lea EAX,DWORD PTR [R9+RDX*1]
            subsd XMM0,XMM1
            pxor XMM1,XMM1
            movsxd R11,R11D
            cdqe 
            cvtss2sd XMM1,DWORD PTR [RSI+R11*4]
            cvtsd2ss XMM0,XMM0
            cvtss2sd XMM0,XMM0
            mulsd XMM1,XMM2
            addsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+RAX*4]
            lea EAX,DWORD PTR [R10+R9*1]
            cvtsd2ss XMM1,XMM1
            cvtss2sd XMM1,XMM1
            cdqe 
            subsd XMM1,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+RAX*4]
            cvtsd2ss XMM1,XMM1
            cvtss2sd XMM1,XMM1
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RBX+RCX*4],XMM5
            add RCX,1
            cmp RCX,RDI
            jne .L_42b57d

            nop
            nop
.L_42b6e0:

            mov EAX,DWORD PTR [RSP+8]
            test EAX,EAX
            jle .L_42b7d4

            test R13D,R13D
            mov RAX,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+272]
            mov R9,QWORD PTR [RSP+176]
            mov R11,QWORD PTR [RSP+320]
            jle .L_42b7d4

            lea ECX,DWORD PTR [R13-1]
            mov R12,QWORD PTR [RAX+24]
            mov RBP,QWORD PTR [RAX+48]
            movsxd RSI,R13D
            movss XMM1,DWORD PTR [RIP+.L_42dd40]
            mov DWORD PTR [RSP+24],R13D
            lea RDX,QWORD PTR [RCX+1]
            movsd XMM3,QWORD PTR [RIP+.L_42dcf0]
            not RCX
            xor R10D,R10D
            mov R8D,1
            mov R14,RCX
            mov R13,RSI
            nop
            nop
            nop
            nop
.L_42b750:

            lea RCX,QWORD PTR [R14+RDX*1]
            nop
            nop
            nop
            nop
.L_42b758:

            mov RAX,RCX
            mov R15,R8
            shr RAX,6
            shl R15,CL
            test QWORD PTR [RDI+RAX*8],R15
            lea RSI,QWORD PTR [RAX*8]
            jne .L_42b7b8

            test QWORD PTR [R9+RAX*8],R15
            je .L_42b7b8

            movss XMM0,DWORD PTR [RBX+RCX*4]
            andps XMM0,XMM1
            movsd XMM4,QWORD PTR [RSP+16]
            cvtss2sd XMM0,XMM0
            ucomisd XMM4,XMM0
            jbe .L_42b7b8

            pxor XMM0,XMM0
            pxor XMM2,XMM2
            cvtss2sd XMM0,DWORD PTR [R12+RCX*4]
            cvtss2sd XMM2,DWORD PTR [RBP+RCX*4]
            mulsd XMM0,XMM3
            ucomisd XMM0,XMM2
            jbe .L_42b7b8

            or QWORD PTR [R11+RSI*1],R15
            nop
            nop
            nop
            nop
            nop
.L_42b7b8:

            add RCX,1
            cmp RCX,RDX
            jne .L_42b758

            add R10D,1
            add RDX,R13
            cmp DWORD PTR [RSP+8],R10D
            jne .L_42b750

            mov R13D,DWORD PTR [RSP+24]
.L_42b7d4:

            mov R14D,DWORD PTR [RSP+8]
            lea R15,QWORD PTR [RSP+320]
            mov EDI,R13D
            mov RDX,R15
            mov ESI,R14D
.L_42b7ea:

            call .L_42a200

            mov RDX,R15
            mov ESI,R14D
            mov EDI,R13D
            call .L_42a200

            mov EDI,40
            mov R12,QWORD PTR [RSP+48]
            add R12,QWORD PTR [RSP+80]
            call _Znwm@PLT
.L_42b811:

            pxor XMM5,XMM5
            mov RBP,RAX
            pxor XMM0,XMM0
            mov QWORD PTR [RAX+32],0
            xor R14D,R14D
            cvtss2sd XMM5,DWORD PTR [RSP+56]
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            movapd XMM0,XMM5
            movsd QWORD PTR [RSP+16],XMM5
            addsd XMM0,XMM5
            mulsd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM0
            nop
            nop
            nop
            nop
.L_42b850:

            pxor XMM0,XMM0
            cvtsi2sd XMM0,R14
            subsd XMM0,QWORD PTR [RIP+.L_42dcf8]
            movapd XMM1,XMM0
            xorpd XMM1,XMMWORD PTR [RIP+.L_42dd50]
            mulsd XMM0,XMM1
            divsd XMM0,QWORD PTR [RSP+24]
            call exp@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_42dd00]
            divsd XMM0,QWORD PTR [RSP+16]
            movsd QWORD PTR [RBP+R14*8],XMM0
            add R14,1
            cmp R14,5
            jne .L_42b850

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RBP+40]
            mov RAX,RBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b8b0:

            addsd XMM0,QWORD PTR [RAX]
            add RAX,8
            cmp RAX,RDX
            jne .L_42b8b0

            movsd XMM6,QWORD PTR [RIP+.L_42dd08]
            mov ECX,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+112]
            mov R9D,5
            mov R8,RBP
            mov EDX,R13D
            divsd XMM6,XMM0
            mov RSI,R12
            movapd XMM0,XMM6
.L_42b8e5:

            call .L_429e70
.L_42b8ea:

            mov R8,QWORD PTR [R12]
            mov RSI,QWORD PTR [R12+8]
            sub RSI,R8
            sar RSI,2
            test RSI,RSI
            je .L_42baff

            mov RDI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R8+16]
            cmp RDI,RAX
            lea RAX,QWORD PTR [RDI+16]
            setae DL
            cmp R8,RAX
            setae AL
            or DL,AL
            je .L_42c3d2

            cmp RSI,6
            jbe .L_42c3d2

            mov RDX,RDI
            xor R9D,R9D
            shr RDX,2
            neg RDX
            and EDX,3
            je .L_42b9b2

            movss XMM1,DWORD PTR [R8]
            cmp RDX,1
            mov R9D,1
            movaps XMM0,XMM1
            movss XMM3,DWORD PTR [RSP+40]
            subss XMM0,DWORD PTR [RDI]
            mulss XMM0,XMM3
            addss XMM0,XMM1
            movss DWORD PTR [RDI],XMM0
            je .L_42b9b2

            movss XMM1,DWORD PTR [R8+4]
            cmp RDX,3
            mov R9D,2
            movaps XMM0,XMM1
            subss XMM0,DWORD PTR [RDI+4]
            mulss XMM0,XMM3
            addss XMM0,XMM1
            movss DWORD PTR [RDI+4],XMM0
            jne .L_42b9b2

            movss XMM1,DWORD PTR [R8+8]
            mov R9D,3
            movaps XMM0,XMM1
            subss XMM0,DWORD PTR [RDI+8]
            mulss XMM0,XMM3
            addss XMM0,XMM1
            movss DWORD PTR [RDI+8],XMM0
.L_42b9b2:

            mov R12,RSI
            movss XMM2,DWORD PTR [RSP+40]
            sub R12,RDX
            shufps XMM2,XMM2,0
            shl RDX,2
            mov R11,R12
            xor EAX,EAX
            lea R10,QWORD PTR [R8+RDX*1]
            shr R11,2
            add RDX,RDI
            xor ECX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42b9e0:

            movups XMM0,XMMWORD PTR [R10+RAX*1]
            add RCX,1
            movaps XMM1,XMM0
            subps XMM1,XMMWORD PTR [RDX+RAX*1]
            mulps XMM1,XMM2
            addps XMM0,XMM1
            movaps XMMWORD PTR [RDX+RAX*1],XMM0
            add RAX,16
            cmp R11,RCX
            ja .L_42b9e0

            mov RAX,R12
            and RAX,-4
            add R9,RAX
            cmp RAX,R12
            je .L_42baff

            movss XMM1,DWORD PTR [R8+R9*4]
            lea RAX,QWORD PTR [RDI+R9*4]
            movaps XMM0,XMM1
            movss XMM6,DWORD PTR [RSP+40]
            subss XMM0,DWORD PTR [RAX]
            mulss XMM0,XMM6
            addss XMM0,XMM1
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [R9+1]
            cmp RAX,RSI
            jae .L_42baff

            movss XMM1,DWORD PTR [R8+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            movaps XMM0,XMM1
            subss XMM0,DWORD PTR [RAX]
            mulss XMM0,XMM6
            addss XMM0,XMM1
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [R9+2]
            cmp RAX,RSI
            jae .L_42baff

            movss XMM1,DWORD PTR [R8+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            movaps XMM0,XMM1
            subss XMM0,DWORD PTR [RAX]
            mulss XMM0,XMM6
            addss XMM0,XMM1
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [R9+3]
            cmp RAX,RSI
            jae .L_42baff

            movss XMM1,DWORD PTR [R8+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            movaps XMM0,XMM1
            subss XMM0,DWORD PTR [RAX]
            mulss XMM0,XMM6
            addss XMM0,XMM1
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [R9+4]
            cmp RAX,RSI
            jae .L_42baff

            movss XMM1,DWORD PTR [R8+RAX*4]
            lea RAX,QWORD PTR [RDI+RAX*4]
            add R9,5
            movaps XMM0,XMM1
            cmp R9,RSI
            subss XMM0,DWORD PTR [RAX]
            mulss XMM0,XMM6
            addss XMM0,XMM1
            movss DWORD PTR [RAX],XMM0
            jae .L_42baff

            movss XMM1,DWORD PTR [R8+R9*4]
            lea RAX,QWORD PTR [RDI+R9*4]
            movaps XMM0,XMM1
            subss XMM0,DWORD PTR [RAX]
            mulss XMM0,XMM6
            addss XMM0,XMM1
            movss DWORD PTR [RAX],XMM0
.L_42baff:

            mov RDI,RBP
            call _ZdlPv@PLT

            mov EDI,40
            mov R12,QWORD PTR [RSP+48]
            add R12,QWORD PTR [RSP+80]
.L_42bb16:

            call _Znwm@PLT
.L_42bb1b:

            pxor XMM0,XMM0
            mov RBP,RAX
            mov QWORD PTR [RAX+32],0
            xor R14D,R14D
            movups XMMWORD PTR [RAX],XMM0
            movups XMMWORD PTR [RAX+16],XMM0
            nop
            nop
            nop
            nop
.L_42bb38:

            pxor XMM0,XMM0
            cvtsi2sd XMM0,R14
            subsd XMM0,QWORD PTR [RIP+.L_42dcf8]
            movapd XMM1,XMM0
            xorpd XMM1,XMMWORD PTR [RIP+.L_42dd50]
            mulsd XMM0,XMM1
            divsd XMM0,QWORD PTR [RIP+.L_42dd10]
            call exp@PLT

            mulsd XMM0,QWORD PTR [RIP+.L_42dd00]
            divsd XMM0,QWORD PTR [RIP+.L_43e980-68712]
            movsd QWORD PTR [RBP+R14*8],XMM0
            add R14,1
            cmp R14,5
            jne .L_42bb38

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RBP+40]
            mov RAX,RBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_42bb98:

            addsd XMM0,QWORD PTR [RAX]
            add RAX,8
            cmp RAX,RDX
            jne .L_42bb98

            movsd XMM6,QWORD PTR [RIP+.L_42dd08]
            mov R14D,DWORD PTR [RSP+8]
            lea RDI,QWORD PTR [RSP+144]
            mov R9D,5
            mov R8,RBP
            mov EDX,R13D
            divsd XMM6,XMM0
            mov RSI,R12
            mov ECX,R14D
            movapd XMM0,XMM6
.L_42bbd4:

            call .L_429e70
.L_42bbd9:

            mov RDI,RBP
            call _ZdlPv@PLT

            test R14D,R14D
            jle .L_42c45a

            mov RAX,QWORD PTR [RSP+80]
            mov RBP,QWORD PTR [RSP+48]
            xor R10D,R10D
            mov QWORD PTR [RSP+40],RBX
            movzx EBX,BYTE PTR [RSP+63]
            xor R9D,R9D
            mov RDI,QWORD PTR [RSP+272]
            mov R11,QWORD PTR [RSP+320]
            mov ESI,1
            mov QWORD PTR [RSP+24],RAX
            add RBP,RAX
            lea EAX,DWORD PTR [R13-1]
            mov R14,QWORD PTR [RSP+144]
            mov R12,QWORD PTR [RSP+112]
            add RAX,1
            mov QWORD PTR [RSP+16],RAX
            nop
            nop
            nop
            nop
            nop
.L_42bc40:

            test R13D,R13D
            jle .L_42bc86

            cmp BYTE PTR [RSP+62],0
            movsxd RCX,R10D
            jne .L_42c128

            mov RAX,QWORD PTR [RSP+16]
            lea RDX,QWORD PTR [RAX+RCX*1]
            nop
            nop
            nop
            nop
.L_42bc60:

            mov RAX,RCX
            mov R8,RSI
            shr RAX,6
            shl R8,CL
            test QWORD PTR [RDI+RAX*8],R8
            jne .L_42bc7d

            test QWORD PTR [R11+RAX*8],R8
            jne .L_42c190
.L_42bc7d:

            add RCX,1
            cmp RCX,RDX
            jne .L_42bc60
.L_42bc86:

            add R9D,1
            add R10D,R13D
            cmp DWORD PTR [RSP+8],R9D
            jne .L_42bc40

            mov RBX,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+24]
.L_42bc9e:

            mov RCX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+8]
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            sub RDI,RCX
            sar RDI,2
            test RDI,RDI
            je .L_42c01a

            mov RAX,QWORD PTR [RSP+24]
            lea R10,QWORD PTR [RCX+16]
            mov R8,QWORD PTR [RAX+48]
            mov RSI,QWORD PTR [RAX+24]
            lea R9,QWORD PTR [R8+16]
            lea RDX,QWORD PTR [RSI+16]
            cmp RSI,R9
            setae AL
            cmp R8,RDX
            setae R11B
            or EAX,R11D
            cmp RCX,RDX
            setae DL
            cmp RSI,R10
            setae R11B
            or EDX,R11D
            and EAX,EDX
            cmp R8,R10
            setae DL
            cmp RCX,R9
            setae R9B
            or EDX,R9D
            test AL,DL
            je .L_42c375

            cmp RDI,6
            jbe .L_42c375

            mov RDX,RCX
            xor R10D,R10D
            shr RDX,2
            neg RDX
            and EDX,3
            je .L_42bdf0

            movss XMM1,DWORD PTR [RCX]
            cmp RDX,1
            mov R10D,1
            movss XMM0,DWORD PTR [RIP+.L_42dc1c]
            mulss XMM1,XMM0
            movss DWORD PTR [RCX],XMM1
            movss XMM1,DWORD PTR [RIP+.L_42dc44]
            movss XMM2,DWORD PTR [RSI]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RSI],XMM2
            movss XMM2,DWORD PTR [R8]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [R8],XMM2
            je .L_42bdf0

            movss XMM2,DWORD PTR [RCX+4]
            cmp RDX,3
            mov R10D,2
            mulss XMM2,XMM0
            movss DWORD PTR [RCX+4],XMM2
            movss XMM2,DWORD PTR [RSI+4]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RSI+4],XMM2
            movss XMM2,DWORD PTR [R8+4]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [R8+4],XMM2
            jne .L_42bdf0

            movss XMM2,DWORD PTR [RCX+8]
            mov R10D,3
            mulss XMM2,XMM0
            movss DWORD PTR [RCX+8],XMM2
            movss XMM2,DWORD PTR [RSI+8]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RSI+8],XMM2
            addss XMM1,DWORD PTR [R8+8]
            mulss XMM0,XMM1
            movss DWORD PTR [R8+8],XMM0
.L_42bdf0:

            mov RBP,RDI
            movaps XMM0,XMMWORD PTR [RIP+.L_42dd20]
            sub RBP,RDX
            shl RDX,2
            xor EAX,EAX
            mov R11,RBP
            movaps XMM2,XMMWORD PTR [RIP+.L_42dd60]
            lea R13,QWORD PTR [RCX+RDX*1]
            lea R9,QWORD PTR [RSI+RDX*1]
            shr R11,2
            add RDX,R8
            xor R14D,R14D
            nop
.L_42be20:

            movaps XMM1,XMMWORD PTR [R13+RAX*1]
            add R14,1
            mulps XMM1,XMM0
            movaps XMMWORD PTR [R13+RAX*1],XMM1
            movups XMM1,XMMWORD PTR [R9+RAX*1]
            addps XMM1,XMM2
            mulps XMM1,XMM0
            movups XMMWORD PTR [R9+RAX*1],XMM1
            movups XMM1,XMMWORD PTR [RDX+RAX*1]
            addps XMM1,XMM2
            mulps XMM1,XMM0
            movups XMMWORD PTR [RDX+RAX*1],XMM1
            add RAX,16
            cmp R11,R14
            ja .L_42be20

            mov RAX,RBP
            and RAX,-4
            add R10,RAX
            cmp RAX,RBP
            je .L_42c01a

            lea RAX,QWORD PTR [R10*4]
            movss XMM0,DWORD PTR [RIP+.L_42dc1c]
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM1,DWORD PTR [RDX]
            mulss XMM1,XMM0
            movss DWORD PTR [RDX],XMM1
            lea RDX,QWORD PTR [RSI+RAX*1]
            add RAX,R8
            movss XMM1,DWORD PTR [RIP+.L_42dc44]
            movss XMM2,DWORD PTR [RDX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [R10+1]
            cmp RAX,RDI
            jae .L_42c01a

            shl RAX,2
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM2,DWORD PTR [RDX]
            mulss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            lea RDX,QWORD PTR [RSI+RAX*1]
            add RAX,R8
            movss XMM2,DWORD PTR [RDX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [R10+2]
            cmp RAX,RDI
            jae .L_42c01a

            shl RAX,2
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM2,DWORD PTR [RDX]
            mulss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            lea RDX,QWORD PTR [RSI+RAX*1]
            add RAX,R8
            movss XMM2,DWORD PTR [RDX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [R10+3]
            cmp RAX,RDI
            jae .L_42c01a

            shl RAX,2
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM2,DWORD PTR [RDX]
            mulss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            lea RDX,QWORD PTR [RSI+RAX*1]
            add RAX,R8
            movss XMM2,DWORD PTR [RDX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [R10+4]
            cmp RAX,RDI
            jae .L_42c01a

            shl RAX,2
            add R10,5
            lea RDX,QWORD PTR [RCX+RAX*1]
            movss XMM2,DWORD PTR [RDX]
            mulss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            lea RDX,QWORD PTR [RSI+RAX*1]
            add RAX,R8
            cmp R10,RDI
            movss XMM2,DWORD PTR [RDX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            movss XMM2,DWORD PTR [RAX]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RAX],XMM2
            jae .L_42c01a

            lea RAX,QWORD PTR [R10*4]
            add RCX,RAX
            add RSI,RAX
            add RAX,R8
            movss XMM2,DWORD PTR [RCX]
            mulss XMM2,XMM0
            movss DWORD PTR [RCX],XMM2
            movss XMM2,DWORD PTR [RSI]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RSI],XMM2
            addss XMM1,DWORD PTR [RAX]
            mulss XMM0,XMM1
            movss DWORD PTR [RAX],XMM0
.L_42c01a:

            mov RSI,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+144]
            pxor XMM0,XMM0
            mov QWORD PTR [RSI],RAX
            mov RAX,QWORD PTR [RSP+88]
            test RDI,RDI
            movaps XMMWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSI+8],RAX
            mov RAX,QWORD PTR [RSP+96]
            mov QWORD PTR [RSP+96],0
            mov QWORD PTR [RSI+16],RAX
            je .L_42c05d

            call _ZdlPv@PLT
.L_42c05d:

            mov RDI,QWORD PTR [RSP+112]
            test RDI,RDI
            je .L_42c06c

            call _ZdlPv@PLT
.L_42c06c:

            test RBX,RBX
            je .L_42c079

            mov RDI,RBX
            call _ZdlPv@PLT
.L_42c079:

            mov RDI,QWORD PTR [RSP+320]
            test RDI,RDI
            je .L_42c08b

            call _ZdlPv@PLT
.L_42c08b:

            mov RDI,QWORD PTR [RSP+272]
            test RDI,RDI
            je .L_42c09d

            call _ZdlPv@PLT
.L_42c09d:

            mov RDI,QWORD PTR [RSP+224]
            test RDI,RDI
            je .L_42c0af

            call _ZdlPv@PLT
.L_42c0af:

            mov RDI,QWORD PTR [RSP+176]
            test RDI,RDI
            je .L_42c0c1

            call _ZdlPv@PLT
.L_42c0c1:

            mov RAX,QWORD PTR [RSP+88]
            mov RDI,QWORD PTR [RSP+80]
            cmp RAX,RDI
            je .L_42c10e

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_42c0f9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c0e8:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_42c109
.L_42c0f5:

            add RBX,24
.L_42c0f9:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_42c0e8

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_42c0f5
.L_42c109:

            mov RDI,QWORD PTR [RSP+80]
.L_42c10e:

            test RDI,RDI
            je .L_42a936

            call _ZdlPv@PLT

            jmp .L_42a936
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c128:

            mov RDX,QWORD PTR [RSP+16]
            lea RAX,QWORD PTR [RCX*4]
            lea R8,QWORD PTR [RDX+RCX*1]
            shl R8,2
            jmp .L_42c160

            nop
.L_42c140:

            mov RDX,QWORD PTR [RBP]
            movss XMM0,DWORD PTR [R12+RAX*1]
            movss DWORD PTR [RDX+RAX*1],XMM0
.L_42c14f:

            add RAX,4
            add RCX,1
            cmp RAX,R8
            je .L_42bc86
.L_42c160:

            mov RDX,RCX
            mov R15,RSI
            shr RDX,6
            shl R15,CL
            test QWORD PTR [RDI+RDX*8],R15
            jne .L_42c140

            test QWORD PTR [R11+RDX*8],R15
            je .L_42c14f

            test BL,BL
            je .L_42c14f

            mov RDX,QWORD PTR [RBP]
            movss XMM0,DWORD PTR [R14+RAX*1]
            movss DWORD PTR [RDX+RAX*1],XMM0
            jmp .L_42c14f
          .byte 0x66
          .byte 0x90
.L_42c190:

            mov RAX,QWORD PTR [RBP]
            movss XMM0,DWORD PTR [R14+RCX*4]
            movss DWORD PTR [RAX+RCX*4],XMM0
            jmp .L_42bc7d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42c1a8:

            movsxd RCX,EDI
            movsd XMM9,QWORD PTR [RIP+.L_42dcc8]
            lea R9,QWORD PTR [R12+RCX*1]
            movsd XMM8,QWORD PTR [RIP+.L_42dcd0]
            mov EBX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c1d0:

            pxor XMM1,XMM1
            pxor XMM2,XMM2
            cvtss2sd XMM1,DWORD PTR [RAX+RCX*4]
            cvtss2sd XMM2,DWORD PTR [RDX+RCX*4]
            movapd XMM0,XMM1
            movapd XMM7,XMM2
            mulsd XMM0,XMM9
            mulsd XMM7,XMM3
            addsd XMM0,XMM8
            ucomisd XMM7,XMM0
            jbe .L_42c228

            mulsd XMM1,XMM5
            mulsd XMM2,XMM6
            addsd XMM1,XMM8
            ucomisd XMM2,XMM1
            jbe .L_42c228

            mov R11,RCX
            mov RBP,RBX
            shr R11,6
            shl RBP,CL
            or QWORD PTR [R8+R11*8],RBP
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c228:

            add RCX,1
            cmp RCX,R9
            jne .L_42c1d0

            add ESI,1
            add EDI,R13D
            cmp R14D,ESI
            jne .L_42b1a8

            jmp .L_42b248
.L_42c245:

            mov QWORD PTR [RSP+24],0
            jmp .L_42a9af
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c258:

            mov RAX,QWORD PTR [RSP+24]
            add RAX,63
            shr RAX,6
            lea RBP,QWORD PTR [RAX*8]
            mov RDI,RBP
.L_42c270:

            call _Znwm@PLT
.L_42c275:

            add RBP,RAX
            mov RDI,RAX
            mov QWORD PTR [RSP+320],RAX
            mov QWORD PTR [RSP+352],RBP
            mov DWORD PTR [RSP+328],0
            jmp .L_42b472
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42c2a0:

            lea R12,QWORD PTR [RBX+63]
            mov RBP,R12
            shr RBP,6
            shl RBP,3
            mov RDI,RBP
.L_42c2b2:

            call _Znwm@PLT
.L_42c2b7:

            add RBP,RAX
            mov R8,RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+208],RBP
            mov DWORD PTR [RSP+184],0
            jmp .L_42ae86
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42c2e0:

            lea R12,QWORD PTR [RBP+63]
            mov RBX,R12
            shr RBX,6
            shl RBX,3
            mov RDI,RBX
.L_42c2f2:

            call _Znwm@PLT
.L_42c2f7:

            mov RDX,QWORD PTR [R14]
            mov R8,RAX
            lea RAX,QWORD PTR [RAX+RBX*1]
            mov QWORD PTR [RSP+272],R8
            mov DWORD PTR [RSP+280],0
            mov QWORD PTR [RSP+304],RAX
            mov RBX,QWORD PTR [RDX+8]
            sub RBX,QWORD PTR [RDX]
            sar RBX,2
            mov QWORD PTR [RSP+24],RBX
            jmp .L_42b2e8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42c338:

            lea R12,QWORD PTR [RBX+63]
            mov RBP,R12
            shr RBP,6
            shl RBP,3
            mov RDI,RBP
.L_42c34a:

            call _Znwm@PLT
.L_42c34f:

            add RBP,RAX
            mov R8,RAX
            mov QWORD PTR [RSP+224],RAX
            mov QWORD PTR [RSP+256],RBP
            mov DWORD PTR [RSP+232],0
            jmp .L_42b0f9
.L_42c375:

            xor EAX,EAX
            movss XMM0,DWORD PTR [RIP+.L_42dc1c]
            movss XMM1,DWORD PTR [RIP+.L_42dc44]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c390:

            movss XMM2,DWORD PTR [RCX+RAX*4]
            mulss XMM2,XMM0
            movss DWORD PTR [RCX+RAX*4],XMM2
            movss XMM2,DWORD PTR [RSI+RAX*4]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [RSI+RAX*4],XMM2
            movss XMM2,DWORD PTR [R8+RAX*4]
            addss XMM2,XMM1
            mulss XMM2,XMM0
            movss DWORD PTR [R8+RAX*4],XMM2
            add RAX,1
            cmp RDI,RAX
            jne .L_42c390

            jmp .L_42c01a
.L_42c3d2:

            xor EAX,EAX
            nop
            nop
            nop
            nop
.L_42c3d8:

            movss XMM0,DWORD PTR [R8+RAX*4]
            movaps XMM1,XMM0
            subss XMM1,DWORD PTR [RDI+RAX*4]
            mulss XMM1,DWORD PTR [RSP+40]
            addss XMM0,XMM1
            movss DWORD PTR [RDI+RAX*4],XMM0
            add RAX,1
            cmp RSI,RAX
            jne .L_42c3d8

            jmp .L_42baff
.L_42c403:

            xor EAX,EAX
            movss XMM0,DWORD PTR [RIP+.L_42dc1c]
            movss XMM1,DWORD PTR [RIP+.L_42dc44]
            nop
            nop
            nop
.L_42c418:

            movss XMM2,DWORD PTR [RCX+RAX*4]
            divss XMM2,XMM0
            movss DWORD PTR [RCX+RAX*4],XMM2
            movss XMM2,DWORD PTR [RDI+RAX*4]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [RDI+RAX*4],XMM2
            movss XMM2,DWORD PTR [R9+RAX*4]
            divss XMM2,XMM0
            subss XMM2,XMM1
            movss DWORD PTR [R9+RAX*4],XMM2
            add RAX,1
            cmp R8,RAX
            jne .L_42c418

            jmp .L_42ae2c
.L_42c45a:

            mov RAX,QWORD PTR [RSP+80]
            mov QWORD PTR [RSP+24],RAX
            jmp .L_42bc9e
.L_42c469:

            xor EBX,EBX
            jmp .L_42b534
.L_42c470:

            xor R15D,R15D
            mov RAX,RDI
            jmp .L_42a86d
.L_42c47b:

            lea RDI,QWORD PTR [RSP+224]
            mov RBX,RAX
            call .L_4084e0
.L_42c48b:

            mov RDI,QWORD PTR [RSP+64]
            call .L_4084e0
.L_42c495:

            lea RDI,QWORD PTR [RSP+80]
            call .L_4189d0
.L_42c49f:

            mov RDI,RBX
.L_42c4a2:

            call _Unwind_Resume@PLT
.L_42c4a7:

            lea RDI,QWORD PTR [RSP+272]
            mov RBX,RAX
            call .L_4084e0
.L_42c4b7:

            mov RDI,QWORD PTR [RSP+72]
            call .L_4084e0

            jmp .L_42c48b
.L_42c4c3:

            lea RDI,QWORD PTR [RSP+176]
            mov RBX,RAX
            call .L_4084e0

            jmp .L_42c495
.L_42c4d5:

            lea RDI,QWORD PTR [RSP+320]
            mov RBX,RAX
            call .L_4084e0
.L_42c4e5:

            lea RDI,QWORD PTR [RSP+272]
            call .L_4084e0

            jmp .L_42c4b7
.L_42c4f4:

            call _ZSt17__throw_bad_allocv@PLT
.L_42c4f9:

            lea R15,QWORD PTR [RSP+320]
            mov RBX,RAX
.L_42c504:

            mov RDI,R15
            call .L_4084e0

            jmp .L_42c4e5
.L_42c50e:

            mov RBX,RAX
            jmp .L_42c48b
.L_42c516:

            mov RBX,RAX
            jmp .L_42c4b7
.L_42c51b:

            call __stack_chk_fail@PLT
.L_42c520:

            mov RBP,RAX
.L_42c523:

            mov RDI,QWORD PTR [RSP+112]
            test RDI,RDI
            je .L_42c532

            call _ZdlPv@PLT
.L_42c532:

            test RBX,RBX
            je .L_42c53f

            mov RDI,RBX
            call _ZdlPv@PLT
.L_42c53f:

            mov RBX,RBP
            jmp .L_42c504
.L_42c544:

            mov RBP,RAX
            jmp .L_42c532
.L_42c549:

            mov R12,RAX
            mov RDI,RBP
            call _ZdlPv@PLT

            mov RBP,R12
            jmp .L_42c532
.L_42c559:

            call _ZSt17__throw_bad_allocv@PLT
.L_42c55e:

            call _ZSt17__throw_bad_allocv@PLT
.L_42c563:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            mov RBP,QWORD PTR [RSP+24]
.L_42c570:

            cmp RBP,RBX
            je .L_42c589

            mov RDI,QWORD PTR [RBP]
            test RDI,RDI
            je .L_42c583

            call _ZdlPv@PLT
.L_42c583:

            add RBP,24
            jmp .L_42c570
.L_42c589:

            call __cxa_rethrow@PLT
.L_42c58e:

            mov R12,RAX
            mov RDI,RBP
            call _ZdlPv@PLT

            mov RBP,R12
            jmp .L_42c523
.L_42c59e:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+80]
            test RDI,RDI
            je .L_42c49f
.L_42c5b4:

            call _ZdlPv@PLT

            jmp .L_42c49f
.L_42c5be:

            call _ZSt17__throw_bad_allocv@PLT
.L_42c5c3:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_42c5cb:

            cmp R15,RBX
            je .L_42c5e3

            mov RDI,QWORD PTR [R15]
            test RDI,RDI
            je .L_42c5dd

            call _ZdlPv@PLT
.L_42c5dd:

            add R15,24
            jmp .L_42c5cb
.L_42c5e3:

            call __cxa_rethrow@PLT
.L_42c5e8:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RAX,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            jne .L_42c5b4

            jmp .L_42c49f
.L_42c602:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42c610:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            pxor XMM0,XMM0
            sub RSP,360
.L_42c628:

            mov DWORD PTR [RSP+4],EDX
            mov RDX,QWORD PTR [RSI+8]
            sub RDX,QWORD PTR [RSI]
            mov DWORD PTR [RSP+24],ECX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+344],RAX
            xor EAX,EAX
            movaps XMMWORD PTR [RSP+64],XMM0
            mov QWORD PTR [RSP+80],0
            test RDX,RDX
            je .L_42d1e0

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_42d26e

            lea RBX,QWORD PTR [RDX*4]
            mov RBP,RSI
            mov RDI,RBX
.L_42c682:

            call _Znwm@PLT
.L_42c687:

            lea R12,QWORD PTR [RAX+RBX*1]
            xor ESI,ESI
            mov RDI,RAX
            mov RDX,RBX
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+80],R12
            call memset@PLT

            mov R8,RAX
            mov RAX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RBP]
            mov QWORD PTR [RSP+72],R12
            mov R9,RAX
            sub R9,RDI
            je .L_42c7f3

            lea RDX,QWORD PTR [R8+R9*4]
            cmp RDI,RDX
            setae DL
            cmp R8,RAX
            setae AL
            or DL,AL
            je .L_42d1b0

            cmp R9,20
            jbe .L_42d1b0

            mov RCX,R8
            shr RCX,2
            neg RCX
            and ECX,3
            je .L_42d201

            movzx EAX,BYTE PTR [RDI]
            pxor XMM0,XMM0
            cmp RCX,1
            cvtsi2ss XMM0,EAX
            mov EAX,1
            movss DWORD PTR [R8],XMM0
            je .L_42c742

            movzx EAX,BYTE PTR [RDI+1]
            pxor XMM0,XMM0
            cmp RCX,3
            cvtsi2ss XMM0,EAX
            mov EAX,2
            movss DWORD PTR [R8+4],XMM0
            jne .L_42c742

            movzx EAX,BYTE PTR [RDI+2]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EAX
            mov EAX,3
            movss DWORD PTR [R8+8],XMM0
.L_42c742:

            mov R11,R9
            pxor XMM5,XMM5
            sub R11,RCX
            pxor XMM4,XMM4
            mov R10,R11
            lea RDX,QWORD PTR [R8+RCX*4]
            xor ESI,ESI
            shr R10,4
            add RCX,RDI
.L_42c760:

            movdqu XMM0,XMMWORD PTR [RCX]
            movdqa XMM3,XMM4
            add RSI,1
            add RDX,64
            add RCX,16
            movdqa XMM1,XMM0
            punpckhbw XMM0,XMM5
            punpcklbw XMM1,XMM5
            pcmpgtw XMM3,XMM1
            movdqa XMM2,XMM1
            punpcklwd XMM2,XMM3
            punpckhwd XMM1,XMM3
            cvtdq2ps XMM2,XMM2
            movaps XMMWORD PTR [RDX-64],XMM2
            movdqa XMM2,XMM4
            cvtdq2ps XMM1,XMM1
            movaps XMMWORD PTR [RDX-48],XMM1
            pcmpgtw XMM2,XMM0
            movdqa XMM1,XMM0
            punpckhwd XMM0,XMM2
            punpcklwd XMM1,XMM2
            cvtdq2ps XMM0,XMM0
            movaps XMMWORD PTR [RDX-16],XMM0
            cvtdq2ps XMM1,XMM1
            movaps XMMWORD PTR [RDX-32],XMM1
            cmp RSI,R10
            jb .L_42c760

            mov RDX,R11
            and RDX,-16
            add RAX,RDX
            cmp RDX,R11
            je .L_42c7f3

            nop
            nop
            nop
            nop
.L_42c7d8:

            movzx EDX,BYTE PTR [RDI+RAX*1]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EDX
            movss DWORD PTR [R8+RAX*4],XMM0
            add RAX,1
            cmp R9,RAX
            ja .L_42c7d8
.L_42c7f3:

            lea RAX,QWORD PTR [RSP+96]
            lea RBX,QWORD PTR [RSP+64]
            mov RDI,RAX
            mov RSI,RBX
            mov QWORD PTR [RSP+16],RAX
.L_42c808:

            call .L_429110
.L_42c80d:

            lea RAX,QWORD PTR [RSP+320]
            mov ECX,DWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+4]
            mov RSI,RBX
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            mov RBX,RAX
.L_42c82b:

            call .L_429770
.L_42c830:

            lea RAX,QWORD PTR [RSP+128]
            mov RSI,RBX
            mov RDI,RAX
            mov QWORD PTR [RSP+40],RAX
.L_42c843:

            call .L_429a70
.L_42c848:

            mov RDI,QWORD PTR [RSP+320]
            test RDI,RDI
            je .L_42c85a

            call _ZdlPv@PLT
.L_42c85a:

            mov R13,QWORD PTR [RSP+136]
            mov RBP,QWORD PTR [RSP+128]
            movabs RDX,-6148914691236517205
            xor R14D,R14D
            mov QWORD PTR [R15],0
            mov QWORD PTR [R15+8],0
            mov QWORD PTR [R15+16],0
            mov RBX,R13
            sub RBX,RBP
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            test RAX,RAX
            je .L_42c8d2

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_42d236

            mov RDI,RBX
.L_42c8ba:

            call _Znwm@PLT
.L_42c8bf:

            mov R13,QWORD PTR [RSP+136]
            mov RBP,QWORD PTR [RSP+128]
            mov R14,RAX
.L_42c8d2:

            add RBX,R14
            cmp R13,RBP
            mov QWORD PTR [R15],R14
            mov QWORD PTR [R15+16],RBX
            mov QWORD PTR [R15+8],R14
            mov RBX,R14
            je .L_42c98e

            nop
            nop
            nop
            nop
.L_42c8f0:

            test RBX,RBX
            je .L_42c97a

            mov R12,QWORD PTR [RBP+8]
            sub R12,QWORD PTR [RBP]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R12
            sar RAX,2
            test RAX,RAX
            je .L_42c944

            movabs RCX,4611686018427387903
            cmp RAX,RCX
            ja .L_42d208

            mov RDI,R12
.L_42c93c:

            call _Znwm@PLT
.L_42c941:

            mov RCX,RAX
.L_42c944:

            add R12,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R12
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov R12,RAX
            sub R12,RSI
            cmp RAX,RSI
            je .L_42c973

            mov RDI,RCX
            mov RDX,R12
            call memmove@PLT

            mov RCX,RAX
.L_42c973:

            add RCX,R12
            mov QWORD PTR [RBX+8],RCX
.L_42c97a:

            add RBP,24
            add RBX,24
            cmp R13,RBP
            jne .L_42c8f0

            mov R14,QWORD PTR [R15]
.L_42c98e:

            mov ECX,DWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+4]
            lea RDI,QWORD PTR [RSP+160]
            mov QWORD PTR [R15+8],RBX
            mov RSI,R14
.L_42c9a5:

            call .L_428f20
.L_42c9aa:

            mov RDX,QWORD PTR [R15]
            mov QWORD PTR [RDX+8],0
            mov QWORD PTR [RDX+16],0
            mov RDI,QWORD PTR [RDX]
            mov QWORD PTR [RDX],0
            mov RAX,QWORD PTR [RSP+160]
            test RDI,RDI
            mov QWORD PTR [RDX],RAX
            mov RAX,QWORD PTR [RSP+168]
            mov QWORD PTR [RSP+160],0
            mov QWORD PTR [RDX+8],RAX
            mov RAX,QWORD PTR [RSP+176]
            mov QWORD PTR [RSP+168],0
            mov QWORD PTR [RDX+16],RAX
            mov QWORD PTR [RSP+176],0
            je .L_42ca2d

            call _ZdlPv@PLT

            mov RDI,QWORD PTR [RSP+160]
            test RDI,RDI
            je .L_42ca2a

            call _ZdlPv@PLT
.L_42ca2a:

            mov RDX,QWORD PTR [R15]
.L_42ca2d:

            lea R13,QWORD PTR [RSP+224]
            mov DWORD PTR [RSP+28],20
.L_42ca3d:

            pxor XMM0,XMM0
            xor ESI,ESI
            mov RDI,R13
            mov QWORD PTR [RSP+240],0
            movaps XMMWORD PTR [RSP+224],XMM0
.L_42ca5a:

            call .L_42d440

            lea RBP,QWORD PTR [RSP+256]
            mov RAX,QWORD PTR [R15]
            mov R14D,DWORD PTR [RSP+24]
            mov RDI,RBP
            mov EBX,DWORD PTR [RSP+4]
            lea RSI,QWORD PTR [RAX+24]
            mov ECX,R14D
            mov EDX,EBX
            call .L_428f20
.L_42ca84:

            mov RAX,QWORD PTR [R15]
            lea R12,QWORD PTR [RSP+288]
            mov ECX,R14D
            mov EDX,EBX
            mov RDI,R12
            lea RSI,QWORD PTR [RAX+48]
.L_42ca9b:

            call .L_428f20
.L_42caa0:

            mov RDI,QWORD PTR [RSP+8]
            mov ECX,R14D
            mov EDX,EBX
            mov RSI,RBP
.L_42caad:

            call .L_429300

            mov RSI,QWORD PTR [RSP+232]
            cmp RSI,QWORD PTR [RSP+240]
            je .L_42d170

            test RSI,RSI
            je .L_42d140

            mov QWORD PTR [RSI],0
            mov QWORD PTR [RSI+8],0
            add RSI,24
            mov QWORD PTR [RSI-8],0
            mov RAX,QWORD PTR [RSP+320]
            mov QWORD PTR [RSI-24],RAX
            mov RAX,QWORD PTR [RSP+328]
            mov QWORD PTR [RSI-16],RAX
            mov RAX,QWORD PTR [RSP+336]
            mov QWORD PTR [RSI-8],RAX
            mov QWORD PTR [RSP+232],RSI
.L_42cb18:

            mov ECX,DWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+4]
            mov RSI,R12
            mov RDI,QWORD PTR [RSP+8]
            call .L_429300

            mov RSI,QWORD PTR [RSP+232]
            cmp RSI,QWORD PTR [RSP+240]
            je .L_42d190

            test RSI,RSI
            je .L_42d118

            mov QWORD PTR [RSI],0
            mov QWORD PTR [RSI+8],0
            add RSI,24
            mov QWORD PTR [RSI-8],0
            mov RAX,QWORD PTR [RSP+320]
            mov QWORD PTR [RSI-24],RAX
            mov RAX,QWORD PTR [RSP+328]
            mov QWORD PTR [RSI-16],RAX
            mov RAX,QWORD PTR [RSP+336]
            mov QWORD PTR [RSI-8],RAX
            mov QWORD PTR [RSP+232],RSI
.L_42cb93:

            mov RDX,QWORD PTR [RSP+224]
            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RDX+8]
            sub RAX,QWORD PTR [RDX]
            movaps XMMWORD PTR [RSP+192],XMM0
            mov QWORD PTR [RSP+208],0
            sar RAX,2
            lea RBX,QWORD PTR [RAX+RAX*2]
            test RBX,RBX
            je .L_42d1f0

            movabs RAX,4611686018427387903
            cmp RBX,RAX
            ja .L_42d273

            shl RBX,2
            mov RDI,RBX
            call _Znwm@PLT
.L_42cbea:

            mov QWORD PTR [RSP+32],RAX
            lea R14,QWORD PTR [RAX+RBX*1]
            mov RDX,RBX
            movq XMM0,QWORD PTR [RSP+32]
            xor ESI,ESI
            punpcklqdq XMM0,XMM0
            mov RDI,RAX
            sar RBX,2
            mov QWORD PTR [RSP+208],R14
            movaps XMMWORD PTR [RSP+192],XMM0
            call memset@PLT

            test RBX,RBX
            mov RCX,RAX
            mov QWORD PTR [RSP+200],R14
            je .L_42cd59

            mov RAX,QWORD PTR [RSP+224]
            pxor XMM8,XMM8
            pxor XMM9,XMM9
            xor EDX,EDX
            movss XMM7,DWORD PTR [RIP+.L_42dc54]
            mov R8,QWORD PTR [RAX]
            mov RDI,QWORD PTR [RAX+24]
            mov RSI,QWORD PTR [RAX+48]
            movss XMM3,DWORD PTR [RIP+.L_42dc1c]
            xor EAX,EAX
            movss XMM6,DWORD PTR [RIP+.L_42dc64]
            movss XMM5,DWORD PTR [RIP+.L_42dc68]
            movss XMM4,DWORD PTR [RIP+.L_42dc60]
            nop
            nop
            nop
            nop
            nop
.L_42cc80:

            movss XMM10,DWORD PTR [RSI+RDX*4]
            subss XMM10,DWORD PTR [RIP+.L_42dc48]
            movss XMM1,DWORD PTR [R8+RDX*4]
            movss XMM0,DWORD PTR [RDI+RDX*4]
            movaps XMM2,XMM10
            mulss XMM2,XMM7
            addss XMM2,XMM1
            ucomiss XMM3,XMM2
            movss DWORD PTR [RSP+52],XMM2
            jbe .L_42d0f0

            maxss XMM2,XMM8
.L_42ccba:

            subss XMM0,DWORD PTR [RIP+.L_42dc48]
            movss DWORD PTR [RCX+RAX*4],XMM2
            mulss XMM10,XMM5
            movaps XMM11,XMM1
            movss DWORD PTR [RSP+320],XMM3
            movaps XMM2,XMM0
            mulss XMM2,XMM6
            subss XMM11,XMM2
            movaps XMM2,XMM11
            subss XMM2,XMM10
            ucomiss XMM3,XMM2
            movss DWORD PTR [RSP+56],XMM2
            jbe .L_42d0e0

            maxss XMM2,XMM9
.L_42cd02:

            mulss XMM0,XMM4
            movss DWORD PTR [RCX+RAX*4+4],XMM2
            movss DWORD PTR [RSP+160],XMM3
            addss XMM0,XMM1
            ucomiss XMM3,XMM0
            movss DWORD PTR [RSP+60],XMM0
            jbe .L_42d0c0

            pxor XMM1,XMM1
            mov DWORD PTR [RSP+320],0
            ucomiss XMM0,XMM1
            ja .L_42d0c3

            mov DWORD PTR [RCX+RAX*4+8],0
            add RAX,3
            add RDX,1
            cmp RAX,RBX
            jb .L_42cc80
.L_42cd59:

            mov RDI,QWORD PTR [RSP+288]
            test RDI,RDI
            je .L_42cd6b

            call _ZdlPv@PLT
.L_42cd6b:

            mov RDI,QWORD PTR [RSP+256]
            test RDI,RDI
            je .L_42cd7d

            call _ZdlPv@PLT
.L_42cd7d:

            mov RDX,QWORD PTR [RSP+232]
            mov RDI,QWORD PTR [RSP+224]
            cmp RDX,RDI
            je .L_42cdd1

            lea R14,QWORD PTR [RDI+24]
            sub RDX,R14
            shr RDX,3
            lea RBX,QWORD PTR [RDI+RDX*8+24]
            jmp .L_42cdb9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42cda8:

            call _ZdlPv@PLT

            cmp R14,RBX
            mov RDI,R14
            je .L_42cdc9
.L_42cdb5:

            add R14,24
.L_42cdb9:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_42cda8

            cmp RBX,R14
            mov RDI,R14
            jne .L_42cdb5
.L_42cdc9:

            mov RDI,QWORD PTR [RSP+224]
.L_42cdd1:

            test RDI,RDI
            je .L_42cddb

            call _ZdlPv@PLT
.L_42cddb:

            lea RBX,QWORD PTR [RSP+192]
            mov RDI,RBP
            mov RSI,RBX
.L_42cde9:

            call .L_429110
.L_42cdee:

            mov R14,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+24]
            mov RSI,RBX
            mov EDX,DWORD PTR [RSP+4]
            mov RDI,R14
.L_42ce01:

            call .L_429770
.L_42ce06:

            mov RSI,R14
            mov RDI,R12
.L_42ce0c:

            call .L_429a70
.L_42ce11:

            mov RDI,QWORD PTR [RSP+320]
            test RDI,RDI
            je .L_42ce23

            call _ZdlPv@PLT
.L_42ce23:

            mov RDX,QWORD PTR [R15]
            mov RDI,QWORD PTR [RSP+16]
            mov RSI,RBP
            call .L_428e00

            mov RAX,QWORD PTR [R15]
            lea RDX,QWORD PTR [RAX+24]
            mov RAX,QWORD PTR [RSP+288]
            lea RSI,QWORD PTR [RAX+24]
            mov RAX,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [RAX+24]
            call .L_428e00

            mov RAX,QWORD PTR [R15]
            lea RDX,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RSP+288]
            lea RSI,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RSP+128]
            lea RDI,QWORD PTR [RAX+48]
            call .L_428e00

            mov RAX,QWORD PTR [RSP+296]
            mov RDI,QWORD PTR [RSP+288]
            cmp RAX,RDI
            je .L_42ced1

            lea R12,QWORD PTR [RDI+24]
            sub RAX,R12
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_42ceb9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42cea8:

            call _ZdlPv@PLT

            cmp RBP,R12
            mov RDI,R12
            je .L_42cec9
.L_42ceb5:

            add R12,24
.L_42ceb9:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_42cea8

            cmp R12,RBP
            mov RDI,R12
            jne .L_42ceb5
.L_42cec9:

            mov RDI,QWORD PTR [RSP+288]
.L_42ced1:

            test RDI,RDI
            je .L_42cedb

            call _ZdlPv@PLT
.L_42cedb:

            mov RDI,QWORD PTR [RSP+256]
            test RDI,RDI
            je .L_42ceed

            call _ZdlPv@PLT
.L_42ceed:

            mov RDI,QWORD PTR [RSP+192]
            test RDI,RDI
            je .L_42d100

            call _ZdlPv@PLT

            sub DWORD PTR [RSP+28],1
            mov RDX,QWORD PTR [R15]
            jne .L_42ca3d
.L_42cf11:

            lea RSI,QWORD PTR [RDX+24]
            mov ECX,DWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+4]
            mov RDI,RBX
.L_42cf20:

            call .L_428f20

            mov RDX,QWORD PTR [RSP+192]
            mov RAX,QWORD PTR [R15]
            mov RDI,QWORD PTR [RAX+24]
            mov QWORD PTR [RAX+24],RDX
            mov RDX,QWORD PTR [RSP+200]
            mov QWORD PTR [RSP+192],0
            test RDI,RDI
            mov QWORD PTR [RAX+32],RDX
            mov RDX,QWORD PTR [RSP+208]
            mov QWORD PTR [RSP+200],0
            mov QWORD PTR [RAX+40],RDX
            mov QWORD PTR [RSP+208],0
            je .L_42cf93

            call _ZdlPv@PLT

            mov RDI,QWORD PTR [RSP+192]
            test RDI,RDI
            je .L_42cf90

            call _ZdlPv@PLT
.L_42cf90:

            mov RAX,QWORD PTR [R15]
.L_42cf93:

            mov ECX,DWORD PTR [RSP+24]
            mov EDX,DWORD PTR [RSP+4]
            lea RSI,QWORD PTR [RAX+48]
            mov RDI,QWORD PTR [RSP+8]
            call .L_428f20
.L_42cfa9:

            mov RDX,QWORD PTR [RSP+320]
            mov RAX,QWORD PTR [R15]
            mov RDI,QWORD PTR [RAX+48]
            mov QWORD PTR [RAX+48],RDX
            mov RDX,QWORD PTR [RSP+328]
            mov QWORD PTR [RSP+320],0
            test RDI,RDI
            mov QWORD PTR [RAX+56],RDX
            mov RDX,QWORD PTR [RSP+336]
            mov QWORD PTR [RSP+328],0
            mov QWORD PTR [RAX+64],RDX
            mov QWORD PTR [RSP+336],0
            je .L_42d014

            call _ZdlPv@PLT

            mov RDI,QWORD PTR [RSP+320]
            test RDI,RDI
            je .L_42d014

            call _ZdlPv@PLT
.L_42d014:

            mov RAX,QWORD PTR [RSP+136]
            mov RDI,QWORD PTR [RSP+128]
            cmp RAX,RDI
            je .L_42d069

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_42d051
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d040:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RDI,RBX
            je .L_42d061
.L_42d04d:

            add RBX,24
.L_42d051:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_42d040

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_42d04d
.L_42d061:

            mov RDI,QWORD PTR [RSP+128]
.L_42d069:

            test RDI,RDI
            je .L_42d073

            call _ZdlPv@PLT
.L_42d073:

            mov RDI,QWORD PTR [RSP+96]
            test RDI,RDI
            je .L_42d082

            call _ZdlPv@PLT
.L_42d082:

            mov RDI,QWORD PTR [RSP+64]
            test RDI,RDI
            je .L_42d091

            call _ZdlPv@PLT
.L_42d091:

            mov RSI,QWORD PTR [RSP+344]
            xor RSI,QWORD PTR FS:[40]
            mov RAX,R15
            jne .L_42d231

            add RSP,360
.L_42d0b2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d0c0:

            movaps XMM0,XMM3
.L_42d0c3:

            movss DWORD PTR [RCX+RAX*4+8],XMM0
            add RAX,3
            add RDX,1
            cmp RAX,RBX
            jb .L_42cc80

            jmp .L_42cd59
          .byte 0x90
.L_42d0e0:

            movaps XMM2,XMM3
            jmp .L_42cd02
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d0f0:

            movaps XMM2,XMM3
            jmp .L_42ccba
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d100:

            sub DWORD PTR [RSP+28],1
            mov RDX,QWORD PTR [R15]
            jne .L_42ca3d

            jmp .L_42cf11
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d118:

            mov RDI,QWORD PTR [RSP+320]
            mov QWORD PTR [RSP+232],24
.L_42d12c:

            test RDI,RDI
            je .L_42cb93

            call _ZdlPv@PLT

            jmp .L_42cb93
          .byte 0x90
.L_42d140:

            mov RDI,QWORD PTR [RSP+320]
            mov QWORD PTR [RSP+232],24
.L_42d154:

            test RDI,RDI
            je .L_42cb18

            call _ZdlPv@PLT

            jmp .L_42cb18
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d170:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,R13
.L_42d178:

            call .L_42d7a0
.L_42d17d:

            mov RDI,QWORD PTR [RSP+320]
            jmp .L_42d154
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d190:

            mov RDX,QWORD PTR [RSP+8]
            mov RDI,R13
.L_42d198:

            call .L_42d7a0
.L_42d19d:

            mov RDI,QWORD PTR [RSP+320]
            jmp .L_42d12c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d1b0:

            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42d1b8:

            movzx EDX,BYTE PTR [RDI+RAX*1]
            pxor XMM0,XMM0
            cvtsi2ss XMM0,EDX
            movss DWORD PTR [R8+RAX*4],XMM0
            add RAX,1
            cmp RAX,R9
            jne .L_42d1b8

            jmp .L_42c7f3
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d1e0:

            mov QWORD PTR [RSP+72],0
            jmp .L_42c7f3
          .byte 0x66
          .byte 0x90
.L_42d1f0:

            mov QWORD PTR [RSP+200],0
            jmp .L_42cd59
.L_42d201:

            xor EAX,EAX
            jmp .L_42c742
.L_42d208:

            call _ZSt17__throw_bad_allocv@PLT
.L_42d20d:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_42d215:

            cmp R14,RBX
            je .L_42d2c8

            mov RDI,QWORD PTR [R14]
            test RDI,RDI
            je .L_42d22b

            call _ZdlPv@PLT
.L_42d22b:

            add R14,24
            jmp .L_42d215
.L_42d231:

            call __stack_chk_fail@PLT
.L_42d236:

            call _ZSt17__throw_bad_allocv@PLT
.L_42d23b:

            mov RBX,RAX
.L_42d23e:

            mov RDI,QWORD PTR [RSP+40]
            call .L_4189d0
.L_42d248:

            mov RDI,QWORD PTR [RSP+96]
            test RDI,RDI
            je .L_42d257

            call _ZdlPv@PLT
.L_42d257:

            mov RDI,QWORD PTR [RSP+64]
            test RDI,RDI
            je .L_42d266

            call _ZdlPv@PLT
.L_42d266:

            mov RDI,RBX
.L_42d269:

            call _Unwind_Resume@PLT
.L_42d26e:

            call _ZSt17__throw_bad_allocv@PLT
.L_42d273:

            call _ZSt17__throw_bad_allocv@PLT
.L_42d278:

            mov RBX,RAX
.L_42d27b:

            mov RDI,QWORD PTR [RSP+288]
            test RDI,RDI
            je .L_42d28d

            call _ZdlPv@PLT
.L_42d28d:

            mov RDI,QWORD PTR [RSP+256]
            test RDI,RDI
            je .L_42d29f

            call _ZdlPv@PLT
.L_42d29f:

            mov RDI,R13
            call .L_4189d0
.L_42d2a7:

            mov RDI,R15
            call .L_4189d0

            jmp .L_42d23e
.L_42d2b1:

            mov RBX,RAX
.L_42d2b4:

            mov RDI,QWORD PTR [RSP+192]
            test RDI,RDI
            je .L_42d2a7

            call _ZdlPv@PLT

            jmp .L_42d2a7
.L_42d2c8:

            call __cxa_rethrow@PLT
.L_42d2cd:

            mov RDI,QWORD PTR [RSP+320]
            mov RBX,RAX
            test RDI,RDI
            je .L_42d27b

            call _ZdlPv@PLT

            jmp .L_42d27b
.L_42d2e4:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [R15]
            test RDI,RDI
            je .L_42d23e

            call _ZdlPv@PLT

            jmp .L_42d23e
.L_42d302:

            mov RBX,RAX
            jmp .L_42d248
.L_42d30a:

            mov RBX,RAX
            jmp .L_42d257
.L_42d312:

            jmp .L_42d2cd
.L_42d314:

            mov RDI,QWORD PTR [RSP+320]
            mov RBX,RAX
            test RDI,RDI
            je .L_42d248

            call _ZdlPv@PLT

            jmp .L_42d248
.L_42d332:

            mov RBX,RAX
            jmp .L_42d28d
.L_42d33a:

            mov RBX,RAX
            jmp .L_42d29f
.L_42d342:

            mov RDI,QWORD PTR [RSP+320]
            mov RBX,RAX
            test RDI,RDI
            je .L_42d357

            call _ZdlPv@PLT
.L_42d357:

            mov RDI,QWORD PTR [RSP+256]
            test RDI,RDI
            je .L_42d2b4

            call _ZdlPv@PLT

            jmp .L_42d2b4
.L_42d372:

            mov RBX,RAX
            jmp .L_42d2a7
.L_42d37a:

            mov RBX,RAX
            jmp .L_42d357
.L_42d37f:

            nop
.L_42d380:

            jne .L_42d3e8
          .byte 0x74
          .byte 0x7a
          .byte 0x6c
          .byte 0x69
          .byte 0x2f
          .byte 0x70
          .byte 0x72
          .byte 0x65
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x63
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x5f
          .byte 0x64
          .byte 0x6f
          .byte 0x77
          .byte 0x6e
          .byte 0x73
          .byte 0x61
          .byte 0x6d
          .byte 0x70
          .byte 0x6c
          .byte 0x65
          .byte 0x2e
          .byte 0x63
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d3a8:
          .string "reconstructed.size() == guess->size()"
          .zero 2
.L_42d3d0:

            je .L_42d433

            jb .L_42d43b
          .byte 0x65
          .byte 0x74
          .byte 0x2e
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x28
          .byte 0x29
          .byte 0x20
          .byte 0x3d
          .byte 0x3d
          .byte 0x20
          .byte 0x67
          .byte 0x75
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x2d
          .byte 0x3e
.L_42d3e8:

            jae .L_42d453
          .byte 0x7a
          .byte 0x65

            sub BYTE PTR [RCX],CH
            add BYTE PTR [RAX],AL
.L_42d3f0:
          .string "rgb_in.size() == 3 * width * height"
.L_42d414:

            imul EBP,DWORD PTR [RBP+103],778987871
            jae .L_42d486
          .byte 0x7a
          .byte 0x65
          .byte 0x28
          .byte 0x29
          .byte 0x20
          .byte 0x3d
          .byte 0x3d
          .byte 0x20
          .byte 0x77
          .byte 0x20
          .byte 0x2a
          .byte 0x20
          .byte 0x68
          .byte 0x0
.L_42d42b:
          .byte 0x72
          .byte 0x67
          .byte 0x62
          .byte 0x2e
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
.L_42d433:

            sub BYTE PTR [RCX],CH
            and BYTE PTR [RIP+.L_64a628+1023303987],AH
.L_42d43b:

            cmp EAX,2415931424
.L_42d440:

            push R15
            push R14
            mov R15,RDX
            push R13
          .byte 0x41
          .byte 0x54
          .byte 0x48
          .byte 0xb9
          .byte 0xab
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
          .byte 0xaa
.L_42d453:

            stosb BYTE PTR [RDI]
            stosb BYTE PTR [RDI]
            push RBP
            push RBX
            mov R12,RSI
            mov R13,RDI
            mov RBX,RSI
            sub RSP,24
.L_42d464:

            mov RDX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RDI+8]
            sub RAX,RDX
            sub R12,RDX
            sar RAX,3
            imul RAX,RCX
            test RAX,RAX
            je .L_42d6c0

            lea R14,QWORD PTR [RAX+RAX*1]
.L_42d486:

            cmp RAX,R14
            jbe .L_42d710
.L_42d48f:

            mov R14,-16
.L_42d496:

            mov RDI,R14
.L_42d499:

            call _Znwm@PLT
.L_42d49e:

            mov RBP,RAX
.L_42d4a1:

            add R12,RBP
            je .L_42d541

            mov RDX,QWORD PTR [R15+8]
            mov RSI,QWORD PTR [R15]
            mov QWORD PTR [R12],0
            mov QWORD PTR [R12+8],0
            mov QWORD PTR [R12+16],0
            mov RAX,RDX
            sub RAX,RSI
            mov QWORD PTR [RSP+8],RAX
            sar RAX,2
            test RAX,RAX
            je .L_42d750

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_42d779

            mov RDI,QWORD PTR [RSP+8]
.L_42d4fb:

            call _Znwm@PLT
.L_42d500:

            mov RDX,QWORD PTR [R15+8]
            mov RSI,QWORD PTR [R15]
            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+8]
            mov R15,RDX
            sub R15,RSI
.L_42d515:

            add RAX,RCX
            cmp RSI,RDX
            mov QWORD PTR [R12],RCX
            mov QWORD PTR [R12+8],RCX
            mov QWORD PTR [R12+16],RAX
            je .L_42d539

            mov RDI,RCX
            mov RDX,R15
            call memmove@PLT

            mov RCX,RAX
.L_42d539:

            add RCX,R15
            mov QWORD PTR [R12+8],RCX
.L_42d541:

            mov RCX,QWORD PTR [R13]
            mov RDI,QWORD PTR [R13+8]
            cmp RCX,RBX
            je .L_42d730

            lea R15,QWORD PTR [RCX+24]
            mov RSI,RBX
            movabs RAX,768614336404564651
            mov RDX,RCX
            sub RSI,R15
            shr RSI,3
            imul RSI,RAX
            movabs RAX,2305843009213693951
            and RSI,RAX
            lea RAX,QWORD PTR [RSI+RSI*2+3]
            lea R10,QWORD PTR [RBP+RAX*8]
            mov RAX,RBP
.L_42d58b:

            test RAX,RAX
            je .L_42d6f0
.L_42d594:

            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            add RAX,24
            mov QWORD PTR [RAX-24],0
            mov R8,QWORD PTR [RDX]
            add RDX,24
            mov QWORD PTR [RAX-24],R8
            mov R9,QWORD PTR [RDX-16]
            mov QWORD PTR [RDX-24],0
            mov R8,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-16],R9
            mov R9,QWORD PTR [RDX-8]
            mov QWORD PTR [RDX-16],R8
            mov R8,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-8],R9
            mov QWORD PTR [RDX-8],R8
            cmp R10,RAX
            jne .L_42d58b
.L_42d5e8:

            lea RAX,QWORD PTR [RSI+RSI*2]
            cmp RBX,RDI
            lea RAX,QWORD PTR [RBP+RAX*8+48]
            je .L_42d748
.L_42d5fa:

            lea RDX,QWORD PTR [RBX+24]
            mov RSI,RDI
            sub RSI,RDX
            mov RDX,RSI
            shr RDX,3
            lea R12,QWORD PTR [RAX+RDX*8+24]
.L_42d610:

            test RAX,RAX
            je .L_42d6d8
.L_42d619:

            mov RDX,QWORD PTR [RBX]
            add RAX,24
            mov QWORD PTR [RBX],0
            add RBX,24
            mov QWORD PTR [RAX-24],RDX
            mov RDX,QWORD PTR [RBX-16]
            mov QWORD PTR [RBX-16],0
            mov QWORD PTR [RAX-16],RDX
            mov RDX,QWORD PTR [RBX-8]
            mov QWORD PTR [RBX-8],0
            mov QWORD PTR [RAX-8],RDX
            cmp R12,RAX
            jne .L_42d610
.L_42d654:

            cmp RCX,RDI
            je .L_42d695

            lea R15,QWORD PTR [RCX+24]
.L_42d65d:

            sub RDI,R15
            shr RDI,3
            lea RBX,QWORD PTR [RCX+RDI*8+24]
            jmp .L_42d681
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d670:

            call _ZdlPv@PLT

            cmp R15,RBX
            mov RCX,R15
            je .L_42d691
.L_42d67d:

            add R15,24
.L_42d681:

            mov RDI,QWORD PTR [RCX]
            test RDI,RDI
            jne .L_42d670

            cmp R15,RBX
            mov RCX,R15
            jne .L_42d67d
.L_42d691:

            mov RDI,QWORD PTR [R13]
.L_42d695:

            test RDI,RDI
            je .L_42d69f

            call _ZdlPv@PLT
.L_42d69f:

            mov QWORD PTR [R13],RBP
            add RBP,R14
            mov QWORD PTR [R13+8],R12
            mov QWORD PTR [R13+16],RBP
            add RSP,24
.L_42d6b2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d6c0:

            mov R14D,1
.L_42d6c6:

            lea R14,QWORD PTR [R14+R14*2]
            shl R14,3
            jmp .L_42d496
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d6d8:

            add RBX,24
            cmp R12,24
            je .L_42d654

            mov EAX,24
            jmp .L_42d619
.L_42d6f0:

            add RDX,24
            cmp R10,24
            je .L_42d5e8

            mov EAX,24
            jmp .L_42d594
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d710:

            movabs RAX,768614336404564650
            cmp R14,RAX
            ja .L_42d48f

            test R14,R14
            jne .L_42d6c6

            xor EBP,EBP
            jmp .L_42d4a1
          .byte 0x90
.L_42d730:

            lea RAX,QWORD PTR [RBP+24]
            cmp RBX,RDI
            mov R12,RAX
            jne .L_42d5fa

            jmp .L_42d695
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42d748:

            mov R12,RAX
            jmp .L_42d65d
.L_42d750:

            mov R15,QWORD PTR [RSP+8]
            xor ECX,ECX
            mov RAX,R15
            jmp .L_42d515
.L_42d75f:

            mov RDI,RAX
            call __cxa_begin_catch@PLT

            test RBP,RBP
            je .L_42d78e

            mov RDI,RBP
            call _ZdlPv@PLT
.L_42d774:

            call __cxa_rethrow@PLT
.L_42d779:

            call _ZSt17__throw_bad_allocv@PLT
.L_42d77e:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,RBX
.L_42d789:

            call _Unwind_Resume@PLT
.L_42d78e:

            mov RDI,QWORD PTR [R12]
            test RDI,RDI
            je .L_42d774

            call _ZdlPv@PLT

            jmp .L_42d774
.L_42d79e:

            nop
            nop
.L_42d7a0:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            movabs RDX,-6148914691236517205
            push RBP
            push RBX
            mov RBP,RDI
            mov R14,RSI
            mov RBX,RSI
            sub RSP,8
.L_42d7c4:

            mov R8,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RDI]
            mov RAX,R8
            sub R14,RDI
            sub RAX,RDI
            sar RAX,3
            imul RAX,RDX
            test RAX,RAX
            je .L_42da00

            lea RDX,QWORD PTR [RAX+RAX*1]
            mov R12,-16
            cmp RAX,RDX
            jbe .L_42da18
.L_42d7f9:

            mov RDI,R12
            call _Znwm@PLT

            mov RDI,QWORD PTR [RBP]
            mov R8,QWORD PTR [RBP+8]
            mov R13,RAX
            add R12,RAX
            lea RAX,QWORD PTR [RAX+24]
.L_42d813:

            add R14,R13
            je .L_42d845

            mov RDX,QWORD PTR [R15]
            mov QWORD PTR [R15],0
            mov QWORD PTR [R14],RDX
            mov RDX,QWORD PTR [R15+8]
            mov QWORD PTR [R15+8],0
            mov QWORD PTR [R14+8],RDX
            mov RDX,QWORD PTR [R15+16]
            mov QWORD PTR [R15+16],0
            mov QWORD PTR [R14+16],RDX
.L_42d845:

            cmp RBX,RDI
            je .L_42da40

            lea R14,QWORD PTR [RDI+24]
            mov RAX,RBX
            movabs RDX,768614336404564651
            mov RCX,RDI
            sub RAX,R14
            shr RAX,3
            imul RAX,RDX
            movabs RDX,2305843009213693951
            and RAX,RDX
            lea RDX,QWORD PTR [RAX+RAX*2+3]
            lea R10,QWORD PTR [R13+RDX*8]
            mov RDX,R13
.L_42d887:

            test RDX,RDX
            je .L_42d9c0
.L_42d890:

            mov QWORD PTR [RDX+8],0
            mov QWORD PTR [RDX+16],0
            add RDX,24
            mov QWORD PTR [RDX-24],0
            mov RSI,QWORD PTR [RCX]
            add RCX,24
            mov QWORD PTR [RDX-24],RSI
            mov R9,QWORD PTR [RCX-16]
            mov QWORD PTR [RCX-24],0
            mov RSI,QWORD PTR [RDX-16]
            mov QWORD PTR [RDX-16],R9
            mov R9,QWORD PTR [RCX-8]
            mov QWORD PTR [RCX-16],RSI
            mov RSI,QWORD PTR [RDX-8]
            mov QWORD PTR [RDX-8],R9
            mov QWORD PTR [RCX-8],RSI
            cmp R10,RDX
            jne .L_42d887
.L_42d8e4:

            lea RAX,QWORD PTR [RAX+RAX*2]
            cmp RBX,R8
            lea RAX,QWORD PTR [R13+RAX*8+48]
            je .L_42da58
.L_42d8f6:

            lea RDX,QWORD PTR [RBX+24]
            mov RSI,RBX
            mov RBX,R8
            sub RBX,RDX
            mov RDX,RBX
            shr RDX,3
            lea RBX,QWORD PTR [RAX+RDX*8+24]
.L_42d90f:

            test RAX,RAX
            je .L_42d9e0
.L_42d918:

            mov RDX,QWORD PTR [RSI]
            add RAX,24
            mov QWORD PTR [RSI],0
            add RSI,24
            mov QWORD PTR [RAX-24],RDX
            mov RDX,QWORD PTR [RSI-16]
            mov QWORD PTR [RSI-16],0
            mov QWORD PTR [RAX-16],RDX
            mov RDX,QWORD PTR [RSI-8]
            mov QWORD PTR [RSI-8],0
            mov QWORD PTR [RAX-8],RDX
            cmp RBX,RAX
            jne .L_42d90f
.L_42d953:

            cmp R8,RDI
            je .L_42d995

            lea R14,QWORD PTR [RDI+24]
.L_42d95c:

            sub R8,R14
            shr R8,3
            lea R15,QWORD PTR [RDI+R8*8+24]
            jmp .L_42d981
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d970:

            call _ZdlPv@PLT

            cmp R14,R15
            mov RDI,R14
            je .L_42d991
.L_42d97d:

            add R14,24
.L_42d981:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_42d970

            cmp R14,R15
            mov RDI,R14
            jne .L_42d97d
.L_42d991:

            mov RDI,QWORD PTR [RBP]
.L_42d995:

            test RDI,RDI
            je .L_42d99f

            call _ZdlPv@PLT
.L_42d99f:

            mov QWORD PTR [RBP],R13
            mov QWORD PTR [RBP+8],RBX
            mov QWORD PTR [RBP+16],R12
            add RSP,8
.L_42d9af:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42d9c0:

            add RCX,24
            cmp R10,24
            je .L_42d8e4

            mov EDX,24
            jmp .L_42d890
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42d9e0:

            add RSI,24
            cmp RBX,24
            je .L_42d953

            mov EAX,24
            jmp .L_42d918
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42da00:

            mov EDX,1
.L_42da05:

            lea R12,QWORD PTR [RDX+RDX*2]
            shl R12,3
            jmp .L_42d7f9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42da18:

            movabs RAX,768614336404564650
            cmp RDX,RAX
            ja .L_42d7f9

            test RDX,RDX
            jne .L_42da05

            mov EAX,24
            xor R12D,R12D
            xor R13D,R13D
            jmp .L_42d813
.L_42da40:

            cmp R8,RDI
            jne .L_42d8f6

            mov RBX,RAX
            jmp .L_42d995
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42da58:

            mov RBX,RAX
            jmp .L_42d95c
.L_42da60:
          .string "std::vector<float> guetzli::{anonymous}::Upsample2x2(const std::vector<float>&, int, int)"
          .zero 6
.L_42dac0:
          .string "void guetzli::{anonymous}::UpdateGuess(const std::vector<float>&, const std::vector<float>&, std::vector<float>*)"
          .zero 14
.L_42db40:
          .string "std::vector<float> guetzli::{anonymous}::LinearlyDownsample2x2(const std::vector<float>&, int, int)"
          .zero 28
.L_42dbc0:
          .string "std::vector<float> guetzli::{anonymous}::LinearlyAveragedLuma(const std::vector<float>&)"
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42dc1c:
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x43
.L_42dc20:
          .byte 0x87
          .byte 0x16
          .byte 0x99
          .byte 0x3e
.L_42dc24:
          .byte 0xa2
          .byte 0x45
          .byte 0x16
          .byte 0x3f
.L_42dc28:
          .byte 0xd5
          .byte 0x78
          .byte 0xe9
          .byte 0x3d
.L_42dc2c:
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x40
.L_42dc30:
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x41
.L_42dc34:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3d
.L_42dc38:
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3e
.L_42dc3c:
          .byte 0x2e
          .byte 0xca
          .byte 0x2c
          .byte 0xbe
.L_42dc40:
          .byte 0xe9
          .byte 0x9a
          .byte 0xa9
          .byte 0x3e
.L_42dc44:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3f
.L_42dc48:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x43
.L_42dc4c:
          .byte 0x89
          .byte 0x5e
          .byte 0xd6
          .byte 0x3e
.L_42dc50:
          .byte 0xdb
          .byte 0x85
          .byte 0xa6
          .byte 0x3d
.L_42dc54:
          .byte 0xbc
          .byte 0x74
          .byte 0xb3
          .byte 0x3f
.L_42dc58:
          .byte 0x1e
          .byte 0x33
          .byte 0xb0
          .byte 0x3e
.L_42dc5c:
          .byte 0xe1
          .byte 0xd1
          .byte 0x36
          .byte 0x3f
.L_42dc60:
          .byte 0xe5
          .byte 0xd0
          .byte 0xe2
          .byte 0x3f
.L_42dc64:
          .byte 0x98
          .byte 0x32
          .byte 0xb0
          .byte 0x3e
.L_42dc68:
          .byte 0x9e
          .byte 0xd1
          .byte 0x36
          .byte 0x3f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42dc70:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x1
          .byte 0x40
.L_42dc78:
          .byte 0x17
          .byte 0x5d
          .byte 0x74
          .byte 0xd1
          .byte 0x45
          .byte 0x17
          .byte 0xdd
          .byte 0x3f
.L_42dc80:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x6f
          .byte 0x40
.L_42dc88:
          .byte 0x67
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x4
          .byte 0x40
.L_42dc90:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x5f
          .byte 0x40
.L_42dc98:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0xeb
          .byte 0x3f
.L_42dca0:

            int 204

            int3 

            int3 

            int3 

            int3 
          .byte 0xec
          .byte 0x3f
.L_42dca8:
          .byte 0x68
          .byte 0x91
          .byte 0xed
          .byte 0x7c
          .byte 0x3f
          .byte 0x35
          .byte 0xf4
          .byte 0x3f
.L_42dcb0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xb9
          .byte 0x3f
.L_42dcb8:
          .byte 0x9c
          .byte 0xf9
          .byte 0xd5
          .byte 0x1c
          .byte 0x20
          .byte 0x98
          .byte 0xd5
          .byte 0xbf
.L_42dcc0:
          .byte 0x21
          .byte 0xb0
          .byte 0x72
          .byte 0x68
          .byte 0x91
          .byte 0xed
          .byte 0x0
          .byte 0x40
.L_42dcc8:
          .byte 0x4a
          .byte 0xb5
          .byte 0x4f
          .byte 0xc7
          .byte 0x63
          .byte 0x6
          .byte 0xd6
          .byte 0xbf
.L_42dcd0:
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xc9
          .byte 0x3f
.L_42dcd8:
          .byte 0x3b
          .byte 0xdf
          .byte 0x4f
          .byte 0x8d
          .byte 0x97
          .byte 0x6e
          .byte 0xf6
          .byte 0x3f
.L_42dce0:
          .byte 0x27
          .byte 0x31
          .byte 0x8
          .byte 0xac
          .byte 0x1c
          .byte 0x5a
          .byte 0xfc
          .byte 0x3f
.L_42dce8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x40
.L_42dcf0:
          .byte 0x23
          .byte 0xdb
          .byte 0xf9
          .byte 0x7e
          .byte 0x6a
          .byte 0xbc
          .byte 0xc4
          .byte 0xbf
.L_42dcf8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
.L_42dd00:
          .byte 0x51
          .byte 0x36
          .byte 0xd4
          .byte 0x33
          .byte 0x45
          .byte 0x88
          .byte 0xd9
          .byte 0x3f
.L_42dd08:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_42dd10:

            or EDX,EDI
            movabs DWORD PTR [-3689348319776457360],EAX
            int3 
# WARNING: found overlapping blocks at address 2daea

            int3 

            int3 

            hlt 
          .byte 0x3f
.L_42dd20:
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x43
.L_42dd30:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
.L_42dd40:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dd50:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_42dd60:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],BH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],BH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],BH
            add BYTE PTR [RAX],AL
            add BYTE PTR [RDI],BH
.L_42dd70:

            xor R8D,R8D
            xor R10D,R10D
            jmp .L_42dd9e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42dd80:

            sub ECX,EDX
.L_42dd82:

            add ECX,R9D
            cmp CX,R9W
            mov WORD PTR [RDI+R8*2],CX
            setne AL
            add R8,1
            or R10D,EAX
            cmp R8,64
            je .L_42ddd0
.L_42dd9e:

            movsx EAX,WORD PTR [RDI+R8*2]
            mov ECX,DWORD PTR [RSI+R8*4]
            cdq 
            mov R9D,EAX
            idiv ECX
            lea EAX,DWORD PTR [RDX+RDX*1]
            cmp EAX,ECX
            jg .L_42dd80

            mov R11D,EDX
            lea EAX,DWORD PTR [RDX+RCX*1]
            neg EDX
            neg R11D
            add R11D,R11D
            neg EAX
            cmp R11D,ECX
            cmovle EAX,EDX
            mov ECX,EAX
            jmp .L_42dd82
          .byte 0x66
          .byte 0x90
.L_42ddd0:

            mov EAX,R10D
            ret 
.L_42ddd4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42dde0:

            subsd XMM0,XMM1
            pxor XMM1,XMM1
            ucomisd XMM1,XMM0
            jae .L_42de40

            movsd XMM1,QWORD PTR [RIP+.L_42de50]
            mulsd XMM1,XMM0
            ucomisd XMM1,QWORD PTR [RIP+.L_43e980-68392]
            jbe .L_42de20

            pxor XMM1,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_42de60]
            cvtsi2sd XMM1,EDI
            addsd XMM0,XMM1
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42de20:

            push RBX
.L_42de21:

            movapd XMM0,XMM1
            mov EBX,EDI
            call exp@PLT

            pxor XMM1,XMM1
            cvtsi2sd XMM1,EBX
            pop RBX
            mulsd XMM0,XMM1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42de40:

            pxor XMM0,XMM0
            cvtsi2sd XMM0,EDI
            ret 
.L_42de49:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42de50:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            and AL,64
.L_42de60:

            sub EBX,DWORD PTR [RBX]
            push RBP
            hlt 

            not DWORD PTR [RAX]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42de70:

            push R15
            push R14
            mov RAX,R9
            push R13
            push R12
            push RBP
            push RBX
.L_42de7d:

            mov RBX,R9
            add RBX,4
            pxor XMM1,XMM1
            mov QWORD PTR [RSP-16],RDX
            lea RDX,QWORD PTR [RBX+R8*8]
            mov QWORD PTR [RSP-48],RDI
            mov QWORD PTR [RSP-32],R9
            mov QWORD PTR [RSP-8],RBX
.L_42dea0:

            pxor XMM2,XMM2
            add RAX,4
            cvtss2sd XMM2,DWORD PTR [RAX-4]
            cmp RDX,RAX
            addsd XMM1,XMM2
            jne .L_42dea0

            cmp QWORD PTR [RSP-48],0
            je .L_42e033

            movsd XMM5,QWORD PTR [RIP+.L_439e20]
            mov RAX,QWORD PTR [RSP-48]
            sub RCX,R8
            mov QWORD PTR [RSP-24],RCX
            mov QWORD PTR [RSP-40],0
            xor R12D,R12D
            movapd XMM6,XMM5
            lea R14,QWORD PTR [RAX*4]
            subsd XMM6,XMM0
            mulsd XMM0,XMM1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42df00:

            mov EBX,R12D
            mov EAX,0
            sub EBX,R8D
            cmp R8,R12
            cmova EBX,EAX
            mov RAX,QWORD PTR [RSP-24]
            lea R11,QWORD PTR [R12+RAX*1]
            mov RAX,QWORD PTR [RSP-48]
            cmp R11,RAX
            cmova R11,RAX
            sub R11D,1
            cmp EBX,R11D
            jg .L_42e046

            mov RDX,R8
            movsxd RAX,EBX
            mov ECX,R11D
            sub RDX,R12
            mov RDI,QWORD PTR [RSP-8]
            sub ECX,EBX
            add RDX,RAX
            mov RAX,QWORD PTR [RSP-32]
            pxor XMM1,XMM1
            lea RAX,QWORD PTR [RAX+RDX*4]
            add RDX,RCX
            lea RDX,QWORD PTR [RDI+RDX*4]
            nop
            nop
            nop
.L_42df60:

            pxor XMM2,XMM2
            add RAX,4
            cvtss2sd XMM2,DWORD PTR [RAX-4]
            cmp RDX,RAX
            addsd XMM1,XMM2
            jne .L_42df60
.L_42df76:

            mulsd XMM1,XMM6
            movapd XMM4,XMM5
            test RSI,RSI
            addsd XMM1,XMM0
            divsd XMM4,XMM1
            je .L_42e01d

            mov RAX,QWORD PTR [RSP-40]
            mov RDI,QWORD PTR [RSP+64]
            mov R15D,R11D
            mov RCX,QWORD PTR [RSP+56]
            movsxd RBP,EBX
            sub R15D,EBX
            imul RAX,RSI
            lea R10,QWORD PTR [RDI+RAX*4]
            add RAX,RSI
            lea R13,QWORD PTR [RDI+RAX*4]
            mov RDI,QWORD PTR [RSP-32]
            mov RAX,R8
            sub RAX,R12
            lea R9,QWORD PTR [RDI+RAX*4]
            nop
            nop
            nop
.L_42dfc8:

            cmp EBX,R11D
            jg .L_42e040

            lea RAX,QWORD PTR [RBP+1]
            mov RDX,RBP
            lea RDI,QWORD PTR [RAX+R15*1]
            pxor XMM2,XMM2
            jmp .L_42dfe4

            nop
            nop
.L_42dfe0:

            add RAX,1
.L_42dfe4:

            movss XMM1,DWORD PTR [RCX+RDX*4]
            cmp RDI,RAX
            mulss XMM1,DWORD PTR [R9+RDX*4]
            mov RDX,RAX
            cvtss2sd XMM1,XMM1
            addsd XMM2,XMM1
            jne .L_42dfe0
.L_42dfff:

            mulsd XMM2,XMM4
            add R10,4
            add RCX,R14
            pxor XMM7,XMM7
            cvtsd2ss XMM7,XMM2
            movss DWORD PTR [R10-4],XMM7
            cmp R13,R10
            jne .L_42dfc8
.L_42e01d:

            add R12,QWORD PTR [RSP-16]
            add QWORD PTR [RSP-40],1
            cmp R12,QWORD PTR [RSP-48]
            jb .L_42df00
.L_42e033:

            pop RBX
.L_42e034:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_42e040:

            pxor XMM2,XMM2
            jmp .L_42dfff
.L_42e046:

            pxor XMM1,XMM1
            jmp .L_42df76
.L_42e04f:

            nop
.L_42e050:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_42e058:

            movsd XMM4,QWORD PTR [RIP+.L_439e28]
            mulsd XMM0,QWORD PTR [RIP+.L_439e38]
            mulsd XMM4,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_43e980-19264]
            addsd XMM2,XMM4
            mulsd XMM2,QWORD PTR [RIP+.L_439e30]
            movzx EAX,BYTE PTR [RIP+.L_64a3e0]
            test AL,AL
            je .L_42e140
.L_42e08f:

            movapd XMM5,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM5,XMMWORD PTR [RIP+.L_43a1f0]
            ucomisd XMM4,XMM5
            jbe .L_42e201

            cvttsd2si EAX,XMM5
            movsd XMM4,QWORD PTR [RIP+.L_64a4a0]
            cmp EAX,19
            jg .L_42e0ee

            pxor XMM6,XMM6
            lea RCX,QWORD PTR [RIP+.L_64a400]
            movsxd RDX,EAX
            movsd XMM7,QWORD PTR [RCX+RDX*8]
            add RCX,8
            cvtsi2sd XMM6,EAX
            movsd XMM4,QWORD PTR [RCX+RDX*8]
            subsd XMM4,XMM7
            subsd XMM5,XMM6
            mulsd XMM4,XMM5
            addsd XMM4,XMM7
.L_42e0ee:

            pxor XMM5,XMM5
            ucomisd XMM5,XMM1
            jbe .L_42e100

            xorpd XMM4,XMMWORD PTR [RIP+.L_43a200]
.L_42e100:

            movapd XMM1,XMM0
            movupd XMM6,XMMWORD PTR [RBX]
            movapd XMM0,XMM3
            mulsd XMM3,XMM2
            unpcklpd XMM1,XMM4
            unpcklpd XMM0,XMM0
            mulsd XMM3,XMM2
            mulpd XMM0,XMM1
            addsd XMM3,QWORD PTR [RBX+16]
            mulpd XMM0,XMM1
            movsd QWORD PTR [RBX+16],XMM3
            addpd XMM0,XMM6
            movups XMMWORD PTR [RBX],XMM0
            add RSP,32
.L_42e139:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e140:

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM2
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM3,QWORD PTR [RSP+24]
            je .L_42e08f

            lea RAX,QWORD PTR [RIP+.L_64a408]
            pxor XMM4,XMM4
            movsd XMM5,QWORD PTR [RIP+.L_43e980-19256]
            mov QWORD PTR [RIP+.L_64a400],0
            lea RDX,QWORD PTR [RAX+160]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e1b0:

            addsd XMM4,XMM5
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM4
            cmp RAX,RDX
            jne .L_42e1b0

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM1
            movsd QWORD PTR [RSP+8],XMM0
            movsd QWORD PTR [RSP],XMM2
            call __cxa_guard_release@PLT

            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+16]
            movsd XMM0,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP]
            jmp .L_42e08f
.L_42e201:

            lea RCX,QWORD PTR [RIP+.L_439d40]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_439693]
            mov EDX,234
            call __assert_fail@PLT
.L_42e220:

            movsd XMM0,QWORD PTR [RIP+.L_439e58]
            lea RDX,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDI+168]
            movsd XMM1,QWORD PTR [RIP+.L_439e60]
            movsd QWORD PTR [RDI+8],XMM0
            mov RAX,RDI
            mov QWORD PTR [RDI],0
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e250:

            addsd XMM0,XMM1
            add RDX,8
            movsd QWORD PTR [RDX-8],XMM0
            cmp RDX,RCX
            jne .L_42e250

            ret 
.L_42e264:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e270:

            movzx EAX,BYTE PTR [RIP+.L_64a568]
            test AL,AL
            je .L_42e288

            lea RAX,QWORD PTR [RIP+.L_64a580]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e288:

            lea RDI,QWORD PTR [RIP+.L_64a568]
            sub RSP,8
.L_42e293:

            call __cxa_guard_acquire@PLT

            test EAX,EAX
            je .L_42e2ee

            movapd XMM0,XMMWORD PTR [RIP+.L_43a210]
            lea RAX,QWORD PTR [RIP+.L_64a590]
            movaps XMMWORD PTR [RIP+.L_64a580],XMM0
            lea RDX,QWORD PTR [RAX+152]
            movsd XMM0,QWORD PTR [RIP+.L_64a588]
            movsd XMM1,QWORD PTR [RIP+.L_439e60]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e2d0:

            addsd XMM0,XMM1
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM0
            cmp RAX,RDX
            jne .L_42e2d0

            lea RDI,QWORD PTR [RIP+.L_64a568]
            call __cxa_guard_release@PLT
.L_42e2ee:

            lea RAX,QWORD PTR [RIP+.L_64a580]
            add RSP,8
.L_42e2f9:

            ret 
.L_42e2fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e300:

            movsd XMM0,QWORD PTR [RIP+.L_439e68]
            lea RDX,QWORD PTR [RDI+16]
            lea RCX,QWORD PTR [RDI+168]
            movsd XMM1,QWORD PTR [RIP+.L_439e70]
            movsd QWORD PTR [RDI+8],XMM0
            mov RAX,RDI
            mov QWORD PTR [RDI],0
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e330:

            addsd XMM0,XMM1
            add RDX,8
            movsd QWORD PTR [RDX-8],XMM0
            cmp RDX,RCX
            jne .L_42e330

            ret 
.L_42e344:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e350:

            movzx EAX,BYTE PTR [RIP+.L_64a4a8]
            test AL,AL
            je .L_42e368

            lea RAX,QWORD PTR [RIP+.L_64a4c0]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e368:

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            sub RSP,8
.L_42e373:

            call __cxa_guard_acquire@PLT

            test EAX,EAX
            je .L_42e3ce

            movapd XMM0,XMMWORD PTR [RIP+.L_43a220]
            lea RAX,QWORD PTR [RIP+.L_64a4d0]
            movaps XMMWORD PTR [RIP+.L_64a4c0],XMM0
            lea RDX,QWORD PTR [RAX+152]
            movsd XMM0,QWORD PTR [RIP+.L_64a4c8]
            movsd XMM1,QWORD PTR [RIP+.L_439e70]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e3b0:

            addsd XMM0,XMM1
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM0
            cmp RAX,RDX
            jne .L_42e3b0

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            call __cxa_guard_release@PLT
.L_42e3ce:

            lea RAX,QWORD PTR [RIP+.L_64a4c0]
            add RSP,8
.L_42e3d9:

            ret 
.L_42e3da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_42e3e0:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RDI+8]
            lea RCX,QWORD PTR [RDI+168]
            movsd XMM1,QWORD PTR [RIP+.L_43e980-19256]
            mov RAX,RDI
            mov QWORD PTR [RDI],0
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e408:

            addsd XMM0,XMM1
            add RDX,8
            movsd QWORD PTR [RDX-8],XMM0
            cmp RDX,RCX
            jne .L_42e408

            ret 
.L_42e41c:

            nop
            nop
            nop
            nop
.L_42e420:

            movzx EAX,BYTE PTR [RIP+.L_64a3e0]
            test AL,AL
            je .L_42e438

            lea RAX,QWORD PTR [RIP+.L_64a400]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e438:

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            sub RSP,8
.L_42e443:

            call __cxa_guard_acquire@PLT

            test EAX,EAX
            je .L_42e496

            lea RAX,QWORD PTR [RIP+.L_64a408]
            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RIP+.L_43e980-19256]
            mov QWORD PTR [RIP+.L_64a400],0
            lea RDX,QWORD PTR [RAX+160]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e478:

            addsd XMM0,XMM1
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM0
            cmp RAX,RDX
            jne .L_42e478

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            call __cxa_guard_release@PLT
.L_42e496:

            lea RAX,QWORD PTR [RIP+.L_64a400]
            add RSP,8
.L_42e4a1:

            ret 
.L_42e4a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e4b0:

            movsd XMM3,QWORD PTR [RIP+.L_439e78]
            movsd XMM4,QWORD PTR [RIP+.L_439e80]
            mulsd XMM3,XMM0
            mulsd XMM4,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_439e88]
            mulsd XMM1,QWORD PTR [RIP+.L_439e90]
            subsd XMM3,XMM4
            addsd XMM0,XMM1
            movsd QWORD PTR [RDI],XMM3
            movsd QWORD PTR [RSI],XMM0
            movsd QWORD PTR [RDX],XMM2
            ret 
.L_42e4ed:

            nop
            nop
            nop
.L_42e4f0:

            movapd XMM2,XMM0
            movapd XMM0,XMM1
            xorpd XMM0,XMMWORD PTR [RIP+.L_43a200]
            ucomisd XMM2,XMM0
            jb .L_42e510

            ucomisd XMM1,XMM2
            pxor XMM0,XMM0
            ja .L_42e522
.L_42e510:

            pxor XMM0,XMM0
            ucomisd XMM0,XMM2
            ja .L_42e528

            subsd XMM2,XMM1
            movapd XMM0,XMM2
.L_42e522:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e528:

            addsd XMM1,XMM2
            movapd XMM0,XMM1
            ret 
.L_42e531:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e540:

            push RBX
            mov RBX,RDI
            sub RSP,96
.L_42e548:

            movsd XMM7,QWORD PTR [RIP+.L_439e28]
            mulsd XMM0,QWORD PTR [RIP+.L_439e38]
            mulsd XMM7,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_43e980-19264]
            addsd XMM2,XMM7
            mulsd XMM2,QWORD PTR [RIP+.L_439e30]
            movzx EAX,BYTE PTR [RIP+.L_64a3e0]
            test AL,AL
            je .L_42e8e8
.L_42e57f:

            movq XMM10,QWORD PTR [RIP+.L_43a1f0]
            movapd XMM7,XMM1
            movsd XMM11,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM7,XMM10
            ucomisd XMM11,XMM7
            jbe .L_42e9f8

            cvttsd2si EAX,XMM7
            movsd XMM8,QWORD PTR [RIP+.L_64a4a0]
            cmp EAX,19
            jg .L_42e5f4

            pxor XMM9,XMM9
            lea RCX,QWORD PTR [RIP+.L_64a400]
            movsxd RDX,EAX
            movsd XMM12,QWORD PTR [RCX+RDX*8]
            add RCX,8
            cvtsi2sd XMM9,EAX
            movsd XMM8,QWORD PTR [RCX+RDX*8]
            subsd XMM8,XMM12
            subsd XMM7,XMM9
            mulsd XMM7,XMM8
            addsd XMM7,XMM12
            movapd XMM8,XMM7
.L_42e5f4:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM1
            jbe .L_42e607

            xorpd XMM8,XMMWORD PTR [RIP+.L_43a200]
.L_42e607:

            ucomisd XMM4,XMM7
            mov ECX,0
            setnp DL
            cmovne EDX,ECX
            ucomisd XMM5,XMM7
            setnp AL
            cmovne EAX,ECX
            test DL,AL
            je .L_42e636

            ucomisd XMM3,XMM7
            setnp AL
            cmove ECX,EAX
            test CL,CL
            jne .L_42e740
.L_42e636:

            movsd XMM9,QWORD PTR [RIP+.L_439e28]
            mulsd XMM3,QWORD PTR [RIP+.L_439e38]
            mulsd XMM9,XMM4
            mulsd XMM4,QWORD PTR [RIP+.L_43e980-19264]
            addsd XMM5,XMM9
            mulsd XMM5,QWORD PTR [RIP+.L_439e30]
            movzx EAX,BYTE PTR [RIP+.L_64a3e0]
            test AL,AL
            je .L_42e780
.L_42e670:

            andpd XMM10,XMM4
            ucomisd XMM11,XMM10
            movapd XMM1,XMM10
            jbe .L_42e9f8

            cvttsd2si EAX,XMM10
            cmp EAX,19
            jg .L_42e730

            pxor XMM10,XMM10
            lea RCX,QWORD PTR [RIP+.L_64a400]
            movsxd RDX,EAX
            movsd XMM11,QWORD PTR [RCX+RDX*8]
            add RCX,8
            cvtsi2sd XMM10,EAX
            movsd XMM9,QWORD PTR [RCX+RDX*8]
            subsd XMM9,XMM11
            subsd XMM1,XMM10
            mulsd XMM1,XMM9
            addsd XMM1,XMM11
.L_42e6cb:

            ucomisd XMM7,XMM4
            jbe .L_42e6d9

            xorpd XMM1,XMMWORD PTR [RIP+.L_43a200]
.L_42e6d9:

            subsd XMM0,XMM3
            subsd XMM8,XMM1
            subsd XMM2,XMM5
            movapd XMM3,XMM0
            movapd XMM0,XMM6
            mulsd XMM0,XMM3
            mulsd XMM0,XMM3
            addsd XMM0,QWORD PTR [RBX]
            movsd QWORD PTR [RBX],XMM0
            movapd XMM0,XMM6
            mulsd XMM6,XMM2
            mulsd XMM0,XMM8
            mulsd XMM6,XMM2
            mulsd XMM8,XMM0
            addsd XMM6,QWORD PTR [RBX+16]
            addsd XMM8,QWORD PTR [RBX+8]
            movsd QWORD PTR [RBX+16],XMM6
            movsd QWORD PTR [RBX+8],XMM8
            add RSP,96
.L_42e72e:

            pop RBX
            ret 
.L_42e730:

            movsd XMM1,QWORD PTR [RIP+.L_64a4a0]
            jmp .L_42e6cb
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42e740:

            movapd XMM1,XMM0
            movapd XMM0,XMM6
            mulsd XMM6,XMM2
            unpcklpd XMM1,XMM8
            movupd XMM3,XMMWORD PTR [RBX]
            unpcklpd XMM0,XMM0
            mulsd XMM2,XMM6
            mulpd XMM0,XMM1
            addsd XMM2,QWORD PTR [RBX+16]
            mulpd XMM0,XMM1
            movsd QWORD PTR [RBX+16],XMM2
            addpd XMM0,XMM3
            movups XMMWORD PTR [RBX],XMM0
            add RSP,96
.L_42e77a:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42e780:

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            movsd QWORD PTR [RSP+88],XMM7
            movsd QWORD PTR [RSP+80],XMM11
            movaps XMMWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM2
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+56]
            movapd XMM10,XMMWORD PTR [RSP+64]
            movsd XMM11,QWORD PTR [RSP+80]
            movsd XMM7,QWORD PTR [RSP+88]
            je .L_42e670

            lea RAX,QWORD PTR [RIP+.L_64a408]
            pxor XMM1,XMM1
            movsd XMM9,QWORD PTR [RIP+.L_43e980-19256]
            mov QWORD PTR [RIP+.L_64a400],0
            lea RDX,QWORD PTR [RAX+160]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e840:

            addsd XMM1,XMM9
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM1
            cmp RAX,RDX
            jne .L_42e840

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            movsd QWORD PTR [RSP+88],XMM7
            movsd QWORD PTR [RSP+80],XMM11
            movaps XMMWORD PTR [RSP+64],XMM10
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM0
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM3
            movsd QWORD PTR [RSP+16],XMM4
            movsd QWORD PTR [RSP+8],XMM6
            call __cxa_guard_release@PLT

            movsd XMM7,QWORD PTR [RSP+88]
            movsd XMM11,QWORD PTR [RSP+80]
            movapd XMM10,XMMWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP+48]
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_42e670
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42e8e8:

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            movsd QWORD PTR [RSP+56],XMM6
            movsd QWORD PTR [RSP+48],XMM5
            movsd QWORD PTR [RSP+40],XMM4
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM0
            movsd QWORD PTR [RSP+8],XMM2
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+48]
            movsd XMM6,QWORD PTR [RSP+56]
            je .L_42e57f

            lea RAX,QWORD PTR [RIP+.L_64a408]
            pxor XMM7,XMM7
            movsd XMM9,QWORD PTR [RIP+.L_43e980-19256]
            mov QWORD PTR [RIP+.L_64a400],0
            lea RDX,QWORD PTR [RAX+160]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42e980:

            addsd XMM7,XMM9
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM7
            cmp RDX,RAX
            jne .L_42e980

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            movsd QWORD PTR [RSP+56],XMM2
            movsd QWORD PTR [RSP+48],XMM0
            movsd QWORD PTR [RSP+40],XMM1
            movsd QWORD PTR [RSP+32],XMM3
            movsd QWORD PTR [RSP+24],XMM4
            movsd QWORD PTR [RSP+16],XMM5
            movsd QWORD PTR [RSP+8],XMM6
            call __cxa_guard_release@PLT

            movsd XMM2,QWORD PTR [RSP+56]
            movsd XMM0,QWORD PTR [RSP+48]
            movsd XMM1,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+32]
            movsd XMM4,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+8]
            jmp .L_42e57f
.L_42e9f8:

            lea RCX,QWORD PTR [RIP+.L_439d40]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_439693]
            mov EDX,234
            call __assert_fail@PLT
.L_42ea17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ea20:

            movsd XMM1,QWORD PTR [RDI+8]
            movsd XMM0,QWORD PTR [RDI+72]
            movapd XMM4,XMM1
            movsd XMM8,QWORD PTR [RDI+96]
            movsd XMM5,QWORD PTR [RDI+56]
            subsd XMM4,XMM0
            movsd XMM13,QWORD PTR [RDI+48]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RDI+32]
            movapd XMM9,XMM13
            movapd XMM2,XMM1
            addsd XMM1,XMM8
            movapd XMM10,XMM4
            subsd XMM2,XMM8
            movsd XMM8,QWORD PTR [RDI]
            movsd QWORD PTR [RSP-32],XMM0
            movapd XMM6,XMM8
            movsd QWORD PTR [RSP-24],XMM1
            addsd XMM4,XMM2
            movsd XMM1,QWORD PTR [RDI+104]
            subsd XMM10,XMM2
            movsd XMM2,QWORD PTR [RDI+40]
            movapd XMM3,XMM2
            addsd XMM2,XMM1
            subsd XMM3,XMM1
            movsd XMM1,QWORD PTR [RDI+80]
            movsd QWORD PTR [RSP-16],XMM2
            movsd XMM2,QWORD PTR [RDI+64]
            subsd XMM6,XMM2
            addsd XMM8,XMM2
            movsd XMM2,QWORD PTR [RDI+16]
            movapd XMM12,XMM6
            subsd XMM12,XMM3
            addsd XMM3,XMM6
            movapd XMM6,XMM2
            addsd XMM2,XMM1
            subsd XMM6,XMM1
            movapd XMM1,XMM5
            movapd XMM0,XMM12
            movapd XMM7,XMM6
            movsd XMM6,QWORD PTR [RDI+120]
            addsd XMM5,XMM6
            subsd XMM1,XMM6
            movsd XMM6,QWORD PTR [RDI+88]
            movapd XMM15,XMM5
            movapd XMM5,XMM7
            subsd XMM5,XMM1
            addsd XMM1,XMM7
            movsd XMM7,QWORD PTR [RDI+24]
            movapd XMM11,XMM7
            subsd XMM11,XMM6
            addsd XMM6,XMM7
            movsd XMM7,QWORD PTR [RDI+112]
            subsd XMM9,XMM7
            movapd XMM14,XMM11
            addsd XMM7,XMM13
            movapd XMM13,XMM5
            subsd XMM14,XMM9
            addsd XMM9,XMM11
            movsd XMM11,QWORD PTR [RIP+.L_439e98]
            subsd XMM13,XMM9
            addsd XMM5,XMM9
            movapd XMM9,XMM4
            mulsd XMM13,XMM11
            mulsd XMM5,XMM11
            subsd XMM0,XMM13
            subsd XMM9,XMM5
            addsd XMM5,XMM4
            addsd XMM12,XMM13
            movsd QWORD PTR [RDI+80],XMM0
            movapd XMM0,XMM14
            movsd QWORD PTR [RDI+88],XMM9
            subsd XMM0,XMM1
            movsd QWORD PTR [RDI+72],XMM5
            addsd XMM1,XMM14
            movapd XMM5,XMM10
            movsd QWORD PTR [RDI+64],XMM12
            movapd XMM4,XMM0
            movapd XMM0,XMM3
            mulsd XMM4,XMM11
            mulsd XMM11,XMM1
            movapd XMM1,XMM2
            addsd XMM2,XMM7
            subsd XMM1,XMM7
            subsd XMM5,XMM4
            addsd XMM10,XMM4
            movsd XMM4,QWORD PTR [RSP-24]
            subsd XMM0,XMM11
            addsd XMM11,XMM3
            movapd XMM3,XMM8
            addsd XMM8,XMM4
            movsd QWORD PTR [RDI+120],XMM5
            subsd XMM3,XMM4
            movsd QWORD PTR [RDI+104],XMM10
            movsd QWORD PTR [RDI+112],XMM0
            movsd XMM0,QWORD PTR [RSP-32]
            movapd XMM4,XMM8
            movsd QWORD PTR [RDI+96],XMM11
            subsd XMM8,XMM2
            movapd XMM5,XMM3
            addsd XMM4,XMM2
            movapd XMM2,XMM0
            movsd QWORD PTR [RDI+16],XMM8
            movsd QWORD PTR [RDI],XMM4
            movsd XMM7,QWORD PTR [RSP-16]
            subsd XMM2,XMM7
            addsd XMM0,XMM7
            movapd XMM4,XMM2
            subsd XMM4,XMM1
            addsd XMM1,XMM2
            movsd QWORD PTR [RDI+56],XMM4
            movapd XMM4,XMM6
            addsd XMM6,XMM15
            subsd XMM4,XMM15
            addsd XMM5,XMM4
            subsd XMM3,XMM4
            movsd QWORD PTR [RDI+48],XMM5
            movapd XMM5,XMM0
            subsd XMM0,XMM6
            addsd XMM5,XMM6
            movsd QWORD PTR [RDI+24],XMM0
            movdqu XMM0,XMMWORD PTR [RDI+48]
            movups XMMWORD PTR [RDI+32],XMM0
            movsd QWORD PTR [RDI+8],XMM5
            movdqu XMM0,XMMWORD PTR [RDI+80]
            movups XMMWORD PTR [RDI+48],XMM0
            movdqu XMM0,XMMWORD PTR [RDI+112]
            movups XMMWORD PTR [RDI+80],XMM0
            movdqu XMM0,XMMWORD PTR [RDI+64]
            movups XMMWORD PTR [RDI+112],XMM0
            movdqu XMM0,XMMWORD PTR [RDI+16]
            movups XMMWORD PTR [RDI+64],XMM0
            movdqu XMM0,XMMWORD PTR [RDI+96]
            movsd QWORD PTR [RDI+96],XMM3
            movups XMMWORD PTR [RDI+16],XMM0
            movsd QWORD PTR [RDI+104],XMM1
            ret 
.L_42eca7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42ecb0:

            movsd XMM1,QWORD PTR [RDI+16]
            movsd XMM0,QWORD PTR [RDI+48]
            movapd XMM8,XMM1
            movq XMM6,QWORD PTR [RIP+.L_43a200]
            movsd XMM11,QWORD PTR [RIP+.L_439e98]
            subsd XMM8,XMM0
            addsd XMM0,XMM1
            movapd XMM9,XMM8
            movsd QWORD PTR [RSI+72],XMM8
            movsd QWORD PTR [RSI+32],XMM0
            movapd XMM14,XMM8
            xorpd XMM9,XMM6
            movsd QWORD PTR [RSI+104],XMM9
            movsd XMM5,QWORD PTR [RDI]
            movsd XMM1,QWORD PTR [RDI+32]
            movapd XMM13,XMM5
            addsd XMM5,XMM1
            subsd XMM13,XMM1
            movsd QWORD PTR [RSI],XMM5
            movsd QWORD PTR [RSI+64],XMM13
            movapd XMM10,XMM13
            movsd QWORD PTR [RSI+96],XMM13
            movsd XMM1,QWORD PTR [RDI+40]
            movsd XMM2,QWORD PTR [RDI+8]
            movapd XMM12,XMM2
            addsd XMM2,XMM1
            subsd XMM12,XMM1
            movsd QWORD PTR [RSI+16],XMM2
            movapd XMM4,XMM12
            movsd XMM7,QWORD PTR [RDI+24]
            movsd XMM3,QWORD PTR [RDI+56]
            mov QWORD PTR [RSI+8],0
            movapd XMM1,XMM7
            mov QWORD PTR [RSI+24],0
            addsd XMM7,XMM3
            subsd XMM1,XMM3
            movapd XMM3,XMM1
            subsd XMM4,XMM1
            addsd XMM1,XMM12
            xorpd XMM3,XMM6
            subsd XMM3,XMM12
            mulsd XMM4,XMM11
            mulsd XMM1,XMM11
            subsd XMM10,XMM4
            subsd XMM14,XMM1
            addsd XMM1,XMM8
            addsd XMM4,XMM13
            movsd QWORD PTR [RSI+80],XMM10
            movsd QWORD PTR [RSI+88],XMM14
            movsd QWORD PTR [RSI+72],XMM1
            movapd XMM1,XMM3
            movapd XMM3,XMM5
            movsd QWORD PTR [RSI+64],XMM4
            mulsd XMM1,XMM11
            movsd QWORD PTR [RSI+96],XMM4
            subsd XMM3,XMM0
            movsd QWORD PTR [RSI+112],XMM10
            addsd XMM0,XMM5
            subsd XMM9,XMM1
            subsd XMM1,XMM8
            movsd QWORD PTR [RSI+48],XMM3
            movapd XMM4,XMM0
            movsd QWORD PTR [RSI+120],XMM9
            movsd QWORD PTR [RSI+104],XMM1
            movapd XMM1,XMM2
            addsd XMM2,XMM7
            subsd XMM1,XMM7
            subsd XMM0,XMM2
            xorpd XMM6,XMM1
            addsd XMM4,XMM2
            movsd QWORD PTR [RSI+56],XMM6
            movsd QWORD PTR [RSI+16],XMM0
            movsd QWORD PTR [RSI],XMM4
            movdqu XMM0,XMMWORD PTR [RSI+48]
            movups XMMWORD PTR [RSI+32],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+80]
            movups XMMWORD PTR [RSI+48],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+112]
            movups XMMWORD PTR [RSI+80],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+64]
            movups XMMWORD PTR [RSI+112],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+16]
            movups XMMWORD PTR [RSI+64],XMM0
            movdqu XMM0,XMMWORD PTR [RSI+96]
            movsd QWORD PTR [RSI+96],XMM3
            movups XMMWORD PTR [RSI+16],XMM0
            movsd QWORD PTR [RSI+104],XMM1
            ret 
.L_42ee5c:

            nop
            nop
            nop
            nop
.L_42ee60:

            sub RSP,1176
.L_42ee67:

            mov RAX,RDI
            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1160],RCX
            xor ECX,ECX
            lea RCX,QWORD PTR [RSP+128]
            movq XMM7,QWORD PTR [RIP+.L_43a200]
            movsd XMM6,QWORD PTR [RIP+.L_439e98]
            lea R8,QWORD PTR [RCX+1024]
            mov RSI,RCX
            mov RDX,RCX
            nop
            nop
            nop
            nop
            nop
            nop
.L_42eea8:

            movsd XMM0,QWORD PTR [RDI+16]
            sub RDX,-128
            movsd XMM2,QWORD PTR [RDI+48]
            add RDI,64
            movapd XMM8,XMM0
            subsd XMM8,XMM2
            addsd XMM2,XMM0
            movapd XMM9,XMM8
            movsd QWORD PTR [RDX-56],XMM8
            movsd QWORD PTR [RDX-96],XMM2
            movapd XMM14,XMM8
            xorpd XMM9,XMM7
            movsd QWORD PTR [RDX-24],XMM9
            movsd XMM0,QWORD PTR [RDI-64]
            movsd XMM4,QWORD PTR [RDI-32]
            movapd XMM13,XMM0
            subsd XMM13,XMM4
            addsd XMM4,XMM0
            movsd QWORD PTR [RDX-64],XMM13
            movapd XMM10,XMM13
            movsd QWORD PTR [RDX-128],XMM4
            movsd QWORD PTR [RDX-32],XMM13
            movsd XMM0,QWORD PTR [RDI-56]
            movsd XMM3,QWORD PTR [RDI-24]
            movapd XMM12,XMM0
            subsd XMM12,XMM3
            addsd XMM3,XMM0
            movapd XMM11,XMM12
            movsd QWORD PTR [RDX-112],XMM3
            movsd XMM1,QWORD PTR [RDI-40]
            movsd XMM5,QWORD PTR [RDI-8]
            mov QWORD PTR [RDX-120],0
            movapd XMM0,XMM1
            mov QWORD PTR [RDX-104],0
            subsd XMM0,XMM5
            addsd XMM5,XMM1
            movapd XMM1,XMM0
            subsd XMM11,XMM0
            xorpd XMM1,XMM7
            addsd XMM0,XMM12
            subsd XMM1,XMM12
            mulsd XMM11,XMM6
            mulsd XMM0,XMM6
            mulsd XMM1,XMM6
            subsd XMM10,XMM11
            subsd XMM14,XMM0
            addsd XMM0,XMM8
            addsd XMM11,XMM13
            subsd XMM9,XMM1
            movsd QWORD PTR [RDX-48],XMM10
            subsd XMM1,XMM8
            movapd XMM8,XMM4
            movsd QWORD PTR [RDX-56],XMM0
            movapd XMM0,XMM2
            subsd XMM8,XMM2
            movsd QWORD PTR [RDX-40],XMM14
            addsd XMM0,XMM4
            movsd QWORD PTR [RDX-64],XMM11
            movsd QWORD PTR [RDX-24],XMM1
            movapd XMM1,XMM3
            addsd XMM3,XMM5
            movsd QWORD PTR [RDX-8],XMM9
            subsd XMM1,XMM5
            movsd QWORD PTR [RDX-80],XMM8
            movapd XMM2,XMM0
            movsd QWORD PTR [RDX-16],XMM10
            movsd QWORD PTR [RDX-32],XMM11
            subsd XMM0,XMM3
            addsd XMM2,XMM3
            movsd QWORD PTR [RDX-112],XMM0
            movapd XMM0,XMM1
            movsd QWORD PTR [RDX-128],XMM2
            xorpd XMM0,XMM7
            movsd QWORD PTR [RDX-72],XMM0
            movdqa XMM0,XMMWORD PTR [RDX-80]
            movaps XMMWORD PTR [RDX-96],XMM0
            movdqa XMM0,XMMWORD PTR [RDX-48]
            movaps XMMWORD PTR [RDX-80],XMM0
            movdqa XMM0,XMMWORD PTR [RDX-16]
            movaps XMMWORD PTR [RDX-48],XMM0
            movdqa XMM0,XMMWORD PTR [RDX-64]
            movaps XMMWORD PTR [RDX-16],XMM0
            movdqa XMM0,XMMWORD PTR [RDX-112]
            movaps XMMWORD PTR [RDX-64],XMM0
            movdqa XMM0,XMMWORD PTR [RDX-32]
            movsd QWORD PTR [RDX-32],XMM8
            movaps XMMWORD PTR [RDX-112],XMM0
            movsd QWORD PTR [RDX-24],XMM1
            cmp RDX,R8
            jne .L_42eea8

            mov RDX,RCX
            mov R8D,1
            xor EDI,EDI
            jmp .L_42f07f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42f070:

            add EDI,1
            add R8,1
            sub RSI,-128
            add RDX,16
.L_42f07f:

            test EDI,EDI
            je .L_42f070

            movsd XMM1,QWORD PTR [RSI]
            cmp EDI,1
            movsd XMM0,QWORD PTR [RSI+8]
            movdqa XMM2,XMMWORD PTR [RDX]
            movaps XMMWORD PTR [RSI],XMM2
            movsd QWORD PTR [RDX],XMM1
            movsd QWORD PTR [RDX+8],XMM0
            je .L_42f070

            movsd XMM1,QWORD PTR [RSI+16]
            cmp EDI,2
            movsd XMM0,QWORD PTR [RSI+24]
            movdqa XMM2,XMMWORD PTR [RDX+128]
            movaps XMMWORD PTR [RSI+16],XMM2
            movsd QWORD PTR [RDX+128],XMM1
            movsd QWORD PTR [RDX+136],XMM0
            je .L_42f070

            movsd XMM1,QWORD PTR [RSI+32]
            cmp EDI,3
            movsd XMM0,QWORD PTR [RSI+40]
            movdqa XMM2,XMMWORD PTR [RDX+256]
            movaps XMMWORD PTR [RSI+32],XMM2
            movsd QWORD PTR [RDX+256],XMM1
            movsd QWORD PTR [RDX+264],XMM0
            je .L_42f070

            movsd XMM1,QWORD PTR [RSI+48]
            cmp EDI,4
            movsd XMM0,QWORD PTR [RSI+56]
            movdqa XMM2,XMMWORD PTR [RDX+384]
            movaps XMMWORD PTR [RSI+48],XMM2
            movsd QWORD PTR [RDX+384],XMM1
            movsd QWORD PTR [RDX+392],XMM0
            je .L_42f070

            movsd XMM1,QWORD PTR [RSI+64]
            cmp EDI,5
            movsd XMM0,QWORD PTR [RSI+72]
            movdqa XMM2,XMMWORD PTR [RDX+512]
            movaps XMMWORD PTR [RSI+64],XMM2
            movsd QWORD PTR [RDX+512],XMM1
            movsd QWORD PTR [RDX+520],XMM0
            je .L_42f070

            movsd XMM1,QWORD PTR [RSI+80]
            cmp EDI,6
            movsd XMM0,QWORD PTR [RSI+88]
            movdqa XMM2,XMMWORD PTR [RDX+640]
            movaps XMMWORD PTR [RSI+80],XMM2
            movsd QWORD PTR [RDX+640],XMM1
            movsd QWORD PTR [RDX+648],XMM0
            je .L_42f070

            movsd XMM1,QWORD PTR [RSI+96]
            cmp EDI,7
            movsd XMM0,QWORD PTR [RSI+104]
            movdqa XMM2,XMMWORD PTR [RDX+768]
            movaps XMMWORD PTR [RSI+96],XMM2
            movsd QWORD PTR [RDX+768],XMM1
            movsd QWORD PTR [RDX+776],XMM0
            je .L_42f1e3

            movsd XMM1,QWORD PTR [RSI+112]
            cmp R8,8
            movsd XMM0,QWORD PTR [RSI+120]
            movdqa XMM2,XMMWORD PTR [RDX+896]
            movaps XMMWORD PTR [RSI+112],XMM2
            movsd QWORD PTR [RDX+896],XMM1
            movsd QWORD PTR [RDX+904],XMM0
            jne .L_42f070
.L_42f1e3:

            movsd XMM0,QWORD PTR [RSP+128]
            mov RSI,RCX
            mov RDI,RSP
            movsd QWORD PTR [RSP],XMM0
            movsd XMM0,QWORD PTR [RSP+640]
            movsd QWORD PTR [RSP+64],XMM0
            movsd XMM0,QWORD PTR [RSP+144]
            movsd QWORD PTR [RSP+8],XMM0
            movsd XMM0,QWORD PTR [RSP+656]
            movsd QWORD PTR [RSP+72],XMM0
            movsd XMM0,QWORD PTR [RSP+160]
            movsd QWORD PTR [RSP+16],XMM0
            movsd XMM0,QWORD PTR [RSP+672]
            movsd QWORD PTR [RSP+80],XMM0
            movsd XMM0,QWORD PTR [RSP+176]
            movsd QWORD PTR [RSP+24],XMM0
            movsd XMM0,QWORD PTR [RSP+688]
            movsd QWORD PTR [RSP+88],XMM0
            movsd XMM0,QWORD PTR [RSP+192]
            movsd QWORD PTR [RSP+32],XMM0
            movsd XMM0,QWORD PTR [RSP+704]
            movsd QWORD PTR [RSP+96],XMM0
            movsd XMM0,QWORD PTR [RSP+208]
            movsd QWORD PTR [RSP+40],XMM0
            movsd XMM0,QWORD PTR [RSP+720]
            movsd QWORD PTR [RSP+104],XMM0
            movsd XMM0,QWORD PTR [RSP+224]
            movsd QWORD PTR [RSP+48],XMM0
            movsd XMM0,QWORD PTR [RSP+736]
            movsd QWORD PTR [RSP+112],XMM0
            movsd XMM0,QWORD PTR [RSP+240]
            movsd QWORD PTR [RSP+56],XMM0
            movsd XMM0,QWORD PTR [RSP+752]
            movsd QWORD PTR [RSP+120],XMM0
            call .L_42ecb0

            lea RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RCX+512]
            call .L_42ecb0

            lea RDI,QWORD PTR [RCX+128]
            call .L_42ea20

            lea RDI,QWORD PTR [RCX+256]
            call .L_42ea20

            lea RDI,QWORD PTR [RCX+384]
            call .L_42ea20

            movapd XMM0,XMMWORD PTR [RSP+192]
            movapd XMM1,XMMWORD PTR [RSP+208]
            movhpd XMM0,QWORD PTR [RSP+208]
            movlpd XMM1,QWORD PTR [RSP+200]
            mulpd XMM0,XMM0
            movapd XMM2,XMMWORD PTR [RSP+224]
            mulpd XMM1,XMM1
            movhpd XMM2,QWORD PTR [RSP+240]
            mulpd XMM2,XMM2
            addpd XMM1,XMM0
            movapd XMM0,XMMWORD PTR [RIP+.L_43a230]
            mulpd XMM1,XMM0
            movups XMMWORD PTR [RAX+32],XMM1
            movapd XMM1,XMMWORD PTR [RSP+240]
            movlpd XMM1,QWORD PTR [RSP+232]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+272]
            movlpd XMM2,QWORD PTR [RSP+264]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+48],XMM1
            movapd XMM1,XMMWORD PTR [RSP+256]
            movhpd XMM1,QWORD PTR [RSP+272]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+304]
            movlpd XMM2,QWORD PTR [RSP+296]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+64],XMM1
            movapd XMM1,XMMWORD PTR [RSP+288]
            movhpd XMM1,QWORD PTR [RSP+304]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+336]
            movlpd XMM2,QWORD PTR [RSP+328]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+80],XMM1
            movapd XMM1,XMMWORD PTR [RSP+320]
            movhpd XMM1,QWORD PTR [RSP+336]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+368]
            movlpd XMM2,QWORD PTR [RSP+360]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+96],XMM1
            movapd XMM1,XMMWORD PTR [RSP+352]
            movhpd XMM1,QWORD PTR [RSP+368]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            mulpd XMM1,XMM0
            movups XMMWORD PTR [RAX+112],XMM1
            movapd XMM1,XMMWORD PTR [RSP+384]
            movhpd XMM1,QWORD PTR [RSP+400]
            movapd XMM2,XMMWORD PTR [RSP+400]
            movlpd XMM2,QWORD PTR [RSP+392]
            mulpd XMM1,XMM1
            mulpd XMM2,XMM2
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+432]
            movlpd XMM2,QWORD PTR [RSP+424]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+128],XMM1
            movapd XMM1,XMMWORD PTR [RSP+416]
            movhpd XMM1,QWORD PTR [RSP+432]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+464]
            movlpd XMM2,QWORD PTR [RSP+456]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+144],XMM1
            movapd XMM1,XMMWORD PTR [RSP+448]
            movhpd XMM1,QWORD PTR [RSP+464]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+496]
            movlpd XMM2,QWORD PTR [RSP+488]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+160],XMM1
            movapd XMM1,XMMWORD PTR [RSP+480]
            movhpd XMM1,QWORD PTR [RSP+496]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+528]
            movlpd XMM2,QWORD PTR [RSP+520]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+176],XMM1
            movapd XMM1,XMMWORD PTR [RSP+512]
            movhpd XMM1,QWORD PTR [RSP+528]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+560]
            movlpd XMM2,QWORD PTR [RSP+552]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+192],XMM1
            movapd XMM1,XMMWORD PTR [RSP+544]
            movhpd XMM1,QWORD PTR [RSP+560]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+592]
            mulpd XMM1,XMM0
            movups XMMWORD PTR [RAX+208],XMM1
            movapd XMM1,XMMWORD PTR [RSP+576]
            movhpd XMM1,QWORD PTR [RSP+592]
            movlpd XMM2,QWORD PTR [RSP+584]
            mulpd XMM1,XMM1
            mulpd XMM2,XMM2
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+624]
            movlpd XMM2,QWORD PTR [RSP+616]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+224],XMM1
            movapd XMM1,XMMWORD PTR [RSP+608]
            movhpd XMM1,QWORD PTR [RSP+624]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+656]
            movlpd XMM2,QWORD PTR [RSP+648]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+240],XMM1
            movapd XMM1,XMMWORD PTR [RSP+640]
            movhpd XMM1,QWORD PTR [RSP+656]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RSP+672]
            movhpd XMM2,QWORD PTR [RSP+688]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM2
            movups XMMWORD PTR [RAX+256],XMM1
            movapd XMM1,XMMWORD PTR [RSP+688]
            movlpd XMM1,QWORD PTR [RSP+680]
            mulpd XMM1,XMM1
            addpd XMM1,XMM2
            mulpd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+704]
            mulsd XMM1,XMM1
            movups XMMWORD PTR [RAX+272],XMM0
            movsd XMM0,QWORD PTR [RSP+712]
            mulsd XMM0,XMM0
            addsd XMM0,XMM1
            mulsd XMM0,QWORD PTR [RIP+.L_439ea0]
            movsd QWORD PTR [RAX+288],XMM0
            mov RAX,QWORD PTR [RSP+1160]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42f701

            add RSP,1176
.L_42f700:

            ret 
.L_42f701:

            call __stack_chk_fail@PLT
.L_42f706:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f710:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            mov ECX,12
            sub RSP,232
.L_42f730:

            pxor XMM1,XMM1
            lea R14,QWORD PTR [RSP+112]
            movsd XMM5,QWORD PTR [RIP+.L_439eb0]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+216],RAX
            xor EAX,EAX
            mov RDI,R14
            mov R12,RSI
            mov RBX,R8
            movaps XMMWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+96],0
            pxor XMM4,XMM4
            movapd XMM8,XMM5
            movapd XMM6,XMM5
            movapd XMM9,XMM5

            rep stosq QWORD PTR [RDI]

            movsd XMM3,QWORD PTR [RIP+.L_439ea8]
            movapd XMM7,XMM5
            movapd XMM2,XMM1
            jmp .L_42f7e2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42f798:

            test ESI,ESI
            je .L_42fcb0

            cmp ESI,7
            mov ESI,1
            je .L_42fcea
.L_42f7ae:

            mulsd XMM0,XMM6
            lea RCX,QWORD PTR [RSI+RCX*4]
            addsd XMM0,QWORD PTR [RSP+RCX*8+112]
            movsd QWORD PTR [RSP+RCX*8+112],XMM0
.L_42f7c2:

            add RAX,1
            cmp RAX,192
            je .L_42f85b
.L_42f7d2:

            mov RCX,RAX
            shr RCX,6
            movsxd RCX,ECX
            movsd XMM2,QWORD PTR [RSP+RCX*8+80]
.L_42f7e2:

            movsd XMM0,QWORD PTR [RBP+RAX*8]
            mov RDI,RAX
            mov RCX,RAX
            and EDI,63
            shr RCX,6
            mov ESI,EAX
            subsd XMM0,QWORD PTR [R12+RAX*8]
            shr RDI,3
            movsxd RCX,ECX
            and ESI,7
            test RDI,RDI
            movapd XMM1,XMM0
            mulsd XMM1,XMM3
            addsd XMM1,XMM2
            movsd QWORD PTR [RSP+RCX*8+80],XMM1
            je .L_42f798

            cmp RDI,7
            je .L_42fcd8

            test ESI,ESI
            jne .L_42fd10

            mulsd XMM0,XMM7
.L_42f838:

            movsxd RSI,ESI
            add RAX,1
            lea RCX,QWORD PTR [RSI+RCX*4]
            cmp RAX,192
            addsd XMM0,QWORD PTR [RSP+RCX*8+112]
            movsd QWORD PTR [RSP+RCX*8+112],XMM0
            jne .L_42f7d2
.L_42f85b:

            movsd XMM3,QWORD PTR [RIP+.L_6441c0]
            mov RDI,RDX
            movsd XMM2,QWORD PTR [RSP+96]
            lea R15,QWORD PTR [RIP+.L_6441c0]
            movsd XMM1,QWORD PTR [RSP+88]
            movsd XMM0,QWORD PTR [RSP+80]
            movsd QWORD PTR [RSP+8],XMM4
            call .L_42e050

            lea RAX,QWORD PTR [R14+32]
            movsd XMM4,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],RAX
.L_42f899:

            movsd XMM2,QWORD PTR [R14+64]
            mov RDI,RBX
            add R14,8
            movsd XMM1,QWORD PTR [R14+24]
            movsd XMM0,QWORD PTR [R14-8]
            movsd XMM3,QWORD PTR [R15]
            movsd QWORD PTR [RSP+8],XMM4
            call .L_42e050

            cmp QWORD PTR [RSP+16],R14
            movsd XMM4,QWORD PTR [RSP+8]
            jne .L_42f899

            lea RAX,QWORD PTR [R12+16]
            cmp RBP,RAX
            jae .L_42f8e6

            lea RAX,QWORD PTR [RBP+16]
            cmp R12,RAX
            jb .L_42fffd
.L_42f8e6:

            mov RDX,RBP
            xor EAX,EAX
            shr RDX,3
            and EDX,1
            je .L_42f929

            movsd XMM3,QWORD PTR [R12]
            mov RAX,RDX
            movsd XMM0,QWORD PTR [RBP]
            movapd XMM1,XMM3
            movsd XMM2,QWORD PTR [RIP+.L_439eb8]
            addsd XMM1,XMM0
            subsd XMM0,XMM3
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            movsd QWORD PTR [RBP],XMM1
            movsd QWORD PTR [R12],XMM0
.L_42f929:

            mov R9D,192
            xor ECX,ECX
            sub R9,RDX
            shl RDX,3
            mov R8,R9
            movapd XMM3,XMMWORD PTR [RIP+.L_43a240]
            lea RDI,QWORD PTR [RBP+RDX*1]
            lea RSI,QWORD PTR [R12+RDX*1]
            shr R8,1
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_42f958:

            movupd XMM2,XMMWORD PTR [RSI+RDX*1]
            add RCX,1
            movapd XMM0,XMMWORD PTR [RDI+RDX*1]
            movapd XMM1,XMM2
            addpd XMM1,XMM0
            subpd XMM0,XMM2
            mulpd XMM1,XMM3
            mulpd XMM0,XMM3
            movaps XMMWORD PTR [RDI+RDX*1],XMM1
            movups XMMWORD PTR [RSI+RDX*1],XMM0
            add RDX,16
            cmp R8,RCX
            ja .L_42f958

            mov RDX,R9
            and RDX,-2
            add RAX,RDX
            cmp RDX,R9
            je .L_42f9d2

            shl RAX,3
            movsd XMM2,QWORD PTR [RIP+.L_439eb8]
            lea RDX,QWORD PTR [RBP+RAX*1]
            add RAX,R12
            movsd XMM3,QWORD PTR [RAX]
            movsd XMM0,QWORD PTR [RDX]
            movapd XMM1,XMM3
            addsd XMM1,XMM0
            subsd XMM0,XMM3
            mulsd XMM1,XMM2
            mulsd XMM0,XMM2
            movsd QWORD PTR [RDX],XMM1
            movsd QWORD PTR [RAX],XMM0
.L_42f9d2:

            lea RDI,QWORD PTR [RBP+512]
            movsd QWORD PTR [RSP+8],XMM4
            mov EBX,4
            call .L_42ee60

            mov RDI,R12
            call .L_42ee60

            lea RDI,QWORD PTR [R12+512]
            call .L_42ee60

            lea RDI,QWORD PTR [R12+1024]
            call .L_42ee60

            movsd XMM7,QWORD PTR [RIP+.L_439ec0]
            movsd XMM6,QWORD PTR [RIP+.L_439ec8]
            movsd XMM5,QWORD PTR [RIP+.L_439ed0]
            movsd XMM3,QWORD PTR [RIP+.L_439ed8]
            movsd XMM4,QWORD PTR [RSP+8]
            jmp .L_42fa46
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fa38:

            add RBX,1
            cmp RBX,37
            je .L_42fc84
.L_42fa46:

            movsd XMM2,QWORD PTR [R15+RBX*8]
            movapd XMM0,XMM2
            mulsd XMM0,XMM7
            mulsd XMM0,QWORD PTR [R12+RBX*8]
            addsd XMM0,QWORD PTR [R13]
            movsd QWORD PTR [R13],XMM0
            movapd XMM0,XMM2
            mulsd XMM0,XMM6
            mulsd XMM0,QWORD PTR [R12+RBX*8+1024]
            addsd XMM0,QWORD PTR [R13+16]
            movsd QWORD PTR [R13+16],XMM0
            movsd XMM0,QWORD PTR [RBP+RBX*8+512]
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_4300ab
.L_42fa9b:

            movsd QWORD PTR [RBP+RBX*8+512],XMM1
            movsd XMM0,QWORD PTR [R12+RBX*8+512]
            ucomisd XMM4,XMM0
            sqrtsd XMM1,XMM0
            ja .L_43004d
.L_42fabc:

            movsd QWORD PTR [R12+RBX*8+512],XMM1
            movsd XMM8,QWORD PTR [RBP+RBX*8+512]
            movapd XMM0,XMM8
            subsd XMM0,XMM1
            addsd XMM1,XMM8
            ucomisd XMM0,XMM5
            jb .L_42faef

            ucomisd XMM3,XMM0
            pxor XMM8,XMM8
            ja .L_42fb02
.L_42faef:

            ucomisd XMM4,XMM0
            ja .L_42fd40

            subsd XMM0,XMM3
            movapd XMM8,XMM0
.L_42fb02:

            ucomisd XMM1,XMM5
            jb .L_42fb13

            ucomisd XMM3,XMM1
            pxor XMM9,XMM9
            ja .L_42fb26
.L_42fb13:

            ucomisd XMM4,XMM1
            ja .L_42fd50

            subsd XMM1,XMM3
            movapd XMM9,XMM1
.L_42fb26:

            ucomisd XMM9,XMM8
            jp .L_42fb33

            je .L_42fa38
.L_42fb33:

            movsd XMM12,QWORD PTR [RIP+.L_439ee0]
            movzx EAX,BYTE PTR [RIP+.L_64a4a8]
            mulsd XMM8,XMM12
            test AL,AL
            je .L_42feb0
.L_42fb50:

            movapd XMM1,XMM8
            movsd XMM11,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM1,XMMWORD PTR [RIP+.L_43a1f0]
            ucomisd XMM11,XMM1
            jbe .L_43010e

            cvttsd2si EAX,XMM1
            movsd XMM10,QWORD PTR [RIP+.L_64a560]
            cmp EAX,19
            jg .L_42fbbe

            pxor XMM13,XMM13
            lea RCX,QWORD PTR [RIP+.L_64a4c0]
            movsxd RDX,EAX
            movsd XMM0,QWORD PTR [RCX+RDX*8]
            add RCX,8
            cvtsi2sd XMM13,EAX
            movsd XMM10,QWORD PTR [RCX+RDX*8]
            subsd XMM10,XMM0
            subsd XMM1,XMM13
            mulsd XMM1,XMM10
            addsd XMM1,XMM0
            movapd XMM10,XMM1
.L_42fbbe:

            ucomisd XMM4,XMM8
            jbe .L_42fbce

            xorpd XMM10,XMMWORD PTR [RIP+.L_43a200]
.L_42fbce:

            movzx EAX,BYTE PTR [RIP+.L_64a4a8]
            mulsd XMM9,XMM12
            test AL,AL
            je .L_42fd60
.L_42fbe2:

            movapd XMM1,XMM9
            andpd XMM1,XMMWORD PTR [RIP+.L_43a1f0]
            ucomisd XMM11,XMM1
            jbe .L_43010e

            cvttsd2si EAX,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_64a560]
            cmp EAX,19
            jg .L_42fc41

            pxor XMM8,XMM8
            lea RCX,QWORD PTR [RIP+.L_64a4c0]
            movsxd RDX,EAX
            movsd XMM11,QWORD PTR [RCX+RDX*8]
            add RCX,8
            cvtsi2sd XMM8,EAX
            movsd XMM0,QWORD PTR [RCX+RDX*8]
            subsd XMM0,XMM11
            subsd XMM1,XMM8
            mulsd XMM0,XMM1
            addsd XMM0,XMM11
.L_42fc41:

            ucomisd XMM4,XMM9
            jbe .L_42fc50

            xorpd XMM0,XMMWORD PTR [RIP+.L_43a200]
.L_42fc50:

            subsd XMM10,XMM0
            add RBX,1
            movsd XMM0,QWORD PTR [RIP+.L_439ee8]
            cmp RBX,37
            mulsd XMM0,XMM10
            mulsd XMM2,XMM0
            mulsd XMM2,XMM0
            addsd XMM2,QWORD PTR [R13+8]
            movsd QWORD PTR [R13+8],XMM2
            jne .L_42fa46
.L_42fc84:

            mov RAX,QWORD PTR [RSP+216]
            xor RAX,QWORD PTR FS:[40]
            jne .L_430109

            add RSP,232
.L_42fca2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42fcb0:

            mov ESI,1
.L_42fcb5:

            lea RSI,QWORD PTR [RSI+RCX*4]
            mulsd XMM0,XMM5
            movsd XMM1,QWORD PTR [RSP+RSI*8+112]
            addsd XMM1,XMM0
            movsd QWORD PTR [RSP+RSI*8+112],XMM1
            xor ESI,ESI
            jmp .L_42f838
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_42fcd8:

            test ESI,ESI
            je .L_42fd30

            cmp ESI,7
            mov ESI,3
            jne .L_42f7ae
.L_42fcea:

            lea RSI,QWORD PTR [RSI+RCX*4]
            mulsd XMM0,XMM8
            movsd XMM1,QWORD PTR [RSP+RSI*8+112]
            addsd XMM1,XMM0
            movsd QWORD PTR [RSP+RSI*8+112],XMM1
            mov ESI,2
            jmp .L_42f838
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42fd10:

            cmp ESI,7
            jne .L_42f7c2

            mulsd XMM0,XMM9
            mov ESI,2
            jmp .L_42f838
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_42fd30:

            mov ESI,3
            jmp .L_42fcb5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_42fd40:

            addsd XMM0,XMM3
            movapd XMM8,XMM0
            jmp .L_42fb02
          .byte 0x66
          .byte 0x90
.L_42fd50:

            addsd XMM1,XMM3
            movapd XMM9,XMM1
            jmp .L_42fb26
          .byte 0x66
          .byte 0x90
.L_42fd60:

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+72],XMM11
            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM10
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM9
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM9,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM11,QWORD PTR [RSP+72]
            je .L_42fbe2

            movapd XMM1,XMMWORD PTR [RIP+.L_43a220]
            lea RAX,QWORD PTR [RIP+.L_64a4d0]
            movaps XMMWORD PTR [RIP+.L_64a4c0],XMM1
            lea RDX,QWORD PTR [RAX+152]
            movsd XMM0,QWORD PTR [RIP+.L_64a4c8]
            movsd XMM1,QWORD PTR [RIP+.L_439e70]
            nop
            nop
            nop
            nop
            nop
.L_42fe18:

            addsd XMM0,XMM1
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM0
            cmp RDX,RAX
            jne .L_42fe18

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+72],XMM11
            movsd QWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM9
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM10
            call __cxa_guard_release@PLT

            movsd XMM11,QWORD PTR [RSP+72]
            movsd XMM4,QWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM9,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM10,QWORD PTR [RSP+8]
            jmp .L_42fbe2
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_42feb0:

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+72],XMM4
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM12
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM9
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM8
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM8,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM9,QWORD PTR [RSP+24]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM12,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM4,QWORD PTR [RSP+72]
            je .L_42fb50

            movapd XMM0,XMMWORD PTR [RIP+.L_43a220]
            lea RAX,QWORD PTR [RIP+.L_64a4d0]
            movaps XMMWORD PTR [RIP+.L_64a4c0],XMM0
            lea RDX,QWORD PTR [RAX+152]
            movsd XMM0,QWORD PTR [RIP+.L_64a4c8]
            movsd XMM1,QWORD PTR [RIP+.L_439e70]
            nop
            nop
            nop
            nop
            nop
.L_42ff68:

            addsd XMM0,XMM1
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM0
            cmp RAX,RDX
            jne .L_42ff68

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+72],XMM4
            movsd QWORD PTR [RSP+64],XMM7
            movsd QWORD PTR [RSP+56],XMM12
            movsd QWORD PTR [RSP+48],XMM3
            movsd QWORD PTR [RSP+40],XMM5
            movsd QWORD PTR [RSP+32],XMM6
            movsd QWORD PTR [RSP+24],XMM8
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM9
            call __cxa_guard_release@PLT

            movsd XMM4,QWORD PTR [RSP+72]
            movsd XMM7,QWORD PTR [RSP+64]
            movsd XMM12,QWORD PTR [RSP+56]
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM6,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM9,QWORD PTR [RSP+8]
            jmp .L_42fb50
.L_42fffd:

            movsd XMM3,QWORD PTR [RIP+.L_439eb8]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430010:

            movsd XMM2,QWORD PTR [R12+RAX*1]
            movsd XMM0,QWORD PTR [RBP+RAX*1]
            movapd XMM1,XMM2
            addsd XMM1,XMM0
            subsd XMM0,XMM2
            mulsd XMM1,XMM3
            mulsd XMM0,XMM3
            movsd QWORD PTR [RBP+RAX*1],XMM1
            movsd QWORD PTR [R12+RAX*1],XMM0
            add RAX,8
            cmp RAX,1536
            jne .L_430010

            jmp .L_42f9d2
.L_43004d:

            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_42fabc
.L_4300ab:

            movsd QWORD PTR [RSP+56],XMM4
            movsd QWORD PTR [RSP+48],XMM7
            movsd QWORD PTR [RSP+40],XMM3
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM1
            call sqrt@PLT

            movsd XMM4,QWORD PTR [RSP+56]
            movsd XMM7,QWORD PTR [RSP+48]
            movsd XMM3,QWORD PTR [RSP+40]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+8]
            jmp .L_42fa9b
.L_430109:

            call __stack_chk_fail@PLT
.L_43010e:

            lea RCX,QWORD PTR [RIP+.L_439d40]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_439693]
            mov EDX,234
            call __assert_fail@PLT
.L_43012d:

            nop
            nop
            nop
.L_430130:

            push R15
            push R14
            xor R11D,R11D
            push R13
            push R12
            mov R15,RDI
            push RBP
            push RBX
            mov R14,RSI
            pxor XMM0,XMM0
            sub RSP,248
.L_43014e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+232],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDX+RDX*2]
            lea R12,QWORD PTR [RSP+160]
            mov R13,QWORD PTR [RSP+304]
            movsd XMM7,QWORD PTR [RIP+.L_439ef0]
            mov QWORD PTR [RSP+16],RDX
            add RAX,RAX
            movdqa XMM10,XMMWORD PTR [RIP+.L_43a250]
            mov QWORD PTR [RSP+56],RAX
            lea RAX,QWORD PTR [R12+64]
            mov QWORD PTR [RSP+24],R13
            movaps XMMWORD PTR [RSP+128],XMM0
            movapd XMM11,XMM7
            mov QWORD PTR [RSP+32],RCX
            mov R13D,R11D
            movdqa XMM9,XMMWORD PTR [RIP+.L_43a260]
            mov QWORD PTR [RSP+40],R8
            mov QWORD PTR [RSP+48],R9
            movdqa XMM8,XMMWORD PTR [RIP+.L_43a270]
            mov QWORD PTR [RSP+144],0
            mov QWORD PTR [RSP+8],RAX
.L_4301df:

            pxor XMM0,XMM0
            movaps XMMWORD PTR [RSP+176],XMM10
            movaps XMMWORD PTR [RSP+160],XMM0
            movaps XMMWORD PTR [RSP+192],XMM9
            movaps XMMWORD PTR [RSP+208],XMM8
            mov RBP,QWORD PTR [R12]
            mov RBX,QWORD PTR [R12+8]
            add RBP,R15
            add RBX,R14
            cmp RBP,2
            jbe .L_43022a

            lea RAX,QWORD PTR [RBP+3]
            cmp RAX,QWORD PTR [RSP+16]
            jb .L_4302c8
.L_43022a:

            cmp RBX,2
            jbe .L_43023f

            lea RAX,QWORD PTR [RBX+3]
            cmp RAX,QWORD PTR [RSP+32]
            jb .L_4303e0
.L_43023f:

            add R12,16
            cmp QWORD PTR [RSP+8],R12
            jne .L_4301df

            pxor XMM1,XMM1
            mov R11D,R13D
            mov R13,QWORD PTR [RSP+24]
            movsd XMM0,QWORD PTR [RIP+.L_439ef8]
            mov RAX,QWORD PTR [RSP+232]
            xor RAX,QWORD PTR FS:[40]
            cvtsi2sd XMM1,R11D
            movupd XMM6,XMMWORD PTR [R13]
            divsd XMM0,XMM1
            movapd XMM1,XMM0
            mulsd XMM0,QWORD PTR [RSP+144]
            unpcklpd XMM1,XMM1
            mulpd XMM1,XMMWORD PTR [RSP+128]
            addsd XMM0,QWORD PTR [R13+16]
            addpd XMM1,XMM6
            movsd QWORD PTR [R13+16],XMM0
            movups XMMWORD PTR [R13],XMM1
            jne .L_4304f2

            add RSP,248
.L_4302ba:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4302c8:

            mov RAX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RSP+40]
            lea RDI,QWORD PTR [RSP+128]
            movsd XMM6,QWORD PTR [RIP+.L_439e20]
            add R13D,1
            movsd QWORD PTR [RSP+120],XMM11
            mov RCX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP+16]
            movsd QWORD PTR [RSP+112],XMM7
            movaps XMMWORD PTR [RSP+96],XMM8
            imul RAX,RBX
            movaps XMMWORD PTR [RSP+80],XMM9
            mov R11,QWORD PTR [RCX+48]
            mov R10,QWORD PTR [RCX+24]
            movaps XMMWORD PTR [RSP+64],XMM10
            lea RAX,QWORD PTR [RBP+RAX*1-3]
            lea RDX,QWORD PTR [RAX*4]
            mov R9,QWORD PTR [RCX]
            mov RCX,QWORD PTR [RSI]
            movss XMM5,DWORD PTR [R11+RAX*4]
            movss XMM4,DWORD PTR [R10+RAX*4]
            subss XMM5,DWORD PTR [R11+RDX*1+24]
            mov R8,QWORD PTR [RCX+48]
            mov RSI,QWORD PTR [RCX+24]
            mov RCX,QWORD PTR [RCX]
            movss XMM3,DWORD PTR [R9+RAX*4]
            subss XMM4,DWORD PTR [R10+RDX*1+24]
            movss XMM2,DWORD PTR [R8+RAX*4]
            subss XMM3,DWORD PTR [R9+RDX*1+24]
            movss XMM1,DWORD PTR [RSI+RAX*4]
            subss XMM2,DWORD PTR [R8+RDX*1+24]
            movss XMM0,DWORD PTR [RCX+RAX*4]
            subss XMM1,DWORD PTR [RSI+RDX*1+24]
            subss XMM0,DWORD PTR [RCX+RDX*1+24]
            cvtss2sd XMM5,XMM5
            cvtss2sd XMM4,XMM4
            mulsd XMM5,XMM7
            cvtss2sd XMM3,XMM3
            cvtss2sd XMM2,XMM2
            mulsd XMM4,XMM7
            cvtss2sd XMM1,XMM1
            mulsd XMM3,XMM7
            cvtss2sd XMM0,XMM0
            mulsd XMM2,XMM7
            mulsd XMM1,XMM7
            mulsd XMM0,XMM7
            call .L_42e540

            movsd XMM11,QWORD PTR [RSP+120]
            movdqa XMM8,XMMWORD PTR [RSP+96]
            movdqa XMM9,XMMWORD PTR [RSP+80]
            movdqa XMM10,XMMWORD PTR [RSP+64]
            movsd XMM7,QWORD PTR [RSP+112]
            jmp .L_43022a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4303e0:

            mov RAX,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+40]
            sub RBX,3
            imul RBX,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RIP+.L_439e20]
            add R13D,1
            mov RDX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP+56]
            movsd QWORD PTR [RSP+120],XMM7
            movaps XMMWORD PTR [RSP+96],XMM8
            movaps XMMWORD PTR [RSP+80],XMM9
            add RBP,RBX
            movsd QWORD PTR [RSP+112],XMM11
            add RAX,RBP
            mov R10,QWORD PTR [RDX+48]
            mov R9,QWORD PTR [RDX+24]
            mov R8,QWORD PTR [RDX]
            mov RDX,QWORD PTR [RDI]
            lea RDI,QWORD PTR [RSP+128]
            movss XMM5,DWORD PTR [R10+RBP*4]
            movss XMM4,DWORD PTR [R9+RBP*4]
            subss XMM5,DWORD PTR [R10+RAX*4]
            mov RSI,QWORD PTR [RDX+48]
            mov RCX,QWORD PTR [RDX+24]
            mov RDX,QWORD PTR [RDX]
            movss XMM3,DWORD PTR [R8+RBP*4]
            subss XMM4,DWORD PTR [R9+RAX*4]
            movss XMM2,DWORD PTR [RSI+RBP*4]
            subss XMM3,DWORD PTR [R8+RAX*4]
            movss XMM1,DWORD PTR [RCX+RBP*4]
            subss XMM2,DWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RDX+RBP*4]
            subss XMM1,DWORD PTR [RCX+RAX*4]
            subss XMM0,DWORD PTR [RDX+RAX*4]
            cvtss2sd XMM5,XMM5
            movaps XMMWORD PTR [RSP+64],XMM10
            mulsd XMM5,XMM11
            cvtss2sd XMM4,XMM4
            cvtss2sd XMM3,XMM3
            cvtss2sd XMM2,XMM2
            mulsd XMM4,XMM11
            cvtss2sd XMM1,XMM1
            mulsd XMM3,XMM11
            cvtss2sd XMM0,XMM0
            mulsd XMM2,XMM11
            mulsd XMM1,XMM11
            mulsd XMM0,XMM11
            call .L_42e540

            movsd XMM7,QWORD PTR [RSP+120]
            movdqa XMM8,XMMWORD PTR [RSP+96]
            movdqa XMM9,XMMWORD PTR [RSP+80]
            movdqa XMM10,XMMWORD PTR [RSP+64]
            movsd XMM11,QWORD PTR [RSP+112]
            jmp .L_43023f
.L_4304f2:

            call __stack_chk_fail@PLT
.L_4304f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430500:

            lea RAX,QWORD PTR [RIP+.L_439dc0]
            ret 
.L_430508:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430510:

            movsd XMM0,QWORD PTR [RIP+.L_439f00]
            movsd XMM1,QWORD PTR [RIP+.L_439f08]
            mulsd XMM0,QWORD PTR [RDI]
            mulsd XMM1,QWORD PTR [RDI+8]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_439f10]
            mulsd XMM1,QWORD PTR [RDI+16]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_439f28]
            addsd XMM0,QWORD PTR [RIP+.L_43e980-19048]
            movsd QWORD PTR [RSI],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439f20]
            mulsd XMM1,QWORD PTR [RDI+8]
            mulsd XMM0,QWORD PTR [RDI]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_439f30]
            mulsd XMM1,QWORD PTR [RDI+16]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_439f48]
            addsd XMM0,QWORD PTR [RIP+.L_439f38]
            movsd QWORD PTR [RSI+8],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439f40]
            mulsd XMM1,QWORD PTR [RDI+8]
            mulsd XMM0,QWORD PTR [RDI]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RIP+.L_439f50]
            mulsd XMM1,QWORD PTR [RDI+16]
            addsd XMM0,XMM1
            addsd XMM0,QWORD PTR [RIP+.L_439f58]
            movsd QWORD PTR [RSI+16],XMM0
            ret 
.L_4305c1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4305d0:

            movsd XMM0,QWORD PTR [RIP+.L_43e980-19048]
            ret 
.L_4305d9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4305e0:

            movsd XMM0,QWORD PTR [RIP+.L_439f60]
            ret 
.L_4305e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4305f0:

            mov RAX,RSI
            movsxd R8,ECX
            mov R9,RDX
            imul RAX,RDX
            mov QWORD PTR [RDI+8],RDX
            xor EDX,EDX
            mov QWORD PTR [RDI],RSI
            mov DWORD PTR [RDI+24],ECX
            mov QWORD PTR [RDI+16],RAX
            lea RAX,QWORD PTR [R8+RSI*1-1]
            div R8
            xor EDX,EDX
            mov QWORD PTR [RDI+32],RAX
            lea RAX,QWORD PTR [R8+R9*1-1]
            div R8
            cmp ECX,4
            mov QWORD PTR [RDI+40],RAX
            jg .L_43062e

            ret 
.L_43062e:

            lea RCX,QWORD PTR [RIP+.L_439ce0]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_43969e]
            sub RSP,8

            mov EDX,771
            call __assert_fail@PLT
.L_430651:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430660:

            push R15
            push R14
            test RSI,RSI
            push R13
            push R12
            push RBP
            push RBX
.L_43066d:

            mov QWORD PTR [RSP-112],RSI
            je .L_430a22

            test RDI,RDI
            mov RBP,RDI
            je .L_430a22

            lea RAX,QWORD PTR [RDI*4]
            mov ESI,EDI
            mov DWORD PTR [RSP-36],EDI
            not ESI
            movsd XMM6,QWORD PTR [RIP+.L_439eb8]
            mov QWORD PTR [RSP-48],RAX
            mov EAX,EDI
            mov QWORD PTR [RSP-56],0
            neg EAX
            movsd XMM12,QWORD PTR [RIP+.L_439f68]
            add EAX,EAX
            movsd XMM11,QWORD PTR [RIP+.L_439f70]
            mov DWORD PTR [RSP-64],EAX
            mov RAX,QWORD PTR [RDX]
            xor EBX,EBX
            movsd XMM10,QWORD PTR [RIP+.L_439f78]
            mov DWORD PTR [RSP-68],0
            movsd XMM9,QWORD PTR [RIP+.L_439f80]
            mov QWORD PTR [RSP-120],0
            mov QWORD PTR [RSP-32],RAX
            mov RAX,QWORD PTR [RCX]
            movsd XMM8,QWORD PTR [RIP+.L_439f88]
            mov DWORD PTR [RSP-60],ESI
            movsd XMM7,QWORD PTR [RIP+.L_439e20]
            mov QWORD PTR [RSP-24],RAX
            mov RAX,QWORD PTR [R8]
            mov QWORD PTR [RSP-16],RAX
            mov RAX,QWORD PTR [R9]
            mov QWORD PTR [RSP-8],RAX
.L_430720:

            mov RAX,QWORD PTR [RSP-32]
            mov RSI,QWORD PTR [RSP-24]
            add QWORD PTR [RSP-120],1
            mov RDX,QWORD PTR [RAX]
            mov RCX,QWORD PTR [RAX+24]
            mov R10,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RSP-16]
            mov QWORD PTR [RSP-96],RDX
            mov R11,QWORD PTR [RSI]
            mov RDX,QWORD PTR [RSI+24]
            mov R9,QWORD PTR [RSI+48]
            mov RSI,QWORD PTR [RAX]
            mov R15,QWORD PTR [RAX+24]
            mov R13,QWORD PTR [RAX+48]
            mov EAX,DWORD PTR [RSP-36]
            add EAX,DWORD PTR [RSP-68]
            mov QWORD PTR [RSP-88],RSI
            mov RSI,QWORD PTR [RSP-8]
            mov RDI,QWORD PTR [RSI]
            mov R12,QWORD PTR [RSI+48]
            mov R14,QWORD PTR [RSI+24]
            mov DWORD PTR [RSP-40],EAX
            mov ESI,EAX
            mov RAX,QWORD PTR [RSP-56]
            mov QWORD PTR [RSP-104],RDI
            mov QWORD PTR [RSP-80],R12
            xor EDI,EDI
            nop
.L_430790:

            mov R8,QWORD PTR [RSP-96]
            movss XMM1,DWORD PTR [RCX+RAX*1]
            movss XMM5,DWORD PTR [R10+RAX*1]
            addss XMM1,DWORD PTR [RDX+RAX*1]
            addss XMM5,DWORD PTR [R9+RAX*1]
            movss XMM4,DWORD PTR [R11+RAX*1]
            movss XMM14,DWORD PTR [R8+RAX*1]
            test RDI,RDI
            addss XMM4,XMM14
            lea R8,QWORD PTR [RDI+1]
            movapd XMM13,XMM12
            cvtss2sd XMM1,XMM1
            cvtss2sd XMM4,XMM4
            cvtss2sd XMM5,XMM5
            mulsd XMM1,XMM6
            mulsd XMM4,XMM6
            mulsd XMM5,XMM6
            je .L_430810

            mov EDI,DWORD PTR [RSP-60]
            add EDI,ESI
            movsxd RDI,EDI
            movss XMM13,DWORD PTR [RCX+RDI*4]
            addss XMM13,DWORD PTR [RDX+RDI*4]
            cvtss2sd XMM13,XMM13
            mulsd XMM13,XMM6
            subsd XMM13,XMM1
            mulsd XMM13,XMM13
            maxsd XMM13,XMM12
.L_430810:

            cmp R8,RBP
            je .L_430843

            mov EDI,DWORD PTR [RSP-68]
            add EDI,R8D
            movsxd RDI,EDI
            movss XMM0,DWORD PTR [RCX+RDI*4]
            addss XMM0,DWORD PTR [RDX+RDI*4]
            cvtss2sd XMM0,XMM0
            mulsd XMM0,XMM6
            subsd XMM0,XMM1
            mulsd XMM0,XMM0
            maxsd XMM0,XMM13
            movapd XMM13,XMM0
.L_430843:

            test RBX,RBX
            je .L_430875

            mov EDI,DWORD PTR [RSP-64]
            add EDI,ESI
            movsxd RDI,EDI
            movss XMM0,DWORD PTR [RCX+RDI*4]
            addss XMM0,DWORD PTR [RDX+RDI*4]
            cvtss2sd XMM0,XMM0
            mulsd XMM0,XMM6
            subsd XMM0,XMM1
            mulsd XMM0,XMM0
            maxsd XMM0,XMM13
            movapd XMM13,XMM0
.L_430875:

            mov R12,QWORD PTR [RSP-120]
            cmp QWORD PTR [RSP-112],R12
            je .L_4308a8

            movsxd RDI,ESI
            movss XMM0,DWORD PTR [RCX+RDI*4]
            addss XMM0,DWORD PTR [RDX+RDI*4]
            cvtss2sd XMM0,XMM0
            mulsd XMM0,XMM6
            subsd XMM0,XMM1
            mulsd XMM0,XMM0
            maxsd XMM0,XMM13
            movapd XMM13,XMM0
.L_4308a8:

            movapd XMM0,XMM1
            movapd XMM2,XMM11
            movapd XMM15,XMM9
            cvtss2sd XMM14,XMM14
            addsd XMM0,XMM11
            mov RDI,QWORD PTR [RSP-88]
            add ESI,1
            divsd XMM2,XMM0
            movapd XMM0,XMM2
            movapd XMM3,XMM2
            movapd XMM2,XMM13
            mulsd XMM0,XMM8
            addsd XMM2,XMM10
            mulsd XMM3,XMM10
            divsd XMM3,XMM2
            movapd XMM2,XMM13
            addsd XMM13,XMM8
            addsd XMM2,XMM9
            divsd XMM15,XMM2
            divsd XMM0,XMM13
            movapd XMM13,XMM7
            subsd XMM13,XMM3
            movapd XMM2,XMM15
            mulsd XMM4,XMM13
            mulsd XMM14,XMM3
            pxor XMM15,XMM15
            pxor XMM13,XMM13
            addsd XMM14,XMM4
            cvtsd2ss XMM15,XMM14
            movss DWORD PTR [RDI+RAX*1],XMM15
            mov RDI,QWORD PTR [RSP-104]
            cvtss2sd XMM13,DWORD PTR [R11+RAX*1]
            mulsd XMM3,XMM13
            addsd XMM4,XMM3
            movapd XMM3,XMM7
            subsd XMM3,XMM2
            cvtsd2ss XMM4,XMM4
            movss DWORD PTR [RDI+RAX*1],XMM4
            pxor XMM4,XMM4
            mov RDI,QWORD PTR [RSP-80]
            mulsd XMM1,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RCX+RAX*1]
            mulsd XMM3,XMM2
            addsd XMM3,XMM1
            cvtsd2ss XMM4,XMM3
            pxor XMM3,XMM3
            movss DWORD PTR [R15+RAX*1],XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM3,DWORD PTR [RDX+RAX*1]
            mulsd XMM2,XMM3
            addsd XMM1,XMM2
            pxor XMM2,XMM2
            cvtsd2ss XMM4,XMM1
            movapd XMM1,XMM7
            subsd XMM1,XMM0
            mulsd XMM5,XMM1
            pxor XMM1,XMM1
            movss DWORD PTR [R14+RAX*1],XMM4
            cvtss2sd XMM1,DWORD PTR [R10+RAX*1]
            mulsd XMM1,XMM0
            addsd XMM1,XMM5
            cvtsd2ss XMM2,XMM1
            pxor XMM1,XMM1
            movss DWORD PTR [R13+RAX*1],XMM2
            cvtss2sd XMM1,DWORD PTR [R9+RAX*1]
            mulsd XMM0,XMM1
            addsd XMM5,XMM0
            cvtsd2ss XMM5,XMM5
            movss DWORD PTR [RDI+RAX*1],XMM5
            add RAX,4
            cmp R8,RBP
            mov RDI,R8
            jne .L_430790

            add RBX,1
            mov RCX,QWORD PTR [RSP-48]
            mov RDX,QWORD PTR [RSP-120]
            add QWORD PTR [RSP-56],RCX
            cmp QWORD PTR [RSP-112],RDX
            mov EAX,DWORD PTR [RSP-40]
            mov DWORD PTR [RSP-68],EAX
            jne .L_430720
.L_430a22:

            pop RBX
.L_430a23:

            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_430a2d:

            nop
            nop
            nop
.L_430a30:

            movapd XMM1,XMM0
            sub RSP,8
.L_430a38:

            pxor XMM2,XMM2
            subsd XMM1,QWORD PTR [RIP+.L_439f90]
            ucomisd XMM1,XMM2
            jb .L_430a56

            mulsd XMM1,QWORD PTR [RIP+.L_439f98]
            subsd XMM0,XMM1
.L_430a56:

            movapd XMM1,XMM0
            subsd XMM1,QWORD PTR [RIP+.L_439fa0]
            ucomisd XMM1,XMM2
            jb .L_430a74

            mulsd XMM1,QWORD PTR [RIP+.L_439fa8]
            subsd XMM0,XMM1
.L_430a74:

            movsd XMM1,QWORD PTR [RIP+.L_439fb0]
            call pow@PLT

            addsd XMM0,QWORD PTR [RIP+.L_439fb8]
            mulsd XMM0,QWORD PTR [RIP+.L_439fc0]
            add RSP,8
.L_430a95:

            ret 
.L_430a96:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430aa0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,3272
.L_430ab4:

            mov QWORD PTR [RSP+40],RCX
            mov RCX,QWORD PTR [RDI+8]
            movsxd RDI,DWORD PTR [RDI+24]
            mov QWORD PTR [RSP+24],RSI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+3256],RAX
            xor EAX,EAX
            mov EAX,7
            mov QWORD PTR [RSP+32],RDX
            mov QWORD PTR [RSP+48],R8
            sub RAX,RDI
            cmp RCX,RAX
            jbe .L_430dda

            lea RAX,QWORD PTR [RSP+176]
            mov RSI,QWORD PTR [RBP]
            xor EBX,EBX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+1712]
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+144]
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [RSP+112]
            mov QWORD PTR [RSP+72],RAX
.L_430b2b:

            mov EAX,7
            sub RAX,RDI
            cmp RAX,RSI
            jae .L_430dcb

            lea RAX,QWORD PTR [RSP+80]
            xor R12D,R12D
            mov QWORD PTR [RSP+56],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430b50:

            mov RAX,QWORD PTR [RBP+32]
            xor EDX,EDX
            sub RCX,8
            lea R8,QWORD PTR [RSI*4]
            mov R11,QWORD PTR [RSP+16]
            imul RAX,RBX
            add RAX,R12
            div RDI
            cmp RCX,RBX
            mov RDX,QWORD PTR [RSP+8]
            mov R13,RAX
            mov RAX,QWORD PTR [RSP+24]
            mov R15,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RSP+32]
            mov R14,QWORD PTR [RAX]
            mov RAX,RCX
            cmova RAX,RBX
            imul RAX,RSI
            sub RSI,8
            cmp RSI,R12
            cmova RSI,R12
            xor R10D,R10D
            add RAX,RSI
            shl RAX,2
.L_430bac:

            mov RDI,QWORD PTR [R15+R10*1]
            mov RSI,QWORD PTR [R14+R10*1]
            lea R9,QWORD PTR [RDX+512]
            mov RCX,R11
            add RDI,RAX
            add RSI,RAX
            nop
            nop
            nop
            nop
.L_430bc8:

            pxor XMM0,XMM0
            add RDX,64
            add RCX,64
            cvtss2sd XMM0,DWORD PTR [RDI]
            movsd QWORD PTR [RDX-64],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI]
            movsd QWORD PTR [RCX-64],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+4]
            movsd QWORD PTR [RDX-56],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+4]
            movsd QWORD PTR [RCX-56],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+8]
            movsd QWORD PTR [RDX-48],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            movsd QWORD PTR [RCX-48],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+12]
            movsd QWORD PTR [RDX-40],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+12]
            movsd QWORD PTR [RCX-40],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+16]
            movsd QWORD PTR [RDX-32],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+16]
            movsd QWORD PTR [RCX-32],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+20]
            movsd QWORD PTR [RDX-24],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+20]
            movsd QWORD PTR [RCX-24],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+24]
            movsd QWORD PTR [RDX-16],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+24]
            movsd QWORD PTR [RCX-16],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RDI+28]
            add RDI,R8
            movsd QWORD PTR [RDX-8],XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RSI+28]
            add RSI,R8
            movsd QWORD PTR [RCX-8],XMM0
            cmp R9,RDX
            jne .L_430bc8

            add R10,24
            add R11,512
            cmp R10,72
            jne .L_430bac

            pxor XMM0,XMM0
            mov RCX,QWORD PTR [RSP+72]
            mov RDX,QWORD PTR [RSP+56]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+96],0
            movaps XMMWORD PTR [RSP+80],XMM0
            mov QWORD PTR [RSP+128],0
            mov QWORD PTR [RSP+160],0
            movaps XMMWORD PTR [RSP+112],XMM0
            movaps XMMWORD PTR [RSP+144],XMM0
            call .L_42f710

            pxor XMM1,XMM1
            lea RAX,QWORD PTR [R13+R13*2]
            pxor XMM2,XMM2
            mov RDI,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+40]
            pxor XMM3,XMM3
            cvtsd2ss XMM1,QWORD PTR [RSP+80]
            pxor XMM4,XMM4
            cvtsd2ss XMM2,QWORD PTR [RSP+112]
            mov RCX,QWORD PTR [RCX]
            mov RDX,QWORD PTR [RDI]
            movsxd RDI,DWORD PTR [RBP+24]
            pxor XMM5,XMM5
            cvtsd2ss XMM3,QWORD PTR [RSP+88]
            pxor XMM6,XMM6
            cvtsd2ss XMM4,QWORD PTR [RSP+120]
            movss DWORD PTR [RCX+RAX*4],XMM1
            movss DWORD PTR [RDX+RAX*4],XMM2
            add RAX,1
            cvtsd2ss XMM5,QWORD PTR [RSP+96]
            lea RSI,QWORD PTR [RAX*4]
            movss DWORD PTR [RCX+RAX*4],XMM3
            add R12,RDI
            movss DWORD PTR [RDX+RAX*4],XMM4
            mov EAX,7
            cvtsd2ss XMM6,QWORD PTR [RSP+128]
            movss DWORD PTR [RCX+RSI*1+4],XMM5
            sub RAX,RDI
            mov RCX,QWORD PTR [RBP+8]
            movss DWORD PTR [RDX+RSI*1+4],XMM6
            mov RSI,QWORD PTR [RBP]
            lea RDX,QWORD PTR [R12+RAX*1]
            cmp RDX,RSI
            jb .L_430b50
.L_430dcb:

            add RBX,RDI
            add RAX,RBX
            cmp RAX,RCX
            jb .L_430b2b
.L_430dda:

            mov RAX,QWORD PTR [RSP+3256]
            xor RAX,QWORD PTR FS:[40]
            jne .L_430dff

            add RSP,3272
.L_430df4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_430dff:

            call __stack_chk_fail@PLT
.L_430e04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e10:

            sub RSP,24
.L_430e14:

            mov RDX,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI]
            mov DWORD PTR [RSP+4],0
            sub RDX,RAX
            mov RCX,RDX
            sar RCX,2
            test RCX,RCX
            je .L_430e90

            pxor XMM1,XMM1
            add RDX,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_430e50:

            movss XMM0,DWORD PTR [RAX]
            add RAX,4
            ucomiss XMM0,XMM1
            ja .L_430e80

            cmp RDX,RAX
            jne .L_430e50

            movaps XMM0,XMM1
.L_430e65:

            cvtss2sd XMM0,XMM0
.L_430e69:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_430e96

            add RSP,24
.L_430e7d:

            ret 
          .byte 0x66
          .byte 0x90
.L_430e80:

            cmp RAX,RDX
            je .L_430e65

            movaps XMM1,XMM0
            jmp .L_430e50
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430e90:

            pxor XMM0,XMM0
            jmp .L_430e69
.L_430e96:

            call __stack_chk_fail@PLT
.L_430e9b:

            nop
            nop
            nop
            nop
            nop
.L_430ea0:

            sub RSP,24
.L_430ea4:

            movzx EAX,BYTE PTR [RIP+.L_6493c0]
            test AL,AL
            je .L_430ee8
.L_430eaf:

            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            ja .L_430fe0
.L_430ebd:

            andpd XMM0,XMMWORD PTR [RIP+.L_43a1f0]
            cvttsd2si EAX,XMM0
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_64a3d8]
            cmp EAX,510
            jle .L_43100d

            add RSP,24
.L_430ee4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_430ee8:

            lea RDI,QWORD PTR [RIP+.L_6493c0]
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM0,QWORD PTR [RSP]
            je .L_430eaf

            movsd XMM1,QWORD PTR [RIP+.L_439fc8]
            xor EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_6493e0]
            pxor XMM2,XMM2
            movsd QWORD PTR [RIP+.L_6493e0],XMM1
            movsd XMM8,QWORD PTR [RIP+.L_439fd0]
            movsd XMM7,QWORD PTR [RIP+.L_439fd8]
            movsd XMM6,QWORD PTR [RIP+.L_439fe0]
            movsd XMM5,QWORD PTR [RIP+.L_439fe8]
            movsd XMM4,QWORD PTR [RIP+.L_439ff0]
            movsd XMM3,QWORD PTR [RIP+.L_439e20]
            jmp .L_430f95
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_430f58:

            pxor XMM1,XMM1
            movapd XMM9,XMM6
            cvtsi2sd XMM1,RAX
            mulsd XMM1,XMM8
            addsd XMM1,XMM7
            divsd XMM9,XMM1
            movapd XMM1,XMM9
            subsd XMM1,XMM5
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            ucomisd XMM1,XMM2
            movsd QWORD PTR [RDX+RCX*1+8],XMM1
            jb .L_431030
.L_430f95:

            mulsd XMM1,XMM1
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM1
            add RAX,1
            cmp RAX,512
            jne .L_430f58

            lea RDI,QWORD PTR [RIP+.L_6493c0]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_release@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP]
            ucomisd XMM2,XMM0
            jbe .L_430ebd

            nop
            nop
.L_430fe0:

            lea RDX,QWORD PTR [RIP+.L_6493e0]
            mov EAX,8
            mov RCX,RDX
.L_430fef:

            movsd XMM1,QWORD PTR [RCX]
            movsd XMM0,QWORD PTR [RDX+RAX*1]
            add RSP,24
.L_430ffc:

            subsd XMM0,XMM1
            mulsd XMM2,XMM0
            movapd XMM0,XMM2
            addsd XMM0,XMM1
            ret 
.L_43100d:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RIP+.L_6493e0]
            cvtsi2sd XMM0,EAX
            cdqe 
            shl RAX,3
            lea RCX,QWORD PTR [RDX+RAX*1]
            add RAX,8
            subsd XMM2,XMM0
            jmp .L_430fef
.L_431030:

            lea RCX,QWORD PTR [RIP+.L_439bc0]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396a8]
            mov EDX,1225
            call __assert_fail@PLT
.L_43104f:

            nop
.L_431050:

            sub RSP,24
.L_431054:

            movzx EAX,BYTE PTR [RIP+.L_6483a0]
            test AL,AL
            je .L_431098
.L_43105f:

            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            ja .L_431190
.L_43106d:

            andpd XMM0,XMMWORD PTR [RIP+.L_43a1f0]
            cvttsd2si EAX,XMM0
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_6493b8]
            cmp EAX,510
            jle .L_4311bd

            add RSP,24
.L_431094:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431098:

            lea RDI,QWORD PTR [RIP+.L_6483a0]
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM0,QWORD PTR [RSP]
            je .L_43105f

            movsd XMM1,QWORD PTR [RIP+.L_439ff8]
            xor EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_6483c0]
            pxor XMM2,XMM2
            movsd QWORD PTR [RIP+.L_6483c0],XMM1
            movsd XMM8,QWORD PTR [RIP+.L_43a000]
            movsd XMM7,QWORD PTR [RIP+.L_43a008]
            movsd XMM6,QWORD PTR [RIP+.L_43a010]
            movsd XMM5,QWORD PTR [RIP+.L_43a018]
            movsd XMM4,QWORD PTR [RIP+.L_43a020]
            movsd XMM3,QWORD PTR [RIP+.L_439e20]
            jmp .L_431145
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431108:

            pxor XMM1,XMM1
            movapd XMM9,XMM6
            cvtsi2sd XMM1,RAX
            mulsd XMM1,XMM8
            addsd XMM1,XMM7
            divsd XMM9,XMM1
            movapd XMM1,XMM9
            addsd XMM1,XMM5
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            ucomisd XMM1,XMM2
            movsd QWORD PTR [RDX+RCX*1+8],XMM1
            jb .L_4311e0
.L_431145:

            mulsd XMM1,XMM1
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM1
            add RAX,1
            cmp RAX,512
            jne .L_431108

            lea RDI,QWORD PTR [RIP+.L_6483a0]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_release@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP]
            ucomisd XMM2,XMM0
            jbe .L_43106d

            nop
            nop
.L_431190:

            lea RDX,QWORD PTR [RIP+.L_6483c0]
            mov EAX,8
            mov RCX,RDX
.L_43119f:

            movsd XMM1,QWORD PTR [RCX]
            movsd XMM0,QWORD PTR [RDX+RAX*1]
            add RSP,24
.L_4311ac:

            subsd XMM0,XMM1
            mulsd XMM2,XMM0
            movapd XMM0,XMM2
            addsd XMM0,XMM1
            ret 
.L_4311bd:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RIP+.L_6483c0]
            cvtsi2sd XMM0,EAX
            cdqe 
            shl RAX,3
            lea RCX,QWORD PTR [RDX+RAX*1]
            add RAX,8
            subsd XMM2,XMM0
            jmp .L_43119f
.L_4311e0:

            lea RCX,QWORD PTR [RIP+.L_439bc0]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396a8]
            mov EDX,1225
            call __assert_fail@PLT
.L_4311ff:

            nop
.L_431200:

            sub RSP,24
.L_431204:

            movzx EAX,BYTE PTR [RIP+.L_647380]
            test AL,AL
            je .L_431248
.L_43120f:

            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            ja .L_431340
.L_43121d:

            andpd XMM0,XMMWORD PTR [RIP+.L_43a1f0]
            cvttsd2si EAX,XMM0
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_648398]
            cmp EAX,510
            jle .L_43136d

            add RSP,24
.L_431244:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431248:

            lea RDI,QWORD PTR [RIP+.L_647380]
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM0,QWORD PTR [RSP]
            je .L_43120f

            movsd XMM1,QWORD PTR [RIP+.L_43a028]
            xor EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_6473a0]
            pxor XMM2,XMM2
            movsd QWORD PTR [RIP+.L_6473a0],XMM1
            movsd XMM8,QWORD PTR [RIP+.L_43a030]
            movsd XMM7,QWORD PTR [RIP+.L_43a038]
            movsd XMM6,QWORD PTR [RIP+.L_43a040]
            movsd XMM5,QWORD PTR [RIP+.L_43a048]
            movsd XMM4,QWORD PTR [RIP+.L_43a050]
            movsd XMM3,QWORD PTR [RIP+.L_439e20]
            jmp .L_4312f5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4312b8:

            pxor XMM1,XMM1
            movapd XMM9,XMM6
            cvtsi2sd XMM1,RAX
            mulsd XMM1,XMM8
            addsd XMM1,XMM7
            divsd XMM9,XMM1
            movapd XMM1,XMM9
            subsd XMM1,XMM5
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            ucomisd XMM1,XMM2
            movsd QWORD PTR [RDX+RCX*1+8],XMM1
            jb .L_431390
.L_4312f5:

            mulsd XMM1,XMM1
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM1
            add RAX,1
            cmp RAX,512
            jne .L_4312b8

            lea RDI,QWORD PTR [RIP+.L_647380]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_release@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP]
            ucomisd XMM2,XMM0
            jbe .L_43121d

            nop
            nop
.L_431340:

            lea RDX,QWORD PTR [RIP+.L_6473a0]
            mov EAX,8
            mov RCX,RDX
.L_43134f:

            movsd XMM1,QWORD PTR [RCX]
            movsd XMM0,QWORD PTR [RDX+RAX*1]
            add RSP,24
.L_43135c:

            subsd XMM0,XMM1
            mulsd XMM2,XMM0
            movapd XMM0,XMM2
            addsd XMM0,XMM1
            ret 
.L_43136d:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RIP+.L_6473a0]
            cvtsi2sd XMM0,EAX
            cdqe 
            shl RAX,3
            lea RCX,QWORD PTR [RDX+RAX*1]
            add RAX,8
            subsd XMM2,XMM0
            jmp .L_43134f
.L_431390:

            lea RCX,QWORD PTR [RIP+.L_439bc0]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396a8]
            mov EDX,1225
            call __assert_fail@PLT
.L_4313af:

            nop
.L_4313b0:

            sub RSP,24
.L_4313b4:

            movzx EAX,BYTE PTR [RIP+.L_646360]
            test AL,AL
            je .L_4313f8
.L_4313bf:

            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            ja .L_4314f0
.L_4313cd:

            andpd XMM0,XMMWORD PTR [RIP+.L_43a1f0]
            cvttsd2si EAX,XMM0
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_647378]
            cmp EAX,510
            jle .L_43151d

            add RSP,24
.L_4313f4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4313f8:

            lea RDI,QWORD PTR [RIP+.L_646360]
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM0,QWORD PTR [RSP]
            je .L_4313bf

            movsd XMM1,QWORD PTR [RIP+.L_43a058]
            xor EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_646380]
            pxor XMM2,XMM2
            movsd QWORD PTR [RIP+.L_646380],XMM1
            movsd XMM8,QWORD PTR [RIP+.L_43a060]
            movsd XMM7,QWORD PTR [RIP+.L_43a068]
            movsd XMM6,QWORD PTR [RIP+.L_43a070]
            movsd XMM5,QWORD PTR [RIP+.L_43a078]
            movsd XMM4,QWORD PTR [RIP+.L_43a080]
            movsd XMM3,QWORD PTR [RIP+.L_439e20]
            jmp .L_4314a5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431468:

            pxor XMM1,XMM1
            movapd XMM9,XMM6
            cvtsi2sd XMM1,RAX
            mulsd XMM1,XMM8
            addsd XMM1,XMM7
            divsd XMM9,XMM1
            movapd XMM1,XMM9
            subsd XMM1,XMM5
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            ucomisd XMM1,XMM2
            movsd QWORD PTR [RDX+RCX*1+8],XMM1
            jb .L_431540
.L_4314a5:

            mulsd XMM1,XMM1
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM1
            add RAX,1
            cmp RAX,512
            jne .L_431468

            lea RDI,QWORD PTR [RIP+.L_646360]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_release@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP]
            ucomisd XMM2,XMM0
            jbe .L_4313cd

            nop
            nop
.L_4314f0:

            lea RDX,QWORD PTR [RIP+.L_646380]
            mov EAX,8
            mov RCX,RDX
.L_4314ff:

            movsd XMM1,QWORD PTR [RCX]
            movsd XMM0,QWORD PTR [RDX+RAX*1]
            add RSP,24
.L_43150c:

            subsd XMM0,XMM1
            mulsd XMM2,XMM0
            movapd XMM0,XMM2
            addsd XMM0,XMM1
            ret 
.L_43151d:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RIP+.L_646380]
            cvtsi2sd XMM0,EAX
            cdqe 
            shl RAX,3
            lea RCX,QWORD PTR [RDX+RAX*1]
            add RAX,8
            subsd XMM2,XMM0
            jmp .L_4314ff
.L_431540:

            lea RCX,QWORD PTR [RIP+.L_439bc0]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396a8]
            mov EDX,1225
            call __assert_fail@PLT
.L_43155f:

            nop
.L_431560:

            sub RSP,24
.L_431564:

            movzx EAX,BYTE PTR [RIP+.L_645340]
            test AL,AL
            je .L_4315a8
.L_43156f:

            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            ja .L_4316a0
.L_43157d:

            andpd XMM0,XMMWORD PTR [RIP+.L_43a1f0]
            cvttsd2si EAX,XMM0
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_646358]
            cmp EAX,510
            jle .L_4316cd

            add RSP,24
.L_4315a4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4315a8:

            lea RDI,QWORD PTR [RIP+.L_645340]
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM0,QWORD PTR [RSP]
            je .L_43156f

            movsd XMM1,QWORD PTR [RIP+.L_43a088]
            xor EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_645360]
            pxor XMM2,XMM2
            movsd QWORD PTR [RIP+.L_645360],XMM1
            movsd XMM8,QWORD PTR [RIP+.L_43a090]
            movsd XMM7,QWORD PTR [RIP+.L_43a098]
            movsd XMM6,QWORD PTR [RIP+.L_43a0a0]
            movsd XMM5,QWORD PTR [RIP+.L_43a0a8]
            movsd XMM4,QWORD PTR [RIP+.L_43a0b0]
            movsd XMM3,QWORD PTR [RIP+.L_439e20]
            jmp .L_431655
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_431618:

            pxor XMM1,XMM1
            movapd XMM9,XMM6
            cvtsi2sd XMM1,RAX
            mulsd XMM1,XMM8
            addsd XMM1,XMM7
            divsd XMM9,XMM1
            movapd XMM1,XMM9
            subsd XMM1,XMM5
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            ucomisd XMM1,XMM2
            movsd QWORD PTR [RDX+RCX*1+8],XMM1
            jb .L_4316f0
.L_431655:

            mulsd XMM1,XMM1
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM1
            add RAX,1
            cmp RAX,512
            jne .L_431618

            lea RDI,QWORD PTR [RIP+.L_645340]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_release@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP]
            ucomisd XMM2,XMM0
            jbe .L_43157d

            nop
            nop
.L_4316a0:

            lea RDX,QWORD PTR [RIP+.L_645360]
            mov EAX,8
            mov RCX,RDX
.L_4316af:

            movsd XMM1,QWORD PTR [RCX]
            movsd XMM0,QWORD PTR [RDX+RAX*1]
            add RSP,24
.L_4316bc:

            subsd XMM0,XMM1
            mulsd XMM2,XMM0
            movapd XMM0,XMM2
            addsd XMM0,XMM1
            ret 
.L_4316cd:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RIP+.L_645360]
            cvtsi2sd XMM0,EAX
            cdqe 
            shl RAX,3
            lea RCX,QWORD PTR [RDX+RAX*1]
            add RAX,8
            subsd XMM2,XMM0
            jmp .L_4316af
.L_4316f0:

            lea RCX,QWORD PTR [RIP+.L_439bc0]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396a8]
            mov EDX,1225
            call __assert_fail@PLT
.L_43170f:

            nop
.L_431710:

            sub RSP,24
.L_431714:

            movzx EAX,BYTE PTR [RIP+.L_644320]
            test AL,AL
            je .L_431758
.L_43171f:

            pxor XMM2,XMM2
            ucomisd XMM2,XMM0
            ja .L_431850
.L_43172d:

            andpd XMM0,XMMWORD PTR [RIP+.L_43a1f0]
            cvttsd2si EAX,XMM0
            movapd XMM2,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_645338]
            cmp EAX,510
            jle .L_43187d

            add RSP,24
.L_431754:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_431758:

            lea RDI,QWORD PTR [RIP+.L_644320]
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM0,QWORD PTR [RSP]
            je .L_43171f

            movsd XMM1,QWORD PTR [RIP+.L_43a0b8]
            xor EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_644340]
            pxor XMM2,XMM2
            movsd QWORD PTR [RIP+.L_644340],XMM1
            movsd XMM8,QWORD PTR [RIP+.L_43a0c0]
            movsd XMM7,QWORD PTR [RIP+.L_43a0c8]
            movsd XMM6,QWORD PTR [RIP+.L_43a0d0]
            movsd XMM5,QWORD PTR [RIP+.L_43a0d8]
            movsd XMM4,QWORD PTR [RIP+.L_43a0e0]
            movsd XMM3,QWORD PTR [RIP+.L_439e20]
            jmp .L_431805
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4317c8:

            pxor XMM1,XMM1
            movapd XMM9,XMM6
            cvtsi2sd XMM1,RAX
            mulsd XMM1,XMM8
            addsd XMM1,XMM7
            divsd XMM9,XMM1
            movapd XMM1,XMM9
            subsd XMM1,XMM5
            mulsd XMM1,XMM4
            addsd XMM1,XMM3
            ucomisd XMM1,XMM2
            movsd QWORD PTR [RDX+RCX*1+8],XMM1
            jb .L_4318a0
.L_431805:

            mulsd XMM1,XMM1
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM1
            add RAX,1
            cmp RAX,512
            jne .L_4317c8

            lea RDI,QWORD PTR [RIP+.L_644320]
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM0
            call __cxa_guard_release@PLT

            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM0,QWORD PTR [RSP]
            ucomisd XMM2,XMM0
            jbe .L_43172d

            nop
            nop
.L_431850:

            lea RDX,QWORD PTR [RIP+.L_644340]
            mov EAX,8
            mov RCX,RDX
.L_43185f:

            movsd XMM1,QWORD PTR [RCX]
            movsd XMM0,QWORD PTR [RDX+RAX*1]
            add RSP,24
.L_43186c:

            subsd XMM0,XMM1
            mulsd XMM2,XMM0
            movapd XMM0,XMM2
            addsd XMM0,XMM1
            ret 
.L_43187d:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RIP+.L_644340]
            cvtsi2sd XMM0,EAX
            cdqe 
            shl RAX,3
            lea RCX,QWORD PTR [RDX+RAX*1]
            add RAX,8
            subsd XMM2,XMM0
            jmp .L_43185f
.L_4318a0:

            lea RCX,QWORD PTR [RIP+.L_439bc0]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396a8]
            mov EDX,1225
            call __assert_fail@PLT
.L_4318bf:

            nop
.L_4318c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_4318ce:

            cmp RSI,RDI
            mov QWORD PTR [RSP+80],RDI
            mov QWORD PTR [RSP+64],RSI
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+104],R8
            jae .L_431e61

            mov RAX,QWORD PTR [RSP+48]
            imul RAX,RCX
            test RAX,RAX
            je .L_431e2f

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_431e5c

            lea RBX,QWORD PTR [RAX*4]
            mov RDI,RBX
            call _Znwm@PLT

            xor ESI,ESI
            mov RDX,RBX
            mov RDI,RAX
            mov QWORD PTR [RSP+72],RAX
            call memset@PLT

            cmp QWORD PTR [RSP+8],0
            je .L_431e1e
.L_431943:

            mov RCX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            sub RAX,RCX
            test RCX,RCX
            mov QWORD PTR [RSP+56],RAX
            jne .L_431be7

            mov QWORD PTR [RSP+16],0
.L_431967:

            mov RAX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+64]
            mov RCX,QWORD PTR [RSP+104]
            lea RBP,QWORD PTR [RAX*4]
            mov EAX,1
            mov R14,RSI
            sub RAX,RDI
            sub R14,RDI
            mov R15,RSI
            mov RDI,RAX
            mov QWORD PTR [RSP+88],RAX
            mov RAX,RSI
            add RAX,RDI
            imul R15,RBP
            imul R14,RBP
            add R15,QWORD PTR [RSP+72]
            imul RAX,RBP
            add R14,RCX
            mov QWORD PTR [RSP+24],R15
            add RAX,RCX
            mov QWORD PTR [RSP+32],R14
            mov QWORD PTR [RSP+40],RAX
            mov RAX,RSI
            nop
            nop
            nop
            nop
            nop
.L_4319d0:

            mov RBX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+8]
            add RBX,RAX
            cmp RBX,RDI
            cmova RBX,RDI
            cmp QWORD PTR [RSP+48],0
            je .L_431a56

            add RAX,QWORD PTR [RSP+88]
            xor R12D,R12D
            mov R13,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431a00:

            mov RAX,QWORD PTR [RSP+32]
            pxor XMM0,XMM0
            cmp RBX,R13
            mov R14,R13
            cvtss2sd XMM0,DWORD PTR [RAX+R12*1]
            mov RAX,QWORD PTR [RSP+40]
            lea R15,QWORD PTR [R12+RAX*1]
            jbe .L_431a3a
.L_431a20:

            pxor XMM1,XMM1
            add R14,1
            cvtss2sd XMM1,DWORD PTR [R15]
            add R15,RBP
            call fmin@PLT

            cmp R14,RBX
            jne .L_431a20
.L_431a3a:

            pxor XMM3,XMM3
            mov RAX,QWORD PTR [RSP+24]
            cvtsd2ss XMM3,XMM0
            movss DWORD PTR [RAX+R12*1],XMM3
            add R12,4
            cmp R12,RBP
            jne .L_431a00
.L_431a56:

            add QWORD PTR [RSP+16],1
            add QWORD PTR [RSP+24],RBP
            mov RAX,QWORD PTR [RSP+16]
            add QWORD PTR [RSP+32],RBP
            add QWORD PTR [RSP+40],RBP
            cmp RAX,QWORD PTR [RSP+8]
            jb .L_4319d0
.L_431a7b:

            cmp QWORD PTR [RSP+48],0
            je .L_431bc3
.L_431a87:

            mov RDX,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+80]
            sub RAX,RDX
            test RDX,RDX
            mov QWORD PTR [RSP+56],RAX
            jne .L_431d05

            mov QWORD PTR [RSP+32],0
.L_431aab:

            mov RSI,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            mov RCX,QWORD PTR [RSP+104]
            mov RAX,RSI
            sub RAX,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RCX+RSI*4]
            mov QWORD PTR [RSP+56],RSI
            lea RDI,QWORD PTR [RDX+RAX*4]
            mov RDX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+40],RDI
            lea R14,QWORD PTR [RDX*4]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431ae8:

            mov RDX,QWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+48]
            add RDX,RAX
            cmp RDX,RSI
            cmova RDX,RSI
            cmp QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+24],RDX
            je .L_431cf7

            mov RCX,RDX
            mov R13,QWORD PTR [RSP+56]
            lea RDX,QWORD PTR [RAX+1]
            sub RCX,RAX
            mov RBP,QWORD PTR [RSP+40]
            xor R12D,R12D
            lea RAX,QWORD PTR [RCX*4-4]
            mov QWORD PTR [RSP+16],RDX
            mov QWORD PTR [RSP+32],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431b40:

            mov RCX,QWORD PTR [RSP+24]
            cmp QWORD PTR [RSP+16],RCX
            mov R15,RBP
            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RSP+32]
            cvtss2sd XMM0,DWORD PTR [RBP]
            lea RBX,QWORD PTR [RAX+RBP*1]
            jae .L_431b7f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431b68:

            pxor XMM1,XMM1
            add R15,4
            cvtss2sd XMM1,DWORD PTR [R15]
            call fmin@PLT

            cmp R15,RBX
            jne .L_431b68
.L_431b7f:

            pxor XMM5,XMM5
            add R12,1
            add RBP,R14
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [R13],XMM5
            add R13,R14
            cmp QWORD PTR [RSP+8],R12
            jne .L_431b40

            mov RAX,QWORD PTR [RSP+16]
.L_431ba3:

            mov RSI,QWORD PTR [RSP+64]
            add QWORD PTR [RSP+40],4
            add QWORD PTR [RSP+56],4
            lea RDX,QWORD PTR [RSI+RAX*1]
            cmp QWORD PTR [RSP+48],RDX
            ja .L_431ae8
.L_431bc3:

            cmp QWORD PTR [RSP+72],0
            je .L_431e0f
.L_431bcf:

            mov RDI,QWORD PTR [RSP+72]
            add RSP,120
.L_431bd8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp _ZdlPv@PLT
.L_431be7:

            mov RAX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+104]
            mov QWORD PTR [RSP+16],0
            cmp RCX,RAX
            cmovbe RAX,RCX
            mov RCX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+40],RCX
            lea RBP,QWORD PTR [RAX*4]
            lea RDX,QWORD PTR [RSI+RBP*1]
            lea RSI,QWORD PTR [RSI+RAX*8]
            neg RAX
            lea RAX,QWORD PTR [RAX*4]
            mov QWORD PTR [RSP+96],RDX
            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+32],RAX
            nop
.L_431c40:

            mov RBX,QWORD PTR [RSP+16]
            add RBX,QWORD PTR [RSP+56]
            mov RAX,QWORD PTR [RSP+8]
            cmp RBX,RAX
            cmova RBX,RAX
            cmp QWORD PTR [RSP+48],0
            je .L_431cc7

            mov R12,QWORD PTR [RSP+96]
            mov R13,QWORD PTR [RSP+40]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_431c70:

            mov RAX,QWORD PTR [RSP+32]
            pxor XMM0,XMM0
            cmp RBX,1
            cvtss2sd XMM0,DWORD PTR [R12+RAX*1]
            jbe .L_431caa

            mov R15,R12
            mov R14D,1
            nop
            nop
.L_431c90:

            pxor XMM1,XMM1
            add R14,1
            cvtss2sd XMM1,DWORD PTR [R15]
            add R15,RBP
            call fmin@PLT

            cmp R14,RBX
            jne .L_431c90
.L_431caa:

            pxor XMM2,XMM2
            add R13,4
            add R12,4
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [R13-4],XMM2
            cmp R12,QWORD PTR [RSP+24]
            jne .L_431c70
.L_431cc7:

            add QWORD PTR [RSP+16],1
            add QWORD PTR [RSP+40],RBP
            mov RAX,QWORD PTR [RSP+16]
            cmp QWORD PTR [RSP+88],RAX
            ja .L_431c40

            mov RDI,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSP+16],RDI
            jb .L_431967

            jmp .L_431a7b
.L_431cf7:

            add RAX,1
            mov QWORD PTR [RSP+16],RAX
            jmp .L_431ba3
.L_431d05:

            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],0
            cmp RDX,RAX
            mov RDI,RAX
            lea R15,QWORD PTR [RAX*4]
            cmovbe RDI,RDX
            mov QWORD PTR [RSP+88],RDI
            mov RDI,QWORD PTR [RSP+104]
            mov QWORD PTR [RSP+40],RDI
            nop
            nop
            nop
            nop
.L_431d38:

            mov R14,QWORD PTR [RSP+32]
            add R14,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+48]
            mov RAX,R14
            cmp R14,RDI
            cmova RAX,RDI
            cmp QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],RAX
            je .L_431dd7

            mov RCX,QWORD PTR [RSP+72]
            lea RAX,QWORD PTR [RAX*4-4]
            mov R13,QWORD PTR [RSP+40]
            xor R12D,R12D
            mov QWORD PTR [RSP+24],RAX
            lea RBP,QWORD PTR [RCX+4]
            nop
            nop
            nop
            nop
.L_431d80:

            cmp QWORD PTR [RSP+16],1
            pxor XMM0,XMM0
            cvtss2sd XMM0,DWORD PTR [RBP-4]
            jbe .L_431db8

            mov RAX,QWORD PTR [RSP+24]
            mov R14,RBP
            lea RBX,QWORD PTR [RAX+RBP*1]
            nop
            nop
            nop
.L_431da0:

            pxor XMM1,XMM1
            add R14,4
            cvtss2sd XMM1,DWORD PTR [R14-4]
            call fmin@PLT

            cmp R14,RBX
            jne .L_431da0
.L_431db8:

            pxor XMM4,XMM4
            add R12,1
            add RBP,R15
            cvtsd2ss XMM4,XMM0
            movss DWORD PTR [R13],XMM4
            add R13,R15
            cmp R12,QWORD PTR [RSP+8]
            jne .L_431d80
.L_431dd7:

            add QWORD PTR [RSP+32],1
            add QWORD PTR [RSP+40],4
            mov RAX,QWORD PTR [RSP+32]
            cmp RAX,QWORD PTR [RSP+88]
            jb .L_431d38

            mov RSI,QWORD PTR [RSP+48]
            cmp QWORD PTR [RSP+32],RSI
            jb .L_431aab

            cmp QWORD PTR [RSP+72],0
            jne .L_431bcf
.L_431e0f:

            add RSP,120
.L_431e13:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_431e1e:

            cmp QWORD PTR [RSP+48],0
            jne .L_431a87

            jmp .L_431bcf
.L_431e2f:

            cmp QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+72],0
            jne .L_431943

            cmp QWORD PTR [RSP+48],0
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+72],RAX
            jne .L_431a87

            jmp .L_431e0f
.L_431e5c:

            call _ZSt17__throw_bad_allocv@PLT
.L_431e61:

            lea RCX,QWORD PTR [RIP+.L_439b60]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396b6]
            mov EDX,1312
            call __assert_fail@PLT
.L_431e80:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,280
.L_431e91:

            mov RBX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+264],RBX
            xor EBX,EBX
            cmp EDI,3
            mov DWORD PTR [RSP+120],EDI
            mov DWORD PTR [RSP+124],ESI
            mov QWORD PTR [RSP+64],RDX
            jle .L_431ebb

            cmp ESI,3
            jg .L_431ee8
.L_431ebb:

            mov RAX,QWORD PTR [RSP+264]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4338ce

            add RSP,280
.L_431ed9:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_431ee8:

            mov RAX,QWORD PTR [RDX+8]
            mov RBX,QWORD PTR [RDX]
            xor ECX,ECX
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+256],0
            mov RBP,RAX
            sub RBP,RBX
            mov RDX,RBP
            mov R12,RBP
            sar RDX,2
            test RDX,RDX
            mov R13,RDX
            movaps XMMWORD PTR [RSP+240],XMM0
            je .L_431f58

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_4338c9

            mov RDI,RBP
.L_431f37:

            call _Znwm@PLT
.L_431f3c:

            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+64]
            mov RBX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+8]
            mov R12,RAX
            sub R12,RBX
            mov R13,R12
            sar R13,2
.L_431f58:

            mov QWORD PTR [RSP+8],RCX
            add RBP,RCX
            cmp RAX,RBX
            movq XMM0,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+256],RBP
            punpcklqdq XMM0,XMM0
            movaps XMMWORD PTR [RSP+240],XMM0
            je .L_432df8

            mov RDI,RCX
            mov RDX,R12
            mov RSI,RBX
            call memmove@PLT

            mov RCX,RAX
            add RCX,R12
            test R13,R13
            mov QWORD PTR [RSP+248],RCX
            je .L_433701
.L_431fa8:

            movabs RAX,4611686018427387903
            cmp R13,RAX
            ja .L_4338ba

            mov RDI,R12
.L_431fbe:

            call _Znwm@PLT
.L_431fc3:

            mov RSI,QWORD PTR [RSP+64]
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,QWORD PTR [RSI+8]
            mov RBX,QWORD PTR [RSI]
            mov RBP,RAX
            sub RBP,RBX
            mov R13,RBP
            mov R12,RBP
            sar R13,2
            cmp RAX,RBX
            je .L_432f38

            mov RDX,RBP
            mov RSI,RBX
            call memmove@PLT

            test R13,R13
            je .L_433717
.L_432004:

            movabs RAX,4611686018427387903
            cmp R13,RAX
            ja .L_4338c4

            mov RDI,RBP
.L_43201a:

            call _Znwm@PLT
.L_43201f:

            mov RBX,QWORD PTR [RSP+64]
            mov RDI,RAX
            mov QWORD PTR [RSP+32],RAX
            mov RAX,QWORD PTR [RBX+8]
            mov RSI,QWORD PTR [RBX]
            mov RDX,RAX
            sub RDX,RSI
            mov RBX,RDX
            sar RBX,2
            cmp RAX,RSI
            je .L_43204a

            call memmove@PLT
.L_43204a:

            test RBX,RBX
            je .L_43224b

            mov RSI,QWORD PTR [RSP+32]
            lea RCX,QWORD PTR [RBX-1]
            mov RAX,RSI
            shr RAX,2
            neg RAX
            and EAX,3
            lea RDX,QWORD PTR [RAX+3]
            cmp RCX,RDX
            jb .L_432f7a

            xor R8D,R8D
            test RAX,RAX
            je .L_4320f0

            pxor XMM0,XMM0
            cmp RAX,1
            mov R8D,1
            movsd XMM1,QWORD PTR [RIP+.L_43e980-18584]
            pxor XMM7,XMM7
            cvtss2sd XMM0,DWORD PTR [RSI]
            mulsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RSI],XMM7
            je .L_4320f0

            pxor XMM0,XMM0
            cmp RAX,3
            mov R8D,2
            pxor XMM7,XMM7
            cvtss2sd XMM0,DWORD PTR [RSI+4]
            mulsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RSI+4],XMM7
            jne .L_4320f0

            pxor XMM0,XMM0
            mov R8D,3
            pxor XMM6,XMM6
            cvtss2sd XMM0,DWORD PTR [RSI+8]
            mulsd XMM1,XMM0
            cvtsd2ss XMM6,XMM1
            movss DWORD PTR [RSI+8],XMM6
.L_4320f0:

            mov RDX,QWORD PTR [RSP+32]
            mov RDI,RBX
            sub RDI,RAX
            mov RSI,RDI
            movapd XMM2,XMMWORD PTR [RIP+.L_43a280]
            lea RCX,QWORD PTR [RDX+RAX*4]
            shr RSI,2
            xor EAX,EAX
            xor EDX,EDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_432118:

            movaps XMM1,XMMWORD PTR [RCX+RAX*1]
            add RDX,1
            movhps QWORD PTR [RSP+16],XMM1
            cvtps2pd XMM0,XMM1
            cvtps2pd XMM1,QWORD PTR [RSP+16]
            mulpd XMM0,XMM2
            mulpd XMM1,XMM2
            cvtpd2ps XMM0,XMM0
            cvtpd2ps XMM1,XMM1
            movlhps XMM0,XMM1
            movaps XMMWORD PTR [RCX+RAX*1],XMM0
            add RAX,16
            cmp RSI,RDX
            ja .L_432118

            mov RDX,RDI
            and RDX,-4
            cmp RDI,RDX
            lea RAX,QWORD PTR [R8+RDX*1]
            je .L_43224b
.L_432161:

            mov RSI,QWORD PTR [RSP+32]
            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_43e980-18584]
            pxor XMM7,XMM7
            lea RDX,QWORD PTR [RSI+RAX*4]
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM7,XMM1
            movss DWORD PTR [RDX],XMM7
            lea RDX,QWORD PTR [RAX+1]
            cmp RBX,RDX
            jbe .L_43224b

            pxor XMM1,XMM1
            lea RDX,QWORD PTR [RSI+RDX*4]
            pxor XMM7,XMM7
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM7,XMM1
            movss DWORD PTR [RDX],XMM7
            lea RDX,QWORD PTR [RAX+2]
            cmp RBX,RDX
            jbe .L_43224b

            pxor XMM1,XMM1
            lea RDX,QWORD PTR [RSI+RDX*4]
            pxor XMM7,XMM7
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM7,XMM1
            movss DWORD PTR [RDX],XMM7
            lea RDX,QWORD PTR [RAX+3]
            cmp RBX,RDX
            jbe .L_43224b

            pxor XMM1,XMM1
            lea RDX,QWORD PTR [RSI+RDX*4]
            pxor XMM5,XMM5
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM5,XMM1
            movss DWORD PTR [RDX],XMM5
            lea RDX,QWORD PTR [RAX+4]
            cmp RBX,RDX
            jbe .L_43224b

            pxor XMM1,XMM1
            lea RDX,QWORD PTR [RSI+RDX*4]
            add RAX,5
            pxor XMM5,XMM5
            cmp RBX,RAX
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM5,XMM1
            movss DWORD PTR [RDX],XMM5
            jbe .L_43224b

            pxor XMM1,XMM1
            lea RAX,QWORD PTR [RSI+RAX*4]
            pxor XMM7,XMM7
            cvtss2sd XMM1,DWORD PTR [RAX]
            mulsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RAX],XMM7
.L_43224b:

            movsxd RAX,DWORD PTR [RSP+120]
            mov RDX,QWORD PTR [RSP+8]
            mov RSI,QWORD PTR [RSP+240]
            mov QWORD PTR [RSP+88],0
            mov DWORD PTR [RSP+44],0
            mov DWORD PTR [RSP+16],0
            mov RDI,RAX
            lea RCX,QWORD PTR [RAX*4]
            lea R11D,DWORD PTR [RAX-1]
            lea R15D,DWORD PTR [RAX-2]
            mov QWORD PTR [RSP+208],RAX
            neg EAX
            mov DWORD PTR [RSP+48],EAX
            lea EAX,DWORD PTR [RDI-7]
            mov R14,RCX
            mov QWORD PTR [RSP+216],RCX
            lea R13,QWORD PTR [RSI+RCX*1]
            mov DWORD PTR [RSP+52],R11D
            shr EAX,1
            mov RBX,RSI
            lea RAX,QWORD PTR [RAX+RAX*1+6]
            mov QWORD PTR [RSP+184],RAX
            mov RAX,RDX
            add RAX,RCX
            mov RCX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,RCX
            mov QWORD PTR [RSP+128],RCX
            add RAX,R14
            xor R14D,R14D
            mov QWORD PTR [RSP+144],RAX
            lea EAX,DWORD PTR [RDI+RDI*1]
            mov DWORD PTR [RSP+204],EAX
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov QWORD PTR [RSP+224],RAX
            lea EAX,DWORD PTR [R11+R11*1]
            mov R11,RCX
            mov RCX,RDX
            cdqe 
            add RCX,20
            lea RAX,QWORD PTR [RSI+RAX*4]
            mov QWORD PTR [RSP+168],RCX
            mov QWORD PTR [RSP+232],RAX
            mov EAX,1
            sub EAX,EDI
            mov DWORD PTR [RSP+192],EAX
            mov RAX,R11
            lea R11,QWORD PTR [R11+4]
            add RAX,20
            mov QWORD PTR [RSP+176],RAX
            lea EAX,DWORD PTR [RDI-3]
            mov QWORD PTR [RSP+152],R11
            lea R11,QWORD PTR [RDX+4]
            mov DWORD PTR [RSP+196],EAX
            mov EAX,2
            sub EAX,EDI
            mov QWORD PTR [RSP+160],R11
            mov DWORD PTR [RSP+200],EAX
.L_432372:

            movss XMM1,DWORD PTR [RBX+4]
            cmp R15D,2
            addss XMM1,DWORD PTR [RDX]
            movss XMM0,DWORD PTR [RBX]
            movss DWORD PTR [RBX+4],XMM1
            addss XMM0,DWORD PTR [RDX+4]
            movss DWORD PTR [RBX],XMM0
            movss XMM0,DWORD PTR [RBX+8]
            addss XMM0,DWORD PTR [RDX+4]
            movss DWORD PTR [RBX+8],XMM0
            je .L_43244a

            cmp DWORD PTR [RSP+120],6
            jle .L_432f28

            mov R8,QWORD PTR [RSP+184]
            mov RCX,RBX
            mov EAX,4
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4323c8:

            addss XMM1,DWORD PTR [RDX+RAX*4-8]
            movsxd RDI,EAX
            add RCX,8
            movss DWORD PTR [RCX-4],XMM1
            movss XMM1,DWORD PTR [RCX+4]
            addss XMM1,DWORD PTR [RDX+RAX*4-8]
            movss DWORD PTR [RCX+4],XMM1
            addss XMM0,DWORD PTR [RDX+RAX*4-4]
            movss DWORD PTR [RCX],XMM0
            movss XMM0,DWORD PTR [RDX+RAX*4-4]
            add RAX,2
            addss XMM0,DWORD PTR [RCX+8]
            movss DWORD PTR [RCX+8],XMM0
            cmp RAX,R8
            jne .L_4323c8
.L_43240d:

            mov RAX,QWORD PTR [RSP+88]
            add RAX,RDI
            lea RAX,QWORD PTR [RSI+RAX*4-4]
            nop
            nop
            nop
            nop
            nop
            nop
.L_432420:

            movss XMM0,DWORD PTR [RAX]
            add RAX,4
            addss XMM0,DWORD PTR [RDX+RDI*4]
            movss DWORD PTR [RAX-4],XMM0
            movss XMM0,DWORD PTR [RAX+4]
            addss XMM0,DWORD PTR [RDX+RDI*4]
            add RDI,1
            movss DWORD PTR [RAX+4],XMM0
            cmp R15D,EDI
            jg .L_432420
.L_43244a:

            mov R12D,DWORD PTR [RSP+120]
            mov EBP,DWORD PTR [RSP+44]
            movss XMM0,DWORD PTR [R13+R14*1-12]
            mov EAX,R12D
            add EAX,EBP
            mov DWORD PTR [RSP+136],EAX
            mov RAX,QWORD PTR [RSP+72]
            addss XMM0,DWORD PTR [RAX+R14*1-8]
            movss DWORD PTR [R13+R14*1-12],XMM0
            movss XMM0,DWORD PTR [R13+R14*1-4]
            addss XMM0,DWORD PTR [RAX+R14*1-8]
            movss DWORD PTR [R13+R14*1-4],XMM0
            movss XMM0,DWORD PTR [R13+R14*1-8]
            addss XMM0,DWORD PTR [RAX+R14*1-4]
            mov EAX,DWORD PTR [RSP+16]
            test EAX,EAX
            movss DWORD PTR [R13+R14*1-8],XMM0
            je .L_432b87

            mov EAX,DWORD PTR [RSP+192]
            movsxd RCX,DWORD PTR [RSP+48]
            add EAX,EBP
            cdqe 
            lea R11,QWORD PTR [RSI+RCX*4+24]
            mov QWORD PTR [RSP+56],RCX
            lea R9,QWORD PTR [RSI+RAX*4]
            mov RAX,QWORD PTR [RSP+128]
            movss XMM0,DWORD PTR [R9]
            addss XMM0,DWORD PTR [RAX]
            lea RAX,QWORD PTR [RCX*4]
            mov RCX,QWORD PTR [RSP+152]
            mov QWORD PTR [RSP+112],RAX
            add RAX,RSI
            lea R8,QWORD PTR [RCX+R14*1]
            mov RCX,QWORD PTR [RSP+160]
            add RCX,R14
            movss DWORD PTR [R9],XMM0
            cmp R11,RCX
            mov RCX,QWORD PTR [RSP+168]
            setbe R10B
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDX]
            add RCX,R14
            cmp RAX,RCX
            setae CL
            or R10D,ECX
            mov RCX,QWORD PTR [RSP+176]
            movss DWORD PTR [RAX],XMM0
            add RCX,R14
            cmp RAX,RCX
            setae CL
            cmp R11,R8
            setbe R11B
            or ECX,R11D
            test R10B,CL
            je .L_432e28

            cmp R15D,5
            jbe .L_432e28

            shr R8,2
            neg R8
            and R8D,3
            lea ECX,DWORD PTR [R8+3]
            cmp DWORD PTR [RSP+196],ECX
            jb .L_432f50

            test R8D,R8D
            mov DWORD PTR [RSP+80],1
            je .L_43277b

            cmp R8D,3
            jne .L_432f5a

            mov R10D,DWORD PTR [RSP+200]
            lea ECX,DWORD PTR [RBP+1]
            mov R11,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+8]
            movss XMM1,DWORD PTR [RAX+4]
            movsxd RCX,ECX
            add R10D,EBP
            lea R11,QWORD PTR [R11+RCX*4]
            movsxd R10,R10D
            lea R10,QWORD PTR [RSI+R10*4]
            movss XMM2,DWORD PTR [R11]
            addss XMM2,DWORD PTR [R10]
            movss DWORD PTR [R10],XMM2
            addss XMM1,DWORD PTR [RDI+RCX*4]
            lea ECX,DWORD PTR [RBP+2]
            movsxd RCX,ECX
            movss DWORD PTR [R9],XMM1
            addss XMM0,DWORD PTR [R11]
            mov R11,QWORD PTR [RSP+32]
            lea R11,QWORD PTR [R11+RCX*4]
            movss DWORD PTR [RAX],XMM0
            mov EAX,R8D
            sub EAX,R12D
            add EAX,EBP
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11]
            movss DWORD PTR [RAX],XMM0
            addss XMM2,DWORD PTR [RDI+RCX*4]
            movss DWORD PTR [R10],XMM2
            mov R10D,EBP
            addss XMM1,DWORD PTR [R11]
            mov R11D,2
            movss DWORD PTR [R9],XMM1
            mov R9D,3
.L_432630:

            mov R12D,DWORD PTR [RSP+48]
            lea ECX,DWORD PTR [R10+R9*1]
            mov RAX,QWORD PTR [RSP+32]
            movsxd RCX,ECX
            lea R10D,DWORD PTR [R12+R9*1]
            lea RBP,QWORD PTR [RAX+RCX*4]
            lea EAX,DWORD PTR [R10+1]
            movsxd R10,R10D
            lea R10,QWORD PTR [RSI+R10*4]
            cdqe 
            shl RAX,2
            lea R12,QWORD PTR [RSI+RAX*1]
            lea RAX,QWORD PTR [RSI+RAX*1-8]
            movss XMM0,DWORD PTR [R12]
            addss XMM0,DWORD PTR [RBP]
            movss DWORD PTR [R12],XMM0
            movss XMM0,DWORD PTR [R10]
            addss XMM0,DWORD PTR [RDI+RCX*4]
            lea ECX,DWORD PTR [R9+1]
            mov DWORD PTR [RSP+80],ECX
            movss DWORD PTR [R10],XMM0
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RBP]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [R11+1]
            cmp R8D,EAX
            jbe .L_43277b

            mov R10D,DWORD PTR [RSP+44]
            mov EAX,ECX
            add EAX,DWORD PTR [RSP+48]
            add R11D,2
            add R10D,ECX
            mov RCX,QWORD PTR [RSP+32]
            movsxd R10,R10D
            lea RBP,QWORD PTR [RCX+R10*4]
            movsxd RCX,EAX
            lea EAX,DWORD PTR [RCX+1]
            lea RCX,QWORD PTR [RSI+RCX*4]
            cdqe 
            shl RAX,2
            cmp R8D,R11D
            lea R12,QWORD PTR [RSI+RAX*1]
            lea RAX,QWORD PTR [RSI+RAX*1-8]
            movss XMM0,DWORD PTR [R12]
            addss XMM0,DWORD PTR [RBP]
            movss DWORD PTR [R12],XMM0
            mov R12,RDI
            movss XMM0,DWORD PTR [RCX]
            addss XMM0,DWORD PTR [RDI+R10*4]
            lea EDI,DWORD PTR [R9+2]
            mov DWORD PTR [RSP+80],EDI
            movss DWORD PTR [RCX],XMM0
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RBP]
            movss DWORD PTR [RAX],XMM0
            jbe .L_43277b

            mov R10D,DWORD PTR [RSP+44]
            mov RCX,QWORD PTR [RSP+32]
            add R10D,EDI
            add EDI,DWORD PTR [RSP+48]
            movsxd R10,R10D
            lea R11,QWORD PTR [RCX+R10*4]
            movsxd RCX,EDI
            lea EAX,DWORD PTR [RCX+1]
            lea RCX,QWORD PTR [RSI+RCX*4]
            cdqe 
            shl RAX,2
            lea RBP,QWORD PTR [RSI+RAX*1]
            lea RAX,QWORD PTR [RSI+RAX*1-8]
            movss XMM0,DWORD PTR [RBP]
            addss XMM0,DWORD PTR [R11]
            movss DWORD PTR [RBP],XMM0
            movss XMM0,DWORD PTR [RCX]
            addss XMM0,DWORD PTR [R12+R10*4]
            movss DWORD PTR [RCX],XMM0
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [R9+3]
            mov DWORD PTR [RSP+80],EAX
.L_43277b:

            mov RDI,QWORD PTR [RSP+88]
            mov EAX,R8D
            mov RBP,QWORD PTR [RSP+56]
            mov ECX,R15D
            sub ECX,R8D
            lea R11,QWORD PTR [RAX+RDI*1+1]
            mov RDI,QWORD PTR [RSP+32]
            lea R8,QWORD PTR [RBP+RAX*1+2]
            mov DWORD PTR [RSP+140],ECX
            shr ECX,2
            shl R11,2
            lea R9,QWORD PTR [RSI+R8*4]
            lea R8,QWORD PTR [RBP+RAX*1+1]
            lea R10,QWORD PTR [RDI+R11*1]
            mov RDI,QWORD PTR [RSP+112]
            add RBP,RAX
            add R11,QWORD PTR [RSP+8]
            lea R12,QWORD PTR [RSI+RBP*4]
            lea R8,QWORD PTR [RSI+R8*4]
            lea RBP,QWORD PTR [RDI+RAX*4]
            xor EAX,EAX
            xor EDI,EDI
            add RBP,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4327e0:

            movups XMM0,XMMWORD PTR [R9+RAX*1]
            add EDI,1
            addps XMM0,XMMWORD PTR [R10+RAX*1]
            movups XMMWORD PTR [R9+RAX*1],XMM0
            movups XMM0,XMMWORD PTR [R11+RAX*1]
            movups XMM4,XMMWORD PTR [R8+RAX*1]
            addps XMM0,XMM4
            movups XMMWORD PTR [R8+RAX*1],XMM0
            movups XMM0,XMMWORD PTR [R12+RAX*1]
            addps XMM0,XMMWORD PTR [R10+RAX*1]
            movups XMMWORD PTR [RBP+RAX*1],XMM0
            add RAX,16
            cmp ECX,EDI
            ja .L_4327e0

            mov EDI,DWORD PTR [RSP+140]
            mov ECX,DWORD PTR [RSP+80]
            mov EAX,EDI
            and EAX,4294967292
            add ECX,EAX
            cmp EDI,EAX
            je .L_432b46
.L_432835:

            mov RAX,QWORD PTR [RSP+56]
            movsxd R8,ECX
            add RAX,R8
            lea R9,QWORD PTR [RSI+RAX*4]
            lea EAX,DWORD PTR [RCX+1]
            cmp R15D,EAX
            jle .L_4328ea

            cmp DWORD PTR [RSP+52],ECX
            jle .L_4328ea

            add R8,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RSP+32]
            movss XMM1,DWORD PTR [R9]
            movss XMM0,DWORD PTR [R9-4]
            shl R8,2
            lea RDI,QWORD PTR [RAX+R8*1]
            add R8,QWORD PTR [RSP+8]
            mov RAX,R9
            nop
.L_432880:

            movss XMM3,DWORD PTR [RDI]
            mov R9D,ECX
            addss XMM3,DWORD PTR [RAX+4]
            add R9D,3
            add ECX,2
            add RDI,8
            add RAX,8
            add R8,8
            movss DWORD PTR [RAX-4],XMM3
            movss XMM2,DWORD PTR [R8-8]
            addss XMM2,XMM1
            movss DWORD PTR [RAX-8],XMM2
            addss XMM0,DWORD PTR [RDI-8]
            movss DWORD PTR [RAX-12],XMM0
            movss XMM1,DWORD PTR [RDI-4]
            addss XMM1,DWORD PTR [RAX]
            movss DWORD PTR [RAX],XMM1
            addss XMM3,DWORD PTR [R8-4]
            movss DWORD PTR [RAX-4],XMM3
            movaps XMM0,XMM3
            addss XMM2,DWORD PTR [RDI-4]
            movss DWORD PTR [RAX-8],XMM2
            cmp R15D,R9D
            jg .L_432880

            lea EAX,DWORD PTR [RCX+1]
.L_4328ea:

            mov EDI,DWORD PTR [RSP+48]
            mov EBP,DWORD PTR [RSP+44]
            mov R12,QWORD PTR [RSP+32]
            lea R9D,DWORD PTR [RDI+RCX*1]
            lea R8D,DWORD PTR [RBP+RCX*1]
            lea EDI,DWORD PTR [R9+1]
            movsxd R8,R8D
            movsxd R9,R9D
            lea R10,QWORD PTR [R12+R8*4]
            lea R9,QWORD PTR [RSI+R9*4]
            movsxd RDI,EDI
            shl RDI,2
            cmp DWORD PTR [RSP+52],EAX
            lea R11,QWORD PTR [RSI+RDI*1]
            lea RDI,QWORD PTR [RSI+RDI*1-8]
            movss XMM0,DWORD PTR [R11]
            addss XMM0,DWORD PTR [R10]
            movss DWORD PTR [R11],XMM0
            mov R11,QWORD PTR [RSP+8]
            movss XMM0,DWORD PTR [R9]
            addss XMM0,DWORD PTR [R11+R8*4]
            movss DWORD PTR [R9],XMM0
            movss XMM0,DWORD PTR [RDI]
            addss XMM0,DWORD PTR [R10]
            movss DWORD PTR [RDI],XMM0
            jle .L_432b46

            lea R8D,DWORD PTR [RBP+RAX*1]
            mov R11D,EBP
            mov RBP,R12
            movsxd R8,R8D
            lea R9,QWORD PTR [R12+R8*4]
            mov R12D,DWORD PTR [RSP+48]
            add EAX,R12D
            lea EDI,DWORD PTR [RAX+1]
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*4]
            movsxd RDI,EDI
            shl RDI,2
            lea R10,QWORD PTR [RSI+RDI*1]
            movss XMM0,DWORD PTR [R10]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [R10],XMM0
            mov R10,QWORD PTR [RSP+8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R10+R8*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+RDI*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [RCX+2]
            cmp DWORD PTR [RSP+52],EAX
            jle .L_432b46

            lea R8D,DWORD PTR [R11+RAX*1]
            add EAX,R12D
            lea EDI,DWORD PTR [RAX+1]
            cdqe 
            movsxd R8,R8D
            lea RAX,QWORD PTR [RSI+RAX*4]
            movsxd RDI,EDI
            lea R9,QWORD PTR [RBP+R8*4]
            shl RDI,2
            lea R10,QWORD PTR [RSI+RDI*1]
            movss XMM0,DWORD PTR [R10]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [R10],XMM0
            mov R10,QWORD PTR [RSP+8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R10+R8*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+RDI*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [RCX+3]
            cmp DWORD PTR [RSP+52],EAX
            jle .L_432b46

            lea R8D,DWORD PTR [R11+RAX*1]
            add EAX,R12D
            lea EDI,DWORD PTR [RAX+1]
            cdqe 
            movsxd R8,R8D
            lea RAX,QWORD PTR [RSI+RAX*4]
            movsxd RDI,EDI
            lea R9,QWORD PTR [RBP+R8*4]
            shl RDI,2
            lea R10,QWORD PTR [RSI+RDI*1]
            movss XMM0,DWORD PTR [R10]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [R10],XMM0
            mov R10,QWORD PTR [RSP+8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R10+R8*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+RDI*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [RCX+4]
            cmp DWORD PTR [RSP+52],EAX
            jle .L_432b46

            lea R8D,DWORD PTR [R11+RAX*1]
            add EAX,R12D
            add ECX,5
            lea EDI,DWORD PTR [RAX+1]
            cdqe 
            movsxd R8,R8D
            lea RAX,QWORD PTR [RSI+RAX*4]
            movsxd RDI,EDI
            lea R9,QWORD PTR [RBP+R8*4]
            shl RDI,2
            cmp DWORD PTR [RSP+52],ECX
            lea R10,QWORD PTR [RSI+RDI*1]
            movss XMM0,DWORD PTR [R10]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [R10],XMM0
            mov R10,QWORD PTR [RSP+8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R10+R8*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+RDI*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [RAX],XMM0
            jle .L_432b46

            lea EDI,DWORD PTR [R11+RCX*1]
            add ECX,R12D
            lea EAX,DWORD PTR [RCX+1]
            movsxd RCX,ECX
            movsxd RDI,EDI
            lea RCX,QWORD PTR [RSI+RCX*4]
            cdqe 
            lea R8,QWORD PTR [RBP+RDI*4]
            shl RAX,2
            lea R9,QWORD PTR [RSI+RAX*1]
            lea RAX,QWORD PTR [RSI+RAX*1-8]
            movss XMM0,DWORD PTR [R9]
            addss XMM0,DWORD PTR [R8]
            movss DWORD PTR [R9],XMM0
            movss XMM0,DWORD PTR [RCX]
            addss XMM0,DWORD PTR [R10+RDI*4]
            movss DWORD PTR [RCX],XMM0
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R8]
            movss DWORD PTR [RAX],XMM0
.L_432b46:

            mov EDI,DWORD PTR [RSP+44]
            mov RCX,QWORD PTR [RSP+72]
            lea EAX,DWORD PTR [RDI-1]
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RCX+R14*1-4]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [RDI-2]
            mov RDI,QWORD PTR [RSP+144]
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDI+R14*1-4]
            movss DWORD PTR [RAX],XMM0
.L_432b87:

            add DWORD PTR [RSP+16],1
            mov EAX,DWORD PTR [RSP+16]
            cmp DWORD PTR [RSP+124],EAX
            jg .L_432f88

            mov RDI,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RSP+240]
.L_432ba7:

            call .L_414440
.L_432bac:

            mov RAX,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RAX+8]
            sub RSI,R8
            sar RSI,2
            test RSI,RSI
            je .L_432db6

            mov RAX,R8
            lea RDX,QWORD PTR [RSI-1]
            shr RAX,2
            neg RAX
            and EAX,3
            lea RCX,QWORD PTR [RAX+3]
            cmp RCX,RDX
            ja .L_432f81

            xor R10D,R10D
            test RAX,RAX
            je .L_432c66

            pxor XMM0,XMM0
            cmp RAX,1
            mov R10D,1
            movsd XMM1,QWORD PTR [RIP+.L_43e980-18576]
            pxor XMM7,XMM7
            cvtss2sd XMM0,DWORD PTR [R8]
            mulsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [R8],XMM7
            je .L_432c66

            pxor XMM0,XMM0
            cmp RAX,3
            mov R10D,2
            pxor XMM6,XMM6
            cvtss2sd XMM0,DWORD PTR [R8+4]
            mulsd XMM0,XMM1
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [R8+4],XMM6
            jne .L_432c66

            pxor XMM0,XMM0
            mov R10D,3
            pxor XMM6,XMM6
            cvtss2sd XMM0,DWORD PTR [R8+8]
            mulsd XMM1,XMM0
            cvtsd2ss XMM6,XMM1
            movss DWORD PTR [R8+8],XMM6
.L_432c66:

            mov R9,RSI
            movapd XMM2,XMMWORD PTR [RIP+.L_43a290]
            sub R9,RAX
            lea RCX,QWORD PTR [R8+RAX*4]
            xor EDX,EDX
            mov RDI,R9
            xor EAX,EAX
            shr RDI,2
            nop
            nop
            nop
            nop
            nop
.L_432c88:

            movaps XMM1,XMMWORD PTR [RCX+RAX*1]
            add RDX,1
            movhps QWORD PTR [RSP+96],XMM1
            cvtps2pd XMM0,XMM1
            cvtps2pd XMM1,QWORD PTR [RSP+96]
            mulpd XMM0,XMM2
            mulpd XMM1,XMM2
            cvtpd2ps XMM0,XMM0
            cvtpd2ps XMM1,XMM1
            movlhps XMM0,XMM1
            movaps XMMWORD PTR [RCX+RAX*1],XMM0
            add RAX,16
            cmp RDX,RDI
            jb .L_432c88

            mov RDX,R9
            and RDX,-4
            cmp RDX,R9
            lea RAX,QWORD PTR [RDX+R10*1]
            je .L_432db6
.L_432cd1:

            pxor XMM1,XMM1
            lea RDX,QWORD PTR [R8+RAX*4]
            movsd XMM0,QWORD PTR [RIP+.L_43e980-18576]
            pxor XMM7,XMM7
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM7,XMM1
            movss DWORD PTR [RDX],XMM7
            lea RDX,QWORD PTR [RAX+1]
            cmp RSI,RDX
            jbe .L_432db6

            pxor XMM1,XMM1
            lea RDX,QWORD PTR [R8+RDX*4]
            pxor XMM7,XMM7
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM7,XMM1
            movss DWORD PTR [RDX],XMM7
            lea RDX,QWORD PTR [RAX+2]
            cmp RSI,RDX
            jbe .L_432db6

            pxor XMM1,XMM1
            lea RDX,QWORD PTR [R8+RDX*4]
            pxor XMM7,XMM7
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM7,XMM1
            movss DWORD PTR [RDX],XMM7
            lea RDX,QWORD PTR [RAX+3]
            cmp RDX,RSI
            jae .L_432db6

            pxor XMM1,XMM1
            lea RDX,QWORD PTR [R8+RDX*4]
            pxor XMM7,XMM7
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM7,XMM1
            movss DWORD PTR [RDX],XMM7
            lea RDX,QWORD PTR [RAX+4]
            cmp RSI,RDX
            jbe .L_432db6

            pxor XMM1,XMM1
            lea RDX,QWORD PTR [R8+RDX*4]
            add RAX,5
            pxor XMM6,XMM6
            cmp RSI,RAX
            cvtss2sd XMM1,DWORD PTR [RDX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM6,XMM1
            movss DWORD PTR [RDX],XMM6
            jbe .L_432db6

            pxor XMM1,XMM1
            lea RAX,QWORD PTR [R8+RAX*4]
            pxor XMM5,XMM5
            cvtss2sd XMM1,DWORD PTR [RAX]
            mulsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RAX],XMM5
.L_432db6:

            mov RAX,QWORD PTR [RSP+32]
            test RAX,RAX
            je .L_432dc8

            mov RDI,RAX
            call _ZdlPv@PLT
.L_432dc8:

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            je .L_432dda

            mov RDI,RAX
            call _ZdlPv@PLT
.L_432dda:

            mov RDI,QWORD PTR [RSP+240]
            test RDI,RDI
            je .L_431ebb

            call _ZdlPv@PLT

            jmp .L_431ebb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432df8:

            add RCX,R12
            test R13,R13
            mov QWORD PTR [RSP+248],RCX
            jne .L_431fa8

            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+32],0
            jmp .L_43224b
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432e28:

            mov ECX,DWORD PTR [RSP+136]
            sub ECX,DWORD PTR [RSP+204]
            cmp R15D,2
            movsxd RCX,ECX
            lea RCX,QWORD PTR [RSI+RCX*4]
            jle .L_432f70

            mov R8,QWORD PTR [RSP+128]
            movss XMM1,DWORD PTR [RCX+4]
            movss XMM0,DWORD PTR [RCX]
            mov ECX,3
            nop
            nop
            nop
.L_432e60:

            movss XMM3,DWORD PTR [R8+RCX*4-8]
            movsxd RDI,ECX
            addss XMM3,DWORD PTR [RAX+8]
            add RAX,8
            movss DWORD PTR [RAX],XMM3
            movss XMM2,DWORD PTR [RDX+RCX*4-8]
            addss XMM2,XMM1
            movss DWORD PTR [RAX-4],XMM2
            addss XMM0,DWORD PTR [R8+RCX*4-8]
            movss DWORD PTR [RAX-8],XMM0
            movss XMM1,DWORD PTR [R8+RCX*4-4]
            addss XMM1,DWORD PTR [RAX+4]
            movss DWORD PTR [RAX+4],XMM1
            addss XMM3,DWORD PTR [RDX+RCX*4-4]
            movss DWORD PTR [RAX],XMM3
            movaps XMM0,XMM3
            addss XMM2,DWORD PTR [R8+RCX*4-4]
            add RCX,2
            lea R9D,DWORD PTR [RCX-1]
            movss DWORD PTR [RAX-4],XMM2
            cmp R15D,R9D
            jg .L_432e60
.L_432ec9:

            mov RAX,QWORD PTR [RSP+56]
            mov R8D,DWORD PTR [RSP+52]
            mov RCX,QWORD PTR [RSP+128]
            add RAX,RDI
            lea RAX,QWORD PTR [RSI+RAX*4-4]
            nop
            nop
            nop
            nop
            nop
.L_432ee8:

            movss XMM0,DWORD PTR [RAX+8]
            add RAX,4
            addss XMM0,DWORD PTR [RCX+RDI*4]
            movss DWORD PTR [RAX+4],XMM0
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDX+RDI*4]
            movss DWORD PTR [RAX],XMM0
            movss XMM0,DWORD PTR [RAX-4]
            addss XMM0,DWORD PTR [RCX+RDI*4]
            add RDI,1
            movss DWORD PTR [RAX-4],XMM0
            cmp R8D,EDI
            jg .L_432ee8

            jmp .L_432b46
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_432f28:

            mov EDI,2
            jmp .L_43240d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_432f38:

            test R13,R13
            jne .L_432004

            mov QWORD PTR [RSP+32],0
            jmp .L_43224b
          .byte 0x90
.L_432f50:

            mov ECX,1
            jmp .L_432835
.L_432f5a:

            xor R11D,R11D
            mov R9D,1
            mov R10D,EBP
            mov RDI,QWORD PTR [RSP+8]
            jmp .L_432630
.L_432f70:

            mov EDI,1
            jmp .L_432ec9
.L_432f7a:

            xor EAX,EAX
            jmp .L_432161
.L_432f81:

            xor EAX,EAX
            jmp .L_432cd1
.L_432f88:

            mov RAX,QWORD PTR [RSP+128]
            movss XMM0,DWORD PTR [R13+R14*1+4]
            addss XMM0,DWORD PTR [RAX]
            movsxd RAX,DWORD PTR [RSP+136]
            lea RDI,QWORD PTR [RSI+RAX*4+24]
            lea RBP,QWORD PTR [RAX*4]
            mov QWORD PTR [RSP+80],RAX
            mov RAX,QWORD PTR [RSP+152]
            lea RCX,QWORD PTR [RSI+RBP*1]
            movss DWORD PTR [R13+R14*1+4],XMM0
            movss XMM0,DWORD PTR [R13+R14*1]
            lea R8,QWORD PTR [RAX+R14*1]
            mov RAX,QWORD PTR [RSP+168]
            addss XMM0,DWORD PTR [RDX]
            add RAX,R14
            cmp RCX,RAX
            mov RAX,QWORD PTR [RSP+160]
            setae R9B
            add RAX,R14
            movss DWORD PTR [R13+R14*1],XMM0
            cmp RDI,RAX
            setbe AL
            or R9D,EAX
            mov RAX,QWORD PTR [RSP+176]
            add RAX,R14
            cmp RCX,RAX
            setae R10B
            cmp RDI,R8
            setbe AL
            or EAX,R10D
            test R9B,AL
            je .L_433732

            cmp R15D,5
            jbe .L_433732

            mov RAX,R8
            shr RAX,2
            neg RAX
            mov EDI,EAX
            and EDI,3
            lea EAX,DWORD PTR [RDI+3]
            cmp DWORD PTR [RSP+196],EAX
            jb .L_433825

            test EDI,EDI
            mov R12D,1
            je .L_433273

            cmp EDI,3
            jne .L_433830

            mov R12D,DWORD PTR [RSP+44]
            mov R11D,DWORD PTR [RSP+120]
            movss XMM2,DWORD PTR [RCX]
            movss XMM0,DWORD PTR [RCX+4]
            lea EAX,DWORD PTR [R12+1]
            movsxd R10,EAX
            mov RAX,QWORD PTR [RSP+32]
            lea R8,QWORD PTR [RAX+R10*4]
            lea EAX,DWORD PTR [R12+R11*1+2]
            cdqe 
            movss XMM1,DWORD PTR [R8]
            lea R9,QWORD PTR [RSI+RAX*4]
            lea EAX,DWORD PTR [R12+R11*1+1]
            addss XMM1,DWORD PTR [R9]
            cdqe 
            lea R11,QWORD PTR [RSI+RAX*4]
            mov RAX,QWORD PTR [RSP+8]
            movss DWORD PTR [R9],XMM1
            addss XMM0,DWORD PTR [RAX+R10*4]
            lea EAX,DWORD PTR [R12+2]
            movss DWORD PTR [R11],XMM0
            addss XMM2,DWORD PTR [R8]
            movss DWORD PTR [RCX],XMM2
            movsxd RCX,EAX
            mov RAX,QWORD PTR [RSP+32]
            lea R8,QWORD PTR [RAX+RCX*4]
            mov EAX,DWORD PTR [RSP+120]
            lea EAX,DWORD PTR [R12+RAX*1+3]
            cdqe 
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM2,DWORD PTR [RAX]
            addss XMM2,DWORD PTR [R8]
            movss DWORD PTR [RAX],XMM2
            mov RAX,QWORD PTR [RSP+8]
            addss XMM1,DWORD PTR [RAX+RCX*4]
            mov ECX,3
            mov EAX,R12D
            movss DWORD PTR [R9],XMM1
            addss XMM0,DWORD PTR [R8]
            mov R8D,2
            movss DWORD PTR [R11],XMM0
.L_43311e:

            mov R11,QWORD PTR [RSP+32]
            mov R12D,DWORD PTR [RSP+136]
            add EAX,ECX
            movsxd R9,EAX
            lea R10,QWORD PTR [R11+R9*4]
            lea R11D,DWORD PTR [RCX+R12*1]
            lea EAX,DWORD PTR [R11+1]
            cdqe 
            lea R12,QWORD PTR [RAX*4]
            lea RAX,QWORD PTR [RSI+R12*1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R10]
            movss DWORD PTR [RAX],XMM0
            movsxd RAX,R11D
            mov R11,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11+R9*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+R12*1-8]
            lea R12D,DWORD PTR [RCX+1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R10]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [R8+1]
            cmp EDI,EAX
            jbe .L_433273

            mov EAX,DWORD PTR [RSP+44]
            mov R11,QWORD PTR [RSP+32]
            add EAX,R12D
            add R12D,DWORD PTR [RSP+136]
            movsxd R9,EAX
            lea R10,QWORD PTR [R11+R9*4]
            lea EAX,DWORD PTR [R12+1]
            cdqe 
            lea R11,QWORD PTR [RAX*4]
            lea RAX,QWORD PTR [RSI+R11*1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R10]
            movss DWORD PTR [RAX],XMM0
            movsxd RAX,R12D
            mov R12,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R12+R9*4]
            lea R12D,DWORD PTR [RCX+2]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+R11*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R10]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [R8+2]
            cmp EDI,EAX
            jbe .L_433273

            mov EAX,DWORD PTR [RSP+44]
            mov R11,QWORD PTR [RSP+32]
            add EAX,R12D
            movsxd R8,EAX
            mov EAX,DWORD PTR [RSP+136]
            lea R9,QWORD PTR [R11+R8*4]
            lea R11D,DWORD PTR [R12+RAX*1]
            lea R12D,DWORD PTR [RCX+3]
            lea EAX,DWORD PTR [R11+1]
            cdqe 
            lea R10,QWORD PTR [RAX*4]
            lea RAX,QWORD PTR [RSI+R10*1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [RAX],XMM0
            movsxd RAX,R11D
            mov R11,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11+R8*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+R10*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R9]
            movss DWORD PTR [RAX],XMM0
.L_433273:

            mov EAX,R15D
            mov ECX,EDI
            mov R10,QWORD PTR [RSP+80]
            sub EAX,EDI
            mov DWORD PTR [RSP+112],EAX
            shr EAX,2
            mov DWORD PTR [RSP+56],EAX
            mov RAX,QWORD PTR [RSP+88]
            lea R9,QWORD PTR [RCX+RAX*1+1]
            mov RAX,QWORD PTR [RSP+32]
            shl R9,2
            lea R11,QWORD PTR [RAX+R9*1]
            lea RAX,QWORD PTR [RCX+R10*1+2]
            add R9,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RSI+RAX*4]
            lea RAX,QWORD PTR [RCX+R10*1+1]
            lea RDI,QWORD PTR [RSI+RAX*4]
            lea RAX,QWORD PTR [RCX+R10*1]
            lea R10,QWORD PTR [RSI+RAX*4]
            lea RAX,QWORD PTR [RBP+RCX*4]
            xor ECX,ECX
            lea RBP,QWORD PTR [RSI+RAX*1]
            xor EAX,EAX
.L_4332cd:

            movups XMM0,XMMWORD PTR [R8+RAX*1]
            add ECX,1
            addps XMM0,XMMWORD PTR [R11+RAX*1]
            movups XMMWORD PTR [R8+RAX*1],XMM0
            movups XMM0,XMMWORD PTR [RDI+RAX*1]
            movups XMM7,XMMWORD PTR [R9+RAX*1]
            addps XMM0,XMM7
            movups XMMWORD PTR [RDI+RAX*1],XMM0
            movups XMM0,XMMWORD PTR [R10+RAX*1]
            addps XMM0,XMMWORD PTR [R11+RAX*1]
            movups XMMWORD PTR [RBP+RAX*1],XMM0
            add RAX,16
            cmp DWORD PTR [RSP+56],ECX
            ja .L_4332cd

            mov EDI,DWORD PTR [RSP+112]
            mov RCX,QWORD PTR [RSP+208]
            mov R11,QWORD PTR [RSP+88]
            mov EAX,EDI
            and EAX,4294967292
            lea R10,QWORD PTR [RCX+R11*1]
            cmp EDI,EAX
            lea R9D,DWORD PTR [RAX+R12*1]
            je .L_433686
.L_43332e:

            mov RAX,QWORD PTR [RSP+80]
            lea ECX,DWORD PTR [R9+1]
            movsxd RDI,R9D
            add RAX,RDI
            cmp ECX,R15D
            lea RAX,QWORD PTR [RSI+RAX*4]
            jge .L_433882

            cmp DWORD PTR [RSP+52],R9D
            jle .L_433882

            mov R11,QWORD PTR [RSP+88]
            movss XMM1,DWORD PTR [RAX]
            movss XMM0,DWORD PTR [RAX-4]
            lea RAX,QWORD PTR [RDI+R11*1]
            add R11,QWORD PTR [RSP+208]
            lea R8,QWORD PTR [RAX*4]
            mov RAX,QWORD PTR [RSP+32]
            mov R10,R11
            lea RCX,QWORD PTR [RAX+R8*1]
            lea RAX,QWORD PTR [R11+RDI*1]
            mov RDI,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RSI+RAX*4]
            add RDI,R8
.L_433393:

            movss XMM3,DWORD PTR [RAX+4]
            mov R8D,R9D
            add RCX,8
            addss XMM3,DWORD PTR [RCX-8]
            add R8D,3
            add R9D,2
            add RAX,8
            add RDI,8
            movss DWORD PTR [RAX-4],XMM3
            movss XMM2,DWORD PTR [RDI-8]
            addss XMM2,XMM1
            movss DWORD PTR [RAX-8],XMM2
            addss XMM0,DWORD PTR [RCX-8]
            movss DWORD PTR [RAX-12],XMM0
            movss XMM1,DWORD PTR [RCX-4]
            addss XMM1,DWORD PTR [RAX]
            movss DWORD PTR [RAX],XMM1
            addss XMM3,DWORD PTR [RDI-4]
            movss DWORD PTR [RAX-4],XMM3
            movaps XMM0,XMM3
            addss XMM2,DWORD PTR [RCX-4]
            movss DWORD PTR [RAX-8],XMM2
            cmp R15D,R8D
            jg .L_433393

            lea ECX,DWORD PTR [R9+1]
.L_4333fe:

            mov R12D,DWORD PTR [RSP+44]
            mov R11D,DWORD PTR [RSP+136]
            lea EAX,DWORD PTR [R12+R9*1]
            add R11D,R9D
            cmp DWORD PTR [RSP+52],ECX
            movsxd RDI,EAX
            mov RAX,QWORD PTR [RSP+32]
            lea R8,QWORD PTR [RAX+RDI*4]
            lea EAX,DWORD PTR [R11+1]
            cdqe 
            lea RBP,QWORD PTR [RAX*4]
            lea RAX,QWORD PTR [RSI+RBP*1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R8]
            movss DWORD PTR [RAX],XMM0
            movsxd RAX,R11D
            mov R11,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11+RDI*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+RBP*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R8]
            movss DWORD PTR [RAX],XMM0
            jle .L_433686

            mov R11D,DWORD PTR [RSP+136]
            lea EAX,DWORD PTR [R12+RCX*1]
            mov EBP,R12D
            mov R12,QWORD PTR [RSP+32]
            movsxd RDI,EAX
            add R11D,ECX
            lea EAX,DWORD PTR [R11+1]
            lea R8,QWORD PTR [R12+RDI*4]
            cdqe 
            lea RCX,QWORD PTR [RAX*4]
            lea RAX,QWORD PTR [RSI+RCX*1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R8]
            movss DWORD PTR [RAX],XMM0
            movsxd RAX,R11D
            mov R11,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11+RDI*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+RCX*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R8]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [R9+2]
            cmp DWORD PTR [RSP+52],EAX
            jle .L_433686

            mov R11D,DWORD PTR [RSP+136]
            lea ECX,DWORD PTR [RBP+RAX*1]
            movsxd RCX,ECX
            add R11D,EAX
            lea RDI,QWORD PTR [R12+RCX*4]
            lea EAX,DWORD PTR [R11+1]
            cdqe 
            lea R8,QWORD PTR [RAX*4]
            lea RAX,QWORD PTR [RSI+R8*1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDI]
            movss DWORD PTR [RAX],XMM0
            movsxd RAX,R11D
            mov R11,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11+RCX*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+R8*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDI]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [R9+3]
            cmp DWORD PTR [RSP+52],EAX
            jle .L_433686

            mov R11D,DWORD PTR [RSP+136]
            lea ECX,DWORD PTR [RBP+RAX*1]
            movsxd RCX,ECX
            add R11D,EAX
            lea RDI,QWORD PTR [R12+RCX*4]
            lea EAX,DWORD PTR [R11+1]
            cdqe 
            lea R8,QWORD PTR [RAX*4]
            lea RAX,QWORD PTR [RSI+R8*1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDI]
            movss DWORD PTR [RAX],XMM0
            movsxd RAX,R11D
            mov R11,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11+RCX*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+R8*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDI]
            movss DWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [R9+4]
            cmp DWORD PTR [RSP+52],EAX
            jle .L_433686

            mov R11D,DWORD PTR [RSP+136]
            lea ECX,DWORD PTR [RBP+RAX*1]
            add R9D,5
            movsxd RCX,ECX
            add R11D,EAX
            lea RDI,QWORD PTR [R12+RCX*4]
            cmp DWORD PTR [RSP+52],R9D
            lea EAX,DWORD PTR [R11+1]
            cdqe 
            lea R8,QWORD PTR [RAX*4]
            lea RAX,QWORD PTR [RSI+R8*1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDI]
            movss DWORD PTR [RAX],XMM0
            movsxd RAX,R11D
            mov R11,QWORD PTR [RSP+8]
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11+RCX*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+R8*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDI]
            movss DWORD PTR [RAX],XMM0
            jle .L_433686

            mov EAX,EBP
            add EAX,R9D
            add R9D,DWORD PTR [RSP+136]
            movsxd RCX,EAX
            lea RDI,QWORD PTR [R12+RCX*4]
            lea EAX,DWORD PTR [R9+1]
            cdqe 
            lea R8,QWORD PTR [RAX*4]
            lea RAX,QWORD PTR [RSI+R8*1]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDI]
            movss DWORD PTR [RAX],XMM0
            movsxd RAX,R9D
            lea RAX,QWORD PTR [RSI+RAX*4]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R11+RCX*4]
            movss DWORD PTR [RAX],XMM0
            lea RAX,QWORD PTR [RSI+R8*1-8]
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [RDI]
            movss DWORD PTR [RAX],XMM0
.L_433686:

            mov RAX,QWORD PTR [RSP+224]
            mov RDI,QWORD PTR [RSP+72]
            mov ECX,DWORD PTR [RSP+120]
            mov QWORD PTR [RSP+88],R10
            add DWORD PTR [RSP+48],ECX
            movss XMM0,DWORD PTR [RAX+R14*1-4]
            addss XMM0,DWORD PTR [RDI+R14*1-4]
            mov RDI,QWORD PTR [RSP+144]
            movss DWORD PTR [RAX+R14*1-4],XMM0
            mov RAX,QWORD PTR [RSP+232]
            movss XMM0,DWORD PTR [RAX+R14*1]
            addss XMM0,DWORD PTR [RDI+R14*1-4]
            movss DWORD PTR [RAX+R14*1],XMM0
            mov RAX,QWORD PTR [RSP+216]
            add QWORD PTR [RSP+128],RAX
            add RDX,RAX
            add RBX,RAX
            add R14,RAX
            mov EAX,DWORD PTR [RSP+136]
            mov DWORD PTR [RSP+44],EAX
            jmp .L_432372
.L_433701:

            mov RDX,R12
            mov RSI,RBX
            xor EDI,EDI
            call memmove@PLT

            mov QWORD PTR [RSP+8],0
.L_433717:

            mov RDX,R12
            mov RSI,RBX
            xor EDI,EDI
            call memmove@PLT

            mov QWORD PTR [RSP+32],0
            jmp .L_43224b
.L_433732:

            cmp R15D,2
            jle .L_43389d

            mov RAX,QWORD PTR [RSP+32]
            movss XMM1,DWORD PTR [RCX+4]
            movss XMM0,DWORD PTR [RCX]
            lea RCX,QWORD PTR [R13+R14*1]
            mov EDI,3
            lea R8,QWORD PTR [RAX+R14*1]
            mov RAX,QWORD PTR [RSP+8]
            lea R9,QWORD PTR [RAX+R14*1]
.L_433761:

            movss XMM3,DWORD PTR [RCX+8]
            mov R10D,EDI
            add RCX,8
            addss XMM3,DWORD PTR [R8+RDI*4-8]
            movss DWORD PTR [RCX],XMM3
            movss XMM2,DWORD PTR [R9+RDI*4-8]
            addss XMM2,XMM1
            movss DWORD PTR [RCX-4],XMM2
            addss XMM0,DWORD PTR [R8+RDI*4-8]
            movss DWORD PTR [RCX-8],XMM0
            movss XMM1,DWORD PTR [R8+RDI*4-4]
            addss XMM1,DWORD PTR [RCX+4]
            movss DWORD PTR [RCX+4],XMM1
            addss XMM3,DWORD PTR [R9+RDI*4-4]
            movss DWORD PTR [RCX],XMM3
            movaps XMM0,XMM3
            addss XMM2,DWORD PTR [R8+RDI*4-4]
            add RDI,2
            lea EAX,DWORD PTR [RDI-1]
            movss DWORD PTR [RCX-4],XMM2
            cmp R15D,EAX
            jg .L_433761
.L_4337cb:

            movsxd RCX,R10D
            mov R10,QWORD PTR [RSP+88]
            add R10,QWORD PTR [RSP+208]
            lea RAX,QWORD PTR [R10+RCX*1]
            lea RAX,QWORD PTR [RSI+RAX*4-4]
.L_4337e4:

            movss XMM0,DWORD PTR [RAX+8]
            add RAX,4
            addss XMM0,DWORD PTR [R8+RCX*4]
            movss DWORD PTR [RAX+4],XMM0
            movss XMM0,DWORD PTR [RAX]
            addss XMM0,DWORD PTR [R9+RCX*4]
            movss DWORD PTR [RAX],XMM0
            movss XMM0,DWORD PTR [RAX-4]
            addss XMM0,DWORD PTR [R8+RCX*4]
            add RCX,1
            movss DWORD PTR [RAX-4],XMM0
            cmp DWORD PTR [RSP+52],ECX
            jg .L_4337e4

            jmp .L_433686
.L_433825:

            mov R9D,1
            jmp .L_43332e
.L_433830:

            xor R8D,R8D
            mov ECX,1
            mov EAX,DWORD PTR [RSP+44]
            jmp .L_43311e
.L_433841:

            mov RBX,RAX
            mov RAX,QWORD PTR [RSP+32]
            test RAX,RAX
            je .L_433856

            mov RDI,RAX
            call _ZdlPv@PLT
.L_433856:

            cmp QWORD PTR [RSP+8],0
            je .L_433868
.L_43385e:

            mov RDI,QWORD PTR [RSP+8]
            call _ZdlPv@PLT
.L_433868:

            mov RDI,QWORD PTR [RSP+240]
            test RDI,RDI
            je .L_43387a

            call _ZdlPv@PLT
.L_43387a:

            mov RDI,RBX
.L_43387d:

            call _Unwind_Resume@PLT
.L_433882:

            mov RAX,QWORD PTR [RSP+208]
            mov RDI,QWORD PTR [RSP+88]
            lea R10,QWORD PTR [RAX+RDI*1]
            jmp .L_4333fe
.L_433898:

            mov RBX,RAX
            jmp .L_433868
.L_43389d:

            mov RAX,QWORD PTR [RSP+32]
            mov R10D,1
            lea R8,QWORD PTR [RAX+R14*1]
            mov RAX,QWORD PTR [RSP+8]
            lea R9,QWORD PTR [RAX+R14*1]
            jmp .L_4337cb
.L_4338ba:

            call _ZSt17__throw_bad_allocv@PLT
.L_4338bf:

            mov RBX,RAX
            jmp .L_43385e
.L_4338c4:

            call _ZSt17__throw_bad_allocv@PLT
.L_4338c9:

            call _ZSt17__throw_bad_allocv@PLT
.L_4338ce:

            call __stack_chk_fail@PLT
.L_4338d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4338e0:

            push R15
            push R14
            mov R14,-31
            push R13
            push R12
            mov R13,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov EDI,252
            mov RBX,RDX
            sub RSP,72
.L_433903:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
.L_433913:

            call _Znwm@PLT
.L_433918:

            lea RDI,QWORD PTR [RAX+8]
            mov RCX,RAX
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+244],0
            mov R12,RAX
            xor EAX,EAX
            and RDI,-8
            sub RCX,RDI
            add ECX,252
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_433950:

            pxor XMM1,XMM1
            movsd XMM0,QWORD PTR [RIP+.L_43e980-18568]
            cvtsi2sd XMM1,R14D
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            call exp@PLT

            pxor XMM2,XMM2
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [R12+R14*4+124],XMM2
            add R14,1
            cmp R14,32
            jne .L_433950

            lea RSI,QWORD PTR [RBP+3]
            mov RAX,RSI
            lea RSI,QWORD PTR [R13+3]
            shr RAX,2
            movsxd R14,EAX
            mov QWORD PTR [RSP+8],RAX
            mov RAX,R13
            imul RAX,R14
            shr RSI,2
            mov QWORD PTR [RSP+16],RSI
            test RAX,RAX
            je .L_433b14

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_433b50

            shl RAX,2
            mov RDI,RAX
            mov QWORD PTR [RSP+24],RAX
.L_4339d6:

            call _Znwm@PLT
.L_4339db:

            mov RDX,QWORD PTR [RSP+24]
            xor ESI,ESI
            mov RDI,RAX
            mov R15,RAX
            call memset@PLT
.L_4339ed:

            pxor XMM0,XMM0
            push R15
.L_4339f3:

            push RBX
            mov ECX,63
            mov RSI,R13
            mov RDI,RBP
            mov R9,R12
            mov R8D,31
            mov EDX,4
            call .L_42de70

            mov ESI,DWORD PTR [RSP+32]
            pxor XMM0,XMM0
            imul ESI,DWORD PTR [RSP+24]
            xor EAX,EAX
            mov QWORD PTR [RSP+64],0
            movaps XMMWORD PTR [RSP+48],XMM0
            pop RCX
            movsxd RSI,ESI
            test RSI,RSI
            pop RDI
            jne .L_433b00
.L_433a3d:

            pxor XMM0,XMM0
            push RAX
            push R15
            mov EDX,4
            mov RDI,R13
            mov R9,R12
            mov R8D,31
            mov ECX,63
            mov RSI,R14
            call .L_42de70

            pop RAX
            test R13,R13
            pop RDX
.L_433a67:

            mov RDI,QWORD PTR [RSP+32]
            je .L_433ab9

            test RBP,RBP
            je .L_433ab9

            lea R8,QWORD PTR [RBP*4]
            xor ESI,ESI
.L_433a7d:

            mov RCX,RSI
            xor EAX,EAX
            shr RCX,2
            imul RCX,R14
            nop
            nop
            nop
            nop
            nop
            nop
.L_433a90:

            mov RDX,RAX
            shr RDX,2
            add RDX,RCX
            movss XMM0,DWORD PTR [RDI+RDX*4]
            movss DWORD PTR [RBX+RAX*4],XMM0
            add RAX,1
            cmp RBP,RAX
            jne .L_433a90

            add RSI,1
            add RBX,R8
            cmp R13,RSI
            jne .L_433a7d
.L_433ab9:

            test RDI,RDI
            je .L_433ac3

            call _ZdlPv@PLT
.L_433ac3:

            test R15,R15
            je .L_433ad0

            mov RDI,R15
            call _ZdlPv@PLT
.L_433ad0:

            mov RDI,R12
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_433b55

            add RSP,72
.L_433aec:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_433b00:

            lea RDI,QWORD PTR [RSP+32]
.L_433b05:

            call .L_439730
.L_433b0a:

            mov RAX,QWORD PTR [RSP+32]
            jmp .L_433a3d
.L_433b14:

            xor R15D,R15D
            jmp .L_4339ed
.L_433b1c:

            mov RDI,QWORD PTR [RSP+32]
            mov RBX,RAX
            test RDI,RDI
            je .L_433b2e

            call _ZdlPv@PLT
.L_433b2e:

            test R15,R15
            je .L_433b3b

            mov RDI,R15
            call _ZdlPv@PLT
.L_433b3b:

            mov RDI,R12
            call _ZdlPv@PLT

            mov RDI,RBX
.L_433b46:

            call _Unwind_Resume@PLT
.L_433b4b:

            mov RBX,RAX
            jmp .L_433b3b
.L_433b50:

            call _ZSt17__throw_bad_allocv@PLT
.L_433b55:

            call __stack_chk_fail@PLT
.L_433b5a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_433b60:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            movabs RDX,-6148914691236517205
            push RBP
            push RBX
            xor R14D,R14D
            pxor XMM0,XMM0
            sub RSP,296
.L_433b85:

            mov R13,QWORD PTR [RSI+8]
            mov RBP,QWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+64],RDI
            mov QWORD PTR [RSP+96],RCX
            mov RBX,R13
            mov QWORD PTR [RSP+128],0
            sub RBX,RBP
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            movaps XMMWORD PTR [RSP+112],XMM0
            test RAX,RAX
            je .L_433bfa

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_434543

            mov R12,RSI
            mov RDI,RBX
.L_433be9:

            call _Znwm@PLT
.L_433bee:

            mov R13,QWORD PTR [R12+8]
            mov RBP,QWORD PTR [R12]
            mov R14,RAX
.L_433bfa:

            mov QWORD PTR [RSP],R14
            add RBX,R14
            cmp R13,RBP
            movq XMM0,QWORD PTR [RSP]
            mov QWORD PTR [RSP+128],RBX
            punpcklqdq XMM0,XMM0
            mov RBX,R14
            movaps XMMWORD PTR [RSP+112],XMM0
            je .L_433cc3

            nop
            nop
            nop
            nop
            nop
.L_433c28:

            test RBX,RBX
            je .L_433cb2

            mov R12,QWORD PTR [RBP+8]
            sub R12,QWORD PTR [RBP]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R12
            sar RAX,2
            test RAX,RAX
            je .L_433c7c

            movabs RSI,4611686018427387903
            cmp RAX,RSI
            ja .L_43453e

            mov RDI,R12
.L_433c74:

            call _Znwm@PLT
.L_433c79:

            mov RCX,RAX
.L_433c7c:

            add R12,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R12
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov R12,RAX
            sub R12,RSI
            cmp RAX,RSI
            je .L_433cab

            mov RDI,RCX
            mov RDX,R12
            call memmove@PLT

            mov RCX,RAX
.L_433cab:

            add RCX,R12
            mov QWORD PTR [RBX+8],RCX
.L_433cb2:

            add RBP,24
            add RBX,24
            cmp R13,RBP
            jne .L_433c28
.L_433cc3:

            mov R13,QWORD PTR [R15+8]
            mov RBP,QWORD PTR [R15]
            movabs RDX,-6148914691236517205
            mov QWORD PTR [RSP+120],RBX
            pxor XMM0,XMM0
            xor R14D,R14D
            mov QWORD PTR [RSP+160],0
            mov RBX,R13
            sub RBX,RBP
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            movaps XMMWORD PTR [RSP+144],XMM0
            test RAX,RAX
            je .L_433d2f

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_434514

            mov RDI,RBX
.L_433d20:

            call _Znwm@PLT
.L_433d25:

            mov R13,QWORD PTR [R15+8]
            mov RBP,QWORD PTR [R15]
            mov R14,RAX
.L_433d2f:

            mov QWORD PTR [RSP],R14
            add RBX,R14
            cmp R13,RBP
            movq XMM0,QWORD PTR [RSP]
            mov QWORD PTR [RSP+160],RBX
            punpcklqdq XMM0,XMM0
            mov RBX,R14
            movaps XMMWORD PTR [RSP+144],XMM0
            je .L_433df5

            movabs R15,4611686018427387903
            nop
            nop
            nop
.L_433d68:

            test RBX,RBX
            je .L_433de4

            mov R12,QWORD PTR [RBP+8]
            sub R12,QWORD PTR [RBP]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R12
            sar RAX,2
            test RAX,RAX
            je .L_433dae

            cmp RAX,R15
            ja .L_4344ee

            mov RDI,R12
.L_433da6:

            call _Znwm@PLT
.L_433dab:

            mov RCX,RAX
.L_433dae:

            add R12,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R12
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov R12,RAX
            sub R12,RSI
            cmp RAX,RSI
            je .L_433ddd

            mov RDI,RCX
            mov RDX,R12
            call memmove@PLT

            mov RCX,RAX
.L_433ddd:

            add RCX,R12
            mov QWORD PTR [RBX+8],RCX
.L_433de4:

            add RBP,24
            add RBX,24
            cmp R13,RBP
            jne .L_433d68
.L_433df5:

            mov QWORD PTR [RSP+152],RBX
            xor EBX,EBX
.L_433dff:

            mov R15,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+112]
            mov RSI,QWORD PTR [R15+8]
            mov RDX,QWORD PTR [RAX+RBX*1]
            mov RDI,QWORD PTR [R15]
.L_433e14:

            call .L_4338e0

            mov RAX,QWORD PTR [RSP+144]
            mov RSI,QWORD PTR [R15+8]
            mov RDI,QWORD PTR [R15]
            mov RDX,QWORD PTR [RAX+RBX*1]
            call .L_4338e0
.L_433e31:

            add RBX,24
            cmp RBX,72
            jne .L_433dff

            mov RAX,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [RAX+8]
            cmp R8,8
            jbe .L_434295

            movsxd RSI,DWORD PTR [RAX+24]
            mov RCX,QWORD PTR [RAX]
            pxor XMM5,XMM5
            mov QWORD PTR [RSP+104],0
            mov RDI,RSI
            nop
            nop
            nop
.L_433e68:

            mov RAX,QWORD PTR [RSP+104]
            xor EDX,EDX
            div RSI
            mov R9,RAX
            mov EAX,8
            cdq 
            idiv EDI
            cmp RCX,8
            mov DWORD PTR [RSP+72],EAX
            jbe .L_43427e

            mov EAX,DWORD PTR [RSP+104]
            xor R13D,R13D
            lea R12,QWORD PTR [RIP+.L_64a4a8]
            movsd XMM6,QWORD PTR [RIP+.L_43e980-19256]
            mov DWORD PTR [RSP+84],R9D
            mov R14,R13
            mov DWORD PTR [RSP+80],EAX
            lea RAX,QWORD PTR [RSP+176]
            mov QWORD PTR [RSP+88],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_433ec0:

            mov EAX,DWORD PTR [RSP+80]
            mov RSI,QWORD PTR [RSP+64]
            mov RBP,QWORD PTR [RSP+144]
            mov R11,QWORD PTR [RSP+112]
            mov EBX,DWORD PTR [RSP+84]
            imul EAX,ECX
            mov R10,QWORD PTR [RBP]
            mov R13,QWORD PTR [R11]
            imul EBX,DWORD PTR [RSI+32]
            add EAX,R14D
            movsxd RSI,EAX
            lea EAX,DWORD PTR [RAX+RCX*8]
            add ECX,ECX
            lea R9,QWORD PTR [RSI*4]
            movss XMM1,DWORD PTR [R10+RSI*4]
            subss XMM1,DWORD PTR [R13+RSI*4]
            movsxd RDI,EAX
            sub EAX,ECX
            movss XMM0,DWORD PTR [R13+R9*1+32]
            lea EDX,DWORD PTR [RAX+6]
            subss XMM0,DWORD PTR [R10+R9*1+32]
            add EBX,DWORD PTR [RSP+72]
            sub EAX,6
            movsxd RDX,EDX
            cmp R14,7
            mov DWORD PTR [RSP+76],EBX
            addss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RSP+176],XMM0
            movss XMM0,DWORD PTR [R13+RDI*4]
            subss XMM0,DWORD PTR [R10+RDI*4]
            addss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RSP+200],XMM0
            movss XMM0,DWORD PTR [R13+RDX*4]
            subss XMM0,DWORD PTR [R10+RDX*4]
            addss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RSP+224],XMM0
            movapd XMM0,XMM5
            jbe .L_433f9f

            movsxd RCX,EAX
            movss XMM0,DWORD PTR [R13+RCX*4]
            subss XMM0,DWORD PTR [R10+RCX*4]
            addss XMM1,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM1
.L_433f9f:

            mov RCX,QWORD PTR [RBP+24]
            mov R10,QWORD PTR [R11+24]
            movsd QWORD PTR [RSP+248],XMM0
            cmp R14,7
            movss XMM1,DWORD PTR [RCX+RSI*4]
            movss XMM0,DWORD PTR [R10+R9*1+32]
            subss XMM1,DWORD PTR [R10+RSI*4]
            subss XMM0,DWORD PTR [RCX+R9*1+32]
            addss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RSP+184],XMM0
            movss XMM0,DWORD PTR [R10+RDI*4]
            subss XMM0,DWORD PTR [RCX+RDI*4]
            addss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RSP+208],XMM0
            movss XMM0,DWORD PTR [R10+RDX*4]
            subss XMM0,DWORD PTR [RCX+RDX*4]
            addss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RSP+232],XMM0
            movapd XMM0,XMM5
            jbe .L_434037

            movsxd R13,EAX
            movss XMM0,DWORD PTR [R10+R13*4]
            subss XMM0,DWORD PTR [RCX+R13*4]
            addss XMM1,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM1
.L_434037:

            mov RCX,QWORD PTR [RBP+48]
            mov R10,QWORD PTR [R11+48]
            movsd QWORD PTR [RSP+256],XMM0
            cmp R14,7
            movss XMM1,DWORD PTR [RCX+RSI*4]
            movss XMM0,DWORD PTR [R10+R9*1+32]
            subss XMM1,DWORD PTR [R10+RSI*4]
            subss XMM0,DWORD PTR [RCX+R9*1+32]
            addss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RSP+192],XMM0
            movss XMM0,DWORD PTR [R10+RDI*4]
            subss XMM0,DWORD PTR [RCX+RDI*4]
            addss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RSP+216],XMM0
            movss XMM0,DWORD PTR [R10+RDX*4]
            subss XMM0,DWORD PTR [RCX+RDX*4]
            addss XMM0,XMM1
            cvtss2sd XMM0,XMM0
            movsd QWORD PTR [RSP+240],XMM0
            movapd XMM0,XMM5
            jbe .L_4340cd

            cdqe 
            movss XMM0,DWORD PTR [R10+RAX*4]
            subss XMM0,DWORD PTR [RCX+RAX*4]
            addss XMM1,XMM0
            pxor XMM0,XMM0
            cvtss2sd XMM0,XMM1
.L_4340cd:

            mov RAX,QWORD PTR [RSP+88]
            lea R13,QWORD PTR [RIP+.L_64a400]
            movsd QWORD PTR [RSP+264],XMM0
            movapd XMM8,XMM5
            movapd XMM7,XMM5
            movapd XMM4,XMM5
            lea RBP,QWORD PTR [RAX+96]
            lea R15,QWORD PTR [R13+8]
            mov RBX,RAX
.L_4340fa:

            movsd XMM2,QWORD PTR [RBX+8]
            movsd XMM1,QWORD PTR [RIP+.L_439e28]
            movsd XMM3,QWORD PTR [RIP+.L_439e38]
            mulsd XMM1,XMM2
            mulsd XMM3,QWORD PTR [RBX]
            mulsd XMM2,QWORD PTR [RIP+.L_43e980-19264]
            addsd XMM1,QWORD PTR [RBX+16]
            mulsd XMM1,QWORD PTR [RIP+.L_439e30]
            movzx EAX,BYTE PTR [RIP+.L_64a3e0]
            test AL,AL
            je .L_434370
.L_43413b:

            andpd XMM2,XMMWORD PTR [RIP+.L_43a1f0]
            movsd XMM0,QWORD PTR [RIP+.L_43e980-19248]
            ucomisd XMM0,XMM2
            jbe .L_434483

            cvttsd2si EAX,XMM2
            movsd XMM0,QWORD PTR [RIP+.L_64a4a0]
            cmp EAX,19
            jg .L_434193

            pxor XMM9,XMM9
            movsxd RDX,EAX
            movsd XMM10,QWORD PTR [R13+RDX*8]
            movsd XMM0,QWORD PTR [R15+RDX*8]
            cvtsi2sd XMM9,EAX
            subsd XMM0,XMM10
            subsd XMM2,XMM9
            mulsd XMM0,XMM2
            addsd XMM0,XMM10
.L_434193:

            mulsd XMM3,XMM3
            add RBX,24
            mulsd XMM0,XMM0
            cmp RBP,RBX
            mulsd XMM1,XMM1
            addsd XMM3,XMM5
            addsd XMM0,XMM5
            addsd XMM1,XMM5
            maxsd XMM3,XMM4
            maxsd XMM0,XMM7
            maxsd XMM1,XMM8
            movapd XMM4,XMM3
            movapd XMM7,XMM0
            movapd XMM8,XMM1
            jne .L_4340fa

            mov RDI,QWORD PTR [RSP+96]
            mov EAX,DWORD PTR [RSP+76]
            movsd XMM0,QWORD PTR [RIP+.L_43e980-18560]
            add DWORD PTR [RSP+72],1
            pxor XMM1,XMM1
            mov RDX,QWORD PTR [RDI]
            lea EAX,DWORD PTR [RAX+RAX*2]
            mulsd XMM4,XMM0
            mulsd XMM7,XMM0
            movsxd RCX,EAX
            add EAX,1
            mulsd XMM8,XMM0
            lea RCX,QWORD PTR [RDX+RCX*4]
            cdqe 
            shl RAX,2
            cvtss2sd XMM1,DWORD PTR [RCX]
            addsd XMM4,XMM1
            pxor XMM1,XMM1
            cvtsd2ss XMM4,XMM4
            movss DWORD PTR [RCX],XMM4
            lea RCX,QWORD PTR [RDX+RAX*1]
            lea RAX,QWORD PTR [RDX+RAX*1+4]
            pxor XMM4,XMM4
            cvtss2sd XMM1,DWORD PTR [RCX]
            addsd XMM7,XMM1
            pxor XMM1,XMM1
            cvtsd2ss XMM7,XMM7
            movss DWORD PTR [RCX],XMM7
            cvtss2sd XMM1,DWORD PTR [RAX]
            addsd XMM8,XMM1
            cvtsd2ss XMM4,XMM8
            movss DWORD PTR [RAX],XMM4
            mov RAX,QWORD PTR [RSP+64]
            movsxd RSI,DWORD PTR [RAX+24]
            mov RCX,QWORD PTR [RAX]
            add R14,RSI
            mov RDI,RSI
            lea RAX,QWORD PTR [R14+8]
            cmp RAX,RCX
            jb .L_433ec0

            mov RAX,QWORD PTR [RSP+64]
            mov R8,QWORD PTR [RAX+8]
.L_43427e:

            add QWORD PTR [RSP+104],RSI
            mov RAX,QWORD PTR [RSP+104]
            add RAX,8
            cmp RAX,R8
            jb .L_433e68
.L_434295:

            mov RAX,QWORD PTR [RSP+152]
            mov RDI,QWORD PTR [RSP+144]
            cmp RAX,RDI
            je .L_4342e5

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_4342cd
.L_4342bc:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RDI,RBX
            je .L_4342dd
.L_4342c9:

            add RBX,24
.L_4342cd:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_4342bc

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_4342c9
.L_4342dd:

            mov RDI,QWORD PTR [RSP+144]
.L_4342e5:

            test RDI,RDI
            je .L_4342ef

            call _ZdlPv@PLT
.L_4342ef:

            mov RAX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+112]
            cmp RAX,RDI
            je .L_434336

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_434321
.L_434310:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RDI,RBX
            je .L_434331
.L_43431d:

            add RBX,24
.L_434321:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_434310

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_43431d
.L_434331:

            mov RDI,QWORD PTR [RSP+112]
.L_434336:

            test RDI,RDI
            je .L_434340

            call _ZdlPv@PLT
.L_434340:

            mov RAX,QWORD PTR [RSP+280]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4344a2

            add RSP,296
.L_43435e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434370:

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            movsd QWORD PTR [RSP+56],XMM7
            movsd QWORD PTR [RSP+48],XMM4
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM5
            movsd QWORD PTR [RSP+24],XMM6
            movsd QWORD PTR [RSP+16],XMM2
            movsd QWORD PTR [RSP+8],XMM3
            movsd QWORD PTR [RSP],XMM1
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP]
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movsd XMM6,QWORD PTR [RSP+24]
            movsd XMM5,QWORD PTR [RSP+32]
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+48]
            movsd XMM7,QWORD PTR [RSP+56]
            je .L_43413b

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RIP+.L_64a408]
            mov QWORD PTR [RIP+.L_64a400],0
            nop
            nop
            nop
            nop
            nop
            nop
.L_434400:

            addsd XMM0,XMM6
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM0
            cmp R12,RAX
            jne .L_434400

            lea RDI,QWORD PTR [RIP+.L_64a3e0]
            movsd QWORD PTR [RSP+56],XMM5
            movsd QWORD PTR [RSP+48],XMM6
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+24],XMM1
            movsd QWORD PTR [RSP+16],XMM3
            movsd QWORD PTR [RSP+8],XMM2
            movsd QWORD PTR [RSP],XMM7
            call __cxa_guard_release@PLT

            movsd XMM5,QWORD PTR [RSP+56]
            movsd XMM6,QWORD PTR [RSP+48]
            movsd XMM8,QWORD PTR [RSP+40]
            movsd XMM4,QWORD PTR [RSP+32]
            movsd XMM1,QWORD PTR [RSP+24]
            movsd XMM3,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSP+8]
            movsd XMM7,QWORD PTR [RSP]
            jmp .L_43413b
.L_434483:

            lea RCX,QWORD PTR [RIP+.L_439d40]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_439693]
            mov EDX,234
            call __assert_fail@PLT
.L_4344a2:

            call __stack_chk_fail@PLT
.L_4344a7:

            lea RDI,QWORD PTR [RSP+144]
            mov RBX,RAX
            call .L_4189d0
.L_4344b7:

            lea RDI,QWORD PTR [RSP+112]
            call .L_4189d0
.L_4344c1:

            mov RDI,RBX
.L_4344c4:

            call _Unwind_Resume@PLT
.L_4344c9:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_4344d1:

            cmp R14,RBX
            je .L_4344e9

            mov RDI,QWORD PTR [R14]
            test RDI,RDI
            je .L_4344e3

            call _ZdlPv@PLT
.L_4344e3:

            add R14,24
            jmp .L_4344d1
.L_4344e9:

            call __cxa_rethrow@PLT
.L_4344ee:

            call _ZSt17__throw_bad_allocv@PLT
.L_4344f3:

            mov RBX,RAX
            jmp .L_4344b7
.L_4344f8:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+144]
            test RDI,RDI
            je .L_4344b7

            call _ZdlPv@PLT

            jmp .L_4344b7
.L_434514:

            call _ZSt17__throw_bad_allocv@PLT
.L_434519:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_434521:

            cmp R14,RBX
            je .L_434539

            mov RDI,QWORD PTR [R14]
            test RDI,RDI
            je .L_434533

            call _ZdlPv@PLT
.L_434533:

            add R14,24
            jmp .L_434521
.L_434539:

            call __cxa_rethrow@PLT
.L_43453e:

            call _ZSt17__throw_bad_allocv@PLT
.L_434543:

            call _ZSt17__throw_bad_allocv@PLT
.L_434548:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+112]
            test RDI,RDI
            je .L_4344c1

            call _ZdlPv@PLT

            jmp .L_4344c1
.L_434568:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434570:

            push R15
            push R14
            mov RAX,RDX
            push R13
            push R12
            xor R13D,R13D
            push RBP
            push RBX
            pxor XMM0,XMM0
            sub RSP,72
.L_434588:

            mov R14,QWORD PTR [RAX+8]
            mov RBP,QWORD PTR [RAX]
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+8],RDI
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RDX
            xor EDX,EDX
            mov RBX,R14
            movabs RDX,-6148914691236517205
            mov QWORD PTR [RSP],RSI
            sub RBX,RBP
            mov QWORD PTR [RSP+48],0
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            movaps XMMWORD PTR [RSP+32],XMM0
            test RAX,RAX
            je .L_434605

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_434ebf

            mov RDI,RBX
.L_4345f1:

            call _Znwm@PLT
.L_4345f6:

            mov R13,RAX
            mov RAX,QWORD PTR [RSP+24]
            mov R14,QWORD PTR [RAX+8]
            mov RBP,QWORD PTR [RAX]
.L_434605:

            mov QWORD PTR [RSP+16],R13
            add RBX,R13
            cmp RBP,R14
            movq XMM0,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+48],RBX
            punpcklqdq XMM0,XMM0
            mov RBX,R13
            movaps XMMWORD PTR [RSP+32],XMM0
            je .L_4346d2

            movabs R15,4611686018427387903
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_434640:

            test RBX,RBX
            je .L_4346bc

            mov R12,QWORD PTR [RBP+8]
            sub R12,QWORD PTR [RBP]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R12
            sar RAX,2
            test RAX,RAX
            je .L_434686

            cmp RAX,R15
            ja .L_434f16

            mov RDI,R12
.L_43467e:

            call _Znwm@PLT
.L_434683:

            mov RCX,RAX
.L_434686:

            add R12,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R12
            mov RAX,QWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov R12,RAX
            sub R12,RSI
            cmp RAX,RSI
            je .L_4346b5

            mov RDI,RCX
            mov RDX,R12
            call memmove@PLT

            mov RCX,RAX
.L_4346b5:

            add RCX,R12
            mov QWORD PTR [RBX+8],RCX
.L_4346bc:

            add RBP,24
            add RBX,24
            cmp R14,RBP
            jne .L_434640

            mov R13,QWORD PTR [RSP+32]
.L_4346d2:

            movsxd RAX,DWORD PTR [RSP+8]
            mov R14,QWORD PTR [RSP]
            xor EBP,EBP
            mov QWORD PTR [RSP+40],RBX
            imul R14,RAX
            mov QWORD PTR [RSP+16],RAX
            lea R15,QWORD PTR [R14*4]
.L_4346f3:

            mov EDI,20
            mov R13,QWORD PTR [R13+RBP*1]
.L_4346fd:

            call _Znwm@PLT
.L_434702:

            pxor XMM0,XMM0
            mov RBX,RAX
            mov DWORD PTR [RAX+16],0
            mov R12,-2
            movups XMMWORD PTR [RAX],XMM0
            nop
            nop
            nop
            nop
            nop
            nop
.L_434720:

            pxor XMM1,XMM1
            cvtsi2sd XMM1,R12D
            movsd XMM0,QWORD PTR [RIP+.L_43a108]
            mulsd XMM0,XMM1
            mulsd XMM0,XMM1
            call exp@PLT

            pxor XMM5,XMM5
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RBX+R12*4+8],XMM5
            add R12,1
            cmp R12,3
            jne .L_434720

            test R14,R14
            je .L_434810

            movabs RAX,4611686018427387903
            cmp R14,RAX
            ja .L_434ee6

            mov RDI,R15
.L_434776:

            call _Znwm@PLT
.L_43477b:

            mov R12,RAX
            mov RDX,R15
            xor ESI,ESI
            mov RDI,RAX
            call memset@PLT

            push R12
.L_43478d:

            pxor XMM0,XMM0
            push R13
            mov RSI,QWORD PTR [RSP+16]
            mov R9,RBX
            mov RDI,QWORD PTR [RSP+24]
            mov R8D,2
            mov ECX,5
            mov EDX,1
            call .L_42de70

            push R13
            pxor XMM0,XMM0
            push R12
            mov RDI,QWORD PTR [RSP+32]
            mov R9,RBX
            mov RSI,QWORD PTR [RSP+48]
            mov R8D,2
            mov ECX,5
            mov EDX,1
            call .L_42de70

            add RSP,32
            mov RDI,R12
            call _ZdlPv@PLT
.L_4347eb:

            mov RDI,RBX
            add RBP,24
            call _ZdlPv@PLT

            cmp RBP,72
            je .L_434870

            mov R13,QWORD PTR [RSP+32]
            jmp .L_4346f3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_434810:

            push 0
            push R13
            mov R9,RBX
            mov R12,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+24]
            mov R8D,2
            pxor XMM0,XMM0
            mov ECX,5
            mov EDX,1
            mov RSI,R12
            call .L_42de70

            push R13
            pxor XMM0,XMM0
            push 0
            mov RSI,QWORD PTR [RSP+48]
            mov R9,RBX
            mov R8D,2
            mov ECX,5
            mov EDX,1
            mov RDI,R12
            call .L_42de70

            add RSP,32
.L_434869:

            jmp .L_4347eb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_434870:

            mov RAX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RAX]
            mov R8,QWORD PTR [RAX+8]
            sub R8,RDX
            sar R8,2
            test R8,R8
            je .L_434e52

            mov R11,QWORD PTR [RDI]
            mov R10,QWORD PTR [RDI+24]
            mov R9,QWORD PTR [RDI+48]
            pxor XMM8,XMM8
            movsd XMM14,QWORD PTR [RIP+.L_43e980-18544]
            mov RSI,QWORD PTR [RAX+24]
            movsd XMM13,QWORD PTR [RIP+.L_43e980-18536]
            mov RCX,QWORD PTR [RAX+48]
            movsd XMM12,QWORD PTR [RIP+.L_439e20]
            xor EAX,EAX
            movsd XMM11,QWORD PTR [RIP+.L_43a120]
            movsd XMM10,QWORD PTR [RIP+.L_43a128]
            movsd XMM9,QWORD PTR [RIP+.L_43a130]
            nop
            nop
            nop
            nop
.L_4348e8:

            pxor XMM5,XMM5
            pxor XMM1,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_439f00]
            cvtss2sd XMM5,DWORD PTR [R11+RAX*4]
            pxor XMM0,XMM0
            cvtss2sd XMM1,DWORD PTR [R10+RAX*4]
            movsd XMM3,QWORD PTR [RIP+.L_439f08]
            mulsd XMM2,XMM5
            cvtss2sd XMM0,DWORD PTR [R9+RAX*4]
            mulsd XMM3,XMM1
            movsd XMM4,QWORD PTR [RIP+.L_439f20]
            mulsd XMM4,XMM5
            addsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_439f10]
            mulsd XMM5,QWORD PTR [RIP+.L_439f40]
            mulsd XMM3,XMM0
            addsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_439f28]
            mulsd XMM3,XMM1
            mulsd XMM1,QWORD PTR [RIP+.L_439f48]
            addsd XMM2,QWORD PTR [RIP+.L_43e980-19048]
            addsd XMM4,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_439f30]
            mulsd XMM3,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_439f50]
            addsd XMM5,XMM1
            addsd XMM4,XMM3
            addsd XMM5,XMM0
            pxor XMM0,XMM0
            addsd XMM4,QWORD PTR [RIP+.L_439f38]
            cvtsd2ss XMM0,XMM2
            addsd XMM5,QWORD PTR [RIP+.L_439f58]
            cvtss2sd XMM0,XMM0
            subsd XMM0,XMM14
            divsd XMM0,XMM13
            addsd XMM0,XMM0
            subsd XMM0,XMM12
            movapd XMM6,XMM0
            movapd XMM1,XMM0
            movapd XMM7,XMM0
            mulsd XMM6,XMM8
            addsd XMM6,XMM6
            movapd XMM3,XMM6
            addsd XMM3,XMM11
            mulsd XMM1,XMM3
            addsd XMM1,XMM1
            addsd XMM1,XMM10
            mulsd XMM7,XMM1
            addsd XMM7,XMM7
            subsd XMM7,XMM3
            movapd XMM3,XMM0
            addsd XMM7,XMM9
            mulsd XMM3,XMM7
            addsd XMM3,XMM3
            subsd XMM3,XMM1
            movapd XMM1,XMM0
            addsd XMM3,QWORD PTR [RIP+.L_43a138]
            mulsd XMM1,XMM3
            addsd XMM1,XMM1
            subsd XMM1,XMM7
            addsd XMM1,QWORD PTR [RIP+.L_43a140]
            mulsd XMM1,XMM0
            subsd XMM1,XMM3
            addsd XMM1,QWORD PTR [RIP+.L_43a148]
            ucomisd XMM1,XMM8
            jp .L_434a42

            pxor XMM3,XMM3
            je .L_434ac2
.L_434a42:

            addsd XMM6,QWORD PTR [RIP+.L_43e980-18480]
            movapd XMM3,XMM0
            movapd XMM7,XMM0
            mulsd XMM3,XMM6
            addsd XMM3,XMM3
            addsd XMM3,QWORD PTR [RIP+.L_43e980-18472]
            mulsd XMM7,XMM3
            addsd XMM7,XMM7
            subsd XMM7,XMM6
            movapd XMM6,XMM0
            addsd XMM7,QWORD PTR [RIP+.L_43a160]
            mulsd XMM6,XMM7
            addsd XMM6,XMM6
            subsd XMM6,XMM3
            movapd XMM3,XMM0
            addsd XMM6,QWORD PTR [RIP+.L_43a168]
            mulsd XMM3,XMM6
            addsd XMM3,XMM3
            subsd XMM3,XMM7
            addsd XMM3,QWORD PTR [RIP+.L_43a170]
            mulsd XMM3,XMM0
            subsd XMM3,XMM6
            addsd XMM3,QWORD PTR [RIP+.L_43a178]
            divsd XMM3,XMM1
            cvtsd2ss XMM3,XMM3
            cvtss2sd XMM3,XMM3
.L_434ac2:

            pxor XMM0,XMM0
            divsd XMM3,XMM2
            cvtsd2ss XMM0,XMM4
            cvtss2sd XMM0,XMM0
            subsd XMM0,XMM14
            divsd XMM0,XMM13
            addsd XMM0,XMM0
            subsd XMM0,XMM12
            movapd XMM6,XMM0
            movapd XMM1,XMM0
            movapd XMM7,XMM0
            mulsd XMM6,XMM8
            addsd XMM6,XMM6
            movapd XMM2,XMM6
            addsd XMM2,XMM11
            mulsd XMM1,XMM2
            addsd XMM1,XMM1
            addsd XMM1,XMM10
            mulsd XMM7,XMM1
            addsd XMM7,XMM7
            subsd XMM7,XMM2
            movapd XMM2,XMM0
            addsd XMM7,XMM9
            mulsd XMM2,XMM7
            addsd XMM2,XMM2
            subsd XMM2,XMM1
            movapd XMM1,XMM0
            addsd XMM2,QWORD PTR [RIP+.L_43a138]
            mulsd XMM1,XMM2
            addsd XMM1,XMM1
            subsd XMM1,XMM7
            addsd XMM1,QWORD PTR [RIP+.L_43a140]
            mulsd XMM1,XMM0
            subsd XMM1,XMM2
            addsd XMM1,QWORD PTR [RIP+.L_43a148]
            ucomisd XMM1,XMM8
            jp .L_434b72

            pxor XMM2,XMM2
            je .L_434bf2
.L_434b72:

            addsd XMM6,QWORD PTR [RIP+.L_43e980-18480]
            movapd XMM2,XMM0
            movapd XMM7,XMM0
            mulsd XMM2,XMM6
            addsd XMM2,XMM2
            addsd XMM2,QWORD PTR [RIP+.L_43e980-18472]
            mulsd XMM7,XMM2
            addsd XMM7,XMM7
            subsd XMM7,XMM6
            movapd XMM6,XMM0
            addsd XMM7,QWORD PTR [RIP+.L_43a160]
            mulsd XMM6,XMM7
            addsd XMM6,XMM6
            subsd XMM6,XMM2
            movapd XMM2,XMM0
            addsd XMM6,QWORD PTR [RIP+.L_43a168]
            mulsd XMM2,XMM6
            addsd XMM2,XMM2
            subsd XMM2,XMM7
            addsd XMM2,QWORD PTR [RIP+.L_43a170]
            mulsd XMM2,XMM0
            subsd XMM2,XMM6
            addsd XMM2,QWORD PTR [RIP+.L_43a178]
            divsd XMM2,XMM1
            cvtsd2ss XMM2,XMM2
            cvtss2sd XMM2,XMM2
.L_434bf2:

            pxor XMM0,XMM0
            divsd XMM2,XMM4
            cvtsd2ss XMM0,XMM5
            cvtss2sd XMM0,XMM0
            subsd XMM0,XMM14
            divsd XMM0,XMM13
            addsd XMM0,XMM0
            subsd XMM0,XMM12
            movapd XMM6,XMM0
            movapd XMM1,XMM0
            movapd XMM15,XMM0
            mulsd XMM6,XMM8
            movapd XMM7,XMM0
            addsd XMM6,XMM6
            movapd XMM4,XMM6
            addsd XMM4,XMM11
            mulsd XMM1,XMM4
            addsd XMM1,XMM1
            addsd XMM1,XMM10
            mulsd XMM15,XMM1
            addsd XMM15,XMM15
            subsd XMM15,XMM4
            addsd XMM15,XMM9
            mulsd XMM7,XMM15
            addsd XMM7,XMM7
            subsd XMM7,XMM1
            movapd XMM1,XMM0
            addsd XMM7,QWORD PTR [RIP+.L_43a138]
            mulsd XMM1,XMM7
            movapd XMM4,XMM1
            addsd XMM4,XMM1
            subsd XMM4,XMM15
            addsd XMM4,QWORD PTR [RIP+.L_43a140]
            mulsd XMM4,XMM0
            subsd XMM4,XMM7
            addsd XMM4,QWORD PTR [RIP+.L_43a148]
            ucomisd XMM4,XMM8
            jp .L_434cac

            pxor XMM1,XMM1
            je .L_434d2c
.L_434cac:

            addsd XMM6,QWORD PTR [RIP+.L_43e980-18480]
            movapd XMM1,XMM0
            movapd XMM7,XMM0
            mulsd XMM1,XMM6
            addsd XMM1,XMM1
            addsd XMM1,QWORD PTR [RIP+.L_43e980-18472]
            mulsd XMM7,XMM1
            addsd XMM7,XMM7
            subsd XMM7,XMM6
            movapd XMM6,XMM0
            addsd XMM7,QWORD PTR [RIP+.L_43a160]
            mulsd XMM6,XMM7
            addsd XMM6,XMM6
            subsd XMM6,XMM1
            movapd XMM1,XMM0
            addsd XMM6,QWORD PTR [RIP+.L_43a168]
            mulsd XMM1,XMM6
            addsd XMM1,XMM1
            subsd XMM1,XMM7
            addsd XMM1,QWORD PTR [RIP+.L_43a170]
            mulsd XMM1,XMM0
            subsd XMM1,XMM6
            addsd XMM1,QWORD PTR [RIP+.L_43a178]
            divsd XMM1,XMM4
            cvtsd2ss XMM1,XMM1
            cvtss2sd XMM1,XMM1
.L_434d2c:

            pxor XMM4,XMM4
            pxor XMM7,XMM7
            movsd XMM0,QWORD PTR [RIP+.L_439f00]
            cvtss2sd XMM4,DWORD PTR [RDX+RAX*4]
            pxor XMM6,XMM6
            cvtss2sd XMM7,DWORD PTR [RSI+RAX*4]
            divsd XMM1,XMM5
            cvtss2sd XMM6,DWORD PTR [RCX+RAX*4]
            movsd XMM15,QWORD PTR [RIP+.L_439f08]
            mulsd XMM0,XMM4
            mulsd XMM15,XMM7
            pxor XMM5,XMM5
            addsd XMM0,XMM15
            movsd XMM15,QWORD PTR [RIP+.L_439f10]
            mulsd XMM15,XMM6
            addsd XMM0,XMM15
            movsd XMM15,QWORD PTR [RIP+.L_439f28]
            mulsd XMM15,XMM7
            mulsd XMM7,QWORD PTR [RIP+.L_439f48]
            addsd XMM0,QWORD PTR [RIP+.L_43e980-19048]
            mulsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_439f20]
            mulsd XMM3,XMM4
            mulsd XMM4,QWORD PTR [RIP+.L_439f40]
            addsd XMM3,XMM15
            movsd XMM15,QWORD PTR [RIP+.L_439f30]
            mulsd XMM15,XMM6
            mulsd XMM6,QWORD PTR [RIP+.L_439f50]
            addsd XMM4,XMM7
            addsd XMM3,XMM15
            movsd XMM15,QWORD PTR [RIP+.L_439e80]
            addsd XMM4,XMM6
            addsd XMM3,QWORD PTR [RIP+.L_439f38]
            addsd XMM4,QWORD PTR [RIP+.L_439f58]
            mulsd XMM2,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_439e78]
            mulsd XMM1,XMM4
            mulsd XMM3,XMM0
            mulsd XMM15,XMM2
            mulsd XMM0,QWORD PTR [RIP+.L_439e88]
            cvtsd2ss XMM5,XMM1
            mulsd XMM2,QWORD PTR [RIP+.L_439e90]
            subsd XMM3,XMM15
            cvtsd2ss XMM3,XMM3
            movss DWORD PTR [RDX+RAX*4],XMM3
            addsd XMM2,XMM0
            cvtsd2ss XMM2,XMM2
            movss DWORD PTR [RSI+RAX*4],XMM2
            movss DWORD PTR [RCX+RAX*4],XMM5
            add RAX,1
            cmp RAX,R8
            jne .L_4348e8
.L_434e52:

            mov RAX,QWORD PTR [RSP+40]
            cmp RAX,RDI
            je .L_434e96

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_434e81
          .byte 0x66
          .byte 0x90
.L_434e70:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RDI,RBX
            je .L_434e91
.L_434e7d:

            add RBX,24
.L_434e81:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_434e70

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_434e7d
.L_434e91:

            mov RDI,QWORD PTR [RSP+32]
.L_434e96:

            test RDI,RDI
            je .L_434ea0

            call _ZdlPv@PLT
.L_434ea0:

            mov RAX,QWORD PTR [RSP+56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_434ec4

            add RSP,72
.L_434eb4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_434ebf:

            call _ZSt17__throw_bad_allocv@PLT
.L_434ec4:

            call __stack_chk_fail@PLT
.L_434ec9:

            mov RDI,RBX
            mov RBP,RAX
            call _ZdlPv@PLT
.L_434ed4:

            lea RDI,QWORD PTR [RSP+32]
            call .L_4189d0

            mov RDI,RBP
            call _Unwind_Resume@PLT
.L_434ee6:

            call _ZSt17__throw_bad_allocv@PLT
.L_434eeb:

            mov RBP,RAX
            jmp .L_434ed4
.L_434ef0:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_434ef8:

            cmp R13,RBX
            je .L_434f11

            mov RDI,QWORD PTR [R13]
            test RDI,RDI
            je .L_434f0b

            call _ZdlPv@PLT
.L_434f0b:

            add R13,24
            jmp .L_434ef8
.L_434f11:

            call __cxa_rethrow@PLT
.L_434f16:

            call _ZSt17__throw_bad_allocv@PLT
.L_434f1b:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            je .L_434f32

            call _ZdlPv@PLT
.L_434f32:

            mov RDI,RBX
.L_434f35:

            call _Unwind_Resume@PLT
.L_434f3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_434f40:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,104
.L_434f51:

            mov RSI,QWORD PTR [RDI+32]
            mov RBP,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+48],RDI
            imul RSI,QWORD PTR [RDI+40]
            mov RAX,QWORD PTR [RBP]
            mov RDI,RAX
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RBP+8]
            sub RAX,RDI
            sar RAX,2
            cmp RSI,RAX
            ja .L_4351bf

            jae .L_434f90

            lea RAX,QWORD PTR [RDI+RSI*4]
            mov QWORD PTR [RBP+8],RAX
.L_434f90:

            mov RSI,QWORD PTR [RSP+48]
            mov EDI,8
            mov EAX,DWORD PTR [RSI+24]
            mov R11,QWORD PTR [RSI+8]
            sub EDI,EAX
            mov QWORD PTR [RSP+56],R11
            movsxd RDI,EDI
            cmp R11,RDI
            jbe .L_4351b0

            mov RSI,QWORD PTR [RSI]
            movsxd R14,EAX
            cmp RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            jae .L_4351b0

            lea RAX,QWORD PTR [RSI*4]
            lea R10,QWORD PTR [RSI+RSI*2]
            mov QWORD PTR [RSP+32],0
            imul RAX,R14
            shl R10,2
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RBP]
            mov QWORD PTR [RSP],RAX
            mov RAX,QWORD PTR [RCX]
            mov QWORD PTR [RSP+88],RAX
            mov RAX,QWORD PTR [R8]
            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [R9]
            mov QWORD PTR [RSP+24],RAX
            mov RAX,QWORD PTR [RBX]
            mov QWORD PTR [RSP+72],RAX
            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [RSP+80],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_435020:

            mov RAX,QWORD PTR [RSP+48]
            mov R13,QWORD PTR [RSP+32]
            xor ECX,ECX
            mov QWORD PTR [RSP+40],R10
            imul R13,QWORD PTR [RAX+32]
            mov RAX,QWORD PTR [RSP+72]
            mov R12,QWORD PTR [RAX]
            mov RBP,QWORD PTR [RAX+24]
            mov RBX,QWORD PTR [RAX+48]
            mov RAX,QWORD PTR [RSP+80]
            add R12,R10
            add RBP,R10
            mov R11,QWORD PTR [RAX]
            mov R9,QWORD PTR [RAX+24]
            add RBX,R10
            mov R8,QWORD PTR [RAX+48]
            add R11,R10
            add R9,R10
            add R8,R10
            mov R10,QWORD PTR [RSP+88]
            nop
            nop
            nop
.L_435070:

            lea RAX,QWORD PTR [RCX+R13*1]
            xor EDX,EDX
            pxor XMM4,XMM4
            div R14
            pxor XMM3,XMM3
            mov RDX,QWORD PTR [RSP+16]
            cvtss2sd XMM4,DWORD PTR [R11+RCX*4+12]
            pxor XMM5,XMM5
            pxor XMM2,XMM2
            pxor XMM1,XMM1
            cvtss2sd XMM5,DWORD PTR [R9+RCX*4+12]
            pxor XMM0,XMM0
            lea RSI,QWORD PTR [RAX+RAX*2]
            cvtss2sd XMM2,DWORD PTR [R12+RCX*4+12]
            cvtss2sd XMM1,DWORD PTR [RBP+RCX*4+12]
            pxor XMM6,XMM6
            shl RSI,2
            cvtss2sd XMM0,DWORD PTR [RBX+RCX*4+12]
            lea R15,QWORD PTR [R10+RSI*1]
            add RDX,RSI
            add RSI,QWORD PTR [RSP+24]
            cvtss2sd XMM3,DWORD PTR [R15]
            mulsd XMM4,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [R15+4]
            mulsd XMM3,XMM5
            pxor XMM5,XMM5
            addsd XMM3,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM5,DWORD PTR [R8+RCX*4+12]
            add RCX,R14
            cvtss2sd XMM4,DWORD PTR [R15+8]
            mulsd XMM4,XMM5
            addsd XMM4,XMM3
            pxor XMM3,XMM3
            cvtss2sd XMM3,DWORD PTR [RDX]
            movapd XMM5,XMM3
            pxor XMM3,XMM3
            mulsd XMM5,XMM2
            cvtss2sd XMM3,DWORD PTR [RDX+4]
            mulsd XMM3,XMM1
            addsd XMM3,XMM5
            pxor XMM5,XMM5
            cvtss2sd XMM5,DWORD PTR [RDX+8]
            mov RDX,QWORD PTR [RSP]
            mulsd XMM5,XMM0
            addsd XMM3,XMM5
            addsd XMM3,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RSI]
            mulsd XMM2,XMM4
            pxor XMM4,XMM4
            cvtss2sd XMM4,DWORD PTR [RSI+4]
            mulsd XMM1,XMM4
            addsd XMM1,XMM2
            pxor XMM2,XMM2
            cvtss2sd XMM2,DWORD PTR [RSI+8]
            mulsd XMM0,XMM2
            addsd XMM0,XMM1
            addsd XMM0,XMM3
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [RDX+RAX*4],XMM6
            lea RAX,QWORD PTR [RCX+RDI*1]
            cmp QWORD PTR [RSP+8],RAX
            ja .L_435070

            add QWORD PTR [RSP+32],R14
            mov R10,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+32]
            add R10,QWORD PTR [RSP+64]
            add RAX,RDI
            cmp QWORD PTR [RSP+56],RAX
            ja .L_435020
.L_4351b0:

            add RSP,104
.L_4351b4:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4351bf:

            sub RSI,RAX
            mov RDI,RBP
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],R8
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP],RDX
            call .L_439730

            mov RDX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            mov R9,QWORD PTR [RSP+24]
            jmp .L_434f90
.L_4351f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435200:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            movapd XMM3,XMM0
            sub RSP,104
.L_435218:

            movsd QWORD PTR [RSP+56],XMM0
            addsd XMM0,XMM0
            mov QWORD PTR [RSP+48],RDX
            movsd QWORD PTR [RSP+32],XMM1
            movsd XMM1,QWORD PTR [RIP+.L_439f68]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            mulsd XMM0,XMM3
            andpd XMM3,XMMWORD PTR [RIP+.L_43a1f0]
            divsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43a180]
            mulsd XMM0,XMM3
            movsd QWORD PTR [RSP+8],XMM1
            cvttsd2si EBX,XMM0
            cmp EBX,1
            jle .L_4354d8

            lea EAX,DWORD PTR [RBX+RBX*1+1]
            mov R14D,EBX
            neg R14D
            cdqe 
            lea RDI,QWORD PTR [RAX*4]
            mov QWORD PTR [RSP+24],RAX
.L_43528d:

            call _Znwm@PLT
.L_435292:

            mov QWORD PTR [RSP+16],RAX
            mov R15,RAX
.L_43529a:

            mov RAX,QWORD PTR [RSP+24]
            xor ESI,ESI
            mov RDI,R15
            movsxd R14,R14D
            lea RDX,QWORD PTR [RAX*4]
            call memset@PLT

            movsxd RAX,EBX
            lea R13,QWORD PTR [R15+RAX*4]
            mov QWORD PTR [RSP+40],RAX
.L_4352c0:

            pxor XMM0,XMM0
            movsd XMM1,QWORD PTR [RSP+8]
            cvtsi2sd XMM0,R14D
            mulsd XMM1,XMM0
            mulsd XMM0,XMM1
            call exp@PLT

            pxor XMM2,XMM2
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [R13+R14*4],XMM2
            add R14,1
            cmp EBX,R14D
            jge .L_4352c0

            movsd XMM0,QWORD PTR [RSP+56]
            mov EBX,1
            divsd XMM0,QWORD PTR [RIP+.L_43a188]
            cvttsd2si EAX,XMM0
            test EAX,EAX
            mov DWORD PTR [RSP+8],EAX
            cmovg EBX,EAX
            xor EDX,EDX
            movsxd RBX,EBX
            lea RAX,QWORD PTR [RBX+RBP*1-1]
            div RBX
            movsxd R14,EAX
            mov QWORD PTR [RSP+56],RAX
            mov R13,R14
            imul R13,R12
            test R13,R13
            je .L_435517

            movabs RAX,4611686018427387903
            cmp R13,RAX
            ja .L_43555a

            shl R13,2
            mov RDI,R13
.L_435353:

            call _Znwm@PLT
.L_435358:

            mov RDX,R13
            xor ESI,ESI
            mov RDI,RAX
            mov R15,RAX
            call memset@PLT
.L_435368:

            push R15
.L_43536a:

            push QWORD PTR [RSP+56]
            mov RDI,RBP
            mov R9,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+56]
            mov RDX,RBX
            mov RCX,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+48]
            mov RSI,R12
            call .L_42de70

            pxor XMM0,XMM0
            mov QWORD PTR [RSP+96],0
            movaps XMMWORD PTR [RSP+80],XMM0
            pop RDI
            pop R8
            cmp DWORD PTR [RSP+8],1
            jle .L_4354a0

            lea RAX,QWORD PTR [RBX+R12*1-1]
            xor EDX,EDX
            div RBX
            imul EAX,DWORD PTR [RSP+56]
            movsxd RSI,EAX
            xor EAX,EAX
            test RSI,RSI
            jne .L_435503
.L_4353ce:

            push RAX
            push R15
            mov RSI,R14
            mov R9,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+56]
            mov RDI,R12
            mov RCX,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+48]
            mov RDX,RBX
            call .L_42de70

            pop RCX
            test R12,R12
            pop RSI
.L_4353f9:

            mov RDI,QWORD PTR [RSP+64]
            je .L_43545b

            test RBP,RBP
            je .L_43545b

            mov R8,QWORD PTR [RSP+48]
            lea R10,QWORD PTR [RBP*4]
            xor R9D,R9D
            nop
            nop
            nop
.L_435418:

            mov RAX,R9
            xor EDX,EDX
            xor ECX,ECX
            div RBX
            imul RAX,R14
            mov RSI,RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435430:

            mov RAX,RCX
            xor EDX,EDX
            div RBX
            add RAX,RSI
            movss XMM0,DWORD PTR [RDI+RAX*4]
            movss DWORD PTR [R8+RCX*4],XMM0
            add RCX,1
            cmp RBP,RCX
            jne .L_435430

            add R9,1
            add R8,R10
            cmp R12,R9
            jne .L_435418
.L_43545b:

            test RDI,RDI
            je .L_435465

            call _ZdlPv@PLT
.L_435465:

            test R15,R15
            je .L_435472

            mov RDI,R15
            call _ZdlPv@PLT
.L_435472:

            mov RDI,QWORD PTR [RSP+16]
            call _ZdlPv@PLT

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_435555

            add RSP,104
.L_435494:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_4354a0:

            push QWORD PTR [RSP+48]
            push R15
            mov EDX,1
            mov R9,QWORD PTR [RSP+32]
            mov R8,QWORD PTR [RSP+56]
            mov RDI,R12
            mov RCX,QWORD PTR [RSP+40]
            movsd XMM0,QWORD PTR [RSP+48]
            mov RSI,R14
            call .L_42de70

            mov RDI,QWORD PTR [RSP+80]
            pop RAX
            pop RDX
            jmp .L_43545b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4354d8:

            mov EDI,12
            mov R14D,4294967295
            mov EBX,1
.L_4354e8:

            call _Znwm@PLT
.L_4354ed:

            mov QWORD PTR [RSP+24],3
            mov QWORD PTR [RSP+16],RAX
            mov R15,RAX
            jmp .L_43529a
.L_435503:

            lea RDI,QWORD PTR [RSP+64]
.L_435508:

            call .L_439730
.L_43550d:

            mov RAX,QWORD PTR [RSP+64]
            jmp .L_4353ce
.L_435517:

            xor R15D,R15D
            jmp .L_435368
.L_43551f:

            mov RDI,QWORD PTR [RSP+64]
            mov RBX,RAX
            test RDI,RDI
            je .L_435531

            call _ZdlPv@PLT
.L_435531:

            test R15,R15
            je .L_43553e

            mov RDI,R15
            call _ZdlPv@PLT
.L_43553e:

            mov RDI,QWORD PTR [RSP+16]
            call _ZdlPv@PLT

            mov RDI,RBX
.L_43554b:

            call _Unwind_Resume@PLT
.L_435550:

            mov RBX,RAX
            jmp .L_43553e
.L_435555:

            call __stack_chk_fail@PLT
.L_43555a:

            call _ZSt17__throw_bad_allocv@PLT
.L_43555f:

            nop
.L_435560:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBX,RDX
            pxor XMM0,XMM0
            sub RSP,216
.L_43557b:

            mov QWORD PTR [RSP+112],RSI
            mov QWORD PTR [RSP+56],RCX
            imul RSI,RDI
            mov QWORD PTR [RSP+192],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            mov EAX,8
            sub RAX,RDX
            mov QWORD PTR [RSP+40],RAX
            shr RAX,1
            test RSI,RSI
            mov QWORD PTR [RSP+144],RAX
            movaps XMMWORD PTR [RSP+176],XMM0
            je .L_4361c4

            movabs RAX,4611686018427387903
            mov RBP,RSI
            cmp RSI,RAX
            ja .L_4361fb

            shl RBP,2
            mov RDI,RBP
.L_4355ee:

            call _Znwm@PLT
.L_4355f3:

            lea R12,QWORD PTR [RAX+RBP*1]
            mov RDX,RBP
            xor ESI,ESI
            mov RDI,RAX
            mov QWORD PTR [RSP+176],RAX
            mov QWORD PTR [RSP+192],R12
            call memset@PLT
.L_435614:

            mov RDI,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+112]
            lea RAX,QWORD PTR [R13+RBX*1-1]
            xor EDX,EDX
            mov QWORD PTR [RSP+184],R12
            div RBX
            cmp RDI,RSI
            jae .L_43588f

            cmp RDI,R13
            jae .L_43588f

            movsxd RDI,DWORD PTR [RSP+144]
            mov RSI,RBX
            lea R12,QWORD PTR [R13*4]
            imul RSI,R13
            pxor XMM4,XMM4
            imul RAX,RBX
            movsd XMM2,QWORD PTR [RIP+.L_43a190]
            lea R14,QWORD PTR [RBX-1]
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+128],RDI
            movss XMM3,DWORD PTR [RIP+.L_43a2d0]
            mov QWORD PTR [RSP+120],RSI
            imul RDI,R13
            mov QWORD PTR [RSP+136],RAX
            mov QWORD PTR [RSP+88],RDI
.L_4356a5:

            mov RDI,QWORD PTR [RSP+128]
            mov RAX,QWORD PTR [RSP+80]
            xor EBP,EBP
            add RAX,RDI
            imul RAX,R13
            add RAX,RDI
            mov QWORD PTR [RSP+64],RAX
            mov RAX,QWORD PTR [RSP+88]
            add RAX,RDI
            mov QWORD PTR [RSP+72],RAX
.L_4356d0:

            mov RAX,QWORD PTR [RSP+48]
            xor EDX,EDX
            mov RSI,QWORD PTR [RSP+56]
            pxor XMM1,XMM1
            add RAX,RBP
            div RBX
            mov RDX,QWORD PTR [RSI]
            movss XMM0,DWORD PTR [RDX+RAX*4]
            cvtss2sd XMM1,XMM0
            ucomisd XMM2,XMM1
            jbe .L_436108

            movaps XMM1,XMM0
            mulss XMM1,XMM3
.L_435703:

            test RBX,RBX
            je .L_435847

            mov RAX,QWORD PTR [RSP+72]
            mov R8,QWORD PTR [RSP+176]
            xor R10D,R10D
            movaps XMM0,XMM1
            mov R15D,5
            add RAX,RBP
            shufps XMM0,XMM0,0
            lea R11,QWORD PTR [R8+RAX*4]
            mov RAX,QWORD PTR [RSP+64]
            lea RSI,QWORD PTR [RBP+RAX*1]
            nop
            nop
            nop
            nop
            nop
            nop
.L_435740:

            mov RAX,R11
            shr RAX,2
            neg RAX
            and EAX,3
            lea RDX,QWORD PTR [RAX+3]
            cmp RDX,5
            cmovb RDX,R15
            xor ECX,ECX
            cmp R14,RDX
            jb .L_4357d0

            test RAX,RAX
            je .L_435794

            cmp RAX,1
            movss DWORD PTR [R8+RSI*4],XMM1
            mov ECX,1
            je .L_435794

            cmp RAX,2
            movss DWORD PTR [R8+RSI*4+4],XMM1
            mov ECX,2
            je .L_435794

            movss DWORD PTR [R8+RSI*4+8],XMM1
            mov ECX,3
.L_435794:

            mov R9,RBX
            sub R9,RAX
            add RAX,RSI
            mov RDI,R9
            lea RDX,QWORD PTR [R8+RAX*4]
            xor EAX,EAX
            shr RDI,2
            nop
            nop
            nop
            nop
            nop
            nop
.L_4357b0:

            add RAX,1
            add RDX,16
            movaps XMMWORD PTR [RDX-16],XMM0
            cmp RDI,RAX
            ja .L_4357b0

            mov RAX,R9
            and RAX,-4
            add RCX,RAX
            cmp R9,RAX
            je .L_435834
.L_4357d0:

            lea RAX,QWORD PTR [RCX+RSI*1]
            movss DWORD PTR [R8+RAX*4],XMM1
            lea RAX,QWORD PTR [RCX+1]
            cmp RBX,RAX
            jbe .L_435834

            add RAX,RSI
            movss DWORD PTR [R8+RAX*4],XMM1
            lea RAX,QWORD PTR [RCX+2]
            cmp RBX,RAX
            jbe .L_435834

            add RAX,RSI
            movss DWORD PTR [R8+RAX*4],XMM1
            lea RAX,QWORD PTR [RCX+3]
            cmp RBX,RAX
            jbe .L_435834

            add RAX,RSI
            movss DWORD PTR [R8+RAX*4],XMM1
            lea RAX,QWORD PTR [RCX+4]
            cmp RBX,RAX
            jbe .L_435834

            add RCX,5
            add RAX,RSI
            cmp RBX,RCX
            movss DWORD PTR [R8+RAX*4],XMM1
            jbe .L_435834

            add RCX,RSI
            movss DWORD PTR [R8+RCX*4],XMM1
.L_435834:

            add R10,1
            add R11,R12
            add RSI,R13
            cmp RBX,R10
            jne .L_435740
.L_435847:

            mov RAX,QWORD PTR [RSP+40]
            add RBP,RBX
            add RAX,RBP
            cmp R13,RAX
            ja .L_4356d0

            add QWORD PTR [RSP+80],RBX
            mov RAX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+80]
            mov RDI,QWORD PTR [RSP+120]
            add QWORD PTR [RSP+88],RDI
            mov RDI,QWORD PTR [RSP+136]
            add QWORD PTR [RSP+48],RDI
            add RAX,RSI
            cmp QWORD PTR [RSP+112],RAX
            ja .L_4356a5
.L_43588f:

            mov RDI,QWORD PTR [RSP+56]
            lea RSI,QWORD PTR [RSP+176]
.L_43589c:

            call .L_414440
.L_4358a1:

            mov RDI,QWORD PTR [RSP+176]
            test RDI,RDI
            je .L_4358b3

            call _ZdlPv@PLT
.L_4358b3:

            mov EAX,8
            mov RSI,QWORD PTR [RSP+112]
            sub EAX,EBX
            mov RBX,R13
            cdqe 
            sub RSI,RAX
            sub RBX,RAX
            mov RAX,RSI
            mov QWORD PTR [RSP+40],RSI
            imul RAX,RBX
            test RAX,RAX
            je .L_4361bd

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_4361fb

            lea R12,QWORD PTR [RAX*4]
            mov RDI,R12
.L_4358fd:

            call _Znwm@PLT
.L_435902:

            mov RDX,R12
            xor ESI,ESI
            mov RDI,RAX
            mov RBP,RAX
            call memset@PLT
.L_435912:

            cmp QWORD PTR [RSP+40],0
            je .L_435b09

            test RBX,RBX
            je .L_435b09

            lea RAX,QWORD PTR [R13*4]
            movsxd R14,DWORD PTR [RSP+144]
            mov RDI,RBP
            xor R10D,R10D
            xor R15D,R15D
            lea R8,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [RBX*4]
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [R13+1]
            imul R8,R14
            imul R14,RAX
            mov RAX,QWORD PTR [RSP+56]
            mov R11,QWORD PTR [RAX]
.L_43596a:

            lea RAX,QWORD PTR [R11+R8*1+16]
            lea RCX,QWORD PTR [R11+R8*1]
            lea RDX,QWORD PTR [R10*4]
            cmp RDI,RAX
            lea RAX,QWORD PTR [RDI+16]
            setae SIL
            cmp RCX,RAX
            setae AL
            or SIL,AL
            je .L_4361a3

            cmp RBX,12
            jbe .L_4361a3

            mov RAX,RCX
            xor ESI,ESI
            shr RAX,2
            neg RAX
            and EAX,3
            je .L_4359eb

            movss XMM0,DWORD PTR [RCX]
            cmp RAX,1
            mov ESI,1
            movss DWORD PTR [RDI],XMM0
            je .L_4359eb

            movss XMM0,DWORD PTR [R11+R8*1+4]
            cmp RAX,2
            mov ESI,2
            movss DWORD PTR [RDI+4],XMM0
            je .L_4359eb

            movss XMM0,DWORD PTR [R11+R8*1+8]
            mov ESI,3
            movss DWORD PTR [RDI+8],XMM0
.L_4359eb:

            mov RCX,RBX
            sub RCX,RAX
            shl RAX,2
            lea R9,QWORD PTR [RAX+R8*1]
            mov R12,RCX
            add RAX,RDX
            mov QWORD PTR [RSP+72],RCX
            shr R12,2
            lea RCX,QWORD PTR [RBP+RAX*1]
            add R9,R11
            xor EAX,EAX
            xor EDX,EDX
            nop
            nop
            nop
            nop
.L_435a18:

            movaps XMM0,XMMWORD PTR [R9+RAX*1]
            add RDX,1
            movups XMMWORD PTR [RCX+RAX*1],XMM0
            add RAX,16
            cmp R12,RDX
            ja .L_435a18

            mov RCX,QWORD PTR [RSP+72]
            mov RAX,RCX
            and RAX,-4
            add RSI,RAX
            cmp RCX,RAX
            je .L_435aea

            lea RAX,QWORD PTR [RSI+R14*1]
            movss XMM0,DWORD PTR [R11+RAX*4]
            lea RAX,QWORD PTR [RSI+R10*1]
            movss DWORD PTR [RBP+RAX*4],XMM0
            lea RAX,QWORD PTR [RSI+1]
            cmp RBX,RAX
            jbe .L_435aea

            lea RDX,QWORD PTR [RAX+R14*1]
            add RAX,R10
            movss XMM0,DWORD PTR [R11+RDX*4]
            movss DWORD PTR [RBP+RAX*4],XMM0
            lea RAX,QWORD PTR [RSI+2]
            cmp RBX,RAX
            jbe .L_435aea

            lea RDX,QWORD PTR [RAX+R14*1]
            add RAX,R10
            movss XMM0,DWORD PTR [R11+RDX*4]
            movss DWORD PTR [RBP+RAX*4],XMM0
            lea RAX,QWORD PTR [RSI+3]
            cmp RBX,RAX
            jbe .L_435aea

            lea RDX,QWORD PTR [RAX+R14*1]
            add RAX,R10
            movss XMM0,DWORD PTR [R11+RDX*4]
            movss DWORD PTR [RBP+RAX*4],XMM0
            lea RAX,QWORD PTR [RSI+4]
            cmp RBX,RAX
            jbe .L_435aea

            lea RDX,QWORD PTR [RAX+R14*1]
            add RSI,5
            add RAX,R10
            cmp RBX,RSI
            movss XMM0,DWORD PTR [R11+RDX*4]
            movss DWORD PTR [RBP+RAX*4],XMM0
            jbe .L_435aea

            lea RAX,QWORD PTR [RSI+R14*1]
            add RSI,R10
            movss XMM0,DWORD PTR [R11+RAX*4]
            movss DWORD PTR [RBP+RSI*4],XMM0
.L_435aea:

            add R15,1
            add R8,QWORD PTR [RSP+48]
            add RDI,QWORD PTR [RSP+64]
            add R14,R13
            add R10,RBX
            cmp QWORD PTR [RSP+40],R15
            jne .L_43596a
.L_435b09:

            mov R15,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RIP+.L_43a198]
            movsd XMM0,QWORD PTR [RIP+.L_43a1a0]
            mov RDX,RBP
            mov RDI,RBX
            mov RSI,R15
.L_435b27:

            call .L_435200
.L_435b2c:

            mov RAX,QWORD PTR [RSP+56]
            test R15,R15
            mov RDI,QWORD PTR [RAX]
            je .L_435ed5

            test RBX,RBX
            je .L_435ed5

            lea RAX,QWORD PTR [RBX*4]
            movsxd R15,DWORD PTR [RSP+144]
            mov QWORD PTR [RSP+80],R13
            movsd XMM5,QWORD PTR [RIP+.L_43a1a8]
            mov R10,RBP
            mov QWORD PTR [RSP+72],RAX
            lea RAX,QWORD PTR [R13*4]
            xor R14D,R14D
            movapd XMM3,XMMWORD PTR [RIP+.L_43a2a0]
            lea RCX,QWORD PTR [RAX+4]
            mov QWORD PTR [RSP+64],RAX
            lea RAX,QWORD PTR [R13+1]
            movapd XMM4,XMM5
            imul RCX,R15
            movapd XMM6,XMM5
            imul R15,RAX
            xor EAX,EAX
            mov R13,RAX
            add RCX,RDI
.L_435ba3:

            mov RAX,RCX
            lea RSI,QWORD PTR [R14*4]
            sub RAX,RDI
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [R10+16]
            cmp RCX,RAX
            lea RAX,QWORD PTR [RCX+16]
            setae DL
            cmp R10,RAX
            setae AL
            or DL,AL
            je .L_436167

            cmp RBX,6
            jbe .L_436167

            mov RDX,RCX
            xor R9D,R9D
            shr RDX,2
            neg RDX
            and EDX,3
            je .L_435c91

            pxor XMM0,XMM0
            cmp RDX,1
            mov R9D,1
            pxor XMM2,XMM2
            cvtss2sd XMM0,DWORD PTR [R10]
            movapd XMM1,XMM0
            pxor XMM0,XMM0
            mulsd XMM1,XMM6
            cvtss2sd XMM0,DWORD PTR [RCX]
            addsd XMM0,XMM1
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [RCX],XMM2
            je .L_435c91

            pxor XMM0,XMM0
            cmp RDX,2
            mov R9D,2
            pxor XMM7,XMM7
            cvtss2sd XMM0,DWORD PTR [R10+4]
            movapd XMM1,XMM0
            pxor XMM0,XMM0
            mulsd XMM1,XMM6
            cvtss2sd XMM0,DWORD PTR [RCX+4]
            addsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RCX+4],XMM7
            je .L_435c91

            pxor XMM0,XMM0
            mov R9D,3
            pxor XMM7,XMM7
            cvtss2sd XMM0,DWORD PTR [R10+8]
            movapd XMM1,XMM0
            pxor XMM0,XMM0
            mulsd XMM1,XMM6
            cvtss2sd XMM0,DWORD PTR [RCX+8]
            addsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RCX+8],XMM7
.L_435c91:

            mov RAX,RBX
            sub RAX,RDX
            mov R12,RAX
            mov QWORD PTR [RSP+88],RAX
            lea RAX,QWORD PTR [RDX*4]
            add RDX,R15
            shr R12,2
            add RSI,RAX
            add RAX,QWORD PTR [RSP+48]
            lea R11,QWORD PTR [RDI+RDX*4]
            lea R8,QWORD PTR [RBP+RSI*1]
            xor EDX,EDX
            lea RSI,QWORD PTR [RDI+RAX*1]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_435cd0:

            movups XMM7,XMMWORD PTR [R8+RAX*1]
            add RDX,1
            cvtps2pd XMM0,XMM7
            movaps XMM2,XMMWORD PTR [R11+RAX*1]
            mulpd XMM0,XMM3
            cvtps2pd XMM1,XMM2
            movhps QWORD PTR [RSP],XMM7
            movhps QWORD PTR [RSP+16],XMM2
            addpd XMM0,XMM1
            cvtps2pd XMM1,QWORD PTR [RSP]
            cvtps2pd XMM2,QWORD PTR [RSP+16]
            cvtpd2ps XMM0,XMM0
            mulpd XMM1,XMM3
            addpd XMM1,XMM2
            cvtpd2ps XMM1,XMM1
            movlhps XMM0,XMM1
            movaps XMMWORD PTR [RSI+RAX*1],XMM0
            add RAX,16
            cmp RDX,R12
            jb .L_435cd0

            mov RSI,QWORD PTR [RSP+88]
            mov RAX,RSI
            and RAX,-4
            add R9,RAX
            cmp RAX,RSI
            je .L_435eaf

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R9+R14*1]
            lea RAX,QWORD PTR [R9+R15*1]
            pxor XMM2,XMM2
            lea RAX,QWORD PTR [RDI+RAX*4]
            cvtss2sd XMM0,DWORD PTR [RBP+RDX*4]
            movapd XMM1,XMM0
            pxor XMM0,XMM0
            mulsd XMM1,XMM4
            cvtss2sd XMM0,DWORD PTR [RAX]
            addsd XMM0,XMM1
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [RAX],XMM2
            lea RAX,QWORD PTR [R9+1]
            cmp RBX,RAX
            jbe .L_435eaf

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RAX+R15*1]
            add RAX,R14
            pxor XMM2,XMM2
            lea RDX,QWORD PTR [RDI+RDX*4]
            cvtss2sd XMM0,DWORD PTR [RBP+RAX*4]
            lea RAX,QWORD PTR [R9+2]
            movapd XMM1,XMM0
            cmp RBX,RAX
            pxor XMM0,XMM0
            mulsd XMM1,XMM4
            cvtss2sd XMM0,DWORD PTR [RDX]
            addsd XMM0,XMM1
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            jbe .L_435eaf

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RAX+R15*1]
            add RAX,R14
            pxor XMM2,XMM2
            lea RDX,QWORD PTR [RDI+RDX*4]
            cvtss2sd XMM0,DWORD PTR [RBP+RAX*4]
            lea RAX,QWORD PTR [R9+3]
            movapd XMM1,XMM0
            cmp RBX,RAX
            pxor XMM0,XMM0
            mulsd XMM1,XMM4
            cvtss2sd XMM0,DWORD PTR [RDX]
            addsd XMM0,XMM1
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            jbe .L_435eaf

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RAX+R15*1]
            add RAX,R14
            pxor XMM7,XMM7
            lea RDX,QWORD PTR [RDI+RDX*4]
            cvtss2sd XMM0,DWORD PTR [RBP+RAX*4]
            lea RAX,QWORD PTR [R9+4]
            movapd XMM1,XMM0
            cmp RBX,RAX
            pxor XMM0,XMM0
            mulsd XMM1,XMM4
            cvtss2sd XMM0,DWORD PTR [RDX]
            addsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RDX],XMM7
            jbe .L_435eaf

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [RAX+R15*1]
            add RAX,R14
            pxor XMM2,XMM2
            add R9,5
            lea RDX,QWORD PTR [RDI+RDX*4]
            cmp RBX,R9
            cvtss2sd XMM0,DWORD PTR [RBP+RAX*4]
            movapd XMM1,XMM0
            pxor XMM0,XMM0
            mulsd XMM1,XMM4
            cvtss2sd XMM0,DWORD PTR [RDX]
            addsd XMM0,XMM1
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [RDX],XMM2
            jbe .L_435eaf

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [R9+R15*1]
            add R9,R14
            pxor XMM7,XMM7
            lea RAX,QWORD PTR [RDI+RAX*4]
            cvtss2sd XMM0,DWORD PTR [RBP+R9*4]
            movapd XMM1,XMM0
            pxor XMM0,XMM0
            mulsd XMM1,XMM4
            cvtss2sd XMM0,DWORD PTR [RAX]
            addsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RAX],XMM7
.L_435eaf:

            add R13,1
            add R10,QWORD PTR [RSP+72]
            add RCX,QWORD PTR [RSP+64]
            add R14,RBX
            add R15,QWORD PTR [RSP+80]
            cmp QWORD PTR [RSP+40],R13
            jne .L_435ba3

            mov RAX,QWORD PTR [RSP+56]
.L_435ed5:

            mov RDX,QWORD PTR [RAX+8]
            sub RDX,RDI
            sar RDX,2
            test RDX,RDX
            je .L_4360cc

            mov RCX,RDI
            lea RAX,QWORD PTR [RDX-1]
            shr RCX,2
            neg RCX
            and ECX,3
            lea RSI,QWORD PTR [RCX+3]
            cmp RSI,RAX
            mov EAX,0
            ja .L_435fe7

            test RCX,RCX
            je .L_435f80

            pxor XMM0,XMM0
            cmp RCX,1
            mov EAX,1
            movsd XMM1,QWORD PTR [RIP+.L_43a1b0]
            pxor XMM5,XMM5
            cvtss2sd XMM0,DWORD PTR [RDI]
            mulsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RDI],XMM5
            je .L_435f80

            pxor XMM0,XMM0
            cmp RCX,3
            mov EAX,2
            pxor XMM5,XMM5
            cvtss2sd XMM0,DWORD PTR [RDI+4]
            mulsd XMM0,XMM1
            cvtsd2ss XMM5,XMM0
            movss DWORD PTR [RDI+4],XMM5
            jne .L_435f80

            pxor XMM0,XMM0
            mov EAX,3
            pxor XMM6,XMM6
            cvtss2sd XMM0,DWORD PTR [RDI+8]
            mulsd XMM0,XMM1
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [RDI+8],XMM6
.L_435f80:

            mov R9,RDX
            movapd XMM2,XMMWORD PTR [RIP+.L_43a2b0]
            sub R9,RCX
            lea R8,QWORD PTR [RDI+RCX*4]
            xor ESI,ESI
            mov R10,R9
            xor ECX,ECX
            shr R10,2
.L_435f9d:

            movaps XMM1,XMMWORD PTR [R8+RCX*1]
            add RSI,1
            movhps QWORD PTR [RSP+96],XMM1
            cvtps2pd XMM0,XMM1
            cvtps2pd XMM1,QWORD PTR [RSP+96]
            mulpd XMM0,XMM2
            mulpd XMM1,XMM2
            cvtpd2ps XMM0,XMM0
            cvtpd2ps XMM1,XMM1
            movlhps XMM0,XMM1
            movaps XMMWORD PTR [R8+RCX*1],XMM0
            add RCX,16
            cmp RSI,R10
            jb .L_435f9d

            mov RCX,R9
            and RCX,-4
            add RAX,RCX
            cmp RCX,R9
            je .L_4360cc
.L_435fe7:

            pxor XMM1,XMM1
            lea RCX,QWORD PTR [RDI+RAX*4]
            movsd XMM0,QWORD PTR [RIP+.L_43a1b0]
            pxor XMM5,XMM5
            cvtss2sd XMM1,DWORD PTR [RCX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM5,XMM1
            movss DWORD PTR [RCX],XMM5
            lea RCX,QWORD PTR [RAX+1]
            cmp RDX,RCX
            jbe .L_4360cc

            pxor XMM1,XMM1
            lea RCX,QWORD PTR [RDI+RCX*4]
            pxor XMM6,XMM6
            cvtss2sd XMM1,DWORD PTR [RCX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM6,XMM1
            movss DWORD PTR [RCX],XMM6
            lea RCX,QWORD PTR [RAX+2]
            cmp RCX,RDX
            jae .L_4360cc

            pxor XMM1,XMM1
            lea RCX,QWORD PTR [RDI+RCX*4]
            pxor XMM5,XMM5
            cvtss2sd XMM1,DWORD PTR [RCX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM5,XMM1
            movss DWORD PTR [RCX],XMM5
            lea RCX,QWORD PTR [RAX+3]
            cmp RCX,RDX
            jae .L_4360cc

            pxor XMM1,XMM1
            lea RCX,QWORD PTR [RDI+RCX*4]
            pxor XMM6,XMM6
            cvtss2sd XMM1,DWORD PTR [RCX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM6,XMM1
            movss DWORD PTR [RCX],XMM6
            lea RCX,QWORD PTR [RAX+4]
            cmp RCX,RDX
            jae .L_4360cc

            pxor XMM1,XMM1
            lea RCX,QWORD PTR [RDI+RCX*4]
            add RAX,5
            pxor XMM5,XMM5
            cmp RAX,RDX
            cvtss2sd XMM1,DWORD PTR [RCX]
            mulsd XMM1,XMM0
            cvtsd2ss XMM5,XMM1
            movss DWORD PTR [RCX],XMM5
            jae .L_4360cc

            pxor XMM1,XMM1
            lea RAX,QWORD PTR [RDI+RAX*4]
            pxor XMM6,XMM6
            cvtss2sd XMM1,DWORD PTR [RAX]
            mulsd XMM0,XMM1
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [RAX],XMM6
.L_4360cc:

            test RBP,RBP
            je .L_4360d9

            mov RDI,RBP
            call _ZdlPv@PLT
.L_4360d9:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4361e9

            add RSP,216
.L_4360f7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436108:

            ucomiss XMM4,XMM0
            sqrtss XMM1,XMM0
            jbe .L_435703

            movss DWORD PTR [RSP+172],XMM3
            movss DWORD PTR [RSP+168],XMM4
            movsd QWORD PTR [RSP+160],XMM2
            movss DWORD PTR [RSP+156],XMM1
            call sqrtf@PLT

            movss XMM3,DWORD PTR [RSP+172]
            movss XMM4,DWORD PTR [RSP+168]
            movsd XMM2,QWORD PTR [RSP+160]
            movss XMM1,DWORD PTR [RSP+156]
            jmp .L_435703
.L_436167:

            xor EAX,EAX
.L_436169:

            pxor XMM0,XMM0
            pxor XMM7,XMM7
            cvtss2sd XMM0,DWORD PTR [R10+RAX*4]
            movapd XMM1,XMM0
            pxor XMM0,XMM0
            mulsd XMM1,XMM5
            cvtss2sd XMM0,DWORD PTR [RCX+RAX*4]
            addsd XMM0,XMM1
            cvtsd2ss XMM7,XMM0
            movss DWORD PTR [RCX+RAX*4],XMM7
            add RAX,1
            cmp RBX,RAX
            jne .L_436169

            jmp .L_435eaf
.L_4361a3:

            xor EAX,EAX
.L_4361a5:

            movss XMM0,DWORD PTR [RCX+RAX*4]
            movss DWORD PTR [RDI+RAX*4],XMM0
            add RAX,1
            cmp RBX,RAX
            jne .L_4361a5

            jmp .L_435aea
.L_4361bd:

            xor EBP,EBP
            jmp .L_435912
.L_4361c4:

            xor R12D,R12D
            jmp .L_435614
.L_4361cc:

            mov RDI,QWORD PTR [RSP+176]
            mov RBX,RAX
            test RDI,RDI
            je .L_4361e1
.L_4361dc:

            call _ZdlPv@PLT
.L_4361e1:

            mov RDI,RBX
.L_4361e4:

            call _Unwind_Resume@PLT
.L_4361e9:

            call __stack_chk_fail@PLT
.L_4361ee:

            test RBP,RBP
            mov RBX,RAX
            je .L_4361e1

            mov RDI,RBP
            jmp .L_4361dc
.L_4361fb:

            call _ZSt17__throw_bad_allocv@PLT
.L_436200:

            push R15
            push R14
            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RDI
            pxor XMM0,XMM0
            sub RSP,136
.L_43621b:

            mov R15,QWORD PTR [RSI+8]
            mov R12,QWORD PTR [RSI]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],RDX
            movabs RDX,-6148914691236517205
            mov QWORD PTR [RSP+48],0
            mov RBX,R15
            sub RBX,R12
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            movaps XMMWORD PTR [RSP+32],XMM0
            test RAX,RAX
            je .L_4366f2

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_4367bc

            mov R14,RSI
            mov RDI,RBX
.L_436282:

            call _Znwm@PLT
.L_436287:

            mov R15,QWORD PTR [R14+8]
            mov R12,QWORD PTR [R14]
            mov QWORD PTR [RSP+16],RAX
.L_436293:

            mov QWORD PTR [RSP+24],RAX
            add RBX,RAX
            cmp R15,R12
            movq XMM0,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+48],RBX
            punpcklqdq XMM0,XMM0
            mov RBX,RAX
            movaps XMMWORD PTR [RSP+32],XMM0
            je .L_43635d

            nop
            nop
            nop
            nop
            nop
.L_4362c0:

            test RBX,RBX
            je .L_43634c

            mov R14,QWORD PTR [R12+8]
            sub R14,QWORD PTR [R12]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R14
            sar RAX,2
            test RAX,RAX
            je .L_436315

            movabs RCX,4611686018427387903
            cmp RAX,RCX
            ja .L_43673f

            mov RDI,R14
.L_43630d:

            call _Znwm@PLT
.L_436312:

            mov RCX,RAX
.L_436315:

            add R14,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R14
            mov RAX,QWORD PTR [R12+8]
            mov RSI,QWORD PTR [R12]
            mov R14,RAX
            sub R14,RSI
            cmp RAX,RSI
            je .L_436345

            mov RDI,RCX
            mov RDX,R14
            call memmove@PLT

            mov RCX,RAX
.L_436345:

            add RCX,R14
            mov QWORD PTR [RBX+8],RCX
.L_43634c:

            add R12,24
            add RBX,24
            cmp R15,R12
            jne .L_4362c0
.L_43635d:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+40],RBX
            movabs RDX,-6148914691236517205
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+80],0
            mov R14,QWORD PTR [RAX+8]
            mov R12,QWORD PTR [RAX]
            movaps XMMWORD PTR [RSP+64],XMM0
            mov RBX,R14
            sub RBX,R12
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            test RAX,RAX
            je .L_436705

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_43676d

            mov RDI,RBX
.L_4363ba:

            call _Znwm@PLT
.L_4363bf:

            mov QWORD PTR [RSP+16],RAX
            mov RAX,QWORD PTR [RSP+8]
            mov R14,QWORD PTR [RAX+8]
            mov R12,QWORD PTR [RAX]
.L_4363d0:

            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            add RBX,RAX
            cmp R14,R12
            movq XMM0,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+80],RBX
            punpcklqdq XMM0,XMM0
            mov RBX,RAX
            movaps XMMWORD PTR [RSP+64],XMM0
            je .L_43649d

            nop
            nop
            nop
.L_436400:

            test RBX,RBX
            je .L_43648c

            mov R15,QWORD PTR [R12+8]
            sub R15,QWORD PTR [R12]
            xor ECX,ECX
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R15
            sar RAX,2
            test RAX,RAX
            je .L_436455

            movabs RCX,4611686018427387903
            cmp RAX,RCX
            ja .L_43679e

            mov RDI,R15
.L_43644d:

            call _Znwm@PLT
.L_436452:

            mov RCX,RAX
.L_436455:

            add R15,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+8],RCX
            mov QWORD PTR [RBX+16],R15
            mov RAX,QWORD PTR [R12+8]
            mov RSI,QWORD PTR [R12]
            mov R15,RAX
            sub R15,RSI
            cmp RAX,RSI
            je .L_436485

            mov RDI,RCX
            mov RDX,R15
            call memmove@PLT

            mov RCX,RAX
.L_436485:

            add RCX,R15
            mov QWORD PTR [RBX+8],RCX
.L_43648c:

            add R12,24
            add RBX,24
            cmp R14,R12
            jne .L_436400
.L_43649d:

            lea R12,QWORD PTR [RIP+.L_439da0]
            mov QWORD PTR [RSP+72],RBX
            xor EBX,EBX
.L_4364ab:

            mov RAX,QWORD PTR [RSP+32]
            movsd XMM5,QWORD PTR [R12]
            mov RSI,QWORD PTR [RBP+8]
            pxor XMM1,XMM1
            mov RDI,QWORD PTR [RBP]
            movapd XMM0,XMM5
            mov RDX,QWORD PTR [RAX+RBX*1]
            movsd QWORD PTR [RSP+8],XMM5
.L_4364d0:

            call .L_435200

            mov RAX,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RBP+8]
            pxor XMM1,XMM1
            mov RDI,QWORD PTR [RBP]
            movsd XMM0,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RAX+RBX*1]
            call .L_435200
.L_4364f5:

            add RBX,24
            add R12,8
            cmp RBX,72
            jne .L_4364ab

            mov EDX,DWORD PTR [RBP+24]
            mov RCX,QWORD PTR [RBP+8]
            mov EAX,8
            sub EAX,EDX
            cdqe 
            cmp RAX,RCX
            jae .L_436622

            lea RAX,QWORD PTR [RSP+64]
            mov R10,QWORD PTR [RBP]
            lea R14,QWORD PTR [RSP+96]
            xor R15D,R15D
            movsxd RSI,EDX
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+16],RAX
            nop
.L_436540:

            mov EAX,8
            sub EAX,EDX
            cdqe 
            cmp RAX,R10
            jae .L_436613

            xor EBX,EBX
            nop
            nop
            nop
            nop
.L_436558:

            mov RAX,QWORD PTR [RBP+32]
            xor EDX,EDX
            lea RDI,QWORD PTR [R10-8]
            pxor XMM0,XMM0
            mov QWORD PTR [RSP+112],0
            imul RAX,R15
            movaps XMMWORD PTR [RSP+96],XMM0
            add RAX,RBX
            div RSI
            lea RSI,QWORD PTR [RCX-8]
            mov RDX,R10
            cmp RSI,R15
            cmova RSI,R15
            cmp RDI,RBX
            cmova RDI,RBX
            sub RSP,8
.L_436597:

            push R14
.L_436599:

            mov R9,QWORD PTR [RSP+24]
            mov R12,RAX
            mov R8,QWORD PTR [RSP+32]
            call .L_430130

            mov RDX,QWORD PTR [R13]
            pxor XMM2,XMM2
            movsxd RSI,DWORD PTR [RBP+24]
            lea RAX,QWORD PTR [R12+R12*2]
            mov R10,QWORD PTR [RBP]
            pxor XMM3,XMM3
            pxor XMM4,XMM4
            cvtsd2ss XMM2,QWORD PTR [RSP+112]
            movss DWORD PTR [RDX+RAX*4],XMM2
            add RAX,1
            cvtsd2ss XMM3,QWORD PTR [RSP+120]
            movss DWORD PTR [RDX+RAX*4],XMM3
            add RBX,RSI
            cvtsd2ss XMM4,QWORD PTR [RSP+128]
            movss DWORD PTR [RDX+RAX*4+4],XMM4
            mov EAX,8
            sub EAX,ESI
            mov RDX,RSI
            cdqe 
            lea RCX,QWORD PTR [RAX+RBX*1]
            pop RDI
.L_436604:

            cmp RCX,R10
            mov RCX,QWORD PTR [RBP+8]
            pop R8
.L_43660d:

            jb .L_436558
.L_436613:

            add R15,RSI
            add RAX,R15
            cmp RAX,RCX
            jb .L_436540
.L_436622:

            mov RAX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+64]
            cmp RAX,RDI
            je .L_43666e

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_436659
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_436648:

            call _ZdlPv@PLT

            cmp RBP,RBX
            mov RDI,RBX
            je .L_436669
.L_436655:

            add RBX,24
.L_436659:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_436648

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_436655
.L_436669:

            mov RDI,QWORD PTR [RSP+64]
.L_43666e:

            test RDI,RDI
            je .L_436678

            call _ZdlPv@PLT
.L_436678:

            mov RAX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+32]
            cmp RAX,RDI
            je .L_4366c6

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RBP,QWORD PTR [RDI+RAX*8+24]
            jmp .L_4366b1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4366a0:

            call _ZdlPv@PLT

            cmp RBX,RBP
            mov RDI,RBX
            je .L_4366c1
.L_4366ad:

            add RBX,24
.L_4366b1:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_4366a0

            cmp RBX,RBP
            mov RDI,RBX
            jne .L_4366ad
.L_4366c1:

            mov RDI,QWORD PTR [RSP+32]
.L_4366c6:

            test RDI,RDI
            je .L_4366d0

            call _ZdlPv@PLT
.L_4366d0:

            mov RAX,QWORD PTR [RSP+120]
            xor RAX,QWORD PTR FS:[40]
            jne .L_436744

            add RSP,136
.L_4366e7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_4366f2:

            mov QWORD PTR [RSP+16],0
            mov RAX,QWORD PTR [RSP+16]
            jmp .L_436293
.L_436705:

            mov QWORD PTR [RSP+16],0
            jmp .L_4363d0
.L_436713:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_43671b:

            mov RAX,QWORD PTR [RSP+16]
            cmp RAX,RBX
            je .L_43673a

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_436732

            call _ZdlPv@PLT
.L_436732:

            add QWORD PTR [RSP+16],24
            jmp .L_43671b
.L_43673a:

            call __cxa_rethrow@PLT
.L_43673f:

            call _ZSt17__throw_bad_allocv@PLT
.L_436744:

            call __stack_chk_fail@PLT
.L_436749:

            lea RDI,QWORD PTR [RSP+64]
            mov RBX,RAX
            call .L_4189d0
.L_436756:

            lea RDI,QWORD PTR [RSP+32]
            call .L_4189d0
.L_436760:

            mov RDI,RBX
.L_436763:

            call _Unwind_Resume@PLT
.L_436768:

            mov RBX,RAX
            jmp .L_436756
.L_43676d:

            call _ZSt17__throw_bad_allocv@PLT
.L_436772:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_43677a:

            mov RAX,QWORD PTR [RSP+16]
            cmp RBX,RAX
            je .L_436799

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_436791

            call _ZdlPv@PLT
.L_436791:

            add QWORD PTR [RSP+16],24
            jmp .L_43677a
.L_436799:

            call __cxa_rethrow@PLT
.L_43679e:

            call _ZSt17__throw_bad_allocv@PLT
.L_4367a3:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+64]
            test RDI,RDI
            je .L_436756

            call _ZdlPv@PLT

            jmp .L_436756
.L_4367bc:

            call _ZSt17__throw_bad_allocv@PLT
.L_4367c1:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RSP+32]
            test RDI,RDI
            je .L_436760

            call _ZdlPv@PLT

            jmp .L_436760
.L_4367da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4367e0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            pxor XMM0,XMM0
            sub RSP,248
.L_4367fb:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+232],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI]
            mov QWORD PTR [RSP+56],RDX
            mov QWORD PTR [RSP+112],RCX
            mov QWORD PTR [RSP+120],R8
            mov RBX,QWORD PTR [RAX+8]
            sub RBX,QWORD PTR [RAX]
            movaps XMMWORD PTR [RSP+208],XMM0
            mov QWORD PTR [RSP+224],0
            mov RAX,RBX
            sar RAX,2
            test RAX,RAX
            je .L_437813

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_437846

            mov RDI,RBX
.L_436861:

            call _Znwm@PLT
.L_436866:

            mov QWORD PTR [RSP+8],RAX
            lea RBP,QWORD PTR [RAX+RBX*1]
            mov RDX,RBX
            movq XMM0,QWORD PTR [RSP+8]
            xor ESI,ESI
            punpcklqdq XMM0,XMM0
            mov RDI,RAX
            mov QWORD PTR [RSP+224],RBP
            movaps XMMWORD PTR [RSP+208],XMM0
            call memset@PLT

            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+120]
.L_43689e:

            mov RSI,QWORD PTR [RAX+8]
            mov RDX,QWORD PTR [RAX]
            movabs RDI,-6148914691236517205
            mov QWORD PTR [RSP+216],RBP
            mov RAX,RSI
            sub RAX,RDX
            sar RAX,3
            imul RAX,RDI
            cmp RAX,2
            jbe .L_4377ec

            cmp RAX,3
            je .L_436924

            lea RBP,QWORD PTR [RDX+72]
            cmp RSI,RBP
            je .L_43691b

            lea RAX,QWORD PTR [RDX+96]
            mov R12,RBP
            sub RSI,RAX
            and RSI,-8
            lea RBX,QWORD PTR [RDX+RSI*1+96]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4368f8:

            mov RDI,QWORD PTR [R12]
            test RDI,RDI
            je .L_4377da

            add R12,24
            call _ZdlPv@PLT

            cmp R12,RBX
            jne .L_4368f8
.L_436913:

            mov RCX,QWORD PTR [RSP+208]
.L_43691b:

            mov RAX,QWORD PTR [RSP+120]
            mov QWORD PTR [RAX+8],RBP
.L_436924:

            test RCX,RCX
            je .L_436931

            mov RDI,RCX
            call _ZdlPv@PLT
.L_436931:

            cmp QWORD PTR [RSP+112],0
            je .L_437026

            mov RAX,QWORD PTR [RSP+56]
            movq XMM4,QWORD PTR [RIP+.L_43a1f0]
            mov QWORD PTR [RSP+184],0
            mov QWORD PTR [RSP+104],0
            lea RDI,QWORD PTR [RAX*4]
            mov DWORD PTR [RSP+176],EAX
            mov QWORD PTR [RSP+192],RDI
            mov EDI,EAX
            add EAX,EAX
            neg EDI
            mov DWORD PTR [RSP+200],EAX
            mov DWORD PTR [RSP+180],EDI
            nop
            nop
            nop
            nop
            nop
            nop
.L_436990:

            add QWORD PTR [RSP+104],1
            cmp QWORD PTR [RSP+56],0
            je .L_436ff8

            mov EAX,DWORD PTR [RSP+200]
            mov EBP,DWORD PTR [RSP+180]
            xor EBX,EBX
            mov R15,QWORD PTR [RSP+184]
            add EAX,EBP
            mov DWORD PTR [RSP+204],EAX
.L_4369c3:

            add RBX,1
            cmp RBX,QWORD PTR [RSP+56]
            jb .L_4371bf
.L_4369d2:

            mov EAX,DWORD PTR [RSP+176]
            lea EDX,DWORD PTR [RBP+RAX*1-1]
.L_4369dd:

            mov RAX,QWORD PTR [R13]
            movsxd R12,EDX
            pxor XMM3,XMM3
            pxor XMM7,XMM7
            mov RSI,QWORD PTR [RAX+24]
            mov RCX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+48]
            movss XMM2,DWORD PTR [RSI+R15*1]
            subss XMM2,DWORD PTR [RSI+R12*4]
            movss XMM0,DWORD PTR [RAX+R15*1]
            subss XMM0,DWORD PTR [RAX+R12*4]
            cvtss2sd XMM3,XMM2
            movss XMM2,DWORD PTR [RCX+R15*1]
            subss XMM2,DWORD PTR [RCX+R12*4]
            cvtss2sd XMM7,XMM0
            movsd QWORD PTR [RSP+24],XMM7
            cvtss2sd XMM2,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_43a1b8]
            movzx EAX,BYTE PTR [RIP+.L_64a568]
            test AL,AL
            je .L_437270
.L_436a44:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM0,XMM4
            ucomisd XMM6,XMM0
            jbe .L_437827

            cvttsd2si EAX,XMM0
            cmp EAX,19
            jle .L_437050

            movsd XMM5,QWORD PTR [RIP+.L_64a620]
            movsd QWORD PTR [RSP+16],XMM5
.L_436a79:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            jbe .L_436a97

            movsd XMM5,QWORD PTR [RSP+16]
            xorpd XMM5,XMMWORD PTR [RIP+.L_43a200]
            movsd QWORD PTR [RSP+16],XMM5
.L_436a97:

            movsd XMM2,QWORD PTR [RIP+.L_43a1c0]
            movzx EAX,BYTE PTR [RIP+.L_64a4a8]
            mulsd XMM2,XMM3
            test AL,AL
            je .L_4371d8
.L_436ab2:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM0,XMM4
            ucomisd XMM6,XMM0
            jbe .L_437827

            cvttsd2si EAX,XMM0
            cmp EAX,19
            jle .L_437090

            movsd XMM3,QWORD PTR [RIP+.L_64a560]
            movsd QWORD PTR [RSP+8],XMM3
.L_436ae7:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            jbe .L_436b05

            movsd XMM3,QWORD PTR [RSP+8]
            xorpd XMM3,XMMWORD PTR [RIP+.L_43a200]
            movsd QWORD PTR [RSP+8],XMM3
.L_436b05:

            mov RAX,QWORD PTR [R14]
            movsd XMM7,QWORD PTR [RIP+.L_43a1c8]
            pxor XMM3,XMM3
            mulsd XMM7,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RAX+24]
            mov RCX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+48]
            movss XMM2,DWORD PTR [RSI+R15*1]
            subss XMM2,DWORD PTR [RSI+R12*4]
            movss XMM0,DWORD PTR [RAX+R15*1]
            subss XMM0,DWORD PTR [RAX+R12*4]
            movsd QWORD PTR [RSP+88],XMM7
            pxor XMM7,XMM7
            cvtss2sd XMM3,XMM2
            movss XMM2,DWORD PTR [RCX+R15*1]
            subss XMM2,DWORD PTR [RCX+R12*4]
            cvtss2sd XMM7,XMM0
            movsd QWORD PTR [RSP+48],XMM7
            cvtss2sd XMM2,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_43a1b8]
            movzx EAX,BYTE PTR [RIP+.L_64a568]
            test AL,AL
            je .L_437320
.L_436b7c:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM0,XMM4
            ucomisd XMM6,XMM0
            jbe .L_437827

            cvttsd2si EAX,XMM0
            cmp EAX,19
            jle .L_4370d0

            movsd XMM5,QWORD PTR [RIP+.L_64a620]
            movsd QWORD PTR [RSP+32],XMM5
.L_436bb1:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            jbe .L_436bcf

            movsd XMM5,QWORD PTR [RSP+32]
            xorpd XMM5,XMMWORD PTR [RIP+.L_43a200]
            movsd QWORD PTR [RSP+32],XMM5
.L_436bcf:

            movsd XMM2,QWORD PTR [RIP+.L_43a1c0]
            movzx EAX,BYTE PTR [RIP+.L_64a4a8]
            mulsd XMM2,XMM3
            test AL,AL
            je .L_4373d0
.L_436bea:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM0,XMM4
            ucomisd XMM6,XMM0
            jbe .L_437827

            cvttsd2si EAX,XMM0
            cmp EAX,19
            jle .L_437110

            movsd XMM3,QWORD PTR [RIP+.L_64a560]
            movsd QWORD PTR [RSP+24],XMM3
.L_436c1f:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            jbe .L_436c3d

            movsd XMM3,QWORD PTR [RSP+24]
            xorpd XMM3,XMMWORD PTR [RIP+.L_43a200]
            movsd QWORD PTR [RSP+24],XMM3
.L_436c3d:

            movsd XMM7,QWORD PTR [RIP+.L_43a1c8]
            mov RDI,QWORD PTR [RSP+104]
            cmp QWORD PTR [RSP+112],RDI
            mulsd XMM7,QWORD PTR [RSP+48]
            movsd QWORD PTR [RSP+80],XMM7
            ja .L_4377ca

            mov EDX,EBP
.L_436c63:

            mov RAX,QWORD PTR [R13]
            movsxd R12,EDX
            pxor XMM3,XMM3
            pxor XMM7,XMM7
            mov RSI,QWORD PTR [RAX+24]
            mov RCX,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+48]
            movss XMM2,DWORD PTR [RSI+R15*1]
            subss XMM2,DWORD PTR [RSI+R12*4]
            movss XMM0,DWORD PTR [RAX+R15*1]
            subss XMM0,DWORD PTR [RAX+R12*4]
            cvtss2sd XMM3,XMM2
            movss XMM2,DWORD PTR [RCX+R15*1]
            subss XMM2,DWORD PTR [RCX+R12*4]
            cvtss2sd XMM7,XMM0
            movsd QWORD PTR [RSP+64],XMM7
            cvtss2sd XMM2,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_43a1b8]
            movzx EAX,BYTE PTR [RIP+.L_64a568]
            test AL,AL
            je .L_437610
.L_436cca:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM0,XMM4
            ucomisd XMM6,XMM0
            jbe .L_437827

            cvttsd2si EAX,XMM0
            cmp EAX,19
            jle .L_437150

            movsd XMM5,QWORD PTR [RIP+.L_64a620]
            movsd QWORD PTR [RSP+48],XMM5
.L_436cff:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            jbe .L_436d1d

            movsd XMM5,QWORD PTR [RSP+48]
            xorpd XMM5,XMMWORD PTR [RIP+.L_43a200]
            movsd QWORD PTR [RSP+48],XMM5
.L_436d1d:

            movsd XMM2,QWORD PTR [RIP+.L_43a1c0]
            movzx EAX,BYTE PTR [RIP+.L_64a4a8]
            mulsd XMM2,XMM3
            test AL,AL
            je .L_437570
.L_436d38:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM0,XMM4
            ucomisd XMM6,XMM0
            jbe .L_437827

            cvttsd2si EAX,XMM0
            movsd XMM3,QWORD PTR [RIP+.L_64a560]
            cmp EAX,19
            jg .L_436d97

            pxor XMM1,XMM1
            lea RSI,QWORD PTR [RIP+.L_64a4c0]
            movsxd RCX,EAX
            movsd XMM5,QWORD PTR [RSI+RCX*8]
            add RSI,8
            cvtsi2sd XMM1,EAX
            movsd XMM3,QWORD PTR [RSI+RCX*8]
            subsd XMM3,XMM5
            subsd XMM0,XMM1
            mulsd XMM0,XMM3
            movapd XMM3,XMM0
            addsd XMM3,XMM5
.L_436d97:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            jbe .L_436da9

            xorpd XMM3,XMMWORD PTR [RIP+.L_43a200]
.L_436da9:

            mov RAX,QWORD PTR [R14]
            movsd XMM7,QWORD PTR [RIP+.L_43a1c8]
            mov RCX,QWORD PTR [RAX]
            mov RSI,QWORD PTR [RAX+24]
            mov RAX,QWORD PTR [RAX+48]
            mulsd XMM7,QWORD PTR [RSP+64]
            movss XMM2,DWORD PTR [RCX+R15*1]
            movss XMM0,DWORD PTR [RAX+R15*1]
            subss XMM2,DWORD PTR [RCX+R12*4]
            subss XMM0,DWORD PTR [RAX+R12*4]
            movss XMM5,DWORD PTR [RSI+R15*1]
            subss XMM5,DWORD PTR [RSI+R12*4]
            movsd QWORD PTR [RSP+96],XMM7
            pxor XMM7,XMM7
            cvtss2sd XMM2,XMM2
            cvtss2sd XMM7,XMM0
            mulsd XMM2,QWORD PTR [RIP+.L_43a1b8]
            cvtss2sd XMM5,XMM5
            movsd QWORD PTR [RSP+64],XMM7
            movzx EAX,BYTE PTR [RIP+.L_64a568]
            test AL,AL
            je .L_437470
.L_436e1c:

            movapd XMM0,XMM2
            movsd XMM6,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM0,XMM4
            ucomisd XMM6,XMM0
            jbe .L_437827

            cvttsd2si EAX,XMM0
            movsd XMM6,QWORD PTR [RIP+.L_64a620]
            cmp EAX,19
            jg .L_436e7b

            pxor XMM7,XMM7
            lea RCX,QWORD PTR [RIP+.L_64a580]
            movsxd RDX,EAX
            movsd XMM1,QWORD PTR [RCX+RDX*8]
            add RCX,8
            cvtsi2sd XMM7,EAX
            movsd XMM6,QWORD PTR [RCX+RDX*8]
            subsd XMM6,XMM1
            subsd XMM0,XMM7
            mulsd XMM0,XMM6
            movapd XMM6,XMM0
            addsd XMM6,XMM1
.L_436e7b:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM2
            jbe .L_436e8d

            xorpd XMM6,XMMWORD PTR [RIP+.L_43a200]
.L_436e8d:

            mulsd XMM5,QWORD PTR [RIP+.L_43a1c0]
            movzx EAX,BYTE PTR [RIP+.L_64a4a8]
            test AL,AL
            je .L_4376d0
.L_436ea4:

            movapd XMM1,XMM5
            movsd XMM7,QWORD PTR [RIP+.L_43e980-19248]
            andpd XMM1,XMM4
            ucomisd XMM7,XMM1
            jbe .L_437827

            cvttsd2si EAX,XMM1
            movsd XMM2,QWORD PTR [RIP+.L_64a560]
            cmp EAX,19
            jg .L_436eff

            pxor XMM7,XMM7
            lea RCX,QWORD PTR [RIP+.L_64a4c0]
            movsxd RDX,EAX
            movsd XMM0,QWORD PTR [RCX+RDX*8]
            add RCX,8
            cvtsi2sd XMM7,EAX
            movsd XMM2,QWORD PTR [RCX+RDX*8]
            subsd XMM2,XMM0
            subsd XMM1,XMM7
            mulsd XMM2,XMM1
            addsd XMM2,XMM0
.L_436eff:

            pxor XMM7,XMM7
            ucomisd XMM7,XMM5
            jbe .L_436f11

            xorpd XMM2,XMMWORD PTR [RIP+.L_43a200]
.L_436f11:

            mov RAX,QWORD PTR [RSP+120]
            movsd XMM0,QWORD PTR [RSP+16]
            movsd XMM1,QWORD PTR [RSP+48]
            andpd XMM0,XMM4
            mov RAX,QWORD PTR [RAX]
            andpd XMM1,XMM4
            andpd XMM6,XMM4
            andpd XMM3,XMM4
            mov RDX,QWORD PTR [RAX]
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+32]
            andpd XMM2,XMM4
            andpd XMM1,XMM4
            movsd XMM5,QWORD PTR [RIP+.L_43a1c8]
            addsd XMM1,XMM6
            pxor XMM6,XMM6
            mulsd XMM5,QWORD PTR [RSP+64]
            minsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RSP+8]
            andpd XMM0,XMM4
            andpd XMM5,XMM4
            cvtsd2ss XMM6,XMM1
            addsd XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+88]
            andpd XMM0,XMM4
            andpd XMM1,XMM4
            addsd XMM0,XMM2
            minsd XMM0,XMM3
            pxor XMM3,XMM3
            movss DWORD PTR [RDX+R15*1],XMM6
            mov RDX,QWORD PTR [RAX+24]
            mov RAX,QWORD PTR [RAX+48]
            cvtsd2ss XMM3,XMM0
            movsd XMM0,QWORD PTR [RSP+96]
            andpd XMM0,XMM4
            addsd XMM0,XMM1
            movsd XMM1,QWORD PTR [RSP+80]
            andpd XMM1,XMM4
            movss DWORD PTR [RDX+R15*1],XMM3
            addsd XMM1,XMM5
            ucomisd XMM0,XMM1
            jbe .L_437190

            pxor XMM3,XMM3
            add EBP,1
            cvtsd2ss XMM3,XMM1
            movss DWORD PTR [RAX+R15*1],XMM3
            add R15,4
            cmp RBX,QWORD PTR [RSP+56]
            jne .L_4369c3
.L_436ff8:

            mov RDI,QWORD PTR [RSP+192]
            add QWORD PTR [RSP+184],RDI
            mov EDI,DWORD PTR [RSP+176]
            add DWORD PTR [RSP+180],EDI
            mov RDI,QWORD PTR [RSP+104]
            cmp QWORD PTR [RSP+112],RDI
            jne .L_436990
.L_437026:

            mov RAX,QWORD PTR [RSP+232]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43784b

            add RSP,248
.L_437044:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_437050:

            pxor XMM1,XMM1
            lea RSI,QWORD PTR [RIP+.L_64a580]
            movsxd RCX,EAX
            movsd XMM6,QWORD PTR [RSI+RCX*8]
            add RSI,8
            cvtsi2sd XMM1,EAX
            movsd XMM5,QWORD PTR [RSI+RCX*8]
            subsd XMM5,XMM6
            subsd XMM0,XMM1
            mulsd XMM0,XMM5
            addsd XMM0,XMM6
            movsd QWORD PTR [RSP+16],XMM0
            jmp .L_436a79
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437090:

            pxor XMM1,XMM1
            lea RSI,QWORD PTR [RIP+.L_64a4c0]
            movsxd RCX,EAX
            movsd XMM5,QWORD PTR [RSI+RCX*8]
            add RSI,8
            cvtsi2sd XMM1,EAX
            movsd XMM3,QWORD PTR [RSI+RCX*8]
            subsd XMM3,XMM5
            subsd XMM0,XMM1
            mulsd XMM0,XMM3
            addsd XMM0,XMM5
            movsd QWORD PTR [RSP+8],XMM0
            jmp .L_436ae7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4370d0:

            pxor XMM1,XMM1
            lea RCX,QWORD PTR [RIP+.L_64a580]
            movsxd RDX,EAX
            movsd XMM6,QWORD PTR [RCX+RDX*8]
            add RCX,8
            cvtsi2sd XMM1,EAX
            movsd XMM5,QWORD PTR [RCX+RDX*8]
            subsd XMM5,XMM6
            subsd XMM0,XMM1
            mulsd XMM0,XMM5
            addsd XMM0,XMM6
            movsd QWORD PTR [RSP+32],XMM0
            jmp .L_436bb1
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437110:

            pxor XMM1,XMM1
            lea RCX,QWORD PTR [RIP+.L_64a4c0]
            movsxd RDX,EAX
            movsd XMM5,QWORD PTR [RCX+RDX*8]
            add RCX,8
            cvtsi2sd XMM1,EAX
            movsd XMM3,QWORD PTR [RCX+RDX*8]
            subsd XMM3,XMM5
            subsd XMM0,XMM1
            mulsd XMM0,XMM3
            addsd XMM0,XMM5
            movsd QWORD PTR [RSP+24],XMM0
            jmp .L_436c1f
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437150:

            pxor XMM1,XMM1
            lea RSI,QWORD PTR [RIP+.L_64a580]
            movsxd RCX,EAX
            movsd XMM6,QWORD PTR [RSI+RCX*8]
            add RSI,8
            cvtsi2sd XMM1,EAX
            movsd XMM5,QWORD PTR [RSI+RCX*8]
            subsd XMM5,XMM6
            subsd XMM0,XMM1
            mulsd XMM0,XMM5
            addsd XMM0,XMM6
            movsd QWORD PTR [RSP+48],XMM0
            jmp .L_436cff
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437190:

            pxor XMM6,XMM6
            add EBP,1
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [RAX+R15*1],XMM6
            add R15,4
            cmp RBX,QWORD PTR [RSP+56]
            je .L_436ff8

            add RBX,1
            cmp RBX,QWORD PTR [RSP+56]
            jae .L_4369d2
.L_4371bf:

            mov EDX,DWORD PTR [RSP+176]
            add EDX,DWORD PTR [RSP+180]
            add EDX,EBX
            jmp .L_4369dd
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4371d8:

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+8],XMM2
            movaps XMMWORD PTR [RSP+32],XMM4
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP+8]
            movapd XMM4,XMMWORD PTR [RSP+32]
            je .L_436ab2

            lea RAX,QWORD PTR [RIP+.L_64a4d0]
            movapd XMM3,XMMWORD PTR [RIP+.L_43a220]
            lea RCX,QWORD PTR [RAX+152]
            movaps XMMWORD PTR [RIP+.L_64a4c0],XMM3
            movsd XMM0,QWORD PTR [RIP+.L_439e70]
            movsd XMM1,QWORD PTR [RIP+.L_64a4c8]
.L_437230:

            addsd XMM1,XMM0
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM1
            cmp RCX,RAX
            jne .L_437230

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+8],XMM2
            movaps XMMWORD PTR [RSP+32],XMM4
            call __cxa_guard_release@PLT

            movapd XMM4,XMMWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_436ab2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437270:

            lea RDI,QWORD PTR [RIP+.L_64a568]
            movsd QWORD PTR [RSP+16],XMM2
            movaps XMMWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+8],XMM3
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            movapd XMM4,XMMWORD PTR [RSP+32]
            je .L_436a44

            lea RAX,QWORD PTR [RIP+.L_64a590]
            movapd XMM5,XMMWORD PTR [RIP+.L_43a210]
            lea RCX,QWORD PTR [RAX+152]
            movaps XMMWORD PTR [RIP+.L_64a580],XMM5
            movsd XMM0,QWORD PTR [RIP+.L_439e60]
            movsd XMM1,QWORD PTR [RIP+.L_64a588]
            nop
            nop
            nop
            nop
.L_4372d8:

            addsd XMM1,XMM0
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM1
            cmp RCX,RAX
            jne .L_4372d8

            lea RDI,QWORD PTR [RIP+.L_64a568]
            movsd QWORD PTR [RSP+16],XMM3
            movaps XMMWORD PTR [RSP+32],XMM4
            movsd QWORD PTR [RSP+8],XMM2
            call __cxa_guard_release@PLT

            movsd XMM3,QWORD PTR [RSP+16]
            movapd XMM4,XMMWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+8]
            jmp .L_436a44
          .byte 0x66
          .byte 0x90
.L_437320:

            lea RDI,QWORD PTR [RIP+.L_64a568]
            movsd QWORD PTR [RSP+32],XMM2
            movaps XMMWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+24],XMM3
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP+24]
            movsd XMM2,QWORD PTR [RSP+32]
            movapd XMM4,XMMWORD PTR [RSP+64]
            je .L_436b7c

            lea RAX,QWORD PTR [RIP+.L_64a590]
            movapd XMM0,XMMWORD PTR [RIP+.L_43a210]
            lea RDX,QWORD PTR [RAX+152]
            movaps XMMWORD PTR [RIP+.L_64a580],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439e60]
            movsd XMM1,QWORD PTR [RIP+.L_64a588]
            nop
            nop
            nop
            nop
.L_437388:

            addsd XMM1,XMM0
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM1
            cmp RDX,RAX
            jne .L_437388

            lea RDI,QWORD PTR [RIP+.L_64a568]
            movsd QWORD PTR [RSP+32],XMM3
            movaps XMMWORD PTR [RSP+64],XMM4
            movsd QWORD PTR [RSP+24],XMM2
            call __cxa_guard_release@PLT

            movsd XMM3,QWORD PTR [RSP+32]
            movapd XMM4,XMMWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_436b7c
          .byte 0x66
          .byte 0x90
.L_4373d0:

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+24],XMM2
            movaps XMMWORD PTR [RSP+64],XMM4
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP+24]
            movapd XMM4,XMMWORD PTR [RSP+64]
            je .L_436bea

            lea RAX,QWORD PTR [RIP+.L_64a4d0]
            movapd XMM0,XMMWORD PTR [RIP+.L_43a220]
            lea RDX,QWORD PTR [RAX+152]
            movaps XMMWORD PTR [RIP+.L_64a4c0],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439e70]
            movsd XMM1,QWORD PTR [RIP+.L_64a4c8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437430:

            addsd XMM1,XMM0
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM1
            cmp RDX,RAX
            jne .L_437430

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+24],XMM2
            movaps XMMWORD PTR [RSP+64],XMM4
            call __cxa_guard_release@PLT

            movapd XMM4,XMMWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+24]
            jmp .L_436bea
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437470:

            lea RDI,QWORD PTR [RIP+.L_64a568]
            movsd QWORD PTR [RSP+152],XMM3
            movaps XMMWORD PTR [RSP+160],XMM4
            movsd QWORD PTR [RSP+144],XMM2
            movsd QWORD PTR [RSP+128],XMM5
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM5,QWORD PTR [RSP+128]
            movsd XMM2,QWORD PTR [RSP+144]
            movsd XMM3,QWORD PTR [RSP+152]
            movapd XMM4,XMMWORD PTR [RSP+160]
            je .L_436e1c

            lea RAX,QWORD PTR [RIP+.L_64a590]
            movapd XMM0,XMMWORD PTR [RIP+.L_43a210]
            lea RDX,QWORD PTR [RAX+152]
            movaps XMMWORD PTR [RIP+.L_64a580],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439e60]
            movsd XMM1,QWORD PTR [RIP+.L_64a588]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437500:

            addsd XMM1,XMM0
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM1
            cmp RDX,RAX
            jne .L_437500

            lea RDI,QWORD PTR [RIP+.L_64a568]
            movsd QWORD PTR [RSP+152],XMM5
            movaps XMMWORD PTR [RSP+160],XMM4
            movsd QWORD PTR [RSP+144],XMM2
            movsd QWORD PTR [RSP+128],XMM3
            call __cxa_guard_release@PLT

            movsd XMM5,QWORD PTR [RSP+152]
            movapd XMM4,XMMWORD PTR [RSP+160]
            movsd XMM2,QWORD PTR [RSP+144]
            movsd XMM3,QWORD PTR [RSP+128]
            jmp .L_436e1c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_437570:

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+96],XMM2
            movaps XMMWORD PTR [RSP+128],XMM4
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP+96]
            movapd XMM4,XMMWORD PTR [RSP+128]
            je .L_436d38

            lea RAX,QWORD PTR [RIP+.L_64a4d0]
            movapd XMM0,XMMWORD PTR [RIP+.L_43a220]
            lea RCX,QWORD PTR [RAX+152]
            movaps XMMWORD PTR [RIP+.L_64a4c0],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439e70]
            movsd XMM1,QWORD PTR [RIP+.L_64a4c8]
            nop
            nop
.L_4375d0:

            addsd XMM1,XMM0
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM1
            cmp RAX,RCX
            jne .L_4375d0

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+96],XMM2
            movaps XMMWORD PTR [RSP+128],XMM4
            call __cxa_guard_release@PLT

            movapd XMM4,XMMWORD PTR [RSP+128]
            movsd XMM2,QWORD PTR [RSP+96]
            jmp .L_436d38
.L_437610:

            lea RDI,QWORD PTR [RIP+.L_64a568]
            movsd QWORD PTR [RSP+96],XMM2
            movaps XMMWORD PTR [RSP+128],XMM4
            movsd QWORD PTR [RSP+48],XMM3
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM3,QWORD PTR [RSP+48]
            movsd XMM2,QWORD PTR [RSP+96]
            movapd XMM4,XMMWORD PTR [RSP+128]
            je .L_436cca

            lea RAX,QWORD PTR [RIP+.L_64a590]
            movapd XMM0,XMMWORD PTR [RIP+.L_43a210]
            lea RCX,QWORD PTR [RAX+152]
            movaps XMMWORD PTR [RIP+.L_64a580],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439e60]
            movsd XMM1,QWORD PTR [RIP+.L_64a588]
            nop
            nop
            nop
            nop
            nop
            nop
.L_437680:

            addsd XMM1,XMM0
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM1
            cmp RCX,RAX
            jne .L_437680

            lea RDI,QWORD PTR [RIP+.L_64a568]
            movsd QWORD PTR [RSP+96],XMM3
            movaps XMMWORD PTR [RSP+128],XMM4
            movsd QWORD PTR [RSP+48],XMM2
            call __cxa_guard_release@PLT

            movsd XMM3,QWORD PTR [RSP+96]
            movapd XMM4,XMMWORD PTR [RSP+128]
            movsd XMM2,QWORD PTR [RSP+48]
            jmp .L_436cca
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4376d0:

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+152],XMM6
            movaps XMMWORD PTR [RSP+160],XMM4
            movsd QWORD PTR [RSP+144],XMM3
            movsd QWORD PTR [RSP+128],XMM5
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM5,QWORD PTR [RSP+128]
            movsd XMM3,QWORD PTR [RSP+144]
            movsd XMM6,QWORD PTR [RSP+152]
            movapd XMM4,XMMWORD PTR [RSP+160]
            je .L_436ea4

            lea RAX,QWORD PTR [RIP+.L_64a4d0]
            movapd XMM0,XMMWORD PTR [RIP+.L_43a220]
            lea RDX,QWORD PTR [RAX+152]
            movaps XMMWORD PTR [RIP+.L_64a4c0],XMM0
            movsd XMM0,QWORD PTR [RIP+.L_439e70]
            movsd XMM1,QWORD PTR [RIP+.L_64a4c8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437760:

            addsd XMM1,XMM0
            add RAX,8
            movsd QWORD PTR [RAX-8],XMM1
            cmp RDX,RAX
            jne .L_437760

            lea RDI,QWORD PTR [RIP+.L_64a4a8]
            movsd QWORD PTR [RSP+152],XMM5
            movaps XMMWORD PTR [RSP+160],XMM4
            movsd QWORD PTR [RSP+144],XMM3
            movsd QWORD PTR [RSP+128],XMM6
            call __cxa_guard_release@PLT

            movsd XMM5,QWORD PTR [RSP+152]
            movapd XMM4,XMMWORD PTR [RSP+160]
            movsd XMM3,QWORD PTR [RSP+144]
            movsd XMM6,QWORD PTR [RSP+128]
            jmp .L_436ea4
.L_4377ca:

            mov EAX,DWORD PTR [RSP+204]
            lea EDX,DWORD PTR [RAX+RBX*1-1]
            jmp .L_436c63
.L_4377da:

            add R12,24
            cmp R12,RBX
            jne .L_4368f8

            jmp .L_436913
.L_4377ec:

            mov RDI,QWORD PTR [RSP+120]
            mov EDX,3
            lea RCX,QWORD PTR [RSP+208]
            sub RDX,RAX
.L_437801:

            call .L_418db0
.L_437806:

            mov RCX,QWORD PTR [RSP+208]
            jmp .L_436924
.L_437813:

            mov QWORD PTR [RSP+224],RBX
            xor ECX,ECX
            xor EBP,EBP
            mov RAX,R8
            jmp .L_43689e
.L_437827:

            lea RCX,QWORD PTR [RIP+.L_439d40]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_439693]
            mov EDX,234
            call __assert_fail@PLT
.L_437846:

            call _ZSt17__throw_bad_allocv@PLT
.L_43784b:

            call __stack_chk_fail@PLT
.L_437850:

            mov RDI,QWORD PTR [RSP+208]
            mov RBX,RAX
            test RDI,RDI
            je .L_437865

            call _ZdlPv@PLT
.L_437865:

            mov RDI,RBX
            call _Unwind_Resume@PLT
.L_43786d:

            nop
            nop
            nop
.L_437870:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            movabs RSI,-6148914691236517205
            push RBP
            push RBX
            mov R13,RDI
            mov RBX,R8
            sub RSP,136
.L_437894:

            mov RAX,QWORD PTR [R8]
            mov QWORD PTR [RSP+56],RCX
            mov RCX,QWORD PTR [R8+8]
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+24],R9
            mov RDX,RCX
            sub RDX,RAX
            sar RDX,3
            imul RDX,RSI
            cmp RDX,2
            jbe .L_438a18

            cmp RDX,3
            je .L_437908

            lea R12,QWORD PTR [RAX+72]
            cmp RCX,R12
            je .L_437904

            lea RDX,QWORD PTR [RAX+96]
            mov R15,R12
            sub RCX,RDX
            mov RDX,RCX
            and RDX,-8
            lea RBP,QWORD PTR [RAX+RDX*1+96]
.L_4378e7:

            mov RDI,QWORD PTR [R15]
            test RDI,RDI
            je .L_4389cb

            add R15,24
            call _ZdlPv@PLT

            cmp RBP,R15
            jne .L_4378e7
.L_437901:

            mov RAX,QWORD PTR [RBX]
.L_437904:

            mov QWORD PTR [RBX+8],R12
.L_437908:

            mov RBP,QWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RAX]
            imul RBP,QWORD PTR [RSP+56]
            mov RDX,QWORD PTR [RAX+8]
            sub RDX,RCX
            sar RDX,2
            lea RSI,QWORD PTR [RBP*4]
            cmp RBP,RDX
            mov QWORD PTR [RSP+16],RSI
            ja .L_438a02

            jae .L_437940

            add RCX,RSI
            mov QWORD PTR [RAX+8],RCX
.L_437940:

            mov RCX,QWORD PTR [RAX+24]
            mov RDX,QWORD PTR [RAX+32]
            lea RDI,QWORD PTR [RAX+24]
            sub RDX,RCX
            sar RDX,2
            cmp RBP,RDX
            ja .L_4389ef

            jae .L_437967

            add RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX+32],RCX
.L_437967:

            mov RCX,QWORD PTR [RAX+48]
            mov RDX,QWORD PTR [RAX+56]
            lea RDI,QWORD PTR [RAX+48]
            sub RDX,RCX
            sar RDX,2
            cmp RBP,RDX
            ja .L_438a30

            jae .L_43798e

            add RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RAX+56],RCX
.L_43798e:

            mov R15,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP+56]
            mov R8,RBX
            mov RSI,R14
            mov RDI,R13
            mov RDX,R15
            mov R14,R15
            mov RCX,R12
            call .L_4367e0

            mov R13D,R12D
            mov QWORD PTR [RSP+32],RBP
            xor R15D,R15D
            mov RBP,RBX
            mov EBX,R14D
.L_4379c0:

            mov RDX,QWORD PTR [RBP]
            lea R12,QWORD PTR [R15+R15*2]
            mov ESI,R13D
            mov EDI,EBX
            lea RDX,QWORD PTR [RDX+R12*8]
            call .L_431e80

            mov RDX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RSP+56]
            xor ESI,ESI
            mov EDI,4
            mov R8,QWORD PTR [RDX+R12*8]
            mov RDX,R14
            call .L_4318c0

            lea RAX,QWORD PTR [RIP+.L_439d80]
            mov RDX,QWORD PTR [RBP]
            mov RSI,QWORD PTR [RSP+56]
            pxor XMM1,XMM1
            mov RDI,R14
            movsd XMM2,QWORD PTR [RAX+R15*8]
            add R15,1
            mov RDX,QWORD PTR [RDX+R12*8]
            movapd XMM0,XMM2
            movsd QWORD PTR [RSP+8],XMM2
            call .L_435200

            cmp R15,3
            jne .L_4379c0

            mov RAX,QWORD PTR [RSP+24]
            movabs RDI,-6148914691236517205
            mov RBX,RBP
            mov RBP,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RAX+8]
            mov RDX,QWORD PTR [RAX]
            mov RCX,RSI
            sub RCX,RDX
            sar RCX,3
            imul RCX,RDI
            cmp RCX,2
            jbe .L_438a83

            cmp RCX,3
            je .L_437aad

            lea R12,QWORD PTR [RDX+72]
            cmp RSI,R12
            je .L_437aa9

            lea RAX,QWORD PTR [RDX+96]
            mov R14,R12
            sub RSI,RAX
            mov RAX,RSI
            and RAX,-8
            lea R13,QWORD PTR [RDX+RAX*1+96]
.L_437a87:

            mov RDI,QWORD PTR [R14]
            test RDI,RDI
            je .L_4389dd

            add R14,24
            call _ZdlPv@PLT

            cmp R13,R14
            jne .L_437a87
.L_437aa1:

            mov RAX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX]
.L_437aa9:

            mov QWORD PTR [RAX+8],R12
.L_437aad:

            mov RCX,QWORD PTR [RDX]
            mov RAX,QWORD PTR [RDX+8]
            sub RAX,RCX
            sar RAX,2
            cmp RBP,RAX
            ja .L_438a68

            jae .L_437acf

            add RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RDX+8],RCX
.L_437acf:

            mov RCX,QWORD PTR [RDX+24]
            mov RAX,QWORD PTR [RDX+32]
            lea RDI,QWORD PTR [RDX+24]
            sub RAX,RCX
            sar RAX,2
            cmp RBP,RAX
            ja .L_438a50

            jae .L_437af6

            add RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RDX+32],RCX
.L_437af6:

            mov RCX,QWORD PTR [RDX+48]
            mov RAX,QWORD PTR [RDX+56]
            lea RDI,QWORD PTR [RDX+48]
            sub RAX,RCX
            sar RAX,2
            cmp RBP,RAX
            ja .L_438a40

            jae .L_437b1d

            add RCX,QWORD PTR [RSP+16]
            mov QWORD PTR [RDX+56],RCX
.L_437b1d:

            cmp QWORD PTR [RSP+56],0
            je .L_43855a

            mov RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+8],RBX
            shl RAX,2
            mov QWORD PTR [RSP+88],RAX
.L_437b4e:

            cmp QWORD PTR [RSP+48],0
            je .L_438535

            mov R15,QWORD PTR [RSP+80]
            xor EBP,EBP
            lea R14,QWORD PTR [RIP+.L_6493e0]
            pxor XMM1,XMM1
            jmp .L_437bcb
          .byte 0x66
          .byte 0x90
.L_437b70:

            pxor XMM3,XMM3
            lea RSI,QWORD PTR [RIP+.L_644340]
            movsxd RDX,EBX
            movsd XMM4,QWORD PTR [RSP+16]
            movsd XMM2,QWORD PTR [RSI+RDX*8]
            add RSI,8
            cvtsi2sd XMM3,EBX
            mov RAX,QWORD PTR [RAX+48]
            movsd XMM0,QWORD PTR [RSI+RDX*8]
            subsd XMM0,XMM2
            subsd XMM4,XMM3
            mulsd XMM0,XMM4
            addsd XMM0,XMM2
            pxor XMM2,XMM2
            cvtsd2ss XMM2,XMM0
.L_437bb2:

            add RBP,1
            movss DWORD PTR [RAX+R15*1],XMM2
            add R15,4
            cmp QWORD PTR [RSP+48],RBP
            je .L_438535
.L_437bcb:

            mov RAX,QWORD PTR [RSP+8]
            pxor XMM8,XMM8
            pxor XMM2,XMM2
            pxor XMM0,XMM0
            mov RAX,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RAX]
            cvtss2sd XMM8,DWORD PTR [RDX+R15*1]
            mov RDX,QWORD PTR [RAX+24]
            mulsd XMM8,QWORD PTR [RIP+.L_43a1d0]
            cvtss2sd XMM2,DWORD PTR [RDX+R15*1]
            mov RDX,QWORD PTR [RAX+48]
            mulsd XMM2,QWORD PTR [RIP+.L_43a1d8]
            cvtss2sd XMM0,DWORD PTR [RDX+R15*1]
            mulsd XMM0,QWORD PTR [RIP+.L_43a1e0]
            movsd QWORD PTR [RSP+16],XMM0
            movzx EDX,BYTE PTR [RIP+.L_6493c0]
            test DL,DL
            je .L_437e28
.L_437c2b:

            ucomisd XMM1,XMM8
            ja .L_437f50
.L_437c36:

            andpd XMM8,XMMWORD PTR [RIP+.L_43a1f0]
            movsd XMM0,QWORD PTR [RIP+.L_64a3d8]
            cvttsd2si R13D,XMM8
            movsd QWORD PTR [RSP+32],XMM8
            cmp R13D,510
            jle .L_438945
.L_437c60:

            pxor XMM6,XMM6
            mov RDX,QWORD PTR [RAX]
            cvtsd2ss XMM6,XMM0
            movss DWORD PTR [RDX+R15*1],XMM6
            movzx EDX,BYTE PTR [RIP+.L_6483a0]
            test DL,DL
            je .L_437f88
.L_437c80:

            ucomisd XMM1,XMM2
            ja .L_438090
.L_437c8a:

            andpd XMM2,XMMWORD PTR [RIP+.L_43a1f0]
            movsd XMM0,QWORD PTR [RIP+.L_6493b8]
            cvttsd2si R12D,XMM2
            movsd QWORD PTR [RSP+40],XMM2
            cmp R12D,510
            jle .L_4384de
.L_437cb2:

            pxor XMM2,XMM2
            mov RDX,QWORD PTR [RAX+24]
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [RDX+R15*1],XMM2
            movzx EDX,BYTE PTR [RIP+.L_647380]
            test DL,DL
            je .L_4380d0
.L_437cd3:

            movsd XMM2,QWORD PTR [RSP+16]
            ucomisd XMM1,XMM2
            ja .L_4381d0
.L_437ce3:

            andpd XMM2,XMMWORD PTR [RIP+.L_43a1f0]
            movsd XMM0,QWORD PTR [RIP+.L_648398]
            cvttsd2si EBX,XMM2
            movsd QWORD PTR [RSP+16],XMM2
            cmp EBX,510
            jle .L_43850a
.L_437d09:

            pxor XMM2,XMM2
            mov RAX,QWORD PTR [RAX+48]
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [RAX+R15*1],XMM2
            movzx EAX,BYTE PTR [RIP+.L_646360]
            test AL,AL
            je .L_438210
.L_437d2a:

            cmp R13D,510
            movsd XMM0,QWORD PTR [RIP+.L_647378]
            jg .L_437d72

            pxor XMM3,XMM3
            lea RDX,QWORD PTR [RIP+.L_646380]
            movsxd RAX,R13D
            movsd XMM7,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RDX+RAX*8]
            add RDX,8
            cvtsi2sd XMM3,R13D
            movsd XMM0,QWORD PTR [RDX+RAX*8]
            subsd XMM0,XMM2
            subsd XMM7,XMM3
            mulsd XMM0,XMM7
            addsd XMM0,XMM2
.L_437d72:

            pxor XMM2,XMM2
            mov RAX,QWORD PTR [RSP+24]
            cvtsd2ss XMM2,XMM0
            mov RAX,QWORD PTR [RAX]
            mov RDX,QWORD PTR [RAX]
            movss DWORD PTR [RDX+R15*1],XMM2
            movzx EDX,BYTE PTR [RIP+.L_645340]
            test DL,DL
            je .L_438300
.L_437d9a:

            cmp R12D,510
            movsd XMM0,QWORD PTR [RIP+.L_646358]
            jg .L_437de2

            pxor XMM3,XMM3
            lea RDI,QWORD PTR [RIP+.L_645360]
            movsxd RDX,R12D
            movsd XMM5,QWORD PTR [RSP+40]
            movsd XMM2,QWORD PTR [RDI+RDX*8]
            add RDI,8
            cvtsi2sd XMM3,R12D
            movsd XMM0,QWORD PTR [RDI+RDX*8]
            subsd XMM0,XMM2
            subsd XMM5,XMM3
            mulsd XMM0,XMM5
            addsd XMM0,XMM2
.L_437de2:

            pxor XMM2,XMM2
            mov RDX,QWORD PTR [RAX+24]
            cvtsd2ss XMM2,XMM0
            movss DWORD PTR [RDX+R15*1],XMM2
            movzx EDX,BYTE PTR [RIP+.L_644320]
            test DL,DL
            je .L_4383f0
.L_437e03:

            cmp EBX,510
            jle .L_437b70

            pxor XMM2,XMM2
            mov RAX,QWORD PTR [RAX+48]
            cvtsd2ss XMM2,QWORD PTR [RIP+.L_645338]
            jmp .L_437bb2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437e28:

            lea RDI,QWORD PTR [RIP+.L_6493c0]
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+40],XMM2
            movsd QWORD PTR [RSP+32],XMM8
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM8,QWORD PTR [RSP+32]
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+64]
            je .L_43896b

            movsd XMM0,QWORD PTR [RIP+.L_439fc8]
            xor EAX,EAX
            movsd XMM9,QWORD PTR [RIP+.L_439fd0]
            movsd QWORD PTR [R14],XMM0
            movsd XMM7,QWORD PTR [RIP+.L_439fd8]
            movsd XMM6,QWORD PTR [RIP+.L_439fe0]
            movsd XMM5,QWORD PTR [RIP+.L_439fe8]
            movsd XMM4,QWORD PTR [RIP+.L_439ff0]
            movsd XMM3,QWORD PTR [RIP+.L_439e20]
            jmp .L_437ee6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437ea8:

            pxor XMM0,XMM0
            movapd XMM10,XMM6
            cvtsi2sd XMM0,RAX
            mulsd XMM0,XMM9
            addsd XMM0,XMM7
            divsd XMM10,XMM0
            movapd XMM0,XMM10
            subsd XMM0,XMM5
            mulsd XMM0,XMM4
            addsd XMM0,XMM3
            ucomisd XMM0,XMM1
            movsd QWORD PTR [R14+RDX*1+8],XMM0
            jb .L_4389ac
.L_437ee6:

            mulsd XMM0,XMM0
            lea RDX,QWORD PTR [RAX*8]
            movsd QWORD PTR [R14+RAX*8],XMM0
            add RAX,1
            cmp RAX,512
            jne .L_437ea8

            lea RDI,QWORD PTR [RIP+.L_6493c0]
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+40],XMM8
            movsd QWORD PTR [RSP+32],XMM2
            call __cxa_guard_release@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM8,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+32]
            ucomisd XMM1,XMM8
            mov RAX,QWORD PTR [RAX]
            jbe .L_437c36

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_437f50:

            pxor XMM4,XMM4
            lea RCX,QWORD PTR [RIP+.L_6493e0]
            movsd QWORD PTR [RSP+32],XMM1
            mov EDX,8
            xor R13D,R13D
.L_437f69:

            movsd XMM3,QWORD PTR [RCX]
            movsd XMM0,QWORD PTR [R14+RDX*1]
            subsd XMM0,XMM3
            mulsd XMM0,XMM4
            addsd XMM0,XMM3
            jmp .L_437c60
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_437f88:

            lea RDI,QWORD PTR [RIP+.L_6483a0]
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+40],XMM2
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM2,QWORD PTR [RSP+40]
            movsd XMM1,QWORD PTR [RSP+64]
            je .L_438978

            movsd XMM0,QWORD PTR [RIP+.L_439ff8]
            lea RDX,QWORD PTR [RIP+.L_6483c0]
            xor EAX,EAX
            movsd XMM8,QWORD PTR [RIP+.L_43a000]
            movsd QWORD PTR [RIP+.L_6483c0],XMM0
            movsd XMM7,QWORD PTR [RIP+.L_43a008]
            movsd XMM6,QWORD PTR [RIP+.L_43a010]
            movsd XMM5,QWORD PTR [RIP+.L_43a018]
            movsd XMM4,QWORD PTR [RIP+.L_43a020]
            movsd XMM3,QWORD PTR [RIP+.L_439e20]
            jmp .L_43803d
.L_438000:

            pxor XMM0,XMM0
            movapd XMM11,XMM6
            cvtsi2sd XMM0,RAX
            mulsd XMM0,XMM8
            addsd XMM0,XMM7
            divsd XMM11,XMM0
            movapd XMM0,XMM11
            addsd XMM0,XMM5
            mulsd XMM0,XMM4
            addsd XMM0,XMM3
            ucomisd XMM0,XMM1
            movsd QWORD PTR [RDX+RCX*1+8],XMM0
            jb .L_4389ac
.L_43803d:

            mulsd XMM0,XMM0
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM0
            add RAX,1
            cmp RAX,512
            jne .L_438000

            lea RDI,QWORD PTR [RIP+.L_6483a0]
            movsd QWORD PTR [RSP+64],XMM1
            movsd QWORD PTR [RSP+40],XMM2
            call __cxa_guard_release@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            movsd XMM2,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RSP+8]
            ucomisd XMM1,XMM2
            mov RAX,QWORD PTR [RAX]
            jbe .L_437c8a
.L_438090:

            lea RDX,QWORD PTR [RIP+.L_6483c0]
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+40],XMM1
            mov ECX,8
            xor R12D,R12D
            mov RDI,RDX
.L_4380ac:

            movsd XMM2,QWORD PTR [RDI]
            movsd XMM0,QWORD PTR [RDX+RCX*1]
            subsd XMM0,XMM2
            mulsd XMM0,XMM3
            addsd XMM0,XMM2
            jmp .L_437cb2
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4380d0:

            lea RDI,QWORD PTR [RIP+.L_647380]
            movsd QWORD PTR [RSP+64],XMM1
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+64]
            je .L_438985

            movsd XMM0,QWORD PTR [RIP+.L_43a028]
            lea RDX,QWORD PTR [RIP+.L_6473a0]
            xor EAX,EAX
            movsd XMM7,QWORD PTR [RIP+.L_43a030]
            movsd QWORD PTR [RIP+.L_6473a0],XMM0
            movsd XMM6,QWORD PTR [RIP+.L_43a038]
            movsd XMM5,QWORD PTR [RIP+.L_43a040]
            movsd XMM4,QWORD PTR [RIP+.L_43a048]
            movsd XMM3,QWORD PTR [RIP+.L_43a050]
            movsd XMM2,QWORD PTR [RIP+.L_439e20]
            jmp .L_43817c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438140:

            pxor XMM0,XMM0
            movapd XMM12,XMM5
            cvtsi2sd XMM0,RAX
            mulsd XMM0,XMM7
            addsd XMM0,XMM6
            divsd XMM12,XMM0
            movapd XMM0,XMM12
            subsd XMM0,XMM4
            mulsd XMM0,XMM3
            addsd XMM0,XMM2
            ucomisd XMM0,XMM1
            movsd QWORD PTR [RDX+RCX*1+8],XMM0
            jb .L_4389ac
.L_43817c:

            mulsd XMM0,XMM0
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM0
            add RAX,1
            cmp RAX,512
            jne .L_438140

            lea RDI,QWORD PTR [RIP+.L_647380]
            movsd QWORD PTR [RSP+64],XMM1
            call __cxa_guard_release@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            mov RAX,QWORD PTR [RSP+8]
            movsd XMM2,QWORD PTR [RSP+16]
            ucomisd XMM1,XMM2
            mov RAX,QWORD PTR [RAX]
            jbe .L_437ce3

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4381d0:

            lea RDX,QWORD PTR [RIP+.L_6473a0]
            pxor XMM3,XMM3
            movsd QWORD PTR [RSP+16],XMM1
            mov EDI,8
            xor EBX,EBX
            mov R8,RDX
.L_4381eb:

            movsd XMM2,QWORD PTR [R8]
            movsd XMM0,QWORD PTR [RDX+RDI*1]
            subsd XMM0,XMM2
            mulsd XMM0,XMM3
            addsd XMM0,XMM2
            jmp .L_437d09
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438210:

            lea RDI,QWORD PTR [RIP+.L_646360]
            movsd QWORD PTR [RSP+64],XMM1
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+64]
            je .L_437d2a

            movsd XMM0,QWORD PTR [RIP+.L_43a058]
            lea RDX,QWORD PTR [RIP+.L_646380]
            xor EAX,EAX
            movsd XMM7,QWORD PTR [RIP+.L_43a060]
            movsd QWORD PTR [RIP+.L_646380],XMM0
            movsd XMM6,QWORD PTR [RIP+.L_43a068]
            movsd XMM5,QWORD PTR [RIP+.L_43a070]
            movsd XMM4,QWORD PTR [RIP+.L_43a078]
            movsd XMM3,QWORD PTR [RIP+.L_43a080]
            movsd XMM2,QWORD PTR [RIP+.L_439e20]
            jmp .L_4382bc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438280:

            pxor XMM0,XMM0
            movapd XMM13,XMM5
            cvtsi2sd XMM0,RAX
            mulsd XMM0,XMM7
            addsd XMM0,XMM6
            divsd XMM13,XMM0
            movapd XMM0,XMM13
            subsd XMM0,XMM4
            mulsd XMM0,XMM3
            addsd XMM0,XMM2
            ucomisd XMM0,XMM1
            movsd QWORD PTR [RDX+RCX*1+8],XMM0
            jb .L_4389ac
.L_4382bc:

            mulsd XMM0,XMM0
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM0
            add RAX,1
            cmp RAX,512
            jne .L_438280

            lea RDI,QWORD PTR [RIP+.L_646360]
            movsd QWORD PTR [RSP+64],XMM1
            call __cxa_guard_release@PLT

            movsd XMM1,QWORD PTR [RSP+64]
            jmp .L_437d2a
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_438300:

            lea RDI,QWORD PTR [RIP+.L_645340]
            movsd QWORD PTR [RSP+32],XMM1
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+32]
            je .L_438992

            movsd XMM0,QWORD PTR [RIP+.L_43a088]
            lea RDX,QWORD PTR [RIP+.L_645360]
            xor EAX,EAX
            movsd XMM7,QWORD PTR [RIP+.L_43a090]
            movsd QWORD PTR [RIP+.L_645360],XMM0
            movsd XMM6,QWORD PTR [RIP+.L_43a098]
            movsd XMM5,QWORD PTR [RIP+.L_43a0a0]
            movsd XMM4,QWORD PTR [RIP+.L_43a0a8]
            movsd XMM3,QWORD PTR [RIP+.L_43a0b0]
            movsd XMM2,QWORD PTR [RIP+.L_439e20]
            jmp .L_4383ac
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438370:

            pxor XMM0,XMM0
            movapd XMM14,XMM5
            cvtsi2sd XMM0,RAX
            mulsd XMM0,XMM7
            addsd XMM0,XMM6
            divsd XMM14,XMM0
            movapd XMM0,XMM14
            subsd XMM0,XMM4
            mulsd XMM0,XMM3
            addsd XMM0,XMM2
            ucomisd XMM0,XMM1
            movsd QWORD PTR [RDX+RCX*1+8],XMM0
            jb .L_4389ac
.L_4383ac:

            mulsd XMM0,XMM0
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM0
            add RAX,1
            cmp RAX,512
            jne .L_438370

            lea RDI,QWORD PTR [RIP+.L_645340]
            movsd QWORD PTR [RSP+32],XMM1
            call __cxa_guard_release@PLT

            mov RAX,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RAX]
            jmp .L_437d9a
          .byte 0x66
          .byte 0x90
.L_4383f0:

            lea RDI,QWORD PTR [RIP+.L_644320]
            movsd QWORD PTR [RSP+32],XMM1
            call __cxa_guard_acquire@PLT

            test EAX,EAX
            movsd XMM1,QWORD PTR [RSP+32]
            je .L_43899f

            movsd XMM0,QWORD PTR [RIP+.L_43a0b8]
            lea RDX,QWORD PTR [RIP+.L_644340]
            xor EAX,EAX
            movsd XMM7,QWORD PTR [RIP+.L_43a0c0]
            movsd QWORD PTR [RIP+.L_644340],XMM0
            movsd XMM6,QWORD PTR [RIP+.L_43a0c8]
            movsd XMM5,QWORD PTR [RIP+.L_43a0d0]
            movsd XMM4,QWORD PTR [RIP+.L_43a0d8]
            movsd XMM3,QWORD PTR [RIP+.L_43a0e0]
            movsd XMM2,QWORD PTR [RIP+.L_439e20]
            jmp .L_43849c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_438460:

            pxor XMM0,XMM0
            movapd XMM15,XMM5
            cvtsi2sd XMM0,RAX
            mulsd XMM0,XMM7
            addsd XMM0,XMM6
            divsd XMM15,XMM0
            movapd XMM0,XMM15
            subsd XMM0,XMM4
            mulsd XMM0,XMM3
            addsd XMM0,XMM2
            ucomisd XMM0,XMM1
            movsd QWORD PTR [RDX+RCX*1+8],XMM0
            jb .L_4389ac
.L_43849c:

            mulsd XMM0,XMM0
            lea RCX,QWORD PTR [RAX*8]
            movsd QWORD PTR [RDX+RAX*8],XMM0
            add RAX,1
            cmp RAX,512
            jne .L_438460

            lea RDI,QWORD PTR [RIP+.L_644320]
            movsd QWORD PTR [RSP+32],XMM1
            call __cxa_guard_release@PLT

            mov RAX,QWORD PTR [RSP+24]
            movsd XMM1,QWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RAX]
            jmp .L_437e03
.L_4384de:

            pxor XMM0,XMM0
            movsxd RCX,R12D
            movapd XMM3,XMM2
            lea RDX,QWORD PTR [RIP+.L_6483c0]
            shl RCX,3
            cvtsi2sd XMM0,R12D
            lea RDI,QWORD PTR [RDX+RCX*1]
            add RCX,8
            subsd XMM3,XMM0
            jmp .L_4380ac
.L_43850a:

            pxor XMM0,XMM0
            movsxd RDI,EBX
            movapd XMM3,XMM2
            lea RDX,QWORD PTR [RIP+.L_6473a0]
            shl RDI,3
            cvtsi2sd XMM0,EBX
            lea R8,QWORD PTR [RDX+RDI*1]
            add RDI,8
            subsd XMM3,XMM0
            jmp .L_4381eb
.L_438535:

            add QWORD PTR [RSP+72],1
            mov RBX,QWORD PTR [RSP+88]
            mov RAX,QWORD PTR [RSP+72]
            add QWORD PTR [RSP+80],RBX
            cmp QWORD PTR [RSP+56],RAX
            jne .L_437b4e

            mov RBX,QWORD PTR [RSP+8]
.L_43855a:

            mov RAX,QWORD PTR [RSP+24]
            movsd XMM4,QWORD PTR [RIP+.L_43a1e8]
            movapd XMM2,XMMWORD PTR [RIP+.L_43a2c0]
            xor EDI,EDI
            mov R8,QWORD PTR [RBX]
            movapd XMM7,XMM4
            mov R9,QWORD PTR [RAX]
            movapd XMM5,XMM4
            movapd XMM3,XMM2
            movapd XMM6,XMM4
            movaps XMM1,XMMWORD PTR [RSP+96]
            movaps XMM8,XMMWORD PTR [RSP+112]
.L_438592:

            mov R11,QWORD PTR [R8+RDI*1]
            mov RSI,QWORD PTR [R8+RDI*1+8]
            sub RSI,R11
            sar RSI,2
            test RSI,RSI
            je .L_43875d

            mov RAX,R11
            lea RDX,QWORD PTR [RSI-1]
            shr RAX,2
            neg RAX
            and EAX,3
            lea RCX,QWORD PTR [RAX+3]
            cmp RCX,RDX
            ja .L_438a9c

            xor EBP,EBP
            test RAX,RAX
            je .L_438631

            pxor XMM0,XMM0
            cmp RAX,1
            mov EBP,1
            cvtss2sd XMM0,DWORD PTR [R11]
            mulsd XMM0,XMM7
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [R11],XMM0
            je .L_438631

            pxor XMM0,XMM0
            cmp RAX,3
            mov EBP,2
            cvtss2sd XMM0,DWORD PTR [R11+4]
            mulsd XMM0,XMM7
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [R11+4],XMM0
            jne .L_438631

            pxor XMM0,XMM0
            mov EBP,3
            cvtss2sd XMM0,DWORD PTR [R11+8]
            mulsd XMM0,XMM7
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [R11+8],XMM0
.L_438631:

            mov RBX,RSI
            lea RCX,QWORD PTR [R11+RAX*4]
            xor EDX,EDX
            sub RBX,RAX
            xor EAX,EAX
            mov R10,RBX
            shr R10,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438650:

            movaps XMM9,XMMWORD PTR [RCX+RAX*1]
            add RDX,1
            movhlps XMM1,XMM9
            cvtps2pd XMM0,XMM9
            cvtps2pd XMM9,XMM1
            mulpd XMM0,XMM2
            mulpd XMM9,XMM2
            cvtpd2ps XMM0,XMM0
            cvtpd2ps XMM9,XMM9
            movlhps XMM0,XMM9
            movaps XMMWORD PTR [RCX+RAX*1],XMM0
            add RAX,16
            cmp RDX,R10
            jb .L_438650

            mov RDX,RBX
            and RDX,-4
            cmp RDX,RBX
            lea RAX,QWORD PTR [RDX+RBP*1]
            je .L_43875d
.L_43869c:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RAX*4]
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM4
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            lea RDX,QWORD PTR [RAX+1]
            cmp RSI,RDX
            jbe .L_43875d

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RDX*4]
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM4
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            lea RDX,QWORD PTR [RAX+2]
            cmp RSI,RDX
            jbe .L_43875d

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RDX*4]
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM4
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            lea RDX,QWORD PTR [RAX+3]
            cmp RSI,RDX
            jbe .L_43875d

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RDX*4]
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM4
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            lea RDX,QWORD PTR [RAX+4]
            cmp RSI,RDX
            jbe .L_43875d

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RDX*4]
            add RAX,5
            cmp RSI,RAX
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM4
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            jbe .L_43875d

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [R11+RAX*4]
            cvtss2sd XMM0,DWORD PTR [RAX]
            mulsd XMM0,XMM4
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RAX],XMM0
.L_43875d:

            mov R11,QWORD PTR [R9+RDI*1]
            mov RSI,QWORD PTR [R9+RDI*1+8]
            sub RSI,R11
            sar RSI,2
            test RSI,RSI
            je .L_438925

            mov RAX,R11
            lea RDX,QWORD PTR [RSI-1]
            shr RAX,2
            neg RAX
            and EAX,3
            lea RCX,QWORD PTR [RAX+3]
            cmp RCX,RDX
            ja .L_438aa3

            xor EBP,EBP
            test RAX,RAX
            je .L_4387fc

            pxor XMM0,XMM0
            cmp RAX,1
            mov EBP,1
            cvtss2sd XMM0,DWORD PTR [R11]
            mulsd XMM0,XMM6
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [R11],XMM0
            je .L_4387fc

            pxor XMM0,XMM0
            cmp RAX,3
            mov EBP,2
            cvtss2sd XMM0,DWORD PTR [R11+4]
            mulsd XMM0,XMM6
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [R11+4],XMM0
            jne .L_4387fc

            pxor XMM0,XMM0
            mov EBP,3
            cvtss2sd XMM0,DWORD PTR [R11+8]
            mulsd XMM0,XMM6
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [R11+8],XMM0
.L_4387fc:

            mov RBX,RSI
            lea RCX,QWORD PTR [R11+RAX*4]
            xor EDX,EDX
            sub RBX,RAX
            xor EAX,EAX
            mov R10,RBX
            shr R10,2
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438818:

            movaps XMM9,XMMWORD PTR [RCX+RAX*1]
            add RDX,1
            movhlps XMM8,XMM9
            cvtps2pd XMM0,XMM9
            cvtps2pd XMM9,XMM8
            mulpd XMM0,XMM3
            mulpd XMM9,XMM3
            cvtpd2ps XMM0,XMM0
            cvtpd2ps XMM9,XMM9
            movlhps XMM0,XMM9
            movaps XMMWORD PTR [RCX+RAX*1],XMM0
            add RAX,16
            cmp RDX,R10
            jb .L_438818

            mov RDX,RBX
            and RDX,-4
            cmp RDX,RBX
            lea RAX,QWORD PTR [RDX+RBP*1]
            je .L_438925
.L_438864:

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RAX*4]
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM5
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            lea RDX,QWORD PTR [RAX+1]
            cmp RDX,RSI
            jae .L_438925

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RDX*4]
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM5
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            lea RDX,QWORD PTR [RAX+2]
            cmp RDX,RSI
            jae .L_438925

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RDX*4]
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM5
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            lea RDX,QWORD PTR [RAX+3]
            cmp RSI,RDX
            jbe .L_438925

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RDX*4]
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM5
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            lea RDX,QWORD PTR [RAX+4]
            cmp RSI,RDX
            jbe .L_438925

            pxor XMM0,XMM0
            lea RDX,QWORD PTR [R11+RDX*4]
            add RAX,5
            cmp RSI,RAX
            cvtss2sd XMM0,DWORD PTR [RDX]
            mulsd XMM0,XMM5
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RDX],XMM0
            jbe .L_438925

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [R11+RAX*4]
            cvtss2sd XMM0,DWORD PTR [RAX]
            mulsd XMM0,XMM5
            cvtsd2ss XMM0,XMM0
            movss DWORD PTR [RAX],XMM0
.L_438925:

            add RDI,24
            cmp RDI,72
            jne .L_438592

            add RSP,136
.L_43893a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_438945:

            pxor XMM0,XMM0
            movsxd RDX,R13D
            movapd XMM4,XMM8
            shl RDX,3
            lea RCX,QWORD PTR [R14+RDX*1]
            add RDX,8
            cvtsi2sd XMM0,R13D
            subsd XMM4,XMM0
            jmp .L_437f69
.L_43896b:

            mov RAX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RAX]
            jmp .L_437c2b
.L_438978:

            mov RAX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RAX]
            jmp .L_437c80
.L_438985:

            mov RAX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RAX]
            jmp .L_437cd3
.L_438992:

            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX]
            jmp .L_437d9a
.L_43899f:

            mov RAX,QWORD PTR [RSP+24]
            mov RAX,QWORD PTR [RAX]
            jmp .L_437e03
.L_4389ac:

            lea RCX,QWORD PTR [RIP+.L_439bc0]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396a8]
            mov EDX,1225
            call __assert_fail@PLT
.L_4389cb:

            add R15,24
            cmp R15,RBP
            jne .L_4378e7

            jmp .L_437901
.L_4389dd:

            add R14,24
            cmp R14,R13
            jne .L_437a87

            jmp .L_437aa1
.L_4389ef:

            mov RSI,RBP
            sub RSI,RDX
            call .L_439730

            mov RAX,QWORD PTR [RBX]
            jmp .L_437967
.L_438a02:

            mov RSI,RBP
            mov RDI,RAX
            sub RSI,RDX
            call .L_439730

            mov RAX,QWORD PTR [RBX]
            jmp .L_437940
.L_438a18:

            mov ESI,3
            mov RDI,R8
            sub RSI,RDX
            call .L_4398d0

            mov RAX,QWORD PTR [RBX]
            jmp .L_437908
.L_438a30:

            mov RSI,RBP
            sub RSI,RDX
            call .L_439730

            jmp .L_43798e
.L_438a40:

            mov RSI,RBP
            sub RSI,RAX
            call .L_439730

            jmp .L_437b1d
.L_438a50:

            mov RSI,RBP
            sub RSI,RAX
            call .L_439730

            mov RAX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX]
            jmp .L_437af6
.L_438a68:

            mov RSI,RBP
            mov RDI,RDX
            sub RSI,RAX
            call .L_439730

            mov RAX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RAX]
            jmp .L_437acf
.L_438a83:

            mov RSI,R15
            mov RDI,RAX
            mov R15,RAX
            sub RSI,RCX
            call .L_4398d0

            mov RDX,QWORD PTR [R15]
            jmp .L_437aad
.L_438a9c:

            xor EAX,EAX
            jmp .L_43869c
.L_438aa3:

            xor EAX,EAX
            jmp .L_438864
.L_438aaa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_438ab0:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            push RBX
            sub RSP,248
.L_438ac4:

            mov QWORD PTR [RBP-264],RCX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
            cmp QWORD PTR [RDI],7
            jbe .L_438aea

            cmp QWORD PTR [RDI+8],7
            mov R12,RDI
            ja .L_438b10
.L_438aea:

            mov RAX,QWORD PTR [RBP-56]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4394b0

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_438b0b:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_438b10:

            mov RAX,QWORD PTR [RSI]
            mov RBX,QWORD PTR [RSI+8]
            mov R13,RDX
            movabs RDX,-6148914691236517205
            pxor XMM0,XMM0
            mov R14,RSI
            mov QWORD PTR [RBP-224],0
            mov QWORD PTR [RBP-256],RBX
            sub RBX,RAX
            mov RCX,RAX
            mov RAX,RBX
            sar RAX,3
            imul RAX,RDX
            movaps XMMWORD PTR [RBP-240],XMM0
            test RAX,RAX
            je .L_439460

            movabs RDX,768614336404564650
            cmp RAX,RDX
            ja .L_43957a

            mov RDI,RBX
.L_438b74:

            call _Znwm@PLT
.L_438b79:

            mov QWORD PTR [RBP-272],RAX
            mov RAX,QWORD PTR [R14+8]
            mov QWORD PTR [RBP-256],RAX
            mov RAX,QWORD PTR [R14]
            mov RCX,RAX
.L_438b91:

            mov RAX,QWORD PTR [RBP-272]
            mov RSI,RCX
            mov RCX,QWORD PTR [RBP-256]
            mov QWORD PTR [RBP-248],RAX
            add RBX,RAX
            cmp RSI,RCX
            movq XMM0,QWORD PTR [RBP-248]
            mov QWORD PTR [RBP-224],RBX
            punpcklqdq XMM0,XMM0
            movaps XMMWORD PTR [RBP-240],XMM0
            je .L_439450

            mov RBX,RAX
            mov QWORD PTR [RBP-248],RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_438be0:

            test RBX,RBX
            je .L_438c76

            mov RAX,QWORD PTR [RBP-248]
            xor ECX,ECX
            mov R15,QWORD PTR [RAX+8]
            sub R15,QWORD PTR [RAX]
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R15
            sar RAX,2
            test RAX,RAX
            je .L_438c3a

            movabs RDX,4611686018427387903
            cmp RAX,RDX
            ja .L_4394f3

            mov RDI,R15
.L_438c32:

            call _Znwm@PLT
.L_438c37:

            mov RCX,RAX
.L_438c3a:

            mov RAX,QWORD PTR [RBP-248]
            add R15,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+16],R15
            mov QWORD PTR [RBX+8],RCX
            mov RSI,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+8]
            mov R15,RAX
            sub R15,RSI
            cmp RAX,RSI
            je .L_438c6f

            mov RDI,RCX
            mov RDX,R15
            call memmove@PLT

            mov RCX,RAX
.L_438c6f:

            add RCX,R15
            mov QWORD PTR [RBX+8],RCX
.L_438c76:

            add QWORD PTR [RBP-248],24
            add RBX,24
            mov RAX,QWORD PTR [RBP-248]
            cmp QWORD PTR [RBP-256],RAX
            jne .L_438be0
.L_438c96:

            mov RAX,QWORD PTR [R13]
            mov R15,QWORD PTR [R13+8]
            movabs RDX,-6148914691236517205
            pxor XMM0,XMM0
            mov QWORD PTR [RBP-232],RBX
            mov QWORD PTR [RBP-64],0
            mov QWORD PTR [RBP-256],R15
            sub R15,RAX
            mov RCX,RAX
            mov RAX,R15
            sar RAX,3
            imul RAX,RDX
            movaps XMMWORD PTR [RBP-80],XMM0
            test RAX,RAX
            je .L_439470

            movabs RDX,768614336404564650
            lea RBX,QWORD PTR [RBP-240]
            cmp RAX,RDX
            ja .L_43957f

            mov RDI,R15
.L_438cfd:

            call _Znwm@PLT
.L_438d02:

            mov QWORD PTR [RBP-272],RAX
            mov RAX,QWORD PTR [R13+8]
            mov QWORD PTR [RBP-256],RAX
            mov RAX,QWORD PTR [R13]
            mov RCX,RAX
.L_438d1b:

            mov RBX,QWORD PTR [RBP-272]
            mov QWORD PTR [RBP-248],RBX
            add R15,RBX
            cmp QWORD PTR [RBP-256],RCX
            movq XMM0,QWORD PTR [RBP-248]
            mov QWORD PTR [RBP-64],R15
            punpcklqdq XMM0,XMM0
            movaps XMMWORD PTR [RBP-80],XMM0
            je .L_438e0e

            mov QWORD PTR [RBP-248],RCX
            nop
            nop
            nop
            nop
.L_438d58:

            test RBX,RBX
            je .L_438dee

            mov RAX,QWORD PTR [RBP-248]
            xor ECX,ECX
            mov R15,QWORD PTR [RAX+8]
            sub R15,QWORD PTR [RAX]
            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX+16],0
            mov RAX,R15
            sar RAX,2
            test RAX,RAX
            je .L_438db2

            movabs RSI,4611686018427387903
            cmp RAX,RSI
            ja .L_439527

            mov RDI,R15
.L_438daa:

            call _Znwm@PLT
.L_438daf:

            mov RCX,RAX
.L_438db2:

            mov RAX,QWORD PTR [RBP-248]
            add R15,RCX
            mov QWORD PTR [RBX],RCX
            mov QWORD PTR [RBX+16],R15
            mov QWORD PTR [RBX+8],RCX
            mov RSI,QWORD PTR [RAX]
            mov RAX,QWORD PTR [RAX+8]
            mov R15,RAX
            sub R15,RSI
            cmp RAX,RSI
            je .L_438de7

            mov RDI,RCX
            mov RDX,R15
            call memmove@PLT

            mov RCX,RAX
.L_438de7:

            add RCX,R15
            mov QWORD PTR [RBX+8],RCX
.L_438dee:

            add QWORD PTR [RBP-248],24
            add RBX,24
            mov RAX,QWORD PTR [RBP-248]
            cmp QWORD PTR [RBP-256],RAX
            jne .L_438d58
.L_438e0e:

            mov QWORD PTR [RBP-72],RBX
            mov RDI,QWORD PTR [R12]
            lea RBX,QWORD PTR [RBP-240]
            lea R15,QWORD PTR [RBP-80]
            mov RSI,QWORD PTR [R12+8]
            mov R9,R13
            mov R8,RBX
            mov RDX,R14
            mov RCX,R15
            call .L_430660

            mov RAX,QWORD PTR [RBP-72]
            mov RDI,QWORD PTR [RBP-80]
            cmp RAX,RDI
            je .L_438e8d

            lea R14,QWORD PTR [RDI+24]
            sub RAX,R14
            shr RAX,3
            lea RAX,QWORD PTR [RDI+RAX*8+24]
            mov QWORD PTR [RBP-248],RAX
            jmp .L_438e75
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_438e60:

            call _ZdlPv@PLT

            cmp QWORD PTR [RBP-248],R14
            mov RDI,R14
            je .L_438e89
.L_438e71:

            add R14,24
.L_438e75:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_438e60

            cmp QWORD PTR [RBP-248],R14
            mov RDI,R14
            jne .L_438e71
.L_438e89:

            mov RDI,QWORD PTR [RBP-80]
.L_438e8d:

            test RDI,RDI
            je .L_438e97

            call _ZdlPv@PLT
.L_438e97:

            cmp QWORD PTR [R12],7
            jbe .L_43955b

            mov RCX,QWORD PTR [RBP-240]
            mov RAX,QWORD PTR [R12+16]
            mov RDX,QWORD PTR [RCX+8]
            sub RDX,QWORD PTR [RCX]
            sar RDX,2
            cmp RAX,RDX
            jne .L_4394d4

            mov RDX,QWORD PTR [R13]
            mov RSI,QWORD PTR [RDX+8]
            sub RSI,QWORD PTR [RDX]
            sar RSI,2
            cmp RAX,RSI
            jne .L_4394b5

            mov RSI,QWORD PTR [RCX+32]
            sub RSI,QWORD PTR [RCX+24]
            sar RSI,2
            cmp RAX,RSI
            jne .L_4394d4

            mov RSI,QWORD PTR [RDX+32]
            sub RSI,QWORD PTR [RDX+24]
            sar RSI,2
            cmp RAX,RSI
            jne .L_4394b5

            mov RSI,QWORD PTR [RCX+56]
            sub RSI,QWORD PTR [RCX+48]
            mov RCX,RSI
            sar RCX,2
            cmp RAX,RCX
            jne .L_4394d4

            mov RCX,QWORD PTR [RDX+56]
            sub RCX,QWORD PTR [RDX+48]
            mov RDX,RCX
            sar RDX,2
            cmp RAX,RDX
            jne .L_4394b5

            mov RAX,QWORD PTR [R12+32]
            pxor XMM0,XMM0
            imul RAX,QWORD PTR [R12+40]
            mov QWORD PTR [RBP-192],0
            movaps XMMWORD PTR [RBP-208],XMM0
            lea RDX,QWORD PTR [RAX+RAX*2]
            test RDX,RDX
            je .L_4394a8

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_439597

            lea R14,QWORD PTR [RDX*4]
            mov RDI,R14
.L_438f80:

            call _Znwm@PLT
.L_438f85:

            mov QWORD PTR [RBP-248],RAX
            mov RDX,R14
            lea R14,QWORD PTR [RAX+R14*1]
            movq XMM0,QWORD PTR [RBP-248]
            xor ESI,ESI
            punpcklqdq XMM0,XMM0
            mov RDI,RAX
            mov QWORD PTR [RBP-192],R14
            movaps XMMWORD PTR [RBP-208],XMM0
            call memset@PLT
.L_438fb7:

            lea RAX,QWORD PTR [RBP-208]
            mov RDX,R13
            mov RSI,RBX
            mov RDI,R12
            mov RCX,RAX
            mov QWORD PTR [RBP-200],R14
            mov QWORD PTR [RBP-248],RAX
.L_438fd8:

            call .L_436200

            mov RAX,QWORD PTR [R12+32]
            pxor XMM0,XMM0
            imul RAX,QWORD PTR [R12+40]
            mov QWORD PTR [RBP-160],0
            movaps XMMWORD PTR [RBP-176],XMM0
            lea RDX,QWORD PTR [RAX+RAX*2]
            test RDX,RDX
            je .L_439480

            movabs RAX,4611686018427387903
            cmp RDX,RAX
            ja .L_43959c

            mov R14,RDX
            shl R14,2
            mov RDI,R14
            call _Znwm@PLT
.L_43902d:

            mov RDX,QWORD PTR [R12+32]
            mov QWORD PTR [RBP-256],RAX
            lea R8,QWORD PTR [RAX+R14*1]
            imul RDX,QWORD PTR [R12+40]
            movq XMM0,QWORD PTR [RBP-256]
            mov RSI,R14
            punpcklqdq XMM0,XMM0
            mov RDI,RAX
            mov QWORD PTR [RBP-160],R8
            mov QWORD PTR [RBP-256],R8
            movaps XMMWORD PTR [RBP-176],XMM0
            lea R14,QWORD PTR [RDX+RDX*2]
            mov RDX,RSI
            xor ESI,ESI
            call memset@PLT

            mov R8,QWORD PTR [RBP-256]
            pxor XMM0,XMM0
            test R14,R14
            mov QWORD PTR [RBP-128],0
            mov QWORD PTR [RBP-168],R8
            movaps XMMWORD PTR [RBP-144],XMM0
            je .L_439492

            movabs RAX,4611686018427387903
            cmp R14,RAX
            ja .L_4395b7

            shl R14,2
            mov RDI,R14
.L_4390bc:

            call _Znwm@PLT
.L_4390c1:

            mov QWORD PTR [RBP-256],RAX
            lea RCX,QWORD PTR [RAX+R14*1]
            mov RDX,R14
            movq XMM0,QWORD PTR [RBP-256]
            xor ESI,ESI
            punpcklqdq XMM0,XMM0
            mov RDI,RAX
            mov QWORD PTR [RBP-128],RCX
            mov QWORD PTR [RBP-256],RCX
            movaps XMMWORD PTR [RBP-144],XMM0
            call memset@PLT

            mov RCX,QWORD PTR [RBP-256]
.L_4390fe:

            lea RAX,QWORD PTR [RBP-144]
            mov QWORD PTR [RBP-136],RCX
            lea RCX,QWORD PTR [RBP-176]
            mov RDX,R13
            mov RSI,RBX
            mov RDI,R12
            mov R14,RAX
            mov R8,RAX
            mov QWORD PTR [RBP-256],RCX
            mov QWORD PTR [RBP-272],RAX
            call .L_430aa0

            mov RCX,R14
            mov RDX,R13
            mov RSI,RBX
            mov RDI,R12
.L_439141:

            call .L_433b60

            pxor XMM0,XMM0
            mov EDI,72
            mov QWORD PTR [RBP-96],0
            movaps XMMWORD PTR [RBP-112],XMM0
            call _Znwm@PLT
.L_439160:

            lea RDX,QWORD PTR [RAX+72]
            cmp RAX,-24
            mov QWORD PTR [RBP-280],RAX
            mov QWORD PTR [RBP-96],RDX
            movq XMM0,QWORD PTR [RBP-280]
            mov QWORD PTR [RAX],0
            punpcklqdq XMM0,XMM0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            movaps XMMWORD PTR [RBP-112],XMM0
            je .L_439440

            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            add RAX,48
            je .L_4391d5
.L_4391be:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
.L_4391d5:

            pxor XMM0,XMM0
            mov EDI,72
            mov QWORD PTR [RBP-104],RDX
            mov QWORD PTR [RBP-64],0
            movaps XMMWORD PTR [RBP-80],XMM0
.L_4391ee:

            call _Znwm@PLT
.L_4391f3:

            lea RDX,QWORD PTR [RAX+72]
            cmp RAX,-24
            mov QWORD PTR [RBP-280],RAX
            mov QWORD PTR [RBP-64],RDX
            movq XMM0,QWORD PTR [RBP-280]
            mov QWORD PTR [RAX],0
            punpcklqdq XMM0,XMM0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            movaps XMMWORD PTR [RBP-80],XMM0
            je .L_439430

            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            add RAX,48
            je .L_439268
.L_439251:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
.L_439268:

            mov QWORD PTR [RBP-72],RDX
            lea R14,QWORD PTR [RBP-112]
            mov RCX,QWORD PTR [R12+8]
            mov RDX,QWORD PTR [R12]
            mov R9,R15
            mov RSI,R13
            mov R8,R14
            mov RDI,RBX
.L_439285:

            call .L_437870

            mov R9,QWORD PTR [RBP-248]
            mov R8,QWORD PTR [RBP-272]
            sub RSP,8
            mov RCX,QWORD PTR [RBP-256]
            push QWORD PTR [RBP-264]
            mov RDX,R15
            mov RSI,R14
            mov RDI,R12
.L_4392b2:

            call .L_434f40
.L_4392b7:

            pop RAX
            mov RDI,QWORD PTR [RBP-80]
            mov RAX,QWORD PTR [RBP-72]
            pop RDX
            cmp RAX,RDI
            je .L_43930b

            lea RCX,QWORD PTR [RDI+24]
            sub RAX,RCX
            mov R14,RCX
            shr RAX,3
            lea R13,QWORD PTR [RDI+RAX*8+24]
            jmp .L_4392f7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4392e0:

            call _ZdlPv@PLT

            cmp R13,R14
            mov RDI,R14
            je .L_439307
.L_4392ed:

            mov RAX,R14
            add RAX,24
            mov R14,RAX
.L_4392f7:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_4392e0

            cmp R13,R14
            mov RDI,R14
            jne .L_4392ed
.L_439307:

            mov RDI,QWORD PTR [RBP-80]
.L_43930b:

            test RDI,RDI
            je .L_439315

            call _ZdlPv@PLT
.L_439315:

            mov RAX,QWORD PTR [RBP-104]
            mov RDI,QWORD PTR [RBP-112]
            cmp RAX,RDI
            je .L_43936b

            lea RSI,QWORD PTR [RDI+24]
            sub RAX,RSI
            mov R14,RSI
            shr RAX,3
            lea R13,QWORD PTR [RDI+RAX*8+24]
            jmp .L_439357
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439340:

            call _ZdlPv@PLT

            cmp R14,R13
            mov RDI,R14
            je .L_439367
.L_43934d:

            mov RAX,R14
            add RAX,24
            mov R14,RAX
.L_439357:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_439340

            cmp R14,R13
            mov RDI,R14
            jne .L_43934d
.L_439367:

            mov RDI,QWORD PTR [RBP-112]
.L_43936b:

            test RDI,RDI
            je .L_439375

            call _ZdlPv@PLT
.L_439375:

            movsxd RDX,DWORD PTR [R12+24]
            mov RSI,QWORD PTR [R12+8]
            mov RCX,QWORD PTR [RBP-264]
            mov RDI,QWORD PTR [R12]
.L_43938a:

            call .L_435560
.L_43938f:

            mov RDI,QWORD PTR [RBP-144]
            test RDI,RDI
            je .L_4393a0

            call _ZdlPv@PLT
.L_4393a0:

            mov RDI,QWORD PTR [RBP-176]
            test RDI,RDI
            je .L_4393b1

            call _ZdlPv@PLT
.L_4393b1:

            mov RDI,QWORD PTR [RBP-208]
            test RDI,RDI
            je .L_4393c2

            call _ZdlPv@PLT
.L_4393c2:

            mov RAX,QWORD PTR [RBP-232]
            mov RDI,QWORD PTR [RBP-240]
            cmp RAX,RDI
            je .L_439418

            lea RBX,QWORD PTR [RDI+24]
            sub RAX,RBX
            shr RAX,3
            lea RAX,QWORD PTR [RDI+RAX*8+24]
            mov R14,RAX
            jmp .L_439401
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4393f0:

            call _ZdlPv@PLT

            cmp RBX,R14
            mov RDI,RBX
            je .L_439411
.L_4393fd:

            add RBX,24
.L_439401:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            jne .L_4393f0

            cmp RBX,R14
            mov RDI,RBX
            jne .L_4393fd
.L_439411:

            mov RDI,QWORD PTR [RBP-240]
.L_439418:

            test RDI,RDI
            je .L_438aea

            call _ZdlPv@PLT

            jmp .L_438aea
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439430:

            mov EAX,24
            jmp .L_439251
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439440:

            mov EAX,24
            jmp .L_4391be
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439450:

            mov RBX,RAX
            jmp .L_438c96
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439460:

            mov QWORD PTR [RBP-272],0
            jmp .L_438b91
.L_439470:

            mov QWORD PTR [RBP-272],0
            jmp .L_438d1b
.L_439480:

            movaps XMMWORD PTR [RBP-144],XMM0
            mov QWORD PTR [RBP-168],0
.L_439492:

            xor ECX,ECX
            mov QWORD PTR [RBP-128],0
            jmp .L_4390fe
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4394a8:

            xor R14D,R14D
            jmp .L_438fb7
.L_4394b0:

            call __stack_chk_fail@PLT
.L_4394b5:

            lea RCX,QWORD PTR [RIP+.L_439c20]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396f5]
            mov EDX,1038
            call __assert_fail@PLT
.L_4394d4:

            lea RCX,QWORD PTR [RIP+.L_439c20]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396d7]
            mov EDX,1037
            call __assert_fail@PLT
.L_4394f3:

            call _ZSt17__throw_bad_allocv@PLT
.L_4394f8:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_439500:

            mov RAX,QWORD PTR [RBP-272]
            cmp RAX,RBX
            je .L_439609

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_43951d

            call _ZdlPv@PLT
.L_43951d:

            add QWORD PTR [RBP-272],24
            jmp .L_439500
.L_439527:

            call _ZSt17__throw_bad_allocv@PLT
.L_43952c:

            mov RDI,RAX
            call __cxa_begin_catch@PLT
.L_439534:

            mov RAX,QWORD PTR [RBP-272]
            cmp RAX,RBX
            je .L_43960e

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_439551

            call _ZdlPv@PLT
.L_439551:

            add QWORD PTR [RBP-272],24
            jmp .L_439534
.L_43955b:

            lea RCX,QWORD PTR [RIP+.L_439c20]
            lea RSI,QWORD PTR [RIP+.L_439660]
            lea RDI,QWORD PTR [RIP+.L_4396cb]
            mov EDX,1035
            call __assert_fail@PLT
.L_43957a:

            call _ZSt17__throw_bad_allocv@PLT
.L_43957f:

            call _ZSt17__throw_bad_allocv@PLT
.L_439584:

            mov R15,RAX
.L_439587:

            mov RDI,RBX
            call .L_4189d0

            mov RDI,R15
.L_439592:

            call _Unwind_Resume@PLT
.L_439597:

            call _ZSt17__throw_bad_allocv@PLT
.L_43959c:

            call _ZSt17__throw_bad_allocv@PLT
.L_4395a1:

            mov R15,RAX
.L_4395a4:

            mov RDI,QWORD PTR [RBP-208]
            test RDI,RDI
            je .L_439587

            call _ZdlPv@PLT

            jmp .L_439587
.L_4395b7:

            call _ZSt17__throw_bad_allocv@PLT
.L_4395bc:

            mov R15,RAX
.L_4395bf:

            mov RDI,QWORD PTR [RBP-176]
            test RDI,RDI
            je .L_4395a4

            call _ZdlPv@PLT

            jmp .L_4395a4
.L_4395d2:

            mov R13,RAX
            mov RDI,R15
            mov R15,R13
            call .L_4189d0
.L_4395e0:

            mov RDI,R14
            call .L_4189d0
.L_4395e8:

            mov RDI,QWORD PTR [RBP-144]
            test RDI,RDI
            je .L_4395bf

            call _ZdlPv@PLT

            jmp .L_4395bf
.L_4395fb:

            mov R15,RAX
            lea R14,QWORD PTR [RBP-112]
            jmp .L_4395e0
.L_439604:

            mov R15,RAX
            jmp .L_4395e8
.L_439609:

            call __cxa_rethrow@PLT
.L_43960e:

            call __cxa_rethrow@PLT
.L_439613:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBP-240]
            test RDI,RDI
            je .L_43962c

            call _ZdlPv@PLT
.L_43962c:

            mov RDI,RBX
.L_43962f:

            call _Unwind_Resume@PLT
.L_439634:

            mov RBX,RAX
            call __cxa_end_catch@PLT

            mov RDI,QWORD PTR [RBP-80]
            test RDI,RDI
            je .L_43964a

            call _ZdlPv@PLT
.L_43964a:

            mov R15,RBX
            lea RBX,QWORD PTR [RBP-240]
            jmp .L_439587
.L_439659:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_439660:
          .string "third_party/butteraugli/butteraugli/butteraugli.cc"
# WARNING: found overlapping blocks at address 39432
# WARNING: found overlapping blocks at address 3943b
.L_439693:
          .string "ix < 10000"
.L_43969e:
          .string "step <= 4"
.L_4396a8:
          .string "lut[i] >= 0.0"
.L_4396b6:
          .string "offset < square_size"
.L_4396cb:
          .string "8 <= xsize_"
.L_4396d7:
          .byte 0x78
          .byte 0x79
          .byte 0x62
          .byte 0x30
          .byte 0x5b
          .byte 0x69
          .byte 0x5d
          .byte 0x2e
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x28
.L_4396e4:

            sub DWORD PTR [RAX],ESP
            cmp EAX,1970151485
            insd DWORD PTR [RDI],DX
            pop RDI
            jo .L_439758
          .byte 0x78
          .byte 0x65
          .byte 0x6c
          .byte 0x73
          .byte 0x5f
          .byte 0x0
.L_4396f5:
          .string "xyb1[i].size() == num_pixels_"
.L_439713:

            jbe .L_43977a
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x3a
          .byte 0x5f
          .byte 0x4d
          .byte 0x5f
          .byte 0x64
          .byte 0x65
          .byte 0x66
          .byte 0x61
          .byte 0x75
          .byte 0x6c
          .byte 0x74
          .byte 0x5f
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x64
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439730:

            test RSI,RSI
            je .L_439788

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RSI
            sub RSP,40
            mov RBP,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            sub RAX,RBP
            sar RAX,2
.L_439758:

            cmp RAX,RSI
            jb .L_439790

            shl RBX,2
            mov RDI,RBP
            xor ESI,ESI
            mov RDX,RBX
            add RBX,RBP
            call memset@PLT

            mov QWORD PTR [R12+8],RBX
            add RSP,40
.L_43977a:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 

            nop
            nop
            nop
.L_439788:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439790:

            mov R14,QWORD PTR [RDI]
            mov RSI,RBP
            movabs RDX,4611686018427387903
            mov RAX,RDX
            sub RSI,R14
            mov R13,RSI
            sar R13,2
            sub RAX,R13
            cmp RBX,RAX
            ja .L_4398a6

            cmp RBX,R13
            mov RAX,R13
            cmovae RAX,RBX
            add RAX,R13
            jb .L_439880

            cmp RAX,RDX
            ja .L_439880

            test RAX,RAX
            je .L_439890

            lea RBP,QWORD PTR [RAX*4]
.L_4397e6:

            mov RDI,RBP
            mov QWORD PTR [RSP+16],RSI
            call _Znwm@PLT

            mov R15,RAX
            lea RAX,QWORD PTR [RAX+RBP*1]
            mov RBP,QWORD PTR [R12+8]
            mov R14,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
            mov RAX,RBP
            sub RAX,R14
            mov QWORD PTR [RSP+24],RAX
.L_439818:

            lea RDI,QWORD PTR [R15+RSI*1]
            lea RDX,QWORD PTR [RBX*4]
            xor ESI,ESI
            call memset@PLT

            cmp RBP,R14
            je .L_439878

            mov RDX,QWORD PTR [RSP+24]
            mov RSI,R14
            mov RDI,R15
            call memmove@PLT
.L_439840:

            mov RDI,R14
            call _ZdlPv@PLT
.L_439848:

            lea RSI,QWORD PTR [RBX+R13*1]
            mov QWORD PTR [R12],R15
            lea RAX,QWORD PTR [R15+RSI*4]
            mov QWORD PTR [R12+8],RAX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R12+16],RAX
            add RSP,40
.L_439867:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439878:

            test R14,R14
            je .L_439848

            jmp .L_439840
          .byte 0x90
.L_439880:

            mov RBP,-4
            jmp .L_4397e6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_439890:

            mov QWORD PTR [RSP+24],RSI
            mov QWORD PTR [RSP+8],0
            xor R15D,R15D
            jmp .L_439818
.L_4398a6:

            lea RDI,QWORD PTR [RIP+.L_439713]
            call _ZSt20__throw_length_errorPKc@PLT
.L_4398b2:
          .byte 0x76
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x3a
          .byte 0x5f
          .byte 0x4d
          .byte 0x5f
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x6c
          .byte 0x5f
          .byte 0x69
          .byte 0x6e
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x74
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4398d0:

            test RSI,RSI
            je .L_439930

            mov R8,QWORD PTR [RDI+8]
            mov RAX,QWORD PTR [RDI+16]
            movabs RDX,-6148914691236517205
            sub RAX,R8
            sar RAX,3
            imul RAX,RDX
            cmp RAX,RSI
            jb .L_439948

            mov RDX,RSI
            mov RAX,R8
.L_4398fd:

            test RAX,RAX
            je .L_439938
.L_439902:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            add RAX,24
            mov QWORD PTR [RAX-8],0
            sub RDX,1
            jne .L_4398fd
.L_439923:

            lea RAX,QWORD PTR [RSI+RSI*2]
            lea RAX,QWORD PTR [R8+RAX*8]
            mov QWORD PTR [RDI+8],RAX
            ret 
.L_439930:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_439938:

            sub RDX,1
            je .L_439923

            mov EAX,24
            jmp .L_439902
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439948:

            push R15
.L_43994a:

            push R14
            mov R15,R8
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,24
.L_43995f:

            mov R9,QWORD PTR [RDI]
            sub R15,R9
            mov R12,R15
            sar R12,3
            imul R12,RDX
            movabs RDX,768614336404564650
            mov RAX,RDX
            sub RAX,R12
            cmp RSI,RAX
            ja .L_439b3d

            cmp RSI,R12
            mov RAX,R12
            cmovae RAX,RSI
            add RAX,R12
            jb .L_439b20

            cmp RAX,RDX
            ja .L_439b20

            test RAX,RAX
            je .L_439b2c

            lea R14,QWORD PTR [RAX+RAX*2]
            shl R14,3
.L_4399b6:

            mov RDI,R14
            call _Znwm@PLT

            mov R8,QWORD PTR [RBP+8]
            mov R13,RAX
            mov R9,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RAX+R14*1]
            mov QWORD PTR [RSP+8],RAX
.L_4399d2:

            lea RAX,QWORD PTR [R13+R15*1]
            mov RDX,RBX
.L_4399da:

            test RAX,RAX
            je .L_439af0
.L_4399e3:

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            add RAX,24
            mov QWORD PTR [RAX-8],0
            sub RDX,1
            jne .L_4399da
.L_439a04:

            cmp R9,R8
            je .L_439ab5

            lea R14,QWORD PTR [R9+24]
            mov RDX,R9
            mov RAX,R13
            sub R8,R14
            shr R8,3
            lea R15,QWORD PTR [R8*8+24]
            lea R8,QWORD PTR [R13+R15*1]
.L_439a2b:

            test RAX,RAX
            je .L_439b08
.L_439a34:

            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            add RAX,24
            mov QWORD PTR [RAX-24],0
            mov RSI,QWORD PTR [RDX]
            add RDX,24
            mov QWORD PTR [RAX-24],RSI
            mov RDI,QWORD PTR [RDX-16]
            mov QWORD PTR [RDX-24],0
            mov RSI,QWORD PTR [RAX-16]
            mov QWORD PTR [RAX-16],RDI
            mov RDI,QWORD PTR [RDX-8]
            mov QWORD PTR [RDX-16],RSI
            mov RSI,QWORD PTR [RAX-8]
            mov QWORD PTR [RAX-8],RDI
            mov QWORD PTR [RDX-8],RSI
            cmp R8,RAX
            jne .L_439a2b
.L_439a88:

            add R15,R9
            jmp .L_439aa1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439a90:

            call _ZdlPv@PLT

            cmp R14,R15
            mov R9,R14
            je .L_439ab1
.L_439a9d:

            add R14,24
.L_439aa1:

            mov RDI,QWORD PTR [R9]
            test RDI,RDI
            jne .L_439a90

            cmp R14,R15
            mov R9,R14
            jne .L_439a9d
.L_439ab1:

            mov R8,QWORD PTR [RBP]
.L_439ab5:

            test R8,R8
            je .L_439ac2

            mov RDI,R8
            call _ZdlPv@PLT
.L_439ac2:

            add RBX,R12
            mov QWORD PTR [RBP],R13
            lea RAX,QWORD PTR [RBX+RBX*2]
            lea RAX,QWORD PTR [R13+RAX*8]
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBP+16],RAX
            add RSP,24
.L_439ae3:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_439af0:

            sub RDX,1
            je .L_439a04

            mov EAX,24
            jmp .L_4399e3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_439b08:

            add RDX,24
            cmp R8,24
            je .L_439a88

            mov EAX,24
            jmp .L_439a34
.L_439b20:

            mov R14,-16
            jmp .L_4399b6
.L_439b2c:

            mov QWORD PTR [RSP+8],0
            xor R13D,R13D
            jmp .L_4399d2
.L_439b3d:

            lea RDI,QWORD PTR [RIP+.L_439713]
            call _ZSt20__throw_length_errorPKc@PLT
.L_439b49:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_439b60:
          .string "void butteraugli::MinSquareVal(size_t, size_t, size_t, size_t, float*)"
          .zero 25
.L_439bc0:
          .string "std::array<double, 512> butteraugli::MakeMask(double, double, double, double, double)"
          .zero 10
.L_439c20:

            jbe .L_439c91
          .byte 0x69
          .byte 0x64
          .byte 0x20
          .byte 0x62
          .byte 0x75
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x75
          .byte 0x67
          .byte 0x6c
          .byte 0x69
          .byte 0x3a
          .byte 0x3a
          .byte 0x42
          .byte 0x75
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x75
          .byte 0x67
          .byte 0x6c
          .byte 0x69
          .byte 0x43
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x3a
          .byte 0x44
          .byte 0x69
          .byte 0x66
          .byte 0x66
          .byte 0x6d
          .byte 0x61
          .byte 0x70
          .byte 0x4f
          .byte 0x70
          .byte 0x73
          .byte 0x69
          .byte 0x6e
          .byte 0x44
          .byte 0x79
          .byte 0x6e
          .byte 0x61
          .byte 0x6d
          .byte 0x69
          .byte 0x63
          .byte 0x73
          .byte 0x49
          .byte 0x6d
          .byte 0x61
          .byte 0x67
          .byte 0x65
          .byte 0x28
          .byte 0x63
          .byte 0x6f
          .byte 0x6e
          .byte 0x73
          .byte 0x74
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x64
          .byte 0x3a
          .byte 0x3a
          .byte 0x76
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3c
          .byte 0x73
          .byte 0x74
          .byte 0x64
          .byte 0x3a
          .byte 0x3a
          .byte 0x76
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3c
          .byte 0x66
          .byte 0x6c
          .byte 0x6f
          .byte 0x61
          .byte 0x74
          .byte 0x3e
          .byte 0x20
          .byte 0x3e
          .byte 0x26
          .byte 0x2c
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x64
          .byte 0x3a
          .byte 0x3a
.L_439c91:

            jbe .L_439cf8
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3c
          .byte 0x73
          .byte 0x74
          .byte 0x64
          .byte 0x3a
          .byte 0x3a
          .byte 0x76
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3c
          .byte 0x66
          .byte 0x6c
          .byte 0x6f
          .byte 0x61
          .byte 0x74
          .byte 0x3e
          .byte 0x20
          .byte 0x3e
          .byte 0x26
          .byte 0x2c
          .byte 0x20
          .byte 0x73
          .byte 0x74
          .byte 0x64
          .byte 0x3a
          .byte 0x3a
          .byte 0x76
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3c
          .byte 0x66
          .byte 0x6c
          .byte 0x6f
          .byte 0x61
          .byte 0x74
          .byte 0x3e
          .byte 0x26
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439ce0:
          .byte 0x62
          .byte 0x75
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x75
          .byte 0x67
          .byte 0x6c
          .byte 0x69
          .byte 0x3a
          .byte 0x3a
          .byte 0x42
          .byte 0x75
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x75
          .byte 0x67
          .byte 0x6c
          .byte 0x69
.L_439cf8:

            outsd DX,DWORD PTR [RSI]
            insd DWORD PTR [RDI],DX
            jo .L_439d5e
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x3a
          .byte 0x3a
          .byte 0x42
          .byte 0x75
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x75
          .byte 0x67
          .byte 0x6c
          .byte 0x69
          .byte 0x43
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x61
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x28
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x5f
          .byte 0x74
          .byte 0x2c
          .byte 0x20
          .byte 0x73
          .byte 0x69
          .byte 0x7a
          .byte 0x65
          .byte 0x5f
          .byte 0x74
          .byte 0x2c
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x74
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439d40:
          .byte 0x64
          .byte 0x6f
          .byte 0x75
          .byte 0x62
          .byte 0x6c
          .byte 0x65
          .byte 0x20
          .byte 0x62
          .byte 0x75
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x61
          .byte 0x75
          .byte 0x67
          .byte 0x6c
          .byte 0x69
          .byte 0x3a
          .byte 0x3a
          .byte 0x49
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x70
          .byte 0x6f
          .byte 0x6c
          .byte 0x61
          .byte 0x74
.L_439d5e:

            sub BYTE PTR GS:[RBX+111],AH
            outsb DX,BYTE PTR [RSI]
            jae .L_439dd9
          .byte 0x20
          .byte 0x64
          .byte 0x6f
          .byte 0x75
          .byte 0x62
          .byte 0x6c
          .byte 0x65
          .byte 0x2a
          .byte 0x2c
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x74
          .byte 0x2c
          .byte 0x20
          .byte 0x64
          .byte 0x6f
          .byte 0x75
          .byte 0x62
          .byte 0x6c
          .byte 0x65
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439d80:

            nop
            sbb AL,243
            xchg ESP,EAX
            int3 
          .byte 0x50
          .byte 0x23
          .byte 0x40
          .byte 0xe9
          .byte 0x1d
          .byte 0xb3
          .byte 0x5b
          .byte 0x67
          .byte 0x87
          .byte 0x2c
          .byte 0x40
          .byte 0xd2
          .byte 0xfa
          .byte 0xff
          .byte 0x39
          .byte 0x65
          .byte 0x22
          .byte 0x12
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439da0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x3f
          .byte 0x8d
          .byte 0x97
          .byte 0x6e
          .byte 0x12
          .byte 0x83
          .byte 0xc0
          .byte 0xe2
          .byte 0x3f
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xd9
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_439dc0:
          .byte 0xbb
          .byte 0xe7
          .byte 0x78
          .byte 0xea
          .byte 0x3b
          .byte 0x46
          .byte 0xd6
          .byte 0x3f
          .byte 0x4e
          .byte 0x56
          .byte 0xcd
          .byte 0x8d
          .byte 0x75
          .byte 0x7d
          .byte 0xe2
          .byte 0x3f
.L_439dd0:

            cld 
            xchg ESP,EAX
            scasd EAX,DWORD PTR [RDI]
            or BL,BYTE PTR [RBX+2101324769]
.L_439dd9:

            wait 
            jns .L_439dd0

            int3 
          .byte 0xc5
          .byte 0xe8
          .byte 0x3f
          .byte 0x81
          .byte 0xf8
          .byte 0x89
          .byte 0x9b
          .byte 0x4
          .byte 0x3b
          .byte 0xd1
          .byte 0x3f
          .byte 0xc5
          .byte 0x33
          .byte 0xa6
          .byte 0x1e
          .byte 0x4b
          .byte 0x8d
          .byte 0xe8
          .byte 0x3f
          .byte 0x1
          .byte 0x99
          .byte 0xad
          .byte 0x4e
          .byte 0x54
          .byte 0xc9
          .byte 0xa2
          .byte 0x3f
          .byte 0x2c
          .byte 0x70
          .byte 0x89
          .byte 0x6
          .byte 0xb5
          .byte 0x71
          .byte 0xed
          .byte 0x3f
          .byte 0xf8
          .byte 0xbe
          .byte 0xc7
          .byte 0xf3
          .byte 0xaf
          .byte 0x94
          .byte 0xb6
          .byte 0x3f
          .byte 0x49
          .byte 0xcf
          .byte 0x21
          .byte 0xd7
          .byte 0x67
          .byte 0x4c
          .byte 0xc4
          .byte 0x3f
          .byte 0x96
          .byte 0xb
          .byte 0x72
          .byte 0x76
          .byte 0xbb
          .byte 0xcf
          .byte 0xe6
          .byte 0x3f
          .byte 0x5d
          .byte 0x66
          .byte 0xcb
          .byte 0x47
          .byte 0x8
          .byte 0x4e
          .byte 0x25
          .byte 0x40
.L_439e20:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_439e28:
          .byte 0x4a
          .byte 0x49
.L_439e2a:

            or BPL,SIL
            int3 
          .byte 0xb4
          .byte 0x3f
.L_439e30:
          .byte 0x37
          .byte 0xe1
          .byte 0xfb
          .byte 0x58
          .byte 0x6f
          .byte 0x65
          .byte 0x1d
          .byte 0x40
.L_439e38:

            mov DWORD PTR [RDI-1806944602],ECX
            sbb AL,BYTE PTR [RAX-59]
            cmc 
            mov AH,DL
            movabs BYTE PTR [3549227416058587855],AL
            add DWORD PTR [RIP+.L_439e93],EDX
            add BYTE PTR [RAX],AL
            mov BL,AL
            shl BYTE PTR [RAX-969946683],CL
# WARNING: found overlapping blocks at address 39c28
.set .L_439e58, . - 6

          .byte 0x26
          .byte 0x40
.L_439e60:

            sub EAX,2993940521
            sbb DWORD PTR [RIP+.L_64a628+1744534915],EBP
            jmp .L_439e2a
# WARNING: found overlapping blocks at address 39c38
.set .L_439e68, . - 5

          .byte 0x90
          .byte 0xf6
          .byte 0x3f
.L_439e70:
          .byte 0x79
          .byte 0xa4
          .byte 0x12
          .byte 0x1d
          .byte 0x49
          .byte 0xab
          .byte 0xe6
          .byte 0x3f
.L_439e78:
          .byte 0x26
          .byte 0x14
          .byte 0x95
          .byte 0x2e
          .byte 0x4
          .byte 0x42
          .byte 0xf0
          .byte 0x3f
.L_439e80:
          .byte 0x95
          .byte 0x66
          .byte 0x32
          .byte 0x9a
          .byte 0x7e
          .byte 0x70
          .byte 0xef
          .byte 0x3f
.L_439e88:
          .byte 0xfc
          .byte 0x4
          .byte 0xf4
          .byte 0xd9
          .byte 0xae
          .byte 0xf8
          .byte 0xf6
          .byte 0x3f
.L_439e90:

            int 100
          .byte 0x24
.L_439e93:

            ret 
          .byte 0x5b
          .byte 0xac
          .byte 0xec
          .byte 0x3f
.L_439e98:

            int 59
          .byte 0x7f
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xe6
          .byte 0x3f
.L_439ea0:
          .byte 0x8d
          .byte 0xed
          .byte 0xb5
          .byte 0xa0
          .byte 0xf7
          .byte 0xc6
          .byte 0x10
          .byte 0x3f
.L_439ea8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3f
.L_439eb0:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x3f
.L_439eb8:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_439ec0:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x50
          .byte 0x40
.L_439ec8:
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x33
          .byte 0x3
          .byte 0x40
.L_439ed0:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0xa4
          .byte 0xbf
.L_439ed8:
          .byte 0x7b
          .byte 0x14
          .byte 0xae
          .byte 0x47
          .byte 0xe1
          .byte 0x7a
          .byte 0xa4
          .byte 0x3f
.L_439ee0:
          .byte 0xd5
          .byte 0xbb
          .byte 0x3f
          .byte 0x11
          .byte 0x3e
          .byte 0x51
          .byte 0xf8
          .byte 0x3f
.L_439ee8:
          .byte 0x82
          .byte 0x11
          .byte 0xc3
          .byte 0xa7
          .byte 0xcb
          .byte 0xc
          .byte 0xfc
          .byte 0x3f
.L_439ef0:
          .byte 0x64
          .byte 0xc
          .byte 0x99
          .byte 0x8c
          .byte 0x56
          .byte 0xc1
          .byte 0xe6
          .byte 0x3f
.L_439ef8:
          .byte 0x3f
          .byte 0xc
          .byte 0xbb
          .byte 0xf5
          .byte 0x29
          .byte 0x8f
          .byte 0xc0
          .byte 0x3f
.L_439f00:
          .byte 0xbb
          .byte 0xe7
          .byte 0x78
          .byte 0xea
          .byte 0x3b
          .byte 0x46
          .byte 0xd6
          .byte 0x3f
.L_439f08:

            push RSI
            int 141
          .byte 0x75
          .byte 0x7d
          .byte 0xe2
          .byte 0x3f
.L_439f10:

            cld 
            xchg ESP,EAX
            scasd EAX,DWORD PTR [RDI]
            or BL,BYTE PTR [RBX+2101324769]
            wait 
            jns .L_439f10

            int3 
          .byte 0xc5
          .byte 0xe8
          .byte 0x3f
.L_439f20:
          .byte 0x81
          .byte 0xf8
          .byte 0x89
          .byte 0x9b
          .byte 0x4
          .byte 0x3b
          .byte 0xd1
          .byte 0x3f
.L_439f28:
          .byte 0xc5
          .byte 0x33
          .byte 0xa6
          .byte 0x1e
          .byte 0x4b
          .byte 0x8d
          .byte 0xe8
          .byte 0x3f
.L_439f30:
          .byte 0x1
          .byte 0x99
          .byte 0xad
          .byte 0x4e
          .byte 0x54
          .byte 0xc9
          .byte 0xa2
          .byte 0x3f
.L_439f38:
          .byte 0x2c
          .byte 0x70
          .byte 0x89
          .byte 0x6
          .byte 0xb5
          .byte 0x71
          .byte 0xed
          .byte 0x3f
.L_439f40:
          .byte 0xf8
          .byte 0xbe
          .byte 0xc7
          .byte 0xf3
          .byte 0xaf
          .byte 0x94
          .byte 0xb6
          .byte 0x3f
.L_439f48:
          .byte 0x49
          .byte 0xcf
          .byte 0x21
          .byte 0xd7
          .byte 0x67
          .byte 0x4c
          .byte 0xc4
          .byte 0x3f
.L_439f50:
          .byte 0x96
          .byte 0xb
          .byte 0x72
          .byte 0x76
          .byte 0xbb
          .byte 0xcf
          .byte 0xe6
          .byte 0x3f
.L_439f58:
          .byte 0x5d
          .byte 0x66
          .byte 0xcb
          .byte 0x47
          .byte 0x8
          .byte 0x4e
          .byte 0x25
          .byte 0x40
.L_439f60:
          .byte 0x7d
          .byte 0x9e
          .byte 0xd5
          .byte 0x81
          .byte 0x3e
          .byte 0x29
          .byte 0x71
          .byte 0x40
.L_439f68:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0xbf
.L_439f70:
          .byte 0xe0
          .byte 0x5f
          .byte 0x1
          .byte 0x7
          .byte 0x50
          .byte 0xbd
          .byte 0x5a
          .byte 0x40
.L_439f78:
          .byte 0xf6
          .byte 0x8b
          .byte 0x1b
          .byte 0x2
          .byte 0x11
          .byte 0x33
          .byte 0x71
          .byte 0x40
.L_439f80:
          .byte 0xbf
          .byte 0x39
          .byte 0x59
          .byte 0x6c
          .byte 0xda
          .byte 0x29
          .byte 0xd2
          .byte 0x40
.L_439f88:
          .byte 0xb0
          .byte 0x53
          .byte 0x4c
          .byte 0x7a
          .byte 0x64
.L_439f8d:

            scasb AL,BYTE PTR [RDI]
            jns .L_439fd0
.L_439f90:
          .byte 0xda
          .byte 0xfe
          .byte 0x6d
          .byte 0xe1
          .byte 0x3b
          .byte 0x82
          .byte 0x45
          .byte 0x40
.L_439f98:
          .byte 0x51
          .byte 0xea
          .byte 0x29
          .byte 0xe4
          .byte 0x8a
          .byte 0xa5
          .byte 0xa3
          .byte 0x3f
.L_439fa0:
          .byte 0x3e
          .byte 0x3e
          .byte 0x6d
          .byte 0xd
          .byte 0xed
          .byte 0xab
          .byte 0x57
          .byte 0x40
.L_439fa8:
          .byte 0x8a
          .byte 0xf3
          .byte 0xf0
          .byte 0xfe
          .byte 0x16
          .byte 0x4b
          .byte 0xcd
          .byte 0x3f
.L_439fb0:
          .byte 0x6
          .byte 0xc
          .byte 0xbb
          .byte 0xfc
          .byte 0xb4
          .byte 0xcc
          .byte 0xd8
          .byte 0x3f
.L_439fb8:
          .byte 0x6e
          .byte 0xb2
          .byte 0xf5
          .byte 0x9c
          .byte 0x3a
          .byte 0x11
          .byte 0xc4
          .byte 0x3f
.L_439fc0:
          .byte 0x3d
          .byte 0x63
          .byte 0x8
          .byte 0x69
          .byte 0xce
          .byte 0xcb
          .byte 0x21
          .byte 0x40
.L_439fc8:

            int 1 
          .byte 0x64
          .byte 0x27
          .byte 0xd1
          .byte 0x33
          .byte 0xbc
          .byte 0x44
          .byte 0x40
.L_439fd0:

            jp .L_439f8d
          .byte 0xed
          .byte 0xe3
          .byte 0x35
          .byte 0x31
          .byte 0x48
          .byte 0x3f
.L_439fd8:
          .byte 0x1f
          .byte 0xc0
          .byte 0x4a
          .byte 0xd3
          .byte 0x3c
          .byte 0x1d
          .byte 0xdd
          .byte 0x3f
.L_439fe0:
          .byte 0x2b
          .byte 0x5e
          .byte 0xc1
          .byte 0x2
          .byte 0x8c
          .byte 0xcd
          .byte 0x34
          .byte 0x40
.L_439fe8:
          .byte 0xa0
          .byte 0xaa
          .byte 0xee
          .byte 0x78
          .byte 0x5c
          .byte 0x3
          .byte 0x11
          .byte 0x40
.L_439ff0:
          .byte 0x72
          .byte 0x20
          .byte 0x13
          .byte 0x3a
          .byte 0x45
          .byte 0x39
          .byte 0xef
          .byte 0x3f
.L_439ff8:
          .byte 0x46
          .byte 0xfe
          .byte 0x12
          .byte 0x38
          .byte 0x11
          .byte 0x78
          .byte 0x20
          .byte 0x40
.L_43a000:
          .byte 0x37
          .byte 0x44
          .byte 0xc6
          .byte 0xcd
          .byte 0xc5
          .byte 0x6
          .byte 0x88
          .byte 0x3f
.L_43a008:
          .byte 0x50
          .byte 0xbf
          .byte 0x92
          .byte 0x4e
          .byte 0xb7
          .byte 0x2e
          .byte 0xed
          .byte 0x3f
.L_43a010:
          .byte 0xe8
          .byte 0x10
          .byte 0xc7
          .byte 0xe1
          .byte 0xa4
          .byte 0x3e
          .byte 0x30
          .byte 0x40
.L_43a018:
          .byte 0x9d
          .byte 0x60
          .byte 0x59
          .byte 0x53
          .byte 0xdb
          .byte 0x7d
          .byte 0xf8
          .byte 0x3f
.L_43a020:
          .byte 0x22
          .byte 0x4d
          .byte 0x10
          .byte 0x52
          .byte 0x8b
          .byte 0xef
          .byte 0xd7
          .byte 0x3f
.L_43a028:
          .byte 0xad
          .byte 0x61
          .byte 0x3f
          .byte 0x5a
          .byte 0xdb
          .byte 0xa0
          .byte 0x30
          .byte 0x40
.L_43a030:
          .byte 0xd5
          .byte 0xd3
          .byte 0x49
          .byte 0x4
          .byte 0xe2
          .byte 0x6d
          .byte 0x73
          .byte 0x3f
.L_43a038:
          .byte 0xb4
          .byte 0xe9
          .byte 0x67
          .byte 0x8c
          .byte 0x1a
          .byte 0xd1
          .byte 0xf0
          .byte 0x3f
.L_43a040:
          .byte 0xea
          .byte 0x1a
          .byte 0x7f
          .byte 0xbc
          .byte 0xfd
          .byte 0x24
          .byte 0x3f
          .byte 0x40
.L_43a048:
          .byte 0x4
          .byte 0x5c
          .byte 0xf3
          .byte 0xf8
          .byte 0xd9
          .byte 0x3
          .byte 0x11
          .byte 0x40
.L_43a050:

            int 145
          .byte 0xa
          .byte 0xe
          .byte 0xd1
          .byte 0xb4
          .byte 0xe3
          .byte 0x3f
.L_43a058:
          .byte 0x0
          .byte 0xbc
          .byte 0xe0
          .byte 0xc
          .byte 0x34
          .byte 0x57
          .byte 0x48
          .byte 0x40
.L_43a060:
          .byte 0xaa
          .byte 0x62
          .byte 0xb6
          .byte 0x24
          .byte 0x1e
          .byte 0xee
          .byte 0x73
          .byte 0x3f
.L_43a068:
          .byte 0xb5
          .byte 0x92
          .byte 0x5e
          .byte 0x94
          .byte 0x81
          .byte 0x78
          .byte 0xe5
          .byte 0x3f
.L_43a070:

            pop RDI
            int3 

            test DWORD PTR [RDI],ESI
            sal DWORD PTR [RSP+RSI*1+64],CL
.L_43a078:

            adc BL,BYTE PTR [RDI+RAX*4-60]
            pushfq 
            int 1 
          .byte 0xe
          .byte 0x40
.L_43a080:
          .byte 0x56
          .byte 0x1c
          .byte 0xe4
          .byte 0x47
          .byte 0xa1
          .byte 0xa8
          .byte 0xfc
          .byte 0x3f
.L_43a088:
          .byte 0xdf
          .byte 0x2
          .byte 0xa9
          .byte 0xd5
          .byte 0x33
          .byte 0xff
          .byte 0x6
          .byte 0x40
.L_43a090:
          .byte 0xd7
          .byte 0x76
          .byte 0xc5
          .byte 0x42
          .byte 0xc9
          .byte 0xea
          .byte 0x5b
          .byte 0x3f
.L_43a098:
          .byte 0x22
          .byte 0xf3
          .byte 0x48
          .byte 0x39
          .byte 0x55
          .byte 0xbe
          .byte 0xfb
          .byte 0x3f
.L_43a0a0:
          .byte 0x17
          .byte 0xa1
          .byte 0x4
          .byte 0xb0
          .byte 0x1b
          .byte 0xa8
          .byte 0x35
          .byte 0x40
.L_43a0a8:
          .byte 0xa
          .byte 0x2c
          .byte 0xaa
          .byte 0xf9
          .byte 0x73
          .byte 0x40
          .byte 0xd
          .byte 0x40
.L_43a0b0:
          .byte 0xd6
          .byte 0xfb
          .byte 0x8a
          .byte 0xde
          .byte 0x23
          .byte 0x2a
          .byte 0xcb
          .byte 0x3f
.L_43a0b8:
          .byte 0xe2
          .byte 0xcd
          .byte 0x31
          .byte 0x22
          .byte 0xe2
          .byte 0xb4
          .byte 0x1e
          .byte 0x40
.L_43a0c0:
          .byte 0xde
          .byte 0x27
          .byte 0x4b
          .byte 0xaf
          .byte 0xfb
          .byte 0x22
          .byte 0x6f
          .byte 0x3f
.L_43a0c8:
          .byte 0xd9
          .byte 0xf5
          .byte 0xb2
          .byte 0xc0
          .byte 0x4c
          .byte 0xda
          .byte 0xec
          .byte 0x3f
.L_43a0d0:
          .byte 0xf
          .byte 0xf0
          .byte 0x86
          .byte 0xe6
          .byte 0x91
          .byte 0x9
          .byte 0x32
          .byte 0x40
.L_43a0d8:

            rcl ESP,158
            sbb EAX,1072472441
.L_43a0e0:

            sahf 
            insb BYTE PTR [RDI],DX
            xor BYTE PTR [RBP*1+4183644],DH
            add BYTE PTR [RAX],AL
            and BYTE PTR [RSI+4187579],CL
            add BYTE PTR [RAX],AL
            loopne .L_43a165
            xchg ESI,EAX
.L_43a0f6:

            sar BYTE PTR [RDI],57
            add EAX,3856705327
            mov EDI,0
            add BYTE PTR [RAX],AL
            and AL,64
.L_43a108:

            movabs AL,BYTE PTR [-6575296746711639980]
          .byte 0x70
          .byte 0x3d

            or DL,BH
            movabs DWORD PTR [2086787923338412008],EAX
            jno .L_43a160
.L_43a120:
          .byte 0x26
          .byte 0x5d
          .byte 0xcf
          .byte 0x36
          .byte 0x55
          .byte 0x42
          .byte 0xa2
          .byte 0x3f
.L_43a128:
          .byte 0x8
          .byte 0x92
          .byte 0x1c
          .byte 0x65
          .byte 0x88
          .byte 0xc5
          .byte 0xec
          .byte 0x3f
.L_43a130:
          .byte 0xe7
          .byte 0x18
          .byte 0x74
          .byte 0x9
          .byte 0x9c
          .byte 0xd8
          .byte 0x12
          .byte 0x40
.L_43a138:
          .byte 0xa0
          .byte 0x97
          .byte 0x40
          .byte 0x4f
          .byte 0xab
          .byte 0x52
          .byte 0x28
          .byte 0x40
.L_43a140:

            test BYTE PTR [RBX-1901443021],DL
            xor AL,64
.L_43a148:

            or DH,238
            enter -31150,40
            lahf 
            mov DWORD PTR [RBX],EAX
            test AL,187
            sbb AL,BYTE PTR [RAX+82]
            fbld TBYTE PTR DS:[RDI+1079342544]
.L_43a160:

            jno .L_43a0f6
          .byte 0x1b
          .byte 0xbf
          .byte 0xe
.L_43a165:
          .byte 0x59
          .byte 0x77
          .byte 0x40
.L_43a168:
          .byte 0xa8
          .byte 0x5e
          .byte 0x31
          .byte 0x36
          .byte 0x4c
          .byte 0x65
          .byte 0x8c
          .byte 0x40
.L_43a170:
          .byte 0x33
          .byte 0x61
          .byte 0xd8
          .byte 0xda
          .byte 0x3b
          .byte 0x60
          .byte 0x97
          .byte 0x40
.L_43a178:
          .byte 0x2f
          .byte 0xa
          .byte 0xce
          .byte 0xf7
          .byte 0xd5
          .byte 0x8f
          .byte 0x8b
          .byte 0x40
.L_43a180:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x40
.L_43a188:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x40
.L_43a190:
          .byte 0x2d
          .byte 0x43
          .byte 0x1c
          .byte 0xeb
          .byte 0xe2
          .byte 0x36
          .byte 0x1a
          .byte 0x3f
.L_43a198:
          .byte 0xec
          .byte 0x1b
          .byte 0xb5
          .byte 0xf7
          .byte 0xd0
          .byte 0x0
          .byte 0x9f
          .byte 0x3f
.L_43a1a0:
          .byte 0x99
          .byte 0x21
          .byte 0x5f
          .byte 0xcf
          .byte 0xc1
          .byte 0xb3
          .byte 0x21
          .byte 0x40
.L_43a1a8:
          .byte 0xf7
          .byte 0x9b
          .byte 0xa5
          .byte 0xf5
          .byte 0xd2
          .byte 0xd2
          .byte 0x38
          .byte 0x40
.L_43a1b0:
          .byte 0x2d
          .byte 0x5d
          .byte 0x66
          .byte 0x41
          .byte 0xae
          .byte 0xd3
          .byte 0xa3
          .byte 0x3f
.L_43a1b8:
          .byte 0x8b
          .byte 0xe7
          .byte 0x95
          .byte 0xd8
          .byte 0x6
          .byte 0x44
          .byte 0xe8
          .byte 0x3f
.L_43a1c0:
          .byte 0x87
          .byte 0xbf
          .byte 0x39
          .byte 0xfe
          .byte 0x7b
          .byte 0x40
          .byte 0x2
          .byte 0x40
.L_43a1c8:
          .byte 0x65
          .byte 0xaf
          .byte 0x37
          .byte 0x38
          .byte 0xfb
          .byte 0xc
          .byte 0xfe
          .byte 0x3f
.L_43a1d0:
          .byte 0x8b
          .byte 0xa3
          .byte 0x6d
          .byte 0x5a
          .byte 0x9b
          .byte 0x6
          .byte 0x6d
          .byte 0x40
.L_43a1d8:
          .byte 0x61
          .byte 0xde
          .byte 0x97
          .byte 0xbe
          .byte 0xd
          .byte 0xf2
          .byte 0x36
          .byte 0x40
.L_43a1e0:
          .byte 0xd3
          .byte 0x55
          .byte 0xce
          .byte 0x9f
          .byte 0x65
          .byte 0x7f
          .byte 0x7f
          .byte 0x40
.L_43a1e8:
          .byte 0xa5
          .byte 0x78
          .byte 0x51
          .byte 0x85
          .byte 0x76
          .byte 0x65
          .byte 0x72
          .byte 0x3f
.L_43a1f0:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a200:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a210:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0xa0
          .byte 0xc5
          .byte 0xc9
          .byte 0x2f
          .byte 0xc6
          .byte 0x26
          .byte 0x40
.L_43a220:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1c
          .byte 0x68
          .byte 0xeb
          .byte 0xbd
          .byte 0x90
          .byte 0xf6
          .byte 0x3f
.L_43a230:
          .byte 0x8d
          .byte 0xed
          .byte 0xb5
          .byte 0xa0
          .byte 0xf7
          .byte 0xc6
          .byte 0x10
          .byte 0x3f
          .byte 0x8d
          .byte 0xed
          .byte 0xb5
          .byte 0xa0
          .byte 0xf7
          .byte 0xc6
          .byte 0x10
          .byte 0x3f
.L_43a240:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
.L_43a250:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a260:
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a270:
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43a280:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x8e
          .byte 0xbb
          .byte 0xe5
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x8e
          .byte 0xbb
          .byte 0xe5
          .byte 0x3f
.L_43a290:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x70
          .byte 0x96
          .byte 0xc0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x70
          .byte 0x96
          .byte 0xc0
          .byte 0x3f
.L_43a2a0:

            neg DWORD PTR [RBX-757926491]
            cmp BYTE PTR [RAX-9],AL
            wait 
            movsd 
            cmc 
            rcl DL,CL
            cmp BYTE PTR [RAX+45],AL
            pop RBP
            scasb AL,BYTE PTR [RDI]
# WARNING: found overlapping blocks at address 3a080
.set .L_43a2b0, . - 5

          .byte 0xd3
          .byte 0xa3
          .byte 0x3f
          .byte 0x2d
          .byte 0x5d
          .byte 0x66
          .byte 0x41
          .byte 0xae
          .byte 0xd3
          .byte 0xa3
          .byte 0x3f
.L_43a2c0:
          .byte 0xa5
          .byte 0x78
          .byte 0x51

            test DWORD PTR [RSI+101],ESI
            jb .L_43a307
          .byte 0xa5
          .byte 0x78
          .byte 0x51

            test DWORD PTR [RSI+101],ESI
            jb .L_43a30f
.L_43a2d0:

            add BYTE PTR [RAX],AL
            enter 26178,46
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a2e0:

            mov QWORD PTR [RDX],0
            movsd XMM1,QWORD PTR [RIP+.L_43c100]
            movsd XMM2,QWORD PTR [RDI]
            movsxd RAX,ESI
            pxor XMM13,XMM13
            shl RAX,3
            mulsd XMM2,XMM1
            push R12
            push RBP
            push RBX
.L_43a307:

            lea RBX,QWORD PTR [RDI+RAX*1]
            lea R12D,DWORD PTR [RSI+RSI*1]
.L_43a30f:

            movsd XMM4,QWORD PTR [RIP+.L_43c108]
            lea R11,QWORD PTR [RBX+RAX*1]
            movsd XMM6,QWORD PTR [RIP+.L_43c110]
            addsd XMM2,XMM13
            movsd XMM8,QWORD PTR [RIP+.L_43c120]
            lea R10,QWORD PTR [R11+RAX*1]
            lea R9,QWORD PTR [R10+RAX*1]
            movsd QWORD PTR [RDX],XMM2
            lea R8,QWORD PTR [R9+RAX*1]
            movsd XMM0,QWORD PTR [RBX]
            lea RCX,QWORD PTR [R8+RAX*1]
            mulsd XMM0,XMM1
            lea RBP,QWORD PTR [RCX+RAX*1]
            add RAX,RDX
            addsd XMM2,XMM0
            movsd QWORD PTR [RDX],XMM2
            movsd XMM0,QWORD PTR [R11]
            mulsd XMM0,XMM1
            addsd XMM0,XMM2
            movsd QWORD PTR [RDX],XMM0
            movsd XMM2,QWORD PTR [R10]
            mulsd XMM2,XMM1
            addsd XMM0,XMM2
            movsd QWORD PTR [RDX],XMM0
            movsd XMM2,QWORD PTR [R9]
            mulsd XMM2,XMM1
            addsd XMM2,XMM0
            movsd QWORD PTR [RDX],XMM2
            movsd XMM0,QWORD PTR [R8]
            mulsd XMM0,XMM1
            addsd XMM2,XMM0
            movsd QWORD PTR [RDX],XMM2
            movsd XMM0,QWORD PTR [RCX]
            mulsd XMM0,XMM1
            addsd XMM0,XMM2
            movsd QWORD PTR [RDX],XMM0
            movsd XMM2,QWORD PTR [RBP]
            mulsd XMM2,XMM1
            addsd XMM0,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_43c118]
            movsd QWORD PTR [RDX],XMM0
            mov QWORD PTR [RAX],0
            movsd XMM5,QWORD PTR [RDI]
            mulsd XMM5,XMM4
            addsd XMM5,XMM13
            movsd QWORD PTR [RAX],XMM5
            movsd XMM0,QWORD PTR [RBX]
            mulsd XMM0,XMM6
            addsd XMM5,XMM0
            movsd QWORD PTR [RAX],XMM5
            movsd XMM0,QWORD PTR [R11]
            mulsd XMM0,XMM2
            addsd XMM0,XMM5
            movsd QWORD PTR [RAX],XMM0
            movsd XMM5,QWORD PTR [R10]
            movsd XMM7,QWORD PTR [RIP+.L_43c130]
            mulsd XMM5,XMM8
            movsd XMM3,QWORD PTR [RIP+.L_43c138]
            movsd XMM10,QWORD PTR [RIP+.L_43c148]
            movsd XMM14,QWORD PTR [RIP+.L_43c150]
            addsd XMM0,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_43c128]
            movsd XMM11,QWORD PTR [RIP+.L_43c158]
            movsd QWORD PTR [RAX],XMM0
            mulsd XMM5,QWORD PTR [R9]
            addsd XMM5,XMM0
            movsd QWORD PTR [RAX],XMM5
            movsd XMM0,QWORD PTR [R8]
            mulsd XMM0,XMM7
            addsd XMM5,XMM0
            movsd QWORD PTR [RAX],XMM5
            movsd XMM0,QWORD PTR [RCX]
            mulsd XMM0,XMM3
            addsd XMM0,XMM5
            movsd XMM5,QWORD PTR [RIP+.L_43c140]
            movsd QWORD PTR [RAX],XMM0
            movsd XMM9,QWORD PTR [RBP]
            mulsd XMM9,XMM5
            addsd XMM0,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c160]
            movsd QWORD PTR [RAX],XMM0
            movsxd RAX,R12D
            lea RAX,QWORD PTR [RDX+RAX*8]
            mov QWORD PTR [RAX],0
            movsd XMM12,QWORD PTR [RDI]
            mulsd XMM12,XMM10
            addsd XMM12,XMM13
            movsd QWORD PTR [RAX],XMM12
            movsd XMM0,QWORD PTR [RBX]
            mulsd XMM0,XMM14
            addsd XMM12,XMM0
            movsd QWORD PTR [RAX],XMM12
            movsd XMM0,QWORD PTR [R11]
            mulsd XMM0,XMM11
            addsd XMM0,XMM12
            movsd QWORD PTR [RAX],XMM0
            movsd XMM12,QWORD PTR [R10]
            mulsd XMM12,XMM9
            addsd XMM0,XMM12
            movsd QWORD PTR [RAX],XMM0
            movsd XMM12,QWORD PTR [R9]
            mulsd XMM12,XMM9
            addsd XMM12,XMM0
            movsd QWORD PTR [RAX],XMM12
            movsd XMM0,QWORD PTR [R8]
            mulsd XMM0,XMM11
            addsd XMM12,XMM0
            movsd QWORD PTR [RAX],XMM12
            movsd XMM0,QWORD PTR [RCX]
            mulsd XMM0,XMM14
            addsd XMM0,XMM12
            movsd QWORD PTR [RAX],XMM0
            movsd XMM12,QWORD PTR [RBP]
            mulsd XMM12,XMM10
            addsd XMM0,XMM12
            movsd QWORD PTR [RAX],XMM0
            lea EAX,DWORD PTR [RSI+R12*1]
            movsd XMM0,QWORD PTR [RIP+.L_43c128]
            movsxd R12,EAX
            add EAX,ESI
            lea R12,QWORD PTR [RDX+R12*8]
            mov QWORD PTR [R12],0
            movsd XMM12,QWORD PTR [RDI]
            mulsd XMM12,XMM6
            addsd XMM12,XMM13
            movsd QWORD PTR [R12],XMM12
            mulsd XMM0,QWORD PTR [RBX]
            addsd XMM12,XMM0
            movsd QWORD PTR [R12],XMM12
            movsd XMM0,QWORD PTR [R11]
            mulsd XMM0,XMM5
            addsd XMM0,XMM12
            movsd QWORD PTR [R12],XMM0
            movsd XMM12,QWORD PTR [R10]
            mulsd XMM12,XMM7
            addsd XMM0,XMM12
            movsd QWORD PTR [R12],XMM0
            movsd XMM12,QWORD PTR [R9]
            mulsd XMM12,XMM2
            addsd XMM12,XMM0
            movsd QWORD PTR [R12],XMM12
            movsd XMM0,QWORD PTR [R8]
            mulsd XMM0,XMM4
            addsd XMM12,XMM0
            movsd QWORD PTR [R12],XMM12
            movsd XMM0,QWORD PTR [RCX]
            mulsd XMM0,XMM8
            addsd XMM0,XMM12
            movsd QWORD PTR [R12],XMM0
            movsd XMM12,QWORD PTR [RBP]
            mulsd XMM12,XMM3
            addsd XMM0,XMM12
            movsd XMM12,QWORD PTR [RIP+.L_43c168]
            movsd QWORD PTR [R12],XMM0
            movsxd R12,EAX
            add EAX,ESI
            lea R12,QWORD PTR [RDX+R12*8]
            mov QWORD PTR [R12],0
            movsd XMM0,QWORD PTR [RDI]
            mulsd XMM0,XMM1
            addsd XMM0,XMM13
            movsd QWORD PTR [R12],XMM0
            movsd XMM15,QWORD PTR [RBX]
            mulsd XMM15,XMM12
            addsd XMM0,XMM15
            movsd QWORD PTR [R12],XMM0
            movsd XMM15,QWORD PTR [R11]
            mulsd XMM15,XMM12
            addsd XMM0,XMM15
            movsd QWORD PTR [R12],XMM0
            movsd XMM15,QWORD PTR [R10]
            mulsd XMM15,XMM1
            addsd XMM0,XMM15
            movsd QWORD PTR [R12],XMM0
            movsd XMM15,QWORD PTR [R9]
            mulsd XMM15,XMM1
            addsd XMM0,XMM15
            movsd QWORD PTR [R12],XMM0
            movsd XMM15,QWORD PTR [R8]
            mulsd XMM15,XMM12
            addsd XMM0,XMM15
            movsd QWORD PTR [R12],XMM0
            mulsd XMM12,QWORD PTR [RCX]
            addsd XMM0,XMM12
            movsd QWORD PTR [R12],XMM0
            mulsd XMM1,QWORD PTR [RBP]
            addsd XMM1,XMM0
            movsd QWORD PTR [R12],XMM1
            movsxd R12,EAX
            add EAX,ESI
            lea R12,QWORD PTR [RDX+R12*8]
            mov QWORD PTR [R12],0
            movsd XMM1,QWORD PTR [RDI]
            mulsd XMM1,XMM2
            addsd XMM1,XMM13
            movsd QWORD PTR [R12],XMM1
            movsd XMM0,QWORD PTR [RBX]
            mulsd XMM0,XMM5
            addsd XMM1,XMM0
            movsd QWORD PTR [R12],XMM1
            movsd XMM0,QWORD PTR [R11]
            mulsd XMM0,XMM8
            addsd XMM0,XMM1
            movsd QWORD PTR [R12],XMM0
            movsd XMM1,QWORD PTR [R10]
            mulsd XMM1,XMM6
            addsd XMM0,XMM1
            movsd QWORD PTR [R12],XMM0
            movsd XMM1,QWORD PTR [R9]
            mulsd XMM1,XMM3
            addsd XMM1,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43c128]
            movsd QWORD PTR [R12],XMM1
            mulsd XMM0,QWORD PTR [R8]
            addsd XMM1,XMM0
            movsd QWORD PTR [R12],XMM1
            movsd XMM0,QWORD PTR [RCX]
            mulsd XMM0,XMM4
            addsd XMM0,XMM1
            movsd QWORD PTR [R12],XMM0
            movsd XMM1,QWORD PTR [RBP]
            mulsd XMM1,XMM7
            addsd XMM0,XMM1
            movsd QWORD PTR [R12],XMM0
            movsxd R12,EAX
            add EAX,ESI
            lea R12,QWORD PTR [RDX+R12*8]
            cdqe 
            lea RAX,QWORD PTR [RDX+RAX*8]
            mov QWORD PTR [R12],0
            movsd XMM1,QWORD PTR [RDI]
            mulsd XMM1,XMM14
            addsd XMM1,XMM13
            movsd QWORD PTR [R12],XMM1
            movapd XMM0,XMM1
            movsd XMM1,QWORD PTR [RBX]
            mulsd XMM1,XMM9
            addsd XMM1,XMM0
            movsd QWORD PTR [R12],XMM1
            movsd XMM0,QWORD PTR [R11]
            mulsd XMM0,XMM10
            addsd XMM1,XMM0
            movsd QWORD PTR [R12],XMM1
            movsd XMM0,QWORD PTR [R10]
            mulsd XMM0,XMM11
            addsd XMM0,XMM1
            movsd QWORD PTR [R12],XMM0
            mulsd XMM11,QWORD PTR [R9]
            addsd XMM11,XMM0
            movsd XMM0,QWORD PTR [RIP+.L_43c128]
            movsd QWORD PTR [R12],XMM11
            mulsd XMM10,QWORD PTR [R8]
            addsd XMM10,XMM11
            movsd QWORD PTR [R12],XMM10
            mulsd XMM9,QWORD PTR [RCX]
            addsd XMM9,XMM10
            movsd QWORD PTR [R12],XMM9
            mulsd XMM14,QWORD PTR [RBP]
            addsd XMM9,XMM14
            movsd QWORD PTR [R12],XMM9
            mov QWORD PTR [RAX],0
            mulsd XMM8,QWORD PTR [RDI]
            addsd XMM13,XMM8
            movsd QWORD PTR [RAX],XMM13
            mulsd XMM7,QWORD PTR [RBX]
            addsd XMM7,XMM13
            movsd QWORD PTR [RAX],XMM7
            mulsd XMM6,QWORD PTR [R11]
            addsd XMM6,XMM7
            movsd QWORD PTR [RAX],XMM6
            mulsd XMM5,QWORD PTR [R10]
            addsd XMM5,XMM6
            movsd QWORD PTR [RAX],XMM5
            mulsd XMM4,QWORD PTR [R9]
            addsd XMM4,XMM5
            movsd QWORD PTR [RAX],XMM4
            mulsd XMM3,QWORD PTR [R8]
            addsd XMM3,XMM4
            movsd QWORD PTR [RAX],XMM3
            mulsd XMM2,QWORD PTR [RCX]
            addsd XMM2,XMM3
            movsd QWORD PTR [RAX],XMM2
            mulsd XMM0,QWORD PTR [RBP]
            addsd XMM2,XMM0
            movsd QWORD PTR [RAX],XMM2
            pop RBX
.L_43a885:

            pop RBP
            pop R12
            ret 
.L_43a889:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43a890:

            mov QWORD PTR [RDX],0
            movsd XMM0,QWORD PTR [RIP+.L_43c100]
            movsd XMM5,QWORD PTR [RDI]
            movsxd RAX,ESI
            pxor XMM10,XMM10
            shl RAX,3
            mulsd XMM5,XMM0
            push R12
            push RBP
            push RBX
.L_43a8b7:

            lea RBX,QWORD PTR [RDI+RAX*1]
            lea R12D,DWORD PTR [RSI+RSI*1]
            movsd XMM8,QWORD PTR [RIP+.L_43c108]
            lea R11,QWORD PTR [RBX+RAX*1]
            movsd XMM4,QWORD PTR [RIP+.L_43c148]
            addsd XMM5,XMM10
            movsd XMM3,QWORD PTR [RIP+.L_43c110]
            lea R10,QWORD PTR [R11+RAX*1]
            movsd XMM11,QWORD PTR [RIP+.L_43c118]
            movsd XMM1,QWORD PTR [RIP+.L_43c150]
            lea R9,QWORD PTR [R10+RAX*1]
            movsd XMM12,QWORD PTR [RIP+.L_43c120]
            movsd QWORD PTR [RDX],XMM5
            lea R8,QWORD PTR [R9+RAX*1]
            movsd XMM2,QWORD PTR [RBX]
            lea RCX,QWORD PTR [R8+RAX*1]
            mulsd XMM2,XMM8
            lea RBP,QWORD PTR [RCX+RAX*1]
            add RAX,RDX
            addsd XMM5,XMM2
            movsd QWORD PTR [RDX],XMM5
            movsd XMM2,QWORD PTR [R11]
            mulsd XMM2,XMM4
            addsd XMM2,XMM5
            movsd QWORD PTR [RDX],XMM2
            movsd XMM5,QWORD PTR [R10]
            mulsd XMM5,XMM3
            addsd XMM2,XMM5
            movsd QWORD PTR [RDX],XMM2
            movsd XMM5,QWORD PTR [R9]
            mulsd XMM5,XMM0
            addsd XMM5,XMM2
            movsd QWORD PTR [RDX],XMM5
            movsd XMM2,QWORD PTR [R8]
            mulsd XMM2,XMM11
            addsd XMM5,XMM2
            movsd QWORD PTR [RDX],XMM5
            movsd XMM2,QWORD PTR [RCX]
            mulsd XMM2,XMM1
            addsd XMM2,XMM5
            movsd QWORD PTR [RDX],XMM2
            movsd XMM5,QWORD PTR [RBP]
            mulsd XMM5,XMM12
            addsd XMM2,XMM5
            movsd QWORD PTR [RDX],XMM2
            mov QWORD PTR [RAX],0
            movsd XMM2,QWORD PTR [RDI]
            mulsd XMM2,XMM0
            addsd XMM2,XMM10
            movsd QWORD PTR [RAX],XMM2
            movsd XMM13,QWORD PTR [RBX]
            mulsd XMM13,XMM3
            addsd XMM2,XMM13
            movsd QWORD PTR [RAX],XMM2
            movsd XMM13,QWORD PTR [R11]
            movsd XMM5,QWORD PTR [RIP+.L_43c128]
            mulsd XMM13,XMM1
            movsd XMM9,QWORD PTR [RIP+.L_43c168]
            movsd XMM6,QWORD PTR [RIP+.L_43c140]
            movsd XMM7,QWORD PTR [RIP+.L_43c160]
            addsd XMM13,XMM2
            movsd QWORD PTR [RAX],XMM13
            movsd XMM2,QWORD PTR [R10]
            mulsd XMM2,XMM5
            addsd XMM13,XMM2
            movsd QWORD PTR [RAX],XMM13
            movsd XMM2,QWORD PTR [R9]
            mulsd XMM2,XMM9
            addsd XMM2,XMM13
            movsd QWORD PTR [RAX],XMM2
            movsd XMM13,QWORD PTR [R8]
            mulsd XMM13,XMM6
            addsd XMM2,XMM13
            movsd QWORD PTR [RAX],XMM2
            movsd XMM13,QWORD PTR [RCX]
            mulsd XMM13,XMM7
            addsd XMM13,XMM2
            movsd XMM2,QWORD PTR [RIP+.L_43c130]
            movsd QWORD PTR [RAX],XMM13
            movsd XMM14,QWORD PTR [RBP]
            mulsd XMM14,XMM2
            addsd XMM13,XMM14
            movsd QWORD PTR [RAX],XMM13
            movsxd RAX,R12D
            lea RAX,QWORD PTR [RDX+RAX*8]
            movsd XMM13,QWORD PTR [RIP+.L_43c158]
            mov QWORD PTR [RAX],0
            movsd XMM15,QWORD PTR [RDI]
            mulsd XMM15,XMM0
            addsd XMM15,XMM10
            movsd QWORD PTR [RAX],XMM15
            movsd XMM14,QWORD PTR [RBX]
            mulsd XMM14,XMM11
            addsd XMM15,XMM14
            movsd QWORD PTR [RAX],XMM15
            movsd XMM14,QWORD PTR [R11]
            mulsd XMM14,XMM13
            addsd XMM14,XMM15
            movsd QWORD PTR [RAX],XMM14
            movsd XMM15,QWORD PTR [R10]
            mulsd XMM15,XMM6
            addsd XMM14,XMM15
            movsd QWORD PTR [RAX],XMM14
            movsd XMM15,QWORD PTR [R9]
            mulsd XMM15,XMM9
            addsd XMM15,XMM14
            movsd QWORD PTR [RAX],XMM15
            movsd XMM14,QWORD PTR [R8]
            mulsd XMM14,XMM12
            addsd XMM15,XMM14
            movsd QWORD PTR [RAX],XMM15
            movsd XMM14,QWORD PTR [RCX]
            mulsd XMM14,XMM4
            addsd XMM14,XMM15
            movsd QWORD PTR [RAX],XMM14
            movsd XMM15,QWORD PTR [RBP]
            mulsd XMM15,XMM3
            addsd XMM14,XMM15
            movsd QWORD PTR [RAX],XMM14
            lea EAX,DWORD PTR [RSI+R12*1]
            movsxd R12,EAX
            add EAX,ESI
            lea R12,QWORD PTR [RDX+R12*8]
            mov QWORD PTR [R12],0
            movsd XMM14,QWORD PTR [RDI]
            mulsd XMM14,XMM0
            addsd XMM14,XMM10
            movsd QWORD PTR [R12],XMM14
            movsd XMM15,QWORD PTR [RBX]
            mulsd XMM15,XMM12
            addsd XMM14,XMM15
            movsd QWORD PTR [R12],XMM14
            movsd XMM15,QWORD PTR [R11]
            mulsd XMM15,XMM7
            addsd XMM15,XMM14
            movsd QWORD PTR [R12],XMM15
            movsd XMM14,QWORD PTR [R10]
            mulsd XMM14,XMM2
            addsd XMM15,XMM14
            movsd QWORD PTR [R12],XMM15
            movsd XMM14,QWORD PTR [R9]
            mulsd XMM14,XMM0
            addsd XMM14,XMM15
            movsd QWORD PTR [R12],XMM14
            mulsd XMM3,QWORD PTR [R8]
            addsd XMM3,XMM14
            movsd QWORD PTR [R12],XMM3
            movsd XMM14,QWORD PTR [RCX]
            mulsd XMM14,XMM13
            addsd XMM3,XMM14
            movsd QWORD PTR [R12],XMM3
            movsd XMM14,QWORD PTR [RBP]
            mulsd XMM14,XMM6
            addsd XMM3,XMM14
            movsd QWORD PTR [R12],XMM3
            movsxd R12,EAX
            add EAX,ESI
            lea R12,QWORD PTR [RDX+R12*8]
            movsd XMM3,QWORD PTR [RIP+.L_43c138]
            mov QWORD PTR [R12],0
            movsd XMM15,QWORD PTR [RDI]
            mulsd XMM15,XMM0
            addsd XMM15,XMM10
            movsd QWORD PTR [R12],XMM15
            movsd XMM14,QWORD PTR [RBX]
            mulsd XMM14,XMM5
            addsd XMM15,XMM14
            movsd QWORD PTR [R12],XMM15
            movsd XMM14,QWORD PTR [R11]
            mulsd XMM14,XMM7
            addsd XMM14,XMM15
            movsd QWORD PTR [R12],XMM14
            movsd XMM15,QWORD PTR [R10]
            mulsd XMM15,XMM11
            addsd XMM14,XMM15
            movsd QWORD PTR [R12],XMM14
            movsd XMM15,QWORD PTR [R9]
            mulsd XMM15,XMM0
            addsd XMM15,XMM14
            movsd QWORD PTR [R12],XMM15
            movsd XMM14,QWORD PTR [R8]
            mulsd XMM14,XMM3
            addsd XMM15,XMM14
            movsd QWORD PTR [R12],XMM15
            movsd XMM14,QWORD PTR [RCX]
            mulsd XMM14,XMM13
            addsd XMM14,XMM15
            movsd QWORD PTR [R12],XMM14
            movsd XMM15,QWORD PTR [RBP]
            mulsd XMM15,XMM8
            addsd XMM14,XMM15
            movsd QWORD PTR [R12],XMM14
            movsxd R12,EAX
            add EAX,ESI
            lea R12,QWORD PTR [RDX+R12*8]
            mov QWORD PTR [R12],0
            movsd XMM14,QWORD PTR [RDI]
            mulsd XMM14,XMM0
            movapd XMM15,XMM14
            addsd XMM15,XMM10
            movsd QWORD PTR [R12],XMM15
            movsd XMM14,QWORD PTR [RBX]
            mulsd XMM14,XMM2
            addsd XMM14,XMM15
            movsd QWORD PTR [R12],XMM14
            mulsd XMM13,QWORD PTR [R11]
            addsd XMM13,XMM14
            movsd QWORD PTR [R12],XMM13
            movsd XMM14,QWORD PTR [R10]
            mulsd XMM14,XMM8
            addsd XMM13,XMM14
            movsd QWORD PTR [R12],XMM13
            movsd XMM14,QWORD PTR [R9]
            mulsd XMM14,XMM9
            addsd XMM14,XMM13
            movsd QWORD PTR [R12],XMM14
            movsd XMM13,QWORD PTR [R8]
            mulsd XMM13,XMM5
            addsd XMM14,XMM13
            movsd QWORD PTR [R12],XMM14
            movsd XMM13,QWORD PTR [RCX]
            mulsd XMM13,XMM4
            addsd XMM13,XMM14
            movsd QWORD PTR [R12],XMM13
            movsd XMM14,QWORD PTR [RBP]
            mulsd XMM14,XMM3
            addsd XMM13,XMM14
            movsd QWORD PTR [R12],XMM13
            movsxd R12,EAX
            add EAX,ESI
            lea R12,QWORD PTR [RDX+R12*8]
            cdqe 
            lea RAX,QWORD PTR [RDX+RAX*8]
            mov QWORD PTR [R12],0
            movsd XMM14,QWORD PTR [RDI]
            mulsd XMM14,XMM0
            addsd XMM14,XMM10
            movsd QWORD PTR [R12],XMM14
            movsd XMM13,QWORD PTR [RBX]
            mulsd XMM13,XMM3
            addsd XMM14,XMM13
            movsd QWORD PTR [R12],XMM14
            movsd XMM13,QWORD PTR [R11]
            mulsd XMM13,XMM1
            addsd XMM13,XMM14
            movsd QWORD PTR [R12],XMM13
            mulsd XMM12,QWORD PTR [R10]
            addsd XMM12,XMM13
            movsd QWORD PTR [R12],XMM12
            mulsd XMM9,QWORD PTR [R9]
            addsd XMM9,XMM12
            movsd QWORD PTR [R12],XMM9
            mulsd XMM8,QWORD PTR [R8]
            addsd XMM8,XMM9
            movsd QWORD PTR [R12],XMM8
            mulsd XMM7,QWORD PTR [RCX]
            addsd XMM7,XMM8
            movsd QWORD PTR [R12],XMM7
            mulsd XMM11,QWORD PTR [RBP]
            addsd XMM7,XMM11
            movsd QWORD PTR [R12],XMM7
            mov QWORD PTR [RAX],0
            movsd XMM7,QWORD PTR [RDI]
            mulsd XMM7,XMM0
            addsd XMM10,XMM7
            movsd QWORD PTR [RAX],XMM10
            mulsd XMM6,QWORD PTR [RBX]
            addsd XMM6,XMM10
            movsd QWORD PTR [RAX],XMM6
            mulsd XMM4,QWORD PTR [R11]
            addsd XMM4,XMM6
            movsd QWORD PTR [RAX],XMM4
            mulsd XMM3,QWORD PTR [R10]
            addsd XMM3,XMM4
            movsd QWORD PTR [RAX],XMM3
            mulsd XMM0,QWORD PTR [R9]
            addsd XMM0,XMM3
            movsd QWORD PTR [RAX],XMM0
            mulsd XMM2,QWORD PTR [R8]
            addsd XMM0,XMM2
            movsd QWORD PTR [RAX],XMM0
            mulsd XMM1,QWORD PTR [RCX]
            addsd XMM1,XMM0
            movsd QWORD PTR [RAX],XMM1
            mulsd XMM5,QWORD PTR [RBP]
            addsd XMM1,XMM5
            movsd QWORD PTR [RAX],XMM1
            pop RBX
.L_43ae5f:

            pop RBP
            pop R12
            ret 
.L_43ae63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ae70:

            sub RSP,552
.L_43ae77:

            pxor XMM15,XMM15
            lea RDX,QWORD PTR [RSP+16]
            lea R8,QWORD PTR [RDI+64]
            mov RCX,RDI
            movapd XMM14,XMMWORD PTR [RIP+.L_43c170]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+536],RAX
            xor EAX,EAX
            movapd XMM10,XMMWORD PTR [RIP+.L_43c240]
            mov RAX,RDI
            mov RSI,RDX
            nop
            nop
            nop
            nop
            nop
.L_43aeb8:

            movupd XMM0,XMMWORD PTR [RCX]
            add RCX,16
            add RSI,16
            movapd XMM9,XMM0
            movupd XMM5,XMMWORD PTR [RCX+432]
            mulpd XMM9,XMM14
            movupd XMM4,XMMWORD PTR [RCX+48]
            movapd XMM13,XMM5
            movapd XMM8,XMM4
            mulpd XMM13,XMM14
            movupd XMM3,XMMWORD PTR [RCX+112]
            addpd XMM9,XMM15
            mulpd XMM8,XMM14
            movupd XMM7,XMMWORD PTR [RCX+176]
            movapd XMM12,XMM7
            movaps XMMWORD PTR [RSP],XMM13
            movapd XMM13,XMM3
            addpd XMM8,XMM9
            mulpd XMM12,XMM14
            mulpd XMM13,XMM14
            movupd XMM6,XMMWORD PTR [RCX+240]
            movapd XMM11,XMM6
            movupd XMM2,XMMWORD PTR [RCX+304]
            addpd XMM8,XMM13
            mulpd XMM11,XMM14
            movupd XMM1,XMMWORD PTR [RCX+368]
            movapd XMM13,XMM2
            mulpd XMM13,XMM14
            addpd XMM8,XMM12
            addpd XMM8,XMM11
            addpd XMM8,XMM13
            movapd XMM13,XMM1
            mulpd XMM13,XMM14
            addpd XMM8,XMM13
            addpd XMM8,XMMWORD PTR [RSP]
            movaps XMMWORD PTR [RSI-16],XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c180]
            mulpd XMM8,XMM0
            movapd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c190]
            addpd XMM13,XMM15
            mulpd XMM8,XMM4
            addpd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c1a0]
            mulpd XMM8,XMM3
            addpd XMM8,XMM13
            movapd XMM13,XMMWORD PTR [RIP+.L_43c1b0]
            mulpd XMM13,XMM7
            addpd XMM8,XMM13
            movapd XMM13,XMMWORD PTR [RIP+.L_43c1c0]
            mulpd XMM13,XMM6
            addpd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c1d0]
            mulpd XMM8,XMM2
            addpd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c1e0]
            mulpd XMM8,XMM1
            addpd XMM8,XMM13
            movapd XMM13,XMMWORD PTR [RIP+.L_43c1f0]
            mulpd XMM13,XMM5
            addpd XMM8,XMM13
            movaps XMMWORD PTR [RSI+48],XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c200]
            mulpd XMM8,XMM0
            movapd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c210]
            addpd XMM13,XMM15
            mulpd XMM8,XMM4
            addpd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c220]
            mulpd XMM8,XMM3
            addpd XMM8,XMM13
            movapd XMM13,XMMWORD PTR [RIP+.L_43c230]
            mulpd XMM13,XMM7
            addpd XMM8,XMM13
            movapd XMM13,XMMWORD PTR [RIP+.L_43c230]
            mulpd XMM13,XMM6
            addpd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c220]
            mulpd XMM8,XMM2
            addpd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c210]
            mulpd XMM8,XMM1
            addpd XMM8,XMM13
            movapd XMM13,XMMWORD PTR [RIP+.L_43c200]
            mulpd XMM13,XMM5
            addpd XMM8,XMM13
            movaps XMMWORD PTR [RSI+112],XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c190]
            mulpd XMM8,XMM0
            movapd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c1c0]
            addpd XMM13,XMM15
            mulpd XMM8,XMM4
            addpd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c1f0]
            mulpd XMM8,XMM3
            addpd XMM8,XMM13
            movapd XMM13,XMMWORD PTR [RIP+.L_43c1d0]
            mulpd XMM13,XMM7
            addpd XMM8,XMM13
            movapd XMM13,XMMWORD PTR [RIP+.L_43c1a0]
            mulpd XMM13,XMM6
            addpd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c180]
            mulpd XMM8,XMM2
            addpd XMM13,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c1b0]
            mulpd XMM8,XMM1
            addpd XMM8,XMM13
            movapd XMM13,XMMWORD PTR [RIP+.L_43c1e0]
            mulpd XMM13,XMM5
            addpd XMM8,XMM13
            movaps XMMWORD PTR [RSI+176],XMM8
            movapd XMM8,XMM4
            mulpd XMM8,XMM10
            addpd XMM8,XMM9
            movapd XMM9,XMM3
            mulpd XMM9,XMM10
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c1f0]
            mulpd XMM9,XMM4
            addpd XMM8,XMM12
            addpd XMM8,XMM11
            movapd XMM11,XMM2
            mulpd XMM11,XMM10
            addpd XMM8,XMM11
            movapd XMM11,XMM1
            mulpd XMM11,XMM10
            addpd XMM8,XMM11
            addpd XMM8,XMMWORD PTR [RSP]
            movaps XMMWORD PTR [RSI+240],XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c1a0]
            mulpd XMM8,XMM0
            addpd XMM8,XMM15
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c1b0]
            mulpd XMM9,XMM3
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c190]
            mulpd XMM9,XMM7
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c1e0]
            mulpd XMM9,XMM6
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c1c0]
            mulpd XMM9,XMM2
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c180]
            mulpd XMM9,XMM1
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c1d0]
            mulpd XMM9,XMM5
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c230]
            mulpd XMM9,XMM4
            movaps XMMWORD PTR [RSI+304],XMM8
            mulpd XMM4,XMMWORD PTR [RIP+.L_43c1d0]
            movapd XMM8,XMMWORD PTR [RIP+.L_43c210]
            mulpd XMM8,XMM0
            mulpd XMM0,XMMWORD PTR [RIP+.L_43c1b0]
            addpd XMM8,XMM15
            addpd XMM0,XMM15
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c200]
            mulpd XMM9,XMM3
            addpd XMM4,XMM0
            mulpd XMM3,XMMWORD PTR [RIP+.L_43c190]
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c220]
            mulpd XMM9,XMM7
            addpd XMM3,XMM4
            mulpd XMM7,XMMWORD PTR [RIP+.L_43c1f0]
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c220]
            mulpd XMM9,XMM6
            addpd XMM7,XMM3
            mulpd XMM6,XMMWORD PTR [RIP+.L_43c180]
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c200]
            mulpd XMM9,XMM2
            addpd XMM6,XMM7
            mulpd XMM2,XMMWORD PTR [RIP+.L_43c1e0]
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c230]
            mulpd XMM9,XMM1
            addpd XMM2,XMM6
            addpd XMM8,XMM9
            movapd XMM9,XMMWORD PTR [RIP+.L_43c210]
            mulpd XMM9,XMM5
            addpd XMM8,XMM9
            movaps XMMWORD PTR [RSI+368],XMM8
            mulpd XMM1,XMMWORD PTR [RIP+.L_43c1a0]
            mulpd XMM5,XMMWORD PTR [RIP+.L_43c1c0]
            addpd XMM1,XMM2
            addpd XMM5,XMM1
            movaps XMMWORD PTR [RSI+432],XMM5
            cmp RCX,R8
            jne .L_43aeb8

            pxor XMM15,XMM15
            lea RCX,QWORD PTR [RDI+512]
            movsd XMM14,QWORD PTR [RIP+.L_43c100]
            movsd XMM10,QWORD PTR [RIP+.L_43c168]
            nop
            nop
            nop
.L_43b388:

            movsd XMM0,QWORD PTR [RDX]
            add RAX,64
            add RDX,64
            movsd XMM5,QWORD PTR [RDX-8]
            movapd XMM9,XMM0
            movsd XMM4,QWORD PTR [RDX-56]
            movapd XMM13,XMM5
            mulsd XMM9,XMM14
            movapd XMM8,XMM4
            mulsd XMM13,XMM14
            movsd XMM3,QWORD PTR [RDX-48]
            mulsd XMM8,XMM14
            addsd XMM9,XMM15
            movsd XMM7,QWORD PTR [RDX-40]
            movsd QWORD PTR [RSP],XMM13
            movapd XMM13,XMM3
            movapd XMM12,XMM7
            mulsd XMM13,XMM14
            addsd XMM8,XMM9
            movsd XMM6,QWORD PTR [RDX-32]
            mulsd XMM12,XMM14
            movapd XMM11,XMM6
            movsd XMM2,QWORD PTR [RDX-24]
            movsd XMM1,QWORD PTR [RDX-16]
            addsd XMM8,XMM13
            mulsd XMM11,XMM14
            movapd XMM13,XMM2
            mulsd XMM13,XMM14
            addsd XMM8,XMM12
            addsd XMM8,XMM11
            addsd XMM8,XMM13
            movapd XMM13,XMM1
            mulsd XMM13,XMM14
            addsd XMM8,XMM13
            addsd XMM8,QWORD PTR [RSP]
            movsd QWORD PTR [RAX-64],XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c108]
            mulsd XMM8,XMM0
            movapd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c110]
            addsd XMM13,XMM15
            mulsd XMM8,XMM4
            addsd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c118]
            mulsd XMM8,XMM3
            addsd XMM8,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_43c120]
            mulsd XMM13,XMM7
            addsd XMM8,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_43c128]
            mulsd XMM13,XMM6
            addsd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c130]
            mulsd XMM8,XMM2
            addsd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c138]
            mulsd XMM8,XMM1
            addsd XMM8,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_43c140]
            mulsd XMM13,XMM5
            addsd XMM8,XMM13
            movsd QWORD PTR [RAX-56],XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c148]
            mulsd XMM8,XMM0
            movapd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c150]
            addsd XMM13,XMM15
            mulsd XMM8,XMM4
            addsd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c158]
            mulsd XMM8,XMM3
            addsd XMM8,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_43c160]
            mulsd XMM13,XMM7
            addsd XMM8,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_43c160]
            mulsd XMM13,XMM6
            addsd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c158]
            mulsd XMM8,XMM2
            addsd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c150]
            mulsd XMM8,XMM1
            addsd XMM8,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_43c148]
            mulsd XMM13,XMM5
            addsd XMM8,XMM13
            movsd QWORD PTR [RAX-48],XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c110]
            mulsd XMM8,XMM0
            movapd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c128]
            addsd XMM13,XMM15
            mulsd XMM8,XMM4
            addsd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c140]
            mulsd XMM8,XMM3
            addsd XMM8,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_43c130]
            mulsd XMM13,XMM7
            addsd XMM8,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_43c118]
            mulsd XMM13,XMM6
            addsd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c108]
            mulsd XMM8,XMM2
            addsd XMM13,XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c120]
            mulsd XMM8,XMM1
            addsd XMM8,XMM13
            movsd XMM13,QWORD PTR [RIP+.L_43c138]
            mulsd XMM13,XMM5
            addsd XMM8,XMM13
            movsd QWORD PTR [RAX-40],XMM8
            movapd XMM8,XMM4
            mulsd XMM8,XMM10
            addsd XMM8,XMM9
            movapd XMM9,XMM3
            mulsd XMM9,XMM10
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c140]
            mulsd XMM9,XMM4
            addsd XMM8,XMM12
            addsd XMM8,XMM11
            movapd XMM11,XMM2
            mulsd XMM11,XMM10
            addsd XMM8,XMM11
            movapd XMM11,XMM1
            mulsd XMM11,XMM10
            addsd XMM8,XMM11
            addsd XMM8,QWORD PTR [RSP]
            movsd QWORD PTR [RAX-32],XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c118]
            mulsd XMM8,XMM0
            addsd XMM8,XMM15
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c120]
            mulsd XMM9,XMM3
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c110]
            mulsd XMM9,XMM7
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c138]
            mulsd XMM9,XMM6
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c128]
            mulsd XMM9,XMM2
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c108]
            mulsd XMM9,XMM1
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c130]
            mulsd XMM9,XMM5
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c160]
            mulsd XMM9,XMM4
            mulsd XMM4,QWORD PTR [RIP+.L_43c130]
            movsd QWORD PTR [RAX-24],XMM8
            movsd XMM8,QWORD PTR [RIP+.L_43c150]
            mulsd XMM8,XMM0
            mulsd XMM0,QWORD PTR [RIP+.L_43c120]
            addsd XMM8,XMM15
            addsd XMM0,XMM15
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c148]
            mulsd XMM9,XMM3
            mulsd XMM3,QWORD PTR [RIP+.L_43c110]
            addsd XMM4,XMM0
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c158]
            mulsd XMM9,XMM7
            mulsd XMM7,QWORD PTR [RIP+.L_43c140]
            addsd XMM3,XMM4
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c158]
            mulsd XMM9,XMM6
            mulsd XMM6,QWORD PTR [RIP+.L_43c108]
            addsd XMM7,XMM3
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c148]
            mulsd XMM9,XMM2
            mulsd XMM2,QWORD PTR [RIP+.L_43c138]
            addsd XMM6,XMM7
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c160]
            mulsd XMM9,XMM1
            addsd XMM2,XMM6
            addsd XMM8,XMM9
            movsd XMM9,QWORD PTR [RIP+.L_43c150]
            mulsd XMM9,XMM5
            addsd XMM8,XMM9
            movsd QWORD PTR [RAX-16],XMM8
            mulsd XMM1,QWORD PTR [RIP+.L_43c118]
            mulsd XMM5,QWORD PTR [RIP+.L_43c128]
            addsd XMM1,XMM2
            addsd XMM5,XMM1
            movsd QWORD PTR [RAX-8],XMM5
            cmp RCX,RAX
            jne .L_43b388

            mov RAX,QWORD PTR [RSP+536]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43b83d

            add RSP,552
.L_43b83c:

            ret 
.L_43b83d:

            call __stack_chk_fail@PLT
.L_43b842:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43b850:

            sub RSP,568
.L_43b857:

            lea RDX,QWORD PTR [RDI+448]
            mov RSI,RDI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+552],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RDI+512]
            movapd XMM6,XMMWORD PTR [RIP+.L_43c1e0]
            mov RCX,RAX
            nop
            nop
            nop
            nop
            nop
.L_43b890:

            movupd XMM2,XMMWORD PTR [RDX-448]
            pxor XMM1,XMM1
            add RDX,16
            add RCX,16
            mulpd XMM2,XMMWORD PTR [RIP+.L_43c170]
            movupd XMM0,XMMWORD PTR [RDX-400]
            movupd XMM15,XMMWORD PTR [RDX-336]
            movapd XMM13,XMMWORD PTR [RIP+.L_43c200]
            addpd XMM2,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c180]
            mulpd XMM13,XMM15
            mulpd XMM1,XMM0
            movupd XMM5,XMMWORD PTR [RDX-272]
            movapd XMM10,XMMWORD PTR [RIP+.L_43c190]
            addpd XMM1,XMM2
            mulpd XMM10,XMM5
            movupd XMM7,XMMWORD PTR [RDX-208]
            movapd XMM9,XMMWORD PTR [RIP+.L_43c170]
            addpd XMM1,XMM13
            mulpd XMM9,XMM7
            movupd XMM4,XMMWORD PTR [RDX-144]
            movupd XMM8,XMMWORD PTR [RDX-80]
            mulpd XMM7,XMMWORD PTR [RIP+.L_43c240]
            addpd XMM1,XMM10
            movapd XMM10,XMMWORD PTR [RIP+.L_43c1a0]
            mulpd XMM10,XMM4
            movapd XMM12,XMMWORD PTR [RIP+.L_43c210]
            addpd XMM1,XMM9
            mulpd XMM12,XMM8
            movupd XMM3,XMMWORD PTR [RDX-16]
            movapd XMM11,XMMWORD PTR [RIP+.L_43c210]
            addpd XMM1,XMM10
            movapd XMM10,XMMWORD PTR [RIP+.L_43c1b0]
            mulpd XMM11,XMM15
            mulpd XMM10,XMM3
            movapd XMM14,XMMWORD PTR [RIP+.L_43c1c0]
            addpd XMM1,XMM12
            mulpd XMM14,XMM5
            movaps XMMWORD PTR [RSP+16],XMM13
            movaps XMMWORD PTR [RSP],XMM12
            addpd XMM1,XMM10
            movapd XMM10,XMMWORD PTR [RIP+.L_43c230]
            movaps XMMWORD PTR [RCX-16],XMM1
            mulpd XMM10,XMM8
            movapd XMM1,XMMWORD PTR [RIP+.L_43c190]
            mulpd XMM1,XMM0
            addpd XMM1,XMM2
            addpd XMM1,XMM11
            addpd XMM1,XMM14
            movapd XMM14,XMMWORD PTR [RIP+.L_43c1f0]
            mulpd XMM14,XMM4
            addpd XMM1,XMM7
            addpd XMM1,XMM14
            movapd XMM14,XMMWORD PTR [RIP+.L_43c1d0]
            mulpd XMM14,XMM3
            addpd XMM1,XMM10
            addpd XMM1,XMM14
            movapd XMM14,XMMWORD PTR [RIP+.L_43c1f0]
            mulpd XMM14,XMM5
            movaps XMMWORD PTR [RCX+48],XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c220]
            mulpd XMM1,XMM15
            movapd XMM13,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c200]
            mulpd XMM1,XMM8
            movapd XMM12,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c1a0]
            mulpd XMM1,XMM0
            addpd XMM1,XMM2
            addpd XMM1,XMM13
            addpd XMM1,XMM14
            movapd XMM14,XMMWORD PTR [RIP+.L_43c1b0]
            mulpd XMM14,XMM4
            addpd XMM1,XMM7
            addpd XMM1,XMM14
            movapd XMM14,XMMWORD PTR [RIP+.L_43c190]
            mulpd XMM15,XMMWORD PTR [RIP+.L_43c230]
            mulpd XMM14,XMM3
            addpd XMM1,XMM12
            mulpd XMM8,XMMWORD PTR [RIP+.L_43c220]
            addpd XMM1,XMM14
            movapd XMM14,XMM15
            movaps XMMWORD PTR [RCX+112],XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c1b0]
            mulpd XMM1,XMM0
            addpd XMM1,XMM2
            addpd XMM1,XMM15
            movapd XMM15,XMMWORD PTR [RIP+.L_43c1d0]
            mulpd XMM15,XMM5
            addpd XMM1,XMM15
            movapd XMM15,XMMWORD PTR [RIP+.L_43c190]
            mulpd XMM15,XMM4
            addpd XMM1,XMM9
            addpd XMM1,XMM15
            movapd XMM15,XMMWORD PTR [RIP+.L_43c1f0]
            mulpd XMM15,XMM3
            addpd XMM1,XMM8
            addpd XMM1,XMM15
            movaps XMMWORD PTR [RCX+176],XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c1c0]
            mulpd XMM1,XMM0
            addpd XMM1,XMM2
            addpd XMM14,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c1a0]
            mulpd XMM1,XMM5
            addpd XMM14,XMM1
            movapd XMM1,XMM4
            mulpd XMM1,XMM6
            addpd XMM14,XMM9
            addpd XMM14,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c180]
            mulpd XMM1,XMM3
            addpd XMM8,XMM14
            addpd XMM8,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c1d0]
            mulpd XMM1,XMM0
            movaps XMMWORD PTR [RCX+240],XMM8
            addpd XMM1,XMM2
            movapd XMM8,XMMWORD PTR [RIP+.L_43c180]
            mulpd XMM8,XMM5
            addpd XMM1,XMM13
            addpd XMM1,XMM8
            movapd XMM8,XMMWORD PTR [RIP+.L_43c1c0]
            mulpd XMM8,XMM4
            addpd XMM1,XMM7
            addpd XMM1,XMM8
            addpd XMM12,XMM1
            movapd XMM1,XMM3
            mulpd XMM1,XMM6
            addpd XMM12,XMM1
            movapd XMM1,XMM0
            mulpd XMM0,XMMWORD PTR [RIP+.L_43c1f0]
            mulpd XMM1,XMM6
            movaps XMMWORD PTR [RCX+304],XMM12
            addpd XMM1,XMM2
            addpd XMM2,XMM0
            addpd XMM11,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c1b0]
            addpd XMM2,XMMWORD PTR [RSP+16]
            mulpd XMM1,XMM5
            mulpd XMM5,XMM6
            addpd XMM11,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c180]
            addpd XMM5,XMM2
            mulpd XMM1,XMM4
            mulpd XMM4,XMMWORD PTR [RIP+.L_43c1d0]
            addpd XMM7,XMM11
            addpd XMM9,XMM5
            addpd XMM7,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c1a0]
            addpd XMM4,XMM9
            mulpd XMM1,XMM3
            mulpd XMM3,XMMWORD PTR [RIP+.L_43c1c0]
            addpd XMM10,XMM7
            addpd XMM4,XMMWORD PTR [RSP]
            addpd XMM10,XMM1
            addpd XMM3,XMM4
            movaps XMMWORD PTR [RCX+368],XMM10
            movaps XMMWORD PTR [RCX+432],XMM3
            cmp RDX,RDI
            jne .L_43b890

            pxor XMM8,XMM8
            lea RDX,QWORD PTR [RAX+512]
            movapd XMM9,XMMWORD PTR [RIP+.L_43bf00]
            nop
.L_43bc50:

            movapd XMM1,XMM9
            add RAX,64
            add RSI,64
            movsd XMM0,QWORD PTR [RAX-64]
            movsd XMM11,QWORD PTR [RAX-56]
            unpcklpd XMM0,XMM0
            movapd XMM2,XMMWORD PTR [RIP+.L_43bf40]
            unpcklpd XMM11,XMM11
            movsd XMM10,QWORD PTR [RAX-48]
            mulpd XMM1,XMM0
            mulpd XMM2,XMM11
            unpcklpd XMM10,XMM10
            addpd XMM1,XMM8
            movsd XMM7,QWORD PTR [RAX-40]
            movsd XMM6,QWORD PTR [RAX-32]
            unpcklpd XMM7,XMM7
            unpcklpd XMM6,XMM6
            movsd XMM5,QWORD PTR [RAX-24]
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43bf80]
            unpcklpd XMM5,XMM5
            mulpd XMM2,XMM10
            movsd XMM4,QWORD PTR [RAX-16]
            movsd XMM3,QWORD PTR [RAX-8]
            unpcklpd XMM4,XMM4
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43bfc0]
            unpcklpd XMM3,XMM3
            mulpd XMM2,XMM7
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43c000]
            mulpd XMM2,XMM6
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43c040]
            mulpd XMM2,XMM5
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43c080]
            mulpd XMM2,XMM4
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43c0c0]
            mulpd XMM2,XMM3
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43bf50]
            mulpd XMM2,XMM11
            movups XMMWORD PTR [RSI-64],XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43bf10]
            mulpd XMM1,XMM0
            addpd XMM1,XMM8
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43bf90]
            mulpd XMM2,XMM10
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43bfd0]
            mulpd XMM2,XMM7
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43c010]
            mulpd XMM2,XMM6
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43c050]
            mulpd XMM2,XMM5
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43c090]
            mulpd XMM2,XMM4
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43c0d0]
            mulpd XMM2,XMM3
            addpd XMM1,XMM2
            movapd XMM2,XMMWORD PTR [RIP+.L_43bf20]
            mulpd XMM2,XMM0
            movups XMMWORD PTR [RSI-48],XMM1
            addpd XMM2,XMM8
            movapd XMM1,XMMWORD PTR [RIP+.L_43bf60]
            mulpd XMM1,XMM11
            addpd XMM2,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43bfa0]
            mulpd XMM1,XMM10
            addpd XMM2,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43bfe0]
            mulpd XMM1,XMM7
            addpd XMM2,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c020]
            mulpd XMM1,XMM6
            addpd XMM2,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c060]
            mulpd XMM1,XMM5
            addpd XMM2,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c0a0]
            mulpd XMM1,XMM4
            addpd XMM2,XMM1
            movapd XMM1,XMMWORD PTR [RIP+.L_43c0e0]
            mulpd XMM0,XMMWORD PTR [RIP+.L_43bf30]
            mulpd XMM1,XMM3
            mulpd XMM11,XMMWORD PTR [RIP+.L_43bf70]
            mulpd XMM7,XMMWORD PTR [RIP+.L_43bff0]
            addpd XMM2,XMM1
            movapd XMM1,XMM0
            movapd XMM0,XMMWORD PTR [RIP+.L_43bfb0]
            mulpd XMM6,XMMWORD PTR [RIP+.L_43c030]
            addpd XMM1,XMM8
            mulpd XMM0,XMM10
            movups XMMWORD PTR [RSI-32],XMM2
            mulpd XMM5,XMMWORD PTR [RIP+.L_43c070]
            addpd XMM1,XMM11
            mulpd XMM4,XMMWORD PTR [RIP+.L_43c0b0]
            mulpd XMM3,XMMWORD PTR [RIP+.L_43c0f0]
            addpd XMM1,XMM0
            movapd XMM0,XMM7
            addpd XMM0,XMM1
            addpd XMM0,XMM6
            addpd XMM0,XMM5
            addpd XMM0,XMM4
            addpd XMM0,XMM3
            movups XMMWORD PTR [RSI-16],XMM0
            cmp RDX,RAX
            jne .L_43bc50

            mov RAX,QWORD PTR [RSP+552]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43bece

            add RSP,568
.L_43becd:

            ret 
.L_43bece:

            call __stack_chk_fail@PLT
.L_43bed3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bee0:

            jmp .L_43ae70
.L_43bee5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43bef0:

            jmp .L_43b850
.L_43bef5:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_43bf00:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
.L_43bf10:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
.L_43bf20:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
.L_43bf30:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
.L_43bf40:
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0x3f
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0x3f
.L_43bf50:
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0x3f
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0x3f
.L_43bf60:
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0xbf
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0xbf
.L_43bf70:
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0xbf
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0xbf
.L_43bf80:
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0x3f
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0x3f
.L_43bf90:
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0xbf
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0xbf
.L_43bfa0:
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0xbf
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0xbf
.L_43bfb0:
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0x3f
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0x3f
.L_43bfc0:
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0x3f
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0xbf
.L_43bfd0:
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0xbf
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0xbf
.L_43bfe0:
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0x3f
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0x3f
.L_43bff0:
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0x3f
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0xbf
.L_43c000:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0xbf
.L_43c010:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0xbf
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
.L_43c020:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0xbf
.L_43c030:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0xbf
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
.L_43c040:
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0x3f
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0xbf
.L_43c050:
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0x3f
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0x3f
.L_43c060:
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0xbf
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0xbf
.L_43c070:
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0x3f
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0xbf
.L_43c080:
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0x3f
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0xbf
.L_43c090:
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0x3f
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0xbf
.L_43c0a0:
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0xbf
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0x3f
.L_43c0b0:
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0xbf
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0x3f
.L_43c0c0:
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0x3f
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0xbf
.L_43c0d0:
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0x3f
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0xbf
.L_43c0e0:
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0x3f
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0xbf
.L_43c0f0:
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0x3f
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0xbf
.L_43c100:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
.L_43c108:
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0x3f
.L_43c110:
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0x3f
.L_43c118:
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0x3f
.L_43c120:
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0x3f
.L_43c128:
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0xbf
.L_43c130:
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0xbf
.L_43c138:
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0xbf
.L_43c140:
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0xbf
.L_43c148:
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0x3f
.L_43c150:
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0x3f
.L_43c158:
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0xbf
.L_43c160:
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0xbf
.L_43c168:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0xbf
.L_43c170:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0x3f
.L_43c180:
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0x3f
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0x3f
.L_43c190:
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0x3f
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0x3f
.L_43c1a0:
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0x3f
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0x3f
.L_43c1b0:
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0x3f
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0x3f
.L_43c1c0:
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0xbf
          .byte 0x31
          .byte 0xc8
          .byte 0x60
          .byte 0x3c
          .byte 0xb8
          .byte 0xf8
          .byte 0xb8
          .byte 0xbf
.L_43c1d0:
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0xbf
          .byte 0x17
          .byte 0xb7
          .byte 0xab
          .byte 0x39
          .byte 0x3b
          .byte 0xc7
          .byte 0xd1
          .byte 0xbf
.L_43c1e0:
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0xbf
          .byte 0x85
          .byte 0x6
          .byte 0x1c
          .byte 0x29
          .byte 0x66
          .byte 0x9b
          .byte 0xda
          .byte 0xbf
.L_43c1f0:
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0xbf
          .byte 0x7
          .byte 0xeb
          .byte 0xf6
          .byte 0xcf
          .byte 0x97
          .byte 0x62
          .byte 0xdf
          .byte 0xbf
.L_43c200:
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0x3f
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0x3f
.L_43c210:
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0x3f
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0x3f
.L_43c220:
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0xbf
          .byte 0xfa
          .byte 0x41
          .byte 0xb8
          .byte 0xa6
          .byte 0xe2
          .byte 0x7d
          .byte 0xc8
          .byte 0xbf
.L_43c230:
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0xbf
          .byte 0x98
          .byte 0xbe
          .byte 0x3e
          .byte 0xcf
          .byte 0x6b
          .byte 0x90
          .byte 0xdd
          .byte 0xbf
.L_43c240:
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0xbf
          .byte 0x1e
          .byte 0x15
          .byte 0x81
          .byte 0x66
          .byte 0x9e
          .byte 0xa0
          .byte 0xd6
          .byte 0xbf
.L_43c250:

            mov EAX,DWORD PTR [RSI]
            cmp DWORD PTR [RDI],EAX
            je .L_43c260

            setb AL
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c260:

            movzx EAX,WORD PTR [RSI+6]
            cmp WORD PTR [RDI+6],AX
            setg AL
            ret 
.L_43c26c:

            nop
            nop
            nop
            nop
.L_43c270:

            cmp RDI,RSI
            je .L_43c358

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            lea RBX,QWORD PTR [RDI+8]
            sub RSP,8
.L_43c28b:

            cmp RSI,RBX
            je .L_43c335

            mov R13,RDI
            mov R15,RSI
            jmp .L_43c2d8
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c2a0:

            mov RDX,RBX
            sub RDX,R13
            test RDX,RDX
            jle .L_43c2c1

            mov EDI,8
            mov RSI,RBX
            sub RDI,RDX
            sub RSI,RDX
            add RDI,RBX
            call memmove@PLT
.L_43c2c1:

            add RBX,8
            mov DWORD PTR [R13],EBP
            mov WORD PTR [R13+4],R12W
            cmp RBX,R15
            mov WORD PTR [R13+6],R14W
            je .L_43c335
.L_43c2d8:

            mov EBP,DWORD PTR [RBX]
            cmp EBP,DWORD PTR [R13]
            movzx R14D,WORD PTR [RBX+6]
            je .L_43c348

            setb AL
.L_43c2e8:

            test AL,AL
            movzx R12D,WORD PTR [RBX+4]
            jne .L_43c2a0

            mov RAX,RBX
            jmp .L_43c30b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c300:

            cmp EBP,EDX
            jae .L_43c320
.L_43c304:

            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RAX+8],RDX
.L_43c30b:

            mov EDX,DWORD PTR [RAX-8]
            mov RCX,RAX
            sub RAX,8
            cmp EBP,EDX
            jne .L_43c300

            cmp WORD PTR [RCX-2],R14W
            jl .L_43c304
.L_43c320:

            add RBX,8
            mov DWORD PTR [RCX],EBP
            mov WORD PTR [RCX+4],R12W
            cmp RBX,R15
            mov WORD PTR [RCX+6],R14W
            jne .L_43c2d8
.L_43c335:

            add RSP,8
.L_43c339:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c348:

            cmp WORD PTR [R13+6],R14W
            setl AL
            jmp .L_43c2e8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c358:

            ret 
.L_43c35a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43c360:

            sub RSP,88
.L_43c364:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp ECX,16
            jg .L_43c5c8

            mov DWORD PTR [RSP],4294967295
            xor EAX,EAX
.L_43c386:

            movsxd RDI,EDI
            lea R8,QWORD PTR [RSI+RDI*8]
            movsx EDI,WORD PTR [R8+4]
            test DI,DI
            js .L_43c3d0

            add EAX,1
            cmp ECX,EAX
            jge .L_43c3c0

            xor EAX,EAX
.L_43c3a0:

            mov RDX,QWORD PTR [RSP+72]
            xor RDX,QWORD PTR FS:[40]
            jne .L_43c5e7

            add RSP,88
.L_43c3b8:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c3c0:

            movsx R8D,WORD PTR [R8+6]
            movsxd R9,EAX
            mov DWORD PTR [RSP+R9*4],R8D
            jmp .L_43c386
          .byte 0x66
          .byte 0x90
.L_43c3d0:

            movsx RDI,WORD PTR [R8+6]
            movsxd R8,EAX
            mov BYTE PTR [RDX+RDI*1],AL
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b3

            lea R9D,DWORD PTR [RAX-1]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R9D,DWORD PTR [RAX-2]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R9D,DWORD PTR [RAX-3]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R8D,DWORD PTR [RAX-4]
            cmp R8D,-1
            je .L_43c5a0

            movsxd RDI,R8D
            mov EDI,DWORD PTR [RSP+RDI*4]
            cmp EDI,-1
            jne .L_43c5c0

            lea R9D,DWORD PTR [RAX-5]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R9D,DWORD PTR [RAX-6]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R9D,DWORD PTR [RAX-7]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R9D,DWORD PTR [RAX-8]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R8D,DWORD PTR [RAX-9]
            cmp R8D,-1
            je .L_43c5a0

            movsxd RDI,R8D
            mov EDI,DWORD PTR [RSP+RDI*4]
            cmp EDI,-1
            jne .L_43c5c0

            lea R9D,DWORD PTR [RAX-10]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R9D,DWORD PTR [RAX-11]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R9D,DWORD PTR [RAX-12]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R9D,DWORD PTR [RAX-13]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            lea R8D,DWORD PTR [RAX-14]
            cmp R8D,-1
            je .L_43c5a0

            movsxd RDI,R8D
            mov EDI,DWORD PTR [RSP+RDI*4]
            cmp EDI,-1
            jne .L_43c5c0

            lea R9D,DWORD PTR [RAX-15]
            cmp R9D,-1
            je .L_43c5a0

            movsxd R8,R9D
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b0

            sub EAX,16
            cmp EAX,-1
            je .L_43c5a0

            movsxd R8,EAX
            mov EDI,DWORD PTR [RSP+R8*4]
            cmp EDI,-1
            jne .L_43c5b3

            nop
            nop
            nop
            nop
            nop
.L_43c5a0:

            mov EAX,1
            jmp .L_43c3a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43c5b0:

            mov EAX,R9D
.L_43c5b3:

            mov DWORD PTR [RSP+R8*4],4294967295
            jmp .L_43c386
.L_43c5c0:

            movsxd R8,R8D
            mov RAX,R8
            jmp .L_43c5b3
.L_43c5c8:

            lea RCX,QWORD PTR [RIP+.L_43cfc0]
            lea RSI,QWORD PTR [RIP+.L_43cdd2]
            lea RDI,QWORD PTR [RIP+.L_43cdec]
            mov EDX,30
            call __assert_fail@PLT
.L_43c5e7:

            call __stack_chk_fail@PLT
.L_43c5ec:

            nop
            nop
            nop
            nop
.L_43c5f0:

            push R15
            mov R15,RDX
            push R14
            mov RDX,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RDX,RDI
            sub RSP,8
.L_43c607:

            cmp RDX,128
            jle .L_43c79e

            test R15,R15
            mov RBP,RDI
            mov R12,RCX
            lea R13,QWORD PTR [RDI+8]
            je .L_43c872
.L_43c627:

            sar RDX,4
            mov ECX,DWORD PTR [RBP+8]
            sub R15,1
            lea RAX,QWORD PTR [RBP+RDX*8]
            mov EDX,DWORD PTR [RAX]
            cmp ECX,EDX
            je .L_43c824

            setb R8B
.L_43c645:

            test R8B,R8B
            mov EDI,DWORD PTR [RSI-8]
            je .L_43c7c8

            cmp EDI,EDX
            je .L_43c842

            seta DL
.L_43c65c:

            test DL,DL
            mov R10D,DWORD PTR [RBP]
            movzx R9D,WORD PTR [RBP+4]
            movzx R8D,WORD PTR [RBP+6]
            jne .L_43c7f0

            cmp EDI,ECX
            je .L_43c852

            seta AL
.L_43c67d:

            test AL,AL
            jne .L_43c809
.L_43c685:

            mov RAX,QWORD PTR [RBP+8]
            mov DWORD PTR [RBP+8],R10D
            mov WORD PTR [RBP+12],R9W
            mov WORD PTR [RBP+14],R8W
            mov QWORD PTR [RBP],RAX
.L_43c69b:

            mov EDX,DWORD PTR [RBP]
            mov RBX,R13
            mov RAX,RSI
            jmp .L_43c6b4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c6b0:

            add RBX,8
.L_43c6b4:

            mov ECX,DWORD PTR [RBX]
            mov R14,RBX
            cmp ECX,EDX
            je .L_43c7b0

            setb DIL
.L_43c6c5:

            test DIL,DIL
            jne .L_43c6b0

            nop
            nop
            nop
            nop
            nop
            nop
.L_43c6d0:

            sub RAX,8
            cmp DWORD PTR [RAX],EDX
            je .L_43c700

            ja .L_43c6d0

            cmp RBX,RAX
            jae .L_43c70f
.L_43c6df:

            movzx EDX,WORD PTR [RBX+6]
            movzx EDI,WORD PTR [RBX+4]
            mov R8,QWORD PTR [RAX]
            mov QWORD PTR [RBX],R8
            mov DWORD PTR [RAX],ECX
            mov WORD PTR [RAX+4],DI
            mov WORD PTR [RAX+6],DX
            mov EDX,DWORD PTR [RBP]
            jmp .L_43c6b0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43c700:

            movzx EDI,WORD PTR [RAX+6]
            cmp WORD PTR [RBP+6],DI
            jg .L_43c6d0

            cmp RBX,RAX
            jb .L_43c6df
.L_43c70f:

            mov RDX,R15
            mov RCX,R12
            mov RDI,RBX
            call .L_43c5f0

            mov RDX,RBX
            sub RDX,RBP
            cmp RDX,128
            jle .L_43c79e

            test R15,R15
            mov RSI,RBX
            jne .L_43c627
.L_43c738:

            mov RBX,RDX
            sar RBX,3
            lea R13,QWORD PTR [RBX-2]
            sar R13,1
            jmp .L_43c754
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c750:

            sub R13,1
.L_43c754:

            mov RCX,QWORD PTR [RBP+R13*8]
            mov R8,R12
            mov RDX,RBX
            mov RSI,R13
            mov RDI,RBP
            call .L_43ce00

            test R13,R13
            jne .L_43c750

            nop
.L_43c770:

            sub R14,8
            mov RAX,QWORD PTR [RBP]
            mov RCX,QWORD PTR [R14]
            mov RBX,R14
            xor ESI,ESI
            mov R8,R12
            sub RBX,RBP
            mov RDI,RBP
            mov RDX,RBX
            mov QWORD PTR [R14],RAX
            sar RDX,3
            call .L_43ce00

            cmp RBX,8
            jg .L_43c770
.L_43c79e:

            add RSP,8
.L_43c7a2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c7b0:

            movzx EDI,WORD PTR [RBP+6]
            cmp WORD PTR [RBX+6],DI
            setg DIL
            jmp .L_43c6c5
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43c7c8:

            cmp EDI,ECX
            je .L_43c835

            seta CL
.L_43c7cf:

            test CL,CL
            mov R10D,DWORD PTR [RBP]
            movzx R9D,WORD PTR [RBP+4]
            movzx R8D,WORD PTR [RBP+6]
            jne .L_43c685

            cmp EDI,EDX
            je .L_43c862

            seta DL
.L_43c7ec:

            test DL,DL
            jne .L_43c809
.L_43c7f0:

            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RBP],RDX
            mov DWORD PTR [RAX],R10D
            mov WORD PTR [RAX+4],R9W
            mov WORD PTR [RAX+6],R8W
            jmp .L_43c69b
.L_43c809:

            mov RAX,QWORD PTR [RSI-8]
            mov QWORD PTR [RBP],RAX
            mov DWORD PTR [RSI-8],R10D
            mov WORD PTR [RSI-4],R9W
            mov WORD PTR [RSI-2],R8W
            jmp .L_43c69b
.L_43c824:

            movzx EBX,WORD PTR [RAX+6]
            cmp WORD PTR [RBP+14],BX
            setg R8B
            jmp .L_43c645
.L_43c835:

            movzx ECX,WORD PTR [RSI-2]
            cmp WORD PTR [RBP+14],CX
            setg CL
            jmp .L_43c7cf
.L_43c842:

            movzx EBX,WORD PTR [RSI-2]
            cmp WORD PTR [RAX+6],BX
            setg DL
            jmp .L_43c65c
.L_43c852:

            movzx EAX,WORD PTR [RSI-2]
            cmp WORD PTR [RBP+14],AX
            setg AL
            jmp .L_43c67d
.L_43c862:

            movzx ECX,WORD PTR [RSI-2]
            cmp WORD PTR [RAX+6],CX
            setg DL
            jmp .L_43c7ec
.L_43c872:

            mov R14,RSI
            jmp .L_43c738
.L_43c87a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_43c880:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RCX
            sub RSP,152
.L_43c897:

            mov QWORD PTR [RSP+24],RSI
            mov DWORD PTR [RSP+4],EDX
            mov ESI,1
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+136],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+40],R8
            mov DWORD PTR [RSP+60],1
            test RAX,RAX
            je .L_43caa9

            nop
            nop
            nop
            nop
            nop
.L_43c8d8:

            xor ECX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
.L_43c8e0:

            sub RAX,1
            mov EDX,DWORD PTR [R15+RAX*4]
            test EDX,EDX
            je .L_43c90a

            lea RDI,QWORD PTR [RBX+RCX*8]
            cmp ESI,EDX
            mov R8D,4294967295
            cmovae EDX,ESI
            add RCX,1
            mov DWORD PTR [RDI],EDX
            mov WORD PTR [RDI+4],R8W
            mov WORD PTR [RDI+6],AX
.L_43c90a:

            test RAX,RAX
            jne .L_43c8e0

            cmp RCX,1
            je .L_43cd90

            lea RAX,QWORD PTR [RCX*8]
            lea RBP,QWORD PTR [RCX+1]
            lea R12,QWORD PTR [RCX+RCX*1]
            lea R14D,DWORD PTR [RCX+RCX*1-1]
            mov R10,RBX
            lea RDI,QWORD PTR [RAX+8]
            lea R13,QWORD PTR [RBX+RAX*1]
            mov QWORD PTR [RSP+8],RDI
            lea RDI,QWORD PTR [RCX-1]
            cmp R13,RBX
            mov QWORD PTR [RSP+16],RDI
            je .L_43c9a7

            mov RDX,RAX
            mov ECX,63
            mov RSI,R13
            sar RDX,3
            mov RDI,RBX
            mov QWORD PTR [RSP+32],RAX
            bsr RDX,RDX
            xor RDX,63
            movsxd RDX,EDX
            sub RCX,RDX
            mov RDX,RCX
            lea RCX,QWORD PTR [RIP+.L_43c250]
            add RDX,RDX
            call .L_43c5f0

            mov RAX,QWORD PTR [RSP+32]
            add RAX,-128
            jg .L_43cd10

            lea RDX,QWORD PTR [RIP+.L_43c250]
            mov RSI,R13
            mov RDI,RBX
            call .L_43c270

            mov R10,R13
.L_43c9a7:

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [R10],-1
            lea R11,QWORD PTR [RBX+R12*8]
            mov R8D,4294967295
            xor ESI,ESI
            mov QWORD PTR [RBX+RAX*1],-1
            mov RAX,R12
            sub RAX,QWORD PTR [RSP+16]
            lea RCX,QWORD PTR [RBX+RAX*8]
            jmp .L_43ca28
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43c9d8:

            mov EDX,DWORD PTR [RBX+RDX*1+8]
            mov R10D,R8D
            lea RDI,QWORD PTR [RSI+1]
            mov R8,RSI
            mov R9,RBP
            cmp EDX,R10D
            ja .L_43ca50
.L_43c9ee:

            lea RSI,QWORD PTR [RDI+1]
            mov RBP,R9
.L_43c9f5:

            add EAX,EDX
            mov EDX,4294967295
            mov WORD PTR [RCX+4],R8W
            mov DWORD PTR [RCX],EAX
            mov EAX,4294967295
            mov WORD PTR [RCX+6],DI
            mov DWORD PTR [RCX+8],4294967295
            mov WORD PTR [RCX+12],AX
            add RCX,8
            mov WORD PTR [RCX+6],DX
            cmp R11,RCX
            je .L_43ca60

            mov R8D,DWORD PTR [RBX+RBP*8]
.L_43ca28:

            mov EAX,DWORD PTR [RBX+RSI*8]
            lea RDX,QWORD PTR [RSI*8]
            cmp EAX,R8D
            jbe .L_43c9d8

            lea R9,QWORD PTR [RBP+1]
            mov EDX,EAX
            mov RDI,RSI
            mov EAX,R8D
            mov R8,RBP
            mov R10D,DWORD PTR [RBX+R9*8]
            cmp EDX,R10D
            jbe .L_43c9ee
.L_43ca50:

            mov RSI,RDI
            lea RBP,QWORD PTR [R9+1]
            mov EDX,R10D
            mov RDI,R9
            jmp .L_43c9f5
          .byte 0x90
.L_43ca60:

            cmp DWORD PTR [RSP+4],16
            jg .L_43cdb3

            mov DWORD PTR [RSP+64],4294967295
            xor EAX,EAX
.L_43ca75:

            movsxd R14,R14D
            lea RDX,QWORD PTR [RBX+R14*8]
            movsx R14D,WORD PTR [RDX+4]
            test R14W,R14W
            js .L_43cae8

            add EAX,1
            cmp DWORD PTR [RSP+4],EAX
            jge .L_43cad8

            mov EAX,DWORD PTR [RSP+60]
            lea ESI,DWORD PTR [RAX+RAX*1]
            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+60],ESI
            test RAX,RAX
            jne .L_43c8d8
.L_43caa9:

            xor R12D,R12D
            mov R10,RBX
            mov QWORD PTR [RSP+16],-1
            mov R14D,4294967295
            mov QWORD PTR [RSP+8],8
            mov EBP,1
            jmp .L_43c9a7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cad8:

            movsx EDX,WORD PTR [RDX+6]
            movsxd RCX,EAX
            mov DWORD PTR [RSP+RCX*4+64],EDX
            jmp .L_43ca75
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43cae8:

            movsx RDX,WORD PTR [RDX+6]
            mov RDI,QWORD PTR [RSP+40]
            mov BYTE PTR [RDI+RDX*1],AL
            movsxd RDX,EAX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd02

            lea ECX,DWORD PTR [RAX-1]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea ECX,DWORD PTR [RAX-2]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea ECX,DWORD PTR [RAX-3]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea EDX,DWORD PTR [RAX-4]
            cmp EDX,-1
            je .L_43ccd0

            movsxd RCX,EDX
            mov R14D,DWORD PTR [RSP+RCX*4+64]
            cmp R14D,-1
            jne .L_43cda3

            lea ECX,DWORD PTR [RAX-5]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea ECX,DWORD PTR [RAX-6]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea ECX,DWORD PTR [RAX-7]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea ECX,DWORD PTR [RAX-8]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea EDX,DWORD PTR [RAX-9]
            cmp EDX,-1
            je .L_43ccd0

            movsxd RCX,EDX
            mov R14D,DWORD PTR [RSP+RCX*4+64]
            cmp R14D,-1
            jne .L_43cda3

            lea ECX,DWORD PTR [RAX-10]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea ECX,DWORD PTR [RAX-11]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea ECX,DWORD PTR [RAX-12]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea ECX,DWORD PTR [RAX-13]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            lea EDX,DWORD PTR [RAX-14]
            cmp EDX,-1
            je .L_43ccd0

            movsxd RCX,EDX
            mov R14D,DWORD PTR [RSP+RCX*4+64]
            cmp R14D,-1
            jne .L_43cda3

            lea ECX,DWORD PTR [RAX-15]
            cmp ECX,-1
            je .L_43ccd0

            movsxd RDX,ECX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd00

            sub EAX,16
            cmp EAX,-1
            je .L_43ccd0

            movsxd RDX,EAX
            mov R14D,DWORD PTR [RSP+RDX*4+64]
            cmp R14D,-1
            jne .L_43cd02

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43ccd0:

            mov RAX,QWORD PTR [RSP+136]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43cdae

            add RSP,152
.L_43ccee:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cd00:

            mov EAX,ECX
.L_43cd02:

            mov DWORD PTR [RSP+RDX*4+64],4294967295
            jmp .L_43ca75
          .byte 0x90
.L_43cd10:

            lea R10,QWORD PTR [RBX+128]
            lea RDX,QWORD PTR [RIP+.L_43c250]
            mov RDI,RBX
            mov RSI,R10
            mov QWORD PTR [RSP+32],R10
            call .L_43c270

            mov R10,QWORD PTR [RSP+32]
            cmp R13,R10
            je .L_43c9a7

            nop
            nop
            nop
            nop
.L_43cd40:

            mov ECX,DWORD PTR [R10]
            movzx R8D,WORD PTR [R10+4]
            mov RAX,R10
            movzx EDI,WORD PTR [R10+6]
            jmp .L_43cd63
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cd58:

            cmp EDX,ECX
            jbe .L_43cd77
.L_43cd5c:

            mov RDX,QWORD PTR [RAX]
            mov QWORD PTR [RAX+8],RDX
.L_43cd63:

            mov EDX,DWORD PTR [RAX-8]
            mov RSI,RAX
            sub RAX,8
            cmp EDX,ECX
            jne .L_43cd58

            cmp DI,WORD PTR [RSI-2]
            jg .L_43cd5c
.L_43cd77:

            add R10,8
            mov DWORD PTR [RSI],ECX
            mov WORD PTR [RSI+4],R8W
            cmp R13,R10
            mov WORD PTR [RSI+6],DI
            jne .L_43cd40

            jmp .L_43c9a7
.L_43cd90:

            movsx RAX,WORD PTR [RBX+6]
            mov RBX,QWORD PTR [RSP+40]
            mov BYTE PTR [RBX+RAX*1],1
            jmp .L_43ccd0
.L_43cda3:

            movsxd RDX,EDX
            mov RAX,RDX
            jmp .L_43cd02
.L_43cdae:

            call __stack_chk_fail@PLT
.L_43cdb3:

            lea RCX,QWORD PTR [RIP+.L_43cfc0]
            lea RSI,QWORD PTR [RIP+.L_43cdd2]
            lea RDI,QWORD PTR [RIP+.L_43cdec]
            mov EDX,30
            call __assert_fail@PLT
.L_43cdd2:
          .string "guetzli/entropy_encode.cc"
.L_43cdec:
          .string "max_depth <= 16"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43ce00:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBX,R8
            sub RSP,56
.L_43ce17:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RDX-1]
            mov QWORD PTR [RSP+8],RSI
            mov QWORD PTR [RSP+16],RCX
            mov RBP,RAX
            shr RBP,63
            add RBP,RAX
            mov RAX,RDX
            sar RBP,1
            and EAX,1
            cmp RSI,RBP
            mov QWORD PTR [RSP+24],RAX
            jge .L_43cf88

            mov R14,RSI
            jmp .L_43ce77
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43ce60:

            sub R12,1
            lea RCX,QWORD PTR [R15+R12*8]
            cmp R12,RBP
            mov RAX,QWORD PTR [RCX]
            mov QWORD PTR [R15+R14*8],RAX
            jge .L_43cea9
.L_43ce74:

            mov R14,R12
.L_43ce77:

            lea RAX,QWORD PTR [R14+1]
            lea R12,QWORD PTR [RAX+RAX*1]
            shl RAX,4
            lea RCX,QWORD PTR [R15+RAX*1]
            lea RSI,QWORD PTR [R15+RAX*1-8]
            mov RDI,RCX
            mov QWORD PTR [RSP],RCX
            call RBX

            test AL,AL
            mov RCX,QWORD PTR [RSP]
            jne .L_43ce60

            mov RAX,QWORD PTR [RCX]
            cmp R12,RBP
            mov QWORD PTR [R15+R14*8],RAX
            jl .L_43ce74
.L_43cea9:

            cmp QWORD PTR [RSP+24],0
            jne .L_43cecf
.L_43ceb1:

            lea RAX,QWORD PTR [R13-2]
            mov R13,RAX
            shr R13,63
            add R13,RAX
            sar R13,1
            cmp R13,R12
            je .L_43cf60

            lea RCX,QWORD PTR [R15+R12*8]
.L_43cecf:

            mov RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [R12-1]
            mov R13,RAX
            shr R13,63
            add R13,RAX
            sar R13,1
            cmp R12,QWORD PTR [RSP+8]
            jle .L_43cf38

            lea RBP,QWORD PTR [RSP+32]
            jmp .L_43cf24
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cf00:

            mov RAX,QWORD PTR [R14]
            lea RDX,QWORD PTR [R13-1]
            mov R12,R13
            mov QWORD PTR [RCX],RAX
            mov RAX,RDX
            shr RAX,63
            add RAX,RDX
            sar RAX,1
            cmp QWORD PTR [RSP+8],R13
            jge .L_43cf80

            mov R13,RAX
.L_43cf24:

            lea R14,QWORD PTR [R15+R13*8]
            mov RSI,RBP
            mov RDI,R14
            call RBX

            test AL,AL
            lea RCX,QWORD PTR [R15+R12*8]
            jne .L_43cf00
.L_43cf38:

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RCX],RAX
            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43cfa7

            add RSP,56
.L_43cf54:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_43cf60:

            lea RAX,QWORD PTR [R12+R12*1+2]
            mov RCX,QWORD PTR [R15+RAX*8-8]
            mov QWORD PTR [R15+R12*8],RCX
            lea R12,QWORD PTR [RAX-1]
            lea RCX,QWORD PTR [R15+R12*8]
            jmp .L_43cecf
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43cf80:

            mov RCX,R14
            jmp .L_43cf38
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_43cf88:

            cmp QWORD PTR [RSP+24],0
            mov R12,RSI
            je .L_43ceb1

            mov RAX,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+32],RCX
            lea RCX,QWORD PTR [R15+RAX*8]
            jmp .L_43cf38
.L_43cfa7:

            call __stack_chk_fail@PLT
.L_43cfac:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43cfc0:
          .string "bool guetzli::SetDepth(int, guetzli::HuffmanTree*, uint8_t*, int)"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d010:

            movsx EDX,WORD PTR [RDI+14]
            movsx EAX,WORD PTR [RDI]
            push R14
            movsx R9D,WORD PTR [RDI+2]
            push R13
            push R12
            push RBP
            push RBX
.L_43d024:

            lea EBX,DWORD PTR [RAX+RDX*1]
            sub EAX,EDX
            movsx EDX,WORD PTR [RDI+12]
            movsx R8D,WORD PTR [RDI+4]
            movsx ECX,WORD PTR [RDI+6]
            movsx R13D,WORD PTR [RSI+6]
            movsx EBP,WORD PTR [RSI+2]
            lea R11D,DWORD PTR [R9+RDX*1]
            sub R9D,EDX
            movsx EDX,WORD PTR [RDI+10]
            lea R12D,DWORD PTR [R8+RDX*1]
            sub R8D,EDX
            movsx EDX,WORD PTR [RDI+8]
            lea R14D,DWORD PTR [RCX+RDX*1]
            sub ECX,EDX
            movsx EDX,WORD PTR [RSI+10]
            lea R10D,DWORD PTR [RBX+R14*1]
            sub EBX,R14D
            lea R14D,DWORD PTR [R11+R12*1]
            sub R11D,R12D
            lea R12D,DWORD PTR [R10+R14*1]
            sub R10D,R14D
            imul R10D,R13D
            imul R12D,R13D
            sar R10D,16
            sar R12D,16
            mov WORD PTR [RDI+8],R10W
            mov R10D,EBP
            mov WORD PTR [RDI],R12W
            mov R12D,EDX
            imul R12D,R11D
            imul R10D,EBX
            imul R11D,EBP
            add R10D,R12D
            mov EBP,R9D
            imul EDX,EBX
            sar R10D,16
            mov WORD PTR [RDI+4],R10W
            sub EDX,R11D
            sar EDX,16
            mov WORD PTR [RDI+12],DX
            movsx R10D,WORD PTR [RSI]
            movsx R11D,WORD PTR [RSI+4]
            movsx EBX,WORD PTR [RSI+8]
            movsx EDX,WORD PTR [RSI+12]
            mov ESI,EAX
            imul ESI,R10D
            imul EBP,R11D
            add ESI,EBP
            mov EBP,R8D
            imul EBP,EBX
            add ESI,EBP
            mov EBP,ECX
            imul EBP,EDX
            add ESI,EBP
            mov EBP,R9D
            sar ESI,16
            mov WORD PTR [RDI+2],SI
            mov ESI,EAX
            imul EBP,EDX
            imul ESI,R11D
            sub ESI,EBP
            mov EBP,R8D
            imul EBP,R10D
            sub ESI,EBP
            mov EBP,ECX
            imul EBP,EBX
            sub ESI,EBP
            mov EBP,R9D
            sar ESI,16
            mov WORD PTR [RDI+6],SI
            mov ESI,EAX
            imul ESI,EBX
            imul EBP,R10D
            sub ESI,EBP
            mov EBP,R8D
            imul EBP,EDX
            imul R9D,EBX
            pop RBX
.L_43d12c:

            add ESI,EBP
            mov EBP,ECX
            imul EAX,EDX
            imul R8D,R11D
            sub EAX,R9D
            imul EBP,R11D
            lea EAX,DWORD PTR [RAX+R8*1]
            imul ECX,R10D
            add ESI,EBP
            sub EAX,ECX
            sar ESI,16
            sar EAX,16
            mov WORD PTR [RDI+10],SI
            pop RBP
            mov WORD PTR [RDI+14],AX
            pop R12
            pop R13
            pop R14
            ret 
.L_43d160:

            push RBX
            pxor XMM10,XMM10
            lea RSI,QWORD PTR [RIP+.L_43d948]
            mov RBX,RDI
            sub RSP,32
.L_43d174:

            movdqu XMM2,XMMWORD PTR [RDI]
            movdqa XMM4,XMM10
            movdqa XMM3,XMM10
            movdqu XMM13,XMMWORD PTR [RDI+112]
            pcmpgtw XMM4,XMM2
            movdqa XMM6,XMM2
            movdqa XMM14,XMM10
            pcmpgtw XMM3,XMM13
            movdqa XMM5,XMM13
            punpcklwd XMM6,XMM4
            punpcklwd XMM5,XMM3
            movdqu XMM0,XMMWORD PTR [RDI+80]
            punpckhwd XMM2,XMM4
            movdqa XMM7,XMM6
            movdqu XMM1,XMMWORD PTR [RDI+32]
            movdqa XMM4,XMM0
            psubd XMM7,XMM5
            movdqa XMM5,XMM13
            movdqa XMM12,XMMWORD PTR [RIP+.L_43d960]
            movdqa XMM6,XMM10
            punpckhwd XMM5,XMM3
            movdqu XMM11,XMMWORD PTR [RDI+96]
            movaps XMMWORD PTR [RSP+16],XMM7
            movdqa XMM3,XMM5
            movdqa XMM5,XMM2
            movdqa XMM2,XMM10
            movdqa XMM15,XMM11
            psubd XMM5,XMM3
            movdqa XMM3,XMM10
            movdqu XMM7,XMMWORD PTR [RDI+48]
            pcmpgtw XMM2,XMM0
            movaps XMMWORD PTR [RSP],XMM5
            pcmpgtw XMM3,XMM1
            movdqa XMM5,XMM1
            punpcklwd XMM4,XMM2
            pcmpgtw XMM6,XMM7
            punpcklwd XMM5,XMM3
            punpckhwd XMM1,XMM3
            movdqa XMM3,XMM0
            movdqa XMM9,XMM7
            psubd XMM5,XMM4
            movdqa XMM4,XMM0
            punpckhwd XMM3,XMM2
            movdqa XMM2,XMM0
            pmullw XMM4,XMM12
            movdqa XMM0,XMM4
            punpcklwd XMM9,XMM6
            pmulhw XMM2,XMM12
            psubd XMM1,XMM3
            punpckhwd XMM4,XMM2
            punpcklwd XMM0,XMM2
            movdqa XMM3,XMM10
            movdqu XMM2,XMMWORD PTR [RDI+64]
            pcmpgtw XMM10,XMM11
            punpckhwd XMM7,XMM6
            paddd XMM4,XMM1
            pslld XMM1,4
            pcmpgtw XMM3,XMM2
            movdqa XMM6,XMM2
            paddd XMM0,XMM5
            movdqa XMM8,XMM2
            pslld XMM5,4
            punpckhwd XMM6,XMM3
            punpcklwd XMM8,XMM3
            movdqa XMM3,XMM2
            punpcklwd XMM15,XMM10
            psubd XMM7,XMM6
            movdqa XMM6,XMM2
            pmulhw XMM3,XMM12
            psubd XMM9,XMM8
            pmullw XMM6,XMM12
            movdqa XMM2,XMM6
            punpckhwd XMM6,XMM3
            punpcklwd XMM2,XMM3
            movdqu XMM3,XMMWORD PTR [RDI+16]
            pcmpgtw XMM14,XMM3
            movdqa XMM8,XMM3
            paddd XMM6,XMM7
            paddd XMM2,XMM9
            pslld XMM9,3
            pslld XMM7,3
            punpcklwd XMM8,XMM14
            punpckhwd XMM3,XMM14
            movdqa XMM14,XMM11
            punpckhwd XMM14,XMM10
            psubd XMM8,XMM15
            movdqa XMM10,XMM13
            pmulhw XMM13,XMM12
            psubd XMM3,XMM14
            pmullw XMM10,XMM12
            movdqa XMM14,XMM10
            punpckhwd XMM10,XMM13
            punpcklwd XMM14,XMM13
            movdqa XMM13,XMM11
            pmulhw XMM11,XMM12
            pmullw XMM13,XMM12
            movdqa XMM15,XMM13
            paddd XMM10,XMMWORD PTR [RSP]
            punpckhwd XMM13,XMM11
            paddd XMM14,XMMWORD PTR [RSP+16]
            psubd XMM10,XMM6
            punpcklwd XMM15,XMM11
            psubd XMM14,XMM2
            pslld XMM6,1
            pslld XMM2,1
            paddd XMM6,XMM10
            paddd XMM2,XMM14
            paddd XMM13,XMM3
            pslld XMM2,3
            psubd XMM13,XMM4
            paddd XMM15,XMM8
            pslld XMM4,1
            psubd XMM15,XMM0
            paddd XMM4,XMM13
            pslld XMM0,1
            pslld XMM4,3
            paddd XMM0,XMM15
            pslld XMM6,3
            pslld XMM0,3
            psubd XMM6,XMM4
            psubd XMM2,XMM0
            pslld XMM4,1
            pslld XMM0,1
            paddd XMM4,XMM6
            paddd XMM0,XMM2
            movdqa XMM11,XMM0
            pslld XMM15,3
            pslld XMM13,3
            punpcklwd XMM0,XMM4
            pslld XMM14,3
            pslld XMM10,3
            punpckhwd XMM11,XMM4
            pslld XMM3,4
            psubd XMM3,XMM1
            pslld XMM1,1
            paddd XMM1,XMM3
            pslld XMM8,4
            movdqa XMM4,XMM0
            psubd XMM8,XMM5
            pslld XMM5,1
            punpcklwd XMM0,XMM11
            paddd XMM5,XMM8
            punpckhwd XMM4,XMM11
            movdqa XMM11,XMMWORD PTR [RSP+16]
            pslld XMM11,3
            punpcklwd XMM0,XMM4
            movups XMMWORD PTR [RDI],XMM0
            movdqa XMM0,XMM2
            punpcklwd XMM2,XMM6
            punpckhwd XMM0,XMM6
            movdqa XMM6,XMM13
            movdqa XMM4,XMM2
            punpcklwd XMM2,XMM0
            punpckhwd XMM4,XMM0
            movdqa XMM0,XMM15
            punpcklwd XMM2,XMM4
            movdqa XMM4,XMMWORD PTR [RIP+.L_43d970]
            movups XMMWORD PTR [RDI+64],XMM2
            pmuludq XMM0,XMM4
            pmuludq XMM6,XMM4
            movdqa XMM2,XMM15
            pshufd XMM0,XMM0,8
            psrlq XMM2,32
            pmuludq XMM2,XMM4
            pshufd XMM2,XMM2,8
            pshufd XMM6,XMM6,8
            punpckldq XMM0,XMM2
            movdqa XMM2,XMM13
            psrlq XMM2,32
            pmuludq XMM2,XMM4
            pshufd XMM2,XMM2,8
            psrad XMM0,16
            paddd XMM0,XMM14
            punpckldq XMM6,XMM2
            movdqa XMM2,XMM0
            psrad XMM6,16
            paddd XMM6,XMM10
            punpcklwd XMM0,XMM6
            punpckhwd XMM2,XMM6
            movdqa XMM6,XMM0
            punpcklwd XMM0,XMM2
            punpckhwd XMM6,XMM2
            punpcklwd XMM0,XMM6
            movups XMMWORD PTR [RDI+32],XMM0
            movdqa XMM0,XMM14
            psrlq XMM14,32
            pmuludq XMM14,XMM4
            pshufd XMM14,XMM14,8
            pmuludq XMM0,XMM4
            pshufd XMM0,XMM0,8
            punpckldq XMM0,XMM14
            psrad XMM0,16
            movdqa XMM2,XMM0
            movdqa XMM0,XMM10
            psrlq XMM10,32
            pmuludq XMM10,XMM4
            pshufd XMM10,XMM10,8
            psubd XMM2,XMM15
            movdqa XMM6,XMM2
            pmuludq XMM0,XMM4
            pshufd XMM0,XMM0,8
            movdqa XMM4,XMM2
            punpckldq XMM0,XMM10
            psrad XMM0,16
            psubd XMM0,XMM13
            punpcklwd XMM6,XMM0
            punpckhwd XMM4,XMM0
            movdqa XMM2,XMM6
            movdqa XMM0,XMM6
            movdqa XMM6,XMMWORD PTR [RIP+.L_43d980]
            punpckhwd XMM2,XMM4
            punpcklwd XMM0,XMM4
            movdqa XMM4,XMM8
            psrlq XMM8,32
            pmuludq XMM8,XMM6
            pshufd XMM8,XMM8,8
            pmuludq XMM4,XMM6
            pshufd XMM4,XMM4,8
            punpcklwd XMM0,XMM2
            movdqa XMM2,XMM5
            psrlq XMM5,32
            pmuludq XMM5,XMM6
            pshufd XMM5,XMM5,8
            pmuludq XMM2,XMM6
            punpckldq XMM4,XMM8
            movdqa XMM8,XMM7
            movups XMMWORD PTR [RDI+96],XMM0
            movdqa XMM0,XMM1
            psrlq XMM1,32
            pmuludq XMM1,XMM6
            pshufd XMM1,XMM1,8
            psrad XMM4,16
            psubd XMM9,XMM4
            pmuludq XMM0,XMM6
            pshufd XMM0,XMM0,8
            pslld XMM4,1
            pshufd XMM2,XMM2,8
            paddd XMM4,XMM9
            movdqa XMM7,XMMWORD PTR [RSP]
            punpckldq XMM0,XMM1
            pslld XMM7,3
            movdqa XMM1,XMM3
            psrlq XMM3,32
            punpckldq XMM2,XMM5
            movdqa XMM5,XMMWORD PTR [RIP+.L_43d990]
            pmuludq XMM1,XMM6
            pmuludq XMM6,XMM3
            pshufd XMM3,XMM1,8
            pshufd XMM6,XMM6,8
            movdqa XMM1,XMM4
            psrad XMM0,16
            psubd XMM7,XMM0
            pslld XMM0,1
            movdqa XMM10,XMM7
            pmuludq XMM1,XMM5
            pshufd XMM1,XMM1,8
            paddd XMM0,XMM7
            punpckldq XMM3,XMM6
            movdqa XMM6,XMM4
            psrad XMM2,16
            movdqa XMM7,XMMWORD PTR [RIP+.L_43d9a0]
            psubd XMM11,XMM2
            pslld XMM2,1
            psrlq XMM6,32
            pmuludq XMM6,XMM5
            pshufd XMM6,XMM6,8
            psrad XMM3,16
            psubd XMM8,XMM3
            pslld XMM3,1
            paddd XMM3,XMM8
            movdqa XMM12,XMM3
            paddd XMM2,XMM11
            punpckldq XMM1,XMM6
            movdqa XMM6,XMM3
            psrlq XMM12,32
            pmuludq XMM12,XMM5
            pshufd XMM12,XMM12,8
            pmuludq XMM6,XMM5
            pshufd XMM6,XMM6,8
            movdqa XMM13,XMM8
            psrad XMM1,16
            paddd XMM1,XMM2
            paddd XMM1,XMM7
            psrlq XMM13,32
            punpckldq XMM6,XMM12
            movdqa XMM12,XMM1
            psrad XMM6,16
            paddd XMM6,XMM0
            paddd XMM6,XMM7
            punpcklwd XMM1,XMM6
            punpckhwd XMM12,XMM6
            movdqa XMM6,XMM1
            punpcklwd XMM1,XMM12
            punpckhwd XMM6,XMM12
            movdqa XMM12,XMM9
            psrlq XMM12,32
            punpcklwd XMM1,XMM6
            movdqa XMM6,XMMWORD PTR [RIP+.L_43d9b0]
            movups XMMWORD PTR [RDI+16],XMM1
            pmuludq XMM12,XMM6
            pmuludq XMM13,XMM6
            movdqa XMM1,XMM9
            pshufd XMM12,XMM12,8
            pmuludq XMM1,XMM6
            pshufd XMM1,XMM1,8
            pshufd XMM13,XMM13,8
            punpckldq XMM1,XMM12
            movdqa XMM12,XMM11
            psrad XMM1,16
            paddd XMM1,XMM9
            paddd XMM1,XMM7
            psubd XMM12,XMM1
            movdqa XMM1,XMM8
            pmuludq XMM1,XMM6
            pshufd XMM1,XMM1,8
            punpckldq XMM1,XMM13
            psrad XMM1,16
            paddd XMM1,XMM8
            paddd XMM7,XMM1
            movdqa XMM1,XMM10
            psubd XMM1,XMM7
            movdqa XMM7,XMM1
            movdqa XMM1,XMM12
            punpcklwd XMM12,XMM7
            punpckhwd XMM1,XMM7
            movdqa XMM7,XMM12
            punpcklwd XMM12,XMM1
            punpckhwd XMM7,XMM1
            movdqa XMM1,XMM11
            pmuludq XMM1,XMM6
            pshufd XMM1,XMM1,8
            punpcklwd XMM12,XMM7
            movdqa XMM7,XMM11
            psrlq XMM7,32
            pmuludq XMM7,XMM6
            pshufd XMM7,XMM7,8
            movups XMMWORD PTR [RDI+48],XMM12
            punpckldq XMM1,XMM7
            movdqa XMM7,XMM10
            psrad XMM1,16
            paddd XMM11,XMM1
            movdqa XMM1,XMM10
            psrlq XMM7,32
            paddd XMM9,XMM11
            pmuludq XMM1,XMM6
            pmuludq XMM6,XMM7
            pshufd XMM7,XMM1,8
            pshufd XMM6,XMM6,8
            movdqa XMM1,XMM9
            punpckldq XMM7,XMM6
            psrad XMM7,16
            paddd XMM7,XMM10
            paddd XMM7,XMM8
            punpcklwd XMM9,XMM7
            punpckhwd XMM1,XMM7
            movdqa XMM6,XMM9
            punpcklwd XMM9,XMM1
            punpckhwd XMM6,XMM1
            movdqa XMM1,XMM2
            psrlq XMM2,32
            pmuludq XMM2,XMM5
            pshufd XMM2,XMM2,8
            pmuludq XMM1,XMM5
            pshufd XMM1,XMM1,8
            punpcklwd XMM9,XMM6
            punpckldq XMM1,XMM2
            movdqa XMM2,XMM0
            psrlq XMM0,32
            movups XMMWORD PTR [RDI+80],XMM9
            pmuludq XMM2,XMM5
            pmuludq XMM5,XMM0
            pshufd XMM0,XMM2,8
            pshufd XMM5,XMM5,8
            psrad XMM1,16
            psubd XMM1,XMM4
            movdqa XMM2,XMM1
            punpckldq XMM0,XMM5
            movdqa XMM5,XMM1
            psrad XMM0,16
            psubd XMM0,XMM3
            punpcklwd XMM5,XMM0
            punpckhwd XMM2,XMM0
            movdqa XMM1,XMM5
            movdqa XMM0,XMM5
            punpckhwd XMM1,XMM2
            punpcklwd XMM0,XMM2
            punpcklwd XMM0,XMM1
            movups XMMWORD PTR [RDI+112],XMM0
            call .L_43d010

            lea RSI,QWORD PTR [RIP+.L_43d938]
            lea RDI,QWORD PTR [RDI+16]
            call .L_43d010

            lea RDI,QWORD PTR [RBX+32]
            lea RSI,QWORD PTR [RIP+.L_43d928]
            call .L_43d010

            lea RDI,QWORD PTR [RBX+48]
            lea RSI,QWORD PTR [RIP+.L_43d918]
            call .L_43d010

            lea RDI,QWORD PTR [RBX+64]
            lea RSI,QWORD PTR [RIP+.L_43d948]
            call .L_43d010

            lea RDI,QWORD PTR [RBX+80]
            lea RSI,QWORD PTR [RIP+.L_43d918]
            call .L_43d010

            lea RDI,QWORD PTR [RBX+96]
            lea RSI,QWORD PTR [RIP+.L_43d928]
            call .L_43d010

            add RSP,32
.L_43d903:

            lea RDI,QWORD PTR [RBX+112]
            lea RSI,QWORD PTR [RIP+.L_43d938]
            pop RBX
            jmp .L_43d010
.L_43d914:
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43d918:
          .byte 0x62
          .byte 0x68
          .byte 0x54
          .byte 0x62
          .byte 0x7e
          .byte 0x58
          .byte 0x42
          .byte 0x4b
          .byte 0x21
          .byte 0x3b
          .byte 0xba
          .byte 0x28
          .byte 0xc3
          .byte 0x14
          .byte 0x0
          .byte 0x0
.L_43d928:
          .byte 0xfc
          .byte 0x73
          .byte 0x41
          .byte 0x6d
          .byte 0x54
          .byte 0x62
          .byte 0x9f
          .byte 0x53
          .byte 0xb3
          .byte 0x41
          .byte 0x41
          .byte 0x2d
          .byte 0x12
          .byte 0x17
          .byte 0x0
          .byte 0x0
.L_43d938:
          .byte 0x21
          .byte 0x7b
          .byte 0xfc
          .byte 0x73
          .byte 0x62
          .byte 0x68
          .byte 0xc5
          .byte 0x58
          .byte 0xbf
          .byte 0x45
          .byte 0xb
          .byte 0x30
          .byte 0x7e
          .byte 0x18
          .byte 0x0
          .byte 0x0
.L_43d948:
          .byte 0xc5
          .byte 0x58
          .byte 0x9f
          .byte 0x53
          .byte 0x42
          .byte 0x4b
          .byte 0x0
          .byte 0x40
          .byte 0x49
          .byte 0x32
          .byte 0xa3
          .byte 0x22
          .byte 0xa8
          .byte 0x11
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d960:
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_43d970:
          .string "\nj"
          .byte 0x0
          .byte 0xa
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x6a
          .byte 0x0
          .byte 0x0
.L_43d980:
          .byte 0x82
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x5a
          .byte 0x0
          .byte 0x0
.L_43d990:
          .byte 0xec
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x32
          .byte 0x0
          .byte 0x0
.L_43d9a0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43d9b0:
          .byte 0xe
          .byte 0xab
          .byte 0xff
          .byte 0xff
          .byte 0xe
          .byte 0xab
          .byte 0xff
          .byte 0xff
          .byte 0xe
          .byte 0xab
          .byte 0xff
          .byte 0xff
          .byte 0xe
          .byte 0xab
          .byte 0xff
          .byte 0xff
.L_43d9c0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,696
.L_43d9d4:

            movdqu XMM2,XMMWORD PTR [RDI]
            lea R13,QWORD PTR [RSP+544]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+680],RAX
            xor EAX,EAX
            movdqa XMM5,XMMWORD PTR [RIP+.L_43e820]
            lea RAX,QWORD PTR [R13+128]
            movdqa XMM1,XMM2
            movdqu XMM3,XMMWORD PTR [RDI+16]
            pmulhw XMM2,XMM5
            pmullw XMM1,XMM5
            movdqa XMM0,XMM1
            punpckhwd XMM1,XMM2
            movdqa XMM4,XMM3
            punpcklwd XMM0,XMM2
            movdqa XMM2,XMMWORD PTR [RIP+.L_43e830]
            movdqa XMM6,XMM3
            pmullw XMM4,XMM2
            pmulhw XMM2,XMM3
            movdqa XMM7,XMM4
            punpckhwd XMM4,XMM2
            movdqa XMM9,XMMWORD PTR [RIP+.L_43e850]
            punpcklwd XMM7,XMM2
            movdqa XMM2,XMMWORD PTR [RIP+.L_43e840]
            movaps XMMWORD PTR [RSP+64],XMM4
            pmullw XMM6,XMM2
            movdqa XMM4,XMM3
            movdqa XMM13,XMM6
            pmulhw XMM4,XMM2
            punpckhwd XMM6,XMM4
            punpcklwd XMM13,XMM4
            movdqa XMM4,XMM3
            movdqa XMM14,XMMWORD PTR [RIP+.L_43e860]
            pmulhw XMM4,XMM9
            movaps XMMWORD PTR [RSP+96],XMM6
            movdqa XMM6,XMM3
            movaps XMMWORD PTR [RSP+48],XMM7
            pmullw XMM6,XMM9
            movdqa XMM10,XMM6
            punpckhwd XMM6,XMM4
            punpcklwd XMM10,XMM4
            movdqa XMM4,XMM3
            pmulhw XMM3,XMM14
            movaps XMMWORD PTR [RSP+80],XMM13
            pmullw XMM4,XMM14
            movdqa XMM8,XMM4
            punpckhwd XMM4,XMM3
            punpcklwd XMM8,XMM3
            movdqa XMM3,XMMWORD PTR [RIP+.L_43e870]
            movaps XMMWORD PTR [RSP+160],XMM4
            movaps XMMWORD PTR [RSP+128],XMM6
            movaps XMMWORD PTR [RSP+144],XMM8
            movaps XMMWORD PTR [RSP+112],XMM10
            movdqu XMM4,XMMWORD PTR [RDI+32]
            movdqa XMM11,XMM4
            movdqa XMM8,XMM4
            pmullw XMM11,XMM3
            movdqa XMM6,XMM11
            movdqa XMM7,XMM11
            pmulhw XMM3,XMM4
            punpcklwd XMM7,XMM3
            punpckhwd XMM6,XMM3
            movdqa XMM3,XMMWORD PTR [RIP+.L_43e880]
            pmullw XMM8,XMM3
            movdqa XMM11,XMM8
            pmulhw XMM4,XMM3
            punpckhwd XMM8,XMM4
            punpcklwd XMM11,XMM4
            movdqu XMM4,XMMWORD PTR [RDI+48]
            movaps XMMWORD PTR [RSP+16],XMM7
            movdqa XMM10,XMM4
            movaps XMMWORD PTR [RSP],XMM11
            movdqa XMM11,XMM4
            movaps XMMWORD PTR [RSP+32],XMM6
            pmullw XMM11,XMM2
            movdqa XMM7,XMM11
            movdqa XMM11,XMM4
            movdqa XMM12,XMM7
            movdqa XMM15,XMM7
            pmulhw XMM11,XMM2
            punpcklwd XMM12,XMM11
            punpckhwd XMM15,XMM11
            movdqa XMM11,XMM4
            movaps XMMWORD PTR [RSP+176],XMM12
            movaps XMMWORD PTR [RSP+192],XMM15
            movdqa XMM6,XMMWORD PTR [RIP+.L_43e890]
            pmullw XMM11,XMM6
            movdqa XMM7,XMM11
            pmulhw XMM6,XMM4
            movdqa XMM13,XMM11
            movdqa XMM11,XMM4
            punpckhwd XMM7,XMM6
            punpcklwd XMM13,XMM6
            movaps XMMWORD PTR [RSP+224],XMM7
            movaps XMMWORD PTR [RSP+208],XMM13
            movdqa XMM7,XMMWORD PTR [RIP+.L_43e8a0]
            pmullw XMM10,XMM7
            movdqa XMM12,XMM10
            pmulhw XMM11,XMM7
            punpckhwd XMM10,XMM11
            punpcklwd XMM12,XMM11
            movdqa XMM11,XMM4
            movaps XMMWORD PTR [RSP+256],XMM10
            movaps XMMWORD PTR [RSP+240],XMM12
            movdqa XMM12,XMMWORD PTR [RIP+.L_43e8b0]
            pmullw XMM11,XMM12
            movdqa XMM6,XMM11
            pmulhw XMM4,XMM12
            movdqa XMM15,XMM11
            punpckhwd XMM6,XMM4
            punpcklwd XMM15,XMM4
            movaps XMMWORD PTR [RSP+288],XMM6
            movaps XMMWORD PTR [RSP+272],XMM15
            movdqu XMM6,XMMWORD PTR [RDI+64]
            movdqa XMM11,XMM6
            pmulhw XMM6,XMM5
            pmullw XMM11,XMM5
            movdqa XMM4,XMM11
            movdqa XMM5,XMM11
            punpckhwd XMM4,XMM6
            punpcklwd XMM5,XMM6
            movdqu XMM6,XMMWORD PTR [RDI+80]
            movdqa XMM11,XMM6
            pmullw XMM11,XMM9
            movdqa XMM10,XMM11
            pmulhw XMM9,XMM6
            movdqa XMM13,XMM11
            movdqa XMM11,XMM6
            punpckhwd XMM10,XMM9
            punpcklwd XMM13,XMM9
            movdqa XMM9,XMM6
            pmullw XMM11,XMM2
            pmullw XMM9,XMM7
            pmulhw XMM7,XMM6
            movdqa XMM15,XMM9
            punpckhwd XMM9,XMM7
            punpcklwd XMM15,XMM7
            movdqa XMM7,XMMWORD PTR [RIP+.L_43e8c0]
            movaps XMMWORD PTR [RSP+352],XMM9
            movdqa XMM9,XMM6
            movaps XMMWORD PTR [RSP+304],XMM13
            pmullw XMM9,XMM7
            movdqa XMM13,XMM9
            pmulhw XMM7,XMM6
            pmulhw XMM6,XMM2
            punpckhwd XMM9,XMM7
            punpcklwd XMM13,XMM7
            movdqa XMM7,XMM11
            punpcklwd XMM11,XMM6
            movaps XMMWORD PTR [RSP+320],XMM10
            punpckhwd XMM7,XMM6
            movaps XMMWORD PTR [RSP+368],XMM13
            movdqa XMM13,XMM11
            movaps XMMWORD PTR [RSP+384],XMM9
            movaps XMMWORD PTR [RSP+400],XMM7
            movaps XMMWORD PTR [RSP+336],XMM15
            movdqu XMM10,XMMWORD PTR [RDI+96]
            movdqa XMM11,XMM10
            pmullw XMM11,XMM3
            pmulhw XMM3,XMM10
            movdqa XMM6,XMM11
            punpcklwd XMM11,XMM3
            punpckhwd XMM6,XMM3
            movdqa XMM3,XMMWORD PTR [RIP+.L_43e8d0]
            movdqa XMM9,XMM11
            movdqa XMM11,XMM10
            pmullw XMM11,XMM3
            movdqa XMM7,XMM11
            pmulhw XMM3,XMM10
            punpcklwd XMM11,XMM3
            punpckhwd XMM7,XMM3
            movdqu XMM3,XMMWORD PTR [RDI+112]
            movdqa XMM10,XMM11
            movdqa XMM11,XMM3
            pmullw XMM11,XMM14
            pmulhw XMM14,XMM3
            movdqa XMM15,XMM11
            punpcklwd XMM11,XMM14
            movaps XMMWORD PTR [RSP+416],XMM11
            movdqa XMM11,XMM15
            punpckhwd XMM11,XMM14
            movdqa XMM14,XMM3
            pmullw XMM14,XMM12
            movdqa XMM15,XMM14
            pmulhw XMM12,XMM3
            punpckhwd XMM14,XMM12
            punpcklwd XMM15,XMM12
            movdqa XMM12,XMM3
            movaps XMMWORD PTR [RSP+464],XMM14
            pmullw XMM12,XMM2
            pmulhw XMM2,XMM3
            movdqa XMM14,XMM12
            punpckhwd XMM12,XMM2
            punpcklwd XMM14,XMM2
            movdqa XMM2,XMM3
            movaps XMMWORD PTR [RSP+448],XMM15
            movaps XMMWORD PTR [RSP+480],XMM12
            movaps XMMWORD PTR [RSP+512],XMM14
            movdqa XMM12,XMMWORD PTR [RIP+.L_43e8e0]
            pmulhw XMM3,XMM12
            pmullw XMM2,XMM12
            movdqa XMM12,XMM2
            punpckhwd XMM2,XMM3
            punpcklwd XMM12,XMM3
            movdqa XMM3,XMMWORD PTR [RSP+48]
            movaps XMMWORD PTR [RSP+496],XMM2
            paddd XMM3,XMM0
            movdqa XMM2,XMMWORD PTR [RSP+16]
            paddd XMM2,XMM3
            paddd XMM2,XMMWORD PTR [RSP+176]
            paddd XMM2,XMM5
            paddd XMM2,XMMWORD PTR [RSP+304]
            movaps XMMWORD PTR [RSP+432],XMM11
            paddd XMM2,XMM9
            paddd XMM2,XMMWORD PTR [RSP+416]
            movdqa XMM3,XMMWORD PTR [RIP+.L_43e980-144]
            movdqa XMM14,XMMWORD PTR [RSP+64]
            paddd XMM2,XMM3
            psrad XMM2,11
            movdqa XMM15,XMMWORD PTR [RSP+32]
            paddd XMM14,XMM1
            paddd XMM15,XMM14
            movdqa XMM14,XMM2
            paddd XMM15,XMMWORD PTR [RSP+192]
            paddd XMM15,XMM4
            paddd XMM15,XMMWORD PTR [RSP+320]
            paddd XMM15,XMM6
            paddd XMM15,XMMWORD PTR [RSP+432]
            paddd XMM15,XMM3
            psrad XMM15,11
            punpcklwd XMM2,XMM15
            punpckhwd XMM14,XMM15
            movdqa XMM15,XMMWORD PTR [RSP+96]
            movdqa XMM11,XMM2
            paddd XMM15,XMM1
            paddd XMM15,XMM8
            punpcklwd XMM2,XMM14
            paddd XMM15,XMMWORD PTR [RSP+224]
            psubd XMM15,XMM4
            punpckhwd XMM11,XMM14
            paddd XMM15,XMMWORD PTR [RSP+352]
            paddd XMM15,XMM7
            paddd XMM15,XMMWORD PTR [RSP+464]
            paddd XMM15,XMM3
            psrad XMM15,11
            punpcklwd XMM2,XMM11
            movdqa XMM11,XMMWORD PTR [RSP]
            movaps XMMWORD PTR [RSP+544],XMM2
            movdqa XMM2,XMMWORD PTR [RSP+80]
            paddd XMM2,XMM0
            paddd XMM2,XMM11
            paddd XMM2,XMMWORD PTR [RSP+208]
            psubd XMM2,XMM5
            paddd XMM2,XMMWORD PTR [RSP+336]
            paddd XMM2,XMM10
            paddd XMM2,XMMWORD PTR [RSP+448]
            paddd XMM2,XMM3
            psrad XMM2,11
            movdqa XMM14,XMM2
            punpcklwd XMM2,XMM15
            movdqa XMM11,XMMWORD PTR [RSP+512]
            punpckhwd XMM14,XMM15
            movdqa XMM15,XMM2
            punpcklwd XMM2,XMM14
            punpckhwd XMM15,XMM14
            movdqa XMM14,XMMWORD PTR [RSP+128]
            paddd XMM14,XMM1
            punpcklwd XMM2,XMM15
            movdqa XMM15,XMM14
            movaps XMMWORD PTR [RSP+560],XMM2
            psubd XMM15,XMM8
            paddd XMM15,XMMWORD PTR [RSP+256]
            psubd XMM15,XMM4
            paddd XMM15,XMMWORD PTR [RSP+384]
            psubd XMM15,XMM7
            paddd XMM15,XMMWORD PTR [RSP+480]
            paddd XMM15,XMM3
            psrad XMM15,11
            movdqa XMM2,XMMWORD PTR [RSP+112]
            paddd XMM2,XMM0
            psubd XMM2,XMMWORD PTR [RSP]
            paddd XMM2,XMMWORD PTR [RSP+240]
            psubd XMM2,XMM5
            paddd XMM2,XMMWORD PTR [RSP+368]
            psubd XMM2,XMM10
            paddd XMM2,XMM11
            paddd XMM2,XMM3
            psrad XMM2,11
            movdqa XMM14,XMM2
            punpcklwd XMM2,XMM15
            punpckhwd XMM14,XMM15
            movdqa XMM15,XMM2
            punpcklwd XMM2,XMM14
            punpckhwd XMM15,XMM14
            punpcklwd XMM2,XMM15
            movaps XMMWORD PTR [RSP+576],XMM2
            movdqa XMM2,XMMWORD PTR [RSP+144]
            paddd XMM2,XMM0
            psubd XMM2,XMMWORD PTR [RSP+16]
            paddd XMM2,XMMWORD PTR [RSP+272]
            movdqa XMM15,XMMWORD PTR [RSP+160]
            paddd XMM2,XMM5
            paddd XMM2,XMM13
            psubd XMM2,XMM9
            paddd XMM2,XMM12
            paddd XMM2,XMM3
            paddd XMM15,XMM1
            psrad XMM2,11
            psubd XMM15,XMMWORD PTR [RSP+32]
            movdqa XMM14,XMM2
            paddd XMM15,XMMWORD PTR [RSP+288]
            paddd XMM15,XMM4
            paddd XMM15,XMMWORD PTR [RSP+400]
            psubd XMM15,XMM6
            paddd XMM15,XMMWORD PTR [RSP+496]
            paddd XMM15,XMM3
            psrad XMM15,11
            punpcklwd XMM2,XMM15
            punpckhwd XMM14,XMM15
            movdqa XMM15,XMM2
            punpcklwd XMM2,XMM14
            punpckhwd XMM15,XMM14
            movdqa XMM14,XMMWORD PTR [RSP+16]
            punpcklwd XMM2,XMM15
            movdqa XMM15,XMMWORD PTR [RSP+32]
            movaps XMMWORD PTR [RSP+592],XMM2
            movdqa XMM2,XMM0
            psubd XMM2,XMMWORD PTR [RSP+144]
            psubd XMM2,XMM14
            psubd XMM2,XMMWORD PTR [RSP+272]
            paddd XMM2,XMM5
            psubd XMM2,XMM13
            psubd XMM2,XMM9
            psubd XMM2,XMM12
            movdqa XMM12,XMM1
            paddd XMM2,XMM3
            psrad XMM2,11
            movdqa XMM13,XMM2
            psubd XMM12,XMMWORD PTR [RSP+160]
            psubd XMM12,XMM15
            psubd XMM12,XMMWORD PTR [RSP+288]
            paddd XMM12,XMM4
            psubd XMM12,XMMWORD PTR [RSP+400]
            psubd XMM12,XMM6
            psubd XMM12,XMMWORD PTR [RSP+496]
            paddd XMM12,XMM3
            psrad XMM12,11
            punpcklwd XMM2,XMM12
            punpckhwd XMM13,XMM12
            movdqa XMM12,XMM2
            punpcklwd XMM2,XMM13
            punpckhwd XMM12,XMM13
            punpcklwd XMM2,XMM12
            movdqa XMM12,XMM1
            movaps XMMWORD PTR [RSP+608],XMM2
            psubd XMM12,XMMWORD PTR [RSP+128]
            psubd XMM12,XMM8
            movdqa XMM2,XMM0
            psubd XMM12,XMMWORD PTR [RSP+256]
            psubd XMM12,XMM4
            psubd XMM12,XMMWORD PTR [RSP+384]
            psubd XMM12,XMM7
            psubd XMM12,XMMWORD PTR [RSP+480]
            psubd XMM2,XMMWORD PTR [RSP+112]
            paddd XMM12,XMM3
            psubd XMM2,XMMWORD PTR [RSP]
            psrad XMM12,11
            psubd XMM2,XMMWORD PTR [RSP+240]
            psubd XMM2,XMM5
            psubd XMM2,XMMWORD PTR [RSP+368]
            psubd XMM2,XMM10
            psubd XMM2,XMM11
            paddd XMM2,XMM3
            psrad XMM2,11
            movdqa XMM13,XMM2
            punpcklwd XMM2,XMM12
            movdqa XMM11,XMMWORD PTR [RSP]
            punpckhwd XMM13,XMM12
            movdqa XMM12,XMM2
            punpcklwd XMM2,XMM13
            punpckhwd XMM12,XMM13
            punpcklwd XMM2,XMM12
            movaps XMMWORD PTR [RSP+624],XMM2
            movdqa XMM2,XMM0
            psubd XMM2,XMMWORD PTR [RSP+80]
            paddd XMM11,XMM2
            movdqa XMM2,XMM1
            psubd XMM11,XMMWORD PTR [RSP+208]
            psubd XMM11,XMM5
            psubd XMM11,XMMWORD PTR [RSP+336]
            psubd XMM2,XMMWORD PTR [RSP+96]
            paddd XMM11,XMM10
            paddd XMM8,XMM2
            psubd XMM11,XMMWORD PTR [RSP+448]
            psubd XMM8,XMMWORD PTR [RSP+224]
            psubd XMM8,XMM4
            psubd XMM8,XMMWORD PTR [RSP+352]
            paddd XMM8,XMM7
            psubd XMM8,XMMWORD PTR [RSP+464]
            movdqa XMM2,XMM8
            paddd XMM11,XMM3
            psrad XMM11,11
            movdqa XMM7,XMM11
            psubd XMM0,XMMWORD PTR [RSP+48]
            psubd XMM1,XMMWORD PTR [RSP+64]
            paddd XMM2,XMM3
            psrad XMM2,11
            punpcklwd XMM11,XMM2
            punpckhwd XMM7,XMM2
            paddd XMM0,XMM14
            paddd XMM1,XMM15
            psubd XMM0,XMMWORD PTR [RSP+176]
            psubd XMM1,XMMWORD PTR [RSP+192]
            paddd XMM0,XMM5
            movdqa XMM2,XMM11
            paddd XMM4,XMM1
            psubd XMM0,XMMWORD PTR [RSP+304]
            punpcklwd XMM11,XMM7
            paddd XMM0,XMM9
            psubd XMM4,XMMWORD PTR [RSP+320]
            punpckhwd XMM2,XMM7
            psubd XMM0,XMMWORD PTR [RSP+416]
            paddd XMM6,XMM4
            paddd XMM0,XMM3
            psubd XMM6,XMMWORD PTR [RSP+432]
            psrad XMM0,11
            paddd XMM3,XMM6
            movdqa XMM1,XMM0
            psrad XMM3,11
            punpcklwd XMM0,XMM3
            mov QWORD PTR [RSP+208],RAX
            punpckhwd XMM1,XMM3
            punpcklwd XMM11,XMM2
            movdqa XMM2,XMM0
            punpcklwd XMM0,XMM1
            punpckhwd XMM2,XMM1
            movaps XMMWORD PTR [RSP+640],XMM11
            punpcklwd XMM0,XMM2
            movaps XMMWORD PTR [RSP+656],XMM0
            nop
            nop
            nop
.L_43e3d0:

            movsx R10D,WORD PTR [R13+6]
            movsx R11D,WORD PTR [R13+2]
            movsx EDI,WORD PTR [R13+4]
            movsx R9D,WORD PTR [R13+10]
            movsx EAX,WORD PTR [R13]
            imul R8D,R10D,-11362
            imul EDX,R11D,9633
            shl EAX,13
            mov DWORD PTR [RSP+64],R8D
            imul EBX,R10D,9633
            mov DWORD PTR [RSP+176],EDX
            add EDX,EAX
            imul ECX,R10D,-2259
            mov DWORD PTR [RSP+160],EBX
            imul EBP,EDI,10703
            mov DWORD PTR [RSP+80],ECX
            movsx ECX,WORD PTR [R13+8]
            imul EDI,EDI,4433
            imul ESI,R11D,11363
            add EDX,EDI
            add EDX,DWORD PTR [RSP+80]
            imul R8D,R9D,2261
            shl ECX,13
            mov DWORD PTR [RSP+192],ESI
            movsx ESI,WORD PTR [R13+12]
            imul EBX,R9D,-11362
            mov DWORD PTR [RSP+32],R8D
            movsx R8D,WORD PTR [R13+14]
            sub EDX,ECX
            mov DWORD PTR [RSP+48],EBX
            add EDX,DWORD PTR [RSP+48]
            imul EBX,R9D,9633
            imul R12D,R9D,6437
            mov DWORD PTR [RSP+96],EBX
            imul R9D,R8D,-6436
            mov DWORD PTR [RSP+144],R12D
            imul EBX,ESI,4433
            mov DWORD PTR [RSP+16],R9D
            imul ESI,ESI,-10704
            imul R15D,R11D,6437
            add EDX,ESI
            add EDX,DWORD PTR [RSP+16]
            imul R9D,R8D,9633
            imul R11D,R11D,2260
            mov DWORD PTR [RSP+128],EDX
            lea EDX,DWORD PTR [RAX+R15*1]
            mov DWORD PTR [RSP],R9D
            imul R10D,R10D,-6436
            mov R9D,DWORD PTR [RSP]
            sub EDX,EDI
            add EDX,DWORD PTR [RSP+64]
            imul R12D,R8D,2260
            imul R8D,R8D,-11363
            sub EDX,ECX
            add EDX,DWORD PTR [RSP+32]
            sub EDX,ESI
            add R9D,EDX
            lea EDX,DWORD PTR [RAX+R11*1]
            mov DWORD PTR [RSP+112],R9D
            mov R9D,DWORD PTR [RSP+96]
            sub EDX,EBP
            add EDX,R10D
            add EDX,ECX
            add EDX,R9D
            sub EDX,EBX
            add EDX,R8D
            mov DWORD PTR [RSP+96],EDX
            mov EDX,EAX
            sub EDX,R11D
            mov R11D,EAX
            sub EDX,EBP
            sub EDX,R10D
            add EDX,ECX
            sub EDX,R9D
            mov R9D,EAX
            sub EDX,EBX
            sub EDX,R8D
            mov R8D,EAX
            sub R8D,R15D
            sub R8D,EDI
            sub R8D,DWORD PTR [RSP+64]
            sub R8D,ECX
            sub R8D,DWORD PTR [RSP+32]
            sub R8D,ESI
            sub R8D,DWORD PTR [RSP]
            sub R11D,DWORD PTR [RSP+176]
            mov R15D,DWORD PTR [RSP+160]
            mov R10D,DWORD PTR [RSP+144]
            add EDI,R11D
            sub EDI,DWORD PTR [RSP+80]
            sub EDI,ECX
            sub EDI,DWORD PTR [RSP+48]
            add EDI,ESI
            mov ESI,DWORD PTR [RSP+192]
            sub EDI,DWORD PTR [RSP+16]
            sub R9D,ESI
            add R9D,EBP
            sub R9D,R15D
            add EAX,ESI
            add EAX,EBP
            add R9D,ECX
            lea EBP,DWORD PTR [RAX+R15*1]
            sub R9D,R10D
            add R9D,EBX
            add ECX,EBP
            sub R9D,R12D
            add ECX,R10D
            add EBX,ECX
            lea EAX,DWORD PTR [R12+RBX*1+33685504]
            sar EAX,18
            cmp EAX,254
            jg .L_43e800

            xor ECX,ECX
            test EAX,EAX
            mov DWORD PTR [RSP+540],0
            jg .L_43e805
.L_43e5cf:

            mov EAX,DWORD PTR [RSP+128]
            mov BYTE PTR [R14],CL
            add EAX,33685504
            sar EAX,18
            cmp EAX,254
            jg .L_43e7f0

            xor ECX,ECX
            test EAX,EAX
            mov DWORD PTR [RSP+540],0
            jg .L_43e7f5
.L_43e601:

            mov EAX,DWORD PTR [RSP+112]
            mov BYTE PTR [R14+1],CL
            add EAX,33685504
            sar EAX,18
            cmp EAX,254
            jg .L_43e7e0

            xor ECX,ECX
            test EAX,EAX
            mov DWORD PTR [RSP+540],0
            jg .L_43e7e5
.L_43e631:

            mov EAX,DWORD PTR [RSP+96]
            mov BYTE PTR [R14+2],CL
            add EAX,33685504
            sar EAX,18
            cmp EAX,254
            jg .L_43e7d0

            xor ECX,ECX
            test EAX,EAX
            mov DWORD PTR [RSP+540],0
            jg .L_43e7d5
.L_43e661:

            add EDX,33685504
            mov BYTE PTR [R14+3],CL
            sar EDX,18
            cmp EDX,254
            jg .L_43e7c0

            xor EAX,EAX
            test EDX,EDX
            mov DWORD PTR [RSP+540],0
            jg .L_43e7c5
.L_43e68f:

            add R8D,33685504
            mov BYTE PTR [R14+4],AL
            sar R8D,18
            cmp R8D,254
            jg .L_43e7a8

            xor EAX,EAX
            test R8D,R8D
            mov DWORD PTR [RSP+540],0
            jg .L_43e7ae
.L_43e6c1:

            add EDI,33685504
            mov BYTE PTR [R14+5],AL
            sar EDI,18
            cmp EDI,254
            jg .L_43e798

            xor EAX,EAX
            test EDI,EDI
            mov DWORD PTR [RSP+540],0
            jg .L_43e79d
.L_43e6ef:

            add R9D,33685504
            mov BYTE PTR [R14+6],AL
            mov DWORD PTR [RSP+532],255
            sar R9D,18
            cmp R9D,254
            mov DWORD PTR [RSP+536],R9D
            jg .L_43e770

            test R9D,R9D
            mov DWORD PTR [RSP+540],0
            jg .L_43e776

            mov BYTE PTR [R14+7],0
            add R13,16
            add R14,8
            cmp QWORD PTR [RSP+208],R13
            jne .L_43e3d0
.L_43e745:

            mov RAX,QWORD PTR [RSP+680]
            xor RAX,QWORD PTR FS:[40]
            jne .L_43e80c

            add RSP,696
.L_43e763:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_43e770:

            mov R9D,255
.L_43e776:

            mov BYTE PTR [R14+7],R9B
            add R13,16
            add R14,8
            cmp QWORD PTR [RSP+208],R13
            jne .L_43e3d0

            jmp .L_43e745
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e798:

            mov EDI,255
.L_43e79d:

            mov EAX,EDI
            jmp .L_43e6ef
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e7a8:

            mov R8D,255
.L_43e7ae:

            mov EAX,R8D
            jmp .L_43e6c1
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e7c0:

            mov EDX,255
.L_43e7c5:

            mov EAX,EDX
            jmp .L_43e68f
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e7d0:

            mov EAX,255
.L_43e7d5:

            mov ECX,EAX
            jmp .L_43e661
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e7e0:

            mov EAX,255
.L_43e7e5:

            mov ECX,EAX
            jmp .L_43e631
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e7f0:

            mov EAX,255
.L_43e7f5:

            mov ECX,EAX
            jmp .L_43e601
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_43e800:

            mov EAX,255
.L_43e805:

            mov ECX,EAX
            jmp .L_43e5cf
.L_43e80c:

            call __stack_chk_fail@PLT
.L_43e811:
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_43e820:
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x20
.L_43e830:
          .byte 0x63
          .byte 0x2c
          .byte 0x63
          .byte 0x2c
          .byte 0x63
          .byte 0x2c
          .byte 0x63
          .byte 0x2c
          .byte 0x63
          .byte 0x2c
          .byte 0x63
          .byte 0x2c
          .byte 0x63
          .byte 0x2c
          .byte 0x63
          .byte 0x2c
.L_43e840:
          .byte 0xa1
          .byte 0x25
          .byte 0xa1
          .byte 0x25
          .byte 0xa1
          .byte 0x25
          .byte 0xa1
          .byte 0x25
          .byte 0xa1
          .byte 0x25
          .byte 0xa1
          .byte 0x25
          .byte 0xa1
          .byte 0x25
          .byte 0xa1
          .byte 0x25
.L_43e850:
          .byte 0x25
          .byte 0x19
          .byte 0x25
          .byte 0x19
          .byte 0x25
          .byte 0x19
          .byte 0x25
          .byte 0x19
          .byte 0x25
          .byte 0x19
          .byte 0x25
          .byte 0x19
          .byte 0x25
          .byte 0x19
          .byte 0x25
          .byte 0x19
.L_43e860:
          .byte 0xd4
          .byte 0x8
          .byte 0xd4
          .byte 0x8
          .byte 0xd4
          .byte 0x8
          .byte 0xd4
          .byte 0x8
          .byte 0xd4
          .byte 0x8
          .byte 0xd4
          .byte 0x8
          .byte 0xd4
          .byte 0x8
          .byte 0xd4
          .byte 0x8
.L_43e870:
          .byte 0xcf
          .byte 0x29
          .byte 0xcf
          .byte 0x29
          .byte 0xcf
          .byte 0x29
          .byte 0xcf
          .byte 0x29
          .byte 0xcf
          .byte 0x29
          .byte 0xcf
          .byte 0x29
          .byte 0xcf
          .byte 0x29
          .byte 0xcf
          .byte 0x29
.L_43e880:
          .byte 0x51
          .byte 0x11
          .byte 0x51
          .byte 0x11
          .byte 0x51
          .byte 0x11
          .byte 0x51
          .byte 0x11
          .byte 0x51
          .byte 0x11
          .byte 0x51
          .byte 0x11
          .byte 0x51
          .byte 0x11
          .byte 0x51
          .byte 0x11
.L_43e890:
          .byte 0x2d
          .byte 0xf7
          .byte 0x2d
          .byte 0xf7
          .byte 0x2d
          .byte 0xf7
          .byte 0x2d
          .byte 0xf7
          .byte 0x2d
          .byte 0xf7
          .byte 0x2d
          .byte 0xf7
          .byte 0x2d
          .byte 0xf7
          .byte 0x2d
          .byte 0xf7
.L_43e8a0:
          .byte 0x9e
          .byte 0xd3
          .byte 0x9e
          .byte 0xd3
          .byte 0x9e
          .byte 0xd3
          .byte 0x9e
          .byte 0xd3
          .byte 0x9e
          .byte 0xd3
          .byte 0x9e
          .byte 0xd3
          .byte 0x9e
          .byte 0xd3
          .byte 0x9e
          .byte 0xd3
.L_43e8b0:
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
          .byte 0xdc
          .byte 0xe6
.L_43e8c0:
          .byte 0xd5
          .byte 0x8
          .byte 0xd5
          .byte 0x8
          .byte 0xd5
          .byte 0x8
          .byte 0xd5
          .byte 0x8
          .byte 0xd5
          .byte 0x8
          .byte 0xd5
          .byte 0x8
          .byte 0xd5
          .byte 0x8
          .byte 0xd5
          .byte 0x8
.L_43e8d0:

            xor DH,DL
            xor DH,DL
            xor DH,DL
            xor DH,DL
            xor DH,DL
            xor DH,DL
            xor DH,DL
            xor DH,DL
.L_43e8e0:

            popfq 
            rcr DWORD PTR [RBP-1647075885],CL
            rcr DWORD PTR [RBP-1647075885],CL
            rcr DWORD PTR [RBP+262355],CL
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
.L_43e900:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_643d40]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_643d48]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 4128

            test RBP,RBP
            je .L_43e956

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e940:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_43e940
.L_43e956:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_43e965:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_43e970:

            ret 
.L_43e972:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

.L_43e980:
          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_43e988:
          .string "basic_string::_M_construct null not valid"
          .zero 6
.L_43e9b8:
          .string "rb"
.L_43e9bb:
          .string "malloc error!\n"
.L_43e9ca:
          .string "read error!\n"
#===================================
# end section .rodata
#===================================

#===================================
.section .gcc_except_table ,"a",@progbits
.align 8
#===================================

.L_442068:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442082-.L_44206c
.L_44206c:
          .uleb128 .L_4019a3-.L_401790
          .uleb128 .L_4019a8-.L_4019a3
          .uleb128 .L_401d5b-.L_401790
          .zero 1
          .uleb128 .L_401c88-.L_401790
          .uleb128 .L_401c8d-.L_401c88
          .zero 2
          .uleb128 .L_401d0f-.L_401790
          .uleb128 .L_401d14-.L_401d0f
          .uleb128 .L_401d81-.L_401790
          .zero 1
          .uleb128 .L_401d56-.L_401790
          .uleb128 .L_401d81-.L_401d56
          .zero 2
.L_442082:
          .zero 2
.L_442084:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_4420ac-.L_442087
.L_442087:
          .byte 0x1
          .uleb128 .L_4420a4-.L_442089
.L_442089:
          .uleb128 .L_406f99-.L_406f40
          .uleb128 .L_406f9e-.L_406f99
          .zero 2
          .uleb128 .L_40700d-.L_406f40
          .uleb128 .L_407012-.L_40700d
          .uleb128 .L_4072af-.L_406f40
          .byte 0x1
          .uleb128 .L_4072c4-.L_406f40
          .uleb128 .L_4072c9-.L_4072c4
          .uleb128 .L_4072ce-.L_406f40
          .zero 1
          .uleb128 .L_4072c9-.L_406f40
          .uleb128 .L_4072ce-.L_4072c9
          .uleb128 .L_4072af-.L_406f40
          .byte 0x1
          .uleb128 .L_4072d9-.L_406f40
          .uleb128 .L_4072de-.L_4072d9
          .zero 2
.L_4420a4:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4420ac:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_4420dc-.L_4420af
.L_4420af:
          .byte 0x1
          .uleb128 .L_4420d3-.L_4420b1
.L_4420b1:
          .uleb128 .L_40743f-.L_4073e0
          .uleb128 .L_407444-.L_40743f
          .zero 2
          .uleb128 .L_40749c-.L_4073e0
          .uleb128 .L_4074a1-.L_40749c
          .uleb128 .L_407910-.L_4073e0
          .byte 0x1
          .uleb128 .L_407532-.L_4073e0
          .uleb128 .L_4078dd-.L_407532
          .uleb128 .L_4078dd-.L_4073e0
          .byte 0x3
          .uleb128 .L_407906-.L_4073e0
          .uleb128 .L_40790b-.L_407906
          .uleb128 .L_407912-.L_4073e0
          .zero 1
          .uleb128 .L_40790b-.L_4073e0
          .uleb128 .L_407910-.L_40790b
          .uleb128 .L_407910-.L_4073e0
          .byte 0x1
          .uleb128 .L_40791d-.L_4073e0
          .uleb128 .L_407922-.L_40791d
          .zero 2
.L_4420d3:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4420dc:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442104-.L_4420df
.L_4420df:
          .byte 0x1
          .uleb128 .L_4420fc-.L_4420e1
.L_4420e1:
          .uleb128 .L_407989-.L_407930
          .uleb128 .L_40798e-.L_407989
          .zero 2
          .uleb128 .L_4079e9-.L_407930
          .uleb128 .L_4079ee-.L_4079e9
          .uleb128 .L_407caf-.L_407930
          .byte 0x1
          .uleb128 .L_407cc4-.L_407930
          .uleb128 .L_407cc9-.L_407cc4
          .uleb128 .L_407cce-.L_407930
          .zero 1
          .uleb128 .L_407cc9-.L_407930
          .uleb128 .L_407cce-.L_407cc9
          .uleb128 .L_407caf-.L_407930
          .byte 0x1
          .uleb128 .L_407cd9-.L_407930
          .uleb128 .L_407cde-.L_407cd9
          .zero 2
.L_4420fc:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442104:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_44212c-.L_442107
.L_442107:
          .byte 0x1
          .uleb128 .L_442124-.L_442109
.L_442109:
          .uleb128 .L_407d80-.L_407d20
          .uleb128 .L_407d85-.L_407d80
          .zero 2
          .uleb128 .L_407fbc-.L_407d20
          .uleb128 .L_407fc1-.L_407fbc
          .uleb128 .L_408045-.L_407d20
          .byte 0x1
          .uleb128 .L_40805a-.L_407d20
          .uleb128 .L_40805f-.L_40805a
          .uleb128 .L_40806b-.L_407d20
          .zero 1
          .uleb128 .L_408066-.L_407d20
          .uleb128 .L_40806b-.L_408066
          .uleb128 .L_408045-.L_407d20
          .byte 0x1
          .uleb128 .L_408076-.L_407d20
          .uleb128 .L_40807b-.L_408076
          .zero 2
.L_442124:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44212c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442188-.L_442130
.L_442130:
          .uleb128 .L_4022c6-.L_402210
          .uleb128 .L_4022cb-.L_4022c6
          .zero 2
          .uleb128 .L_40238c-.L_402210
          .uleb128 .L_402391-.L_40238c
          .uleb128 .L_404173-.L_402210
          .zero 1
          .uleb128 .L_402560-.L_402210
          .uleb128 .L_402565-.L_402560
          .uleb128 .L_4041ea-.L_402210
          .zero 1
          .uleb128 .L_402d02-.L_402210
          .uleb128 .L_402d07-.L_402d02
          .zero 2
          .uleb128 .L_402d38-.L_402210
          .uleb128 .L_402d7d-.L_402d38
          .uleb128 .L_4041ec-.L_402210
          .zero 1
          .uleb128 .L_402da8-.L_402210
          .uleb128 .L_402dad-.L_402da8
          .uleb128 .L_4041ea-.L_402210
          .zero 1
          .uleb128 .L_402e3d-.L_402210
          .uleb128 .L_4039d4-.L_402e3d
          .zero 2
          .uleb128 .L_403a11-.L_402210
          .uleb128 .L_403a4c-.L_403a11
          .uleb128 .L_4041ea-.L_402210
          .zero 1
          .uleb128 .L_403b24-.L_402210
          .uleb128 .L_403bbc-.L_403b24
          .zero 2
          .uleb128 .L_403bf1-.L_402210
          .uleb128 .L_403bf6-.L_403bf1
          .uleb128 .L_4041ea-.L_402210
          .zero 1
          .uleb128 .L_403ce4-.L_402210
          .uleb128 .L_403ce9-.L_403ce4
          .zero 2
          .uleb128 .L_403d1a-.L_402210
          .uleb128 .L_403ecd-.L_403d1a
          .uleb128 .L_4041ea-.L_402210
          .zero 1
          .uleb128 .L_403f06-.L_402210
          .uleb128 .L_403fd5-.L_403f06
          .zero 2
          .uleb128 .L_404015-.L_402210
          .uleb128 .L_404059-.L_404015
          .uleb128 .L_4041ea-.L_402210
          .zero 1
          .uleb128 .L_40409d-.L_402210
          .uleb128 .L_40419d-.L_40409d
          .zero 2
.L_442188:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442294-.L_44218d
.L_44218d:
          .uleb128 .L_404274-.L_404200
          .uleb128 .L_404330-.L_404274
          .zero 2
          .uleb128 .L_4043ac-.L_404200
          .uleb128 .L_4043b1-.L_4043ac
          .uleb128 .L_406598-.L_404200
          .zero 1
          .uleb128 .L_4046b6-.L_404200
          .uleb128 .L_4047a2-.L_4046b6
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_4047fb-.L_404200
          .uleb128 .L_404800-.L_4047fb
          .uleb128 .L_40670d-.L_404200
          .zero 1
          .uleb128 .L_404b86-.L_404200
          .uleb128 .L_404b8b-.L_404b86
          .uleb128 .L_40650f-.L_404200
          .zero 1
          .uleb128 .L_404cf1-.L_404200
          .uleb128 .L_404cf6-.L_404cf1
          .uleb128 .L_4064ce-.L_404200
          .zero 1
          .uleb128 .L_404e99-.L_404200
          .uleb128 .L_404e9e-.L_404e99
          .uleb128 .L_4065bf-.L_404200
          .zero 1
          .uleb128 .L_405038-.L_404200
          .uleb128 .L_40503d-.L_405038
          .uleb128 .L_406527-.L_404200
          .zero 1
          .uleb128 .L_40527a-.L_404200
          .uleb128 .L_405397-.L_40527a
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_40547d-.L_404200
          .uleb128 .L_405482-.L_40547d
          .uleb128 .L_406725-.L_404200
          .zero 1
          .uleb128 .L_4054e3-.L_404200
          .uleb128 .L_4055d4-.L_4054e3
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_405654-.L_404200
          .uleb128 .L_405659-.L_405654
          .uleb128 .L_4067a1-.L_404200
          .zero 1
          .uleb128 .L_4056c4-.L_404200
          .uleb128 .L_40579a-.L_4056c4
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_405800-.L_404200
          .uleb128 .L_405805-.L_405800
          .uleb128 .L_4065a8-.L_404200
          .zero 1
          .uleb128 .L_405a3f-.L_404200
          .uleb128 .L_405a44-.L_405a3f
          .uleb128 .L_4064ce-.L_404200
          .zero 1
          .uleb128 .L_405ad4-.L_404200
          .uleb128 .L_405ad9-.L_405ad4
          .uleb128 .L_40677d-.L_404200
          .zero 1
          .uleb128 .L_405bb2-.L_404200
          .uleb128 .L_405c3f-.L_405bb2
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_405c7c-.L_404200
          .uleb128 .L_405c81-.L_405c7c
          .uleb128 .L_4064ce-.L_404200
          .zero 1
          .uleb128 .L_405cad-.L_404200
          .uleb128 .L_405cdf-.L_405cad
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_405d77-.L_404200
          .uleb128 .L_405d7c-.L_405d77
          .uleb128 .L_406725-.L_404200
          .zero 1
          .uleb128 .L_405ead-.L_404200
          .uleb128 .L_405eb2-.L_405ead
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_405ee3-.L_404200
          .uleb128 .L_405f0f-.L_405ee3
          .uleb128 .L_4064ce-.L_404200
          .zero 1
          .uleb128 .L_405f43-.L_404200
          .uleb128 .L_4060da-.L_405f43
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_4060fe-.L_404200
          .uleb128 .L_406103-.L_4060fe
          .uleb128 .L_4064ce-.L_404200
          .zero 1
          .uleb128 .L_406126-.L_404200
          .uleb128 .L_4061b0-.L_406126
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_4061e2-.L_404200
          .uleb128 .L_4061e7-.L_4061e2
          .uleb128 .L_4065a8-.L_404200
          .zero 1
          .uleb128 .L_406201-.L_404200
          .uleb128 .L_40621c-.L_406201
          .uleb128 .L_406544-.L_404200
          .zero 1
          .uleb128 .L_406294-.L_404200
          .uleb128 .L_406299-.L_406294
          .uleb128 .L_4065a8-.L_404200
          .zero 1
          .uleb128 .L_4062b7-.L_404200
          .uleb128 .L_4062bc-.L_4062b7
          .uleb128 .L_406725-.L_404200
          .zero 1
          .uleb128 .L_4062d4-.L_404200
          .uleb128 .L_40631b-.L_4062d4
          .uleb128 .L_406749-.L_404200
          .zero 1
          .uleb128 .L_406362-.L_404200
          .uleb128 .L_406367-.L_406362
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_4063b3-.L_404200
          .uleb128 .L_4063b8-.L_4063b3
          .uleb128 .L_406527-.L_404200
          .zero 1
          .uleb128 .L_4063e9-.L_404200
          .uleb128 .L_4063ee-.L_4063e9
          .uleb128 .L_4064ce-.L_404200
          .zero 1
          .uleb128 .L_406400-.L_404200
          .uleb128 .L_406405-.L_406400
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_406499-.L_404200
          .uleb128 .L_40649e-.L_406499
          .uleb128 .L_406527-.L_404200
          .zero 1
          .uleb128 .L_40650a-.L_404200
          .uleb128 .L_40650f-.L_40650a
          .zero 2
          .uleb128 .L_40653f-.L_404200
          .uleb128 .L_406544-.L_40653f
          .uleb128 .L_4065b7-.L_404200
          .zero 1
          .uleb128 .L_406696-.L_404200
          .uleb128 .L_4066fb-.L_406696
          .uleb128 .L_406527-.L_404200
          .zero 1
          .uleb128 .L_406744-.L_404200
          .uleb128 .L_406749-.L_406744
          .uleb128 .L_406544-.L_404200
          .zero 1
          .uleb128 .L_406773-.L_404200
          .uleb128 .L_406778-.L_406773
          .uleb128 .L_406749-.L_404200
          .zero 1
          .uleb128 .L_406778-.L_404200
          .uleb128 .L_40677d-.L_406778
          .uleb128 .L_406725-.L_404200
          .zero 1
          .uleb128 .L_40679c-.L_404200
          .uleb128 .L_4067a1-.L_40679c
          .uleb128 .L_40677d-.L_404200
          .zero 1
          .uleb128 .L_4067ad-.L_404200
          .uleb128 .L_4067b2-.L_4067ad
          .uleb128 .L_4064ce-.L_404200
          .zero 1
.L_442294:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4422cb-.L_442298
.L_442298:
          .uleb128 .L_409df2-.L_409d90
          .uleb128 .L_409df7-.L_409df2
          .zero 2
          .uleb128 .L_409ed8-.L_409d90
          .uleb128 .L_409edd-.L_409ed8
          .uleb128 .L_40a1f4-.L_409d90
          .zero 1
          .uleb128 .L_409f19-.L_409d90
          .uleb128 .L_409fe8-.L_409f19
          .uleb128 .L_40a20c-.L_409d90
          .zero 1
          .uleb128 .L_40a053-.L_409d90
          .uleb128 .L_40a058-.L_40a053
          .uleb128 .L_40a237-.L_409d90
          .zero 1
          .uleb128 .L_40a1cb-.L_409d90
          .uleb128 .L_40a1d0-.L_40a1cb
          .uleb128 .L_40a20c-.L_409d90
          .zero 1
          .uleb128 .L_40a1ea-.L_409d90
          .uleb128 .L_40a1ef-.L_40a1ea
          .zero 2
          .uleb128 .L_40a1ef-.L_409d90
          .uleb128 .L_40a1f4-.L_40a1ef
          .uleb128 .L_40a1f4-.L_409d90
          .zero 1
          .uleb128 .L_40a207-.L_409d90
          .uleb128 .L_40a20c-.L_40a207
          .zero 2
          .uleb128 .L_40a232-.L_409d90
          .uleb128 .L_40a237-.L_40a232
          .uleb128 .L_40a20c-.L_409d90
          .zero 1
.L_4422cb:
          .zero 1
.L_4422cc:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_4423c8-.L_4422d0
.L_4422d0:
          .byte 0x1
          .uleb128 .L_4423c0-.L_4422d3
.L_4422d3:
          .uleb128 .L_413422-.L_4133b0
          .uleb128 .L_413427-.L_413422
          .zero 2
          .uleb128 .L_4134c8-.L_4133b0
          .uleb128 .L_4134cd-.L_4134c8
          .uleb128 .L_41419d-.L_4133b0
          .byte 0x1
          .uleb128 .L_41354a-.L_4133b0
          .uleb128 .L_41354f-.L_41354a
          .uleb128 .L_414178-.L_4133b0
          .zero 1
          .uleb128 .L_4135f8-.L_4133b0
          .uleb128 .L_4135fd-.L_4135f8
          .uleb128 .L_414144-.L_4133b0
          .byte 0x1
          .uleb128 .L_413688-.L_4133b0
          .uleb128 .L_41368d-.L_413688
          .uleb128 .L_414277-.L_4133b0
          .zero 1
          .uleb128 .L_413707-.L_4133b0
          .uleb128 .L_41370c-.L_413707
          .uleb128 .L_413ff0-.L_4133b0
          .byte 0x1
          .uleb128 .L_4137ce-.L_4133b0
          .uleb128 .L_4137d3-.L_4137ce
          .uleb128 .L_41424a-.L_4133b0
          .zero 1
          .uleb128 .L_41384f-.L_4133b0
          .uleb128 .L_413854-.L_41384f
          .uleb128 .L_4140f5-.L_4133b0
          .byte 0x1
          .uleb128 .L_4138d8-.L_4133b0
          .uleb128 .L_4138dd-.L_4138d8
          .uleb128 .L_414095-.L_4133b0
          .byte 0x1
          .uleb128 .L_413998-.L_4133b0
          .uleb128 .L_41399d-.L_413998
          .uleb128 .L_4140fc-.L_4133b0
          .zero 1
          .uleb128 .L_413a54-.L_4133b0
          .uleb128 .L_413a59-.L_413a54
          .uleb128 .L_414025-.L_4133b0
          .byte 0x1
          .uleb128 .L_413b12-.L_4133b0
          .uleb128 .L_413b17-.L_413b12
          .uleb128 .L_4141d1-.L_4133b0
          .zero 1
          .uleb128 .L_413bd1-.L_4133b0
          .uleb128 .L_413bd6-.L_413bd1
          .uleb128 .L_41405d-.L_4133b0
          .byte 0x1
          .uleb128 .L_413d04-.L_4133b0
          .uleb128 .L_413d09-.L_413d04
          .uleb128 .L_414205-.L_4133b0
          .zero 1
          .uleb128 .L_413dc0-.L_4133b0
          .uleb128 .L_413dc5-.L_413dc0
          .uleb128 .L_414294-.L_4133b0
          .byte 0x1
          .uleb128 .L_413ed3-.L_4133b0
          .uleb128 .L_413ed8-.L_413ed3
          .uleb128 .L_41439c-.L_4133b0
          .zero 1
          .uleb128 .L_413eee-.L_4133b0
          .uleb128 .L_413ef3-.L_413eee
          .uleb128 .L_4143a4-.L_4133b0
          .zero 1
          .uleb128 .L_413feb-.L_4133b0
          .uleb128 .L_413ff0-.L_413feb
          .uleb128 .L_413ff0-.L_4133b0
          .byte 0x1
          .uleb128 .L_414020-.L_4133b0
          .uleb128 .L_414025-.L_414020
          .uleb128 .L_414025-.L_4133b0
          .byte 0x1
          .uleb128 .L_414058-.L_4133b0
          .uleb128 .L_41405d-.L_414058
          .uleb128 .L_41405d-.L_4133b0
          .byte 0x1
          .uleb128 .L_414090-.L_4133b0
          .uleb128 .L_414095-.L_414090
          .uleb128 .L_414095-.L_4133b0
          .byte 0x1
          .uleb128 .L_4140f0-.L_4133b0
          .uleb128 .L_4140f5-.L_4140f0
          .uleb128 .L_4140f5-.L_4133b0
          .byte 0x1
          .uleb128 .L_4140f7-.L_4133b0
          .uleb128 .L_4140fc-.L_4140f7
          .uleb128 .L_4140fc-.L_4133b0
          .zero 1
          .uleb128 .L_41413f-.L_4133b0
          .uleb128 .L_414144-.L_41413f
          .uleb128 .L_414144-.L_4133b0
          .byte 0x1
          .uleb128 .L_414173-.L_4133b0
          .uleb128 .L_414178-.L_414173
          .uleb128 .L_414178-.L_4133b0
          .zero 1
          .uleb128 .L_414187-.L_4133b0
          .uleb128 .L_414191-.L_414187
          .zero 2
          .uleb128 .L_414198-.L_4133b0
          .uleb128 .L_41419d-.L_414198
          .uleb128 .L_41419d-.L_4133b0
          .byte 0x1
          .uleb128 .L_4141cc-.L_4133b0
          .uleb128 .L_4141d1-.L_4141cc
          .uleb128 .L_4141d1-.L_4133b0
          .zero 1
          .uleb128 .L_414200-.L_4133b0
          .uleb128 .L_414205-.L_414200
          .uleb128 .L_414205-.L_4133b0
          .zero 1
          .uleb128 .L_414245-.L_4133b0
          .uleb128 .L_41424a-.L_414245
          .uleb128 .L_41424a-.L_4133b0
          .zero 1
          .uleb128 .L_414272-.L_4133b0
          .uleb128 .L_414277-.L_414272
          .uleb128 .L_414277-.L_4133b0
          .zero 1
          .uleb128 .L_41428f-.L_4133b0
          .uleb128 .L_414294-.L_41428f
          .uleb128 .L_414294-.L_4133b0
          .byte 0x1
          .uleb128 .L_4142bf-.L_4133b0
          .uleb128 .L_4142c4-.L_4142bf
          .uleb128 .L_4142c9-.L_4133b0
          .zero 1
          .uleb128 .L_4142c4-.L_4133b0
          .uleb128 .L_4142c9-.L_4142c4
          .uleb128 .L_4142eb-.L_4133b0
          .zero 1
          .uleb128 .L_41436c-.L_4133b0
          .uleb128 .L_414371-.L_41436c
          .uleb128 .L_41437d-.L_4133b0
          .zero 1
          .uleb128 .L_414378-.L_4133b0
          .uleb128 .L_41437d-.L_414378
          .uleb128 .L_4143a4-.L_4133b0
          .zero 1
          .uleb128 .L_4143b8-.L_4133b0
          .uleb128 .L_4143bd-.L_4143b8
          .uleb128 .L_4143c2-.L_4133b0
          .zero 1
          .uleb128 .L_4143bd-.L_4133b0
          .uleb128 .L_4143c2-.L_4143bd
          .uleb128 .L_4143dc-.L_4133b0
          .zero 1
          .uleb128 .L_4143f9-.L_4133b0
          .uleb128 .L_4143fe-.L_4143f9
          .uleb128 .L_414403-.L_4133b0
          .zero 1
          .uleb128 .L_4143fe-.L_4133b0
          .uleb128 .L_414403-.L_4143fe
          .uleb128 .L_414420-.L_4133b0
          .zero 1
.L_4423c0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4423c8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4423f4-.L_4423cc
.L_4423cc:
          .uleb128 .L_40a4f1-.L_40a4b0
          .uleb128 .L_40a4f4-.L_40a4f1
          .zero 2
          .uleb128 .L_40a59c-.L_40a4b0
          .uleb128 .L_40a5a1-.L_40a59c
          .uleb128 .L_40a9d4-.L_40a4b0
          .zero 1
          .uleb128 .L_40a664-.L_40a4b0
          .uleb128 .L_40a669-.L_40a664
          .uleb128 .L_40aa0e-.L_40a4b0
          .zero 1
          .uleb128 .L_40a6b5-.L_40a4b0
          .uleb128 .L_40a766-.L_40a6b5
          .zero 2
          .uleb128 .L_40a7c5-.L_40a4b0
          .uleb128 .L_40a7ca-.L_40a7c5
          .uleb128 .L_40a9f4-.L_40a4b0
          .zero 1
          .uleb128 .L_40a8a5-.L_40a4b0
          .uleb128 .L_40a8aa-.L_40a8a5
          .uleb128 .L_40a9f2-.L_40a4b0
          .zero 1
          .uleb128 .L_40a8da-.L_40a4b0
          .uleb128 .L_40aa0e-.L_40a8da
          .zero 2
.L_4423f4:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442520-.L_4423f9
.L_4423f9:
          .uleb128 .L_40af6f-.L_40ae30
          .uleb128 .L_40af74-.L_40af6f
          .zero 2
          .uleb128 .L_40afcc-.L_40ae30
          .uleb128 .L_40afd1-.L_40afcc
          .uleb128 .L_40eda6-.L_40ae30
          .zero 1
          .uleb128 .L_40aff3-.L_40ae30
          .uleb128 .L_40aff6-.L_40aff3
          .uleb128 .L_40c552-.L_40ae30
          .zero 1
          .uleb128 .L_40b165-.L_40ae30
          .uleb128 .L_40b16a-.L_40b165
          .uleb128 .L_40ee2e-.L_40ae30
          .zero 1
          .uleb128 .L_40b415-.L_40ae30
          .uleb128 .L_40ba27-.L_40b415
          .uleb128 .L_40c4d7-.L_40ae30
          .zero 1
          .uleb128 .L_40bb82-.L_40ae30
          .uleb128 .L_40bc14-.L_40bb82
          .uleb128 .L_40c552-.L_40ae30
          .zero 1
          .uleb128 .L_40bd01-.L_40ae30
          .uleb128 .L_40bd8f-.L_40bd01
          .uleb128 .L_40ee2e-.L_40ae30
          .zero 1
          .uleb128 .L_40be27-.L_40ae30
          .uleb128 .L_40be2c-.L_40be27
          .uleb128 .L_40ed92-.L_40ae30
          .zero 1
          .uleb128 .L_40be32-.L_40ae30
          .uleb128 .L_40be9b-.L_40be32
          .uleb128 .L_40ed8a-.L_40ae30
          .zero 1
          .uleb128 .L_40bf02-.L_40ae30
          .uleb128 .L_40bf4b-.L_40bf02
          .uleb128 .L_40ed59-.L_40ae30
          .zero 1
          .uleb128 .L_40bf96-.L_40ae30
          .uleb128 .L_40bf9b-.L_40bf96
          .uleb128 .L_40c56b-.L_40ae30
          .zero 1
          .uleb128 .L_40bfca-.L_40ae30
          .uleb128 .L_40bfcf-.L_40bfca
          .uleb128 .L_40ed8a-.L_40ae30
          .zero 1
          .uleb128 .L_40c1c6-.L_40ae30
          .uleb128 .L_40c4cb-.L_40c1c6
          .uleb128 .L_40c4d7-.L_40ae30
          .zero 1
          .uleb128 .L_40c4d2-.L_40ae30
          .uleb128 .L_40c4d7-.L_40c4d2
          .uleb128 .L_40c552-.L_40ae30
          .zero 1
          .uleb128 .L_40c53a-.L_40ae30
          .uleb128 .L_40c53f-.L_40c53a
          .zero 2
          .uleb128 .L_40c5b8-.L_40ae30
          .uleb128 .L_40c5bd-.L_40c5b8
          .uleb128 .L_40ed59-.L_40ae30
          .zero 1
          .uleb128 .L_40c5d0-.L_40ae30
          .uleb128 .L_40c5d5-.L_40c5d0
          .uleb128 .L_40c63a-.L_40ae30
          .zero 1
          .uleb128 .L_40c603-.L_40ae30
          .uleb128 .L_40c608-.L_40c603
          .uleb128 .L_40c618-.L_40ae30
          .zero 1
          .uleb128 .L_40c88d-.L_40ae30
          .uleb128 .L_40c964-.L_40c88d
          .uleb128 .L_40ecee-.L_40ae30
          .zero 1
          .uleb128 .L_40c97b-.L_40ae30
          .uleb128 .L_40c980-.L_40c97b
          .uleb128 .L_40ed36-.L_40ae30
          .zero 1
          .uleb128 .L_40cb14-.L_40ae30
          .uleb128 .L_40cbb1-.L_40cb14
          .uleb128 .L_40ecc1-.L_40ae30
          .zero 1
          .uleb128 .L_40cc41-.L_40ae30
          .uleb128 .L_40cdd4-.L_40cc41
          .uleb128 .L_40e4ee-.L_40ae30
          .zero 1
          .uleb128 .L_40d192-.L_40ae30
          .uleb128 .L_40d723-.L_40d192
          .uleb128 .L_40ea40-.L_40ae30
          .zero 1
          .uleb128 .L_40dab7-.L_40ae30
          .uleb128 .L_40dabc-.L_40dab7
          .uleb128 .L_40e93b-.L_40ae30
          .zero 1
          .uleb128 .L_40dac2-.L_40ae30
          .uleb128 .L_40daf9-.L_40dac2
          .uleb128 .L_40e720-.L_40ae30
          .zero 1
          .uleb128 .L_40de35-.L_40ae30
          .uleb128 .L_40de3a-.L_40de35
          .uleb128 .L_40e93b-.L_40ae30
          .zero 1
          .uleb128 .L_40de75-.L_40ae30
          .uleb128 .L_40de7a-.L_40de75
          .uleb128 .L_40e87e-.L_40ae30
          .zero 1
          .uleb128 .L_40e156-.L_40ae30
          .uleb128 .L_40e15b-.L_40e156
          .uleb128 .L_40e883-.L_40ae30
          .zero 1
          .uleb128 .L_40e181-.L_40ae30
          .uleb128 .L_40e196-.L_40e181
          .uleb128 .L_40e93b-.L_40ae30
          .zero 1
          .uleb128 .L_40e285-.L_40ae30
          .uleb128 .L_40e316-.L_40e285
          .uleb128 .L_40e4ee-.L_40ae30
          .zero 1
          .uleb128 .L_40e397-.L_40ae30
          .uleb128 .L_40e39c-.L_40e397
          .uleb128 .L_40e44f-.L_40ae30
          .zero 1
          .uleb128 .L_40e42e-.L_40ae30
          .uleb128 .L_40e430-.L_40e42e
          .uleb128 .L_40e4ee-.L_40ae30
          .zero 1
          .uleb128 .L_40e44a-.L_40ae30
          .uleb128 .L_40e44f-.L_40e44a
          .uleb128 .L_40ecc1-.L_40ae30
          .zero 1
          .uleb128 .L_40e4da-.L_40ae30
          .uleb128 .L_40e4df-.L_40e4da
          .uleb128 .L_40e4ee-.L_40ae30
          .zero 1
          .uleb128 .L_40e568-.L_40ae30
          .uleb128 .L_40e56d-.L_40e568
          .uleb128 .L_40ea40-.L_40ae30
          .zero 1
          .uleb128 .L_40e773-.L_40ae30
          .uleb128 .L_40e778-.L_40e773
          .uleb128 .L_40e93b-.L_40ae30
          .zero 1
          .uleb128 .L_40e80c-.L_40ae30
          .uleb128 .L_40e811-.L_40e80c
          .uleb128 .L_40e83a-.L_40ae30
          .zero 1
          .uleb128 .L_40e965-.L_40ae30
          .uleb128 .L_40e96a-.L_40e965
          .uleb128 .L_40e9af-.L_40ae30
          .zero 1
          .uleb128 .L_40e99b-.L_40ae30
          .uleb128 .L_40e9a0-.L_40e99b
          .uleb128 .L_40e9d2-.L_40ae30
          .zero 1
          .uleb128 .L_40ea24-.L_40ae30
          .uleb128 .L_40ea29-.L_40ea24
          .uleb128 .L_40ea40-.L_40ae30
          .zero 1
          .uleb128 .L_40ea56-.L_40ae30
          .uleb128 .L_40ecce-.L_40ea56
          .uleb128 .L_40ecc1-.L_40ae30
          .zero 1
          .uleb128 .L_40ecce-.L_40ae30
          .uleb128 .L_40ecd3-.L_40ecce
          .uleb128 .L_40ecee-.L_40ae30
          .zero 1
          .uleb128 .L_40ed7b-.L_40ae30
          .uleb128 .L_40ed80-.L_40ed7b
          .uleb128 .L_40ed8a-.L_40ae30
          .zero 1
          .uleb128 .L_40ed9a-.L_40ae30
          .uleb128 .L_40ed9f-.L_40ed9a
          .uleb128 .L_40ee2e-.L_40ae30
          .zero 1
          .uleb128 .L_40edb1-.L_40ae30
          .uleb128 .L_40edb6-.L_40edb1
          .uleb128 .L_40ee21-.L_40ae30
          .zero 1
          .uleb128 .L_40eddd-.L_40ae30
          .uleb128 .L_40ede2-.L_40eddd
          .uleb128 .L_40ee0d-.L_40ae30
          .zero 1
          .uleb128 .L_40edf8-.L_40ae30
          .uleb128 .L_40edfd-.L_40edf8
          .zero 2
          .uleb128 .L_40ee1c-.L_40ae30
          .uleb128 .L_40ee21-.L_40ee1c
          .uleb128 .L_40ee0d-.L_40ae30
          .zero 1
.L_442520:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44258e-.L_442524
.L_442524:
          .uleb128 .L_40eed3-.L_40ee80
          .uleb128 .L_40eeeb-.L_40eed3
          .zero 2
          .uleb128 .L_40ef26-.L_40ee80
          .uleb128 .L_40ef2b-.L_40ef26
          .uleb128 .L_4100ee-.L_40ee80
          .zero 1
          .uleb128 .L_40ef31-.L_40ee80
          .uleb128 .L_40ef64-.L_40ef31
          .uleb128 .L_4100dc-.L_40ee80
          .zero 1
          .uleb128 .L_40f22e-.L_40ee80
          .uleb128 .L_40f233-.L_40f22e
          .uleb128 .L_4100ee-.L_40ee80
          .zero 1
          .uleb128 .L_40f269-.L_40ee80
          .uleb128 .L_40f26e-.L_40f269
          .uleb128 .L_41007d-.L_40ee80
          .zero 1
          .uleb128 .L_40f396-.L_40ee80
          .uleb128 .L_40f39b-.L_40f396
          .uleb128 .L_4100bc-.L_40ee80
          .zero 1
          .uleb128 .L_40f4b6-.L_40ee80
          .uleb128 .L_40f4bb-.L_40f4b6
          .uleb128 .L_4100f6-.L_40ee80
          .zero 1
          .uleb128 .L_40f5e9-.L_40ee80
          .uleb128 .L_40f5ee-.L_40f5e9
          .uleb128 .L_4100f8-.L_40ee80
          .zero 1
          .uleb128 .L_40f6a6-.L_40ee80
          .uleb128 .L_40f6ab-.L_40f6a6
          .uleb128 .L_4100fa-.L_40ee80
          .zero 1
          .uleb128 .L_40f77c-.L_40ee80
          .uleb128 .L_40f781-.L_40f77c
          .uleb128 .L_4100fc-.L_40ee80
          .zero 1
          .uleb128 .L_40f852-.L_40ee80
          .uleb128 .L_40f857-.L_40f852
          .uleb128 .L_4100ee-.L_40ee80
          .zero 1
          .uleb128 .L_40f88b-.L_40ee80
          .uleb128 .L_40f890-.L_40f88b
          .uleb128 .L_410101-.L_40ee80
          .zero 1
          .uleb128 .L_40f9cd-.L_40ee80
          .uleb128 .L_40f9d2-.L_40f9cd
          .uleb128 .L_410106-.L_40ee80
          .zero 1
          .uleb128 .L_40faef-.L_40ee80
          .uleb128 .L_40faf4-.L_40faef
          .uleb128 .L_410143-.L_40ee80
          .zero 1
          .uleb128 .L_40fb31-.L_40ee80
          .uleb128 .L_40fb36-.L_40fb31
          .uleb128 .L_4100ee-.L_40ee80
          .zero 1
          .uleb128 .L_40fc68-.L_40ee80
          .uleb128 .L_40fc6d-.L_40fc68
          .uleb128 .L_410037-.L_40ee80
          .zero 1
          .uleb128 .L_40fc9e-.L_40ee80
          .uleb128 .L_410032-.L_40fc9e
          .uleb128 .L_4100ee-.L_40ee80
          .zero 1
          .uleb128 .L_410073-.L_40ee80
          .uleb128 .L_410078-.L_410073
          .zero 2
.L_44258e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442625-.L_442593
.L_442593:
          .uleb128 .L_4101d6-.L_410150
          .uleb128 .L_4102af-.L_4101d6
          .zero 2
          .uleb128 .L_410320-.L_410150
          .uleb128 .L_410325-.L_410320
          .uleb128 .L_41211b-.L_410150
          .zero 1
          .uleb128 .L_41040e-.L_410150
          .uleb128 .L_410413-.L_41040e
          .uleb128 .L_412123-.L_410150
          .zero 1
          .uleb128 .L_41043c-.L_410150
          .uleb128 .L_410441-.L_41043c
          .uleb128 .L_41211b-.L_410150
          .zero 1
          .uleb128 .L_410454-.L_410150
          .uleb128 .L_41047f-.L_410454
          .uleb128 .L_41201c-.L_410150
          .zero 1
          .uleb128 .L_410485-.L_410150
          .uleb128 .L_410497-.L_410485
          .uleb128 .L_411fc8-.L_410150
          .zero 1
          .uleb128 .L_410897-.L_410150
          .uleb128 .L_4108fb-.L_410897
          .uleb128 .L_41211b-.L_410150
          .zero 1
          .uleb128 .L_410903-.L_410150
          .uleb128 .L_410923-.L_410903
          .uleb128 .L_411fc0-.L_410150
          .zero 1
          .uleb128 .L_410929-.L_410150
          .uleb128 .L_41095a-.L_410929
          .uleb128 .L_411fbe-.L_410150
          .zero 1
          .uleb128 .L_4109f8-.L_410150
          .uleb128 .L_4109fd-.L_4109f8
          .uleb128 .L_411f91-.L_410150
          .zero 1
          .uleb128 .L_410c22-.L_410150
          .uleb128 .L_410c27-.L_410c22
          .uleb128 .L_411f5b-.L_410150
          .zero 1
          .uleb128 .L_410e2a-.L_410150
          .uleb128 .L_410e2f-.L_410e2a
          .uleb128 .L_411ee3-.L_410150
          .zero 1
          .uleb128 .L_410f50-.L_410150
          .uleb128 .L_410f55-.L_410f50
          .uleb128 .L_411f87-.L_410150
          .zero 1
          .uleb128 .L_41100e-.L_410150
          .uleb128 .L_411013-.L_41100e
          .uleb128 .L_411f8c-.L_410150
          .zero 1
          .uleb128 .L_4110dd-.L_410150
          .uleb128 .L_4110e2-.L_4110dd
          .uleb128 .L_411f99-.L_410150
          .zero 1
          .uleb128 .L_4112c9-.L_410150
          .uleb128 .L_41134e-.L_4112c9
          .uleb128 .L_411fbe-.L_410150
          .zero 1
          .uleb128 .L_41186a-.L_410150
          .uleb128 .L_411b95-.L_41186a
          .uleb128 .L_411f5b-.L_410150
          .zero 1
          .uleb128 .L_411d32-.L_410150
          .uleb128 .L_411d37-.L_411d32
          .uleb128 .L_41204d-.L_410150
          .zero 1
          .uleb128 .L_411d56-.L_410150
          .uleb128 .L_411d91-.L_411d56
          .uleb128 .L_41211b-.L_410150
          .zero 1
          .uleb128 .L_411e25-.L_410150
          .uleb128 .L_411e72-.L_411e25
          .uleb128 .L_411f5b-.L_410150
          .zero 1
          .uleb128 .L_411ed9-.L_410150
          .uleb128 .L_411ede-.L_411ed9
          .uleb128 .L_411fbe-.L_410150
          .zero 1
          .uleb128 .L_411f44-.L_410150
          .uleb128 .L_411f49-.L_411f44
          .zero 2
          .uleb128 .L_411f7d-.L_410150
          .uleb128 .L_411f82-.L_411f7d
          .uleb128 .L_411fbe-.L_410150
          .zero 1
          .uleb128 .L_412021-.L_410150
          .uleb128 .L_4120eb-.L_412021
          .uleb128 .L_41211b-.L_410150
          .zero 1
.L_442625:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44264c-.L_442629
.L_442629:
          .uleb128 .L_4123af-.L_4121e0
          .uleb128 .L_4123b4-.L_4123af
          .uleb128 .L_4128fe-.L_4121e0
          .zero 1
          .uleb128 .L_4124ba-.L_4121e0
          .uleb128 .L_4124cf-.L_4124ba
          .uleb128 .L_412903-.L_4121e0
          .zero 1
          .uleb128 .L_41287d-.L_4121e0
          .uleb128 .L_412882-.L_41287d
          .uleb128 .L_4128fe-.L_4121e0
          .zero 1
          .uleb128 .L_412895-.L_4121e0
          .uleb128 .L_41289a-.L_412895
          .uleb128 .L_4128f9-.L_4121e0
          .zero 1
          .uleb128 .L_4128bf-.L_4121e0
          .uleb128 .L_4128c4-.L_4128bf
          .uleb128 .L_4128ce-.L_4121e0
          .zero 1
          .uleb128 .L_4128f4-.L_4121e0
          .uleb128 .L_4128f9-.L_4128f4
          .zero 2
.L_44264c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442674-.L_442650
.L_442650:
          .uleb128 .L_412ae9-.L_412920
          .uleb128 .L_412e58-.L_412ae9
          .uleb128 .L_4130d7-.L_412920
          .zero 1
          .uleb128 .L_412f65-.L_412920
          .uleb128 .L_412f79-.L_412f65
          .uleb128 .L_4130dc-.L_412920
          .zero 1
          .uleb128 .L_413035-.L_412920
          .uleb128 .L_41303a-.L_413035
          .uleb128 .L_4130d2-.L_412920
          .zero 1
          .uleb128 .L_41305c-.L_412920
          .uleb128 .L_413061-.L_41305c
          .uleb128 .L_4130b5-.L_412920
          .zero 1
          .uleb128 .L_413085-.L_412920
          .uleb128 .L_41308a-.L_413085
          .uleb128 .L_413093-.L_412920
          .zero 1
          .uleb128 .L_4130b0-.L_412920
          .uleb128 .L_4130b5-.L_4130b0
          .zero 2
.L_442674:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_4426c0-.L_442677
.L_442677:
          .byte 0x1
          .uleb128 .L_4426b8-.L_442679
.L_442679:
          .uleb128 .L_4163a1-.L_416340
          .uleb128 .L_4163a6-.L_4163a1
          .zero 2
          .uleb128 .L_4163d6-.L_416340
          .uleb128 .L_4163db-.L_4163d6
          .uleb128 .L_416870-.L_416340
          .zero 1
          .uleb128 .L_416447-.L_416340
          .uleb128 .L_41644c-.L_416447
          .uleb128 .L_4168f9-.L_416340
          .byte 0x1
          .uleb128 .L_4164ce-.L_416340
          .uleb128 .L_41653f-.L_4164ce
          .uleb128 .L_41688d-.L_416340
          .zero 1
          .uleb128 .L_416673-.L_416340
          .uleb128 .L_416738-.L_416673
          .uleb128 .L_41693e-.L_416340
          .zero 1
          .uleb128 .L_41677f-.L_416340
          .uleb128 .L_416784-.L_41677f
          .uleb128 .L_4168f9-.L_416340
          .byte 0x1
          .uleb128 .L_41680c-.L_416340
          .uleb128 .L_416888-.L_41680c
          .zero 2
          .uleb128 .L_416888-.L_416340
          .uleb128 .L_41688d-.L_416888
          .uleb128 .L_41688d-.L_416340
          .zero 1
          .uleb128 .L_4168f4-.L_416340
          .uleb128 .L_4168f9-.L_4168f4
          .zero 2
          .uleb128 .L_41691a-.L_416340
          .uleb128 .L_41691f-.L_41691a
          .uleb128 .L_41695b-.L_416340
          .zero 1
          .uleb128 .L_416939-.L_416340
          .uleb128 .L_41693e-.L_416939
          .uleb128 .L_41697f-.L_416340
          .byte 0x1
.L_4426b8:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4426c0:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_44270c-.L_4426c3
.L_4426c3:
          .byte 0x1
          .uleb128 .L_442703-.L_4426c5
.L_4426c5:
          .uleb128 .L_4169e9-.L_416990
          .uleb128 .L_4169ee-.L_4169e9
          .zero 2
          .uleb128 .L_416a18-.L_416990
          .uleb128 .L_416a1d-.L_416a18
          .uleb128 .L_416eae-.L_416990
          .zero 1
          .uleb128 .L_416a9f-.L_416990
          .uleb128 .L_416aa4-.L_416a9f
          .uleb128 .L_416e44-.L_416990
          .byte 0x1
          .uleb128 .L_416ae9-.L_416990
          .uleb128 .L_416b20-.L_416ae9
          .uleb128 .L_416e31-.L_416990
          .zero 1
          .uleb128 .L_416be3-.L_416990
          .uleb128 .L_416be8-.L_416be3
          .uleb128 .L_416e70-.L_416990
          .zero 1
          .uleb128 .L_416cb7-.L_416990
          .uleb128 .L_416cbc-.L_416cb7
          .uleb128 .L_416e44-.L_416990
          .byte 0x1
          .uleb128 .L_416cea-.L_416990
          .uleb128 .L_416cef-.L_416cea
          .uleb128 .L_416e31-.L_416990
          .zero 1
          .uleb128 .L_416daa-.L_416990
          .uleb128 .L_416e10-.L_416daa
          .zero 2
          .uleb128 .L_416e2c-.L_416990
          .uleb128 .L_416e31-.L_416e2c
          .uleb128 .L_416eb3-.L_416990
          .byte 0x1
          .uleb128 .L_416e3f-.L_416990
          .uleb128 .L_416e44-.L_416e3f
          .zero 2
          .uleb128 .L_416e6b-.L_416990
          .uleb128 .L_416e70-.L_416e6b
          .uleb128 .L_416e88-.L_416990
          .zero 1
.L_442703:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44270c:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_44277c-.L_44270f
.L_44270f:
          .byte 0x1
          .uleb128 .L_442775-.L_442711
.L_442711:
          .uleb128 .L_416f2f-.L_416ec0
          .uleb128 .L_416f34-.L_416f2f
          .zero 2
          .uleb128 .L_416f82-.L_416ec0
          .uleb128 .L_416f87-.L_416f82
          .uleb128 .L_417bf3-.L_416ec0
          .zero 1
          .uleb128 .L_416ff1-.L_416ec0
          .uleb128 .L_416ff6-.L_416ff1
          .uleb128 .L_417c23-.L_416ec0
          .byte 0x1
          .uleb128 .L_417062-.L_416ec0
          .uleb128 .L_4170d7-.L_417062
          .uleb128 .L_417c0b-.L_416ec0
          .zero 1
          .uleb128 .L_41716c-.L_416ec0
          .uleb128 .L_417171-.L_41716c
          .uleb128 .L_417c55-.L_416ec0
          .byte 0x1
          .uleb128 .L_417225-.L_416ec0
          .uleb128 .L_41722a-.L_417225
          .uleb128 .L_417c8c-.L_416ec0
          .zero 1
          .uleb128 .L_4172cc-.L_416ec0
          .uleb128 .L_4172d1-.L_4172cc
          .uleb128 .L_417cdc-.L_416ec0
          .byte 0x1
          .uleb128 .L_41734e-.L_416ec0
          .uleb128 .L_417912-.L_41734e
          .uleb128 .L_417cac-.L_416ec0
          .zero 1
          .uleb128 .L_417b89-.L_416ec0
          .uleb128 .L_417b8e-.L_417b89
          .uleb128 .L_417c23-.L_416ec0
          .byte 0x1
          .uleb128 .L_417c01-.L_416ec0
          .uleb128 .L_417c23-.L_417c01
          .zero 2
          .uleb128 .L_417c50-.L_416ec0
          .uleb128 .L_417c55-.L_417c50
          .uleb128 .L_417cb9-.L_416ec0
          .zero 1
          .uleb128 .L_417c82-.L_416ec0
          .uleb128 .L_417c87-.L_417c82
          .uleb128 .L_417d3b-.L_416ec0
          .zero 1
          .uleb128 .L_417c87-.L_416ec0
          .uleb128 .L_417c8c-.L_417c87
          .uleb128 .L_417c55-.L_416ec0
          .byte 0x1
          .uleb128 .L_417ca7-.L_416ec0
          .uleb128 .L_417cac-.L_417ca7
          .uleb128 .L_417c8c-.L_416ec0
          .zero 1
          .uleb128 .L_417d09-.L_416ec0
          .uleb128 .L_417d0e-.L_417d09
          .uleb128 .L_417d13-.L_416ec0
          .zero 1
          .uleb128 .L_417d0e-.L_416ec0
          .uleb128 .L_417d13-.L_417d0e
          .uleb128 .L_417cdc-.L_416ec0
          .byte 0x1
          .uleb128 .L_417d36-.L_416ec0
          .uleb128 .L_417d3b-.L_417d36
          .uleb128 .L_417c0b-.L_416ec0
          .zero 1
.L_442775:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44277c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44278f-.L_442780
.L_442780:
          .uleb128 .L_417d90-.L_417d60
          .uleb128 .L_417d95-.L_417d90
          .zero 2
          .uleb128 .L_417e28-.L_417d60
          .uleb128 .L_417e2d-.L_417e28
          .uleb128 .L_417eaf-.L_417d60
          .zero 1
          .uleb128 .L_417ebd-.L_417d60
          .uleb128 .L_417ec2-.L_417ebd
          .zero 2
.L_44278f:
          .zero 1
.L_442790:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_4427e8-.L_442793
.L_442793:
          .byte 0x1
          .uleb128 .L_4427df-.L_442795
.L_442795:
          .uleb128 .L_418e60-.L_418db0
          .uleb128 .L_418e65-.L_418e60
          .zero 2
          .uleb128 .L_418f2f-.L_418db0
          .uleb128 .L_418f34-.L_418f2f
          .uleb128 .L_4195b7-.L_418db0
          .byte 0x1
          .uleb128 .L_41901e-.L_418db0
          .uleb128 .L_419023-.L_41901e
          .uleb128 .L_4195dc-.L_418db0
          .zero 1
          .uleb128 .L_4190dd-.L_418db0
          .uleb128 .L_4190e2-.L_4190dd
          .zero 2
          .uleb128 .L_419155-.L_418db0
          .uleb128 .L_41915a-.L_419155
          .uleb128 .L_419576-.L_418db0
          .byte 0x1
          .uleb128 .L_419466-.L_418db0
          .uleb128 .L_41946b-.L_419466
          .uleb128 .L_4195dc-.L_418db0
          .zero 1
          .uleb128 .L_419571-.L_418db0
          .uleb128 .L_419576-.L_419571
          .uleb128 .L_419576-.L_418db0
          .byte 0x1
          .uleb128 .L_4195a8-.L_418db0
          .uleb128 .L_4195b2-.L_4195a8
          .zero 2
          .uleb128 .L_4195b2-.L_418db0
          .uleb128 .L_4195b7-.L_4195b2
          .uleb128 .L_4195b7-.L_418db0
          .byte 0x1
          .uleb128 .L_4195d7-.L_418db0
          .uleb128 .L_4195dc-.L_4195d7
          .uleb128 .L_4195fb-.L_418db0
          .zero 1
          .uleb128 .L_4195f1-.L_418db0
          .uleb128 .L_4195f6-.L_4195f1
          .zero 2
          .uleb128 .L_4195f6-.L_418db0
          .uleb128 .L_4195fb-.L_4195f6
          .uleb128 .L_419605-.L_418db0
          .byte 0x3
          .uleb128 .L_419627-.L_418db0
          .uleb128 .L_41962c-.L_419627
          .uleb128 .L_419667-.L_418db0
          .zero 1
.L_4427df:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4427e8:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4427fd-.L_4427ec
.L_4427ec:
          .uleb128 .L_418001-.L_417ed0
          .uleb128 .L_418546-.L_418001
          .zero 2
          .uleb128 .L_4185d8-.L_417ed0
          .uleb128 .L_4185dd-.L_4185d8
          .uleb128 .L_418612-.L_417ed0
          .zero 1
          .uleb128 .L_418603-.L_417ed0
          .uleb128 .L_41862c-.L_418603
          .zero 2
.L_4427fd:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44280b-.L_442801
.L_442801:
          .uleb128 .L_4198ed-.L_4198b0
          .uleb128 .L_4198f2-.L_4198ed
          .uleb128 .L_419a51-.L_4198b0
          .zero 1
          .uleb128 .L_419a63-.L_4198b0
          .uleb128 .L_419a68-.L_419a63
          .zero 2
.L_44280b:
          .zero 1
.L_44280c:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_44284c-.L_44280f
.L_44280f:
          .byte 0x1
          .uleb128 .L_442843-.L_442811
.L_442811:
          .uleb128 .L_41a3b1-.L_41a310
          .uleb128 .L_41a3b6-.L_41a3b1
          .zero 2
          .uleb128 .L_41a3f1-.L_41a310
          .uleb128 .L_41a3f6-.L_41a3f1
          .uleb128 .L_41a66a-.L_41a310
          .byte 0x1
          .uleb128 .L_41a581-.L_41a310
          .uleb128 .L_41a586-.L_41a581
          .uleb128 .L_41a638-.L_41a310
          .byte 0x1
          .uleb128 .L_41a659-.L_41a310
          .uleb128 .L_41a65e-.L_41a659
          .uleb128 .L_41a696-.L_41a310
          .zero 1
          .uleb128 .L_41a665-.L_41a310
          .uleb128 .L_41a66a-.L_41a665
          .zero 2
          .uleb128 .L_41a691-.L_41a310
          .uleb128 .L_41a696-.L_41a691
          .uleb128 .L_41a6a6-.L_41a310
          .byte 0x3
          .uleb128 .L_41a6a1-.L_41a310
          .uleb128 .L_41a6a6-.L_41a6a1
          .zero 2
          .uleb128 .L_41a6c3-.L_41a310
          .uleb128 .L_41a6c8-.L_41a6c3
          .uleb128 .L_41a6c8-.L_41a310
          .zero 1
          .uleb128 .L_41a6d3-.L_41a310
          .uleb128 .L_41a6d8-.L_41a6d3
          .zero 2
.L_442843:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_44284c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442867-.L_442850
.L_442850:
          .uleb128 .L_419fff-.L_419e90
          .uleb128 .L_41a004-.L_419fff
          .zero 2
          .uleb128 .L_41a1a3-.L_419e90
          .uleb128 .L_41a263-.L_41a1a3
          .uleb128 .L_41a2ca-.L_419e90
          .zero 1
          .uleb128 .L_41a2df-.L_419e90
          .uleb128 .L_41a2e4-.L_41a2df
          .zero 2
          .uleb128 .L_41a2e4-.L_419e90
          .uleb128 .L_41a2e9-.L_41a2e4
          .uleb128 .L_41a2ca-.L_419e90
          .zero 1
.L_442867:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44287b-.L_44286b
.L_44286b:
          .uleb128 .L_41a8d3-.L_41a820
          .uleb128 .L_41a8f0-.L_41a8d3
          .zero 2
          .uleb128 .L_41a8f6-.L_41a820
          .uleb128 .L_41a906-.L_41a8f6
          .uleb128 .L_41aa4a-.L_41a820
          .zero 1
          .uleb128 .L_41aa33-.L_41a820
          .uleb128 .L_41aa98-.L_41aa33
          .zero 2
.L_44287b:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44288e-.L_44287f
.L_44287f:
          .uleb128 .L_41aadc-.L_41aaa0
          .uleb128 .L_41aae1-.L_41aadc
          .zero 2
          .uleb128 .L_41abb7-.L_41aaa0
          .uleb128 .L_41abbc-.L_41abb7
          .uleb128 .L_41abc8-.L_41aaa0
          .zero 1
          .uleb128 .L_41abe1-.L_41aaa0
          .uleb128 .L_41abe6-.L_41abe1
          .zero 2
.L_44288e:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4428ac-.L_442892
.L_442892:
          .uleb128 .L_41cb07-.L_41ca90
          .uleb128 .L_41cb0c-.L_41cb07
          .zero 2
          .uleb128 .L_41cb2b-.L_41ca90
          .uleb128 .L_41cb30-.L_41cb2b
          .uleb128 .L_41d762-.L_41ca90
          .zero 1
          .uleb128 .L_41d20a-.L_41ca90
          .uleb128 .L_41d20f-.L_41d20a
          .zero 2
          .uleb128 .L_41d241-.L_41ca90
          .uleb128 .L_41d246-.L_41d241
          .uleb128 .L_41d748-.L_41ca90
          .zero 1
          .uleb128 .L_41d758-.L_41ca90
          .uleb128 .L_41d775-.L_41d758
          .zero 2
.L_4428ac:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4428bf-.L_4428b0
.L_4428b0:
          .uleb128 .L_41d7f6-.L_41d780
          .uleb128 .L_41d7fb-.L_41d7f6
          .zero 2
          .uleb128 .L_41d8bb-.L_41d780
          .uleb128 .L_41d8e1-.L_41d8bb
          .uleb128 .L_41d96e-.L_41d780
          .zero 1
          .uleb128 .L_41d945-.L_41d780
          .uleb128 .L_41d986-.L_41d945
          .zero 2
.L_4428bf:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_4428f9-.L_4428c3
.L_4428c3:
          .uleb128 .L_41dab7-.L_41d990
          .uleb128 .L_41dabc-.L_41dab7
          .zero 2
          .uleb128 .L_41dba7-.L_41d990
          .uleb128 .L_41dc97-.L_41dba7
          .uleb128 .L_41f6ce-.L_41d990
          .zero 1
          .uleb128 .L_41dece-.L_41d990
          .uleb128 .L_41ded3-.L_41dece
          .zero 2
          .uleb128 .L_41dede-.L_41d990
          .uleb128 .L_41dee3-.L_41dede
          .uleb128 .L_41f6ce-.L_41d990
          .zero 1
          .uleb128 .L_41f070-.L_41d990
          .uleb128 .L_41f3f6-.L_41f070
          .uleb128 .L_41f66e-.L_41d990
          .zero 1
          .uleb128 .L_41f4b0-.L_41d990
          .uleb128 .L_41f4fd-.L_41f4b0
          .uleb128 .L_41f6ce-.L_41d990
          .zero 1
          .uleb128 .L_41f50d-.L_41d990
          .uleb128 .L_41f512-.L_41f50d
          .uleb128 .L_41f6a5-.L_41d990
          .zero 1
          .uleb128 .L_41f549-.L_41d990
          .uleb128 .L_41f54e-.L_41f549
          .uleb128 .L_41f6ce-.L_41d990
          .zero 1
          .uleb128 .L_41f56a-.L_41d990
          .uleb128 .L_41f6ce-.L_41f56a
          .zero 2
.L_4428f9:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44293a-.L_4428fd
.L_4428fd:
          .uleb128 .L_41f75a-.L_41f6e0
          .uleb128 .L_41faa0-.L_41f75a
          .uleb128 .L_41fe91-.L_41f6e0
          .zero 1
          .uleb128 .L_41fbba-.L_41f6e0
          .uleb128 .L_41fbbc-.L_41fbba
          .uleb128 .L_41fcca-.L_41f6e0
          .zero 1
          .uleb128 .L_41fc48-.L_41f6e0
          .uleb128 .L_41fc4a-.L_41fc48
          .uleb128 .L_41fe91-.L_41f6e0
          .zero 1
          .uleb128 .L_41fc7e-.L_41f6e0
          .uleb128 .L_41fc80-.L_41fc7e
          .uleb128 .L_41fcca-.L_41f6e0
          .zero 1
          .uleb128 .L_41fcfc-.L_41f6e0
          .uleb128 .L_41fd01-.L_41fcfc
          .zero 2
          .uleb128 .L_41fd25-.L_41f6e0
          .uleb128 .L_41fd2a-.L_41fd25
          .uleb128 .L_41fe91-.L_41f6e0
          .zero 1
          .uleb128 .L_41fdf0-.L_41f6e0
          .uleb128 .L_41fe31-.L_41fdf0
          .uleb128 .L_41ff74-.L_41f6e0
          .zero 1
          .uleb128 .L_41fe74-.L_41f6e0
          .uleb128 .L_420016-.L_41fe74
          .uleb128 .L_41fe91-.L_41f6e0
          .zero 1
          .uleb128 .L_420ed4-.L_41f6e0
          .uleb128 .L_420fd8-.L_420ed4
          .uleb128 .L_420f81-.L_41f6e0
          .zero 1
          .uleb128 .L_420ffe-.L_41f6e0
          .uleb128 .L_421038-.L_420ffe
          .uleb128 .L_41fe91-.L_41f6e0
          .zero 1
.L_44293a:
          .zero 2
.L_44293c:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_44294c-.L_442940
.L_442940:
          .uleb128 .L_421a8d-.L_421a00
          .uleb128 .L_421ec5-.L_421a8d
          .uleb128 .L_421ec5-.L_421a00
          .zero 1
          .uleb128 .L_421ee7-.L_421a00
          .uleb128 .L_421eec-.L_421ee7
          .zero 2
.L_44294c:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442990-.L_44294f
.L_44294f:
          .byte 0x1
          .uleb128 .L_442987-.L_442951
.L_442951:
          .uleb128 .L_42406d-.L_423fb0
          .uleb128 .L_4240dd-.L_42406d
          .uleb128 .L_4246e7-.L_423fb0
          .zero 1
          .uleb128 .L_4243c5-.L_423fb0
          .uleb128 .L_4243ca-.L_4243c5
          .uleb128 .L_424735-.L_423fb0
          .zero 1
          .uleb128 .L_424458-.L_423fb0
          .uleb128 .L_42445d-.L_424458
          .uleb128 .L_4246c4-.L_423fb0
          .byte 0x1
          .uleb128 .L_4244d0-.L_423fb0
          .uleb128 .L_4246bf-.L_4244d0
          .uleb128 .L_42471f-.L_423fb0
          .byte 0x1
          .uleb128 .L_4246e2-.L_423fb0
          .uleb128 .L_4246e7-.L_4246e2
          .uleb128 .L_4246e7-.L_423fb0
          .zero 1
          .uleb128 .L_42470b-.L_423fb0
          .uleb128 .L_424710-.L_42470b
          .zero 2
          .uleb128 .L_424710-.L_423fb0
          .uleb128 .L_424715-.L_424710
          .uleb128 .L_424744-.L_423fb0
          .zero 1
          .uleb128 .L_424715-.L_423fb0
          .uleb128 .L_42471a-.L_424715
          .uleb128 .L_4246e7-.L_423fb0
          .zero 1
          .uleb128 .L_42471a-.L_423fb0
          .uleb128 .L_42471f-.L_42471a
          .uleb128 .L_4246c4-.L_423fb0
          .byte 0x1
.L_442987:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442990:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_4429e4-.L_442993
.L_442993:
          .byte 0x1
          .uleb128 .L_4429dd-.L_442995
.L_442995:
          .uleb128 .L_4251a4-.L_425080
          .uleb128 .L_4251a9-.L_4251a4
          .zero 2
          .uleb128 .L_4251dd-.L_425080
          .uleb128 .L_4251e2-.L_4251dd
          .uleb128 .L_425c5a-.L_425080
          .zero 1
          .uleb128 .L_425270-.L_425080
          .uleb128 .L_425275-.L_425270
          .uleb128 .L_425bb0-.L_425080
          .byte 0x1
          .uleb128 .L_425304-.L_425080
          .uleb128 .L_425603-.L_425304
          .uleb128 .L_425c16-.L_425080
          .zero 1
          .uleb128 .L_4256cc-.L_425080
          .uleb128 .L_4256d1-.L_4256cc
          .zero 2
          .uleb128 .L_4256ec-.L_425080
          .uleb128 .L_4256f1-.L_4256ec
          .uleb128 .L_425cfb-.L_425080
          .zero 1
          .uleb128 .L_425730-.L_425080
          .uleb128 .L_425a93-.L_425730
          .uleb128 .L_425cb8-.L_425080
          .zero 1
          .uleb128 .L_425b3e-.L_425080
          .uleb128 .L_425b43-.L_425b3e
          .uleb128 .L_425bb0-.L_425080
          .byte 0x1
          .uleb128 .L_425bab-.L_425080
          .uleb128 .L_425bb0-.L_425bab
          .uleb128 .L_425bdf-.L_425080
          .byte 0x1
          .uleb128 .L_425bda-.L_425080
          .uleb128 .L_425bdf-.L_425bda
          .uleb128 .L_425be8-.L_425080
          .zero 1
          .uleb128 .L_425c11-.L_425080
          .uleb128 .L_425c5a-.L_425c11
          .zero 2
          .uleb128 .L_425db1-.L_425080
          .uleb128 .L_426a70-.L_425db1
          .uleb128 .L_425cb8-.L_425080
          .zero 1
.L_4429dd:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4429e4:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442a14-.L_4429e7
.L_4429e7:
          .byte 0x1
          .uleb128 .L_442a0b-.L_4429e9
.L_4429e9:
          .uleb128 .L_429ac8-.L_429a70
          .uleb128 .L_429acd-.L_429ac8
          .zero 2
          .uleb128 .L_429afd-.L_429a70
          .uleb128 .L_429b02-.L_429afd
          .uleb128 .L_429df9-.L_429a70
          .zero 1
          .uleb128 .L_429b6f-.L_429a70
          .uleb128 .L_429d1c-.L_429b6f
          .uleb128 .L_429e28-.L_429a70
          .byte 0x1
          .uleb128 .L_429da1-.L_429a70
          .uleb128 .L_429e0c-.L_429da1
          .zero 2
          .uleb128 .L_429e23-.L_429a70
          .uleb128 .L_429e28-.L_429e23
          .uleb128 .L_429e4d-.L_429a70
          .byte 0x1
          .uleb128 .L_429e48-.L_429a70
          .uleb128 .L_429e4d-.L_429e48
          .uleb128 .L_429e52-.L_429a70
          .zero 1
.L_442a0b:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442a14:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442a2d-.L_442a18
.L_442a18:
          .uleb128 .L_429ecd-.L_429e70
          .uleb128 .L_429ed2-.L_429ecd
          .zero 2
          .uleb128 .L_42a020-.L_429e70
          .uleb128 .L_42a025-.L_42a020
          .uleb128 .L_42a1d7-.L_429e70
          .zero 1
          .uleb128 .L_42a1d2-.L_429e70
          .uleb128 .L_42a1f4-.L_42a1d2
          .zero 2
          .uleb128 .L_42a1f4-.L_429e70
          .uleb128 .L_42a1f9-.L_42a1f4
          .uleb128 .L_42a1d7-.L_429e70
          .zero 1
.L_442a2d:
          .zero 3
.L_442a30:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442a58-.L_442a33
.L_442a33:
          .byte 0x1
          .uleb128 .L_442a50-.L_442a35
.L_442a35:
          .uleb128 .L_42d499-.L_42d440
          .uleb128 .L_42d49e-.L_42d499
          .zero 2
          .uleb128 .L_42d4fb-.L_42d440
          .uleb128 .L_42d500-.L_42d4fb
          .uleb128 .L_42d75f-.L_42d440
          .byte 0x1
          .uleb128 .L_42d774-.L_42d440
          .uleb128 .L_42d779-.L_42d774
          .uleb128 .L_42d77e-.L_42d440
          .zero 1
          .uleb128 .L_42d779-.L_42d440
          .uleb128 .L_42d77e-.L_42d779
          .uleb128 .L_42d75f-.L_42d440
          .byte 0x1
          .uleb128 .L_42d789-.L_42d440
          .uleb128 .L_42d78e-.L_42d789
          .zero 2
.L_442a50:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442a58:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442a67-.L_442a5c
.L_442a5c:
          .uleb128 .L_42a47d-.L_42a200
          .uleb128 .L_42a482-.L_42a47d
          .uleb128 .L_42a4b1-.L_42a200
          .zero 1
          .uleb128 .L_42a4c1-.L_42a200
          .uleb128 .L_42a4c6-.L_42a4c1
          .zero 2
.L_442a67:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442a76-.L_442a6b
.L_442a6b:
          .uleb128 .L_42a74d-.L_42a4d0
          .uleb128 .L_42a752-.L_42a74d
          .uleb128 .L_42a781-.L_42a4d0
          .zero 1
          .uleb128 .L_42a791-.L_42a4d0
          .uleb128 .L_42a796-.L_42a791
          .zero 2
.L_442a76:
          .zero 2
.L_442a78:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442b08-.L_442a7c
.L_442a7c:
          .byte 0x1
          .uleb128 .L_442aff-.L_442a7f
.L_442a7f:
          .uleb128 .L_42a860-.L_42a7a0
          .uleb128 .L_42a865-.L_42a860
          .zero 2
          .uleb128 .L_42a8de-.L_42a7a0
          .uleb128 .L_42a8e3-.L_42a8de
          .uleb128 .L_42c5c3-.L_42a7a0
          .byte 0x1
          .uleb128 .L_42a999-.L_42a7a0
          .uleb128 .L_42a99e-.L_42a999
          .zero 2
          .uleb128 .L_42aa2c-.L_42a7a0
          .uleb128 .L_42aa31-.L_42aa2c
          .uleb128 .L_42c563-.L_42a7a0
          .byte 0x1
          .uleb128 .L_42b07e-.L_42a7a0
          .uleb128 .L_42b09d-.L_42b07e
          .uleb128 .L_42c50e-.L_42a7a0
          .zero 1
          .uleb128 .L_42b266-.L_42a7a0
          .uleb128 .L_42b285-.L_42b266
          .uleb128 .L_42c516-.L_42a7a0
          .zero 1
          .uleb128 .L_42b51e-.L_42a7a0
          .uleb128 .L_42b523-.L_42b51e
          .uleb128 .L_42c4f9-.L_42a7a0
          .zero 1
          .uleb128 .L_42b7ea-.L_42a7a0
          .uleb128 .L_42b811-.L_42b7ea
          .uleb128 .L_42c544-.L_42a7a0
          .zero 1
          .uleb128 .L_42b8e5-.L_42a7a0
          .uleb128 .L_42b8ea-.L_42b8e5
          .uleb128 .L_42c549-.L_42a7a0
          .zero 1
          .uleb128 .L_42bb16-.L_42a7a0
          .uleb128 .L_42bb1b-.L_42bb16
          .uleb128 .L_42c520-.L_42a7a0
          .zero 1
          .uleb128 .L_42bbd4-.L_42a7a0
          .uleb128 .L_42bbd9-.L_42bbd4
          .uleb128 .L_42c58e-.L_42a7a0
          .zero 1
          .uleb128 .L_42c270-.L_42a7a0
          .uleb128 .L_42c275-.L_42c270
          .uleb128 .L_42c4d5-.L_42a7a0
          .zero 1
          .uleb128 .L_42c2b2-.L_42a7a0
          .uleb128 .L_42c2b7-.L_42c2b2
          .uleb128 .L_42c4c3-.L_42a7a0
          .zero 1
          .uleb128 .L_42c2f2-.L_42a7a0
          .uleb128 .L_42c2f7-.L_42c2f2
          .uleb128 .L_42c4a7-.L_42a7a0
          .zero 1
          .uleb128 .L_42c34a-.L_42a7a0
          .uleb128 .L_42c34f-.L_42c34a
          .uleb128 .L_42c47b-.L_42a7a0
          .zero 1
          .uleb128 .L_42c4a2-.L_42a7a0
          .uleb128 .L_42c4a7-.L_42c4a2
          .zero 2
          .uleb128 .L_42c4f4-.L_42a7a0
          .uleb128 .L_42c4f9-.L_42c4f4
          .uleb128 .L_42c4f9-.L_42a7a0
          .zero 1
          .uleb128 .L_42c559-.L_42a7a0
          .uleb128 .L_42c55e-.L_42c559
          .zero 2
          .uleb128 .L_42c55e-.L_42a7a0
          .uleb128 .L_42c563-.L_42c55e
          .uleb128 .L_42c563-.L_42a7a0
          .byte 0x1
          .uleb128 .L_42c589-.L_42a7a0
          .uleb128 .L_42c58e-.L_42c589
          .uleb128 .L_42c59e-.L_42a7a0
          .zero 1
          .uleb128 .L_42c5be-.L_42a7a0
          .uleb128 .L_42c5c3-.L_42c5be
          .uleb128 .L_42c5c3-.L_42a7a0
          .byte 0x1
          .uleb128 .L_42c5e3-.L_42a7a0
          .uleb128 .L_42c5e8-.L_42c5e3
          .uleb128 .L_42c5e8-.L_42a7a0
          .zero 1
.L_442aff:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442b08:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442b94-.L_442b0c
.L_442b0c:
          .byte 0x1
          .uleb128 .L_442b8b-.L_442b0e
.L_442b0e:
          .uleb128 .L_42c682-.L_42c610
          .uleb128 .L_42c687-.L_42c682
          .zero 2
          .uleb128 .L_42c808-.L_42c610
          .uleb128 .L_42c80d-.L_42c808
          .uleb128 .L_42d30a-.L_42c610
          .zero 1
          .uleb128 .L_42c82b-.L_42c610
          .uleb128 .L_42c830-.L_42c82b
          .uleb128 .L_42d302-.L_42c610
          .zero 1
          .uleb128 .L_42c843-.L_42c610
          .uleb128 .L_42c848-.L_42c843
          .uleb128 .L_42d314-.L_42c610
          .zero 1
          .uleb128 .L_42c8ba-.L_42c610
          .uleb128 .L_42c8bf-.L_42c8ba
          .uleb128 .L_42d23b-.L_42c610
          .zero 1
          .uleb128 .L_42c93c-.L_42c610
          .uleb128 .L_42c941-.L_42c93c
          .uleb128 .L_42d20d-.L_42c610
          .byte 0x1
          .uleb128 .L_42c9a5-.L_42c610
          .uleb128 .L_42c9aa-.L_42c9a5
          .uleb128 .L_42d372-.L_42c610
          .zero 1
          .uleb128 .L_42ca5a-.L_42c610
          .uleb128 .L_42ca84-.L_42ca5a
          .uleb128 .L_42d33a-.L_42c610
          .zero 1
          .uleb128 .L_42ca9b-.L_42c610
          .uleb128 .L_42caa0-.L_42ca9b
          .uleb128 .L_42d332-.L_42c610
          .zero 1
          .uleb128 .L_42caad-.L_42c610
          .uleb128 .L_42cbea-.L_42caad
          .uleb128 .L_42d278-.L_42c610
          .zero 1
          .uleb128 .L_42cde9-.L_42c610
          .uleb128 .L_42cdee-.L_42cde9
          .uleb128 .L_42d2b1-.L_42c610
          .zero 1
          .uleb128 .L_42ce01-.L_42c610
          .uleb128 .L_42ce06-.L_42ce01
          .uleb128 .L_42d37a-.L_42c610
          .zero 1
          .uleb128 .L_42ce0c-.L_42c610
          .uleb128 .L_42ce11-.L_42ce0c
          .uleb128 .L_42d342-.L_42c610
          .zero 1
          .uleb128 .L_42cf20-.L_42c610
          .uleb128 .L_42cfa9-.L_42cf20
          .uleb128 .L_42d372-.L_42c610
          .zero 1
          .uleb128 .L_42d178-.L_42c610
          .uleb128 .L_42d17d-.L_42d178
          .uleb128 .L_42d2cd-.L_42c610
          .zero 1
          .uleb128 .L_42d198-.L_42c610
          .uleb128 .L_42d19d-.L_42d198
          .uleb128 .L_42d312-.L_42c610
          .zero 1
          .uleb128 .L_42d208-.L_42c610
          .uleb128 .L_42d20d-.L_42d208
          .uleb128 .L_42d20d-.L_42c610
          .byte 0x1
          .uleb128 .L_42d236-.L_42c610
          .uleb128 .L_42d23b-.L_42d236
          .uleb128 .L_42d23b-.L_42c610
          .zero 1
          .uleb128 .L_42d269-.L_42c610
          .uleb128 .L_42d273-.L_42d269
          .zero 2
          .uleb128 .L_42d273-.L_42c610
          .uleb128 .L_42d278-.L_42d273
          .uleb128 .L_42d278-.L_42c610
          .zero 1
          .uleb128 .L_42d2c8-.L_42c610
          .uleb128 .L_42d2cd-.L_42d2c8
          .uleb128 .L_42d2e4-.L_42c610
          .zero 1
.L_442b8b:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442b94:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442bc5-.L_442b98
.L_442b98:
          .uleb128 .L_431f37-.L_431e80
          .uleb128 .L_431f3c-.L_431f37
          .zero 2
          .uleb128 .L_431fbe-.L_431e80
          .uleb128 .L_431fc3-.L_431fbe
          .uleb128 .L_433898-.L_431e80
          .zero 1
          .uleb128 .L_43201a-.L_431e80
          .uleb128 .L_43201f-.L_43201a
          .uleb128 .L_4338bf-.L_431e80
          .zero 1
          .uleb128 .L_432ba7-.L_431e80
          .uleb128 .L_432bac-.L_432ba7
          .uleb128 .L_433841-.L_431e80
          .zero 1
          .uleb128 .L_43387d-.L_431e80
          .uleb128 .L_433882-.L_43387d
          .zero 2
          .uleb128 .L_4338ba-.L_431e80
          .uleb128 .L_4338bf-.L_4338ba
          .uleb128 .L_433898-.L_431e80
          .zero 1
          .uleb128 .L_4338c4-.L_431e80
          .uleb128 .L_4338c9-.L_4338c4
          .uleb128 .L_4338bf-.L_431e80
          .zero 1
          .uleb128 .L_4338c9-.L_431e80
          .uleb128 .L_4338ce-.L_4338c9
          .zero 2
.L_442bc5:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442be4-.L_442bc9
.L_442bc9:
          .uleb128 .L_433913-.L_4338e0
          .uleb128 .L_433918-.L_433913
          .zero 2
          .uleb128 .L_4339d6-.L_4338e0
          .uleb128 .L_4339db-.L_4339d6
          .uleb128 .L_433b4b-.L_4338e0
          .zero 1
          .uleb128 .L_433b05-.L_4338e0
          .uleb128 .L_433b0a-.L_433b05
          .uleb128 .L_433b1c-.L_4338e0
          .zero 1
          .uleb128 .L_433b46-.L_4338e0
          .uleb128 .L_433b4b-.L_433b46
          .zero 2
          .uleb128 .L_433b50-.L_4338e0
          .uleb128 .L_433b55-.L_433b50
          .uleb128 .L_433b4b-.L_4338e0
          .zero 1
.L_442be4:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442c34-.L_442be7
.L_442be7:
          .byte 0x1
          .uleb128 .L_442c2e-.L_442be9
.L_442be9:
          .uleb128 .L_433be9-.L_433b60
          .uleb128 .L_433bee-.L_433be9
          .zero 2
          .uleb128 .L_433c74-.L_433b60
          .uleb128 .L_433c79-.L_433c74
          .uleb128 .L_434519-.L_433b60
          .byte 0x1
          .uleb128 .L_433d20-.L_433b60
          .uleb128 .L_433d25-.L_433d20
          .uleb128 .L_4344f3-.L_433b60
          .zero 1
          .uleb128 .L_433da6-.L_433b60
          .uleb128 .L_433dab-.L_433da6
          .uleb128 .L_4344c9-.L_433b60
          .byte 0x1
          .uleb128 .L_433e14-.L_433b60
          .uleb128 .L_433e31-.L_433e14
          .uleb128 .L_4344a7-.L_433b60
          .zero 1
          .uleb128 .L_4344c4-.L_433b60
          .uleb128 .L_4344c9-.L_4344c4
          .zero 2
          .uleb128 .L_4344e9-.L_433b60
          .uleb128 .L_4344ee-.L_4344e9
          .uleb128 .L_4344f8-.L_433b60
          .zero 1
          .uleb128 .L_4344ee-.L_433b60
          .uleb128 .L_4344f3-.L_4344ee
          .uleb128 .L_4344c9-.L_433b60
          .byte 0x1
          .uleb128 .L_434514-.L_433b60
          .uleb128 .L_434519-.L_434514
          .uleb128 .L_4344f3-.L_433b60
          .zero 1
          .uleb128 .L_434539-.L_433b60
          .uleb128 .L_43453e-.L_434539
          .uleb128 .L_434548-.L_433b60
          .zero 1
          .uleb128 .L_43453e-.L_433b60
          .uleb128 .L_434543-.L_43453e
          .uleb128 .L_434519-.L_433b60
          .byte 0x1
          .uleb128 .L_434543-.L_433b60
          .uleb128 .L_434548-.L_434543
          .zero 2
.L_442c2e:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442c34:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442c74-.L_442c37
.L_442c37:
          .byte 0x1
          .uleb128 .L_442c6c-.L_442c39
.L_442c39:
          .uleb128 .L_4345f1-.L_434570
          .uleb128 .L_4345f6-.L_4345f1
          .zero 2
          .uleb128 .L_43467e-.L_434570
          .uleb128 .L_434683-.L_43467e
          .uleb128 .L_434ef0-.L_434570
          .byte 0x1
          .uleb128 .L_4346fd-.L_434570
          .uleb128 .L_434702-.L_4346fd
          .uleb128 .L_434eeb-.L_434570
          .zero 1
          .uleb128 .L_434776-.L_434570
          .uleb128 .L_43477b-.L_434776
          .uleb128 .L_434ec9-.L_434570
          .zero 1
          .uleb128 .L_434ebf-.L_434570
          .uleb128 .L_434ee6-.L_434ebf
          .zero 2
          .uleb128 .L_434ee6-.L_434570
          .uleb128 .L_434eeb-.L_434ee6
          .uleb128 .L_434ec9-.L_434570
          .zero 1
          .uleb128 .L_434f11-.L_434570
          .uleb128 .L_434f16-.L_434f11
          .uleb128 .L_434f1b-.L_434570
          .zero 1
          .uleb128 .L_434f16-.L_434570
          .uleb128 .L_434f1b-.L_434f16
          .uleb128 .L_434ef0-.L_434570
          .byte 0x1
          .uleb128 .L_434f35-.L_434570
          .uleb128 .L_434f3a-.L_434f35
          .zero 2
.L_442c6c:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442c74:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442c99-.L_442c78
.L_442c78:
          .uleb128 .L_43528d-.L_435200
          .uleb128 .L_435292-.L_43528d
          .zero 2
          .uleb128 .L_435353-.L_435200
          .uleb128 .L_435358-.L_435353
          .uleb128 .L_435550-.L_435200
          .zero 1
          .uleb128 .L_4354e8-.L_435200
          .uleb128 .L_4354ed-.L_4354e8
          .zero 2
          .uleb128 .L_435508-.L_435200
          .uleb128 .L_43550d-.L_435508
          .uleb128 .L_43551f-.L_435200
          .zero 1
          .uleb128 .L_43554b-.L_435200
          .uleb128 .L_435550-.L_43554b
          .zero 2
          .uleb128 .L_43555a-.L_435200
          .uleb128 .L_43555f-.L_43555a
          .uleb128 .L_435550-.L_435200
          .zero 1
.L_442c99:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442cb8-.L_442c9d
.L_442c9d:
          .uleb128 .L_4355ee-.L_435560
          .uleb128 .L_4355f3-.L_4355ee
          .zero 2
          .uleb128 .L_43589c-.L_435560
          .uleb128 .L_4358a1-.L_43589c
          .uleb128 .L_4361cc-.L_435560
          .zero 1
          .uleb128 .L_4358fd-.L_435560
          .uleb128 .L_435902-.L_4358fd
          .zero 2
          .uleb128 .L_435b27-.L_435560
          .uleb128 .L_435b2c-.L_435b27
          .uleb128 .L_4361ee-.L_435560
          .zero 1
          .uleb128 .L_4361e4-.L_435560
          .uleb128 .L_436200-.L_4361e4
          .zero 2
.L_442cb8:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442d08-.L_442cbb
.L_442cbb:
          .byte 0x1
          .uleb128 .L_442d02-.L_442cbd
.L_442cbd:
          .uleb128 .L_436282-.L_436200
          .uleb128 .L_436287-.L_436282
          .zero 2
          .uleb128 .L_43630d-.L_436200
          .uleb128 .L_436312-.L_43630d
          .uleb128 .L_436713-.L_436200
          .byte 0x1
          .uleb128 .L_4363ba-.L_436200
          .uleb128 .L_4363bf-.L_4363ba
          .uleb128 .L_436768-.L_436200
          .zero 1
          .uleb128 .L_43644d-.L_436200
          .uleb128 .L_436452-.L_43644d
          .uleb128 .L_436772-.L_436200
          .byte 0x1
          .uleb128 .L_4364d0-.L_436200
          .uleb128 .L_4364f5-.L_4364d0
          .uleb128 .L_436749-.L_436200
          .zero 1
          .uleb128 .L_43673a-.L_436200
          .uleb128 .L_43673f-.L_43673a
          .uleb128 .L_4367c1-.L_436200
          .zero 1
          .uleb128 .L_43673f-.L_436200
          .uleb128 .L_436744-.L_43673f
          .uleb128 .L_436713-.L_436200
          .byte 0x1
          .uleb128 .L_436763-.L_436200
          .uleb128 .L_436768-.L_436763
          .zero 2
          .uleb128 .L_43676d-.L_436200
          .uleb128 .L_436772-.L_43676d
          .uleb128 .L_436768-.L_436200
          .zero 1
          .uleb128 .L_436799-.L_436200
          .uleb128 .L_43679e-.L_436799
          .uleb128 .L_4367a3-.L_436200
          .zero 1
          .uleb128 .L_43679e-.L_436200
          .uleb128 .L_4367a3-.L_43679e
          .uleb128 .L_436772-.L_436200
          .byte 0x1
          .uleb128 .L_4367bc-.L_436200
          .uleb128 .L_4367c1-.L_4367bc
          .zero 2
.L_442d02:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442d08:
          .byte 0xff
          .byte 0x9b
          .byte 0x55
          .byte 0x1
          .byte 0x4a
          .byte 0xb0
          .byte 0x1
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x2
          .byte 0x5
          .byte 0x87
          .byte 0x10
          .byte 0x1
          .byte 0xee
          .byte 0x4
          .byte 0x5
          .byte 0xac
          .byte 0x10
          .byte 0x0
          .byte 0xad
          .byte 0x6
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x7
          .byte 0x5
          .byte 0xc6
          .byte 0xf
          .byte 0x1
          .byte 0xb6
          .byte 0xd
          .byte 0x5
          .byte 0xac
          .byte 0x10
          .byte 0x0
          .byte 0xc1
          .byte 0xf
          .byte 0x5
          .byte 0xc6
          .byte 0xf
          .byte 0x1
          .byte 0xf8
          .byte 0xf
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x10
          .byte 0x5
          .byte 0x87
          .byte 0x10
          .byte 0x1
          .byte 0xa7
          .byte 0x10
          .byte 0x5
          .byte 0xcb
          .byte 0x10
          .byte 0x0
          .byte 0xc1
          .byte 0x10
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x10
          .byte 0x5
          .byte 0xd5
          .byte 0x10
          .byte 0x3
          .byte 0xf7
          .byte 0x10
          .byte 0x5
          .byte 0xb7
          .byte 0x11
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442d60:
          .byte 0xff
          .byte 0xff
          .byte 0x1
          .uleb128 .L_442d74-.L_442d64
.L_442d64:
          .uleb128 .L_436861-.L_4367e0
          .uleb128 .L_436866-.L_436861
          .zero 2
          .uleb128 .L_437801-.L_4367e0
          .uleb128 .L_437806-.L_437801
          .uleb128 .L_437850-.L_4367e0
          .zero 1
          .uleb128 .L_437846-.L_4367e0
          .uleb128 .L_43786d-.L_437846
          .zero 2
.L_442d74:
          .byte 0xff
          .byte 0x9b
          .uleb128 .L_442e04-.L_442d78
.L_442d78:
          .byte 0x1
          .uleb128 .L_442dfb-.L_442d7b
.L_442d7b:
          .uleb128 .L_438b74-.L_438ab0
          .uleb128 .L_438b79-.L_438b74
          .zero 2
          .uleb128 .L_438c32-.L_438ab0
          .uleb128 .L_438c37-.L_438c32
          .uleb128 .L_4394f8-.L_438ab0
          .byte 0x1
          .uleb128 .L_438cfd-.L_438ab0
          .uleb128 .L_438d02-.L_438cfd
          .uleb128 .L_439584-.L_438ab0
          .zero 1
          .uleb128 .L_438daa-.L_438ab0
          .uleb128 .L_438daf-.L_438daa
          .uleb128 .L_43952c-.L_438ab0
          .byte 0x1
          .uleb128 .L_438f80-.L_438ab0
          .uleb128 .L_438f85-.L_438f80
          .uleb128 .L_439584-.L_438ab0
          .zero 1
          .uleb128 .L_438fd8-.L_438ab0
          .uleb128 .L_43902d-.L_438fd8
          .uleb128 .L_4395a1-.L_438ab0
          .zero 1
          .uleb128 .L_4390bc-.L_438ab0
          .uleb128 .L_4390c1-.L_4390bc
          .uleb128 .L_4395bc-.L_438ab0
          .zero 1
          .uleb128 .L_439141-.L_438ab0
          .uleb128 .L_439160-.L_439141
          .uleb128 .L_439604-.L_438ab0
          .zero 1
          .uleb128 .L_4391ee-.L_438ab0
          .uleb128 .L_4391f3-.L_4391ee
          .uleb128 .L_4395fb-.L_438ab0
          .zero 1
          .uleb128 .L_439285-.L_438ab0
          .uleb128 .L_4392b7-.L_439285
          .uleb128 .L_4395d2-.L_438ab0
          .zero 1
          .uleb128 .L_43938a-.L_438ab0
          .uleb128 .L_43938f-.L_43938a
          .uleb128 .L_439604-.L_438ab0
          .zero 1
          .uleb128 .L_4394f3-.L_438ab0
          .uleb128 .L_4394f8-.L_4394f3
          .uleb128 .L_4394f8-.L_438ab0
          .byte 0x1
          .uleb128 .L_439527-.L_438ab0
          .uleb128 .L_43952c-.L_439527
          .uleb128 .L_43952c-.L_438ab0
          .byte 0x1
          .uleb128 .L_43957a-.L_438ab0
          .uleb128 .L_43957f-.L_43957a
          .zero 2
          .uleb128 .L_43957f-.L_438ab0
          .uleb128 .L_439584-.L_43957f
          .uleb128 .L_439584-.L_438ab0
          .zero 1
          .uleb128 .L_439592-.L_438ab0
          .uleb128 .L_439597-.L_439592
          .zero 2
          .uleb128 .L_439597-.L_438ab0
          .uleb128 .L_43959c-.L_439597
          .uleb128 .L_439584-.L_438ab0
          .zero 1
          .uleb128 .L_43959c-.L_438ab0
          .uleb128 .L_4395a1-.L_43959c
          .uleb128 .L_4395a1-.L_438ab0
          .zero 1
          .uleb128 .L_4395b7-.L_438ab0
          .uleb128 .L_4395bc-.L_4395b7
          .uleb128 .L_4395bc-.L_438ab0
          .zero 1
          .uleb128 .L_439609-.L_438ab0
          .uleb128 .L_43960e-.L_439609
          .uleb128 .L_439613-.L_438ab0
          .zero 1
          .uleb128 .L_43960e-.L_438ab0
          .uleb128 .L_439613-.L_43960e
          .uleb128 .L_439634-.L_438ab0
          .zero 1
          .uleb128 .L_43962f-.L_438ab0
          .uleb128 .L_439634-.L_43962f
          .zero 2
.L_442dfb:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_442e04:
#===================================
# end section .gcc_except_table
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_643d40:
          .quad .L_401780
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_643d48:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x3d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_643d60:
          .quad .L_418800
          .quad .L_418630
          .quad .L_416990
          .quad .L_417d60
          .quad .L_415d30
          .quad .L_417ed0
          .quad .L_416ec0
          .quad .L_415da0
          .quad .L_4130f0
          .quad .L_413230
          .quad .L_413120
          .quad .L_415d20
          .quad .L_415dc0
          .quad _ZTVN10__cxxabiv117__class_type_infoE+16
          .quad .L_419680
          .quad _ZTVN10__cxxabiv120__si_class_type_infoE+16
          .quad .L_4196a0
          .byte 0xc8
          .byte 0x3d
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 16
.L_6441b0:
          .quad __gxx_personality_v0
          .zero 8
.L_6441c0:
          .byte 0x7d
          .byte 0x76
          .byte 0xd5
          .byte 0xdd
          .byte 0x7d
          .byte 0x21
          .byte 0x15
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0xd1
          .byte 0x63
          .byte 0x79
          .byte 0xee
          .byte 0x84
          .byte 0xd8
          .byte 0x3f
          .byte 0x18
          .byte 0xb9
          .byte 0x97
          .byte 0x74
          .byte 0x47
          .byte 0xa4
          .byte 0xe5
          .byte 0x3f
          .byte 0xae
          .byte 0xec
          .byte 0x26
          .byte 0x58
          .byte 0xd7
          .byte 0xb6
          .byte 0xc
          .byte 0x40
          .byte 0x1d
          .byte 0xa3
          .byte 0x5f
          .byte 0x94
          .byte 0x45
          .byte 0x9c
          .byte 0x32
          .byte 0x40
          .byte 0x1d
          .byte 0xa3
          .byte 0x5f
          .byte 0x94
          .byte 0x45
          .byte 0x9c
          .byte 0x32
          .byte 0x40
          .byte 0x32
          .byte 0xca
          .byte 0x1a
          .byte 0x33
          .byte 0x3a
          .byte 0xba
          .byte 0x8
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x15
          .byte 0x46
          .byte 0x5e
          .byte 0xa4
          .byte 0x57
          .byte 0xe3
          .byte 0xdf
          .byte 0x3f
          .byte 0x5e
          .byte 0xb8
          .byte 0x5a
          .byte 0x4f
          .byte 0xca
          .byte 0x2a
          .byte 0xd7
          .byte 0x3f
          .byte 0x58
          .byte 0x74
          .byte 0xac
          .byte 0x26
          .byte 0x5d
          .byte 0xc6
          .byte 0xd3
          .byte 0x3f
          .byte 0xc0
          .byte 0x1b
          .byte 0xe2
          .byte 0x2e
          .byte 0x76
          .byte 0xcd
          .byte 0xc0
          .byte 0x3f
          .byte 0x3f
          .byte 0x35
          .byte 0xa7
          .byte 0x4e
          .byte 0x59
          .byte 0xfd
          .byte 0x2
          .byte 0x40
          .byte 0xae
          .byte 0xec
          .byte 0x26
          .byte 0x58
          .byte 0xd7
          .byte 0xb6
          .byte 0xc
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
          .byte 0x3f
          .byte 0x35
          .byte 0xa7
          .byte 0x4e
          .byte 0x59
          .byte 0xfd
          .byte 0x2
          .byte 0x40
          .byte 0x24
          .byte 0xe8
          .byte 0x1a
          .byte 0x11
          .byte 0xf5
          .byte 0xb7
          .byte 0xef
          .byte 0x3f
          .byte 0x20
          .byte 0x20
          .byte 0x3b
          .byte 0xaf
          .byte 0x1f
          .byte 0xd4
          .byte 0xf0
          .byte 0x3f
          .byte 0x6a
          .byte 0xb7
          .byte 0x46
          .byte 0x4e
          .byte 0x8c
          .byte 0x12
          .byte 0xe4
          .byte 0x3f
          .byte 0x9a
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0x99
          .byte 0xd9
          .byte 0x3f
          .byte 0xc0
          .byte 0x1b
          .byte 0xe2
          .byte 0x2e
          .byte 0x76
          .byte 0xcd
          .byte 0xc0
          .byte 0x3f
          .byte 0x18
          .byte 0xb9
          .byte 0x97
          .byte 0x74
          .byte 0x47
          .byte 0xa4
          .byte 0xe5
          .byte 0x3f
          .byte 0x15
          .byte 0x46
          .byte 0x5e
          .byte 0xa4
          .byte 0x57
          .byte 0xe3
          .byte 0xdf
          .byte 0x3f
          .byte 0x24
          .byte 0xe8
          .byte 0x1a
          .byte 0x11
          .byte 0xf5
          .byte 0xb7
          .byte 0xef
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x3f
          .byte 0xde
          .byte 0xd1
          .byte 0x63
          .byte 0x79
          .byte 0xee
          .byte 0x84
          .byte 0xd8
          .byte 0x3f
          .byte 0x81
          .byte 0x10
          .byte 0x35
          .byte 0x47
          .byte 0x43
          .byte 0x61
          .byte 0xd6
          .byte 0x3f
          .byte 0x6a
          .byte 0xb7
          .byte 0x46
          .byte 0x4e
          .byte 0x8c
          .byte 0x12
          .byte 0xe4
          .byte 0x3f
          .byte 0x58
          .byte 0x74
          .byte 0xac
          .byte 0x26
          .byte 0x5d
          .byte 0xc6
          .byte 0xd3
          .byte 0x3f
          .byte 0xde
          .byte 0xd1
          .byte 0x63
          .byte 0x79
          .byte 0xee
          .byte 0x84
          .byte 0xd8
          .byte 0x3f
          .byte 0x5e
          .byte 0xb8
          .byte 0x5a
          .byte 0x4f
          .byte 0xca
          .byte 0x2a
          .byte 0xd7
          .byte 0x3f
          .byte 0x20
          .byte 0x20
          .byte 0x3b
          .byte 0xaf
          .byte 0x1f
          .byte 0xd4
          .byte 0xf0
          .byte 0x3f
          .byte 0xde
          .byte 0xd1
          .byte 0x63
          .byte 0x79
          .byte 0xee
          .byte 0x84
          .byte 0xd8
          .byte 0x3f
          .byte 0xb8
          .byte 0x1e
          .byte 0x85
          .byte 0xeb
          .byte 0x51
          .byte 0xb8
          .byte 0xbe
          .byte 0x3f
.L_6442e8:
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

#-----------------------------------
.align 16
.globl stderr_copy
.type stderr_copy, @object
#-----------------------------------
stderr_copy:
          .zero 8
.L_644308:
          .zero 8
.L_644310:
          .zero 8
.L_644318:
          .zero 8
.L_644320:
          .zero 32
.L_644340:
          .zero 4088
.L_645338:
          .zero 8
.L_645340:
          .zero 32
.L_645360:
          .zero 4088
.L_646358:
          .zero 8
.L_646360:
          .zero 32
.L_646380:
          .zero 4088
.L_647378:
          .zero 8
.L_647380:
          .zero 32
.L_6473a0:
          .zero 4088
.L_648398:
          .zero 8
.L_6483a0:
          .zero 32
.L_6483c0:
          .zero 4088
.L_6493b8:
          .zero 8
.L_6493c0:
          .zero 32
.L_6493e0:
          .zero 4088
.L_64a3d8:
          .zero 8
.L_64a3e0:
          .zero 32
.L_64a400:
          .zero 8
.L_64a408:
          .zero 152
.L_64a4a0:
          .zero 8
.L_64a4a8:
          .zero 24
.L_64a4c0:
          .zero 8
.L_64a4c8:
          .zero 8
.L_64a4d0:
          .zero 144
.L_64a560:
          .zero 8
.L_64a568:
          .zero 24
.L_64a580:
          .zero 8
.L_64a588:
          .zero 8
.L_64a590:
          .zero 144
.L_64a620:
          .zero 8
.L_64a628:
#===================================
# end section .bss
#===================================
