#===================================
.intel_syntax noprefix
#===================================

nop
nop
nop
nop
nop
nop
nop
nop

#===================================
.section .interp ,"a",@progbits
.align 16
#===================================

          .byte 0x2f
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x36
          .byte 0x34
          .byte 0x2f
          .byte 0x6c
          .byte 0x64
          .byte 0x2d
          .byte 0x6c
          .byte 0x69
          .byte 0x6e
          .byte 0x75
          .byte 0x78
          .byte 0x2d
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x2d
          .byte 0x36
          .byte 0x34
          .byte 0x2e
          .byte 0x73
          .byte 0x6f
          .byte 0x2e
          .byte 0x32
          .byte 0x0
#===================================
# end section .interp
#===================================

#===================================
.text
.align 16
#===================================

#-----------------------------------
.align 16
.globl main
.type main, @notype
#-----------------------------------
main:

            push R12
            push RBP
            push RBX
.L_4012c4:

            mov RDI,QWORD PTR [RSI+8]
            lea RSI,QWORD PTR [RIP+.L_429a16]
            call fopen@PLT

            test RAX,RAX
            je .L_401348

            xor ESI,ESI
            mov EDX,2
            mov RBX,RAX
            mov RDI,RAX
            call fseek@PLT

            mov RDI,RBX
            call ftell@PLT

            mov RDI,RBX
            mov RBP,RAX
            call rewind@PLT

            mov RDI,RBP
            call malloc@PLT

            test RAX,RAX
            mov R12,RAX
            je .L_401368

            mov RCX,RBX
            mov RDX,RBP
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            cmp RBP,RAX
            jne .L_401352

            mov RSI,RBP
            mov RDI,R12
            call .L_401850

            mov RDI,R12
            call free@PLT

            mov RDI,RBX
            call fclose@PLT

            pop RBX
.L_401342:

            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_401348:

            mov EDI,1
            call exit@PLT
.L_401352:

            lea RDI,QWORD PTR [RIP+.L_429a27]
            call puts@PLT

            mov EDI,3
            call exit@PLT
.L_401368:

            lea RDI,QWORD PTR [RIP+.L_429a19]
            call puts@PLT

            mov EDI,2
            call exit@PLT
.L_40137e:

            nop
            nop
.L_4013b0:

            ret 
.L_4013b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4013c0:

            push RBP
            mov EAX,6526840
            cmp RAX,6526840
            mov RBP,RSP
            je .L_4013e8

            mov EAX,0
            test RAX,RAX
            je .L_4013e8

            pop RBP
            mov EDI,6526840
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4013e8:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4013f0:

            mov ESI,6526840
            push RBP
            sub RSI,6526840
            mov RBP,RSP
            sar RSI,3
            mov RAX,RSI
            shr RAX,63
            add RSI,RAX
            sar RSI,1
            je .L_401428

            mov EAX,0
            test RAX,RAX
            je .L_401428

            pop RBP
            mov EDI,6526840
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401428:

            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401460:

            push RBP
            mov RBP,RSP
            pop RBP
            jmp .L_4013f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401470:

            push RBX

            mov RDX,QWORD PTR [RDI]
            lea RSI,QWORD PTR [RIP+.L_4299c4]
            mov RBX,RDI
            xor EAX,EAX
            mov EDI,1
            call __printf_chk@PLT

            mov RDX,QWORD PTR [RBX+8]
            lea RSI,QWORD PTR [RIP+.L_4299e0]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov RDX,QWORD PTR [RBX+16]
            lea RSI,QWORD PTR [RIP+.L_4299ca]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov RDX,QWORD PTR [RBX+24]
            lea RSI,QWORD PTR [RIP+.L_4299d1]
            mov EDI,1
            xor EAX,EAX
            call __printf_chk@PLT

            mov RDX,QWORD PTR [RBX+32]
            lea RSI,QWORD PTR [RIP+.L_4299d8]
            mov EDI,1
            pop RBX

            xor EAX,EAX
            jmp __printf_chk@PLT
.L_4014e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4014f0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            call free@PLT

            mov RDI,QWORD PTR [RBX+16]
            call free@PLT

            mov RDI,QWORD PTR [RBX+24]
            call free@PLT

            mov RDI,QWORD PTR [RBX+32]
            pop RBX
            jmp free@PLT
.L_401519:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401520:

            push R12
            push RBP
            mov RCX,RDI
            push RBX
            mov EDI,4
            sub RSP,32
.L_401530:

            lea RDX,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call gcry_mpi_aprint@PLT

            mov RBP,QWORD PTR [RSP+8]
            xor EDX,EDX
            mov R8,QWORD PTR [RSP+16]
            cmp BYTE PTR [RBP],48
            mov RBX,RBP
            jne .L_4015a5

            mov RSI,R8
            sub RSI,2
            je .L_401608

            lea RAX,QWORD PTR [RBP+1]
            xor ECX,ECX
            jmp .L_40158c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401580:

            add RAX,1
            cmp RDX,RSI
            je .L_401598

            mov RCX,RDX
.L_40158c:

            cmp BYTE PTR [RAX],48
            lea RDX,QWORD PTR [RCX+1]
            mov RBX,RAX
            je .L_401580
.L_401598:

            test DL,1
            je .L_4015a5

            lea RBX,QWORD PTR [RBP+RCX*1]
            mov RDX,RCX
.L_4015a5:

            lea RDI,QWORD PTR [RIP+.L_4299e7]
            mov ECX,2
            mov RSI,RBX

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta AL
            sbb AL,0
            test AL,AL
            jne .L_4015c8

            add RDX,1
            lea RBX,QWORD PTR [RBP+RDX*1]
.L_4015c8:

            mov RDI,R8
            sub RDI,RDX
            call malloc@PLT

            mov RSI,RBX
            mov RDI,RAX
            mov R12,RAX
            call strcpy@PLT

            mov RDI,RBP
            call free@PLT

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            mov RAX,R12
            jne .L_401612

            add RSP,32
.L_401600:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401608:

            xor EDX,EDX
            mov R8D,2
            jmp .L_4015a5
.L_401612:

            call __stack_chk_fail@PLT
.L_401617:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401620:

            push R14
            push R13
            mov RAX,RDI
            push R12
            push RBP
            mov R14,RDX
            push RBX
            mov R12D,ECX
            mov R13,R8
            movsxd RCX,ESI
            xor R8D,R8D
            mov ESI,5
            sub RSP,32
.L_401643:

            mov EBP,R9D
            mov RDX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RDX
            xor EDX,EDX
            mov RDI,RSP
            mov RDX,RAX
            mov RBX,QWORD PTR [RSP+80]
            call gcry_mpi_scan@PLT

            mov RDI,QWORD PTR [RSP]
            call .L_401520

            lea RDI,QWORD PTR [RSP+8]
            xor R8D,R8D
            movsxd RCX,R12D
            mov RDX,R14
            mov ESI,5
            mov QWORD PTR [RBX+8],RAX
            call gcry_mpi_scan@PLT

            mov RDI,QWORD PTR [RSP+8]
            call .L_401520

            lea RDI,QWORD PTR [RSP+16]
            xor R8D,R8D
            movsxd RCX,EBP
            mov RDX,R13
            mov ESI,5
            mov QWORD PTR [RBX+16],RAX
            call gcry_mpi_scan@PLT

            mov RDI,QWORD PTR [RSP+16]
            call .L_401520

            xor EDI,EDI
            mov QWORD PTR [RBX+24],RAX
            call gcry_mpi_new@PLT

            mov RCX,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+16]
            mov RBP,RAX
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RAX
            call gcry_mpi_powm@PLT

            mov RDI,RBP
            call .L_401520

            mov RDI,QWORD PTR [RSP]
            mov QWORD PTR [RBX+32],RAX
            call gcry_mpi_release@PLT

            mov RDI,QWORD PTR [RSP+8]
            call gcry_mpi_release@PLT

            mov RDI,QWORD PTR [RSP+16]
            call gcry_mpi_release@PLT

            mov RDI,RBP
            call gcry_mpi_release@PLT

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40172d

            add RSP,32
.L_401724:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_40172d:

            call __stack_chk_fail@PLT
.L_401732:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401740:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,56
.L_40174e:

            mov QWORD PTR [RSP+24],R8
            mov DWORD PTR [RSP+20],R9D
            mov DWORD PTR [RSP+32],ECX
            mov QWORD PTR [RSP+40],RDI
            mov DWORD PTR [RSP+36],ESI
            mov QWORD PTR [RSP+8],RDX
            mov R13,QWORD PTR [RSP+112]
            call .L_4052f0

            mov R15,RAX
            call .L_4045b0

            mov R12,RAX
            call .L_4045b0

            mov RBP,RAX
            call .L_4045b0

            mov RBX,RAX
            call .L_4045b0

            mov ESI,DWORD PTR [RSP+36]
            mov RDI,QWORD PTR [RSP+40]
            mov RDX,R12
            mov R14,RAX
            call .L_404940

            mov ECX,DWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP+8]
            mov RDX,RBP
            mov ESI,ECX
            call .L_404940

            mov R9D,DWORD PTR [RSP+20]
            mov R8,QWORD PTR [RSP+24]
            mov RDX,RBX
            mov ESI,R9D
            mov RDI,R8
            call .L_404940

            mov RDI,R12
            call .L_407730

            mov RDI,RBP
            mov QWORD PTR [R13+8],RAX
            call .L_407730

            mov RDI,RBX
            mov QWORD PTR [R13+16],RAX
            call .L_407730

            mov R8,R15
            mov RCX,R12
            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R14
            mov QWORD PTR [R13+24],RAX
            call .L_403c70

            mov RDI,R14
            call .L_407730

            mov RDI,R12
            mov QWORD PTR [R13+32],RAX
            call .L_404540

            mov RDI,RBP
            call .L_404540

            mov RDI,RBX
            call .L_404540

            mov RDI,R14
            call .L_404540

            add RSP,56
.L_40183b:

            mov RDI,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_405390
.L_40184d:

            nop
            nop
            nop
.L_401850:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,120
.L_40185e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+104],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RIP+.L_4299ea]
            cmp RSI,4
            mov QWORD PTR [RSP+24],0
            mov QWORD PTR [RSP+32],0
            mov QWORD PTR [RSP+40],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RIP+.L_4299f2]
            mov QWORD PTR [RSP+48],0
            mov QWORD PTR [RSP+72],0
            mov QWORD PTR [RSP+80],0
            mov QWORD PTR [RSP+64],RAX
            mov QWORD PTR [RSP+88],0
            mov QWORD PTR [RSP+96],0
            jbe .L_401984

            movzx EAX,BYTE PTR [RDI]
            sub RSI,2
            movzx EDX,BYTE PTR [RDI+1]
            lea RBX,QWORD PTR [RAX+1]
            lea RBP,QWORD PTR [RDX+1]
            mov RAX,RSI
            imul RBX,RSI
            shr RBX,8
            sub RAX,RBX
            imul RBP,RAX
            shr RBP,8
            lea RDX,QWORD PTR [RBX+RBP*1]
            sub RAX,RBP
            lea RCX,QWORD PTR [RDX+RAX*1]
            cmp RSI,RCX
            jne .L_4019eb

            lea R10,QWORD PTR [RDI+2]
            sub RSP,8
.L_40191d:

            lea R15,QWORD PTR [RDI+RDX*1+2]
            lea R14,QWORD PTR [RDI+RBX*1+2]
            mov ECX,EBP
            mov ESI,EBX
            mov QWORD PTR [RSP+16],R10
            lea R13,QWORD PTR [RSP+24]
            mov R8,R15
            mov RDX,R14
            mov RDI,R10
            mov R9D,EAX
            push R13
            mov QWORD PTR [RSP+16],RAX
            call .L_401740

            mov RSI,QWORD PTR [RSP+40]
            lea R8,QWORD PTR [RIP+.L_4299e8]
            mov ECX,2
            mov RDI,R8

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            pop RCX
            pop RSI
            seta DL
            sbb DL,0
            test DL,DL
            lea R12,QWORD PTR [RSP+64]
            jne .L_4019a8
.L_401974:

            mov RDI,R13
            call .L_4014f0

            mov RDI,R12
            call .L_4014f0
.L_401984:

            xor EAX,EAX
            mov RCX,QWORD PTR [RSP+104]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4019e6

            add RSP,120
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4019a8:

            mov RSI,QWORD PTR [RSP+40]
            mov ECX,2
            mov RDI,R8
            mov RAX,QWORD PTR [RSP]

            repe cmpsb BYTE PTR [RSI],BYTE PTR [RDI]

            seta DL
            sbb DL,0
            test DL,DL
            je .L_401974

            sub RSP,8
            mov R9D,EAX
            mov RDX,R14
            push R12
            mov RDI,QWORD PTR [RSP+24]
            mov R8,R15
            mov ECX,EBP
            mov ESI,EBX
            call .L_401620

            pop RAX
            pop RDX
            jmp .L_401974
.L_4019e6:

            call __stack_chk_fail@PLT
.L_4019eb:

            lea RCX,QWORD PTR [RIP+.L_429a40]
            lea RSI,QWORD PTR [RIP+.L_4299fc]
            lea RDI,QWORD PTR [RIP+.L_429a06]
            mov EDX,130
            call __assert_fail@PLT
.L_401a0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_401a10:

            push RBP
            push RBX
            mov RBP,RDI
            mov EBX,ESI
            sub RSP,24
.L_401a1b:

            cmp DWORD PTR [RDI+12],ESI
            jl .L_401a90
.L_401a20:

            movsxd RSI,EBX
            shl RSI,3
            test RSI,RSI
            je .L_401a57

            movsxd RCX,ECX
            movsxd R8,R8D
            xor EAX,EAX
            add RDX,RCX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401a40:

            movzx EDI,BYTE PTR [RDX]
            mov RCX,QWORD PTR [RBP]
            add RDX,R8
            mov BYTE PTR [RCX+RAX*1],DIL
            add RAX,1
            cmp RAX,RSI
            jne .L_401a40
.L_401a57:

            test EBX,EBX
            mov DWORD PTR [RBP+8],EBX
            mov EAX,1
            jle .L_401a88

            mov RAX,QWORD PTR [RBP]
            lea RAX,QWORD PTR [RAX+RSI*1-8]
            nop
            nop
            nop
            nop
.L_401a70:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_401a80

            sub EBX,1
            jne .L_401a70
.L_401a80:

            mov DWORD PTR [RBP+8],EBX
            mov EAX,1
.L_401a88:

            add RSP,24
.L_401a8c:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_401a90:

            mov DWORD PTR [RSP+12],R8D
            mov DWORD PTR [RSP+8],ECX
            mov QWORD PTR [RSP],RDX
            call .L_404630

            mov RSI,RAX
            xor EAX,EAX
            mov RDX,QWORD PTR [RSP]
            test RSI,RSI
            mov ECX,DWORD PTR [RSP+8]
            mov R8D,DWORD PTR [RSP+12]
            jne .L_401a20

            add RSP,24
            pop RBX
            pop RBP
            ret 
.L_401ac4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401ad0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_401ade:

            mov EAX,DWORD PTR [RDX+20]
            and EAX,4
            mov DWORD PTR [RSP+8],EAX
            jne .L_401c58

            mov R13,RDI
            mov R14,RSI
            mov RDI,RCX
            mov RBP,RDX
            mov RBX,RCX
            call .L_405420

            cmp R13,R14
            je .L_401bf8

            cmp RBP,R13
            mov R15,R13
            je .L_401bf8
.L_401b17:

            mov RDI,RBX
            call .L_4055b0

            test R15,R15
            mov R12,RAX
            je .L_401b2c

            test RAX,RAX
            jne .L_401b50
.L_401b2c:

            mov RDI,RBX
            call .L_405530
.L_401b34:

            mov EAX,DWORD PTR [RSP+8]
            add RSP,24
.L_401b3c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401b50:

            mov RSI,R14
            mov RDI,RAX
            call .L_404650

            test RAX,RAX
            je .L_401b2c

            mov RDI,RBP
            call .L_404490

            mov DWORD PTR [RSP+12],EAX
            mov EAX,DWORD PTR [RBP+8]
            test EAX,EAX
            jle .L_401b80

            mov RAX,QWORD PTR [RBP]
            test BYTE PTR [RAX],1
            jne .L_401c10
.L_401b80:

            mov ESI,1
            mov RDI,R15
            call .L_4048e0

            test EAX,EAX
            je .L_401b2c
.L_401b91:

            cmp DWORD PTR [RSP+12],1
            mov R14D,1
            jg .L_401bb3

            jmp .L_401c30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401ba8:

            add R14D,1
            cmp DWORD PTR [RSP+12],R14D
            je .L_401c30
.L_401bb3:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,R12
            call .L_408d30

            test EAX,EAX
            je .L_401b2c

            mov ESI,R14D
            mov RDI,RBP
            call .L_404d50

            test EAX,EAX
            je .L_401ba8

            mov RCX,RBX
            mov RDX,R12
            mov RSI,R15
            mov RDI,R15
            call .L_406be0

            test EAX,EAX
            jne .L_401ba8

            jmp .L_401b2c
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401bf8:

            mov RDI,RBX
            call .L_4055b0

            mov R15,RAX
            jmp .L_401b17
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401c10:

            mov RSI,R14
            mov RDI,R15
            call .L_404650

            test RAX,RAX
            jne .L_401b91

            jmp .L_401b2c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401c30:

            cmp R15,R13
            mov DWORD PTR [RSP+8],1
            je .L_401b2c

            mov RSI,R15
            mov RDI,R13
            call .L_404650

            jmp .L_401b2c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401c58:

            lea RCX,QWORD PTR [RIP+.L_4040cc]
            mov R8D,149
            mov EDX,66
            mov ESI,123
            mov EDI,3
            call .L_416a00

            mov DWORD PTR [RSP+8],4294967295
            jmp .L_401b34
.L_401c86:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401c90:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,392
.L_401ca1:

            mov EBX,DWORD PTR [RDX+20]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+376],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RSI
            and EBX,4
            jne .L_401f40

            mov R14,RDI
            mov RDI,RDX
            mov R12,RDX
            mov R15,RCX
            mov RBP,R8
            call .L_404490

            test EAX,EAX
            mov R13D,EAX
            je .L_401f10

            mov RDI,RBP
            call .L_405420

            mov RDI,RBP
            call .L_4055b0

            mov RDI,RBP
            mov QWORD PTR [RSP+16],RAX
            call .L_4055b0

            test RAX,RAX
            mov QWORD PTR [RSP+112],RAX
            je .L_401ec0

            cmp QWORD PTR [RSP+16],0
            je .L_401ec0

            mov QWORD PTR [RSP+32],RAX
            lea RAX,QWORD PTR [RSP+48]
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_411480

            mov EDI,DWORD PTR [R15+16]
            mov R9,QWORD PTR [RSP+32]
            test EDI,EDI
            je .L_401f28

            mov RDI,QWORD PTR [RSP+16]
            mov RSI,R15
            call .L_404650

            test RAX,RAX
            je .L_401eca

            mov RSI,QWORD PTR [RSP+16]
            mov RDX,RBP
            mov DWORD PTR [RSI+16],0
.L_401d68:

            mov RDI,QWORD PTR [RSP+8]
            call .L_411540

            test EAX,EAX
            mov R9,QWORD PTR [RSP+32]
            jle .L_401eca

            mov RSI,QWORD PTR [RSP+24]
            mov RCX,RBP
            mov RDX,R15
            mov RDI,R9
            mov QWORD PTR [RSP+24],R9
            call .L_407250

            test EAX,EAX
            je .L_401eca

            mov R9,QWORD PTR [RSP+24]
            mov ESI,DWORD PTR [R9+8]
            test ESI,ESI
            je .L_401f70

            cmp R13D,671
            jg .L_401f98

            cmp R13D,239
            jg .L_401f88

            cmp R13D,79
            jg .L_401fa5

            cmp R13D,23
            jle .L_401fb2

            mov DWORD PTR [RSP+32],3
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_401df0:

            mov RCX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+16]
            mov R8,RBP
            mov RDX,R9
            mov RSI,R9
            call .L_411890

            test EAX,EAX
            je .L_401eca

            mov EAX,DWORD PTR [RSP+32]
            lea R15,QWORD PTR [RSP+112]
            lea ECX,DWORD PTR [RAX-1]
            mov EAX,1
            shl EAX,CL
            sub EAX,2
            lea RAX,QWORD PTR [R15+RAX*8+8]
            mov QWORD PTR [RSP+24],RAX
.L_401e30:

            mov RDI,RBP
            call .L_4055b0

            test RAX,RAX
            mov QWORD PTR [R15+8],RAX
            je .L_401eca

            mov RCX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            mov R8,RBP
            mov RSI,QWORD PTR [R15]
            mov RDI,RAX
            call .L_411890

            test EAX,EAX
            je .L_401eca

            add R15,8
            cmp R15,QWORD PTR [RSP+24]
            jne .L_401e30
.L_401e6c:

            mov ESI,1
            mov RDI,R14
            call .L_4048e0

            test EAX,EAX
            je .L_401eca

            lea EAX,DWORD PTR [R13-1]
            mov DWORD PTR [RSP+16],1
            mov DWORD PTR [RSP+40],EAX
.L_401e8d:

            mov ESI,DWORD PTR [RSP+40]
            mov RDI,R12
            call .L_404d50

            test EAX,EAX
            jne .L_401fbf

            mov ECX,DWORD PTR [RSP+16]
            test ECX,ECX
            je .L_4020ad
.L_401ead:

            mov EDX,DWORD PTR [RSP+40]
            test EDX,EDX
            jne .L_4020d0
.L_401eb9:

            mov EBX,1
            jmp .L_401eca
.L_401ec0:

            lea RAX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+8],RAX
.L_401eca:

            mov RDI,RBP
            call .L_405530

            mov RDI,QWORD PTR [RSP+8]
            call .L_411500
.L_401edc:

            mov RCX,QWORD PTR [RSP+376]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_4020da

            add RSP,392
.L_401efc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401f10:

            mov ESI,1
            mov RDI,R14
            call .L_4048e0

            mov EBX,EAX
            jmp .L_401edc
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401f28:

            mov QWORD PTR [RSP+32],R9
            mov RDX,RBP
            mov RSI,R15
            jmp .L_401d68
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_401f40:

            lea RCX,QWORD PTR [RIP+.L_4040cc]
            mov R8D,280
            mov EDX,66
            mov ESI,125
            mov EDI,3
            mov EBX,4294967295
            call .L_416a00

            jmp .L_401edc
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_401f70:

            xor ESI,ESI
            mov RDI,R14
            mov EBX,1
            call .L_4048e0

            jmp .L_401eca
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_401f88:

            mov DWORD PTR [RSP+32],5
            jmp .L_401df0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401f98:

            mov DWORD PTR [RSP+32],6
            jmp .L_401df0
.L_401fa5:

            mov DWORD PTR [RSP+32],4
            jmp .L_401df0
.L_401fb2:

            mov DWORD PTR [RSP+32],1
            jmp .L_401e6c
.L_401fbf:

            cmp DWORD PTR [RSP+32],1
            je .L_4020df

            mov R13D,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+24],0
            mov DWORD PTR [RSP+44],1
            sub R13D,1
            js .L_40202d

            mov R15D,1
            jmp .L_401ffa
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_401ff0:

            sub R13D,1
            cmp R13D,-1
            je .L_40202d
.L_401ffa:

            mov ESI,R13D
            mov RDI,R12
            call .L_404d50

            test EAX,EAX
            je .L_402022

            mov ECX,R15D
            sub ECX,DWORD PTR [RSP+24]
            mov EAX,DWORD PTR [RSP+44]
            mov DWORD PTR [RSP+24],R15D
            shl EAX,CL
            or EAX,1
            mov DWORD PTR [RSP+44],EAX
.L_402022:

            add R15D,1
            cmp R15D,DWORD PTR [RSP+32]
            jne .L_401ff0
.L_40202d:

            mov EAX,DWORD PTR [RSP+16]
            test EAX,EAX
            je .L_40207e
.L_402035:

            mov EAX,DWORD PTR [RSP+44]
            mov RCX,QWORD PTR [RSP+8]
            mov R8,RBP
            mov RSI,R14
            mov RDI,R14
            sar EAX,1
            cdqe 
            mov RDX,QWORD PTR [RSP+RAX*8+112]
            call .L_411890

            test EAX,EAX
            je .L_401eca

            mov R15D,DWORD PTR [RSP+24]
            add R15D,1
            sub DWORD PTR [RSP+40],R15D
            js .L_401eb9

            mov DWORD PTR [RSP+16],0
            jmp .L_401e8d
.L_40207e:

            mov RCX,QWORD PTR [RSP+8]
            mov R8,RBP
            mov RDX,R14
            mov RSI,R14
            mov RDI,R14
            call .L_411890

            test EAX,EAX
            je .L_401eca

            add DWORD PTR [RSP+16],1
            mov EAX,DWORD PTR [RSP+16]
            cmp EAX,DWORD PTR [RSP+24]
            jle .L_40207e

            jmp .L_402035
.L_4020ad:

            mov RCX,QWORD PTR [RSP+8]
            mov R8,RBP
            mov RDX,R14
            mov RSI,R14
            mov RDI,R14
            call .L_411890

            test EAX,EAX
            jne .L_401ead

            jmp .L_401eca
.L_4020d0:

            sub DWORD PTR [RSP+40],1
            jmp .L_401e8d
.L_4020da:

            call __stack_chk_fail@PLT
.L_4020df:

            mov DWORD PTR [RSP+44],1
            mov DWORD PTR [RSP+24],0
            jmp .L_40202d
.L_4020f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402100:

            push RBP
            mov RBP,RSP
            push R15
            push R14
            push R13
            push R12
            push RBX
            sub RSP,200
.L_402114:

            mov QWORD PTR [RBP-136],RDI
            mov QWORD PTR [RBP-120],RSI
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RBP-56],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RCX]
            mov QWORD PTR [RBP-128],R9
            test BYTE PTR [RAX],1
            je .L_4023f0

            mov RDI,RDX
            mov R13,RDX
            mov R14,RCX
            mov R12,R8
            movsxd RBX,DWORD PTR [RCX+8]
            call .L_404490

            test EAX,EAX
            mov DWORD PTR [RBP-144],EAX
            je .L_4023b0

            mov RDI,R12
            call .L_405420

            mov RAX,QWORD PTR [RBP-128]
            test RAX,RAX
            mov QWORD PTR [RBP-176],RAX
            je .L_4025e0
.L_40217d:

            mov RAX,QWORD PTR [RBP-120]
            mov EAX,DWORD PTR [RAX+8]
            cmp EAX,16
            je .L_402420
.L_40218d:

            cmp EAX,8
            je .L_4024a0
.L_402196:

            cmp DWORD PTR [RBP-144],306
            lea EAX,DWORD PTR [RBX+RBX*1]
            jle .L_4025a0

            test BL,7
            jne .L_402480

            mov ESI,EBX
            mov DWORD PTR [RBP-168],32
            mov DWORD PTR [RBP-184],5
            shl ESI,4
.L_4021cb:

            movzx ECX,BYTE PTR [RBP-184]
            mov EDX,EBX
            shl EDX,CL
            mov ECX,DWORD PTR [RBP-168]
            cmp ECX,EAX
            cmovge EAX,ECX
            add EAX,EDX
            lea R15D,DWORD PTR [RSI+RAX*8]
            cmp R15D,3071
            lea EDI,DWORD PTR [R15+64]
            jg .L_402550

            movsxd RDI,EDI
            add RDI,30
            and RDI,-16
            sub RSP,RDI
            lea RAX,QWORD PTR [RSP+15]
            and RAX,-64
            lea RSI,QWORD PTR [RAX+64]
            movsxd RAX,R15D
            cmp RAX,8
            mov QWORD PTR [RBP-152],RAX
            mov QWORD PTR [RBP-160],RSI
            mov RDI,RSI
            jb .L_402239

            shr RAX,3
            mov RCX,RAX
            xor EAX,EAX

            rep stosq QWORD PTR [RDI]
.L_402239:

            test BYTE PTR [RBP-152],4
            je .L_40224c

            mov DWORD PTR [RDI],0
            add RDI,4
.L_40224c:

            test BYTE PTR [RBP-152],2
            je .L_40225f

            xor ESI,ESI
            add RDI,2
            mov WORD PTR [RDI-2],SI
.L_40225f:

            test BYTE PTR [RBP-152],1
            je .L_40226b

            mov BYTE PTR [RDI],0
.L_40226b:

            mov QWORD PTR [RBP-200],0
.L_402276:

            movsxd RAX,DWORD PTR [RBP-168]
            movsxd RSI,EBX
            mov RCX,QWORD PTR [RBP-160]
            lea R15,QWORD PTR [RSI*8]
            mov QWORD PTR [RBP-192],RSI
            mov RSI,QWORD PTR [R14]
            mov DWORD PTR [RBP-72],0
            mov DWORD PTR [RBP-104],0
            mov DWORD PTR [RBP-68],EBX
            mov DWORD PTR [RBP-100],EBX
            mov QWORD PTR [RBP-216],RAX
            imul RAX,R15
            add RCX,RAX
            cmp QWORD PTR [RSI+R15*1-8],0
            lea RAX,QWORD PTR [RCX+R15*1]
            mov QWORD PTR [RBP-112],RCX
            mov QWORD PTR [RBP-80],RAX
            movabs RAX,8589934592
            mov QWORD PTR [RBP-64],RAX
            mov QWORD PTR [RBP-96],RAX
            lea RAX,QWORD PTR [R15-8]
            mov QWORD PTR [RBP-224],RAX
            jns .L_402450

            mov RAX,QWORD PTR [RSI]
            neg RAX
            cmp EBX,1
            mov QWORD PTR [RCX],RAX
            jle .L_402324

            lea EAX,DWORD PTR [RBX-2]
            lea RDI,QWORD PTR [RAX*8+16]
            mov EAX,8
            nop
            nop
.L_402310:

            mov RDX,QWORD PTR [RSI+RAX*1]
            not RDX
            mov QWORD PTR [RCX+RAX*1],RDX
            add RAX,8
            cmp RDI,RAX
            jne .L_402310
.L_402324:

            mov DWORD PTR [RBP-104],EBX
.L_402327:

            mov RAX,QWORD PTR [RBP-120]
            mov ECX,DWORD PTR [RAX+16]
            test ECX,ECX
            jne .L_402346

            mov RDI,QWORD PTR [RBP-120]
            mov RSI,R14
            call .L_404b00

            test EAX,EAX
            js .L_402ba0
.L_402346:

            lea RAX,QWORD PTR [RBP-80]
            mov RDX,QWORD PTR [RBP-120]
            xor EDI,EDI
            mov R8,R12
            mov RCX,R14
            mov RSI,RAX
            mov QWORD PTR [RBP-208],RAX
            call .L_41b130

            test EAX,EAX
            jne .L_402628
.L_40236d:

            xor R15D,R15D
.L_402370:

            cmp QWORD PTR [RBP-128],0
            je .L_4030f7
.L_40237b:

            mov RSI,QWORD PTR [RBP-152]
            mov RDI,QWORD PTR [RBP-160]
            call .L_41aa70

            mov RAX,QWORD PTR [RBP-200]
            test RAX,RAX
            je .L_4023a2

            mov RDI,RAX
            call .L_418aa0
.L_4023a2:

            mov RDI,R12
            call .L_405530

            jmp .L_4023c4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4023b0:

            mov RDI,QWORD PTR [RBP-136]
            mov ESI,1
            call .L_4048e0

            mov R15D,EAX
.L_4023c4:

            mov RBX,QWORD PTR [RBP-56]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,R15D
            jne .L_4030f2

            lea RSP,QWORD PTR [RBP-40]
            pop RBX
            pop R12
            pop R13
            pop R14
            pop R15
            pop RBP
.L_4023e8:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4023f0:

            lea RCX,QWORD PTR [RIP+.L_4040cc]
            mov R8D,668
            mov EDX,102
            mov ESI,124
            mov EDI,3
            xor R15D,R15D
            call .L_416a00

            jmp .L_4023c4
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402420:

            cmp DWORD PTR [R13+8],16
            jne .L_402196

            mov RDI,R14
            call .L_404490

            cmp EAX,1024
            je .L_40304d
.L_40243e:

            mov RAX,QWORD PTR [RBP-120]
            mov EAX,DWORD PTR [RAX+8]
            jmp .L_40218d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402450:

            call .L_404350

            mov RCX,QWORD PTR [RBP-176]
            lea RSI,QWORD PTR [RBP-112]
            mov R8,R12
            mov RDI,RSI
            mov RSI,RAX
            lea RDX,QWORD PTR [RCX+8]
            call .L_411c70

            test EAX,EAX
            je .L_40236d

            jmp .L_402327
          .byte 0x90
.L_402480:

            mov DWORD PTR [RBP-168],32
            xor ESI,ESI
            mov DWORD PTR [RBP-184],5
            jmp .L_4021cb
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4024a0:

            cmp DWORD PTR [R13+8],8
            jne .L_402196

            mov RDI,R14
            call .L_404490

            cmp EAX,512
            jne .L_402196

            mov RAX,QWORD PTR [RBP-136]
            cmp DWORD PTR [RAX+12],7
            jle .L_4030d3
.L_4024cf:

            mov RAX,QWORD PTR [RBP-176]
            mov RBX,QWORD PTR [RBP-136]
            mov RCX,QWORD PTR [R14]
            mov RDX,QWORD PTR [R13]
            mov R9,QWORD PTR [RAX+8]
            mov R8,QWORD PTR [RAX+80]
            mov RAX,QWORD PTR [RBP-120]
            mov RDI,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RAX]
            call .L_40db00

            mov RCX,QWORD PTR [RBX]
            mov DWORD PTR [RBX+16],0
            mov EDX,8
            lea RAX,QWORD PTR [RCX+56]
            sub RCX,8
.L_402512:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_402527

            sub EDX,1
            cmp RAX,RCX
            jne .L_402512
.L_402525:

            xor EDX,EDX
.L_402527:

            mov RAX,QWORD PTR [RBP-136]
            mov R15D,1
            mov DWORD PTR [RAX+8],EDX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402540:

            cmp QWORD PTR [RBP-128],0
            jne .L_4023a2

            jmp .L_402611
.L_402550:

            lea RSI,QWORD PTR [RIP+.L_4040cc]
            mov EDX,756
            call .L_418820

            test RAX,RAX
            mov QWORD PTR [RBP-200],RAX
            je .L_402b90

            mov RAX,QWORD PTR [RBP-200]
            xor ESI,ESI
            and RAX,-64
            lea RDI,QWORD PTR [RAX+64]
            movsxd RAX,R15D
            mov RDX,RAX
            mov QWORD PTR [RBP-152],RAX
            mov QWORD PTR [RBP-160],RDI
            call memset@PLT

            jmp .L_402276
.L_4025a0:

            mov EDI,DWORD PTR [RBP-144]
            cmp EDI,89
            jg .L_402b58

            cmp EDI,23
            mov ECX,2
            mov EDX,8
            cmovl EDX,ECX
            mov ESI,0
            mov DWORD PTR [RBP-168],EDX
            setge DL
            movzx EDX,DL
            lea EDX,DWORD PTR [RDX+RDX*1+1]
            mov DWORD PTR [RBP-184],EDX
            jmp .L_4021cb
          .byte 0x90
.L_4025e0:

            call .L_411e70

            xor R15D,R15D
            test RAX,RAX
            mov QWORD PTR [RBP-176],RAX
            je .L_4023a2

            mov RDX,R12
            mov RSI,R14
            mov RDI,RAX
            call .L_411ed0

            test EAX,EAX
            mov R15D,EAX
            jne .L_40217d
.L_402611:

            mov RDI,QWORD PTR [RBP-176]
            call .L_411eb0

            jmp .L_4023a2
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402628:

            mov RCX,QWORD PTR [RBP-176]
            mov RDI,QWORD PTR [RBP-208]
            mov R8,R12
            lea RDX,QWORD PTR [RCX+8]
            mov RSI,RDI
            call .L_411c70

            test EAX,EAX
            je .L_40236d
.L_40264d:

            cmp DWORD PTR [RBP-184],5
            movsxd RDX,DWORD PTR [RBP-104]
            jne .L_402bd8

            cmp EBX,1
            jle .L_402bd8

            mov RAX,QWORD PTR [RBP-176]
            mov ECX,DWORD PTR [RBP-72]
            mov RSI,QWORD PTR [RAX+32]
            add RAX,80
            cmp EBX,ECX
            mov QWORD PTR [RBP-168],RAX
            mov QWORD PTR [RBP-120],RSI
            jle .L_4026b0

            movsxd RDI,ECX
            mov RSI,QWORD PTR [RBP-80]
            not ECX
            add ECX,EBX
            add RCX,RDI
            lea RAX,QWORD PTR [RSI+RDI*8]
            lea RCX,QWORD PTR [RSI+RCX*8+8]
            nop
.L_4026a0:

            mov QWORD PTR [RAX],0
            add RAX,8
            cmp RCX,RAX
            jne .L_4026a0
.L_4026b0:

            cmp EDX,EBX
            mov RDI,QWORD PTR [RBP-112]
            jge .L_4026e0

            movsxd RCX,EDX
            not EDX
            add EDX,EBX
            lea RAX,QWORD PTR [RDI+RCX*8]
            add RDX,RCX
            lea RDX,QWORD PTR [RDI+RDX*8+8]
            nop
            nop
            nop
            nop
            nop
.L_4026d0:

            mov QWORD PTR [RAX],0
            add RAX,8
            cmp RDX,RAX
            jne .L_4026d0
.L_4026e0:

            mov R8,QWORD PTR [RBP-120]
            mov EAX,EBX
            and EAX,7
            mov DWORD PTR [RBP-208],EAX
            mov QWORD PTR [RBP-184],R8
            jne .L_402727

            mov RSI,QWORD PTR [RBP-80]
            xor EAX,EAX
            add RSI,R15
            mov QWORD PTR [RBP-184],RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402710:

            mov RCX,QWORD PTR [R8+RAX*8]
            mov RDX,RAX
            add RAX,1
            shl RDX,4
            cmp EBX,EAX
            mov QWORD PTR [RSI+RDX*1],RCX
            jg .L_402710
.L_402727:

            mov R15,QWORD PTR [RBP-160]
            mov R14,QWORD PTR [RBP-192]
            xor ECX,ECX
            mov RDX,R15
            mov RSI,R14
            call .L_40d280

            movsxd RSI,DWORD PTR [RBP-72]
            mov RDI,QWORD PTR [RBP-80]
            mov RDX,R15
            mov ECX,1
            call .L_40d280

            mov RSI,QWORD PTR [RBP-80]
            mov R8,QWORD PTR [RBP-168]
            mov R9D,EBX
            mov RCX,QWORD PTR [RBP-120]
            mov RDI,QWORD PTR [RBP-112]
            mov RDX,RSI
            call .L_409e60

            mov RDI,QWORD PTR [RBP-112]
            mov RDX,R15
            mov RSI,R14
            mov ECX,2
            mov R15D,3
            mov R14D,4
            call .L_40d280
.L_402795:

            mov RDI,QWORD PTR [RBP-112]
            mov R8,QWORD PTR [RBP-168]
            mov R9D,EBX
            mov RCX,QWORD PTR [RBP-120]
            mov RDX,RDI
            mov RSI,RDI
            call .L_409e60

            mov RDX,QWORD PTR [RBP-160]
            mov RSI,QWORD PTR [RBP-192]
            movsxd RCX,R14D
            mov RDI,QWORD PTR [RBP-112]
            add R14D,R14D
            call .L_40d280

            sub R15D,1
            jne .L_402795

            mov R15,QWORD PTR [RBP-168]
            mov QWORD PTR [RBP-168],R13
            mov R14D,3
            mov R13,QWORD PTR [RBP-160]
            mov QWORD PTR [RBP-216],R12
.L_4027f7:

            lea EAX,DWORD PTR [R14-1]
            sub RSP,8
            mov RCX,QWORD PTR [RBP-184]
            mov RSI,QWORD PTR [RBP-80]
            mov RDI,QWORD PTR [RBP-112]
            mov R9D,EBX
            push RAX
            mov R8,R15
            mov RDX,R13
            lea R12D,DWORD PTR [R14+R14*1]
            call .L_40acc0

            mov RSI,QWORD PTR [RBP-192]
            mov RDI,QWORD PTR [RBP-112]
            mov RCX,R14
            mov RDX,R13
            call .L_40d280

            pop RAX
            pop RDX
            mov QWORD PTR [RBP-160],R14
            mov R14,QWORD PTR [RBP-192]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402850:

            mov RDI,QWORD PTR [RBP-112]
            mov RCX,QWORD PTR [RBP-120]
            mov R9D,EBX
            mov R8,R15
            mov RDX,RDI
            mov RSI,RDI
            call .L_409e60

            mov RDI,QWORD PTR [RBP-112]
            movsxd RCX,R12D
            mov RDX,R13
            mov RSI,R14
            add R12D,R12D
            call .L_40d280

            cmp R12D,31
            jle .L_402850

            mov R14,QWORD PTR [RBP-160]
            add R14,2
            cmp R14,9
            jne .L_4027f7

            mov RAX,QWORD PTR [RBP-168]
            mov R12,QWORD PTR [RBP-192]
            mov RDX,R13
            mov R13,R15
            mov R15,RDX
            mov QWORD PTR [RBP-160],RAX
            mov RAX,QWORD PTR [RBP-216]
            mov QWORD PTR [RBP-168],RAX
.L_4028c5:

            lea EAX,DWORD PTR [R14-1]
            sub RSP,8
            mov RCX,QWORD PTR [RBP-184]
            mov RSI,QWORD PTR [RBP-80]
            mov RDI,QWORD PTR [RBP-112]
            mov R9D,EBX
            push RAX
            mov R8,R13
            mov RDX,R15
            call .L_40acc0

            mov RDI,QWORD PTR [RBP-112]
            mov RCX,R14
            mov RDX,R15
            mov RSI,R12
            call .L_40d280

            mov RDI,QWORD PTR [RBP-112]
            mov RCX,QWORD PTR [RBP-120]
            mov R9D,EBX
            mov R8,R13
            mov RDX,RDI
            mov RSI,RDI
            call .L_409e60

            mov RDI,QWORD PTR [RBP-112]
            lea RCX,QWORD PTR [R14+R14*1]
            mov RDX,R15
            mov RSI,R12
            add R14,2
            call .L_40d280

            cmp R14,17
            pop R10
            pop R11
            jne .L_4028c5

            mov RAX,QWORD PTR [RBP-160]
            mov QWORD PTR [RBP-192],R12
            mov R12,R14
            mov R14,R13
            mov R13,QWORD PTR [RBP-184]
            mov QWORD PTR [RBP-216],RAX
            mov RAX,QWORD PTR [RBP-168]
            mov QWORD PTR [RBP-232],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402970:

            lea EDX,DWORD PTR [R12-1]
            sub RSP,8
            mov RSI,QWORD PTR [RBP-80]
            mov RDI,QWORD PTR [RBP-112]
            mov R9D,EBX
            mov R8,R14
            push RDX
            mov RCX,R13
            mov RDX,R15
            call .L_40acc0

            mov RSI,QWORD PTR [RBP-192]
            mov RDI,QWORD PTR [RBP-112]
            mov RCX,R12
            mov RDX,R15
            add R12,2
            call .L_40d280

            cmp R12,33
            pop R8
            pop R9
            jne .L_402970

            mov ESI,DWORD PTR [RBP-144]
            mov QWORD PTR [RBP-160],R15
            mov EDX,1717986919
            mov QWORD PTR [RBP-184],R13
            mov QWORD PTR [RBP-168],R14
            mov R13,QWORD PTR [RBP-216]
            mov R12,QWORD PTR [RBP-232]
            lea R15D,DWORD PTR [RSI-1]
            mov EAX,R15D
            imul EDX
            mov EAX,R15D
            sar EAX,31
            sar EDX,1
            sub EDX,EAX
            lea EAX,DWORD PTR [RDX+RDX*4]
            mov EDX,R15D
            sub EDX,EAX
            mov DWORD PTR [RBP-144],EDX
            js .L_4030cc

            sub ESI,2
            mov DWORD PTR [RBP-232],EBX
            xor R14D,R14D
            mov DWORD PTR [RBP-216],ESI
            sub ESI,EDX
            mov EBX,R15D
            mov R15D,ESI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402a30:

            add R14D,R14D
            mov ESI,EBX
            mov RDI,R13
            sub EBX,1
            call .L_404d50

            add R14D,EAX
            cmp EBX,R15D
            jne .L_402a30

            mov R15D,DWORD PTR [RBP-216]
            sub R15D,DWORD PTR [RBP-144]
            movsxd RCX,R14D
            mov EBX,DWORD PTR [RBP-232]
.L_402a5f:

            mov RDI,QWORD PTR [RBP-112]
            mov RDX,QWORD PTR [RBP-160]
            mov RSI,QWORD PTR [RBP-192]
            call .L_40d2b0

            mov EDI,DWORD PTR [RBP-208]
            test EDI,EDI
            jne .L_402dc0

            test R15D,R15D
            js .L_402add

            mov QWORD PTR [RBP-120],R12
            mov R14,QWORD PTR [RBP-160]
            mov R12,QWORD PTR [RBP-184]
            nop
            nop
            nop
            nop
            nop
.L_402aa0:

            mov RDI,QWORD PTR [R13]
            lea ESI,DWORD PTR [R15-4]
            sub R15D,5
            call .L_40d250

            mov RDI,QWORD PTR [RBP-112]
            sub RSP,8
            mov R8,QWORD PTR [RBP-168]
            push RAX
            mov RDX,R14
            mov R9D,EBX
            mov RCX,R12
            mov RSI,RDI
            call .L_40b600

            test R15D,R15D
            pop RAX
            pop RDX
            jns .L_402aa0

            mov R12,QWORD PTR [RBP-120]
.L_402add:

            mov RDI,QWORD PTR [RBP-112]
            mov R8,QWORD PTR [RBP-168]
            mov R9D,EBX
            mov RCX,QWORD PTR [RBP-184]
            xor EDX,EDX
            mov RSI,RDI
            call .L_40c040

            mov R15D,EAX
            mov RAX,QWORD PTR [RBP-224]
            add RAX,QWORD PTR [RBP-112]
.L_402b0a:

            cmp QWORD PTR [RAX],0
            jne .L_402b19

            sub RAX,8
            sub EBX,1
            jne .L_402b0a
.L_402b19:

            lea RAX,QWORD PTR [RBP-112]
            test R15D,R15D
            mov DWORD PTR [RBP-104],EBX
            mov QWORD PTR [RBP-120],RAX
            jne .L_403030
.L_402b2d:

            mov RDX,QWORD PTR [RBP-176]
            mov RSI,QWORD PTR [RBP-120]
            mov RCX,R12
            mov RDI,QWORD PTR [RBP-136]
            xor R15D,R15D
            call .L_411dc0

            test EAX,EAX
            setne R15B
            jmp .L_402370
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_402b58:

            mov DWORD PTR [RBP-168],16
            xor ESI,ESI
            mov DWORD PTR [RBP-184],4
            jmp .L_4021cb
.L_402b73:

            mov RDI,QWORD PTR [RBP-136]
            mov ESI,16
            call .L_404630

            test RAX,RAX
            jne .L_40306d

            nop
            nop
            nop
.L_402b90:

            xor R15D,R15D
            jmp .L_402540
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402ba0:

            mov RCX,QWORD PTR [RBP-176]
            lea RAX,QWORD PTR [RBP-80]
            mov RSI,QWORD PTR [RBP-120]
            mov R8,R12
            mov RDI,RAX
            mov QWORD PTR [RBP-208],RAX
            lea RDX,QWORD PTR [RCX+8]
            call .L_411c70

            test EAX,EAX
            je .L_40236d

            jmp .L_40264d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_402bd8:

            cmp EDX,EBX
            cmovg RDX,RBX
            shl RDX,3
            test RDX,RDX
            je .L_402c17

            mov RCX,QWORD PTR [RBP-160]
            mov RDI,QWORD PTR [RBP-216]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402c00:

            mov RSI,QWORD PTR [RBP-112]
            movzx ESI,BYTE PTR [RSI+RAX*1]
            add RAX,1
            mov BYTE PTR [RCX],SIL
            add RCX,RDI
            cmp RDX,RAX
            jne .L_402c00
.L_402c17:

            cmp DWORD PTR [RBP-72],EBX
            mov ECX,EBX
            cmovle ECX,DWORD PTR [RBP-72]
            movsxd RCX,ECX
            shl RCX,3
            test RCX,RCX
            je .L_402c57

            mov RAX,QWORD PTR [RBP-160]
            mov RDI,QWORD PTR [RBP-216]
            lea RDX,QWORD PTR [RAX+1]
            xor EAX,EAX
.L_402c40:

            mov RSI,QWORD PTR [RBP-80]
            movzx ESI,BYTE PTR [RSI+RAX*1]
            add RAX,1
            mov BYTE PTR [RDX],SIL
            add RDX,RDI
            cmp RCX,RAX
            jne .L_402c40
.L_402c57:

            cmp DWORD PTR [RBP-184],1
            jne .L_402ed3

            mov R15D,DWORD PTR [RBP-144]
            lea RAX,QWORD PTR [RBP-112]
            mov DWORD PTR [RBP-144],0
            mov QWORD PTR [RBP-120],RAX
            sub R15D,1
.L_402c81:

            mov EAX,DWORD PTR [RBP-144]
            mov DWORD PTR [RBP-192],EBX
            xor ECX,ECX
            mov QWORD PTR [RBP-216],R12
            mov EBX,R15D
            sub EAX,R15D
            mov R12D,EAX
            nop
.L_402ca0:

            lea R14D,DWORD PTR [RCX+RCX*1]
            mov ESI,EBX
            mov RDI,R13
            call .L_404d50

            sub EBX,1
            lea ECX,DWORD PTR [R14+RAX*1]
            mov EAX,R12D
            add EAX,EBX
            jns .L_402ca0

            lea EAX,DWORD PTR [R15-1]
            sub EAX,DWORD PTR [RBP-144]
            mov EBX,DWORD PTR [RBP-192]
            mov R12,QWORD PTR [RBP-216]
            mov R15D,EAX
.L_402cd6:

            mov R14,QWORD PTR [RBP-120]
            mov R8D,DWORD PTR [RBP-168]
            mov ESI,EBX
            mov RDX,QWORD PTR [RBP-160]
            mov RDI,R14
            call .L_401a10

            test EAX,EAX
            je .L_40236d

            test R15D,R15D
            js .L_402b2d

            mov QWORD PTR [RBP-144],R13
            mov DWORD PTR [RBP-192],EBX
            mov R13,R14
.L_402d13:

            mov R14D,R15D
            sub R14D,DWORD PTR [RBP-184]
            xor EBX,EBX
            nop
.L_402d20:

            mov RCX,QWORD PTR [RBP-176]
            mov R8,R12
            mov RDX,R13
            mov RSI,R13
            mov RDI,R13
            call .L_411c70

            test EAX,EAX
            je .L_40236d

            mov RDI,QWORD PTR [RBP-144]
            add EBX,EBX
            mov ESI,R15D
            sub R15D,1
            call .L_404d50

            add EBX,EAX
            cmp R14D,R15D
            jne .L_402d20

            mov ECX,EBX
            mov RBX,QWORD PTR [RBP-208]
            mov R8D,DWORD PTR [RBP-168]
            mov RDX,QWORD PTR [RBP-160]
            mov ESI,DWORD PTR [RBP-192]
            mov RDI,RBX
            call .L_401a10

            test EAX,EAX
            je .L_40236d

            mov RCX,QWORD PTR [RBP-176]
            mov R8,R12
            mov RDX,RBX
            mov RSI,R13
            mov RDI,R13
            call .L_411c70

            test EAX,EAX
            je .L_40236d

            test R15D,R15D
            jns .L_402d13

            jmp .L_402b2d
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_402dc0:

            test R15D,R15D
            js .L_402add

            mov QWORD PTR [RBP-144],R13
            mov R13,QWORD PTR [RBP-120]
            mov R10D,R15D
            mov QWORD PTR [RBP-192],R12
            nop
            nop
.L_402de0:

            lea R14D,DWORD PTR [R10-5]
            mov R15D,EBX
            xor R12D,R12D
            mov EAX,R14D
            mov R14D,R10D
            mov EBX,EAX
.L_402df2:

            mov RDI,QWORD PTR [RBP-144]
            add R12D,R12D
            mov ESI,R14D
            sub R14D,1
            call .L_404d50

            add R12D,EAX
            cmp R14D,EBX
            jne .L_402df2

            mov RDI,QWORD PTR [RBP-112]
            mov DWORD PTR [RBP-120],R14D
            mov EBX,R15D
            mov R14,QWORD PTR [RBP-168]
            mov R9D,EBX
            mov RCX,R13
            mov RDX,RDI
            mov RSI,RDI
            mov R8,R14
            call .L_409e60

            mov RDI,QWORD PTR [RBP-112]
            mov R9D,EBX
            mov R8,R14
            mov RCX,R13
            mov RDX,RDI
            mov RSI,RDI
            call .L_409e60

            mov RDI,QWORD PTR [RBP-112]
            mov R9D,EBX
            mov R8,R14
            mov RCX,R13
            mov RDX,RDI
            mov RSI,RDI
            call .L_409e60

            mov RDI,QWORD PTR [RBP-112]
            mov R9D,EBX
            mov R8,R14
            mov RCX,R13
            mov RDX,RDI
            mov RSI,RDI
            call .L_409e60

            mov RDI,QWORD PTR [RBP-112]
            mov R9D,EBX
            mov R8,R14
            mov RCX,R13
            mov RDX,RDI
            mov RSI,RDI
            call .L_409e60

            mov RDI,QWORD PTR [RBP-112]
            sub RSP,8
            mov RDX,QWORD PTR [RBP-160]
            push R12
            mov RCX,R13
            mov R9D,EBX
            mov R8,R14
            mov RSI,RDI
            call .L_40acc0

            mov R10D,DWORD PTR [RBP-120]
            pop RCX
            pop RSI
            test R10D,R10D
            jns .L_402de0

            mov R12,QWORD PTR [RBP-192]
            jmp .L_402add
.L_402ed3:

            mov RSI,QWORD PTR [RBP-208]
            lea RAX,QWORD PTR [RBP-112]
            mov RCX,QWORD PTR [RBP-176]
            mov R8,R12
            mov RDI,RAX
            mov QWORD PTR [RBP-120],RAX
            mov RDX,RSI
            call .L_411c70

            test EAX,EAX
            je .L_40236d

            cmp DWORD PTR [RBP-104],EBX
            mov ECX,EBX
            cmovle ECX,DWORD PTR [RBP-104]
            movsxd RCX,ECX
            shl RCX,3
            test RCX,RCX
            je .L_402f47

            mov RAX,QWORD PTR [RBP-160]
            mov RDI,QWORD PTR [RBP-216]
            lea RDX,QWORD PTR [RAX+2]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402f30:

            mov RSI,QWORD PTR [RBP-112]
            movzx ESI,BYTE PTR [RSI+RAX*1]
            add RAX,1
            mov BYTE PTR [RDX],SIL
            add RDX,RDI
            cmp RAX,RCX
            jne .L_402f30
.L_402f47:

            mov EAX,DWORD PTR [RBP-168]
            cmp EAX,3
            jle .L_402ffe

            mov RDX,QWORD PTR [RBP-160]
            sub EAX,4
            lea R14,QWORD PTR [RDX+3]
            lea R15,QWORD PTR [RDX+RAX*1+4]
            mov QWORD PTR [RBP-192],R15
            mov R15,R14
            mov R14,QWORD PTR [RBP-216]
            mov QWORD PTR [RBP-216],R13
            mov R13D,EBX
            mov RBX,QWORD PTR [RBP-120]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_402f90:

            mov RCX,QWORD PTR [RBP-176]
            mov RSI,QWORD PTR [RBP-208]
            mov R8,R12
            mov RDX,RBX
            mov RDI,RBX
            call .L_411c70

            test EAX,EAX
            je .L_40236d

            cmp DWORD PTR [RBP-104],R13D
            mov ECX,R13D
            cmovle ECX,DWORD PTR [RBP-104]
            movsxd RCX,ECX
            shl RCX,3
            test RCX,RCX
            je .L_402fe7

            mov RDX,R15
            xor EAX,EAX
.L_402fd0:

            mov RSI,QWORD PTR [RBP-112]
            movzx ESI,BYTE PTR [RSI+RAX*1]
            add RAX,1
            mov BYTE PTR [RDX],SIL
            add RDX,R14
            cmp RAX,RCX
            jne .L_402fd0
.L_402fe7:

            add R15,1
            cmp QWORD PTR [RBP-192],R15
            jne .L_402f90

            mov EBX,R13D
            mov R13,QWORD PTR [RBP-216]
.L_402ffe:

            mov R15D,DWORD PTR [RBP-144]
            xor ECX,ECX
            sub R15D,1
            mov EAX,R15D
            cdq 
            idiv DWORD PTR [RBP-184]
            test EDX,EDX
            mov DWORD PTR [RBP-144],EDX
            js .L_402cd6

            jmp .L_402c81
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403030:

            mov RDI,QWORD PTR [RBP-136]
            mov RSI,RAX
            call .L_404650

            test RAX,RAX
            jne .L_402370

            jmp .L_40236d
.L_40304d:

            xor EAX,EAX
            call .L_4113c0

            test EAX,EAX
            je .L_40243e

            mov RAX,QWORD PTR [RBP-136]
            cmp DWORD PTR [RAX+12],15
            jle .L_402b73
.L_40306d:

            mov RAX,QWORD PTR [RBP-176]
            mov RBX,QWORD PTR [RBP-136]
            mov RCX,QWORD PTR [R14]
            mov RDX,QWORD PTR [R13]
            mov R9,QWORD PTR [RAX+80]
            mov R8,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RBP-120]
            mov RDI,QWORD PTR [RBX]
            mov RSI,QWORD PTR [RAX]
            call .L_40d3e0

            mov RCX,QWORD PTR [RBX]
            mov DWORD PTR [RBX+16],0
            mov EDX,16
            lea RAX,QWORD PTR [RCX+120]
            sub RCX,8
.L_4030b0:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_402527

            sub EDX,1
            cmp RAX,RCX
            jne .L_4030b0

            jmp .L_402525
.L_4030cc:

            xor ECX,ECX
            jmp .L_402a5f
.L_4030d3:

            mov RDI,QWORD PTR [RBP-136]
            mov ESI,8
            call .L_404630

            test RAX,RAX
            je .L_402b90

            jmp .L_4024cf
.L_4030f2:

            call __stack_chk_fail@PLT
.L_4030f7:

            mov RDI,QWORD PTR [RBP-176]
            call .L_411eb0

            jmp .L_40237b
.L_403108:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403110:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            mov R12,RDX
            mov RBP,RCX
            mov R13,R8
            sub RSP,360
.L_403130:

            mov EBX,DWORD PTR [RDX+20]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+344],RAX
            xor EAX,EAX
            and EBX,4
            jne .L_4032e8

            mov ECX,DWORD PTR [RCX+8]
            test ECX,ECX
            jle .L_40315f

            mov RAX,QWORD PTR [RBP]
            test BYTE PTR [RAX],1
            jne .L_4031b0
.L_40315f:

            lea RCX,QWORD PTR [RIP+.L_4040cc]
            mov R8D,416
            mov EDX,102
            mov ESI,109
            mov EDI,3
            call .L_416a00
.L_403180:

            mov RCX,QWORD PTR [RSP+344]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_40374b

            add RSP,360
.L_4031a0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4031b0:

            mov RDI,RDX
            mov QWORD PTR [RSP],R9
            call .L_404490

            test EAX,EAX
            mov R9,QWORD PTR [RSP]
            je .L_403318

            mov RDI,R13
            mov QWORD PTR [RSP+24],R9
            mov DWORD PTR [RSP+16],EAX
            call .L_405420

            mov RDI,R13
            call .L_4055b0

            mov RDI,R13
            mov QWORD PTR [RSP+8],RAX
            call .L_4055b0

            mov RDI,R13
            mov QWORD PTR [RSP],RAX
            call .L_4055b0

            cmp QWORD PTR [RSP+8],0
            mov R11,RAX
            mov QWORD PTR [RSP+80],RAX
            sete DL
            cmp QWORD PTR [RSP],0
            sete AL
            or DL,AL
            jne .L_4032d5

            test R11,R11
            je .L_4032d5

            mov R9,QWORD PTR [RSP+24]
            mov R10D,DWORD PTR [RSP+16]
            test R9,R9
            je .L_403482
.L_403237:

            mov EDX,DWORD PTR [R15+16]
            test EDX,EDX
            jne .L_403270

            mov RSI,RBP
            mov RDI,R15
            mov QWORD PTR [RSP+40],R9
            mov QWORD PTR [RSP+32],R11
            mov DWORD PTR [RSP+16],R10D
            call .L_404b00

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            js .L_4034c9
.L_403270:

            mov RCX,R13
            mov RDX,RBP
            mov RSI,R15
            mov RDI,R11
            mov QWORD PTR [RSP+16],R9
            mov DWORD PTR [RSP+40],R10D
            mov QWORD PTR [RSP+32],R11
            call .L_407250

            test EAX,EAX
            mov R9,QWORD PTR [RSP+16]
            je .L_4032c6

            mov R11,QWORD PTR [RSP+32]
            mov R10D,DWORD PTR [RSP+40]
.L_4032a3:

            mov EAX,DWORD PTR [R11+8]
            test EAX,EAX
            jne .L_403350

            xor ESI,ESI
            mov RDI,R14
            mov QWORD PTR [RSP],R9
            call .L_4048e0

            mov R9,QWORD PTR [RSP]
            mov EBX,1
.L_4032c6:

            test R9,R9
            jne .L_4032d5
.L_4032cb:

            mov RDI,QWORD PTR [RSP+24]
            call .L_411eb0
.L_4032d5:

            mov RDI,R13
            call .L_405530

            jmp .L_403180
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4032e8:

            mov RAX,QWORD PTR [RSP+344]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40374b

            add RSP,360
.L_403306:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_402100
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403318:

            mov RAX,QWORD PTR [RSP+344]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40374b

            add RSP,360
            mov RDI,R14
            mov ESI,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4048e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403350:

            mov RCX,QWORD PTR [RSP+24]
            mov R15,QWORD PTR [RSP+80]
            mov R8,R13
            mov RSI,R11
            mov QWORD PTR [RSP+16],R9
            mov DWORD PTR [RSP+32],R10D
            lea RAX,QWORD PTR [RCX+8]
            mov RDI,R15
            mov RDX,RAX
            mov QWORD PTR [RSP+40],RAX
            call .L_411c70

            test EAX,EAX
            mov R9,QWORD PTR [RSP+16]
            je .L_4032c6

            mov R10D,DWORD PTR [RSP+32]
            cmp R10D,671
            jg .L_4034de

            cmp R10D,239
            jg .L_4034d1

            cmp R10D,79
            jg .L_4034eb

            cmp R10D,23
            jle .L_403657

            mov DWORD PTR [RSP+16],3
.L_4033c6:

            mov RCX,QWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP+8]
            mov R8,R13
            mov RDX,R15
            mov RSI,R15
            mov QWORD PTR [RSP+32],R9
            mov DWORD PTR [RSP+52],R10D
            call .L_411c70

            test EAX,EAX
            mov R9,QWORD PTR [RSP+32]
            je .L_4032c6

            mov EAX,DWORD PTR [RSP+16]
            lea R15,QWORD PTR [RSP+80]
            mov DWORD PTR [RSP+32],EBX
            mov QWORD PTR [RSP+56],R14
            mov QWORD PTR [RSP+64],R12
            mov RBX,R15
            mov QWORD PTR [RSP+72],RBP
            mov R12,QWORD PTR [RSP+24]
            lea ECX,DWORD PTR [RAX-1]
            mov EAX,1
            mov RBP,QWORD PTR [RSP+8]
            shl EAX,CL
            sub EAX,2
            lea RAX,QWORD PTR [R15+RAX*8+8]
            mov R15,R9
            mov R14,RAX
            jmp .L_403465
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403440:

            mov RSI,QWORD PTR [RBX]
            mov R8,R13
            mov RCX,R12
            mov RDX,RBP
            mov RDI,RAX
            call .L_411c70

            test EAX,EAX
            je .L_403476

            add RBX,8
            cmp R14,RBX
            je .L_4034f8
.L_403465:

            mov RDI,R13
            call .L_4055b0

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            jne .L_403440
.L_403476:

            mov EBX,DWORD PTR [RSP+32]
            mov R9,R15
            jmp .L_4032c6
.L_403482:

            mov QWORD PTR [RSP+40],R9
            mov QWORD PTR [RSP+32],R11
            call .L_411e70

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_4032d5

            mov RDX,R13
            mov RSI,RBP
            mov RDI,RAX
            call .L_411ed0

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            je .L_4032cb

            jmp .L_403237
.L_4034c9:

            mov R11,R15
            jmp .L_4032a3
.L_4034d1:

            mov DWORD PTR [RSP+16],5
            jmp .L_4033c6
.L_4034de:

            mov DWORD PTR [RSP+16],6
            jmp .L_4033c6
.L_4034eb:

            mov DWORD PTR [RSP+16],4
            jmp .L_4033c6
.L_4034f8:

            mov R10D,DWORD PTR [RSP+52]
            mov EBX,DWORD PTR [RSP+32]
            mov R9,R15
            mov R14,QWORD PTR [RSP+56]
            mov R12,QWORD PTR [RSP+64]
            mov RBP,QWORD PTR [RSP+72]
.L_403513:

            movsxd RAX,DWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov RDX,RAX
            shl RAX,3
            cmp QWORD PTR [RSI+RAX*1-8],0
            lea R15,QWORD PTR [RAX-8]
            jns .L_403618

            mov RAX,QWORD PTR [RSP]
            cmp EDX,DWORD PTR [RAX+12]
            jg .L_403770
.L_40353f:

            mov RAX,QWORD PTR [RSP]
            mov RCX,QWORD PTR [RSI]
            mov RAX,QWORD PTR [RAX]
            neg RCX
            cmp EDX,1
            mov QWORD PTR [RAX],RCX
            jle .L_4037b3

            lea ECX,DWORD PTR [RDX-2]
            lea R8,QWORD PTR [RCX*8+16]
            mov ECX,8
.L_403568:

            mov RDI,QWORD PTR [RSI+RCX*1]
            not RDI
            mov QWORD PTR [RAX+RCX*1],RDI
            add RCX,8
            cmp R8,RCX
            jne .L_403568
.L_40357c:

            add R15,RAX
            jmp .L_403586
.L_403581:

            sub EDX,1
            je .L_403591
.L_403586:

            sub R15,8
            cmp QWORD PTR [R15+8],0
            je .L_403581
.L_403591:

            mov RAX,QWORD PTR [RSP]
            mov DWORD PTR [RAX+8],EDX
.L_403598:

            lea EAX,DWORD PTR [R10-1]
            mov DWORD PTR [RSP+52],EBX
            mov RBX,QWORD PTR [RSP]
            mov DWORD PTR [RSP+40],1
            mov QWORD PTR [RSP+64],R14
            mov DWORD PTR [RSP+8],EAX
            mov QWORD PTR [RSP+32],R9
.L_4035ba:

            mov ESI,DWORD PTR [RSP+8]
            mov RDI,R12
            call .L_404d50

            test EAX,EAX
            jne .L_403664

            cmp DWORD PTR [RSP+40],0
            je .L_403750
.L_4035d9:

            cmp DWORD PTR [RSP+8],0
            jne .L_4037a9
.L_4035e4:

            mov R14,QWORD PTR [RSP+64]
            mov R9,QWORD PTR [RSP+32]
            mov RCX,R13
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP]
            xor EBX,EBX
            mov RDI,R14
            mov QWORD PTR [RSP+8],R9
            call .L_411dc0

            test EAX,EAX
            mov R9,QWORD PTR [RSP+8]
            setne BL
            jmp .L_4032c6
.L_403618:

            mov QWORD PTR [RSP+32],R9
            mov DWORD PTR [RSP+8],R10D
            call .L_404350

            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+40]
            mov R8,R13
            mov RDI,QWORD PTR [RSP]
            mov RSI,RAX
            call .L_411c70

            test EAX,EAX
            mov R10D,DWORD PTR [RSP+8]
            mov R9,QWORD PTR [RSP+32]
            je .L_4032c6

            jmp .L_403598
.L_403657:

            mov DWORD PTR [RSP+16],1
            jmp .L_403513
.L_403664:

            cmp DWORD PTR [RSP+16],1
            je .L_4037c7

            mov R8D,DWORD PTR [RSP+8]
            xor R15D,R15D
            mov EBP,1
            sub R8D,1
            js .L_4036d2

            mov R14D,1
            mov RAX,R13
            mov QWORD PTR [RSP+56],RBX
            mov R13D,R14D
            mov EBX,R8D
            mov R14,RAX
            jmp .L_4036a3
.L_40369b:

            sub EBX,1
            cmp EBX,-1
            je .L_4036ca
.L_4036a3:

            mov ESI,EBX
            mov RDI,R12
            call .L_404d50

            test EAX,EAX
            je .L_4036bf

            mov ECX,R13D
            sub ECX,R15D
            mov R15D,R13D
            shl EBP,CL
            or EBP,1
.L_4036bf:

            add R13D,1
            cmp R13D,DWORD PTR [RSP+16]
            jne .L_40369b
.L_4036ca:

            mov RBX,QWORD PTR [RSP+56]
            mov R13,R14
.L_4036d2:

            mov R14D,DWORD PTR [RSP+40]
            test R14D,R14D
            je .L_403723
.L_4036dc:

            mov EAX,EBP
            mov RCX,QWORD PTR [RSP+24]
            mov R8,R13
            sar EAX,1
            mov RSI,RBX
            mov RDI,RBX
            cdqe 
            mov RDX,QWORD PTR [RSP+RAX*8+80]
            call .L_411c70

            test EAX,EAX
            je .L_40373d

            add R15D,1
            sub DWORD PTR [RSP+8],R15D
            js .L_4035e4

            mov DWORD PTR [RSP+40],0
            jmp .L_4035ba
.L_40371a:

            add R14D,1
            cmp R14D,R15D
            jg .L_4036dc
.L_403723:

            mov RCX,QWORD PTR [RSP+24]
            mov R8,R13
            mov RDX,RBX
            mov RSI,RBX
            mov RDI,RBX
            call .L_411c70

            test EAX,EAX
            jne .L_40371a
.L_40373d:

            mov EBX,DWORD PTR [RSP+52]
            mov R9,QWORD PTR [RSP+32]
            jmp .L_4032c6
.L_40374b:

            call __stack_chk_fail@PLT
.L_403750:

            mov RCX,QWORD PTR [RSP+24]
            mov R8,R13
            mov RDX,RBX
            mov RSI,RBX
            mov RDI,RBX
            call .L_411c70

            test EAX,EAX
            jne .L_4035d9

            jmp .L_40373d
.L_403770:

            mov RDI,QWORD PTR [RSP]
            mov ESI,EDX
            mov QWORD PTR [RSP+40],R9
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+8],EDX
            call .L_404630

            test RAX,RAX
            mov EDX,DWORD PTR [RSP+8]
            mov R10D,DWORD PTR [RSP+32]
            mov R9,QWORD PTR [RSP+40]
            je .L_4032c6

            mov RSI,QWORD PTR [RBP]
            jmp .L_40353f
.L_4037a9:

            sub DWORD PTR [RSP+8],1
            jmp .L_4035ba
.L_4037b3:

            mov RSI,QWORD PTR [RSP]
            test EDX,EDX
            mov DWORD PTR [RSI+8],EDX
            jle .L_403598

            jmp .L_40357c
.L_4037c7:

            mov EBP,1
            xor R15D,R15D
            jmp .L_4036d2
.L_4037d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4037e0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,72
.L_4037ee:

            mov EAX,DWORD PTR [RDX+20]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+24],R9
            and EAX,4
            mov DWORD PTR [RSP+4],EAX
            jne .L_403b99

            mov EAX,DWORD PTR [RCX+8]
            mov RBX,RCX
            test EAX,EAX
            jle .L_403880

            mov RBP,RDX
            mov RDX,QWORD PTR [RCX]
            mov R13,RSI
            mov RDI,QWORD PTR [RDX]
            mov RSI,RDI
            and ESI,1
            mov QWORD PTR [RSP+16],RSI
            je .L_403880

            cmp EAX,1
            mov R14,R8
            jne .L_40383e

            mov RAX,R13
            xor EDX,EDX
            div RDI
            mov R13,RDX
.L_40383e:

            mov RDI,RBP
            call .L_404490

            test EAX,EAX
            mov R15D,EAX
            jne .L_4038b8

            cmp DWORD PTR [RBX+8],1
            jne .L_403860

            mov RAX,QWORD PTR [RBX]
            cmp QWORD PTR [RAX],1
            je .L_403a60
.L_403860:

            mov RDI,QWORD PTR [RSP+8]
            add RSP,72
.L_403869:

            mov ESI,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4048e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403880:

            lea RCX,QWORD PTR [RIP+.L_4040cc]
            mov R8D,1172
            mov EDX,102
            mov ESI,117
            mov EDI,3
            call .L_416a00
.L_4038a1:

            mov EAX,DWORD PTR [RSP+4]
            add RSP,72
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4038b8:

            test R13,R13
            je .L_403a70

            mov RDI,R14
            call .L_405420

            mov RDI,R14
            call .L_4055b0

            mov RDI,R14
            mov QWORD PTR [RSP+32],RAX
            call .L_4055b0

            mov RDI,R14
            mov R12,RAX
            call .L_4055b0

            mov RDX,QWORD PTR [RSP+32]
            mov RDI,RAX
            mov QWORD PTR [RSP+48],RAX
            test RDX,RDX
            sete DL
            test R12,R12
            sete AL
            or DL,AL
            jne .L_403b0a

            test RDI,RDI
            je .L_403b0a

            mov RAX,QWORD PTR [RSP+24]
            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_403bc7
.L_403926:

            mov EAX,R15D
            mov R15,R13
            sub EAX,2
            js .L_403bfd

            mov ESI,1
            mov R15,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+56],RBX
            mov QWORD PTR [RSP+48],RBP
            mov QWORD PTR [RSP+32],R13
            mov EBP,ESI
            mov EBX,EAX
            jmp .L_403a38
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403960:

            test EBP,EBP
            mov RSI,R13
            mov RDI,R12
            je .L_403b20

            call .L_4048e0

            test EAX,EAX
            je .L_403af8

            mov RCX,QWORD PTR [RSP+40]
            mov R8,R14
            mov RSI,R12
            mov RDI,R12
            lea RDX,QWORD PTR [RCX+8]
            call .L_411c70

            test EAX,EAX
            je .L_403af8
.L_40399a:

            mov R13,QWORD PTR [RSP+16]
.L_40399f:

            mov RCX,QWORD PTR [RSP+40]
            mov R8,R14
            mov RDX,R12
            mov RSI,R12
            mov RDI,R12
            call .L_411c70

            test EAX,EAX
            je .L_403af8

            xor EBP,EBP
.L_4039bf:

            mov RDI,QWORD PTR [RSP+48]
            mov ESI,EBX
            call .L_404d50

            test EAX,EAX
            je .L_403a30

            mov RDI,QWORD PTR [RSP+32]
            xor EDX,EDX
            mov RCX,RDI
            imul RCX,R13
            mov RAX,RCX
            div RDI
            cmp RAX,R13
            je .L_403b50

            test EBP,EBP
            mov RSI,R13
            mov RDI,R12
            je .L_403b60

            call .L_4048e0

            test EAX,EAX
            je .L_403af8

            mov RCX,QWORD PTR [RSP+40]
            mov R8,R14
            mov RSI,R12
            mov RDI,R12
            lea RDX,QWORD PTR [RCX+8]
            call .L_411c70

            test EAX,EAX
            je .L_403af8

            mov R13,QWORD PTR [RSP+32]
            xor EBP,EBP
            nop
            nop
            nop
.L_403a30:

            sub EBX,1
            cmp EBX,-1
            je .L_403a89
.L_403a38:

            mov RCX,R13
            xor EDX,EDX
            imul RCX,R13
            mov RAX,RCX
            div R13
            cmp RAX,R13
            jne .L_403960

            test EBP,EBP
            mov R13,RCX
            jne .L_4039bf

            jmp .L_40399f
.L_403a60:

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            jne .L_403860

            nop
            nop
            nop
            nop
            nop
.L_403a70:

            mov RDI,QWORD PTR [RSP+8]
            xor ESI,ESI
            call .L_4048e0

            mov DWORD PTR [RSP+4],1
            jmp .L_4038a1
.L_403a89:

            cmp R13,1
            mov QWORD PTR [RSP+48],R15
            mov RBX,QWORD PTR [RSP+56]
            mov R15,R13
            je .L_403c3a

            test EBP,EBP
            jne .L_403c03

            mov RSI,R13
            mov RDI,R12
            call .L_408a00

            test EAX,EAX
            je .L_403af8

            mov RDX,R12
            mov R12,QWORD PTR [RSP+48]
            xor EDI,EDI
            mov R8,R14
            mov RCX,RBX
            mov RSI,R12
            call .L_41b130

            test EAX,EAX
            je .L_403af8
.L_403ad3:

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R14
            mov RSI,R12
            call .L_411dc0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            mov DWORD PTR [RSP+4],EAX
            nop
            nop
            nop
            nop
.L_403af8:

            cmp QWORD PTR [RSP+24],0
            jne .L_403b0a
.L_403b00:

            mov RDI,QWORD PTR [RSP+40]
            call .L_411eb0
.L_403b0a:

            mov RDI,R14
            call .L_405530

            jmp .L_4038a1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b20:

            call .L_408a00

            test EAX,EAX
            je .L_403af8

            mov RCX,QWORD PTR [RSP+56]
            xor EDI,EDI
            mov R8,R14
            mov RDX,R12
            mov RSI,R15
            call .L_41b130

            test EAX,EAX
            je .L_403af8

            mov RAX,R12
            mov R12,R15
            mov R15,RAX
            jmp .L_40399a
.L_403b50:

            mov R13,RCX
            jmp .L_403a30
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_403b60:

            call .L_408a00

            test EAX,EAX
            je .L_403af8

            mov RCX,QWORD PTR [RSP+56]
            xor EDI,EDI
            mov R8,R14
            mov RDX,R12
            mov RSI,R15
            call .L_41b130

            test EAX,EAX
            je .L_403af8

            mov RAX,R12
            mov R13,QWORD PTR [RSP+32]
            mov R12,R15
            mov R15,RAX
            jmp .L_403a30
.L_403b99:

            lea RCX,QWORD PTR [RIP+.L_4040cc]
            mov R8D,1164
            mov EDX,66
            mov ESI,117
            mov EDI,3
            call .L_416a00

            mov DWORD PTR [RSP+4],4294967295
            jmp .L_4038a1
.L_403bc7:

            call .L_411e70

            test RAX,RAX
            mov QWORD PTR [RSP+40],RAX
            je .L_403b0a

            mov RDX,R14
            mov RSI,RBX
            mov RDI,RAX
            call .L_411ed0

            test EAX,EAX
            jne .L_403926

            mov DWORD PTR [RSP+4],0
            jmp .L_403b00
.L_403bfd:

            cmp R13,1
            je .L_403c42
.L_403c03:

            mov RSI,R15
            mov RDI,R12
            call .L_4048e0

            test EAX,EAX
            je .L_403af8

            mov RCX,QWORD PTR [RSP+40]
            mov R8,R14
            mov RSI,R12
            mov RDI,R12
            lea RDX,QWORD PTR [RCX+8]
            call .L_411c70

            test EAX,EAX
            je .L_403af8

            jmp .L_403ad3
.L_403c3a:

            test EBP,EBP
            je .L_403ad3
.L_403c42:

            mov RDI,QWORD PTR [RSP+8]
            mov ESI,1
            call .L_4048e0

            test EAX,EAX
            setne AL
            movzx EAX,AL
            mov DWORD PTR [RSP+4],EAX
            jmp .L_403af8
.L_403c62:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403c70:

            mov R9D,DWORD PTR [RCX+8]
            test R9D,R9D
            jle .L_403ca0

            mov RAX,QWORD PTR [RCX]
            test BYTE PTR [RAX],1
            je .L_403ca0

            cmp DWORD PTR [RSI+8],1
            jne .L_403c94

            mov EAX,DWORD PTR [RSI+16]
            test EAX,EAX
            jne .L_403c94

            test BYTE PTR [RDX+20],4
            je .L_403ca8
.L_403c94:

            xor R9D,R9D
            jmp .L_403110
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403ca0:

            jmp .L_401c90
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403ca8:

            mov RAX,QWORD PTR [RSI]
            xor R9D,R9D
            mov RSI,QWORD PTR [RAX]
            jmp .L_4037e0
.L_403cb6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403cc0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,328
.L_403cd1:

            mov EBX,DWORD PTR [RDX+20]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+312],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+8],RSI
            and EBX,4
            jne .L_403f48

            mov R14,RDI
            mov RDI,RDX
            mov R12,RDX
            mov R15,RCX
            mov RBP,R8
            call .L_404490

            test EAX,EAX
            mov R13D,EAX
            je .L_403ed8

            mov RDI,RBP
            call .L_405420

            mov RDI,RBP
            call .L_4055b0

            mov RDI,RBP
            mov QWORD PTR [RSP+16],RAX
            call .L_4055b0

            test RAX,RAX
            mov QWORD PTR [RSP+48],RAX
            je .L_403ea0

            cmp QWORD PTR [RSP+16],0
            je .L_403ea0

            mov RSI,QWORD PTR [RSP+8]
            mov RCX,RBP
            mov RDX,R15
            mov RDI,RAX
            mov QWORD PTR [RSP+8],RAX
            call .L_407250

            test EAX,EAX
            je .L_403ea0

            mov R9,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [R9+8]
            test ESI,ESI
            je .L_403f20

            cmp R13D,671
            jg .L_403f10

            cmp R13D,239
            jg .L_403f38

            cmp R13D,79
            jg .L_403f78

            cmp R13D,23
            jle .L_403f85

            mov DWORD PTR [RSP+36],3
            nop
            nop
            nop
            nop
            nop
            nop
.L_403db8:

            mov RDI,QWORD PTR [RSP+16]
            mov R8,RBP
            mov RCX,R15
            mov RDX,R9
            mov RSI,R9
            call .L_4073f0

            test EAX,EAX
            je .L_403ea0

            mov EAX,DWORD PTR [RSP+36]
            lea R9,QWORD PTR [RSP+48]
            lea ECX,DWORD PTR [RAX-1]
            mov EAX,1
            shl EAX,CL
            sub EAX,2
            lea RAX,QWORD PTR [R9+RAX*8+8]
            mov QWORD PTR [RSP+24],RAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_403e00:

            mov RDI,RBP
            mov QWORD PTR [RSP+8],R9
            call .L_4055b0

            mov R9,QWORD PTR [RSP+8]
            test RAX,RAX
            mov QWORD PTR [R9+8],RAX
            je .L_403ea0

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [R9]
            mov R8,RBP
            mov RCX,R15
            mov RDI,RAX
            call .L_4073f0

            test EAX,EAX
            je .L_403ea0

            mov R9,QWORD PTR [RSP+8]
            add R9,8
            cmp R9,QWORD PTR [RSP+24]
            jne .L_403e00
.L_403e49:

            mov ESI,1
            mov RDI,R14
            call .L_4048e0

            test EAX,EAX
            je .L_403ea0

            lea EAX,DWORD PTR [R13-1]
            mov DWORD PTR [RSP+8],1
            mov DWORD PTR [RSP+40],EAX
.L_403e6a:

            mov ESI,DWORD PTR [RSP+40]
            mov RDI,R12
            call .L_404d50

            test EAX,EAX
            jne .L_403f92

            mov ECX,DWORD PTR [RSP+8]
            test ECX,ECX
            je .L_404084
.L_403e8a:

            mov EDX,DWORD PTR [RSP+40]
            test EDX,EDX
            jne .L_4040a8
.L_403e96:

            mov EBX,1
            nop
            nop
            nop
            nop
            nop
.L_403ea0:

            mov RDI,RBP
            call .L_405530
.L_403ea8:

            mov RDX,QWORD PTR [RSP+312]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_4040c7

            add RSP,328
.L_403ec8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403ed8:

            mov RAX,QWORD PTR [RSP+312]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4040c7

            add RSP,328
            mov RDI,R14
            mov ESI,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4048e0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403f10:

            mov DWORD PTR [RSP+36],6
            jmp .L_403db8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403f20:

            xor ESI,ESI
            mov RDI,R14
            mov EBX,1
            call .L_4048e0

            jmp .L_403ea0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_403f38:

            mov DWORD PTR [RSP+36],5
            jmp .L_403db8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_403f48:

            lea RCX,QWORD PTR [RIP+.L_4040cc]
            mov R8D,1294
            mov EDX,66
            mov ESI,126
            mov EDI,3
            mov EBX,4294967295
            call .L_416a00

            jmp .L_403ea8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_403f78:

            mov DWORD PTR [RSP+36],4
            jmp .L_403db8
.L_403f85:

            mov DWORD PTR [RSP+36],1
            jmp .L_403e49
.L_403f92:

            cmp DWORD PTR [RSP+36],1
            je .L_4040b2

            mov R8D,DWORD PTR [RSP+40]
            mov DWORD PTR [RSP+24],0
            mov DWORD PTR [RSP+44],1
            sub R8D,1
            js .L_404007

            mov R13D,1
            jmp .L_403fca
.L_403fc0:

            sub R8D,1
            cmp R8D,-1
            je .L_404007
.L_403fca:

            mov ESI,R8D
            mov RDI,R12
            mov DWORD PTR [RSP+16],R8D
            call .L_404d50

            test EAX,EAX
            mov R8D,DWORD PTR [RSP+16]
            je .L_403ffc

            mov ECX,R13D
            sub ECX,DWORD PTR [RSP+24]
            mov EAX,DWORD PTR [RSP+44]
            mov DWORD PTR [RSP+24],R13D
            shl EAX,CL
            or EAX,1
            mov DWORD PTR [RSP+44],EAX
.L_403ffc:

            add R13D,1
            cmp R13D,DWORD PTR [RSP+36]
            jne .L_403fc0
.L_404007:

            mov EAX,DWORD PTR [RSP+8]
            test EAX,EAX
            je .L_404067
.L_40400f:

            mov EAX,DWORD PTR [RSP+44]
            mov R8,RBP
            mov RCX,R15
            mov RSI,R14
            mov RDI,R14
            sar EAX,1
            cdqe 
            mov RDX,QWORD PTR [RSP+RAX*8+48]
            call .L_4073f0

            test EAX,EAX
            je .L_403ea0

            mov EAX,DWORD PTR [RSP+24]
            add EAX,1
            sub DWORD PTR [RSP+40],EAX
            js .L_403e96

            mov DWORD PTR [RSP+8],0
            jmp .L_403e6a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404058:

            add DWORD PTR [RSP+8],1
            mov EAX,DWORD PTR [RSP+8]
            cmp EAX,DWORD PTR [RSP+24]
            jg .L_40400f
.L_404067:

            mov R8,RBP
            mov RCX,R15
            mov RDX,R14
            mov RSI,R14
            mov RDI,R14
            call .L_4073f0

            test EAX,EAX
            jne .L_404058

            jmp .L_403ea0
.L_404084:

            mov R8,RBP
            mov RCX,R15
            mov RDX,R14
            mov RSI,R14
            mov RDI,R14
            call .L_4073f0

            test EAX,EAX
            jne .L_403e8a

            jmp .L_403ea0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4040a8:

            sub DWORD PTR [RSP+40],1
            jmp .L_403e6a
.L_4040b2:

            mov DWORD PTR [RSP+44],1
            mov DWORD PTR [RSP+24],0
            jmp .L_404007
.L_4040c7:

            call __stack_chk_fail@PLT
.L_4040cc:
          .string "bn_exp.c"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
.L_4040e0:

            push RBP
            push RBX
            sub RSP,24
.L_4040e6:

            cmp ESI,8388607
            jg .L_404200

            test BYTE PTR [RDI+20],2
            mov RBX,RDI
            jne .L_4041d8

            lea EDI,DWORD PTR [RSI*8]
            lea RSI,QWORD PTR [RIP+.L_4050ca]
            mov EDX,303
            call .L_418820

            test RAX,RAX
            je .L_404228

            mov R11,QWORD PTR [RBX]
            test R11,R11
            je .L_4041a0

            mov EBX,DWORD PTR [RBX+8]
            mov EDX,EBX
            sar EDX,2
            test EDX,EDX
            jle .L_4041d0

            lea ESI,DWORD PTR [RDX-1]
            mov RCX,R11
            mov RDX,RAX
            mov RBP,RSI
            add RSI,1
            shl RSI,5
            add RSI,RAX
            nop
.L_404150:

            mov R10,QWORD PTR [RCX]
            mov R9,QWORD PTR [RCX+8]
            add RDX,32
            mov R8,QWORD PTR [RCX+16]
            mov RDI,QWORD PTR [RCX+24]
            add RCX,32
            mov QWORD PTR [RDX-32],R10
            mov QWORD PTR [RDX-24],R9
            mov QWORD PTR [RDX-16],R8
            mov QWORD PTR [RDX-8],RDI
            cmp RDX,RSI
            jne .L_404150

            movsxd RDX,EBP
            add RDX,1
            shl RDX,5
            lea RCX,QWORD PTR [RAX+RDX*1]
            add R11,RDX
.L_40418e:

            and EBX,3
            cmp EBX,2
            je .L_4041b8

            cmp EBX,3
            je .L_4041b0

            cmp EBX,1
            je .L_4041c0
.L_4041a0:

            add RSP,24
.L_4041a4:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4041b0:

            mov RDX,QWORD PTR [R11+16]
            mov QWORD PTR [RCX+16],RDX
.L_4041b8:

            mov RDX,QWORD PTR [R11+8]
            mov QWORD PTR [RCX+8],RDX
.L_4041c0:

            mov RDX,QWORD PTR [R11]
            mov QWORD PTR [RCX],RDX
            add RSP,24
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4041d0:

            mov RCX,RAX
            jmp .L_40418e
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4041d8:

            lea RCX,QWORD PTR [RIP+.L_4050ca]
            mov R8D,300
            mov EDX,105
            mov ESI,120
            mov EDI,3
            call .L_416a00

            xor EAX,EAX
            jmp .L_4041a0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404200:

            lea RCX,QWORD PTR [RIP+.L_4050ca]
            mov R8D,296
            mov EDX,114
            mov ESI,120
            mov EDI,3
            call .L_416a00

            xor EAX,EAX
            jmp .L_4041a0
.L_404228:

            lea RCX,QWORD PTR [RIP+.L_4050ca]
            mov R8D,305
            mov EDX,65
            mov ESI,120
            mov EDI,3
            mov QWORD PTR [RSP+8],RAX
            call .L_416a00

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_4041a0
.L_404258:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404260:

            push R12
            push RBP
            mov EBP,ESI
            push RBX
            mov RBX,RDI
            call .L_4040e0

            test RAX,RAX
            je .L_404298

            mov RDI,QWORD PTR [RBX]
            mov R12,RAX
            test RDI,RDI
            je .L_404283

            call .L_418aa0
.L_404283:

            mov QWORD PTR [RBX],R12
            mov DWORD PTR [RBX+12],EBP
            mov RAX,RBX
.L_40428c:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404298:

            xor EAX,EAX
            jmp .L_40428c
.L_40429c:

            nop
            nop
            nop
            nop
.L_4042a0:

            test EDI,EDI
            js .L_4042b5

            cmp EDI,31
            mov EAX,31
            cmovg EDI,EAX
            mov DWORD PTR [RIP+.L_639798],EDI
.L_4042b5:

            test ESI,ESI
            js .L_4042ca

            cmp ESI,31
            mov EAX,31
            cmovg ESI,EAX
            mov DWORD PTR [RIP+.L_639790],ESI
.L_4042ca:

            test EDX,EDX
            js .L_4042df

            cmp EDX,31
            mov EAX,31
            cmovg EDX,EAX
            mov DWORD PTR [RIP+.L_639794],EDX
.L_4042df:

            test ECX,ECX
            js .L_4042f4

            cmp ECX,31
            mov EAX,31
            cmovg ECX,EAX
            mov DWORD PTR [RIP+.L_63978c],ECX
.L_4042f4:

            ret 
.L_4042f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404300:

            test EDI,EDI
            je .L_404320

            cmp EDI,1
            je .L_404330

            cmp EDI,2
            je .L_404340

            cmp EDI,3
            mov EAX,0
            cmove EAX,DWORD PTR [RIP+.L_63978c]
            ret 
          .byte 0x66
          .byte 0x90
.L_404320:

            mov EAX,DWORD PTR [RIP+.L_639798]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404330:

            mov EAX,DWORD PTR [RIP+.L_639790]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404340:

            mov EAX,DWORD PTR [RIP+.L_639794]
            ret 
.L_404347:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404350:

            lea RAX,QWORD PTR [RIP+.L_62f660]
            ret 
.L_404358:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404360:

            movabs RAX,-4294967296
            test RDI,RAX
            je .L_4043a8

            movabs RAX,-281474976710656
            test RDI,RAX
            je .L_4043f8

            movabs RAX,-72057594037927936
            test RDI,RAX
            je .L_404420

            lea RAX,QWORD PTR [RIP+.L_405120]
            shr RDI,56
            movzx EAX,BYTE PTR [RAX+RDI*1]
            add EAX,56
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4043a8:

            test EDI,4294901760
            je .L_4043d8

            test EDI,4278190080
            je .L_404450

            shr RDI,24
            lea RAX,QWORD PTR [RIP+.L_405120]
            movsxd RDI,EDI
            movzx EAX,BYTE PTR [RAX+RDI*1]
            add EAX,24
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4043d8:

            test EDI,65280
            jne .L_404470

            lea RAX,QWORD PTR [RIP+.L_405120]
            movsxd RDI,EDI
            movzx EAX,BYTE PTR [RAX+RDI*1]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4043f8:

            movabs RAX,280375465082880
            test RDI,RAX
            je .L_404438

            lea RAX,QWORD PTR [RIP+.L_405120]
            shr RDI,40
            movzx EAX,BYTE PTR [RAX+RDI*1]
            add EAX,40
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404420:

            lea RAX,QWORD PTR [RIP+.L_405120]
            shr RDI,48
            movzx EAX,BYTE PTR [RAX+RDI*1]
            add EAX,48
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404438:

            lea RAX,QWORD PTR [RIP+.L_405120]
            sar RDI,32
            movzx EAX,BYTE PTR [RAX+RDI*1]
            add EAX,32
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404450:

            shr RDI,16
            lea RAX,QWORD PTR [RIP+.L_405120]
            movsxd RDI,EDI
            movzx EAX,BYTE PTR [RAX+RDI*1]
            add EAX,16
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404470:

            shr RDI,8
            lea RAX,QWORD PTR [RIP+.L_405120]
            movsxd RDI,EDI
            movzx EAX,BYTE PTR [RAX+RDI*1]
            add EAX,8
            ret 
.L_404486:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404490:

            mov EDX,DWORD PTR [RDI+8]
            xor EAX,EAX
            test EDX,EDX
            je .L_4044b0

            mov RAX,QWORD PTR [RDI]
            sub EDX,1
            movsxd RCX,EDX
            mov RDI,QWORD PTR [RAX+RCX*8]
            call .L_404360

            shl EDX,6
            add EAX,EDX
.L_4044b0:

            ret 
.L_4044b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4044c0:

            test RDI,RDI
            je .L_404530

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_404510

            movsxd RSI,DWORD PTR [RBX+12]
            shl RSI,3
            call .L_41aa70

            mov EBP,DWORD PTR [RBX+20]
            test BPL,2
            je .L_404508
.L_4044ec:

            mov ESI,24
            mov RDI,RBX
            call .L_41aa70

            and EBP,1
            jne .L_404518

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404508:

            mov RDI,QWORD PTR [RBX]
            call .L_418aa0
.L_404510:

            mov EBP,DWORD PTR [RBX+20]
            jmp .L_4044ec
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404518:

            add RSP,8
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_418aa0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404530:

            ret 
.L_404532:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404540:

            test RDI,RDI
            je .L_404580

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            mov EAX,DWORD PTR [RBX+20]
            test RDI,RDI
            je .L_404558

            test AL,2
            je .L_404588
.L_404558:

            test AL,1
            jne .L_404570

            or AH,128
            mov QWORD PTR [RBX],0
            mov DWORD PTR [RBX+20],EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404570:

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404580:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404588:

            call .L_418aa0

            mov EAX,DWORD PTR [RBX+20]
            jmp .L_404558
.L_404592:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4045a0:

            pxor XMM0,XMM0
            mov QWORD PTR [RDI+16],0
            movups XMMWORD PTR [RDI],XMM0
            ret 
.L_4045b0:

            lea RSI,QWORD PTR [RIP+.L_4050ca]
            sub RSP,24
            mov EDX,272
            mov EDI,24
            call .L_418820

            test RAX,RAX
            je .L_4045f8

            movabs RCX,4294967296
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],RCX
.L_4045ec:

            add RSP,24
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4045f8:

            lea RCX,QWORD PTR [RIP+.L_4050ca]
            mov R8D,273
            mov EDX,65
            mov ESI,113
            mov EDI,3
            mov QWORD PTR [RSP+8],RAX
            call .L_416a00

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_4045ec
.L_404625:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404630:

            cmp DWORD PTR [RDI+12],ESI
            jl .L_404640

            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404640:

            jmp .L_404260
.L_404645:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404650:

            cmp RDI,RSI
            mov RAX,RDI
            je .L_404750

            push R14
            push R12
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_40466c:

            mov ESI,DWORD PTR [RSI+8]
            cmp ESI,DWORD PTR [RDI+12]
            jg .L_404718
.L_404678:

            mov R10D,ESI
            mov R12,QWORD PTR [RBX]
            mov R11,QWORD PTR [RBP]
            sar R10D,2
            test R10D,R10D
            jle .L_4046e6

            lea ECX,DWORD PTR [R10-1]
            mov RDX,R12
            mov RAX,R11
            mov R10,RCX
            add RCX,1
            shl RCX,5
            add RCX,R11
            nop
            nop
            nop
            nop
            nop
.L_4046a8:

            mov R9,QWORD PTR [RAX+8]
            mov R8,QWORD PTR [RAX+16]
            add RAX,32
            mov RDI,QWORD PTR [RAX-8]
            mov R14,QWORD PTR [RAX-32]
            add RDX,32
            mov QWORD PTR [RDX-24],R9
            mov QWORD PTR [RDX-16],R8
            mov QWORD PTR [RDX-32],R14
            mov QWORD PTR [RDX-8],RDI
            cmp RAX,RCX
            jne .L_4046a8

            movsxd R10,R10D
            add R10,1
            shl R10,5
            add R12,R10
            add R11,R10
.L_4046e6:

            mov EAX,ESI
            and EAX,3
            cmp EAX,2
            je .L_404739

            cmp EAX,3
            je .L_404730

            cmp EAX,1
            je .L_404742
.L_4046fa:

            mov EAX,DWORD PTR [RBP+16]
            mov DWORD PTR [RBX+8],ESI
            mov DWORD PTR [RBX+16],EAX
            mov RAX,RBX
.L_404706:

            add RSP,8
.L_40470a:

            pop RBX
            pop RBP
            pop R12
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404718:

            call .L_404260

            test RAX,RAX
            je .L_404706

            mov ESI,DWORD PTR [RBP+8]
            jmp .L_404678
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404730:

            mov RAX,QWORD PTR [R11+16]
            mov QWORD PTR [R12+16],RAX
.L_404739:

            mov RAX,QWORD PTR [R11+8]
            mov QWORD PTR [R12+8],RAX
.L_404742:

            mov RAX,QWORD PTR [R11]
            mov QWORD PTR [R12],RAX
            jmp .L_4046fa
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404750:

            ret 
.L_404752:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404760:

            push RBP
            push RBX
            sub RSP,8
            test RDI,RDI
            je .L_4047a0

            mov RBX,RDI
            call .L_4045b0

            test RAX,RAX
            mov RBP,RAX
            je .L_4047a0

            mov RSI,RBX
            mov RDI,RAX
            call .L_404650

            test RAX,RAX
            je .L_404798

            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404798:

            mov RDI,RBP
            call .L_404540
.L_4047a0:

            xor EBP,EBP
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
.L_4047ac:

            nop
            nop
            nop
            nop
.L_4047b0:

            cmp DWORD PTR [RDI+12],ESI
            jge .L_4047f8

            push R12
            push RBP
            mov EBP,ESI
            push RBX
            mov RBX,RDI
            sub RSP,16
            call .L_4040e0

            test RAX,RAX
            mov R12,RAX
            je .L_404800

            call .L_4045b0

            test RAX,RAX
            je .L_404804

            mov EDX,DWORD PTR [RBX+8]
            mov DWORD PTR [RAX+12],EBP
            mov DWORD PTR [RAX+8],EDX
            mov EDX,DWORD PTR [RBX+16]
            mov QWORD PTR [RAX],R12
            mov DWORD PTR [RAX+16],EDX
.L_4047eb:

            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4047f8:

            jmp .L_404760
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404800:

            xor EAX,EAX
            jmp .L_4047eb
.L_404804:

            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            call .L_418aa0

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_4047eb
.L_404818:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404820:

            mov R11,QWORD PTR [RSI]
            mov EAX,DWORD PTR [RSI+20]
            mov R10,QWORD PTR [RDI]
            mov R9D,DWORD PTR [RDI+8]
            mov EDX,DWORD PTR [RDI+20]
            mov R8D,DWORD PTR [RDI+12]
            mov QWORD PTR [RDI],R11
            mov R11D,DWORD PTR [RSI+8]
            mov ECX,DWORD PTR [RDI+16]
            mov DWORD PTR [RDI+8],R11D
            mov R11D,DWORD PTR [RSI+12]
            mov DWORD PTR [RDI+12],R11D
            mov R11D,DWORD PTR [RSI+16]
            mov DWORD PTR [RDI+16],R11D
            mov DWORD PTR [RSI+12],R8D
            mov R8D,EAX
            mov DWORD PTR [RSI+16],ECX
            mov ECX,EDX
            and R8D,2
            and ECX,1
            and EAX,1
            and EDX,2
            or ECX,R8D
            or EAX,EDX
            mov QWORD PTR [RSI],R10
            mov DWORD PTR [RSI+8],R9D
            mov DWORD PTR [RDI+20],ECX
            mov DWORD PTR [RSI+20],EAX
            ret 
.L_40487e:

            nop
            nop
.L_404880:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_40489b

            movsxd RDX,DWORD PTR [RBX+12]
            xor ESI,ESI
            shl RDX,3
            call memset@PLT
.L_40489b:

            mov DWORD PTR [RBX+8],0
            mov DWORD PTR [RBX+16],0
            pop RBX
            ret 
.L_4048ab:

            nop
            nop
            nop
            nop
            nop
.L_4048b0:

            cmp DWORD PTR [RDI+8],1
            mov RAX,-1
            jg .L_4048c4

            mov EAX,0
            je .L_4048d0
.L_4048c4:

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4048d0:

            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX]
            ret 
.L_4048d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4048e0:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RDI+12]
            test EAX,EAX
            jle .L_404920
.L_4048f3:

            mov RAX,QWORD PTR [RBX]
            mov DWORD PTR [RBX+16],0
            mov QWORD PTR [RAX],RBP
            xor EAX,EAX
            test RBP,RBP
            setne AL
            mov DWORD PTR [RBX+8],EAX
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404920:

            mov ESI,1
            call .L_404260

            test RAX,RAX
            jne .L_4048f3

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_404936:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404940:

            push R14
            push R13
            xor R14D,R14D
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,16
.L_404952:

            test RDX,RDX
            je .L_404a60
.L_40495b:

            test ESI,ESI
            je .L_404a08

            lea R12D,DWORD PTR [RSI-1]
            mov R13D,R12D
            shr R13D,3
            add R13D,1
            cmp DWORD PTR [RDX+12],R13D
            mov EBP,R13D
            jl .L_404a20
.L_40497f:

            mov ECX,R12D
            mov ESI,R12D
            mov DWORD PTR [RDX+8],R13D
            and ECX,7
            mov DWORD PTR [RDX+16],0
            mov R9,QWORD PTR [RDX]
            lea R8,QWORD PTR [RBX+RSI*1+1]
            mov EDI,R13D
            xor EAX,EAX
            jmp .L_4049b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4049a8:

            sub ECX,1
            cmp R8,RBX
            je .L_4049d9
.L_4049b0:

            add RBX,1
            movzx ESI,BYTE PTR [RBX-1]
            shl RAX,8
            or RAX,RSI
            test ECX,ECX
            jne .L_4049a8

            lea ECX,DWORD PTR [RDI-1]
            mov QWORD PTR [R9+RCX*8],RAX
            xor EAX,EAX
            cmp R8,RBX
            mov RDI,RCX
            mov ECX,7
            jne .L_4049b0
.L_4049d9:

            lea RAX,QWORD PTR [R9+R13*8-8]
            nop
            nop
.L_4049e0:

            cmp QWORD PTR [RAX],0
            jne .L_4049ef

            sub RAX,8
            sub EBP,1
            jne .L_4049e0
.L_4049ef:

            mov DWORD PTR [RDX+8],EBP
            add RSP,16
.L_4049f6:

            mov RAX,RDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404a08:

            mov DWORD PTR [RDX+8],0
            add RSP,16
            mov RAX,RDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_404a20:

            mov RDI,RDX
            mov ESI,R13D
            mov QWORD PTR [RSP],RDX
            call .L_404260

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            mov RDX,QWORD PTR [RSP]
            jne .L_40497f

            test R14,R14
            je .L_404a7a

            mov RDI,R14
            call .L_404540

            mov RAX,QWORD PTR [RSP+8]
            add RSP,16
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_404a60:

            mov DWORD PTR [RSP],ESI
            call .L_4045b0

            test RAX,RAX
            mov RDX,RAX
            mov R14,RAX
            mov ESI,DWORD PTR [RSP]
            jne .L_40495b
.L_404a7a:

            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_404a89:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404a90:

            mov R9,RDI
            call .L_404490

            lea EDX,DWORD PTR [RAX+14]
            add EAX,7
            cmovs EAX,EDX
            sar EAX,3
            test EAX,EAX
            lea EDX,DWORD PTR [RAX-1]
            je .L_404af0

            nop
            nop
            nop
            nop
            nop
.L_404ab0:

            lea EDI,DWORD PTR [RDX+7]
            test EDX,EDX
            mov R8D,EDX
            mov R10,QWORD PTR [R9]
            cmovns EDI,EDX
            sar R8D,31
            add RSI,1
            shr R8D,29
            sar EDI,3
            lea ECX,DWORD PTR [RDX+R8*1]
            movsxd RDI,EDI
            sub EDX,1
            mov RDI,QWORD PTR [R10+RDI*8]
            and ECX,7
            sub ECX,R8D
            shl ECX,3
            shr RDI,CL
            mov BYTE PTR [RSI-1],DIL
            cmp EDX,-1
            jne .L_404ab0
.L_404af0:

            ret 
.L_404af2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404b00:

            mov EDX,DWORD PTR [RDI+8]
            mov EAX,EDX
            sub EAX,DWORD PTR [RSI+8]
            jne .L_404b57

            sub EDX,1
            mov R9,QWORD PTR [RDI]
            mov R10,QWORD PTR [RSI]
            mov R8D,EDX
            js .L_404b57

            movsxd RDI,EDX
            mov R8D,R8D
            mov RCX,QWORD PTR [R9+RDI*8]
            mov RSI,QWORD PTR [R10+RDI*8]
            lea RDX,QWORD PTR [RDI*8]
            sub RDI,R8
            shl RDI,3
            cmp RCX,RSI
            je .L_404b52

            jmp .L_404b60
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404b40:

            mov RCX,QWORD PTR [R9+RDX*1-8]
            sub RDX,8
            mov RSI,QWORD PTR [R10+RDX*1]
            cmp RCX,RSI
            jne .L_404b60
.L_404b52:

            cmp RDX,RDI
            jne .L_404b40
.L_404b57:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404b60:

            cmp RSI,RCX
            sbb EAX,EAX
            and EAX,2
            sub EAX,1
            ret 
.L_404b6c:

            nop
            nop
            nop
            nop
.L_404b70:

            test RDI,RDI
            je .L_404b90

            test RSI,RSI
            je .L_404b90

            mov EAX,DWORD PTR [RDI+16]
            cmp EAX,DWORD PTR [RSI+16]
            je .L_404ba8

            cmp EAX,1
            sbb EAX,EAX
            and EAX,2
            sub EAX,1
            ret 
          .byte 0x66
          .byte 0x90
.L_404b90:

            test RDI,RDI
            mov EAX,4294967295
            jne .L_404bca

            xor EAX,EAX
            test RSI,RSI
            setne AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404ba8:

            cmp EAX,1
            mov EDX,DWORD PTR [RDI+8]
            sbb R8D,R8D
            or R8D,1
            cmp EAX,1
            sbb EAX,EAX
            and EAX,2
            sub EAX,1
            cmp EDX,DWORD PTR [RSI+8]
            jg .L_404bca

            jge .L_404bd0
.L_404bc7:

            mov EAX,R8D
.L_404bca:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404bd0:

            mov ECX,EDX
            sub ECX,1
            js .L_404c1d

            mov R9,QWORD PTR [RDI]
            mov R10,QWORD PTR [RSI]
            movsxd RDI,ECX
            lea RDX,QWORD PTR [RDI*8]
            mov RSI,QWORD PTR [R10+RDI*8]
            cmp QWORD PTR [R9+RDI*8],RSI
            ja .L_404bca

            jb .L_404bc7

            mov ECX,ECX
            sub RDI,RCX
            shl RDI,3
            jmp .L_404c18
          .byte 0x90
.L_404c00:

            mov RSI,QWORD PTR [R9+RDX*1-8]
            mov RCX,QWORD PTR [R10+RDX*1-8]
            cmp RSI,RCX
            ja .L_404bca

            sub RDX,8
            cmp RSI,RCX
            jb .L_404bc7
.L_404c18:

            cmp RDX,RDI
            jne .L_404c00
.L_404c1d:

            xor EAX,EAX
            ret 
.L_404c20:

            test ESI,ESI
            js .L_404cd0

            push R12
            push RBP
            mov ECX,ESI
            push RBX
            mov EBX,ESI
            and ECX,63
            sar EBX,6
            sub RSP,16
            movsxd RAX,DWORD PTR [RDI+8]
            cmp EAX,EBX
            jle .L_404c68

            mov RDX,QWORD PTR [RDI]
.L_404c45:

            movsxd RBX,EBX
            mov EAX,1
            shl RAX,CL
            or QWORD PTR [RDX+RBX*8],RAX
            add RSP,16
            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404c68:

            mov EDX,DWORD PTR [RDI+12]
            mov RBP,RDI
            lea R12D,DWORD PTR [RBX+1]
            cmp EDX,EBX
            jg .L_404ca0

            cmp EDX,R12D
            jge .L_404ca0

            mov ESI,R12D
            mov DWORD PTR [RSP+12],ECX
            call .L_404260

            test RAX,RAX
            mov ECX,DWORD PTR [RSP+12]
            jne .L_404cd3

            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404ca0:

            mov RSI,QWORD PTR [RBP]
.L_404ca4:

            mov RDX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404cb0:

            mov QWORD PTR [RSI+RAX*8],0
            add RAX,1
            cmp EBX,EAX
            jge .L_404cb0
.L_404cc0:

            mov DWORD PTR [RBP+8],R12D
            jmp .L_404c45
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_404cd0:

            xor EAX,EAX
            ret 
.L_404cd3:

            movsxd RAX,DWORD PTR [RBP+8]
            mov RSI,QWORD PTR [RBP]
            mov RDX,RSI
            cmp EBX,EAX
            jl .L_404cc0

            jmp .L_404ca4
.L_404ce4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404cf0:

            xor EAX,EAX
            test ESI,ESI
            js .L_404d40

            mov EDX,DWORD PTR [RDI+8]
            mov ECX,ESI
            sar ECX,6
            cmp EDX,ECX
            jle .L_404d40

            mov R9,QWORD PTR [RDI]
            movsxd RAX,ECX
            mov R8D,1
            mov ECX,ESI
            shl R8,CL
            not R8
            and QWORD PTR [R9+RAX*8],R8
            movsxd RAX,EDX
            lea RAX,QWORD PTR [R9+RAX*8-8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_404d28:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_404d38

            sub EDX,1
            jne .L_404d28
.L_404d38:

            mov DWORD PTR [RDI+8],EDX
            mov EAX,1
.L_404d40:

            ret 
.L_404d42:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404d50:

            xor EAX,EAX
            test ESI,ESI
            js .L_404d72

            mov EDX,ESI
            sar EDX,6
            cmp DWORD PTR [RDI+8],EDX
            jle .L_404d72

            mov RAX,QWORD PTR [RDI]
            movsxd RDX,EDX
            mov ECX,ESI
            mov RAX,QWORD PTR [RAX+RDX*8]
            shr RAX,CL
            and EAX,1
.L_404d72:

            ret 
.L_404d74:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404d80:

            xor EAX,EAX
            test ESI,ESI
            js .L_404de8

            mov EDX,ESI
            sar EDX,6
            cmp DWORD PTR [RDI+8],EDX
            jle .L_404de8

            and ESI,63
            je .L_404df0

            mov R9,QWORD PTR [RDI]
            lea R8D,DWORD PTR [RDX+1]
            mov RAX,-1
            mov ECX,ESI
            movsxd RDX,EDX
            shl RAX,CL
            mov DWORD PTR [RDI+8],R8D
            not RAX
            and QWORD PTR [R9+RDX*8],RAX
            mov EDX,R8D
.L_404db9:

            test EDX,EDX
            mov EAX,1
            jle .L_404de8

            mov RCX,QWORD PTR [RDI]
            movsxd RAX,EDX
            lea RAX,QWORD PTR [RCX+RAX*8-8]
            nop
            nop
            nop
.L_404dd0:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_404de0

            sub EDX,1
            jne .L_404dd0
.L_404de0:

            mov DWORD PTR [RDI+8],EDX
            mov EAX,1
.L_404de8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404df0:

            mov DWORD PTR [RDI+8],EDX
            jmp .L_404db9
.L_404df5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404e00:

            test ESI,ESI
            je .L_404e0b

            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            jne .L_404e18
.L_404e0b:

            mov DWORD PTR [RDI+16],0
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404e18:

            mov DWORD PTR [RDI+16],1
            ret 
.L_404e20:

            movsxd RAX,EDX
            shl RAX,3
            mov RCX,QWORD PTR [RDI+RAX*1-8]
            mov RAX,QWORD PTR [RSI+RAX*1-8]
            cmp RCX,RAX
            je .L_404e48

            cmp RAX,RCX
            sbb EAX,EAX
            and EAX,2
            sub EAX,1
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404e48:

            sub EDX,2
            mov R9D,EDX
            js .L_404e8f

            movsxd RDX,EDX
            mov R9D,R9D
            mov RCX,QWORD PTR [RDI+RDX*8]
            mov R8,QWORD PTR [RSI+RDX*8]
            lea RAX,QWORD PTR [RDX*8]
            sub RDX,R9
            shl RDX,3
            cmp RCX,R8
            je .L_404e8a

            jmp .L_404e98
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404e78:

            mov RCX,QWORD PTR [RDI+RAX*1-8]
            sub RAX,8
            mov R8,QWORD PTR [RSI+RAX*1]
            cmp RCX,R8
            jne .L_404e98
.L_404e8a:

            cmp RAX,RDX
            jne .L_404e78
.L_404e8f:

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404e98:

            cmp R8,RCX
            sbb EAX,EAX
            and EAX,2
            sub EAX,1
            ret 
.L_404ea4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404eb0:

            test ECX,ECX
            lea EAX,DWORD PTR [RDX-1]
            js .L_404ef8

            je .L_404eef

            movsxd R8,EAX
            movsxd RAX,ECX
            sub ECX,1
            add R8,RAX
            shl RCX,3
            shl R8,3
            lea RAX,QWORD PTR [RDI+R8*1]
            lea R8,QWORD PTR [RDI+R8*1-8]
            sub R8,RCX
            mov RCX,R8
            nop
            nop
            nop
            nop
.L_404ee0:

            cmp QWORD PTR [RAX],0
            jne .L_404f48

            sub RAX,8
            cmp RAX,RCX
            jne .L_404ee0
.L_404eef:

            jmp .L_404e20
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_404ef8:

            movsxd R8,EAX
            movsxd R9,ECX
            lea R10,QWORD PTR [RSI-8]
            mov RAX,R8
            not ECX
            sub RAX,R9
            shl R9,3
            shl RCX,3
            sub R10,R9
            lea RAX,QWORD PTR [RSI+RAX*8]
            lea R8,QWORD PTR [R10+R8*8]
            sub R8,RCX
            cmp QWORD PTR [RAX],0
            mov RCX,R8
            jne .L_404f3f

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_404f30:

            sub RAX,8
            cmp RAX,RCX
            je .L_404eef

            cmp QWORD PTR [RAX],0
            je .L_404f30
.L_404f3f:

            mov EAX,4294967295
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_404f48:

            mov EAX,1
            ret 
.L_404f4e:

            nop
            nop
.L_404f50:

            mov R8D,DWORD PTR [RSI+8]
            mov EAX,DWORD PTR [RDX+8]
            sub RDI,1
            shr RDI,63
            sub RDI,1
            xor EAX,R8D
            cdqe 
            and RAX,RDI
            xor R8D,EAX
            mov DWORD PTR [RSI+8],R8D
            xor DWORD PTR [RDX+8],EAX
            cmp ECX,10
            mov RSI,QWORD PTR [RSI]
            mov RAX,QWORD PTR [RDX]
            ja .L_404f98

            lea R9,QWORD PTR [RIP+.L_4050e0]
            mov R8D,ECX
            movsxd RDX,DWORD PTR [R9+R8*4]
            add RDX,R9
            jmp RDX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_404f98:

            cmp ECX,10
            jle .L_404fd3

            sub ECX,11
            lea R8,QWORD PTR [RSI+80]
            lea RDX,QWORD PTR [RAX+80]
            lea R10,QWORD PTR [RSI+RCX*8+88]
            nop
            nop
            nop
.L_404fb0:

            mov R9,QWORD PTR [R8]
            mov RCX,QWORD PTR [RDX]
            add R8,8
            xor RCX,R9
            and RCX,RDI
            xor R9,RCX
            mov QWORD PTR [R8-8],R9
            xor QWORD PTR [RDX],RCX
            add RDX,8
            cmp R10,R8
            jne .L_404fb0
.L_404fd3:

            mov RCX,QWORD PTR [RSI+72]
            mov RDX,QWORD PTR [RAX+72]
            xor RDX,RCX
            and RDX,RDI
            xor RCX,RDX
            mov QWORD PTR [RSI+72],RCX
            xor QWORD PTR [RAX+72],RDX
.L_404fec:

            mov RCX,QWORD PTR [RSI+64]
            mov RDX,QWORD PTR [RAX+64]
            xor RDX,RCX
            and RDX,RDI
            xor RCX,RDX
            mov QWORD PTR [RSI+64],RCX
            xor QWORD PTR [RAX+64],RDX
.L_405005:

            mov RCX,QWORD PTR [RSI+56]
            mov RDX,QWORD PTR [RAX+56]
            xor RDX,RCX
            and RDX,RDI
            xor RCX,RDX
            mov QWORD PTR [RSI+56],RCX
            xor QWORD PTR [RAX+56],RDX
.L_40501e:

            mov RCX,QWORD PTR [RSI+48]
            mov RDX,QWORD PTR [RAX+48]
            xor RDX,RCX
            and RDX,RDI
            xor RCX,RDX
            mov QWORD PTR [RSI+48],RCX
            xor QWORD PTR [RAX+48],RDX
.L_405037:

            mov RCX,QWORD PTR [RSI+40]
            mov RDX,QWORD PTR [RAX+40]
            xor RDX,RCX
            and RDX,RDI
            xor RCX,RDX
            mov QWORD PTR [RSI+40],RCX
            xor QWORD PTR [RAX+40],RDX
.L_405050:

            mov RCX,QWORD PTR [RSI+32]
            mov RDX,QWORD PTR [RAX+32]
            xor RDX,RCX
            and RDX,RDI
            xor RCX,RDX
            mov QWORD PTR [RSI+32],RCX
            xor QWORD PTR [RAX+32],RDX
.L_405069:

            mov RCX,QWORD PTR [RSI+24]
            mov RDX,QWORD PTR [RAX+24]
            xor RDX,RCX
            and RDX,RDI
            xor RCX,RDX
            mov QWORD PTR [RSI+24],RCX
            xor QWORD PTR [RAX+24],RDX
.L_405082:

            mov RCX,QWORD PTR [RSI+16]
            mov RDX,QWORD PTR [RAX+16]
            xor RDX,RCX
            and RDX,RDI
            xor RCX,RDX
            mov QWORD PTR [RSI+16],RCX
            xor QWORD PTR [RAX+16],RDX
.L_40509b:

            mov RCX,QWORD PTR [RSI+8]
            mov RDX,QWORD PTR [RAX+8]
            xor RDX,RCX
            and RDX,RDI
            xor RCX,RDX
            mov QWORD PTR [RSI+8],RCX
            xor QWORD PTR [RAX+8],RDX
.L_4050b4:

            mov RCX,QWORD PTR [RSI]
            mov RDX,QWORD PTR [RAX]
            xor RDX,RCX
            and RDI,RDX
            xor RCX,RDI
            mov QWORD PTR [RSI],RCX
            xor QWORD PTR [RAX],RDI
            ret 
.L_4050ca:
          .string "bn_lib.c"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4050e0:
          .long .L_404f98-.L_4050e0
          .long .L_4050b4-.L_4050e0
          .long .L_40509b-.L_4050e0
          .long .L_405082-.L_4050e0
          .long .L_405069-.L_4050e0
          .long .L_405050-.L_4050e0
          .long .L_405037-.L_4050e0
          .long .L_40501e-.L_4050e0
          .long .L_405005-.L_4050e0
          .long .L_404fec-.L_4050e0
          .long .L_404fd3-.L_4050e0
          .zero 20
.L_405120:
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x2
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x4
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x5
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x6
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x7
          .byte 0x8
          .byte 0x8

            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
            or BYTE PTR [RAX],CL
.L_405220:

            add DWORD PTR [RAX],EAX
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            imul ESP,DWORD PTR [RDI+32],1651340622
            jb .L_40526b
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x74
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x4f
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x53
          .byte 0x53
          .byte 0x4c
          .byte 0x20
          .byte 0x31
          .byte 0x2e
          .byte 0x30
          .byte 0x2e
          .byte 0x32
          .byte 0x64
          .byte 0x20
          .byte 0x39
          .byte 0x20
          .byte 0x4a
          .byte 0x75
          .byte 0x6c
          .byte 0x20
          .byte 0x32
          .byte 0x30
          .byte 0x31
.L_40526b:

            xor EAX,2035456
.L_405270:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,8
.L_40527d:

            mov R12,QWORD PTR [RDI]
            test R12,R12
            je .L_4052c0

            nop
            nop
            nop
.L_405288:

            lea RBP,QWORD PTR [R12+384]
            mov RBX,R12
            nop
            nop
            nop
            nop
            nop
.L_405298:

            cmp QWORD PTR [RBX],0
            je .L_4052a6

            mov RDI,RBX
            call .L_404880
.L_4052a6:

            add RBX,24
            cmp RBX,RBP
            jne .L_405298

            mov R12,QWORD PTR [R12+392]
            test R12,R12
            jne .L_405288

            mov R12,QWORD PTR [R13]
.L_4052c0:

            mov QWORD PTR [R13+8],R12
            mov DWORD PTR [R13+24],0
            mov DWORD PTR [R13+40],0
            mov QWORD PTR [R13+48],0
            mov DWORD PTR [R13+56],0
            add RSP,8
.L_4052e8:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_4052ef:

            nop
.L_4052f0:

            lea RSI,QWORD PTR [RIP+.L_405700]
            sub RSP,24
.L_4052fb:

            mov EDX,216
            mov EDI,64
            call .L_418820

            test RAX,RAX
            je .L_405358

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov QWORD PTR [RAX+32],0
            mov QWORD PTR [RAX+40],0
            mov QWORD PTR [RAX+48],0
            mov DWORD PTR [RAX+56],0
.L_40534d:

            add RSP,24
.L_405351:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405358:

            lea RCX,QWORD PTR [RIP+.L_405700]
            mov R8D,218
            mov EDX,65
            mov ESI,106
            mov EDI,3
            mov QWORD PTR [RSP+8],RAX
            call .L_416a00

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_40534d
.L_405385:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405390:

            test RDI,RDI
            je .L_405411

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_40539c:

            mov EAX,DWORD PTR [RDI+44]
            test EAX,EAX
            jne .L_405406
.L_4053a3:

            mov RBX,QWORD PTR [R12]
            test RBX,RBX
            je .L_4053fa

            nop
            nop
            nop
            nop
.L_4053b0:

            lea RBP,QWORD PTR [RBX+384]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4053c0:

            cmp QWORD PTR [RBX],0
            je .L_4053ce

            mov RDI,RBX
            call .L_4044c0
.L_4053ce:

            add RBX,24
            cmp RBP,RBX
            jne .L_4053c0

            mov RDI,QWORD PTR [R12]
            mov RAX,QWORD PTR [RDI+392]
            mov QWORD PTR [R12+8],RAX
            call .L_418aa0

            mov RBX,QWORD PTR [R12+8]
            test RBX,RBX
            mov QWORD PTR [R12],RBX
            jne .L_4053b0
.L_4053fa:

            pop RBX
.L_4053fb:

            mov RDI,R12
            pop RBP
            pop R12
            jmp .L_418aa0
.L_405406:

            mov RDI,QWORD PTR [RDI+32]
            call .L_418aa0

            jmp .L_4053a3
.L_405411:

            ret 
.L_405413:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405420:

            mov EAX,DWORD PTR [RDI+52]
            test EAX,EAX
            jne .L_40542e

            mov EDX,DWORD PTR [RDI+56]
            test EDX,EDX
            je .L_405438
.L_40542e:

            add EAX,1
            mov DWORD PTR [RDI+52],EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405438:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RDI+40]
            mov R12D,DWORD PTR [RDI+48]
            cmp EAX,DWORD PTR [RDI+44]
            je .L_405470

            mov RBP,QWORD PTR [RDI+32]
.L_405455:

            lea EDX,DWORD PTR [RAX+1]
            mov DWORD PTR [RBX+40],EDX
            mov DWORD PTR [RBP+RAX*4],R12D
.L_405460:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405470:

            test EAX,EAX
            jne .L_4054b8

            mov EDI,128
            mov R13D,32
.L_40547f:

            lea RSI,QWORD PTR [RIP+.L_405700]
            mov EDX,338
            call .L_418820

            test RAX,RAX
            mov RBP,RAX
            je .L_4054d0

            mov EAX,DWORD PTR [RBX+40]
            test EAX,EAX
            jne .L_405510
.L_40549f:

            mov EAX,DWORD PTR [RBX+44]
            test EAX,EAX
            jne .L_405500
.L_4054a6:

            mov QWORD PTR [RBX+32],RBP
            mov DWORD PTR [RBX+44],R13D
            mov EAX,DWORD PTR [RBX+40]
            jmp .L_405455
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4054b8:

            lea R13D,DWORD PTR [RAX+RAX*2]
            shr R13D,1
            lea EDI,DWORD PTR [R13*4]
            jmp .L_40547f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4054d0:

            lea RCX,QWORD PTR [RIP+.L_405700]
            mov R8D,262
            mov EDX,109
            mov ESI,129
            mov EDI,3
            call .L_416a00

            add DWORD PTR [RBX+52],1
            jmp .L_405460
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405500:

            mov RDI,QWORD PTR [RBX+32]
            call .L_418aa0

            jmp .L_4054a6
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405510:

            mov RSI,QWORD PTR [RBX+32]
            lea RDX,QWORD PTR [RAX*4]
            mov RDI,RBP
            call memcpy@PLT

            jmp .L_40549f
.L_405529:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_405530:

            mov EAX,DWORD PTR [RDI+52]
            test EAX,EAX
            jne .L_405598

            mov EAX,DWORD PTR [RDI+40]
            mov RDX,QWORD PTR [RDI+32]
            sub EAX,1
            mov DWORD PTR [RDI+40],EAX
            mov ESI,DWORD PTR [RDX+RAX*4]
            mov EAX,DWORD PTR [RDI+48]
            cmp EAX,ESI
            jbe .L_405587

            mov ECX,DWORD PTR [RDI+24]
            sub EAX,ESI
            lea EDX,DWORD PTR [RCX-1]
            sub ECX,EAX
            sub EAX,1
            mov DWORD PTR [RDI+24],ECX
            and EDX,15
.L_405561:

            test EDX,EDX
            lea ECX,DWORD PTR [RAX-1]
            jne .L_4055a0

            mov RDX,QWORD PTR [RDI+8]
            test EAX,EAX
            mov RDX,QWORD PTR [RDX+384]
            mov QWORD PTR [RDI+8],RDX
            je .L_405587

            sub EAX,2
            mov EDX,14
.L_405583:

            test ECX,ECX
            jne .L_405561
.L_405587:

            mov DWORD PTR [RDI+48],ESI
            mov DWORD PTR [RDI+56],0
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405598:

            sub EAX,1
            mov DWORD PTR [RDI+52],EAX
            ret 
          .byte 0x90
.L_4055a0:

            mov R8D,ECX
            sub EDX,1
            mov ECX,EAX
            mov EAX,R8D
            jmp .L_405583
.L_4055ad:

            nop
            nop
            nop
.L_4055b0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_4055b8:

            mov EDX,DWORD PTR [RDI+52]
            test EDX,EDX
            jne .L_405630

            mov EAX,DWORD PTR [RDI+56]
            test EAX,EAX
            jne .L_405630

            mov EAX,DWORD PTR [RDI+24]
            cmp EAX,DWORD PTR [RDI+28]
            mov RBX,RDI
            je .L_405640

            mov EDX,EAX
            and EDX,15
            test EAX,EAX
            jne .L_405618

            mov RCX,QWORD PTR [RDI]
            mov QWORD PTR [RDI+8],RCX
.L_4055e1:

            add EAX,1
            mov DWORD PTR [RBX+24],EAX
            mov EAX,EDX
            lea RAX,QWORD PTR [RAX+RAX*2]
            lea R12,QWORD PTR [RCX+RAX*8]
            test R12,R12
            je .L_4056d0
.L_4055fa:

            xor ESI,ESI
            mov RDI,R12
            call .L_4048e0

            add DWORD PTR [RBX+48],1
.L_405608:

            pop RBX
.L_405609:

            mov RAX,R12
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405618:

            test EDX,EDX
            mov RCX,QWORD PTR [RDI+8]
            jne .L_4055e1

            mov RCX,QWORD PTR [RCX+392]
            mov QWORD PTR [RDI+8],RCX
            jmp .L_4055e1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405630:

            xor R12D,R12D
            pop RBX
            mov RAX,R12
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_405640:

            lea RSI,QWORD PTR [RIP+.L_405700]
            mov EDI,400
            mov EDX,407
            call .L_418820

            test RAX,RAX
            mov R14,RAX
            mov R12,RAX
            lea R13,QWORD PTR [RAX+384]
            mov RDI,RAX
            je .L_4056d0

            nop
            nop
            nop
            nop
            nop
.L_405670:

            lea RBP,QWORD PTR [RDI+24]
            call .L_4045a0

            cmp RBP,R13
            mov RDI,RBP
            jne .L_405670

            cmp QWORD PTR [RBX],0
            mov RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [R14+392],0
            mov QWORD PTR [R14+384],RAX
            je .L_4056c0

            mov QWORD PTR [RAX+392],R14
            mov QWORD PTR [RBX+16],R14
            mov QWORD PTR [RBX+8],R14
.L_4056ac:

            add DWORD PTR [RBX+28],16
            add DWORD PTR [RBX+24],1
            jmp .L_4055fa
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4056c0:

            mov QWORD PTR [RBX+16],R14
            mov QWORD PTR [RBX+8],R14
            mov QWORD PTR [RBX],R14
            jmp .L_4056ac
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4056d0:

            lea RCX,QWORD PTR [RIP+.L_405700]
            mov DWORD PTR [RBX+56],1
            mov R8D,297
            mov EDX,109
            mov ESI,116
            mov EDI,3
            call .L_416a00

            xor R12D,R12D
            jmp .L_405608
.L_405700:
          .string "bn_ctx.c"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405710:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R13,RDI
            push RBX
.L_40571e:

            mov EBX,R8D
            mov R12,RDX
            mov EBP,ECX
            call .L_409260

            test EBX,EBX
            je .L_40582c

            movsxd RSI,EBP
            shl RSI,3
            test EBX,EBX
            lea RDI,QWORD PTR [R13+RSI*1]
            js .L_405850

            add RSI,R14
            test RAX,RAX
            je .L_40581f

            lea EDX,DWORD PTR [RBX-1]
            lea R11D,DWORD PTR [RBX-4]
            mov R10D,EBX
            mov R9D,EBX
            and R10D,3
            and EDX,4294967292
            sub R11D,EDX
            lea EDX,DWORD PTR [RBX+1]
            and EDX,4294967292
            sub R9D,EDX
            xor EDX,EDX
.L_405775:

            mov RCX,QWORD PTR [RSI]
            mov R8,RCX
            sub R8,RAX
            test RCX,RCX
            cmovne RAX,RDX
            cmp EBX,1
            mov QWORD PTR [RDI],R8
            je .L_40582c

            mov RCX,QWORD PTR [RSI+8]
            mov R8,RCX
            sub R8,RAX
            test RCX,RCX
            cmovne RAX,RDX
            cmp R9D,EBX
            mov QWORD PTR [RDI+8],R8
            je .L_40582c

            mov RCX,QWORD PTR [RSI+16]
            mov R8,RCX
            sub R8,RAX
            test RCX,RCX
            cmovne RAX,RDX
            cmp EBX,R10D
            mov QWORD PTR [RDI+16],R8
            je .L_40582c

            mov RCX,QWORD PTR [RSI+24]
            sub EBX,4
            mov R8,RCX
            sub R8,RAX
            test RCX,RCX
            mov QWORD PTR [RDI+24],R8
            je .L_405838

            add RSI,32
            add RDI,32
            test EBX,EBX
            jg .L_40581f

            jmp .L_40582a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4057f0:

            mov RAX,QWORD PTR [RSI+8]
            cmp EBX,2
            mov QWORD PTR [RDI+8],RAX
            je .L_40582a

            mov RAX,QWORD PTR [RSI+16]
            cmp EBX,3
            mov QWORD PTR [RDI+16],RAX
            je .L_40582a

            mov RAX,QWORD PTR [RSI+24]
            sub EBX,4
            mov QWORD PTR [RDI+24],RAX
            je .L_40582a

            add RSI,32
            add RDI,32
.L_40581f:

            mov RAX,QWORD PTR [RSI]
            cmp EBX,1
            mov QWORD PTR [RDI],RAX
            jne .L_4057f0
.L_40582a:

            xor EAX,EAX
.L_40582c:

            pop RBX
.L_40582d:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405838:

            cmp EBX,R11D
            je .L_40582c

            add RSI,32
            add RDI,32
            test RAX,RAX
            jne .L_405775

            jmp .L_40581f
.L_405850:

            lea RDX,QWORD PTR [R12+RSI*1]
            mov ESI,1
            jmp .L_4058bd
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405860:

            mov R8,QWORD PTR [RDX+8]
            lea RCX,QWORD PTR [RAX+R8*1]
            neg RCX
            test R8,R8
            cmovne RAX,RSI
            cmp EBX,-2
            mov QWORD PTR [RDI+8],RCX
            je .L_40582c

            mov R8,QWORD PTR [RDX+16]
            lea RCX,QWORD PTR [RAX+R8*1]
            neg RCX
            test R8,R8
            cmovne RAX,RSI
            cmp EBX,-3
            mov QWORD PTR [RDI+16],RCX
            je .L_40582c

            mov R8,QWORD PTR [RDX+24]
            lea RCX,QWORD PTR [RAX+R8*1]
            neg RCX
            test R8,R8
            cmovne RAX,RSI
            add EBX,4
            mov QWORD PTR [RDI+24],RCX
            je .L_40582c

            add RDX,32
            add RDI,32
.L_4058bd:

            mov R8,QWORD PTR [RDX]
            lea RCX,QWORD PTR [RAX+R8*1]
            neg RCX
            test R8,R8
            cmovne RAX,RSI
            cmp EBX,-1
            mov QWORD PTR [RDI],RCX
            jne .L_405860

            jmp .L_40582c
.L_4058db:

            nop
            nop
            nop
            nop
            nop
.L_4058e0:

            push R14
            push R13
            mov R14,RSI
            push R12
            push RBP
            mov R13,RDI
            push RBX
.L_4058ee:

            mov EBX,R8D
            mov R12,RDX
            mov EBP,ECX
            call .L_409230

            test EBX,EBX
            je .L_4059e3

            movsxd RSI,EBP
            shl RSI,3
            test EBX,EBX
            lea RDI,QWORD PTR [R13+RSI*1]
            js .L_4059f0

            add RSI,R14
            test RAX,RAX
            mov RDX,QWORD PTR [RSI]
            je .L_405ad8

            xor ECX,ECX
            add RDX,RAX
            setb CL
            cmp EBX,1
            mov QWORD PTR [RDI],RDX
            mov RAX,RCX
            je .L_4059e3

            xor EAX,EAX
            add RCX,QWORD PTR [RSI+8]
            setb AL
            cmp EBX,2
            mov QWORD PTR [RDI+8],RCX
            je .L_4059e3

            lea R8D,DWORD PTR [RBX-4]
            lea EDX,DWORD PTR [RBX-3]
            mov R9D,EBX
            and R9D,3
            and EDX,4294967292
            mov R10D,R8D
            sub R10D,EDX
            lea EDX,DWORD PTR [RBX-1]
            and EDX,4294967292
            sub R8D,EDX
            jmp .L_4059ca
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405978:

            xor EAX,EAX
            add RDX,QWORD PTR [RSI+24]
            setb AL
            sub EBX,4
            mov QWORD PTR [RDI+24],RDX
            cmp R8D,EBX
            je .L_4059e3

            add RSI,32
            add RDI,32
            test RAX,RAX
            mov RDX,QWORD PTR [RSI]
            je .L_405ad8

            mov RCX,RDX
            xor EDX,EDX
            add RCX,1
            sete DL
            cmp EBX,1
            mov QWORD PTR [RDI],RCX
            mov RAX,RDX
            je .L_4059e3

            xor EAX,EAX
            add RDX,QWORD PTR [RSI+8]
            setb AL
            cmp R10D,EBX
            mov QWORD PTR [RDI+8],RDX
            je .L_4059e3
.L_4059ca:

            add RAX,QWORD PTR [RSI+16]
            setb DL
            mov RCX,RAX
            cmp R9D,EBX
            movzx EDX,DL
            mov QWORD PTR [RDI+16],RCX
            mov RAX,RDX
            jne .L_405978
.L_4059e3:

            pop RBX
.L_4059e4:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4059f0:

            lea RDX,QWORD PTR [R12+RSI*1]
            test RAX,RAX
            mov RCX,QWORD PTR [RDX]
            je .L_405b30

            xor ESI,ESI
            add RCX,RAX
            setb SIL
            cmp EBX,-1
            mov QWORD PTR [RDI],RCX
            mov RAX,RSI
            je .L_4059e3

            xor EAX,EAX
            add RSI,QWORD PTR [RDX+8]
            setb AL
            cmp EBX,-2
            mov QWORD PTR [RDI+8],RSI
            je .L_4059e3

            mov R9D,EBX
            mov R8D,4294967293
            mov R10D,EBX
            lea ECX,DWORD PTR [RBX+4]
            neg R9D
            sub R8D,EBX
            not R10D
            and R9D,4294967292
            and R8D,4294967292
            and R10D,4294967292
            add R9D,EBX
            add R8D,ECX
            add R10D,ECX
            jmp .L_405ab6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405a58:

            xor EAX,EAX
            add RCX,QWORD PTR [RDX+24]
            setb AL
            add EBX,4
            mov QWORD PTR [RDI+24],RCX
            cmp R10D,EBX
            je .L_4059e3

            add RDX,32
            add RDI,32
            test RAX,RAX
            mov RCX,QWORD PTR [RDX]
            je .L_405b30

            mov RSI,RCX
            xor ECX,ECX
            add RSI,1
            sete CL
            cmp EBX,-1
            mov QWORD PTR [RDI],RSI
            mov RAX,RCX
            je .L_4059e3

            xor EAX,EAX
            add RCX,QWORD PTR [RDX+8]
            setb AL
            cmp EBX,R8D
            mov QWORD PTR [RDI+8],RCX
            je .L_4059e3
.L_405ab6:

            add RAX,QWORD PTR [RDX+16]
            setb CL
            mov RSI,RAX
            cmp R9D,EBX
            movzx ECX,CL
            mov QWORD PTR [RDI+16],RSI
            mov RAX,RCX
            jne .L_405a58

            jmp .L_4059e3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405ad8:

            cmp EBX,1
            mov QWORD PTR [RDI],RDX
            jne .L_405b15

            jmp .L_405b22
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405ae8:

            mov RAX,QWORD PTR [RSI+16]
            cmp EBX,3
            mov QWORD PTR [RDI+16],RAX
            je .L_405b22

            mov RAX,QWORD PTR [RSI+24]
            sub EBX,4
            mov QWORD PTR [RDI+24],RAX
            je .L_405b22

            add RSI,32
            mov RAX,QWORD PTR [RSI]
            add RDI,32
            cmp EBX,1
            mov QWORD PTR [RDI],RAX
            je .L_405b22
.L_405b15:

            mov RAX,QWORD PTR [RSI+8]
            cmp EBX,2
            mov QWORD PTR [RDI+8],RAX
            jne .L_405ae8
.L_405b22:

            xor EAX,EAX
.L_405b24:

            pop RBX
.L_405b25:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405b30:

            cmp EBX,-1
            mov QWORD PTR [RDI],RCX
            jne .L_405b6d

            jmp .L_405b22
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405b40:

            mov RAX,QWORD PTR [RDX+16]
            cmp EBX,-3
            mov QWORD PTR [RDI+16],RAX
            je .L_405b22

            mov RAX,QWORD PTR [RDX+24]
            add EBX,4
            mov QWORD PTR [RDI+24],RAX
            je .L_405b22

            add RDX,32
            mov RAX,QWORD PTR [RDX]
            add RDI,32
            cmp EBX,-1
            mov QWORD PTR [RDI],RAX
            je .L_405b22
.L_405b6d:

            mov RAX,QWORD PTR [RDX+8]
            cmp EBX,-2
            mov QWORD PTR [RDI+8],RAX
            jne .L_405b40

            xor EAX,EAX
            jmp .L_405b24
.L_405b7e:

            nop
            nop
.L_405b80:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14D,EDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12,RCX
            mov EBX,R8D
            sub RSP,8
.L_405b9d:

            cmp EDX,R8D
            jge .L_405bad

            mov R14D,R8D
            mov EBX,EDX
            mov R15,RCX
            mov R12,RSI
.L_405bad:

            test EBX,EBX
            jle .L_405c70

            mov RCX,QWORD PTR [R12]
            movsxd RAX,R14D
            mov EDX,R14D
            lea R13,QWORD PTR [RBP+RAX*8]
            mov RSI,R15
            mov RDI,RBP
            call .L_4090a0

            cmp EBX,1
            mov QWORD PTR [R13],RAX
            jne .L_405c42

            jmp .L_405c5f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405be0:

            mov RCX,QWORD PTR [R12+16]
            lea RDI,QWORD PTR [RBP+16]
            mov EDX,R14D
            mov RSI,R15
            call .L_408f90

            cmp EBX,3
            mov QWORD PTR [R13+16],RAX
            je .L_405c5f

            mov RCX,QWORD PTR [R12+24]
            lea RDI,QWORD PTR [RBP+24]
            mov EDX,R14D
            mov RSI,R15
            call .L_408f90

            sub EBX,4
            mov QWORD PTR [R13+24],RAX
            je .L_405c5f

            mov RCX,QWORD PTR [R12+32]
            add RBP,32
            mov EDX,R14D
            mov RSI,R15
            mov RDI,RBP
            add R13,32
            add R12,32
            call .L_408f90

            mov QWORD PTR [R13],RAX
            cmp EBX,1
            je .L_405c5f
.L_405c42:

            mov RCX,QWORD PTR [R12+8]
            lea RDI,QWORD PTR [RBP+8]
            mov EDX,R14D
            mov RSI,R15
            call .L_408f90

            cmp EBX,2
            mov QWORD PTR [R13+8],RAX
            jne .L_405be0
.L_405c5f:

            add RSP,8
.L_405c63:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_405c70:

            add RSP,8
            mov EDX,R14D
            mov RSI,R15
            pop RBX
            mov RDI,RBP
            xor ECX,ECX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_4090a0
.L_405c8e:

            nop
            nop
.L_405c90:

            push R15
            push R14
            mov R11,RSI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov R12,RDI
            mov EBX,ECX
            mov R15D,R8D
            mov EBP,R9D
            sub RSP,88
.L_405caf:

            test R8D,R8D
            sete R10B
            cmp ECX,8
            mov R14,QWORD PTR [RSP+144]
            jne .L_405d08

            test R10B,R10B
            je .L_405d08

            test R9D,R9D
            je .L_405ee0
.L_405cd1:

            lea R14D,DWORD PTR [RBX+R15*1]
            lea R8D,DWORD PTR [RBX+RBP*1]
            mov RCX,R13
            mov RSI,R11
            mov RDI,R12
            mov EDX,R14D
            call .L_405b80

            mov R10D,R15D
            add R10D,EBP
            js .L_406110
.L_405cf6:

            add RSP,88
.L_405cfa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_405d08:

            cmp EBX,15
            jle .L_405cd1

            mov EAX,EBX
            mov ECX,R15D
            mov BYTE PTR [RSP+64],R10B
            sar EAX,1
            neg ECX
            mov QWORD PTR [RSP+56],R11
            movsxd RDI,EAX
            lea R9D,DWORD PTR [RAX+R15*1]
            lea ESI,DWORD PTR [RAX+RBP*1]
            mov DWORD PTR [RSP+16],EAX
            lea RAX,QWORD PTR [RDI*8]
            mov RDI,R11
            mov DWORD PTR [RSP+20],ESI
            mov EDX,R9D
            mov DWORD PTR [RSP+76],ECX
            lea RSI,QWORD PTR [R11+RAX*1]
            mov DWORD PTR [RSP+72],R9D
            mov QWORD PTR [RSP+8],RAX
            mov QWORD PTR [RSP+24],RSI
            call .L_404eb0

            mov DWORD PTR [RSP+48],EAX
            mov RAX,QWORD PTR [RSP+8]
            mov ECX,EBP
            mov EDX,DWORD PTR [RSP+20]
            mov RSI,R13
            add RAX,R13
            mov RDI,RAX
            mov QWORD PTR [RSP+32],RAX
            call .L_404eb0

            mov R8D,DWORD PTR [RSP+48]
            movsxd RDX,EBX
            mov R11,QWORD PTR [RSP+56]
            lea RCX,QWORD PTR [RDX*8]
            movzx R10D,BYTE PTR [RSP+64]
            lea EDX,DWORD PTR [R8+R8*2]
            lea RSI,QWORD PTR [R14+RCX*1]
            mov QWORD PTR [RSP+40],RCX
            lea EAX,DWORD PTR [RAX+RDX*1+4]
            mov QWORD PTR [RSP],RSI
            cmp EAX,8
            ja .L_406140

            lea RDX,QWORD PTR [RIP+.L_407204]
            mov R9D,DWORD PTR [RSP+72]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_405dd0:

            cmp DWORD PTR [RSP+16],8
            jne .L_406090

            test R10B,R10B
            je .L_406090

            test EBP,EBP
            jne .L_406090

            mov RAX,QWORD PTR [RSP]
            lea RDI,QWORD PTR [RAX+8]
            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+120],0
            and RDI,-8
            sub RAX,RDI
            mov RCX,RAX
            xor EAX,EAX
            sub ECX,-128
            shr ECX,3

            rep stosq QWORD PTR [RDI]

            mov DWORD PTR [RSP+20],0
.L_405e20:

            mov RDX,R13
            mov RSI,R11
            mov RDI,R12
            call .L_409290

            mov R13,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+24]
            add R13,R12
            mov RDI,R13
            call .L_409290
.L_405e48:

            mov ECX,EBX
            mov RDX,R13
            mov RSI,R12
            mov RDI,R14
            call .L_409230

            mov RBP,RAX
            mov EAX,DWORD PTR [RSP+20]
            mov ECX,EBX
            test EAX,EAX
            je .L_406078

            mov RDI,QWORD PTR [RSP]
            mov RSI,R14
            mov RDX,RDI
            call .L_409260

            sub EBP,EAX
.L_405e7a:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP]
            mov ECX,EBX
            add RDI,R12
            mov RSI,RDI
            call .L_409230

            add EBP,EAX
            je .L_405cf6

            add EBX,DWORD PTR [RSP+16]
            xor EAX,EAX
            movsxd RBP,EBP
            movsxd RBX,EBX
            lea RDX,QWORD PTR [R12+RBX*8]
            add RBP,QWORD PTR [RDX]
            setb AL
            mov QWORD PTR [RDX],RBP
            test RAX,RAX
            je .L_405cf6

            nop
            nop
            nop
            nop
            nop
            nop
.L_405ec0:

            add RDX,8
            add QWORD PTR [RDX],1
            je .L_405ec0

            add RSP,88
.L_405ece:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_405ee0:

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_409290
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_405ef8:

            mov R8D,DWORD PTR [RSP+76]
            mov RDX,QWORD PTR [RSP+24]
            mov ECX,R9D
            mov RSI,R11
            mov RDI,R14
            mov BYTE PTR [RSP+64],R10B
            mov QWORD PTR [RSP+48],R11
            call .L_405710

            mov RAX,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+20]
            mov R8D,EBP
            mov RDX,QWORD PTR [RSP+32]
            neg R8D
            mov RSI,R13
            add RAX,R14
            mov QWORD PTR [RSP+56],RAX
.L_405f39:

            mov RDI,RAX
            call .L_405710

            movzx R10D,BYTE PTR [RSP+64]
            mov R11,QWORD PTR [RSP+48]
            mov DWORD PTR [RSP+20],1
.L_405f54:

            cmp DWORD PTR [RSP+16],8
            jne .L_406160

            test R10B,R10B
            je .L_406160

            test EBP,EBP
            jne .L_406160

            mov RDX,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP]
            mov RSI,R14
            mov QWORD PTR [RSP+48],R11
            call .L_409290

            mov R11,QWORD PTR [RSP+48]
            jmp .L_405e20
.L_405f90:

            mov RSI,QWORD PTR [RSP+24]
            mov R8D,R15D
            mov ECX,R9D
            mov RDX,R11
            mov RDI,R14
            mov BYTE PTR [RSP+64],R10B
            mov QWORD PTR [RSP+48],R11
            call .L_405710

            mov RAX,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+20]
            mov R8D,EBP
            mov RDX,QWORD PTR [RSP+32]
            neg R8D
            mov RSI,R13
            add RAX,R14
            mov QWORD PTR [RSP+56],RAX
.L_405fcf:

            mov RDI,RAX
            call .L_405710

            mov DWORD PTR [RSP+20],0
            mov R11,QWORD PTR [RSP+48]
            movzx R10D,BYTE PTR [RSP+64]
            jmp .L_405f54
          .byte 0x90
.L_405ff0:

            mov R8D,DWORD PTR [RSP+76]
            mov RDX,QWORD PTR [RSP+24]
            mov ECX,R9D
            mov RSI,R11
            mov RDI,R14
            mov BYTE PTR [RSP+64],R10B
            mov QWORD PTR [RSP+48],R11
            call .L_405710

            mov RAX,QWORD PTR [RSP+8]
            mov R8D,EBP
            mov ECX,DWORD PTR [RSP+20]
            mov RDX,R13
            mov RSI,QWORD PTR [RSP+32]
            add RAX,R14
            mov QWORD PTR [RSP+56],RAX
            jmp .L_405fcf
.L_406030:

            mov RSI,QWORD PTR [RSP+24]
            mov R8D,R15D
            mov ECX,R9D
            mov RDX,R11
            mov RDI,R14
            mov BYTE PTR [RSP+64],R10B
            mov QWORD PTR [RSP+48],R11
            call .L_405710

            mov RAX,QWORD PTR [RSP+8]
            mov R8D,EBP
            mov ECX,DWORD PTR [RSP+20]
            mov RDX,R13
            mov RSI,QWORD PTR [RSP+32]
            add RAX,R14
            mov QWORD PTR [RSP+56],RAX
            jmp .L_405f39
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406078:

            mov RDI,QWORD PTR [RSP]
            mov RDX,R14
            mov RSI,RDI
            call .L_409230

            add EBP,EAX
            jmp .L_405e7a
          .byte 0x66
          .byte 0x90
.L_406090:

            mov RDI,QWORD PTR [RSP]
            mov RDX,QWORD PTR [RSP+40]
            xor ESI,ESI
            mov QWORD PTR [RSP+56],R11
            mov RAX,RDI
            add RAX,RDX
            mov QWORD PTR [RSP+48],RAX
            call memset@PLT

            mov R11,QWORD PTR [RSP+56]
            mov DWORD PTR [RSP+20],0
.L_4060bd:

            sub RSP,8
.L_4060c1:

            mov RDX,R13
            mov RSI,R11
            push QWORD PTR [RSP+56]
            mov ECX,DWORD PTR [RSP+32]
            xor R9D,R9D
            xor R8D,R8D
            mov RDI,R12
            call .L_405c90

            mov R13,QWORD PTR [RSP+56]
            mov R9D,EBP
            mov R8D,R15D
            pop RDX
            push QWORD PTR [RSP+56]
            mov ECX,DWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RSP+40]
            add R13,R12
            mov RDI,R13
            call .L_405c90

            pop RCX
            pop RSI
            jmp .L_405e48
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406110:

            add EBX,R14D
            add RSP,88
            neg R10D
            add EBP,EBX
            movsxd RDX,R10D
            xor ESI,ESI
            movsxd RBP,EBP
            shl RDX,3
            pop RBX
            lea RDI,QWORD PTR [R12+RBP*8]
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp memset@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406140:

            mov RAX,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+20],0
            add RAX,R14
            mov QWORD PTR [RSP+56],RAX
            jmp .L_405f54
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406160:

            mov RAX,QWORD PTR [RSP]
            add RAX,QWORD PTR [RSP+40]
            sub RSP,8
            mov QWORD PTR [RSP+72],R11
            xor R8D,R8D
            xor R9D,R9D
            mov RSI,R14
            mov QWORD PTR [RSP+56],RAX
            push QWORD PTR [RSP+56]
            mov ECX,DWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+72]
            mov RDI,QWORD PTR [RSP+16]
            call .L_405c90

            pop RDI
            pop R8
            mov R11,QWORD PTR [RSP+64]
            jmp .L_4060bd
.L_4061a4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4061b0:

            push R15
            push R14
            mov R10,RSI
            push R13
            push R12
            mov R14,RDX
            push RBP
            mov EBP,R8D
            push RBX
            shr EBP,31
            mov RBX,RDI
            mov RDI,R10
            add EBP,R8D
            sub RSP,56
.L_4061d3:

            mov R13D,R8D
            sar EBP,1
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+40],R10
            movsxd R15,EBP
            mov EDX,EBP
            mov R12,R9
            shl R15,3
            lea RAX,QWORD PTR [RSI+R15*1]
            mov RSI,RAX
            mov QWORD PTR [RSP],RAX
            call .L_404e20

            mov DWORD PTR [RSP+20],EAX
            lea RAX,QWORD PTR [R14+R15*1]
            mov EDX,EBP
            mov RSI,R14
            mov RDI,RAX
            mov QWORD PTR [RSP+24],RAX
            call .L_404e20

            mov ECX,DWORD PTR [RSP+20]
            lea RDI,QWORD PTR [RBX+R15*1]
            mov R10,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+32],RDI
            lea EDX,DWORD PTR [RCX+RCX*2]
            add EAX,EDX
            cmp EAX,-2
            je .L_406590

            jle .L_406548

            cmp EAX,2
            je .L_406440

            cmp EAX,4
            jne .L_406580

            mov RDX,QWORD PTR [RSP]
            mov RSI,R10
            mov ECX,EBP
            mov RDI,RBX
            call .L_409260

            mov RSI,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+R15*1]
            mov ECX,EBP
            mov RDX,R14
            call .L_409260

            mov DWORD PTR [RSP+20],0
.L_40627c:

            movsxd RAX,R13D
            shl RAX,3
            cmp EBP,8
            mov QWORD PTR [RSP+40],RAX
            lea R14,QWORD PTR [R12+RAX*1]
            je .L_406520

            sub RSP,8
.L_406299:

            lea RDX,QWORD PTR [RBX+R15*1]
            xor R9D,R9D
            push R14
            xor R8D,R8D
            mov ECX,EBP
            mov RSI,RBX
            mov RDI,R12
            call .L_405c90

            mov RDX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+16]
            xor R9D,R9D
            xor R8D,R8D
            mov ECX,EBP
            mov RDI,RBX
            mov QWORD PTR [RSP],R14
            call .L_405c90

            pop R9
            pop R10
.L_4062d4:

            add R13D,EBP
            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RBX
            movsxd R13,R13D
            shl R13,3
            lea RAX,QWORD PTR [R12+R13*1]
            test RDI,RDI
            mov QWORD PTR [RSP],RAX
            je .L_406304

            mov RDX,RDI
            mov ECX,EBP
            mov RDI,RAX
            call .L_409230

            mov RSI,QWORD PTR [RSP]
.L_406304:

            mov R8D,DWORD PTR [RSP+20]
            mov ECX,EBP
            mov RDX,R12
            mov RDI,R14
            test R8D,R8D
            je .L_4064c8

            call .L_409260

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            je .L_4064db
.L_40632d:

            mov RDI,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RAX+R15*1]
            mov ECX,EBP
            mov RDX,R14
            mov R13,RAX
            call .L_409260

            mov RSI,QWORD PTR [RSP]
            mov RDX,R13
            mov ECX,EBP
            mov RDI,R14
            call .L_409230

            mov RSI,R14
            mov R13D,EAX
.L_406359:

            mov ECX,EBP
            mov RDX,RBX
            mov RDI,R14
            call .L_409230

            add R13D,EAX
            mov EAX,DWORD PTR [RSP+20]
            add R15,R12
            mov ECX,EBP
            mov RDX,R12
            mov RSI,R14
            mov RDI,R14
            test EAX,EAX
            je .L_406478

            call .L_409260

            mov RDX,QWORD PTR [RSP]
            mov ECX,EBP
            mov RSI,RBX
            mov RDI,RBX
            sub R13D,EAX
            call .L_409230

            mov RDX,QWORD PTR [RSP+32]
            mov R12,RAX
            mov ECX,EBP
            mov RSI,RBX
            mov RDI,RBX
            call .L_409230

            mov ECX,EBP
            add R12D,EAX
            mov RDX,R15
            mov RSI,RBX
            mov RDI,RBX
            call .L_409260

            sub R12D,EAX
            mov EAX,R12D
.L_4063ca:

            cmp R13D,0
            je .L_4063fa

            jle .L_406608

            movsxd R13,R13D
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4063e0:

            xor EDX,EDX
            add R13,QWORD PTR [RBX]
            setb DL
            mov QWORD PTR [RBX],R13
            add RBX,8
            test RDX,RDX
            mov R13D,1
            jne .L_4063e0
.L_4063fa:

            cmp EAX,0
            je .L_406429

            jle .L_4065c8

            mov RDX,QWORD PTR [RSP+32]
            cdqe 
            nop
            nop
            nop
            nop
.L_406410:

            xor ECX,ECX
            add RAX,QWORD PTR [RDX]
            setb CL
            mov QWORD PTR [RDX],RAX
            add RDX,8
            test RCX,RCX
            mov EAX,1
            jne .L_406410
.L_406429:

            add RSP,56
.L_40642d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406440:

            mov RDX,QWORD PTR [RSP]
            mov RSI,R10
            mov ECX,EBP
            mov RDI,RBX
            call .L_409260

            mov RDX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+R15*1]
            mov ECX,EBP
            mov RSI,R14
            call .L_409260

            mov DWORD PTR [RSP+20],1
            jmp .L_40627c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406478:

            call .L_409230

            mov RDX,QWORD PTR [RSP]
            mov ECX,EBP
            mov RSI,RBX
            mov RDI,RBX
            add R13D,EAX
            call .L_409230

            mov RDX,QWORD PTR [RSP+32]
            mov R12,RAX
            mov ECX,EBP
            mov RSI,RBX
            mov RDI,RBX
            call .L_409230

            mov ECX,EBP
            add R12D,EAX
            mov RDX,R15
            mov RSI,RBX
            mov RDI,RBX
            call .L_409230

            add EAX,R12D
            jmp .L_4063ca
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4064c8:

            call .L_409230

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            jne .L_40632d
.L_4064db:

            test EBP,EBP
            jle .L_406511

            mov RDI,QWORD PTR [RSP+40]
            lea ECX,DWORD PTR [RBP-1]
            mov RAX,R14
            lea RDX,QWORD PTR [R12+RDI*1+8]
            lea RSI,QWORD PTR [RDX+RCX*8]
            nop
            nop
            nop
            nop
            nop
.L_4064f8:

            mov RDX,QWORD PTR [RAX]
            mov RCX,RAX
            add RAX,8
            sub RCX,RDI
            neg RDX
            cmp RAX,RSI
            mov QWORD PTR [RCX+R13*1],RDX
            jne .L_4064f8
.L_406511:

            mov RSI,QWORD PTR [RSP]
            xor R13D,R13D
            jmp .L_406359
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406520:

            lea RDX,QWORD PTR [RBX+R15*1]
            mov RSI,RBX
            mov RDI,R12
            call .L_409290

            mov RDX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP]
            mov RDI,RBX
            call .L_409290

            jmp .L_4062d4
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406548:

            cmp EAX,-4
            jne .L_406580

            mov RSI,QWORD PTR [RSP]
            mov RDX,R10
            mov ECX,EBP
            mov RDI,RBX
            call .L_409260

            mov RDX,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+R15*1]
            mov ECX,EBP
            mov RSI,R14
            call .L_409260

            mov DWORD PTR [RSP+20],0
            jmp .L_40627c
          .byte 0x66
          .byte 0x90
.L_406580:

            mov DWORD PTR [RSP+20],0
            jmp .L_40627c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406590:

            mov RSI,QWORD PTR [RSP]
            mov RDX,R10
            mov ECX,EBP
            mov RDI,RBX
            call .L_409260

            mov RSI,QWORD PTR [RSP+24]
            lea RDI,QWORD PTR [RBX+R15*1]
            mov ECX,EBP
            mov RDX,R14
            call .L_409260

            mov DWORD PTR [RSP+20],1
            jmp .L_40627c
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4065c8:

            neg EAX
            mov RDX,QWORD PTR [RSP+32]
            cdqe 
            jmp .L_4065dd
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4065d8:

            mov EAX,1
.L_4065dd:

            mov RCX,QWORD PTR [RDX]
            add RDX,8
            mov RSI,RCX
            sub RSI,RAX
            mov QWORD PTR [RDX-8],RSI
            cmp RAX,RCX
            ja .L_4065d8

            add RSP,56
.L_4065f7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406608:

            neg R13D
            movsxd R13,R13D
            jmp .L_406616
.L_406610:

            mov R13D,1
.L_406616:

            mov RDX,QWORD PTR [RBX]
            add RBX,8
            mov RCX,RDX
            sub RCX,R13
            mov QWORD PTR [RBX-8],RCX
            cmp R13,RDX
            ja .L_406610

            jmp .L_4063fa
.L_406631:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_406640:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,88
.L_40664e:

            cmp ECX,7
            mov R13,QWORD PTR [RSP+144]
            jle .L_4066f8

            movsxd RAX,ECX
            mov QWORD PTR [RSP+16],RDX
            mov QWORD PTR [RSP+32],RSI
            mov R15D,EAX
            mov RBX,RAX
            mov QWORD PTR [RSP+56],RAX
            sub R15D,R8D
            shl RAX,3
            mov EDX,R8D
            mov QWORD PTR [RSP],RDI
            mov ECX,R15D
            mov RDI,RSI
            add RSI,RAX
            mov EBP,R9D
            mov R12D,R8D
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+8],RAX
            call .L_404eb0

            mov RSI,QWORD PTR [RSP+16]
            mov R14D,EAX
            mov RAX,QWORD PTR [RSP+8]
            mov ECX,EBP
            mov EDX,EBP
            sub ECX,EBX
            add RAX,RSI
            mov DWORD PTR [RSP+24],ECX
            mov RDI,RAX
            mov QWORD PTR [RSP+48],RAX
            call .L_404eb0

            lea EDX,DWORD PTR [R14+R14*2]
            mov RDI,QWORD PTR [RSP+8]
            lea EAX,DWORD PTR [RAX+RDX*1+4]
            lea R10,QWORD PTR [R13+RDI*1]
            cmp EAX,8
            ja .L_406b81

            lea RDX,QWORD PTR [RIP+.L_407228]
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4066f8:

            add RSP,88
.L_4066fc:

            lea R11D,DWORD PTR [RCX+R8*1]
            lea R8D,DWORD PTR [RCX+R9*1]
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            mov RCX,RDX
            mov EDX,R11D
            jmp .L_405b80
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406720:

            mov RDX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov R8D,R15D
            mov ECX,R12D
            mov RDI,R13
            mov QWORD PTR [RSP+24],R10
            call .L_405710

            mov R10,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+48]
            mov R8D,EBX
            mov RSI,QWORD PTR [RSP+16]
            sub R8D,EBP
            mov ECX,EBP
            mov RDI,R10
            call .L_405710

            mov R10,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+64],1
.L_406769:

            lea R14D,DWORD PTR [RBX+RBX*1]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP]
            movsxd RAX,R14D
            shl RAX,3
            lea R15,QWORD PTR [R10+RSI*1]
            cmp EBX,8
            lea RSI,QWORD PTR [RDI+RAX*1]
            mov QWORD PTR [RSP+24],RSI
            je .L_406a58

            mov RDX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+72],RAX
            sub RSP,8
.L_4067a1:

            xor R9D,R9D
            xor R8D,R8D
            mov ECX,EBX
            mov RSI,R13
            mov RDI,R15
            shl RDX,4
            lea RAX,QWORD PTR [R15+RDX*1]
            mov RDX,R10
            mov QWORD PTR [RSP+64],RAX
            push RAX
            call .L_405c90

            pop RAX
            push QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+32]
            xor R9D,R9D
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+16]
            xor R8D,R8D
            mov ECX,EBX
            call .L_405c90

            mov R10D,EBX
            mov R8D,R12D
            mov R9D,EBP
            sar R10D,1
            sub R8D,R10D
            sub R9D,R10D
            cmp R12D,EBP
            pop RAX
            pop RDX
.L_4067fd:

            mov EDX,R8D
            mov RAX,QWORD PTR [RSP+72]
            cmovle EDX,R9D
            cmp EDX,0
            je .L_406ad0

            jg .L_406b30

            mov RDI,QWORD PTR [RSP+24]
            xor ESI,ESI
            mov RDX,RAX
            mov DWORD PTR [RSP+16],R10D
            call memset@PLT

            cmp R12D,15
            mov R10D,DWORD PTR [RSP+16]
            jg .L_40685d

            cmp EBP,15
            jg .L_40685d

            jmp .L_406b90
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406848:

            cmp EBP,ECX
            jg .L_406870

            cmp R12D,ECX
            je .L_406bb0

            cmp EBP,ECX
            je .L_406bb0
.L_40685d:

            mov ECX,R10D
            shr ECX,31
            add ECX,R10D
            sar ECX,1
            cmp R12D,ECX
            mov R10D,ECX
            jle .L_406848
.L_406870:

            sub RSP,8
.L_406874:

            mov R9D,EBP
            mov R8D,R12D
            push QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+64]
            sub R9D,ECX
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+40]
            sub R8D,ECX
            call .L_406640

            pop RSI
            pop RDI
.L_40689a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4068a0:

            mov RDX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP]
            mov ECX,R14D
            mov RDI,R13
            call .L_409230

            mov RBP,RAX
            mov EAX,DWORD PTR [RSP+64]
            mov ECX,R14D
            test EAX,EAX
            je .L_406a40

            mov RDX,R15
            mov RSI,R13
            mov RDI,R15
            call .L_409260

            sub EBP,EAX
.L_4068d6:

            mov RDI,QWORD PTR [RSP+8]
            mov R13,QWORD PTR [RSP]
            mov ECX,R14D
            mov RDX,R15
            add RDI,R13
            mov RSI,RDI
            call .L_409230

            add EBP,EAX
            je .L_406922

            add EBX,R14D
            xor EAX,EAX
            movsxd RBP,EBP
            movsxd RBX,EBX
            lea RDX,QWORD PTR [R13+RBX*8]
            add RBP,QWORD PTR [RDX]
            setb AL
            mov QWORD PTR [RDX],RBP
            test RAX,RAX
            je .L_406922

            nop
            nop
            nop
            nop
            nop
            nop
.L_406918:

            add RDX,8
            add QWORD PTR [RDX],1
            je .L_406918
.L_406922:

            add RSP,88
.L_406926:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406938:

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+40]
            mov R8D,R12D
            sub R8D,EBX
            mov ECX,R12D
            mov RDI,R13
            mov QWORD PTR [RSP+64],R10
            call .L_405710

            mov R10,QWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RSP+24]
            mov ECX,EBP
            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R10
            mov QWORD PTR [RSP+24],R10
            call .L_405710

            mov DWORD PTR [RSP+64],1
            mov R10,QWORD PTR [RSP+24]
            jmp .L_406769
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406990:

            mov RDX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP+32]
            mov R8D,R15D
            mov ECX,R12D
            mov RDI,R13
            mov QWORD PTR [RSP+64],R10
            call .L_405710

            mov R10,QWORD PTR [RSP+64]
            mov R8D,DWORD PTR [RSP+24]
            mov ECX,EBP
            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R10
            mov QWORD PTR [RSP+24],R10
            call .L_405710

            mov DWORD PTR [RSP+64],0
            mov R10,QWORD PTR [RSP+24]
            jmp .L_406769
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4069e8:

            mov RDX,QWORD PTR [RSP+32]
            mov RSI,QWORD PTR [RSP+40]
            mov R8D,R12D
            sub R8D,EBX
            mov ECX,R12D
            mov RDI,R13
            mov QWORD PTR [RSP+24],R10
            call .L_405710

            mov R10,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+48]
            mov R8D,EBX
            mov RSI,QWORD PTR [RSP+16]
            sub R8D,EBP
            mov ECX,EBP
            mov RDI,R10
            call .L_405710

            mov DWORD PTR [RSP+64],0
            mov R10,QWORD PTR [RSP+24]
            jmp .L_406769
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406a40:

            mov RDX,R13
            mov RSI,R15
            mov RDI,R15
            call .L_409230

            add EBP,EAX
            jmp .L_4068d6
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406a58:

            lea RDI,QWORD PTR [R13+128]
            mov RDX,R10
            mov RSI,R13
            call .L_409290

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+32]
            mov RDI,QWORD PTR [RSP]
            call .L_409290

            mov RAX,QWORD PTR [RSP]
            mov RSI,QWORD PTR [RSP+40]
            mov EDX,R12D
            mov RCX,QWORD PTR [RSP+48]
            mov R8D,EBP
            lea RDI,QWORD PTR [RAX+128]
            call .L_405b80

            mov RSI,QWORD PTR [RSP]
            lea EAX,DWORD PTR [R12+RBP*1+16]
            mov EDX,16
            sub EDX,R12D
            sub EDX,EBP
            cdqe 
            lea RDI,QWORD PTR [RSI+RAX*8]
            movsxd RDX,EDX
            xor ESI,ESI
            shl RDX,3
            call memset@PLT

            jmp .L_4068a0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406ad0:

            sub RSP,8
.L_406ad4:

            mov ECX,R10D
            push QWORD PTR [RSP+64]
.L_406adb:

            mov RDX,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+40]
            mov DWORD PTR [RSP+32],R10D
            call .L_405c90

            mov R10D,DWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RSP+16]
            mov EDX,R14D
            xor ESI,ESI
            add R10D,R10D
            sub EDX,R10D
            add R10D,R14D
            movsxd R10,R10D
            movsxd RDX,EDX
            lea RDI,QWORD PTR [RAX+R10*8]
            shl RDX,3
            call memset@PLT

            pop R10
.L_406b21:

            pop R11
            jmp .L_4068a0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406b30:

            sub RSP,8
            mov ECX,R10D
            push QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+64]
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+40]
            call .L_406640

            lea R11D,DWORD PTR [R14+R12*1]
            mov EDX,R14D
            mov RAX,QWORD PTR [RSP+16]
            sub EDX,R12D
            xor ESI,ESI
            sub EDX,EBP
            add EBP,R11D
            movsxd RBP,EBP
            movsxd RDX,EDX
            lea RDI,QWORD PTR [RAX+RBP*8]
            shl RDX,3
            call memset@PLT

            pop R8
            pop R9
            jmp .L_4068a0
.L_406b81:

            mov DWORD PTR [RSP+64],0
            jmp .L_406769

            nop
            nop
.L_406b90:

            mov RCX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RSP+40]
            mov R8D,EBP
            mov RDI,QWORD PTR [RSP+24]
            mov EDX,R12D
            call .L_405b80

            jmp .L_4068a0
          .byte 0x90
.L_406bb0:

            sub RSP,8
            mov R9D,EBP
            mov R8D,R12D
            push QWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+64]
            sub R9D,ECX
            mov RSI,QWORD PTR [RSP+56]
            mov RDI,QWORD PTR [RSP+40]
            sub R8D,ECX
            call .L_405c90

            pop RDX
            pop RCX
            jmp .L_4068a0
.L_406bdf:

            nop
.L_406be0:

            push R15
            push R14
            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            sub RSP,56
.L_406bf1:

            mov EBX,DWORD PTR [RSI+8]
            mov R12D,DWORD PTR [RDX+8]
            test EBX,EBX
            je .L_406ce0

            test R12D,R12D
            je .L_406ce0

            mov RBP,RSI
            mov RDI,RCX
            mov QWORD PTR [RSP+8],RDX
            mov R14,RCX
            call .L_405420

            cmp RBP,R13
            mov RDX,QWORD PTR [RSP+8]
            je .L_406dd0

            cmp RDX,R13
            mov R15,R13
            je .L_406dd0
.L_406c36:

            mov EAX,DWORD PTR [RBP+16]
            xor EAX,DWORD PTR [RDX+16]
            mov DWORD PTR [R15+16],EAX
            mov EAX,EBX
            sub EAX,R12D
            cmp EBX,8
            jne .L_406c52

            test EAX,EAX
            je .L_406e30
.L_406c52:

            cmp EBX,15
            lea R10D,DWORD PTR [RBX+R12*1]
            jle .L_406c6d

            cmp R12D,15
            jle .L_406c6d

            lea ECX,DWORD PTR [RAX+1]
            cmp ECX,2
            jbe .L_406d00
.L_406c6d:

            cmp DWORD PTR [R15+12],R10D
            jl .L_406e00
.L_406c77:

            mov RCX,QWORD PTR [RDX]
            mov RSI,QWORD PTR [RBP]
            mov R8D,R12D
            mov RDI,QWORD PTR [R15]
            mov DWORD PTR [R15+8],R10D
            mov EDX,EBX
            call .L_405b80

            mov R10D,DWORD PTR [R15+8]
.L_406c93:

            test R10D,R10D
            jle .L_406cbd

            mov RDX,QWORD PTR [R15]
            movsxd RAX,R10D
            lea RAX,QWORD PTR [RDX+RAX*8-8]
            nop
            nop
            nop
            nop
            nop
.L_406ca8:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_406cb9

            sub R10D,1
            jne .L_406ca8
.L_406cb9:

            mov DWORD PTR [R15+8],R10D
.L_406cbd:

            cmp R15,R13
            mov EBX,1
            je .L_406df0

            mov RSI,R15
            mov RDI,R13
            call .L_404650

            jmp .L_406df0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406ce0:

            xor ESI,ESI
            mov RDI,R13
            mov EBX,1
            call .L_4048e0
.L_406cef:

            add RSP,56
.L_406cf3:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_406d00:

            cmp EAX,-1
            mov QWORD PTR [RSP+16],RDX
            mov DWORD PTR [RSP+8],R10D
            jne .L_406eb0

            movsxd RDI,R12D
            call .L_404360

            mov RDX,QWORD PTR [RSP+16]
            mov R10D,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+28],EAX
.L_406d29:

            mov RDI,R14
            mov QWORD PTR [RSP+16],RDX
            mov DWORD PTR [RSP+8],R10D
            call .L_4055b0

            test RAX,RAX
            mov R8,RAX
            je .L_406dee

            mov ECX,DWORD PTR [RSP+28]
            mov EAX,1
            mov ESI,DWORD PTR [R8+12]
            mov R10D,DWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            sub ECX,1
            shl EAX,CL
            mov R11D,EAX
            mov EAX,2
            shl EAX,CL
            cmp EBX,R11D
            jg .L_406e60

            cmp R12D,R11D
            jg .L_406e60

            lea ECX,DWORD PTR [RAX+RAX*1]
            cmp ECX,ESI
            jg .L_406ef8
.L_406d8a:

            cmp ECX,DWORD PTR [R15+12]
            jg .L_406f88
.L_406d94:

            mov DWORD PTR [RSP+8],R10D
            sub RSP,8
.L_406d9d:

            push QWORD PTR [R8]
            mov RDX,QWORD PTR [RDX]
            mov RSI,QWORD PTR [RBP]
            sub EBX,R11D
            mov RDI,QWORD PTR [R15]
            mov R9D,R12D
            mov R8D,EBX
            sub R9D,R11D
            mov ECX,R11D
            call .L_405c90

            pop RAX
            pop RDX
.L_406dc0:

            mov R10D,DWORD PTR [RSP+8]
.L_406dc5:

            mov DWORD PTR [R15+8],R10D
            jmp .L_406c93
          .byte 0x66
          .byte 0x90
.L_406dd0:

            mov RDI,R14
            mov QWORD PTR [RSP+8],RDX
            call .L_4055b0

            test RAX,RAX
            mov R15,RAX
            mov RDX,QWORD PTR [RSP+8]
            jne .L_406c36
.L_406dee:

            xor EBX,EBX
.L_406df0:

            mov RDI,R14
            call .L_405530

            jmp .L_406cef
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406e00:

            mov ESI,R10D
            mov RDI,R15
            mov QWORD PTR [RSP+16],RDX
            mov DWORD PTR [RSP+8],R10D
            call .L_404630

            test RAX,RAX
            mov R10D,DWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            je .L_406dee

            jmp .L_406c77
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_406e30:

            cmp DWORD PTR [R15+12],15
            jle .L_406ed0
.L_406e3b:

            mov RDX,QWORD PTR [RDX]
            mov RSI,QWORD PTR [RBP]
            mov RDI,QWORD PTR [R15]
            mov DWORD PTR [R15+8],16
            call .L_409290

            mov R10D,DWORD PTR [R15+8]
            jmp .L_406c93
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406e60:

            lea ECX,DWORD PTR [RAX*4]
            cmp ECX,ESI
            jg .L_406f40
.L_406e6f:

            cmp ECX,DWORD PTR [R15+12]
            jg .L_406fc8
.L_406e79:

            mov DWORD PTR [RSP+8],R10D
            sub RSP,8
.L_406e82:

            push QWORD PTR [R8]
            mov RSI,QWORD PTR [RBP]
            mov RDX,QWORD PTR [RDX]
            sub EBX,R11D
            mov RDI,QWORD PTR [R15]
            mov R9D,R12D
            mov ECX,R11D
            sub R9D,R11D
            mov R8D,EBX
            call .L_406640

            pop RCX
            pop RSI
            mov R10D,DWORD PTR [RSP+8]
            jmp .L_406dc5
          .byte 0x90
.L_406eb0:

            movsxd RDI,EBX
            call .L_404360

            mov R10D,DWORD PTR [RSP+8]
            mov DWORD PTR [RSP+28],EAX
            mov RDX,QWORD PTR [RSP+16]
            jmp .L_406d29
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_406ed0:

            mov ESI,16
            mov RDI,R15
            mov QWORD PTR [RSP+8],RDX
            call .L_404630

            test RAX,RAX
            mov RDX,QWORD PTR [RSP+8]
            je .L_406dee

            jmp .L_406e3b
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_406ef8:

            mov ESI,ECX
            mov RDI,R8
            mov QWORD PTR [RSP+40],RDX
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+28],R11D
            mov DWORD PTR [RSP+16],ECX
            mov QWORD PTR [RSP+8],R8
            call .L_404630

            test RAX,RAX
            mov R8,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+28]
            mov R10D,DWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+40]
            je .L_406dee

            jmp .L_406d8a
.L_406f40:

            mov ESI,ECX
            mov RDI,R8
            mov QWORD PTR [RSP+40],RDX
            mov DWORD PTR [RSP+32],R10D
            mov DWORD PTR [RSP+28],R11D
            mov DWORD PTR [RSP+16],ECX
            mov QWORD PTR [RSP+8],R8
            call .L_404630

            test RAX,RAX
            mov R8,QWORD PTR [RSP+8]
            mov ECX,DWORD PTR [RSP+16]
            mov R11D,DWORD PTR [RSP+28]
            mov R10D,DWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSP+40]
            je .L_406dee

            jmp .L_406e6f
.L_406f88:

            mov ESI,ECX
            mov RDI,R15
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+28],R10D
            mov QWORD PTR [RSP+16],R8
            mov DWORD PTR [RSP+8],R11D
            call .L_404630

            test RAX,RAX
            mov R11D,DWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            mov R10D,DWORD PTR [RSP+28]
            mov RDX,QWORD PTR [RSP+32]
            je .L_406dee

            jmp .L_406d94
.L_406fc8:

            mov ESI,ECX
            mov RDI,R15
            mov QWORD PTR [RSP+32],RDX
            mov DWORD PTR [RSP+28],R10D
            mov QWORD PTR [RSP+16],R8
            mov DWORD PTR [RSP+8],R11D
            call .L_404630

            test RAX,RAX
            mov R11D,DWORD PTR [RSP+8]
            mov R8,QWORD PTR [RSP+16]
            mov R10D,DWORD PTR [RSP+28]
            mov RDX,QWORD PTR [RSP+32]
            je .L_406dee

            jmp .L_406e79
.L_407008:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407010:

            push R15
            push R14
            mov R14,RDX
            push R13
            push R12
            mov R12D,ECX
            push RBP
            push RBX
            lea R15D,DWORD PTR [R12-1]
            mov RBX,RDI
            mov RBP,RSI
            sub RSP,24
.L_40702f:

            mov RCX,QWORD PTR [RDX]
            mov EDX,R12D
            call .L_4090a0

            test R15D,R15D
            jle .L_4070f2

            lea EAX,DWORD PTR [R12+1]
            mov ESI,R15D
            lea R13D,DWORD PTR [R12-5]
            and EAX,4294967292
            sub ESI,EAX
            lea EAX,DWORD PTR [R12-2]
            and R12D,3
            mov DWORD PTR [RSP+8],ESI
            sub R12D,1
            and EAX,4294967292
            sub R13D,EAX
            mov EAX,R15D
            and EAX,3
            mov DWORD PTR [RSP+12],EAX
            jmp .L_4070d4
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407080:

            mov RCX,QWORD PTR [R14+16]
            lea RDI,QWORD PTR [RBX+16]
            mov RSI,RBP
            call .L_408f90

            cmp R15D,R12D
            lea EDX,DWORD PTR [R15-2]
            je .L_4070f2

            mov RCX,QWORD PTR [R14+24]
            lea RDI,QWORD PTR [RBX+24]
            mov RSI,RBP
            call .L_408f90

            cmp R15D,DWORD PTR [RSP+12]
            lea EDX,DWORD PTR [R15-3]
            je .L_4070f2

            mov RCX,QWORD PTR [R14+32]
            add RBX,32
            mov RSI,RBP
            mov RDI,RBX
            sub R15D,4
            add R14,32
            call .L_408f90

            cmp R13D,R15D
            je .L_4070f2
.L_4070d4:

            mov RCX,QWORD PTR [R14+8]
            lea RDI,QWORD PTR [RBX+8]
            mov EDX,R15D
            mov RSI,RBP
            call .L_408f90

            cmp R15D,DWORD PTR [RSP+8]
            lea EDX,DWORD PTR [R15-1]
            jne .L_407080
.L_4070f2:

            add RSP,24
.L_4070f6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_407101:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407110:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            xor R9D,R9D
            push RBP
            push RBX
            mov EBX,ECX
            shr EBX,31
            mov R13,R8
            mov R12,RDI
            add EBX,ECX
            sub RSP,32
            mov R14,RDX
            sar EBX,1
            mov DWORD PTR [RSP+12],ECX
            push R8
            movsxd RBP,EBX
            xor R8D,R8D
            mov ECX,EBX
            shl RBP,3
            call .L_405c90

            lea RAX,QWORD PTR [R15+RBP*1]
            add R12,RBP
            cmp EBX,31
            lea RDX,QWORD PTR [R14+RBP*1]
            mov QWORD PTR [RSP+24],RAX
            pop RAX
            pop RCX
.L_407162:

            movsxd R10,DWORD PTR [RSP+4]
            jg .L_4071c0

            mov ECX,EBX
            mov RSI,R15
            mov RDI,R13
            call .L_407010

            mov RSI,QWORD PTR [RSP+8]
            add RBP,R13
            mov ECX,EBX
            mov RDX,R14
            mov RDI,RBP
            call .L_407010

            mov ECX,EBX
            mov RDX,R13
            mov RSI,R12
            mov RDI,R12
            call .L_409230

            mov ECX,EBX
            mov RDX,RBP
.L_4071a0:

            add RSP,24
.L_4071a4:

            mov RSI,R12
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_409230
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4071c0:

            lea RBP,QWORD PTR [R13+R10*8]
            mov ECX,EBX
            mov RSI,R15
            mov RDI,R13
            mov R8,RBP
            call .L_407110

            mov ECX,EBX
            mov RDX,R13
            mov RSI,R12
            mov RDI,R12
            call .L_409230

            mov RSI,QWORD PTR [RSP+8]
            mov ECX,EBX
            mov RDX,R14
            mov R8,RBP
            mov RDI,R13
            call .L_407110

            mov ECX,EBX
            mov RDX,R13
            jmp .L_4071a0
.L_407201:
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407204:
          .long .L_405f90-.L_407204
          .long .L_405dd0-.L_407204
          .long .L_406030-.L_407204
          .long .L_405dd0-.L_407204
          .long .L_405dd0-.L_407204
          .long .L_405dd0-.L_407204
          .long .L_405ef8-.L_407204
          .long .L_405dd0-.L_407204
          .long .L_405ff0-.L_407204
.L_407228:
          .long .L_4069e8-.L_407228
          .long .L_406938-.L_407228
          .long .L_406938-.L_407228
          .long .L_406720-.L_407228
          .long .L_406720-.L_407228
          .long .L_406720-.L_407228
          .long .L_406720-.L_407228
          .long .L_406990-.L_407228
          .long .L_406990-.L_407228
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407250:

            push RBP
            push RBX
            mov R8,RCX
            mov RBX,RDI
            mov RCX,RDX
            mov RBP,RDX
            sub RSP,8
            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            call .L_41b130

            test EAX,EAX
            je .L_4072a5

            mov EDX,DWORD PTR [RBX+16]
            test EDX,EDX
            je .L_4072a0

            mov EAX,DWORD PTR [RBP+16]
            test EAX,EAX
            jne .L_4072b0

            mov RAX,OFFSET .L_41af30
.L_407288:

            add RSP,8
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4072a0:

            mov EAX,1
.L_4072a5:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4072b0:

            mov RAX,OFFSET .L_41b010
            jmp .L_407288
.L_4072b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4072c0:

            push R12
            push RBP
            mov R12,R8
            push RBX
            mov RBP,RCX
            mov RBX,RDI
            call .L_41af30

            test EAX,EAX
            jne .L_4072e0

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4072e0:

            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_407250
.L_4072f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407300:

            push RBP
            push RBX
            mov RBP,RCX
            mov RBX,RDI
            sub RSP,8
            call .L_41ab80

            test EAX,EAX
            jne .L_407320

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407320:

            mov RSI,RBP
            mov RDI,RBX
            call .L_404b00

            test EAX,EAX
            js .L_407348

            add RSP,8
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41acf0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407348:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
.L_407354:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407360:

            push R12
            push RBP
            mov R12,R8
            push RBX
            mov RBP,RCX
            mov RBX,RDI
            call .L_41b010

            test EAX,EAX
            jne .L_407380

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407380:

            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_407250
.L_407395:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4073a0:

            push RBP
            push RBX
            mov RBP,RCX
            mov RBX,RDI
            sub RSP,8
            call .L_41b010

            test EAX,EAX
            je .L_4073c1

            mov EDX,DWORD PTR [RBX+16]
            mov EAX,1
            test EDX,EDX
            jne .L_4073d0
.L_4073c1:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4073d0:

            add RSP,8
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41af30
.L_4073e4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4073f0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov RDI,R8
            push RBP
            push RBX
            mov RBX,R8
            mov R12,RSI
            mov R13,RDX
            mov R15,RCX
            sub RSP,8
.L_407410:

            call .L_405420

            mov RDI,RBX
            call .L_4055b0

            test RAX,RAX
            je .L_407478

            cmp R12,R13
            mov RBP,RAX
            je .L_407460

            mov RCX,RBX
            mov RDX,R13
            mov RSI,R12
            mov RDI,RAX
            call .L_406be0

            test EAX,EAX
            je .L_407478
.L_40743f:

            mov RSI,RBP
            mov RCX,RBX
            mov RDX,R15
            mov RDI,R14
            xor EBP,EBP
            call .L_407250

            test EAX,EAX
            setne BPL
            jmp .L_40747a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407460:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call .L_408d30

            test EAX,EAX
            jne .L_40743f

            nop
            nop
            nop
            nop
            nop
            nop
.L_407478:

            xor EBP,EBP
.L_40747a:

            mov RDI,RBX
            call .L_405530

            add RSP,8
.L_407486:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_407493:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4074a0:

            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RDX,RCX
            mov RBX,RDI
            mov RBP,RCX
            call .L_408d30

            test EAX,EAX
            jne .L_4074c0

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_4074c0:

            mov R8,RBP
            mov RCX,R12
            mov RDX,RBX
            mov RSI,RBX
            xor EDI,EDI
            pop RBX
            pop RBP
            pop R12
            jmp .L_41b130
.L_4074d7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4074e0:

            push R12
            push RBP
            mov R12,RCX
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            call .L_408110

            test EAX,EAX
            jne .L_407500

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407500:

            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            jmp .L_407250
.L_407515:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407520:

            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RDI
            sub RSP,8
            call .L_408110

            test EAX,EAX
            jne .L_407540

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407540:

            mov RSI,RBP
            mov RDI,RBX
            call .L_404b70

            test EAX,EAX
            js .L_407568

            add RSP,8
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            pop RBX
            pop RBP
            jmp .L_41b010
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407568:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
.L_407574:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407580:

            push R13
            push R12
            mov R13,RCX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12D,EDX
            sub RSP,8
.L_407593:

            cmp RDI,RSI
            je .L_4075a8

            call .L_404650

            test RAX,RAX
            je .L_407608

            nop
            nop
            nop
            nop
            nop
            nop
.L_4075a8:

            test R12D,R12D
            jle .L_407638

            mov RDI,R13
            call .L_404490

            mov RDI,RBP
            mov EBX,EAX
            call .L_404490

            sub EBX,EAX
            js .L_407650

            cmp EBX,R12D
            jg .L_407618

            test EBX,EBX
            jne .L_40761b

            mov RSI,RBP
            mov RDI,RBP
            call .L_408110

            test EAX,EAX
            je .L_407608

            sub R12D,1
.L_4075e7:

            mov RSI,R13
            mov RDI,RBP
            call .L_404b70

            test EAX,EAX
            js .L_4075a8

            mov RDX,R13
            mov RSI,RBP
            mov RDI,RBP
            call .L_41b010

            test EAX,EAX
            jne .L_4075a8
.L_407608:

            add RSP,8
.L_40760c:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407618:

            mov EBX,R12D
.L_40761b:

            mov EDX,EBX
            mov RSI,RBP
            mov RDI,RBP
            call .L_4082f0

            test EAX,EAX
            je .L_407608

            sub R12D,EBX
            jmp .L_4075e7
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407638:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407650:

            lea RCX,QWORD PTR [RIP+.L_407719]
            mov R8D,289
            mov EDX,110
            mov ESI,119
            mov EDI,3
            call .L_416a00

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40767e:

            nop
            nop
.L_407680:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBX,RCX
            mov RCX,R8
            mov RDX,RBX
            mov RBP,RDI
            sub RSP,16
.L_407697:

            call .L_407250

            test EAX,EAX
            je .L_4076f0

            mov EAX,DWORD PTR [RBX+16]
            test EAX,EAX
            je .L_407700

            mov RDI,RBX
            call .L_404760

            test RAX,RAX
            mov RBX,RAX
            je .L_4076f0

            mov EDX,R12D
            mov RSI,RBP
            mov RDI,RBP
            mov RCX,RAX
            mov DWORD PTR [RAX+16],0
            call .L_407580

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call .L_404540

            mov EAX,DWORD PTR [RSP+12]
            add RSP,16
.L_4076e3:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4076f0:

            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407700:

            add RSP,16
            mov RCX,RBX
            mov EDX,R12D
            pop RBX
            mov RSI,RBP
            mov RDI,RBP
            pop RBP
            pop R12
            jmp .L_407580
.L_407719:
          .string "bn_mod.c"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407730:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_407738:

            mov ECX,DWORD PTR [RBX+16]
            mov EDI,DWORD PTR [RDI+8]
            test ECX,ECX
            je .L_40774a

            test EDI,EDI
            je .L_407820
.L_40774a:

            shl EDI,4
            lea RSI,QWORD PTR [RIP+.L_4080c7]
            mov EDX,78
            add EDI,2
            call .L_418820

            test RAX,RAX
            je .L_40783f
.L_40776a:

            mov EDX,DWORD PTR [RBX+16]
            mov R8,RAX
            test EDX,EDX
            je .L_40777b

            lea R8,QWORD PTR [RAX+1]
            mov BYTE PTR [RAX],45
.L_40777b:

            mov EDX,DWORD PTR [RBX+8]
            test EDX,EDX
            je .L_407810
.L_407786:

            sub EDX,1
            js .L_4077fe

            movsxd RCX,EDX
            mov EDX,EDX
            lea R10,QWORD PTR [RIP+.L_4080f0]
            lea R9,QWORD PTR [RCX*8]
            sub RCX,RDX
            xor EDI,EDI
            lea R11,QWORD PTR [RCX*8-8]
            nop
            nop
            nop
            nop
.L_4077b0:

            mov ECX,56
            nop
            nop
            nop
.L_4077b8:

            mov RDX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RDX+R9*1]
            shr RDX,CL
            movzx ESI,DL
            or EDI,ESI
            je .L_4077ed

            sar ESI,4
            and EDX,15
            add R8,2
            movsxd RSI,ESI
            movzx EDX,BYTE PTR [R10+RDX*1]
            mov EDI,1
            movzx ESI,BYTE PTR [R10+RSI*1]
            mov BYTE PTR [R8-1],DL
            mov BYTE PTR [R8-2],SIL
.L_4077ed:

            sub ECX,8
            cmp ECX,-8
            jne .L_4077b8

            sub R9,8
            cmp R11,R9
            jne .L_4077b0
.L_4077fe:

            mov BYTE PTR [R8],0
            add RSP,16
.L_407806:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407810:

            mov BYTE PTR [R8],48
            add R8,1
            mov EDX,DWORD PTR [RBX+8]
            jmp .L_407786
.L_407820:

            lea RSI,QWORD PTR [RIP+.L_4080c7]
            mov EDX,76
            mov EDI,3
            call .L_418820

            test RAX,RAX
            jne .L_40776a
.L_40783f:

            lea RCX,QWORD PTR [RIP+.L_4080c7]
            mov R8D,81
            mov EDX,65
            mov ESI,105
            mov EDI,3
            mov QWORD PTR [RSP+8],RAX
            call .L_416a00

            mov RAX,QWORD PTR [RSP+8]
            add RSP,16
.L_40786e:

            pop RBX
            ret 
.L_407870:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,24
.L_407881:

            call .L_404490

            lea ESI,DWORD PTR [RAX+RAX*2]
            mov EDX,1717986919
            mov EAX,ESI
            mov EDI,ESI
            imul EDX
            mov EAX,ESI
            sar EDI,31
            mov EBX,EDX
            mov EDX,274877907
            imul EDX
            sar EBX,2
            mov ECX,EBX
            sub ECX,EDI
            mov ESI,EDX
            mov EDX,1808407283
            sar ESI,6
            sub ESI,EDI
            lea EBX,DWORD PTR [RCX+RSI*1]
            lea RSI,QWORD PTR [RIP+.L_4080c7]
            lea ECX,DWORD PTR [RBX+2]
            add EBX,5
            mov EAX,ECX
            sar ECX,31
            imul EDX
            sar EDX,3
            sub EDX,ECX
            lea EDI,DWORD PTR [RDX*8+8]
            mov EDX,123
            call .L_418820

            lea RSI,QWORD PTR [RIP+.L_4080c7]
            mov EDX,124
            mov EDI,EBX
            mov R13,RAX
            call .L_418820

            test RAX,RAX
            mov RBP,RAX
            je .L_407a38

            test R13,R13
            je .L_407a38

            mov RDI,R12
            call .L_404760

            test RAX,RAX
            mov R12,RAX
            je .L_407a98

            mov R8D,DWORD PTR [RAX+8]
            test R8D,R8D
            je .L_407a78

            mov ESI,DWORD PTR [RAX+16]
            test ESI,ESI
            je .L_407ab0

            mov BYTE PTR [RBP],45
            mov ECX,DWORD PTR [RAX+8]
            lea R15,QWORD PTR [RBP+1]
            test ECX,ECX
            je .L_407aca

            mov QWORD PTR [RSP],1
.L_407954:

            mov R14,R13
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407960:

            movabs RSI,-8446744073709551616
            mov RDI,R12
            add R14,8
            call .L_408700

            mov EDX,DWORD PTR [R12+8]
            mov QWORD PTR [R14-8],RAX
            test EDX,EDX
            jne .L_407960
.L_407983:

            movsxd RBX,EBX
            lea R9,QWORD PTR [R14-8]
            lea RDX,QWORD PTR [RIP+.L_4080d2]
            mov RSI,RBX
            sub RSI,QWORD PTR [RSP]
            mov RCX,RAX
            mov RDI,R15
            xor EAX,EAX
            mov QWORD PTR [RSP+8],R9
            call .L_414fa0

            cmp BYTE PTR [R15],0
            mov R9,QWORD PTR [RSP+8]
            je .L_4079c2

            nop
            nop
            nop
.L_4079b8:

            add R15,1
            cmp BYTE PTR [R15],0
            jne .L_4079b8
.L_4079c2:

            cmp R13,R9
            je .L_407a81

            lea RAX,QWORD PTR [R14-16]
            sub RAX,R13
            and RAX,-8
            neg RAX
            lea RAX,QWORD PTR [R14+RAX*1-16]
            lea R14,QWORD PTR [RIP+.L_4080d6]
            mov QWORD PTR [RSP+8],RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4079f0:

            mov RCX,QWORD PTR [R9-8]
            mov RAX,R15
            mov RSI,RBX
            sub RAX,RBP
            sub R9,8
            mov RDX,R14
            sub RSI,RAX
            mov RDI,R15
            xor EAX,EAX
            mov QWORD PTR [RSP],R9
            call .L_414fa0

            cmp BYTE PTR [R15],0
            mov R9,QWORD PTR [RSP]
            je .L_407a2a

            nop
.L_407a20:

            add R15,1
            cmp BYTE PTR [R15],0
            jne .L_407a20
.L_407a2a:

            cmp QWORD PTR [RSP+8],R9
            jne .L_4079f0

            jmp .L_407a81
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407a38:

            lea RCX,QWORD PTR [RIP+.L_4080c7]
            mov R8D,126
            mov EDX,65
            mov ESI,104
            mov EDI,3
            call .L_416a00

            test R13,R13
            jne .L_407ac0
.L_407a5e:

            test RBP,RBP
            jne .L_407aa0
.L_407a63:

            add RSP,24
.L_407a67:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407a78:

            mov EDI,48
            mov WORD PTR [RBP],DI
.L_407a81:

            mov RDI,R13
            call .L_418aa0

            mov RDI,R12
            call .L_404540

            jmp .L_407a63
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407a98:

            mov RDI,R13
            call .L_418aa0
.L_407aa0:

            mov RDI,RBP
            xor EBP,EBP
            call .L_418aa0

            jmp .L_407a63
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407ab0:

            mov R15,RBP
            mov QWORD PTR [RSP],0
            jmp .L_407954
.L_407ac0:

            mov RDI,R13
            call .L_418aa0

            jmp .L_407a5e
.L_407aca:

            mov RAX,QWORD PTR [R13-8]
            mov R14,R13
            mov QWORD PTR [RSP],1
            jmp .L_407983
.L_407ade:

            nop
            nop
.L_407ae0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_407aee:

            test RSI,RSI
            je .L_407c70

            movzx R13D,BYTE PTR [RSI]
            mov R12,RSI
            test R13B,R13B
            je .L_407c70

            xor EBX,EBX
            cmp R13B,45
            mov R14,RDI
            jne .L_407b20

            movzx R13D,BYTE PTR [RSI+1]
            add R12,1
            mov EBX,1
.L_407b20:

            call __ctype_b_loc@PLT

            mov RDX,QWORD PTR [RAX]
            xor EAX,EAX
            jmp .L_407b35
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_407b30:

            movzx R13D,BYTE PTR [R12+RAX*1]
.L_407b35:

            mov EBP,EAX
            add RAX,1
            test BYTE PTR [RDX+R13*2+1],16
            jne .L_407b30

            test R14,R14
            lea R13D,DWORD PTR [RBX+RBP*1]
            je .L_407c73

            mov R15,QWORD PTR [R14]
            test R15,R15
            je .L_407ca8

            xor ESI,ESI
            mov RDI,R15
            call .L_4048e0
.L_407b66:

            lea ESI,DWORD PTR [RBP*4+63]
            sar ESI,6
            cmp ESI,DWORD PTR [R15+12]
            jg .L_407c48
.L_407b7a:

            test EBP,EBP
            je .L_407cbb

            mov R11,QWORD PTR [R15]
            movsxd R9,EBP
            mov R8D,1
.L_407b8e:

            cmp EBP,16
            mov EAX,16
            lea RDI,QWORD PTR [R12+R9*1+1]
            cmovle EAX,EBP
            mov RCX,R9
            xor ESI,ESI
            movsxd RDX,EAX
            sub EAX,1
            sub RCX,RDX
            sub RDI,RDX
            add RCX,R12
            add RDI,RAX
            jmp .L_407be1
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407bc0:

            lea EAX,DWORD PTR [RDX-97]
            cmp EAX,5
            ja .L_407c88

            lea EAX,DWORD PTR [RDX-87]
            cdqe 
.L_407bd1:

            shl RSI,4
            add RCX,1
            or RSI,RAX
            cmp RDI,RCX
            je .L_407bfe
.L_407be1:

            movsx EDX,BYTE PTR [RCX]
            lea EAX,DWORD PTR [RDX-48]
            cmp EAX,9
            ja .L_407bc0

            cdqe 
.L_407bee:

            shl RSI,4
            add RCX,1
            or RSI,RAX
            cmp RDI,RCX
            jne .L_407be1
.L_407bfe:

            sub EBP,16
            mov EAX,R8D
            mov QWORD PTR [R11+R8*8-8],RSI
            sub R9,16
            add R8,1
            test EBP,EBP
            jg .L_407b8e

            movsxd RDX,EAX
            lea RDX,QWORD PTR [R11+RDX*8-8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c28:

            sub RDX,8
            cmp QWORD PTR [RDX+8],0
            jne .L_407c38

            sub EAX,1
            jne .L_407c28
.L_407c38:

            mov DWORD PTR [R15+8],EAX
.L_407c3c:

            mov DWORD PTR [R15+16],EBX
            mov QWORD PTR [R14],R15
            jmp .L_407c73
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407c48:

            mov RDI,R15
            call .L_404630

            test RAX,RAX
            jne .L_407b7a

            cmp QWORD PTR [R14],0
            jne .L_407c70

            mov RDI,R15
            call .L_404540

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407c70:

            xor R13D,R13D
.L_407c73:

            add RSP,8
.L_407c77:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407c88:

            lea R10D,DWORD PTR [RDX-65]
            xor EAX,EAX
            cmp R10D,5
            ja .L_407bd1

            lea EAX,DWORD PTR [RDX-55]
            cdqe 
            jmp .L_407bee
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407ca8:

            call .L_4045b0

            test RAX,RAX
            mov R15,RAX
            jne .L_407b66

            jmp .L_407c70
.L_407cbb:

            mov DWORD PTR [R15+8],0
            jmp .L_407c3c
.L_407cc8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_407cd0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_407cde:

            test RSI,RSI
            je .L_407e40

            movzx EBX,BYTE PTR [RSI]
            mov RBP,RSI
            test BL,BL
            je .L_407e40

            xor R12D,R12D
            cmp BL,45
            mov R14,RDI
            jne .L_407d0e

            movzx EBX,BYTE PTR [RSI+1]
            add RBP,1
            mov R12D,1
.L_407d0e:

            call __ctype_b_loc@PLT

            mov RDX,QWORD PTR [RAX]
            xor EAX,EAX
            jmp .L_407d25
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_407d20:

            movzx EBX,BYTE PTR [RBP+RAX*1]
.L_407d25:

            mov R13D,EAX
            add RAX,1
            test BYTE PTR [RDX+RBX*2+1],8
            jne .L_407d20

            test R14,R14
            lea R15D,DWORD PTR [R12+R13*1]
            je .L_407e43

            mov RBX,QWORD PTR [R14]
            test RBX,RBX
            je .L_407e58

            xor ESI,ESI
            mov RDI,RBX
            call .L_4048e0
.L_407d56:

            lea ESI,DWORD PTR [R13*4+63]
            sar ESI,6
            cmp ESI,DWORD PTR [RBX+12]
            jg .L_407e20
.L_407d6a:

            mov EAX,R13D
            mov EDX,1808407283
            imul EDX
            mov EAX,R13D
            sar EAX,31
            sar EDX,3
            sub EDX,EAX
            lea EAX,DWORD PTR [RDX+RDX*8]
            lea EAX,DWORD PTR [RDX+RAX*2]
            sub EAX,R13D
            lea EDX,DWORD PTR [RAX+19]
            mov EAX,0
            cmp EDX,19
            cmove EDX,EAX
            xor R13D,R13D
.L_407d99:

            movsx EAX,BYTE PTR [RBP]
            test AL,AL
            je .L_407de8
.L_407da1:

            sub EAX,48
            lea RCX,QWORD PTR [R13+R13*4]
            add EDX,1
            cdqe 
            add RBP,1
            cmp EDX,19
            lea R13,QWORD PTR [RAX+RCX*2]
            jne .L_407d99

            movabs RSI,-8446744073709551616
            mov RDI,RBX
            call .L_408a00

            mov RSI,R13
            mov RDI,RBX
            xor R13D,R13D
            call .L_408810

            movsx EAX,BYTE PTR [RBP]
            xor EDX,EDX
            test AL,AL
            jne .L_407da1

            nop
            nop
            nop
.L_407de8:

            mov EAX,DWORD PTR [RBX+8]
            mov DWORD PTR [RBX+16],R12D
            test EAX,EAX
            jle .L_407e13

            mov RCX,QWORD PTR [RBX]
            movsxd RDX,EAX
            lea RDX,QWORD PTR [RCX+RDX*8-8]
            nop
            nop
.L_407e00:

            sub RDX,8
            cmp QWORD PTR [RDX+8],0
            jne .L_407e10

            sub EAX,1
            jne .L_407e00
.L_407e10:

            mov DWORD PTR [RBX+8],EAX
.L_407e13:

            mov QWORD PTR [R14],RBX
            jmp .L_407e43
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407e20:

            mov RDI,RBX
            call .L_404630

            test RAX,RAX
            jne .L_407d6a

            cmp QWORD PTR [R14],0
            jne .L_407e40

            mov RDI,RBX
            call .L_404540

            nop
.L_407e40:

            xor R15D,R15D
.L_407e43:

            add RSP,8
.L_407e47:

            mov EAX,R15D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407e58:

            call .L_4045b0

            test RAX,RAX
            mov RBX,RAX
            jne .L_407d56

            jmp .L_407e40
.L_407e6b:

            nop
            nop
            nop
            nop
            nop
.L_407e70:

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
            movzx EAX,BYTE PTR [RSI]
            cmp AL,45
            jne .L_407e8b

            movzx EAX,BYTE PTR [RBX+1]
            lea RSI,QWORD PTR [RSI+1]
.L_407e8b:

            cmp AL,48
            jne .L_407e9a

            movzx EAX,BYTE PTR [RSI+1]
            and EAX,4294967263
            cmp AL,88
            je .L_407ec0
.L_407e9a:

            mov RDI,RBP
            call .L_407cd0

            test EAX,EAX
            je .L_407ed0
.L_407ea6:

            cmp BYTE PTR [RBX],45
            je .L_407ee0
.L_407eab:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ec0:

            add RSI,2
            mov RDI,RBP
            call .L_407ae0

            test EAX,EAX
            jne .L_407ea6
.L_407ed0:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407ee0:

            mov RAX,QWORD PTR [RBP]
            mov DWORD PTR [RAX+16],1
            jmp .L_407eab
.L_407eed:

            nop
            nop
            nop
.L_407ef0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_407f04:

            mov EAX,DWORD PTR [RSI+16]
            test EAX,EAX
            jne .L_407fc0

            mov EAX,DWORD PTR [R14+8]
            test EAX,EAX
            je .L_407fe8
.L_407f1b:

            sub EAX,1
            js .L_407fa9

            movsxd RDX,EAX
            mov EAX,EAX
            lea RBP,QWORD PTR [RIP+.L_4080f0]
            lea R13,QWORD PTR [RDX*8]
            sub RDX,RAX
            xor EAX,EAX
            lea R12,QWORD PTR [RDX*8-8]
.L_407f45:

            mov R15D,60
            jmp .L_407f5a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407f50:

            sub R15D,4
            cmp R15D,-4
            je .L_407fa0
.L_407f5a:

            mov RDX,QWORD PTR [R14]
            mov ECX,R15D
            mov RSI,QWORD PTR [RDX+R13*1]
            shr RSI,CL
            and ESI,15
            or EAX,ESI
            je .L_407f50

            movsxd RSI,ESI
            mov EDX,1
            mov RDI,RBX
            add RSI,RBP
            call .L_4125d0

            cmp EAX,1
            je .L_407f50
.L_407f86:

            add RSP,8
.L_407f8a:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_407fa0:

            sub R13,8
            cmp R12,R13
            jne .L_407f45
.L_407fa9:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_407fc0:

            lea RSI,QWORD PTR [RIP+.L_4080dd]
            mov EDX,1
            call .L_4125d0

            cmp EAX,1
            jne .L_407f86

            mov EAX,DWORD PTR [R14+8]
            test EAX,EAX
            jne .L_407f1b

            nop
            nop
            nop
            nop
            nop
            nop
.L_407fe8:

            lea RSI,QWORD PTR [RIP+.L_4080df]
            mov EDX,1
            mov RDI,RBX
            call .L_4125d0

            cmp EAX,1
            jne .L_407f86

            mov EAX,DWORD PTR [R14+8]
            jmp .L_407f1b
.L_40800a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_408010:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov R12,RSI
            xor EBP,EBP
            sub RSP,8
.L_408022:

            call .L_413560

            mov RDI,RAX
            call .L_412310

            test RAX,RAX
            je .L_40805e

            mov RBX,RAX
            mov RCX,R13
            xor EDX,EDX
            mov ESI,106
            mov RDI,RAX
            call .L_412910

            mov RDI,RBX
            mov RSI,R12
            call .L_407ef0

            mov RDI,RBX
            mov EBP,EAX
            call .L_412390
.L_40805e:

            add RSP,8
.L_408062:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_40806b:

            nop
            nop
            nop
            nop
            nop
.L_408070:

            mov EAX,DWORD PTR [RIP+.L_6397b0]
            test EAX,EAX
            je .L_408088

            lea RAX,QWORD PTR [RIP+.L_6397a0]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408088:

            lea RDX,QWORD PTR [RIP+.L_4080e1]
            lea RDI,QWORD PTR [RIP+.L_6397a0]
            sub RSP,8
            mov R8D,64
            mov ECX,64
            mov ESI,16
            xor EAX,EAX
            mov DWORD PTR [RIP+.L_6397b0],1
            call .L_414fa0

            lea RAX,QWORD PTR [RIP+.L_6397a0]
            add RSP,8
            ret 
.L_4080c7:
          .string "bn_print.c"
.L_4080d2:
          .string "%lu"
.L_4080d6:
          .string "%019lu"
.L_4080dd:
          .string "-"
.L_4080df:
          .string "0"
.L_4080e1:
          .string "bn(%d,%d)"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4080f0:
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x41
          .byte 0x42
          .byte 0x43
          .byte 0x44
          .byte 0x45
          .byte 0x46
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408110:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
.L_40811c:

            cmp RDI,RSI
            je .L_4081c0

            mov EAX,DWORD PTR [RSI+16]
            mov ESI,DWORD PTR [RSI+8]
            cmp ESI,DWORD PTR [RDI+12]
            mov DWORD PTR [RDI+16],EAX
            jge .L_4081a0
.L_408133:

            mov DWORD PTR [RBX+8],ESI
.L_408136:

            mov EAX,DWORD PTR [RBP+8]
            mov R9,QWORD PTR [RBP]
            mov RDI,QWORD PTR [RBX]
            test EAX,EAX
            jle .L_40818a

            sub EAX,1
            xor ESI,ESI
            lea R8,QWORD PTR [RAX*8+8]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
.L_408158:

            mov RCX,QWORD PTR [R9+RAX*1]
            lea RDX,QWORD PTR [RCX+RCX*1]
            shr RCX,63
            or RDX,RSI
            mov RSI,RCX
            mov QWORD PTR [RDI+RAX*1],RDX
            add RAX,8
            cmp R8,RAX
            jne .L_408158

            add RDI,R8
            test RCX,RCX
            je .L_40818a

            mov QWORD PTR [RDI],1
            add DWORD PTR [RBX+8],1
.L_40818a:

            add RSP,8
.L_40818e:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4081a0:

            add ESI,1
            call .L_404630

            test RAX,RAX
            jne .L_4081e8

            xor EAX,EAX
.L_4081af:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4081c0:

            mov ESI,DWORD PTR [RDI+8]
            cmp ESI,DWORD PTR [RDI+12]
            jl .L_408136

            add ESI,1
            call .L_404630

            test RAX,RAX
            jne .L_408136

            xor EAX,EAX
            jmp .L_4081af
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4081e8:

            mov ESI,DWORD PTR [RBP+8]
            jmp .L_408133
.L_4081f0:

            push R14
            push R13
            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_4081fb:

            mov EBP,DWORD PTR [RSI+8]
            test EBP,EBP
            je .L_4082b0

            mov RBX,QWORD PTR [RSI]
            movsxd RAX,EBP
            mov R14D,EBP
            mov R13,RSI
            cmp QWORD PTR [RBX+RAX*8-8],1
            sete AL
            movzx EAX,AL
            sub R14D,EAX
            cmp RSI,RDI
            je .L_408239

            cmp DWORD PTR [RDI+12],R14D
            jl .L_4082c8
.L_408230:

            mov EAX,DWORD PTR [R13+16]
            mov DWORD PTR [R12+16],EAX
.L_408239:

            lea EDX,DWORD PTR [RBP-1]
            mov R8,QWORD PTR [R12]
            movsxd RCX,EDX
            mov RAX,QWORD PTR [RBX+RCX*8]
            mov RDI,RAX
            shl RDI,63
            shr RAX,1
            je .L_408257

            mov QWORD PTR [R8+RCX*8],RAX
.L_408257:

            test EDX,EDX
            jle .L_408296

            lea RDX,QWORD PTR [RCX-1]
            lea EAX,DWORD PTR [RBP-2]
            mov R9,RDX
            sub R9,RAX
            jmp .L_408274
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408270:

            sub RDX,1
.L_408274:

            mov RSI,QWORD PTR [RBX+RCX*8-8]
            mov RAX,RSI
            shr RAX,1
            or RAX,RDI
            mov RDI,RSI
            shl RDI,63
            cmp R9,RDX
            mov QWORD PTR [R8+RCX*8-8],RAX
            mov RCX,RDX
            jne .L_408270
.L_408296:

            pop RBX
.L_408297:

            mov DWORD PTR [R12+8],R14D
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4082b0:

            xor ESI,ESI
            call .L_4048e0

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4082c8:

            mov ESI,R14D
            call .L_404630

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            jne .L_408230

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4082e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4082f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,24
.L_4082fe:

            test EDX,EDX
            js .L_408480

            mov EAX,DWORD PTR [RSI+16]
            mov EBX,EDX
            mov R12,RSI
            sar EBX,6
            mov RBP,RDI
            mov DWORD PTR [RDI+16],EAX
            mov EAX,DWORD PTR [RSI+8]
            lea ESI,DWORD PTR [RAX+RBX*1]
            cmp ESI,DWORD PTR [RDI+12]
            jge .L_408440
.L_408326:

            mov RDI,QWORD PTR [RBP]
            movsxd RSI,ESI
            and EDX,63
            mov R9,QWORD PTR [R12]
            mov QWORD PTR [RDI+RSI*8],0
            lea ESI,DWORD PTR [RAX-1]
            jne .L_4083e0

            test ESI,ESI
            js .L_408470

            movsxd RCX,ESI
            movsxd R10,EBX
            mov ESI,ESI
            lea RAX,QWORD PTR [RCX-1]
            mov R8,RAX
            sub R8,RSI
            lea RSI,QWORD PTR [RDI+R10*8]
            jmp .L_40836c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408368:

            sub RAX,1
.L_40836c:

            mov RDX,QWORD PTR [R9+RCX*8]
            cmp R8,RAX
            mov QWORD PTR [RSI+RCX*8],RDX
            mov RCX,RAX
            jne .L_408368
.L_40837c:

            lea RDX,QWORD PTR [R10*8]
            xor ESI,ESI
            call memset@PLT

            add EBX,DWORD PTR [R12+8]
            mov EAX,1
            mov EDX,EBX
            add EDX,1
            test EDX,EDX
            mov DWORD PTR [RBP+8],EDX
            jle .L_40845a

            mov RCX,QWORD PTR [RBP]
            movsxd RAX,EDX
            lea RAX,QWORD PTR [RCX+RAX*8-8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4083b8:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_4083c8

            sub EDX,1
            jne .L_4083b8
.L_4083c8:

            mov DWORD PTR [RBP+8],EDX
            add RSP,24
.L_4083cf:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_4083e0:

            test ESI,ESI
            js .L_408470

            movsxd RAX,ESI
            mov R11D,64
            mov ESI,ESI
            lea R8,QWORD PTR [RAX-1]
            movsxd R10,EBX
            sub R11D,EDX
            lea R13,QWORD PTR [RDI+R10*8]
            mov R14,R8
            sub R14,RSI
            jmp .L_408414
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408410:

            sub R8,1
.L_408414:

            mov RSI,QWORD PTR [R9+RAX*8]
            mov ECX,R11D
            mov R15,RSI
            shr R15,CL
            mov ECX,EDX
            or QWORD PTR [R13+RAX*8+8],R15
            shl RSI,CL
            cmp R14,R8
            mov QWORD PTR [R13+RAX*8],RSI
            mov RAX,R8
            jne .L_408410

            jmp .L_40837c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408440:

            add ESI,1
            mov DWORD PTR [RSP+12],EDX
            call .L_404630

            mov RCX,RAX
            xor EAX,EAX
            mov EDX,DWORD PTR [RSP+12]
            test RCX,RCX
            jne .L_4084b8
.L_40845a:

            add RSP,24
.L_40845e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408470:

            movsxd R10,EBX
            jmp .L_40837c

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408480:

            lea RCX,QWORD PTR [RIP+.L_40866e]
            mov R8D,141
            mov EDX,119
            mov ESI,145
            mov EDI,3
            call .L_416a00

            add RSP,24
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4084b8:

            mov EAX,DWORD PTR [R12+8]
            lea ESI,DWORD PTR [RBX+RAX*1]
            jmp .L_408326
.L_4084c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4084d0:

            test EDX,EDX
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_4084da:

            js .L_408610

            mov R14D,EDX
            mov R12,RDI
            mov RBP,RSI
            sar R14D,6
            cmp DWORD PTR [RSI+8],R14D
            mov EBX,EDX
            jle .L_408580

            mov RDI,RSI
            call .L_404490

            sub EAX,EBX
            lea R13D,DWORD PTR [RAX+126]
            add EAX,63
            cmovns R13D,EAX
            sar R13D,6
            cmp RBP,R12
            je .L_408640

            cmp DWORD PTR [R12+12],R13D
            mov EAX,DWORD PTR [RBP+16]
            mov DWORD PTR [R12+16],EAX
            jl .L_408650
.L_40852e:

            mov RAX,QWORD PTR [RBP]
            movsxd RDX,R14D
            mov RDI,QWORD PTR [R12]
            lea R8,QWORD PTR [RAX+RDX*8]
            mov EAX,DWORD PTR [RBP+8]
            mov DWORD PTR [R12+8],R13D
            sub EAX,R14D
            and EBX,63
            jne .L_408598

            test EAX,EAX
            je .L_408571

            sub EAX,1
            lea RCX,QWORD PTR [RAX*8+8]
            xor EAX,EAX
            nop
            nop
.L_408560:

            mov RDX,QWORD PTR [R8+RAX*1]
            mov QWORD PTR [RDI+RAX*1],RDX
            add RAX,8
            cmp RCX,RAX
            jne .L_408560
.L_408571:

            pop RBX
.L_408572:

            mov EAX,1
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x90
.L_408580:

            xor ESI,ESI
            call .L_4048e0

            mov EAX,1
.L_40858c:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408598:

            cmp EAX,1
            mov RSI,QWORD PTR [R8]
            je .L_4085f0

            sub EAX,2
            mov EDX,64
            mov R9,RAX
            lea R11,QWORD PTR [RAX*8+8]
            sub EDX,EBX
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4085c0:

            mov ECX,EBX
            shr RSI,CL
            mov ECX,EDX
            mov R10,RSI
            mov RSI,QWORD PTR [R8+RAX*1+8]
            mov R14,RSI
            shl R14,CL
            mov RCX,R14
            or RCX,R10
            mov QWORD PTR [RDI+RAX*1],RCX
            add RAX,8
            cmp RAX,R11
            jne .L_4085c0

            mov EAX,R9D
            lea RDI,QWORD PTR [RDI+RAX*8+8]
.L_4085f0:

            mov ECX,EBX
            shr RSI,CL
            test RSI,RSI
            je .L_408571

            mov QWORD PTR [RDI],RSI
            jmp .L_408571
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408610:

            lea RCX,QWORD PTR [RIP+.L_40866e]
            mov R8D,183
            mov EDX,119
            mov ESI,146
            mov EDI,3
            call .L_416a00

            pop RBX
.L_408632:

            xor EAX,EAX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408640:

            test EBX,EBX
            jne .L_40852e

            jmp .L_408571
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408650:

            mov ESI,R13D
            mov RDI,R12
            call .L_404630

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_40858c

            jmp .L_40852e
.L_40866e:
          .string "bn_shift.c"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408680:

            test RSI,RSI
            mov RDX,-1
            je .L_4086eb

            mov EAX,DWORD PTR [RDI+8]
            sub EAX,1
            js .L_4086f0

            mov RCX,QWORD PTR [RDI]
            movsxd RDX,EAX
            mov EAX,EAX
            shl RDX,3
            shl RAX,3
            lea R8,QWORD PTR [RCX+RDX*1-8]
            lea RDI,QWORD PTR [RCX+RDX*1]
            xor EDX,EDX
            sub R8,RAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_4086b8:

            mov RCX,QWORD PTR [RDI]
            mov RAX,RDX
            sub RDI,8
            shl RAX,32
            mov RDX,RCX
            shr RDX,32
            or RAX,RDX
            xor EDX,EDX
            div RSI
            mov RAX,RDX
            mov EDX,ECX
            shl RAX,32
            or RAX,RDX
            xor EDX,EDX
            div RSI
            cmp R8,RDI
            jne .L_4086b8
.L_4086eb:

            mov RAX,RDX
            ret 
          .byte 0x90
.L_4086f0:

            xor EDX,EDX
            mov RAX,RDX
            ret 
.L_4086f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408700:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
            test RSI,RSI
            je .L_408800

            mov EAX,DWORD PTR [RDI+8]
            xor EBX,EBX
            test EAX,EAX
            jne .L_408738
.L_408720:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408738:

            mov R12,RDI
            mov R13D,64
            mov RDI,RSI
            mov RBP,RSI
            call .L_404360

            sub R13D,EAX
            mov RSI,R12
            mov RDI,R12
            mov EDX,R13D
            call .L_4082f0

            test EAX,EAX
            je .L_408800

            mov EAX,DWORD PTR [R12+8]
            mov ESI,EAX
            sub ESI,1
            js .L_4087d3

            movsxd RAX,ESI
            mov ESI,ESI
            mov RDX,QWORD PTR [R12]
            lea RBX,QWORD PTR [RAX*8]
            sub RAX,RSI
            mov ECX,R13D
            lea R14,QWORD PTR [RAX*8-8]
            shl RBP,CL
            xor EDI,EDI
            nop
            nop
            nop
.L_408798:

            mov R15,QWORD PTR [RDX+RBX*1]
            mov RDX,RBP
            mov RSI,R15
            call .L_409220

            mov RDX,RBP
            mov RDI,R15
            imul RDX,RAX
            sub RDI,RDX
            mov RDX,QWORD PTR [R12]
            mov QWORD PTR [RDX+RBX*1],RAX
            sub RBX,8
            cmp RBX,R14
            jne .L_408798

            mov EAX,DWORD PTR [R12+8]
            mov RBX,RDI
            mov ECX,R13D
            shr RBX,CL
.L_4087d3:

            test EAX,EAX
            jle .L_408720

            mov RCX,QWORD PTR [R12]
            movsxd RDX,EAX
            cmp QWORD PTR [RCX+RDX*8-8],0
            jne .L_408720

            sub EAX,1
            mov DWORD PTR [R12+8],EAX
            jmp .L_408720
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408800:

            mov RBX,-1
            jmp .L_408720
.L_40880c:

            nop
            nop
            nop
            nop
.L_408810:

            test RSI,RSI
            push R12
            push RBP
            push RBX
.L_408817:

            je .L_408878

            mov R8D,DWORD PTR [RDI+8]
            test R8D,R8D
            je .L_408888

            mov EBX,DWORD PTR [RDI+16]
            mov RBP,RDI
            test EBX,EBX
            jne .L_408898

            test R8D,R8D
            jle .L_408878

            mov RCX,QWORD PTR [RDI]
            xor EAX,EAX
            add RSI,QWORD PTR [RCX]
            setb AL
            mov QWORD PTR [RCX],RSI
            test RAX,RAX
            je .L_408878

            lea ESI,DWORD PTR [R8-1]
            mov EAX,1
            add RSI,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408858:

            cmp RSI,RAX
            movsxd R12,EAX
            je .L_4088c0

            mov RDI,QWORD PTR [RCX+RAX*8]
            lea RDX,QWORD PTR [RDI+1]
            mov QWORD PTR [RCX+RAX*8],RDX
            add RAX,1
            test RDX,RDX
            je .L_408858

            nop
            nop
            nop
.L_408878:

            mov EBX,1
.L_40887d:

            mov EAX,EBX
            pop RBX
.L_408880:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408888:

            pop RBX
            pop RBP
            pop R12
            jmp .L_4048e0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408898:

            mov DWORD PTR [RDI+16],0
            call .L_408900

            mov ECX,DWORD PTR [RBP+8]
            mov EBX,EAX
            test ECX,ECX
            je .L_40887d

            mov EDX,DWORD PTR [RBP+16]
            xor EAX,EAX
            test EDX,EDX
            sete AL
            mov DWORD PTR [RBP+16],EAX
            jmp .L_40887d
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4088c0:

            cmp R8D,R12D
            jne .L_408878

            cmp DWORD PTR [RBP+12],R12D
            mov EAX,R12D
            jle .L_4088e0
.L_4088ce:

            add EAX,1
            mov DWORD PTR [RBP+8],EAX
            mov QWORD PTR [RCX+R12*8],1
            jmp .L_408878
          .byte 0x66
          .byte 0x90
.L_4088e0:

            lea ESI,DWORD PTR [R12+1]
            mov RDI,RBP
            call .L_404630

            test RAX,RAX
            je .L_40887d

            mov EAX,DWORD PTR [RBP+8]
            mov RCX,QWORD PTR [RBP]
            jmp .L_4088ce
.L_4088fb:

            nop
            nop
            nop
            nop
            nop
.L_408900:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_408908:

            mov EAX,DWORD PTR [RDI+8]
            test EAX,EAX
            je .L_408970

            mov EDI,DWORD PTR [RDI+16]
            test EDI,EDI
            jne .L_408998

            mov RCX,QWORD PTR [RBX]
            cmp EAX,1
            mov RDX,QWORD PTR [RCX]
            je .L_4089b8

            cmp RSI,RDX
            jbe .L_40894b

            nop
            nop
.L_408930:

            sub RDX,RSI
            add RCX,8
            add EDI,1
            mov QWORD PTR [RCX-8],RDX
            mov RDX,QWORD PTR [RCX]
            mov ESI,1
            test RDX,RDX
            je .L_408930
.L_40894b:

            sub RDX,RSI
            test RDX,RDX
            mov QWORD PTR [RCX],RDX
            jne .L_408965

            lea EDX,DWORD PTR [RAX-1]
            mov EAX,1
            cmp EDX,EDI
            jne .L_40896a
.L_408962:

            mov DWORD PTR [RBX+8],EDI
.L_408965:

            mov EAX,1
.L_40896a:

            add RSP,16
.L_40896e:

            pop RBX
            ret 
.L_408970:

            call .L_4048e0

            test EAX,EAX
            je .L_40896a

            mov RDI,RBX
            mov ESI,1
            mov DWORD PTR [RSP+12],EAX
            call .L_404e00

            mov EAX,DWORD PTR [RSP+12]
            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408998:

            mov DWORD PTR [RBX+16],0
            mov RDI,RBX
            call .L_408810

            mov DWORD PTR [RBX+16],1
            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4089b8:

            cmp RSI,RDX
            ja .L_4089d0

            sub RDX,RSI
            test RDX,RDX
            mov QWORD PTR [RCX],RDX
            je .L_408962

            jmp .L_40896a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4089d0:

            sub RSI,RDX
            mov QWORD PTR [RCX],RSI
            mov DWORD PTR [RBX+16],1
            jmp .L_40896a
.L_4089df:

            nop
.L_4089e0:

            test RSI,RSI
            je .L_4089f0

            jmp .L_408900
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4089f0:

            mov EAX,1
            ret 
.L_4089f6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408a00:

            mov EDX,DWORD PTR [RDI+8]
            test EDX,EDX
            je .L_408a68

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            test RSI,RSI
            je .L_408a50

            mov RDI,QWORD PTR [RDI]
            mov RCX,RSI
            mov RSI,RDI
            call .L_4090a0

            test RAX,RAX
            mov RBP,RAX
            je .L_408a41

            movsxd RAX,DWORD PTR [RBX+8]
            cmp EAX,DWORD PTR [RBX+12]
            lea ESI,DWORD PTR [RAX+1]
            jge .L_408a70
.L_408a37:

            mov RDX,QWORD PTR [RBX]
            mov DWORD PTR [RBX+8],ESI
            mov QWORD PTR [RDX+RAX*8],RBP
.L_408a41:

            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408a50:

            call .L_4048e0

            mov EAX,1
.L_408a5a:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408a68:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x90
.L_408a70:

            mov RDI,RBX
            call .L_404630

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_408a5a

            movsxd RAX,DWORD PTR [RBX+8]
            lea ESI,DWORD PTR [RAX+1]
            jmp .L_408a37
.L_408a8b:

            nop
            nop
            nop
            nop
            nop
.L_408a90:

            push R15
            push R14
            lea EAX,DWORD PTR [RDX+RDX*1]
            push R13
            push R12
            lea R15D,DWORD PTR [RDX-1]
            push RBP
            push RBX
            mov RBP,RDI
            mov R12D,EDX
            lea R13,QWORD PTR [RDI+8]
            mov R14,RSI
            sub RSP,40
.L_408ab2:

            test R15D,R15D
            mov DWORD PTR [RSP+12],EAX
            cdqe 
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RDI+RAX*8-8],0
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RDI],0
            jle .L_408afb

            movsxd RAX,R15D
            mov RCX,QWORD PTR [RSI]
            lea R14,QWORD PTR [RSI+8]
            lea RBX,QWORD PTR [R13+RAX*8]
            mov RDI,R13
            mov EDX,R15D
            mov RSI,R14
            lea R13,QWORD PTR [RBP+24]
            call .L_4090a0

            mov QWORD PTR [RBX],RAX
.L_408afb:

            lea EBX,DWORD PTR [R12-2]
            test EBX,EBX
            jle .L_408b36

            movsxd R10,R15D
            lea R15,QWORD PTR [R13+R10*8-8]
            nop
            nop
            nop
            nop
.L_408b10:

            add R14,8
            mov RCX,QWORD PTR [R14-8]
            mov EDX,EBX
            mov RDI,R13
            mov RSI,R14
            add R13,16
            add R15,8
            call .L_408f90

            mov QWORD PTR [R15-8],RAX
            sub EBX,1
            jne .L_408b10
.L_408b36:

            mov R15D,DWORD PTR [RSP+12]
            mov RDX,RBP
            mov RSI,RBP
            mov RDI,RBP
            mov ECX,R15D
            call .L_409230

            mov RBX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDX,R12D
            mov RDI,RBX
            call .L_409180

            add RSP,40
.L_408b65:

            mov ECX,R15D
            mov RDX,RBX
            mov RSI,RBP
            mov RDI,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_409230
.L_408b80:

            cmp EDX,4
            je .L_408cd8

            cmp EDX,8
            je .L_408ce0

            cmp EDX,15
            jg .L_408ba0

            jmp .L_408a90
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_408ba0:

            push R15
            push R14
            mov R14D,EDX
            sar R14D,1
            push R13
            push R12
            push RBP
            mov RBP,RDI
            push RBX
            movsxd RDI,R14D
            mov R12,RSI
            mov EBX,EDX
            lea RAX,QWORD PTR [RDI*8]
            sub RSP,40
.L_408bc7:

            mov EDX,R14D
            mov RDI,R12
            mov R13,RCX
            mov QWORD PTR [RSP+24],RAX
            add RAX,RSI
            mov RSI,RAX
            mov QWORD PTR [RSP+16],RAX
            call .L_404e20

            lea EDX,DWORD PTR [RBX+RBX*1]
            cmp EAX,0
            movsxd RDX,EDX
            lea RSI,QWORD PTR [R13+RDX*8]
            movsxd RDX,EBX
            lea RCX,QWORD PTR [RDX*8]
            mov QWORD PTR [RSP],RSI
            mov QWORD PTR [RSP+8],RCX
            lea R15,QWORD PTR [R13+RCX*1]
            jg .L_408ce8

            jne .L_408d18

            mov RDX,QWORD PTR [RSP+8]
            xor ESI,ESI
            mov RDI,R15
            call memset@PLT
.L_408c27:

            mov RCX,QWORD PTR [RSP]
            mov RSI,R12
            mov EDX,R14D
            mov RDI,RBP
            call .L_408b80

            mov R12,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP]
            mov EDX,R14D
            mov RSI,QWORD PTR [RSP+16]
            add R12,RBP
            mov RDI,R12
            call .L_408b80

            mov RDX,R12
            mov ECX,EBX
            mov RSI,RBP
            mov RDI,R13
            call .L_409230

            mov ECX,EBX
            mov RDX,R15
            mov RSI,R13
            mov RDI,R15
            mov R12,RAX
            call .L_409260

            mov RDI,QWORD PTR [RSP+24]
            sub R12D,EAX
            mov ECX,EBX
            mov RDX,R15
            add RDI,RBP
            mov RSI,RDI
            call .L_409230

            add R12D,EAX
            je .L_408cc2

            add EBX,R14D
            xor EAX,EAX
            movsxd R12,R12D
            movsxd RBX,EBX
            lea RDX,QWORD PTR [RBP+RBX*8]
            add R12,QWORD PTR [RDX]
            setb AL
            mov QWORD PTR [RDX],R12
            test RAX,RAX
            je .L_408cc2

            nop
            nop
            nop
            nop
            nop
.L_408cb8:

            add RDX,8
            add QWORD PTR [RDX],1
            je .L_408cb8
.L_408cc2:

            add RSP,40
.L_408cc6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408cd8:

            jmp .L_409d20
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408ce0:

            jmp .L_409900
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408ce8:

            mov RDX,QWORD PTR [RSP+16]
            mov ECX,R14D
            mov RSI,R12
            mov RDI,R13
            call .L_409260
.L_408cfb:

            mov RCX,QWORD PTR [RSP]
            mov EDX,R14D
            mov RSI,R13
            mov RDI,R15
            call .L_408b80

            jmp .L_408c27
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_408d18:

            mov RSI,QWORD PTR [RSP+16]
            mov ECX,R14D
            mov RDX,R12
            mov RDI,R13
            call .L_409260

            jmp .L_408cfb
.L_408d2d:

            nop
            nop
            nop
.L_408d30:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,296
.L_408d44:

            mov EBP,DWORD PTR [RSI+8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+280],RAX
            xor EAX,EAX
            test EBP,EBP
            jle .L_408ea8

            mov R12,RSI
            mov RDI,RDX
            mov R13,RDX
            call .L_405420

            cmp R12,RBX
            mov R14,RBX
            je .L_408ec0
.L_408d7c:

            mov RDI,R13
            call .L_4055b0

            test R14,R14
            mov RDX,RAX
            je .L_408e6c

            test RAX,RAX
            je .L_408e6c

            lea R15D,DWORD PTR [RBP+RBP*1]
            cmp DWORD PTR [R14+12],R15D
            jl .L_408e50
.L_408da8:

            movsxd RAX,EBP
            cmp EBP,4
            mov QWORD PTR [RSP],RAX
            je .L_408ef0

            cmp EBP,8
            je .L_408f08

            cmp EBP,15
            jle .L_408ed0

            movsxd RDI,EBP
            mov QWORD PTR [RSP+8],RDX
            call .L_404360

            lea ECX,DWORD PTR [RAX-1]
            mov EAX,1
            mov RDX,QWORD PTR [RSP+8]
            shl EAX,CL
            cmp EBP,EAX
            je .L_408f20

            cmp DWORD PTR [RDX+12],R15D
            jl .L_408f42
.L_408df8:

            mov RCX,QWORD PTR [RDX]
            mov RSI,QWORD PTR [R12]
            mov EDX,EBP
            mov RDI,QWORD PTR [R14]
            call .L_408a90

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_408e10:

            mov RAX,QWORD PTR [R12]
            mov RSI,QWORD PTR [RSP]
            mov R8D,R15D
            mov DWORD PTR [R14+16],0
            mov EBP,1
            mov RDX,QWORD PTR [RAX+RSI*8-8]
            lea EAX,DWORD PTR [R15-1]
            mov ECX,EDX
            cmp RDX,RCX
            cmove R8D,EAX
            cmp R14,RBX
            mov DWORD PTR [R14+8],R8D
            je .L_408e6e

            mov RSI,R14
            mov RDI,RBX
            call .L_404650

            jmp .L_408e6e
.L_408e50:

            mov ESI,R15D
            mov RDI,R14
            mov QWORD PTR [RSP],RAX
            call .L_404630

            test RAX,RAX
            mov RDX,QWORD PTR [RSP]
            jne .L_408da8
.L_408e6c:

            xor EBP,EBP
.L_408e6e:

            mov RDI,R13
            call .L_405530
.L_408e76:

            mov RCX,QWORD PTR [RSP+280]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_408f85

            add RSP,296
.L_408e96:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408ea8:

            mov DWORD PTR [RDI+8],0
            mov DWORD PTR [RDI+16],0
            mov EBP,1
            jmp .L_408e76
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408ec0:

            mov RDI,R13
            call .L_4055b0

            mov R14,RAX
            jmp .L_408d7c
.L_408ed0:

            mov RSI,QWORD PTR [R12]
            mov RDI,QWORD PTR [R14]
            lea RCX,QWORD PTR [RSP+16]
            mov EDX,EBP
            call .L_408a90

            jmp .L_408e10
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408ef0:

            mov RSI,QWORD PTR [R12]
            mov RDI,QWORD PTR [R14]
            call .L_409d20

            jmp .L_408e10
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408f08:

            mov RSI,QWORD PTR [R12]
            mov RDI,QWORD PTR [R14]
            call .L_409900

            jmp .L_408e10
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_408f20:

            mov ESI,4
            shl ESI,CL
            cmp ESI,DWORD PTR [RDX+12]
            jg .L_408f68
.L_408f2c:

            mov RCX,QWORD PTR [RDX]
            mov RSI,QWORD PTR [R12]
            mov EDX,EBP
            mov RDI,QWORD PTR [R14]
            call .L_408b80

            jmp .L_408e10
.L_408f42:

            mov RDI,RDX
            mov ESI,R15D
            mov QWORD PTR [RSP+8],RDX
            call .L_404630

            test RAX,RAX
            mov RDX,QWORD PTR [RSP+8]
            je .L_408e6c

            jmp .L_408df8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_408f68:

            mov RDI,RDX
            mov QWORD PTR [RSP+8],RDX
            call .L_404630

            test RAX,RAX
            mov RDX,QWORD PTR [RSP+8]
            je .L_408e6c

            jmp .L_408f2c
.L_408f85:

            call __stack_chk_fail@PLT
.L_408f8a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_408f90:

            xor R8D,R8D
            test EDX,EDX
            mov R9D,EDX
            jle .L_409030

            test EDX,4294967292
            je .L_409038

            nop
            nop
            nop
            nop
            nop
            nop
.L_408fb0:

            mov RAX,RCX
            sub R9D,4
            add RSI,32
            mul QWORD PTR [RSI-32]
            add R8,RAX
            adc RDX,0
            add QWORD PTR [RDI],R8
            adc RDX,0
            mov R10,RDX
            mov RAX,RCX
            mov R8,R10
            mul QWORD PTR [RSI-24]
            add R8,RAX
            adc RDX,0
            mov RAX,RCX
            add QWORD PTR [RDI+8],R8
            adc RDX,0
            mov R10,RDX
            mul QWORD PTR [RSI-16]
            add R10,RAX
            adc RDX,0
            mov RAX,RCX
            add QWORD PTR [RDI+16],R10
            adc RDX,0
            mov R8,RDX
            mul QWORD PTR [RSI-8]
            add R8,RAX
            adc RDX,0
            add QWORD PTR [RDI+24],R8
            adc RDX,0
            add RDI,32
            test R9D,4294967292
            mov R8,RDX
            jne .L_408fb0

            test R9D,R9D
            jne .L_409038
.L_409030:

            mov RAX,R8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_409038:

            mov RAX,RCX
            mul QWORD PTR [RSI]
            add R8,RAX
            adc RDX,0
            add QWORD PTR [RDI],R8
            adc RDX,0
            cmp R9D,1
            mov R8,RDX
            je .L_409030

            mov RAX,RCX
            mul QWORD PTR [RSI+8]
            add R8,RAX
            adc RDX,0
            add QWORD PTR [RDI+8],R8
            adc RDX,0
            cmp R9D,2
            mov R8,RDX
            je .L_409030

            mov RAX,RCX
            mul QWORD PTR [RSI+16]
            add R8,RAX
            adc RDX,0
            add QWORD PTR [RDI+16],R8
            adc RDX,0
            mov R8,RDX
            mov RAX,R8
            ret 
.L_409091:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4090a0:

            xor R9D,R9D
            test EDX,EDX
            mov R10D,EDX
            jle .L_409126

            test EDX,4294967292
            je .L_409130

            nop
            nop
            nop
            nop
            nop
            nop
.L_4090b8:

            sub R10D,4
            mov RAX,RCX
            add RSI,32
            mul QWORD PTR [RSI-32]
            add RDI,32
            add R9,RAX
            adc RDX,0
            mov RAX,RCX
            mov QWORD PTR [RDI-32],R9
            mov R8,RDX
            mul QWORD PTR [RSI-24]
            add R8,RAX
            adc RDX,0
            mov RAX,RCX
            mov QWORD PTR [RDI-24],R8
            mov R9,RDX
            mul QWORD PTR [RSI-16]
            add R9,RAX
            adc RDX,0
            mov RAX,RCX
            mov QWORD PTR [RDI-16],R9
            mov R8,RDX
            mul QWORD PTR [RSI-8]
            add R8,RAX
            adc RDX,0
            mov QWORD PTR [RDI-8],R8
            test R10D,4294967292
            mov R9,RDX
            jne .L_4090b8

            test R10D,R10D
            jne .L_409130
.L_409126:

            mov RAX,R9
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409130:

            mov RAX,RCX
            mul QWORD PTR [RSI]
            add R9,RAX
            adc RDX,0
            cmp R10D,1
            mov QWORD PTR [RDI],R9
            mov R9,RDX
            je .L_409126

            mov RAX,RCX
            mul QWORD PTR [RSI+8]
            add R9,RAX
            adc RDX,0
            cmp R10D,2
            mov QWORD PTR [RDI+8],R9
            mov R9,RDX
            je .L_409126

            mov RAX,RCX
            mov RCX,R9
            mul QWORD PTR [RSI+16]
            add RCX,RAX
            adc RDX,0
            mov R9,RDX
            mov QWORD PTR [RDI+16],RCX
            mov RAX,R9
            ret 
.L_409180:

            test EDX,EDX
            mov ECX,EDX
            jle .L_4091e2

            test EDX,4294967292
            je .L_4091e8

            nop
            nop
.L_409190:

            sub ECX,4
            mov RAX,QWORD PTR [RSI]
            add RDI,64
            mul RAX
            add RSI,32
            mov QWORD PTR [RDI-56],RDX
            mov QWORD PTR [RDI-64],RAX
            mov RAX,QWORD PTR [RSI-24]
            mul RAX
            mov QWORD PTR [RDI-40],RDX
            mov QWORD PTR [RDI-48],RAX
            mov RAX,QWORD PTR [RSI-16]
            mul RAX
            mov QWORD PTR [RDI-24],RDX
            mov QWORD PTR [RDI-32],RAX
            mov RAX,QWORD PTR [RSI-8]
            mul RAX
            mov QWORD PTR [RDI-16],RAX
            mov QWORD PTR [RDI-8],RDX
            test ECX,4294967292
            jne .L_409190

            test ECX,ECX
            jne .L_4091e8
.L_4091e2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4091e8:

            mov RAX,QWORD PTR [RSI]
            mul RAX
            cmp ECX,1
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RDI+8],RDX
            je .L_4091e2

            mov RAX,QWORD PTR [RSI+8]
            mul RAX
            cmp ECX,2
            mov QWORD PTR [RDI+16],RAX
            mov QWORD PTR [RDI+24],RDX
            je .L_4091e2

            mov RAX,QWORD PTR [RSI+16]
            mul RAX
            mov QWORD PTR [RDI+32],RAX
            mov QWORD PTR [RDI+40],RDX
            ret 
.L_40921e:

            nop
            nop
.L_409220:

            mov RCX,RDX
            mov RAX,RSI
            mov RDX,RDI
            div RCX
            ret 
.L_40922d:

            nop
            nop
            nop
.L_409230:

            xor EAX,EAX
            test ECX,ECX
            jle .L_40925b

            sub R8,R8
            jmp .L_409240
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409240:

            mov R8,QWORD PTR [RSI+RAX*8]
            adc R8,QWORD PTR [RDX+RAX*8]
            mov QWORD PTR [RDI+RAX*8],R8
            lea RAX,QWORD PTR [RAX+1]
            loop .L_409240
            sbb R8,R8
            mov RAX,R8
            and EAX,1
.L_40925b:

            ret 
.L_40925d:

            nop
            nop
            nop
.L_409260:

            xor EAX,EAX
            test ECX,ECX
            jle .L_40928b

            sub R8,R8
            jmp .L_409270
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_409270:

            mov R8,QWORD PTR [RSI+RAX*8]
            sbb R8,QWORD PTR [RDX+RAX*8]
            mov QWORD PTR [RDI+RAX*8],R8
            lea RAX,QWORD PTR [RAX+1]
            loop .L_409270
            sbb R8,R8
            mov RAX,R8
            and EAX,1
.L_40928b:

            ret 
.L_40928d:

            nop
            nop
            nop
.L_409290:

            xor R9D,R9D
            mov R8,RDX
            mov RAX,QWORD PTR [RSI]
            mov R10,R9
            mov R11,R9
            mov RCX,R9
            mul QWORD PTR [RDX]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov QWORD PTR [RDI],R10
            mov R10,R9
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+8]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov QWORD PTR [RDI+8],R11
            mov R11,R9
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+8]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+16]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+16],RCX
            mov RCX,R9
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+24]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+16]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8+8]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov QWORD PTR [RDI+24],R10
            mov R10,R9
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [R8]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+8]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8+16]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+24]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+32]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov QWORD PTR [RDI+32],R11
            mov R11,R9
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+40]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+32]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8+24]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+16]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [R8+8]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [R8]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+40],RCX
            mov RCX,R9
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [R8]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [R8+8]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [R8+16]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+24]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8+32]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+40]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+48]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov QWORD PTR [RDI+48],R10
            mov R10,R9
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+56]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+48]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8+40]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+32]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [R8+24]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [R8+16]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [R8+8]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [R8]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov QWORD PTR [RDI+56],R11
            mov R11,R9
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [R8+8]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [R8+16]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [R8+24]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [R8+32]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+40]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8+48]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+56]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+64],RCX
            mov RCX,R10
            mov RAX,QWORD PTR [RSI+16]
            mov R10,R11
            mov R11,R9
            mul QWORD PTR [R8+56]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+48]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [R8+40]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [R8+32]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [R8+24]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [R8+16]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+72],RCX
            mov RCX,R10
            mov RAX,QWORD PTR [RSI+56]
            mov R10,R11
            mov R11,R9
            mul QWORD PTR [R8+24]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [R8+32]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [R8+40]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [R8+48]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+56]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+80],RCX
            mov RCX,R10
            mov RAX,QWORD PTR [RSI+32]
            mov R10,R11
            mov R11,R9
            mul QWORD PTR [R8+56]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [R8+48]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [R8+40]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [R8+32]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+88],RCX
            mov RCX,R10
            mov RAX,QWORD PTR [RSI+56]
            mov R10,R11
            mov R11,R9
            mul QWORD PTR [R8+40]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [R8+48]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [R8+56]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+96],RCX
            mov RCX,R10
            mov RAX,QWORD PTR [RSI+48]
            mov R10,R11
            mov R11,R9
            mul QWORD PTR [R8+56]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [R8+48]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+104],RCX
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [R8+56]
            add R10,RAX
            adc R11,RDX
            adc R9,0
            mov QWORD PTR [RDI+112],R10
            mov QWORD PTR [RDI+120],R11
            ret 
.L_409794:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4097a0:

            xor R9D,R9D
            mov R8,RDX
            mov RAX,QWORD PTR [RSI]
            mov R11,R9
            mov RCX,R9
            mov R10,R9
            mul QWORD PTR [RDX]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov QWORD PTR [RDI],R11
            mov R11,R9
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+8]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+8],RCX
            mov RCX,R9
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+8]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+16]
            add R10,RAX
            adc R11,RDX
            adc RCX,0
            mov QWORD PTR [RDI+16],R10
            mov R10,R9
            mov RAX,QWORD PTR [RSI]
            mul QWORD PTR [R8+24]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+16]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8+8]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8]
            add R11,RAX
            adc RCX,RDX
            adc R10,0
            mov QWORD PTR [RDI+24],R11
            mov R11,R9
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+8]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [R8+16]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [R8+24]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+32],RCX
            mov RCX,R10
            mov RAX,QWORD PTR [RSI+16]
            mov R10,R11
            mov R11,R9
            mul QWORD PTR [R8+24]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+16]
            add RCX,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RDI+40],RCX
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [R8+24]
            add R10,RAX
            adc R11,RDX
            adc R9,0
            mov QWORD PTR [RDI+48],R10
            mov QWORD PTR [RDI+56],R11
            ret 
.L_4098fc:

            nop
            nop
            nop
            nop
.L_409900:

            xor R8D,R8D
            mov RAX,QWORD PTR [RSI]
            mov R9,R8
            mov R10,R8
            mov RCX,R8
            mul RAX
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            mov QWORD PTR [RDI],R9
            mov R9,R8
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [RSI]
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov QWORD PTR [RDI+8],R10
            mov R10,R8
            mov RAX,QWORD PTR [RSI+8]
            mul RAX
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [RSI]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov QWORD PTR [RDI+16],RCX
            mov RCX,R8
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [RSI]
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [RSI+8]
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            mov QWORD PTR [RDI+24],R9
            mov R9,R8
            mov RAX,QWORD PTR [RSI+16]
            mul RAX
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [RSI+8]
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [RSI]
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov QWORD PTR [RDI+32],R10
            mov R10,R8
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [RSI]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [RSI+8]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [RSI+16]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov QWORD PTR [RDI+40],RCX
            mov RCX,R8
            mov RAX,QWORD PTR [RSI+24]
            mul RAX
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [RSI+16]
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [RSI+8]
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [RSI]
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            mov QWORD PTR [RDI+48],R9
            mov R9,R8
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [RSI]
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [RSI+8]
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [RSI+16]
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov RAX,QWORD PTR [RSI+32]
            mul QWORD PTR [RSI+24]
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov QWORD PTR [RDI+56],R10
            mov R10,R8
            mov RAX,QWORD PTR [RSI+32]
            mul RAX
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [RSI+24]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [RSI+16]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [RSI+8]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov QWORD PTR [RDI+64],RCX
            mov RCX,R9
            mov RAX,QWORD PTR [RSI+56]
            mov R9,R10
            mov R10,R8
            mul QWORD PTR [RSI+16]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [RSI+24]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+40]
            mul QWORD PTR [RSI+32]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov QWORD PTR [RDI+72],RCX
            mov RCX,R9
            mov RAX,QWORD PTR [RSI+40]
            mov R9,R10
            mov R10,R8
            mul RAX
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [RSI+32]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [RSI+24]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov QWORD PTR [RDI+80],RCX
            mov RCX,R9
            mov RAX,QWORD PTR [RSI+56]
            mov R9,R10
            mov R10,R8
            mul QWORD PTR [RSI+32]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+48]
            mul QWORD PTR [RSI+40]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov QWORD PTR [RDI+88],RCX
            mov RCX,R9
            mov RAX,QWORD PTR [RSI+48]
            mov R9,R10
            mov R10,R8
            mul RAX
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+56]
            mul QWORD PTR [RSI+40]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov QWORD PTR [RDI+96],RCX
            mov RCX,R10
            mov RAX,QWORD PTR [RSI+56]
            mov R10,R8
            mul QWORD PTR [RSI+48]
            add R9,RAX
            adc RCX,RDX
            adc R10,0
            add R9,RAX
            adc RCX,RDX
            adc R10,0
            mov QWORD PTR [RDI+104],R9
            mov RAX,QWORD PTR [RSI+56]
            mul RAX
            add RCX,RAX
            adc R10,RDX
            adc R8,0
            mov QWORD PTR [RDI+112],RCX
            mov QWORD PTR [RDI+120],R10
            ret 
.L_409d1e:

            nop
            nop
.L_409d20:

            xor R8D,R8D
            mov RAX,QWORD PTR [RSI]
            mov R10,R8
            mov RCX,R8
            mov R9,R8
            mul RAX
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov QWORD PTR [RDI],R10
            mov R10,R8
            mov RAX,QWORD PTR [RSI+8]
            mul QWORD PTR [RSI]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov QWORD PTR [RDI+8],RCX
            mov RCX,R8
            mov RAX,QWORD PTR [RSI+8]
            mul RAX
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [RSI]
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            add R9,RAX
            adc R10,RDX
            adc RCX,0
            mov QWORD PTR [RDI+16],R9
            mov R9,R8
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [RSI]
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov RAX,QWORD PTR [RSI+16]
            mul QWORD PTR [RSI+8]
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            add R10,RAX
            adc RCX,RDX
            adc R9,0
            mov QWORD PTR [RDI+24],R10
            mov R10,R8
            mov RAX,QWORD PTR [RSI+16]
            mul RAX
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov RAX,QWORD PTR [RSI+24]
            mul QWORD PTR [RSI+8]
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            add RCX,RAX
            adc R9,RDX
            adc R10,0
            mov QWORD PTR [RDI+32],RCX
            mov RCX,R10
            mov RAX,QWORD PTR [RSI+24]
            mov R10,R8
            mul QWORD PTR [RSI+16]
            add R9,RAX
            adc RCX,RDX
            adc R10,0
            add R9,RAX
            adc RCX,RDX
            adc R10,0
            mov QWORD PTR [RDI+40],R9
            mov RAX,QWORD PTR [RSI+24]
            mul RAX
            add RCX,RAX
            adc R10,RDX
            adc R8,0
            mov QWORD PTR [RDI+48],RCX
            mov QWORD PTR [RDI+56],R10
            ret 
.L_409e46:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409e60:

            test R9D,3
            jne .L_409ea0

            cmp R9D,8
            jb .L_409ea0

            mov R11D,DWORD PTR [RIP+.L_63b410]
            cmp RDX,RSI
            jne .L_40a0d0

            test R9D,7
            je .L_40a600

            jmp .L_40a0d0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_409ea0:

            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R9D,R9D
            lea R10,QWORD PTR [R9+2]
            mov R11,RSP
            neg R10
            lea RSP,QWORD PTR [RSP+R10*8]
            and RSP,-1024
            mov QWORD PTR [RSP+R9*8+8],R11
            mov R12,RDX
            mov R8,QWORD PTR [R8]
            mov RBX,QWORD PTR [R12]
            mov RAX,QWORD PTR [RSI]
            xor R14,R14
            xor R15,R15
            mov RBP,R8
            mul RBX
            mov R10,RAX
            mov RAX,QWORD PTR [RCX]
            imul RBP,R10
            mov R11,RDX
            mul RBP
            add R10,RAX
            mov RAX,QWORD PTR [RSI+8]
            adc RDX,0
            mov R13,RDX
            lea R15,QWORD PTR [R15+1]
            jmp .L_409f2d
          .byte 0x66
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_409f10:

            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8]
            adc RDX,0
            add R13,R11
            mov R11,R10
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],R13
            mov R13,RDX
.L_409f2d:

            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8]
            adc RDX,0
            lea R15,QWORD PTR [R15+1]
            mov R10,RDX
            mul RBP
            cmp R15,R9
            jne .L_409f10

            add R13,RAX
            mov RAX,QWORD PTR [RSI]
            adc RDX,0
            add R13,R11
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],R13
            mov R13,RDX
            mov R11,R10
            xor RDX,RDX
            add R13,R11
            adc RDX,0
            mov QWORD PTR [RSP+R9*8-8],R13
            mov QWORD PTR [RSP+R9*8],RDX
            lea R14,QWORD PTR [R14+1]
            jmp .L_409f80
          .byte 0x90
.L_409f80:

            mov RBX,QWORD PTR [R12+R14*8]
            xor R15,R15
            mov RBP,R8
            mov R10,QWORD PTR [RSP]
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX]
            adc RDX,0
            imul RBP,R10
            mov R11,RDX
            mul RBP
            add R10,RAX
            mov RAX,QWORD PTR [RSI+8]
            adc RDX,0
            mov R10,QWORD PTR [RSP+8]
            mov R13,RDX
            lea R15,QWORD PTR [R15+1]
            jmp .L_409fde
          .byte 0x66
          .byte 0x90
.L_409fc0:

            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8]
            adc RDX,0
            add R13,R10
            mov R10,QWORD PTR [RSP+R15*8]
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],R13
            mov R13,RDX
.L_409fde:

            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8]
            adc RDX,0
            add R10,R11
            mov R11,RDX
            adc R11,0
            lea R15,QWORD PTR [R15+1]
            mul RBP
            cmp R15,R9
            jne .L_409fc0

            add R13,RAX
            mov RAX,QWORD PTR [RSI]
            adc RDX,0
            add R13,R10
            mov R10,QWORD PTR [RSP+R15*8]
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],R13
            mov R13,RDX
            xor RDX,RDX
            add R13,R11
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [RSP+R9*8-8],R13
            mov QWORD PTR [RSP+R9*8],RDX
            lea R14,QWORD PTR [R14+1]
            cmp R14,R9
            jb .L_409f80

            xor R14,R14
            mov RAX,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RSP]
            mov R15,R9
            jmp .L_40a060
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a060:

            sbb RAX,QWORD PTR [RCX+R14*8]
            mov QWORD PTR [RDI+R14*8],RAX
            mov RAX,QWORD PTR [RSI+R14*8+8]
            lea R14,QWORD PTR [R14+1]
            dec R15
            jne .L_40a060

            sbb RAX,0
            xor R14,R14
            and RSI,RAX
            not RAX
            mov RCX,RDI
            and RCX,RAX
            mov R15,R9
            or RSI,RCX
            nop
.L_40a090:

            mov RAX,QWORD PTR [RSI+R14*8]
            mov QWORD PTR [RSP+R14*8],R14
            mov QWORD PTR [RDI+R14*8],RAX
            lea R14,QWORD PTR [R14+1]
            sub R15,1
            jne .L_40a090

            mov RSI,QWORD PTR [RSP+R9*8+8]
            mov RAX,1
            mov R15,QWORD PTR [RSI]
            mov R14,QWORD PTR [RSI+8]
            mov R13,QWORD PTR [RSI+16]
            mov R12,QWORD PTR [RSI+24]
            mov RBP,QWORD PTR [RSI+32]
            mov RBX,QWORD PTR [RSI+40]
            lea RSP,QWORD PTR [RSI+48]
            ret 
          .byte 0x90
.L_40a0d0:

            and R11D,524544
            cmp R11D,524544
            je .L_40a7a0

            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R9D,R9D
            lea R10,QWORD PTR [R9+4]
            mov R11,RSP
            neg R10
            lea RSP,QWORD PTR [RSP+R10*8]
            and RSP,-1024
            mov QWORD PTR [RSP+R9*8+8],R11
            mov QWORD PTR [RSP+R9*8+16],RDI
            mov R12,RDX
            mov R8,QWORD PTR [R8]
            mov RBX,QWORD PTR [R12]
            mov RAX,QWORD PTR [RSI]
            xor R14,R14
            xor R15,R15
            mov RBP,R8
            mul RBX
            mov R10,RAX
            mov RAX,QWORD PTR [RCX]
            imul RBP,R10
            mov R11,RDX
            mul RBP
            add R10,RAX
            mov RAX,QWORD PTR [RSI+8]
            adc RDX,0
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+8]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+16]
            adc RDX,0
            add RDI,R11
            lea R15,QWORD PTR [R15+4]
            adc RDX,0
            mov QWORD PTR [RSP],RDI
            mov R13,RDX
            jmp .L_40a180
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40a180:

            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX+R15*8-16]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8-8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-24],R13
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8-8]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R15*8]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],RDI
            mov R13,RDX
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX+R15*8]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8+8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-8],R13
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8+8]
            adc RDX,0
            lea R15,QWORD PTR [R15+4]
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R15*8-16]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-32],RDI
            mov R13,RDX
            cmp R15,R9
            jb .L_40a180

            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX+R15*8-16]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8-8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-24],R13
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8-8]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],RDI
            mov R13,RDX
            xor RDI,RDI
            add R13,R10
            adc RDI,0
            mov QWORD PTR [RSP+R15*8-8],R13
            mov QWORD PTR [RSP+R15*8],RDI
            lea R14,QWORD PTR [R14+1]
.L_40a2c0:

            mov RBX,QWORD PTR [R12+R14*8]
            xor R15,R15
            mov R10,QWORD PTR [RSP]
            mov RBP,R8
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX]
            adc RDX,0
            imul RBP,R10
            mov R11,RDX
            mul RBP
            add R10,RAX
            mov RAX,QWORD PTR [RSI+8]
            adc RDX,0
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+8]
            adc RDX,0
            add R11,QWORD PTR [RSP+8]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+16]
            adc RDX,0
            add RDI,R11
            lea R15,QWORD PTR [R15+4]
            adc RDX,0
            mov QWORD PTR [RSP],RDI
            mov R13,RDX
            jmp .L_40a330
          .byte 0x90
.L_40a330:

            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX+R15*8-16]
            adc RDX,0
            add R10,QWORD PTR [RSP+R15*8-16]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8-8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-24],R13
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8-8]
            adc RDX,0
            add R11,QWORD PTR [RSP+R15*8-8]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R15*8]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],RDI
            mov R13,RDX
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX+R15*8]
            adc RDX,0
            add R10,QWORD PTR [RSP+R15*8]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8+8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-8],R13
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8+8]
            adc RDX,0
            add R11,QWORD PTR [RSP+R15*8+8]
            adc RDX,0
            lea R15,QWORD PTR [R15+4]
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R15*8-16]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-32],RDI
            mov R13,RDX
            cmp R15,R9
            jb .L_40a330

            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX+R15*8-16]
            adc RDX,0
            add R10,QWORD PTR [RSP+R15*8-16]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8-8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-24],R13
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8-8]
            adc RDX,0
            add R11,QWORD PTR [RSP+R15*8-8]
            adc RDX,0
            lea R14,QWORD PTR [R14+1]
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],RDI
            mov R13,RDX
            xor RDI,RDI
            add R13,R10
            adc RDI,0
            add R13,QWORD PTR [RSP+R9*8]
            adc RDI,0
            mov QWORD PTR [RSP+R15*8-8],R13
            mov QWORD PTR [RSP+R15*8],RDI
            cmp R14,R9
            jb .L_40a2c0

            mov RDI,QWORD PTR [RSP+R9*8+16]
            mov RAX,QWORD PTR [RSP]
            pxor XMM0,XMM0
            mov RDX,QWORD PTR [RSP+8]
            shr R9,2
            lea RSI,QWORD PTR [RSP]
            xor R14,R14
            sub RAX,QWORD PTR [RCX]
            mov RBX,QWORD PTR [RSI+16]
            mov RBP,QWORD PTR [RSI+24]
            sbb RDX,QWORD PTR [RCX+8]
            lea R15,QWORD PTR [R9-1]
            jmp .L_40a4f0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a4f0:

            mov QWORD PTR [RDI+R14*8],RAX
            mov QWORD PTR [RDI+R14*8+8],RDX
            sbb RBX,QWORD PTR [RCX+R14*8+16]
            mov RAX,QWORD PTR [RSI+R14*8+32]
            mov RDX,QWORD PTR [RSI+R14*8+40]
            sbb RBP,QWORD PTR [RCX+R14*8+24]
            mov QWORD PTR [RDI+R14*8+16],RBX
            mov QWORD PTR [RDI+R14*8+24],RBP
            sbb RAX,QWORD PTR [RCX+R14*8+32]
            mov RBX,QWORD PTR [RSI+R14*8+48]
            mov RBP,QWORD PTR [RSI+R14*8+56]
            sbb RDX,QWORD PTR [RCX+R14*8+40]
            lea R14,QWORD PTR [R14+4]
            dec R15
            jne .L_40a4f0

            mov QWORD PTR [RDI+R14*8],RAX
            mov RAX,QWORD PTR [RSI+R14*8+32]
            sbb RBX,QWORD PTR [RCX+R14*8+16]
            mov QWORD PTR [RDI+R14*8+8],RDX
            sbb RBP,QWORD PTR [RCX+R14*8+24]
            mov QWORD PTR [RDI+R14*8+16],RBX
            sbb RAX,0
            mov QWORD PTR [RDI+R14*8+24],RBP
            xor R14,R14
            and RSI,RAX
            not RAX
            mov RCX,RDI
            and RCX,RAX
            lea R15,QWORD PTR [R9-1]
            or RSI,RCX
            movdqu XMM1,XMMWORD PTR [RSI]
            movdqa XMMWORD PTR [RSP],XMM0
            movdqu XMMWORD PTR [RDI],XMM1
            jmp .L_40a580
          .byte 0x90
.L_40a580:

            movdqu XMM2,XMMWORD PTR [RSI+R14*1+16]
            movdqu XMM1,XMMWORD PTR [RSI+R14*1+32]
            movdqa XMMWORD PTR [RSP+R14*1+16],XMM0
            movdqu XMMWORD PTR [RDI+R14*1+16],XMM2
            movdqa XMMWORD PTR [RSP+R14*1+32],XMM0
            movdqu XMMWORD PTR [RDI+R14*1+32],XMM1
            lea R14,QWORD PTR [R14+32]
            dec R15
            jne .L_40a580

            shl R9,2
            movdqu XMM2,XMMWORD PTR [RSI+R14*1+16]
            movdqa XMMWORD PTR [RSP+R14*1+16],XMM0
            movdqu XMMWORD PTR [RDI+R14*1+16],XMM2
            mov RSI,QWORD PTR [RSP+R9*8+8]
            mov RAX,1
            mov R15,QWORD PTR [RSI]
            mov R14,QWORD PTR [RSI+8]
            mov R13,QWORD PTR [RSI+16]
            mov R12,QWORD PTR [RSI+24]
            mov RBP,QWORD PTR [RSI+32]
            mov RBX,QWORD PTR [RSI+40]
            lea RSP,QWORD PTR [RSI+48]
            ret 
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a600:

            mov RAX,RSP
            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R10D,R9D
            shl R9D,3
            shl R10,5
            neg R9
            lea R11,QWORD PTR [RSP+R9*4-64]
            mov R8,QWORD PTR [R8]
            sub R11,RSI
            and R11,4095
            cmp R10,R11
            jb .L_40a640

            sub RSP,R11
            lea RSP,QWORD PTR [RSP+R9*4-64]
            jmp .L_40a65e
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40a640:

            lea R10,QWORD PTR [R9*4+4032]
            lea RSP,QWORD PTR [RSP+R9*4-64]
            sub R11,R10
            mov R10,0
            cmovb R11,R10
            sub RSP,R11
.L_40a65e:

            and RSP,-64
            mov R10,R9
            neg R9
            lea R11,QWORD PTR [RSP+R9*2+64]
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+40],RAX
            mov RBP,R9
            movq XMM2,R11
            shr RBP,5
            mov EAX,DWORD PTR [RIP+.L_63b410]
            jmp .L_40a6a0
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a6a0:

            movq XMM0,QWORD PTR [RCX]
            movq XMM1,QWORD PTR [RCX+8]
            movq XMM3,QWORD PTR [RCX+16]
            movq XMM4,QWORD PTR [RCX+24]
            lea RCX,QWORD PTR [RCX+32]
            movdqa XMMWORD PTR [R11],XMM0
            movdqa XMMWORD PTR [R11+16],XMM1
            movdqa XMMWORD PTR [R11+32],XMM3
            movdqa XMMWORD PTR [R11+48],XMM4
            lea R11,QWORD PTR [R11+64]
            dec RBP
            jne .L_40a6a0

            pxor XMM0,XMM0
            movq XMM1,RDI
            movq XMM3,R10
            and EAX,524544
            cmp EAX,524544
            jne .L_40a720

            call .L_40c880

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RSP+R9*2+64]
            shr R9,5
            mov RSI,QWORD PTR [RSP+40]
            jmp .L_40a740
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a720:

            call .L_40b720

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RSP+48]
            lea RDX,QWORD PTR [RSP+R9*2+64]
            shr R9,5
            mov RSI,QWORD PTR [RSP+40]
            jmp .L_40a740
          .byte 0x66
          .byte 0x90
.L_40a740:

            movdqa XMMWORD PTR [RAX],XMM0
            movdqa XMMWORD PTR [RAX+16],XMM0
            movdqa XMMWORD PTR [RAX+32],XMM0
            movdqa XMMWORD PTR [RAX+48],XMM0
            lea RAX,QWORD PTR [RAX+64]
            movdqa XMMWORD PTR [RDX],XMM0
            movdqa XMMWORD PTR [RDX+16],XMM0
            movdqa XMMWORD PTR [RDX+32],XMM0
            movdqa XMMWORD PTR [RDX+48],XMM0
            lea RDX,QWORD PTR [RDX+64]
            dec R9
            jne .L_40a740

            mov RAX,1
            mov R15,QWORD PTR [RSI-48]
            mov R14,QWORD PTR [RSI-40]
            mov R13,QWORD PTR [RSI-32]
            mov R12,QWORD PTR [RSI-24]
            mov RBP,QWORD PTR [RSI-16]
            mov RBX,QWORD PTR [RSI-8]
            lea RSP,QWORD PTR [RSI]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a7a0:

            mov RAX,RSP
            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            shl R9D,3
            xor R10,R10
            sub R10,R9
            mov R8,QWORD PTR [R8]
            lea RSP,QWORD PTR [RSP+R10*1-72]
            lea R10,QWORD PTR [RDX+R9*1]
            and RSP,-128
            mov QWORD PTR [RSP],R9
            shr R9,5
            mov QWORD PTR [RSP+16],R10
            sub R9,1
            mov QWORD PTR [RSP+24],R8
            mov QWORD PTR [RSP+32],RDI
            mov QWORD PTR [RSP+40],RAX
            mov QWORD PTR [RSP+48],R9
            jmp .L_40a800
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a800:

            lea RDI,QWORD PTR [RDX+8]
            mov RDX,QWORD PTR [RDX]
            lea RBX,QWORD PTR [RSP+96]
            mov R9,RDX
            mulx RAX,R8,QWORD PTR [RSI]
            mulx R14,R11,QWORD PTR [RSI+8]
            add R11,RAX
            mov QWORD PTR [RSP+8],RDI
            mulx R13,R12,QWORD PTR [RSI+16]
            adc R12,R14
            adc R13,0
            mov RDI,R8
            imul R8,QWORD PTR [RSP+24]
            xor RBP,RBP
            mulx R14,RAX,QWORD PTR [RSI+24]
            mov RDX,R8
            lea RSI,QWORD PTR [RSI+32]
            adcx R13,RAX
            adcx R14,RBP
            mulx R10,RAX,QWORD PTR [RCX]
            adcx RDI,RAX
            adox R10,R11
            mulx R11,RAX,QWORD PTR [RCX+8]
            adcx R10,RAX
            adox R11,R12
            mulx R12,RAX,QWORD PTR [RCX+16]
            mov RDI,QWORD PTR [RSP+48]
            mov QWORD PTR [RBX-32],R10
            adcx R11,RAX
            adox R12,R13
            mulx R15,RAX,QWORD PTR [RCX+24]
            mov RDX,R9
            mov QWORD PTR [RBX-24],R11
            adcx R12,RAX
            adox R15,RBP
            lea RCX,QWORD PTR [RCX+32]
            mov QWORD PTR [RBX-16],R12
            jmp .L_40a8c0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a8c0:

            adcx R15,RBP
            mulx RAX,R10,QWORD PTR [RSI]
            adcx R10,R14
            mulx R14,R11,QWORD PTR [RSI+8]
            adcx R11,RAX
            mulx RAX,R12,QWORD PTR [RSI+16]
            adcx R12,R14
            mulx R14,R13,QWORD PTR [RSI+24]
            mov RDX,R8
            adcx R13,RAX
            adcx R14,RBP
            lea RSI,QWORD PTR [RSI+32]
            lea RBX,QWORD PTR [RBX+32]
            adox R10,R15
            mulx R15,RAX,QWORD PTR [RCX]
            adcx R10,RAX
            adox R11,R15
            mulx R15,RAX,QWORD PTR [RCX+8]
            adcx R11,RAX
            adox R12,R15
            mulx R15,RAX,QWORD PTR [RCX+16]
            mov QWORD PTR [RBX-40],R10
            adcx R12,RAX
            mov QWORD PTR [RBX-32],R11
            adox R13,R15
            mulx R15,RAX,QWORD PTR [RCX+24]
            mov RDX,R9
            mov QWORD PTR [RBX-24],R12
            adcx R13,RAX
            adox R15,RBP
            lea RCX,QWORD PTR [RCX+32]
            mov QWORD PTR [RBX-16],R13
            dec RDI
            jne .L_40a8c0

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+8]
            adc R15,RBP
            add R14,R15
            sbb R15,R15
            mov QWORD PTR [RBX-8],R14
            jmp .L_40a9a0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40a9a0:

            mov RDX,QWORD PTR [RDI]
            lea RDI,QWORD PTR [RDI+8]
            sub RSI,RAX
            mov QWORD PTR [RBX],R15
            lea RBX,QWORD PTR [RSP+96]
            sub RCX,RAX
            mulx R11,R8,QWORD PTR [RSI]
            xor EBP,EBP
            mov R9,RDX
            mulx R12,R14,QWORD PTR [RSI+8]
            adox R8,QWORD PTR [RBX-32]
            adcx R11,R14
            mulx R13,R15,QWORD PTR [RSI+16]
            adox R11,QWORD PTR [RBX-24]
            adcx R12,R15
            adox R12,RBP
            adcx R13,RBP
            mov QWORD PTR [RSP+8],RDI
            mov R15,R8
            imul R8,QWORD PTR [RSP+24]
            xor EBP,EBP
            mulx R14,RAX,QWORD PTR [RSI+24]
            mov RDX,R8
            adox R12,QWORD PTR [RBX-16]
            adcx R13,RAX
            adox R13,QWORD PTR [RBX-8]
            adcx R14,RBP
            lea RSI,QWORD PTR [RSI+32]
            adox R14,RBP
            mulx R10,RAX,QWORD PTR [RCX]
            adcx R15,RAX
            adox R10,R11
            mulx R11,RAX,QWORD PTR [RCX+8]
            adcx R10,RAX
            adox R11,R12
            mulx R12,RAX,QWORD PTR [RCX+16]
            mov QWORD PTR [RBX-32],R10
            adcx R11,RAX
            adox R12,R13
            mulx R15,RAX,QWORD PTR [RCX+24]
            mov RDX,R9
            mov QWORD PTR [RBX-24],R11
            lea RCX,QWORD PTR [RCX+32]
            adcx R12,RAX
            adox R15,RBP
            mov RDI,QWORD PTR [RSP+48]
            mov QWORD PTR [RBX-16],R12
            jmp .L_40aaa0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40aaa0:

            mulx RAX,R10,QWORD PTR [RSI]
            adcx R15,RBP
            adox R10,R14
            mulx R14,R11,QWORD PTR [RSI+8]
            adcx R10,QWORD PTR [RBX]
            adox R11,RAX
            mulx RAX,R12,QWORD PTR [RSI+16]
            adcx R11,QWORD PTR [RBX+8]
            adox R12,R14
            mulx R14,R13,QWORD PTR [RSI+24]
            mov RDX,R8
            adcx R12,QWORD PTR [RBX+16]
            adox R13,RAX
            adcx R13,QWORD PTR [RBX+24]
            adox R14,RBP
            lea RSI,QWORD PTR [RSI+32]
            lea RBX,QWORD PTR [RBX+32]
            adcx R14,RBP
            adox R10,R15
            mulx R15,RAX,QWORD PTR [RCX]
            adcx R10,RAX
            adox R11,R15
            mulx R15,RAX,QWORD PTR [RCX+8]
            adcx R11,RAX
            adox R12,R15
            mulx R15,RAX,QWORD PTR [RCX+16]
            mov QWORD PTR [RBX-40],R10
            adcx R12,RAX
            adox R13,R15
            mulx R15,RAX,QWORD PTR [RCX+24]
            mov RDX,R9
            mov QWORD PTR [RBX-32],R11
            mov QWORD PTR [RBX-24],R12
            adcx R13,RAX
            adox R15,RBP
            lea RCX,QWORD PTR [RCX+32]
            mov QWORD PTR [RBX-16],R13
            dec RDI
            jne .L_40aaa0

            mov RAX,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+8]
            adc R15,RBP
            sub RBP,QWORD PTR [RBX]
            adc R14,R15
            mov R8,QWORD PTR [RCX-8]
            sbb R15,R15
            mov QWORD PTR [RBX-8],R14
            cmp RDI,QWORD PTR [RSP+16]
            jne .L_40a9a0

            sub R8,R14
            sbb R8,R8
            or R15,R8
            neg RAX
            xor RDX,RDX
            mov RDI,QWORD PTR [RSP+32]
            lea RBX,QWORD PTR [RSP+64]
            pxor XMM0,XMM0
            mov R8,QWORD PTR [RCX+RAX*1]
            mov R9,QWORD PTR [RCX+RAX*1+8]
            neg R8
            jmp .L_40abec
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40abe0:

            mov R8,QWORD PTR [RCX+RAX*1]
            mov R9,QWORD PTR [RCX+RAX*1+8]
            not R8
.L_40abec:

            mov R10,QWORD PTR [RCX+RAX*1+16]
            not R9
            and R8,R15
            mov R11,QWORD PTR [RCX+RAX*1+24]
            not R10
            and R9,R15
            not R11
            and R10,R15
            and R11,R15
            neg RDX
            adc R8,QWORD PTR [RBX]
            adc R9,QWORD PTR [RBX+8]
            movdqa XMMWORD PTR [RBX],XMM0
            adc R10,QWORD PTR [RBX+16]
            adc R11,QWORD PTR [RBX+24]
            movdqa XMMWORD PTR [RBX+16],XMM0
            lea RBX,QWORD PTR [RBX+32]
            sbb RDX,RDX
            mov QWORD PTR [RDI],R8
            mov QWORD PTR [RDI+8],R9
            mov QWORD PTR [RDI+16],R10
            mov QWORD PTR [RDI+24],R11
            lea RDI,QWORD PTR [RDI+32]
            add RAX,32
            jne .L_40abe0

            mov RSI,QWORD PTR [RSP+40]
            mov RAX,1
            mov R15,QWORD PTR [RSI-48]
            mov R14,QWORD PTR [RSI-40]
            mov R13,QWORD PTR [RSI-32]
            mov R12,QWORD PTR [RSI-24]
            mov RBP,QWORD PTR [RSI-16]
            mov RBX,QWORD PTR [RSI-8]
            lea RSP,QWORD PTR [RSI]
            ret 
          .byte 0x4d
          .byte 0x6f
          .byte 0x6e
          .byte 0x74
          .byte 0x67
          .byte 0x6f
          .byte 0x6d
          .byte 0x65
          .byte 0x72
          .byte 0x79
          .byte 0x20
          .byte 0x4d
          .byte 0x75
          .byte 0x6c
          .byte 0x74
          .byte 0x69

            jo .L_40aced
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20

            js .L_40acc7

            pop RDI
            xor AL,44
            and BYTE PTR [RBX+82],AL
            pop RCX
            push RAX
            push RSP
          .byte 0x4f
          .byte 0x47
          .byte 0x41
          .byte 0x4d
          .byte 0x53
          .byte 0x20
          .byte 0x62
          .byte 0x79
          .byte 0x20
          .byte 0x3c
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x72
          .byte 0x6f

            outsd DX,DWORD PTR [RSI]
            jo .L_40ad12
          .byte 0x6e
          .byte 0x73
          .byte 0x73
          .byte 0x6c
          .byte 0x2e
          .byte 0x6f
          .byte 0x72
          .byte 0x67
          .byte 0x3e
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40acc0:

            test R9D,7
.L_40acc7:

            jne .L_40ace0

            mov R11D,DWORD PTR [RIP+.L_63b410]
            jmp .L_40b020
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ace0:

            mov R9D,R9D
            mov RAX,RSP
            mov R10D,DWORD PTR [RSP+8]
            push RBX
            push RBP
.L_40aced:

            push R12
            push R13
            push R14
            push R15
            lea R11,QWORD PTR [R9+2]
            neg R11
            lea RSP,QWORD PTR [RSP+R11*8]
            and RSP,-1024
            mov QWORD PTR [RSP+R9*8+8],RAX
            mov R12,RDX
            mov R11,R10
.L_40ad12:

            shr R10,3
            and R11,7
            not R10
            lea RAX,QWORD PTR [RIP+.L_40d340]
            and R10,3
            lea R12,QWORD PTR [R12+R11*8+96]
            movq XMM4,QWORD PTR [RAX+R10*8]
            movq XMM5,QWORD PTR [RAX+R10*8+8]
            movq XMM6,QWORD PTR [RAX+R10*8+16]
            movq XMM7,QWORD PTR [RAX+R10*8+24]
            movq XMM0,QWORD PTR [R12-96]
            movq XMM1,QWORD PTR [R12-32]
            pand XMM0,XMM4
            movq XMM2,QWORD PTR [R12+32]
            pand XMM1,XMM5
            movq XMM3,QWORD PTR [R12+96]
            pand XMM2,XMM6
            por XMM0,XMM1
            pand XMM3,XMM7
            por XMM0,XMM2
            lea R12,QWORD PTR [R12+256]
            por XMM0,XMM3
            movq RBX,XMM0
            mov R8,QWORD PTR [R8]
            mov RAX,QWORD PTR [RSI]
            xor R14,R14
            xor R15,R15
            movq XMM0,QWORD PTR [R12-96]
            movq XMM1,QWORD PTR [R12-32]
            pand XMM0,XMM4
            movq XMM2,QWORD PTR [R12+32]
            pand XMM1,XMM5
            mov RBP,R8
            mul RBX
            mov R10,RAX
            mov RAX,QWORD PTR [RCX]
            movq XMM3,QWORD PTR [R12+96]
            pand XMM2,XMM6
            por XMM0,XMM1
            pand XMM3,XMM7
            imul RBP,R10
            mov R11,RDX
            por XMM0,XMM2
            lea R12,QWORD PTR [R12+256]
            por XMM0,XMM3
            mul RBP
            add R10,RAX
            mov RAX,QWORD PTR [RSI+8]
            adc RDX,0
            mov R13,RDX
            lea R15,QWORD PTR [R15+1]
            jmp .L_40ae2d
          .byte 0xf
          .byte 0x1f
          .byte 0x0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40ae10:

            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8]
            adc RDX,0
            add R13,R11
            mov R11,R10
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],R13
            mov R13,RDX
.L_40ae2d:

            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8]
            adc RDX,0
            lea R15,QWORD PTR [R15+1]
            mov R10,RDX
            mul RBP
            cmp R15,R9
            jne .L_40ae10

            movq RBX,XMM0
            add R13,RAX
            mov RAX,QWORD PTR [RSI]
            adc RDX,0
            add R13,R11
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],R13
            mov R13,RDX
            mov R11,R10
            xor RDX,RDX
            add R13,R11
            adc RDX,0
            mov QWORD PTR [RSP+R9*8-8],R13
            mov QWORD PTR [RSP+R9*8],RDX
            lea R14,QWORD PTR [R14+1]
            jmp .L_40ae90
          .byte 0x66
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ae90:

            xor R15,R15
            mov RBP,R8
            mov R10,QWORD PTR [RSP]
            movq XMM0,QWORD PTR [R12-96]
            movq XMM1,QWORD PTR [R12-32]
            pand XMM0,XMM4
            movq XMM2,QWORD PTR [R12+32]
            pand XMM1,XMM5
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX]
            adc RDX,0
            movq XMM3,QWORD PTR [R12+96]
            pand XMM2,XMM6
            por XMM0,XMM1
            pand XMM3,XMM7
            imul RBP,R10
            mov R11,RDX
            por XMM0,XMM2
            lea R12,QWORD PTR [R12+256]
            por XMM0,XMM3
            mul RBP
            add R10,RAX
            mov RAX,QWORD PTR [RSI+8]
            adc RDX,0
            mov R10,QWORD PTR [RSP+8]
            mov R13,RDX
            lea R15,QWORD PTR [R15+1]
            jmp .L_40af2e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40af10:

            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*8]
            adc RDX,0
            add R13,R10
            mov R10,QWORD PTR [RSP+R15*8]
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],R13
            mov R13,RDX
.L_40af2e:

            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+R15*8]
            adc RDX,0
            add R10,R11
            mov R11,RDX
            adc R11,0
            lea R15,QWORD PTR [R15+1]
            mul RBP
            cmp R15,R9
            jne .L_40af10

            movq RBX,XMM0
            add R13,RAX
            mov RAX,QWORD PTR [RSI]
            adc RDX,0
            add R13,R10
            mov R10,QWORD PTR [RSP+R15*8]
            adc RDX,0
            mov QWORD PTR [RSP+R15*8-16],R13
            mov R13,RDX
            xor RDX,RDX
            add R13,R11
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [RSP+R9*8-8],R13
            mov QWORD PTR [RSP+R9*8],RDX
            lea R14,QWORD PTR [R14+1]
            cmp R14,R9
            jb .L_40ae90

            xor R14,R14
            mov RAX,QWORD PTR [RSP]
            lea RSI,QWORD PTR [RSP]
            mov R15,R9
            jmp .L_40afb0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40afb0:

            sbb RAX,QWORD PTR [RCX+R14*8]
            mov QWORD PTR [RDI+R14*8],RAX
            mov RAX,QWORD PTR [RSI+R14*8+8]
            lea R14,QWORD PTR [R14+1]
            dec R15
            jne .L_40afb0

            sbb RAX,0
            xor R14,R14
            and RSI,RAX
            not RAX
            mov RCX,RDI
            and RCX,RAX
            mov R15,R9
            or RSI,RCX
            nop
.L_40afe0:

            mov RAX,QWORD PTR [RSI+R14*8]
            mov QWORD PTR [RSP+R14*8],R14
            mov QWORD PTR [RDI+R14*8],RAX
            lea R14,QWORD PTR [R14+1]
            sub R15,1
            jne .L_40afe0

            mov RSI,QWORD PTR [RSP+R9*8+8]
            mov RAX,1
            mov R15,QWORD PTR [RSI-48]
            mov R14,QWORD PTR [RSI-40]
            mov R13,QWORD PTR [RSI-32]
            mov R12,QWORD PTR [RSI-24]
            mov RBP,QWORD PTR [RSI-16]
            mov RBX,QWORD PTR [RSI-8]
            lea RSP,QWORD PTR [RSI]
            ret 
          .byte 0x90
.L_40b020:

            and R11D,524544
            cmp R11D,524544
            je .L_40c200

            mov RAX,RSP
            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R10D,R9D
            shl R9D,3
            shl R10D,5
            neg R9
            lea R11,QWORD PTR [RSP+R9*2-64]
            sub R11,RSI
            and R11,4095
            cmp R10,R11
            jb .L_40b080

            sub RSP,R11
            lea RSP,QWORD PTR [RSP+R9*2-64]
            jmp .L_40b09e
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b080:

            lea R10,QWORD PTR [R9*2+4032]
            lea RSP,QWORD PTR [RSP+R9*2-64]
            sub R11,R10
            mov R10,0
            cmovb R11,R10
            sub RSP,R11
.L_40b09e:

            and RSP,-64
            neg R9
            mov QWORD PTR [RSP+40],RAX
            call .L_40b0e0

            mov RSI,QWORD PTR [RSP+40]
            mov RAX,1
            mov R15,QWORD PTR [RSI-48]
            mov R14,QWORD PTR [RSI-40]
            mov R13,QWORD PTR [RSI-32]
            mov R12,QWORD PTR [RSI-24]
            mov RBP,QWORD PTR [RSI-16]
            mov RBX,QWORD PTR [RSI-8]
            lea RSP,QWORD PTR [RSI]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b0e0:

            shl R9,5
            mov R10D,DWORD PTR [RAX+8]
            lea R13,QWORD PTR [RDX+R9*1+256]
            shr R9,5
            mov R11,R10
            shr R10,3
            and R11,7
            not R10
            lea RAX,QWORD PTR [RIP+.L_40d340]
            and R10,3
            lea R12,QWORD PTR [RDX+R11*8+96]
            movq XMM4,QWORD PTR [RAX+R10*8]
            movq XMM5,QWORD PTR [RAX+R10*8+8]
            add R11,7
            movq XMM6,QWORD PTR [RAX+R10*8+16]
            movq XMM7,QWORD PTR [RAX+R10*8+24]
            and R11,7
            movq XMM0,QWORD PTR [R12-96]
            lea R14,QWORD PTR [R12+256]
            movq XMM1,QWORD PTR [R12-32]
            pand XMM0,XMM4
            movq XMM2,QWORD PTR [R12+32]
            pand XMM1,XMM5
            movq XMM3,QWORD PTR [R12+96]
            pand XMM2,XMM6
            por XMM0,XMM1
            movq XMM1,QWORD PTR [R14-96]
            pand XMM3,XMM7
            por XMM0,XMM2
            movq XMM2,QWORD PTR [R14-32]
            pand XMM1,XMM4
            por XMM0,XMM3
            movq XMM3,QWORD PTR [R14+32]
            movq RBX,XMM0
            movq XMM0,QWORD PTR [R14+96]
            mov QWORD PTR [RSP+24],R13
            mov QWORD PTR [RSP+64],RDI
            mov R8,QWORD PTR [R8]
            mov RAX,QWORD PTR [RSI]
            lea RSI,QWORD PTR [RSI+R9*1]
            neg R9
            mov RBP,R8
            mul RBX
            mov R10,RAX
            mov RAX,QWORD PTR [RCX]
            pand XMM2,XMM5
            pand XMM3,XMM6
            por XMM1,XMM2
            imul RBP,R10
            lea R14,QWORD PTR [RSP+R11*8+72]
            mov R11,RDX
            pand XMM0,XMM7
            por XMM1,XMM3
            lea R12,QWORD PTR [R12+512]
            por XMM0,XMM1
            mul RBP
            add R10,RAX
            mov RAX,QWORD PTR [RSI+R9*1+8]
            adc RDX,0
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+16]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R9*1+16]
            adc RDX,0
            add RDI,R11
            lea R15,QWORD PTR [R9+32]
            lea RCX,QWORD PTR [RCX+64]
            adc RDX,0
            mov QWORD PTR [R14],RDI
            mov R13,RDX
            jmp .L_40b240
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b240:

            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX-32]
            lea R14,QWORD PTR [R14+32]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*1-8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [R14-24],R13
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX-16]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R15*1]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [R14-16],RDI
            mov R13,RDX
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*1+8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [R14-8],R13
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+16]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R15*1+16]
            adc RDX,0
            add RDI,R11
            lea RCX,QWORD PTR [RCX+64]
            adc RDX,0
            mov QWORD PTR [R14],RDI
            mov R13,RDX
            add R15,32
            jne .L_40b240

            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX-32]
            lea R14,QWORD PTR [R14+32]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI-8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [R14-24],R13
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX-16]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R9*1]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [R14-16],RDI
            mov R13,RDX
            movq RBX,XMM0
            lea RCX,QWORD PTR [RCX+R9*2]
            xor RDI,RDI
            add R13,R10
            adc RDI,0
            mov QWORD PTR [R14-8],R13
            jmp .L_40b380
          .byte 0x66
          .byte 0x90
.L_40b380:

            mov R10,QWORD PTR [R14+R9*1]
            mov RBP,R8
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX]
            adc RDX,0
            movq XMM0,QWORD PTR [R12-96]
            movq XMM1,QWORD PTR [R12-32]
            pand XMM0,XMM4
            movq XMM2,QWORD PTR [R12+32]
            pand XMM1,XMM5
            movq XMM3,QWORD PTR [R12+96]
            imul RBP,R10
            mov R11,RDX
            mov QWORD PTR [R14],RDI
            pand XMM2,XMM6
            por XMM0,XMM1
            pand XMM3,XMM7
            por XMM0,XMM2
            lea R14,QWORD PTR [R14+R9*1]
            lea R12,QWORD PTR [R12+256]
            por XMM0,XMM3
            mul RBP
            add R10,RAX
            mov RAX,QWORD PTR [RSI+R9*1+8]
            adc RDX,0
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+16]
            adc RDX,0
            add R11,QWORD PTR [R14+8]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R9*1+16]
            adc RDX,0
            add RDI,R11
            lea R15,QWORD PTR [R9+32]
            lea RCX,QWORD PTR [RCX+64]
            adc RDX,0
            mov R13,RDX
            jmp .L_40b440
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b440:

            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX-32]
            adc RDX,0
            add R10,QWORD PTR [R14+16]
            lea R14,QWORD PTR [R14+32]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*1-8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [R14-32],RDI
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX-16]
            adc RDX,0
            add R11,QWORD PTR [R14-8]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R15*1]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [R14-24],R13
            mov R13,RDX
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX]
            adc RDX,0
            add R10,QWORD PTR [R14]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI+R15*1+8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [R14-16],RDI
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RCX+16]
            adc RDX,0
            add R11,QWORD PTR [R14+8]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R15*1+16]
            adc RDX,0
            add RDI,R11
            lea RCX,QWORD PTR [RCX+64]
            adc RDX,0
            mov QWORD PTR [R14-8],R13
            mov R13,RDX
            add R15,32
            jne .L_40b440

            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RCX-32]
            adc RDX,0
            add R10,QWORD PTR [R14+16]
            lea R14,QWORD PTR [R14+32]
            adc RDX,0
            mov R11,RDX
            mul RBP
            add R13,RAX
            mov RAX,QWORD PTR [RSI-8]
            adc RDX,0
            add R13,R10
            adc RDX,0
            mov QWORD PTR [R14-32],RDI
            mov RDI,RDX
            mul RBX
            add R11,RAX
            mov RAX,RBP
            mov RBP,QWORD PTR [RCX-16]
            adc RDX,0
            add R11,QWORD PTR [R14-8]
            adc RDX,0
            mov R10,RDX
            mul RBP
            add RDI,RAX
            mov RAX,QWORD PTR [RSI+R9*1]
            adc RDX,0
            add RDI,R11
            adc RDX,0
            mov QWORD PTR [R14-24],R13
            mov R13,RDX
            movq RBX,XMM0
            mov QWORD PTR [R14-16],RDI
            lea RCX,QWORD PTR [RCX+R9*2]
            xor RDI,RDI
            add R13,R10
            adc RDI,0
            add R13,QWORD PTR [R14]
            adc RDI,0
            mov QWORD PTR [R14-8],R13
            cmp R12,QWORD PTR [RSP+24]
            jb .L_40b380

            sub RBP,R13
            adc R15,R15
            or RDI,R15
            xor RDI,1
            lea RBX,QWORD PTR [R14+R9*1]
            lea RBP,QWORD PTR [RCX+RDI*8]
            mov RCX,R9
            sar RCX,5
            mov RDI,QWORD PTR [RSP+64]
            jmp .L_40bfe0
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b600:

            mov R11D,DWORD PTR [RIP+.L_63b410]
            and R11D,524544
            cmp R11D,524544
            je .L_40c780

            mov RAX,RSP
            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R10D,R9D
            shl R9D,3
            shl R10D,5
            neg R9
            mov R8,QWORD PTR [R8]
            lea R11,QWORD PTR [RSP+R9*2-64]
            sub R11,RSI
            and R11,4095
            cmp R10,R11
            jb .L_40b660

            sub RSP,R11
            lea RSP,QWORD PTR [RSP+R9*2-64]
            jmp .L_40b67e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b660:

            lea R10,QWORD PTR [R9*2+4032]
            lea RSP,QWORD PTR [RSP+R9*2-64]
            sub R11,R10
            mov R10,0
            cmovb R11,R10
            sub RSP,R11
.L_40b67e:

            and RSP,-64
            mov R10,R9
            neg R9
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+40],RAX
            movq XMM1,RDI
            movq XMM2,RCX
            movq XMM3,R10
            movq XMM4,RDX
            call .L_40b720

            call .L_40b720

            call .L_40b720

            call .L_40b720

            call .L_40b720

            movq RCX,XMM2
            movq RDX,XMM4
            mov RDI,RSI
            mov RAX,QWORD PTR [RSP+40]
            lea R8,QWORD PTR [RSP+32]
            call .L_40b0e0

            mov RSI,QWORD PTR [RSP+40]
            mov RAX,1
            mov R15,QWORD PTR [RSI-48]
            mov R14,QWORD PTR [RSI-40]
            mov R13,QWORD PTR [RSI-32]
            mov R12,QWORD PTR [RSI-24]
            mov RBP,QWORD PTR [RSI-16]
            mov RBX,QWORD PTR [RSI-8]
            lea RSP,QWORD PTR [RSI]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b720:

            lea RBP,QWORD PTR [R10+32]
            lea RSI,QWORD PTR [RSI+R9*1]
            mov RCX,R9
            mov R14,QWORD PTR [RSI+RBP*1-32]
            lea RDI,QWORD PTR [RSP+R9*2+56]
            mov RAX,QWORD PTR [RSI+RBP*1-24]
            lea RDI,QWORD PTR [RDI+RBP*1-32]
            mov RBX,QWORD PTR [RSI+RBP*1-16]
            mov R15,RAX
            mul R14
            mov R10,RAX
            mov RAX,RBX
            mov R11,RDX
            mov QWORD PTR [RDI+RBP*1-24],R10
            mul R14
            add R11,RAX
            mov RAX,RBX
            adc RDX,0
            mov QWORD PTR [RDI+RBP*1-16],R11
            mov R10,RDX
            mov RBX,QWORD PTR [RSI+RBP*1-8]
            mul R15
            mov R12,RAX
            mov RAX,RBX
            mov R13,RDX
            lea RCX,QWORD PTR [RBP]
            mul R14
            add R10,RAX
            mov RAX,RBX
            mov R11,RDX
            adc R11,0
            add R10,R12
            adc R11,0
            mov QWORD PTR [RDI+RCX*1-8],R10
            jmp .L_40b7a0
.L_40b7a0:

            mov RBX,QWORD PTR [RSI+RCX*1]
            mul R15
            add R13,RAX
            mov RAX,RBX
            mov R12,RDX
            adc R12,0
            mul R14
            add R11,RAX
            mov RAX,RBX
            mov RBX,QWORD PTR [RSI+RCX*1+8]
            mov R10,RDX
            adc R10,0
            add R11,R13
            adc R10,0
            mul R15
            add R12,RAX
            mov RAX,RBX
            mov QWORD PTR [RDI+RCX*1],R11
            mov R13,RDX
            adc R13,0
            mul R14
            add R10,RAX
            mov RAX,RBX
            mov RBX,QWORD PTR [RSI+RCX*1+16]
            mov R11,RDX
            adc R11,0
            add R10,R12
            adc R11,0
            mul R15
            add R13,RAX
            mov RAX,RBX
            mov QWORD PTR [RDI+RCX*1+8],R10
            mov R12,RDX
            adc R12,0
            mul R14
            add R11,RAX
            mov RAX,RBX
            mov RBX,QWORD PTR [RSI+RCX*1+24]
            mov R10,RDX
            adc R10,0
            add R11,R13
            adc R10,0
            mul R15
            add R12,RAX
            mov RAX,RBX
            mov QWORD PTR [RDI+RCX*1+16],R11
            mov R13,RDX
            adc R13,0
            lea RCX,QWORD PTR [RCX+32]
            mul R14
            add R10,RAX
            mov RAX,RBX
            mov R11,RDX
            adc R11,0
            add R10,R12
            adc R11,0
            mov QWORD PTR [RDI+RCX*1-8],R10
            cmp RCX,0
            jne .L_40b7a0

            mul R15
            add R13,RAX
            lea RBP,QWORD PTR [RBP+16]
            adc RDX,0
            add R13,R11
            adc RDX,0
            mov QWORD PTR [RDI],R13
            mov R12,RDX
            mov QWORD PTR [RDI+8],RDX
            jmp .L_40b8a0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b8a0:

            mov R14,QWORD PTR [RSI+RBP*1-32]
            lea RDI,QWORD PTR [RSP+R9*2+56]
            mov RAX,QWORD PTR [RSI+RBP*1-24]
            lea RDI,QWORD PTR [RDI+RBP*1-32]
            mov RBX,QWORD PTR [RSI+RBP*1-16]
            mov R15,RAX
            mul R14
            mov R10,QWORD PTR [RDI+RBP*1-24]
            add R10,RAX
            mov RAX,RBX
            adc RDX,0
            mov QWORD PTR [RDI+RBP*1-24],R10
            mov R11,RDX
            mul R14
            add R11,RAX
            mov RAX,RBX
            adc RDX,0
            add R11,QWORD PTR [RDI+RBP*1-16]
            mov R10,RDX
            adc R10,0
            mov QWORD PTR [RDI+RBP*1-16],R11
            xor R12,R12
            mov RBX,QWORD PTR [RSI+RBP*1-8]
            mul R15
            add R12,RAX
            mov RAX,RBX
            adc RDX,0
            add R12,QWORD PTR [RDI+RBP*1-8]
            mov R13,RDX
            adc R13,0
            mul R14
            add R10,RAX
            mov RAX,RBX
            adc RDX,0
            add R10,R12
            mov R11,RDX
            adc R11,0
            mov QWORD PTR [RDI+RBP*1-8],R10
            lea RCX,QWORD PTR [RBP]
            jmp .L_40b940
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40b940:

            mov RBX,QWORD PTR [RSI+RCX*1]
            mul R15
            add R13,RAX
            mov RAX,RBX
            mov R12,RDX
            adc R12,0
            add R13,QWORD PTR [RDI+RCX*1]
            adc R12,0
            mul R14
            add R11,RAX
            mov RAX,RBX
            mov RBX,QWORD PTR [RSI+RCX*1+8]
            mov R10,RDX
            adc R10,0
            add R11,R13
            adc R10,0
            mul R15
            add R12,RAX
            mov QWORD PTR [RDI+RCX*1],R11
            mov RAX,RBX
            mov R13,RDX
            adc R13,0
            add R12,QWORD PTR [RDI+RCX*1+8]
            lea RCX,QWORD PTR [RCX+16]
            adc R13,0
            mul R14
            add R10,RAX
            mov RAX,RBX
            adc RDX,0
            add R10,R12
            mov R11,RDX
            adc R11,0
            mov QWORD PTR [RDI+RCX*1-8],R10
            cmp RCX,0
            jne .L_40b940

            mul R15
            add R13,RAX
            adc RDX,0
            add R13,R11
            adc RDX,0
            mov QWORD PTR [RDI],R13
            mov R12,RDX
            mov QWORD PTR [RDI+8],RDX
            add RBP,16
            jne .L_40b8a0

            mov R14,QWORD PTR [RSI-32]
            lea RDI,QWORD PTR [RSP+R9*2+56]
            mov RAX,QWORD PTR [RSI-24]
            lea RDI,QWORD PTR [RDI+RBP*1-32]
            mov RBX,QWORD PTR [RSI-16]
            mov R15,RAX
            mul R14
            add R10,RAX
            mov RAX,RBX
            mov R11,RDX
            adc R11,0
            mul R14
            add R11,RAX
            mov RAX,RBX
            mov QWORD PTR [RDI-24],R10
            mov R10,RDX
            adc R10,0
            add R11,R13
            mov RBX,QWORD PTR [RSI-8]
            adc R10,0
            mul R15
            add R12,RAX
            mov RAX,RBX
            mov QWORD PTR [RDI-16],R11
            mov R13,RDX
            adc R13,0
            mul R14
            add R10,RAX
            mov RAX,RBX
            mov R11,RDX
            adc R11,0
            add R10,R12
            adc R11,0
            mov QWORD PTR [RDI-8],R10
            mul R15
            add R13,RAX
            mov RAX,QWORD PTR [RSI-16]
            adc RDX,0
            add R13,R11
            adc RDX,0
            mov QWORD PTR [RDI],R13
            mov R12,RDX
            mov QWORD PTR [RDI+8],RDX
            mul RBX
            add RBP,16
            xor R14,R14
            sub RBP,R9
            xor R15,R15
            add RAX,R12
            adc RDX,0
            mov QWORD PTR [RDI+8],RAX
            mov QWORD PTR [RDI+16],RDX
            mov QWORD PTR [RDI+24],R15
            mov RAX,QWORD PTR [RSI+RBP*1-16]
            lea RDI,QWORD PTR [RSP+56]
            xor R10,R10
            mov R11,QWORD PTR [RDI+8]
            lea R12,QWORD PTR [R14+R10*2]
            shr R10,63
            lea R13,QWORD PTR [RCX+R11*2]
            shr R11,63
            or R13,R10
            mov R10,QWORD PTR [RDI+16]
            mov R14,R11
            mul RAX
            neg R15
            mov R11,QWORD PTR [RDI+24]
            adc R12,RAX
            mov RAX,QWORD PTR [RSI+RBP*1-8]
            mov QWORD PTR [RDI],R12
            adc R13,RDX
            lea RBX,QWORD PTR [R14+R10*2]
            mov QWORD PTR [RDI+8],R13
            sbb R15,R15
            shr R10,63
            lea R8,QWORD PTR [RCX+R11*2]
            shr R11,63
            or R8,R10
            mov R10,QWORD PTR [RDI+32]
            mov R14,R11
            mul RAX
            neg R15
            mov R11,QWORD PTR [RDI+40]
            adc RBX,RAX
            mov RAX,QWORD PTR [RSI+RBP*1]
            mov QWORD PTR [RDI+16],RBX
            adc R8,RDX
            lea RBP,QWORD PTR [RBP+16]
            mov QWORD PTR [RDI+24],R8
            sbb R15,R15
            lea RDI,QWORD PTR [RDI+64]
            jmp .L_40bb40
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bb40:

            lea R12,QWORD PTR [R14+R10*2]
            shr R10,63
            lea R13,QWORD PTR [RCX+R11*2]
            shr R11,63
            or R13,R10
            mov R10,QWORD PTR [RDI-16]
            mov R14,R11
            mul RAX
            neg R15
            mov R11,QWORD PTR [RDI-8]
            adc R12,RAX
            mov RAX,QWORD PTR [RSI+RBP*1-8]
            mov QWORD PTR [RDI-32],R12
            adc R13,RDX
            lea RBX,QWORD PTR [R14+R10*2]
            mov QWORD PTR [RDI-24],R13
            sbb R15,R15
            shr R10,63
            lea R8,QWORD PTR [RCX+R11*2]
            shr R11,63
            or R8,R10
            mov R10,QWORD PTR [RDI]
            mov R14,R11
            mul RAX
            neg R15
            mov R11,QWORD PTR [RDI+8]
            adc RBX,RAX
            mov RAX,QWORD PTR [RSI+RBP*1]
            mov QWORD PTR [RDI-16],RBX
            adc R8,RDX
            lea R12,QWORD PTR [R14+R10*2]
            mov QWORD PTR [RDI-8],R8
            sbb R15,R15
            shr R10,63
            lea R13,QWORD PTR [RCX+R11*2]
            shr R11,63
            or R13,R10
            mov R10,QWORD PTR [RDI+16]
            mov R14,R11
            mul RAX
            neg R15
            mov R11,QWORD PTR [RDI+24]
            adc R12,RAX
            mov RAX,QWORD PTR [RSI+RBP*1+8]
            mov QWORD PTR [RDI],R12
            adc R13,RDX
            lea RBX,QWORD PTR [R14+R10*2]
            mov QWORD PTR [RDI+8],R13
            sbb R15,R15
            shr R10,63
            lea R8,QWORD PTR [RCX+R11*2]
            shr R11,63
            or R8,R10
            mov R10,QWORD PTR [RDI+32]
            mov R14,R11
            mul RAX
            neg R15
            mov R11,QWORD PTR [RDI+40]
            adc RBX,RAX
            mov RAX,QWORD PTR [RSI+RBP*1+16]
            mov QWORD PTR [RDI+16],RBX
            adc R8,RDX
            mov QWORD PTR [RDI+24],R8
            sbb R15,R15
            lea RDI,QWORD PTR [RDI+64]
            add RBP,32
            jne .L_40bb40

            lea R12,QWORD PTR [R14+R10*2]
            shr R10,63
            lea R13,QWORD PTR [RCX+R11*2]
            shr R11,63
            or R13,R10
            mov R10,QWORD PTR [RDI-16]
            mov R14,R11
            mul RAX
            neg R15
            mov R11,QWORD PTR [RDI-8]
            adc R12,RAX
            mov RAX,QWORD PTR [RSI-8]
            mov QWORD PTR [RDI-32],R12
            adc R13,RDX
            lea RBX,QWORD PTR [R14+R10*2]
            mov QWORD PTR [RDI-24],R13
            sbb R15,R15
            shr R10,63
            lea R8,QWORD PTR [RCX+R11*2]
            shr R11,63
            or R8,R10
            mul RAX
            neg R15
            adc RBX,RAX
            adc R8,RDX
            mov QWORD PTR [RDI-16],RBX
            mov QWORD PTR [RDI-8],R8
            movq RBP,XMM2
.L_40bc99:

            xor RAX,RAX
            lea RCX,QWORD PTR [RBP+R9*2]
            lea RDX,QWORD PTR [RSP+R9*2+56]
            mov QWORD PTR [RSP+8],RCX
            lea RDI,QWORD PTR [RSP+R9*1+56]
            mov QWORD PTR [RSP+16],RDX
            neg R9
            jmp .L_40bcc0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40bcc0:

            lea RDI,QWORD PTR [RDI+R9*1]
            mov RBX,QWORD PTR [RDI]
            mov R9,QWORD PTR [RDI+8]
            mov R10,QWORD PTR [RDI+16]
            mov R11,QWORD PTR [RDI+24]
            mov R12,QWORD PTR [RDI+32]
            mov R13,QWORD PTR [RDI+40]
            mov R14,QWORD PTR [RDI+48]
            mov R15,QWORD PTR [RDI+56]
            mov QWORD PTR [RDX],RAX
            lea RDI,QWORD PTR [RDI+64]
            mov R8,RBX
            imul RBX,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RBP]
            mov ECX,8
            jmp .L_40bd00
.L_40bd00:

            mul RBX
            mov RAX,QWORD PTR [RBP+16]
            neg R8
            mov R8,RDX
            adc R8,0
            mul RBX
            add R9,RAX
            mov RAX,QWORD PTR [RBP+32]
            adc RDX,0
            add R8,R9
            mov QWORD PTR [RSP+RCX*8+48],RBX
            mov R9,RDX
            adc R9,0
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RBP+48]
            adc RDX,0
            add R9,R10
            mov RSI,QWORD PTR [RSP+40]
            mov R10,RDX
            adc R10,0
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RBP+64]
            adc RDX,0
            imul RSI,R8
            add R10,R11
            mov R11,RDX
            adc R11,0
            mul RBX
            add R12,RAX
            mov RAX,QWORD PTR [RBP+80]
            adc RDX,0
            add R11,R12
            mov R12,RDX
            adc R12,0
            mul RBX
            add R13,RAX
            mov RAX,QWORD PTR [RBP+96]
            adc RDX,0
            add R12,R13
            mov R13,RDX
            adc R13,0
            mul RBX
            add R14,RAX
            mov RAX,QWORD PTR [RBP+112]
            adc RDX,0
            add R13,R14
            mov R14,RDX
            adc R14,0
            mul RBX
            mov RBX,RSI
            add R15,RAX
            mov RAX,QWORD PTR [RBP]
            adc RDX,0
            add R14,R15
            mov R15,RDX
            adc R15,0
            dec ECX
            jne .L_40bd00

            lea RBP,QWORD PTR [RBP+128]
            xor RAX,RAX
            mov RDX,QWORD PTR [RSP+16]
            cmp RBP,QWORD PTR [RSP+8]
            jae .L_40bf49

            add R8,QWORD PTR [RDI]
            adc R9,QWORD PTR [RDI+8]
            adc R10,QWORD PTR [RDI+16]
            adc R11,QWORD PTR [RDI+24]
            adc R12,QWORD PTR [RDI+32]
            adc R13,QWORD PTR [RDI+40]
            adc R14,QWORD PTR [RDI+48]
            adc R15,QWORD PTR [RDI+56]
            sbb RSI,RSI
            mov RBX,QWORD PTR [RSP+112]
            mov ECX,8
            mov RAX,QWORD PTR [RBP]
            jmp .L_40be20
          .byte 0x90
.L_40be20:

            mul RBX
            add R8,RAX
            mov RAX,QWORD PTR [RBP+16]
            mov QWORD PTR [RDI],R8
            mov R8,RDX
            adc R8,0
            mul RBX
            add R9,RAX
            mov RAX,QWORD PTR [RBP+32]
            adc RDX,0
            add R8,R9
            lea RDI,QWORD PTR [RDI+8]
            mov R9,RDX
            adc R9,0
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RBP+48]
            adc RDX,0
            add R9,R10
            mov R10,RDX
            adc R10,0
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RBP+64]
            adc RDX,0
            add R10,R11
            mov R11,RDX
            adc R11,0
            mul RBX
            add R12,RAX
            mov RAX,QWORD PTR [RBP+80]
            adc RDX,0
            add R11,R12
            mov R12,RDX
            adc R12,0
            mul RBX
            add R13,RAX
            mov RAX,QWORD PTR [RBP+96]
            adc RDX,0
            add R12,R13
            mov R13,RDX
            adc R13,0
            mul RBX
            add R14,RAX
            mov RAX,QWORD PTR [RBP+112]
            adc RDX,0
            add R13,R14
            mov R14,RDX
            adc R14,0
            mul RBX
            mov RBX,QWORD PTR [RSP+RCX*8+40]
            add R15,RAX
            adc RDX,0
            add R14,R15
            mov RAX,QWORD PTR [RBP]
            mov R15,RDX
            adc R15,0
            dec ECX
            jne .L_40be20

            lea RBP,QWORD PTR [RBP+128]
            mov RDX,QWORD PTR [RSP+16]
            cmp RBP,QWORD PTR [RSP+8]
            jae .L_40bf40

            mov RBX,QWORD PTR [RSP+112]
            neg RSI
            mov RAX,QWORD PTR [RBP]
            adc R8,QWORD PTR [RDI]
            adc R9,QWORD PTR [RDI+8]
            adc R10,QWORD PTR [RDI+16]
            adc R11,QWORD PTR [RDI+24]
            adc R12,QWORD PTR [RDI+32]
            adc R13,QWORD PTR [RDI+40]
            adc R14,QWORD PTR [RDI+48]
            adc R15,QWORD PTR [RDI+56]
            sbb RSI,RSI
            mov ECX,8
            jmp .L_40be20
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bf40:

            add R8,QWORD PTR [RDX]
            xor RAX,RAX
            neg RSI
.L_40bf49:

            adc R8,QWORD PTR [RDI]
            adc R9,QWORD PTR [RDI+8]
            adc R10,QWORD PTR [RDI+16]
            adc R11,QWORD PTR [RDI+24]
            adc R12,QWORD PTR [RDI+32]
            adc R13,QWORD PTR [RDI+40]
            adc R14,QWORD PTR [RDI+48]
            adc R15,QWORD PTR [RDI+56]
            adc RAX,0
            mov RCX,QWORD PTR [RBP-16]
            xor RSI,RSI
            movq RBP,XMM2
            mov QWORD PTR [RDI],R8
            mov QWORD PTR [RDI+8],R9
            movq R9,XMM3
            mov QWORD PTR [RDI+16],R10
            mov QWORD PTR [RDI+24],R11
            mov QWORD PTR [RDI+32],R12
            mov QWORD PTR [RDI+40],R13
            mov QWORD PTR [RDI+48],R14
            mov QWORD PTR [RDI+56],R15
            lea RDI,QWORD PTR [RDI+64]
            cmp RDI,RDX
            jb .L_40bcc0

            sub RCX,R15
            lea RBX,QWORD PTR [RDI+R9*1]
            adc RSI,RSI
            mov RCX,R9
            or RAX,RSI
            movq RDI,XMM1
            xor RAX,1
            movq RSI,XMM1
            lea RBP,QWORD PTR [RBP+RAX*8]
            sar RCX,5
            jmp .L_40bfe0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40bfe0:

            mov R12,QWORD PTR [RBX]
            mov R13,QWORD PTR [RBX+8]
            sbb R12,QWORD PTR [RBP]
            mov R14,QWORD PTR [RBX+16]
            sbb R13,QWORD PTR [RBP+16]
            mov R15,QWORD PTR [RBX+24]
            lea RBX,QWORD PTR [RBX+32]
            sbb R14,QWORD PTR [RBP+32]
            mov QWORD PTR [RDI],R12
            sbb R15,QWORD PTR [RBP+48]
            lea RBP,QWORD PTR [RBP+64]
            mov QWORD PTR [RDI+8],R13
            mov QWORD PTR [RDI+16],R14
            mov QWORD PTR [RDI+24],R15
            lea RDI,QWORD PTR [RDI+32]
            inc RCX
            jne .L_40bfe0

            mov R10,R9
            neg R9
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c040:

            test R9D,7
            je .L_40c060

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c060:

            mov RAX,RSP
            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R10D,R9D
            shl R9D,3
            shl R10D,5
            neg R9
            mov R8,QWORD PTR [R8]
            lea R11,QWORD PTR [RSP+R9*2-64]
            sub R11,RSI
            and R11,4095
            cmp R10,R11
            jb .L_40c0a0

            sub RSP,R11
            lea RSP,QWORD PTR [RSP+R9*2-64]
            jmp .L_40c0be
          .byte 0x66
          .byte 0x90
.L_40c0a0:

            lea R10,QWORD PTR [R9*2+4032]
            lea RSP,QWORD PTR [RSP+R9*2-64]
            sub R11,R10
            mov R10,0
            cmovb R11,R10
            sub RSP,R11
.L_40c0be:

            and RSP,-64
            mov R10,R9
            neg R9
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+40],RAX
            mov R11,R9
            lea RAX,QWORD PTR [RSP+48]
            pxor XMM0,XMM0
            jmp .L_40c0e0
.L_40c0e0:

            movdqu XMM1,XMMWORD PTR [RSI]
            movdqu XMM2,XMMWORD PTR [RSI+16]
            movdqu XMM3,XMMWORD PTR [RSI+32]
            movdqa XMMWORD PTR [RAX+R9*1],XMM0
            movdqu XMM4,XMMWORD PTR [RSI+48]
            movdqa XMMWORD PTR [RAX+R9*1+16],XMM0
            lea RSI,QWORD PTR [RSI+64]
            movdqa XMMWORD PTR [RAX],XMM1
            movdqa XMMWORD PTR [RAX+R9*1+32],XMM0
            movdqa XMMWORD PTR [RAX+16],XMM2
            movdqa XMMWORD PTR [RAX+R9*1+48],XMM0
            movdqa XMMWORD PTR [RAX+32],XMM3
            movdqa XMMWORD PTR [RAX+48],XMM4
            lea RAX,QWORD PTR [RAX+64]
            sub R11,64
            jne .L_40c0e0

            movq XMM1,RDI
            movq XMM2,RCX
            mov RBP,RCX
            movq XMM3,R10
            mov R11D,DWORD PTR [RIP+.L_63b410]
            and R11D,524544
            cmp R11D,524544
            jne .L_40c180

            lea RDI,QWORD PTR [RAX+R9*1]
            call .L_40ce97

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RSP+40]
            jmp .L_40c1a0
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c180:

            call .L_40bc99

            pxor XMM0,XMM0
            lea RAX,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RSP+40]
            jmp .L_40c1a0
          .byte 0x90

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40c1a0:

            movdqa XMMWORD PTR [RAX],XMM0
            movdqa XMMWORD PTR [RAX+16],XMM0
            movdqa XMMWORD PTR [RAX+32],XMM0
            movdqa XMMWORD PTR [RAX+48],XMM0
            lea RAX,QWORD PTR [RAX+64]
            sub R9,32
            jne .L_40c1a0

            mov RAX,1
            mov R15,QWORD PTR [RSI-48]
            mov R14,QWORD PTR [RSI-40]
            mov R13,QWORD PTR [RSI-32]
            mov R12,QWORD PTR [RSI-24]
            mov RBP,QWORD PTR [RSI-16]
            mov RBX,QWORD PTR [RSI-8]
            lea RSP,QWORD PTR [RSI]
            ret 
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c200:

            mov RAX,RSP
            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R10D,R9D
            shl R9D,3
            shl R10D,5
            neg R9
            mov R8,QWORD PTR [R8]
            lea R11,QWORD PTR [RSP+R9*2-64]
            sub R11,RSI
            and R11,4095
            cmp R10,R11
            jb .L_40c240

            sub RSP,R11
            lea RSP,QWORD PTR [RSP+R9*2-64]
            jmp .L_40c25e
          .byte 0x66
          .byte 0x90
.L_40c240:

            lea R10,QWORD PTR [R9*2+4032]
            lea RSP,QWORD PTR [RSP+R9*2-64]
            sub R11,R10
            mov R10,0
            cmovb R11,R10
            sub RSP,R11
.L_40c25e:

            and RSP,-64
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+40],RAX
            call .L_40c2a0

            mov RSI,QWORD PTR [RSP+40]
            mov RAX,1
            mov R15,QWORD PTR [RSI-48]
            mov R14,QWORD PTR [RSI-40]
            mov R13,QWORD PTR [RSI-32]
            mov R12,QWORD PTR [RSI-24]
            mov RBP,QWORD PTR [RSI-16]
            mov RBX,QWORD PTR [RSI-8]
            lea RSP,QWORD PTR [RSI]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40c2a0:

            mov QWORD PTR [RSP+8],R9
            neg R9
            shl R9,5
            lea R13,QWORD PTR [RDX+R9*1+256]
            shr R9,10
            mov R10D,DWORD PTR [RAX+8]
            sub R9,1
            mov QWORD PTR [RSP+24],R13
            mov QWORD PTR [RSP+32],R9
            mov QWORD PTR [RSP+64],RDI
            mov R11,R10
            shr R10,3
            and R11,7
            not R10
            lea RAX,QWORD PTR [RIP+.L_40d340]
            and R10,3
            lea RDI,QWORD PTR [RDX+R11*8+96]
            movq XMM4,QWORD PTR [RAX+R10*8]
            movq XMM5,QWORD PTR [RAX+R10*8+8]
            add R11,7
            movq XMM6,QWORD PTR [RAX+R10*8+16]
            movq XMM7,QWORD PTR [RAX+R10*8+24]
            and R11,7
            movq XMM0,QWORD PTR [RDI-96]
            lea RBX,QWORD PTR [RDI+256]
            movq XMM1,QWORD PTR [RDI-32]
            pand XMM0,XMM4
            movq XMM2,QWORD PTR [RDI+32]
            pand XMM1,XMM5
            movq XMM3,QWORD PTR [RDI+96]
            pand XMM2,XMM6
            por XMM0,XMM1
            movq XMM1,QWORD PTR [RBX-96]
            pand XMM3,XMM7
            por XMM0,XMM2
            movq XMM2,QWORD PTR [RBX-32]
            por XMM0,XMM3
            pand XMM1,XMM4
            movq XMM3,QWORD PTR [RBX+32]
            movq RDX,XMM0
            movq XMM0,QWORD PTR [RBX+96]
            lea RDI,QWORD PTR [RDI+512]
            pand XMM2,XMM5
            pand XMM3,XMM6
            lea RBX,QWORD PTR [RSP+R11*8+104]
            mov R9,RDX
            mulx RAX,R8,QWORD PTR [RSI]
            mulx R12,R11,QWORD PTR [RSI+8]
            add R11,RAX
            mulx R13,RAX,QWORD PTR [RSI+16]
            adc R12,RAX
            adc R13,0
            mulx R14,RAX,QWORD PTR [RSI+24]
            mov R15,R8
            imul R8,QWORD PTR [RSP+40]
            xor RBP,RBP
            mov RDX,R8
            por XMM1,XMM2
            pand XMM0,XMM7
            por XMM1,XMM3
            mov QWORD PTR [RSP+16],RDI
            por XMM0,XMM1
            lea RSI,QWORD PTR [RSI+32]
            adcx R13,RAX
            adcx R14,RBP
            mulx R10,RAX,QWORD PTR [RCX]
            adcx R15,RAX
            adox R10,R11
            mulx R11,RAX,QWORD PTR [RCX+16]
            adcx R10,RAX
            adox R11,R12
            mulx R12,RAX,QWORD PTR [RCX+32]
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RBX-32],R10
            adcx R11,RAX
            adox R12,R13
            mulx R15,RAX,QWORD PTR [RCX+48]
            mov RDX,R9
            mov QWORD PTR [RBX-24],R11
            adcx R12,RAX
            adox R15,RBP
            lea RCX,QWORD PTR [RCX+64]
            mov QWORD PTR [RBX-16],R12
.L_40c440:

            adcx R15,RBP
            mulx RAX,R10,QWORD PTR [RSI]
            adcx R10,R14
            mulx R14,R11,QWORD PTR [RSI+8]
            adcx R11,RAX
            mulx RAX,R12,QWORD PTR [RSI+16]
            adcx R12,R14
            mulx R14,R13,QWORD PTR [RSI+24]
            mov RDX,R8
            adcx R13,RAX
            adcx R14,RBP
            lea RSI,QWORD PTR [RSI+32]
            lea RBX,QWORD PTR [RBX+32]
            adox R10,R15
            mulx R15,RAX,QWORD PTR [RCX]
            adcx R10,RAX
            adox R11,R15
            mulx R15,RAX,QWORD PTR [RCX+16]
            adcx R11,RAX
            adox R12,R15
            mulx R15,RAX,QWORD PTR [RCX+32]
            mov QWORD PTR [RBX-40],R10
            adcx R12,RAX
            mov QWORD PTR [RBX-32],R11
            adox R13,R15
            mulx R15,RAX,QWORD PTR [RCX+48]
            mov RDX,R9
            mov QWORD PTR [RBX-24],R12
            adcx R13,RAX
            adox R15,RBP
            lea RCX,QWORD PTR [RCX+64]
            mov QWORD PTR [RBX-16],R13
            dec RDI
            jne .L_40c440

            mov RAX,QWORD PTR [RSP+8]
            movq RDX,XMM0
            adc R15,RBP
            lea RSI,QWORD PTR [RSI+RAX*1]
            add R14,R15
            mov RDI,QWORD PTR [RSP+16]
            adc RBP,RBP
            mov QWORD PTR [RBX-8],R14
            jmp .L_40c520
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c520:

            mov QWORD PTR [RBX],RBP
            lea RBX,QWORD PTR [RBX+RAX*1+32]
            mulx R11,R8,QWORD PTR [RSI]
            xor RBP,RBP
            mov R9,RDX
            mulx R12,R14,QWORD PTR [RSI+8]
            adox R8,QWORD PTR [RBX-32]
            adcx R11,R14
            mulx R13,R15,QWORD PTR [RSI+16]
            adox R11,QWORD PTR [RBX-24]
            adcx R12,R15
            mulx R14,RDX,QWORD PTR [RSI+24]
            adox R12,QWORD PTR [RBX-16]
            adcx R13,RDX
            lea RCX,QWORD PTR [RCX+RAX*2]
            lea RSI,QWORD PTR [RSI+32]
            adox R13,QWORD PTR [RBX-8]
            adcx R14,RBP
            adox R14,RBP
            mov R15,R8
            imul R8,QWORD PTR [RSP+40]
            movq XMM0,QWORD PTR [RDI-96]
            mov RDX,R8
            movq XMM1,QWORD PTR [RDI-32]
            pand XMM0,XMM4
            movq XMM2,QWORD PTR [RDI+32]
            pand XMM1,XMM5
            movq XMM3,QWORD PTR [RDI+96]
            add RDI,256
            pand XMM2,XMM6
            por XMM0,XMM1
            pand XMM3,XMM7
            xor RBP,RBP
            mov QWORD PTR [RSP+16],RDI
            mulx R10,RAX,QWORD PTR [RCX]
            adcx R15,RAX
            adox R10,R11
            mulx R11,RAX,QWORD PTR [RCX+16]
            adcx R10,RAX
            adox R11,R12
            mulx R12,RAX,QWORD PTR [RCX+32]
            adcx R11,RAX
            adox R12,R13
            mulx R15,RAX,QWORD PTR [RCX+48]
            mov RDX,R9
            por XMM0,XMM2
            mov RDI,QWORD PTR [RSP+32]
            mov QWORD PTR [RBX-32],R10
            por XMM0,XMM3
            adcx R12,RAX
            mov QWORD PTR [RBX-24],R11
            adox R15,RBP
            mov QWORD PTR [RBX-16],R12
            lea RCX,QWORD PTR [RCX+64]
            jmp .L_40c640
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c640:

            mulx RAX,R10,QWORD PTR [RSI]
            adcx R15,RBP
            adox R10,R14
            mulx R14,R11,QWORD PTR [RSI+8]
            adcx R10,QWORD PTR [RBX]
            adox R11,RAX
            mulx RAX,R12,QWORD PTR [RSI+16]
            adcx R11,QWORD PTR [RBX+8]
            adox R12,R14
            mulx R14,R13,QWORD PTR [RSI+24]
            mov RDX,R8
            adcx R12,QWORD PTR [RBX+16]
            adox R13,RAX
            adcx R13,QWORD PTR [RBX+24]
            adox R14,RBP
            lea RSI,QWORD PTR [RSI+32]
            lea RBX,QWORD PTR [RBX+32]
            adcx R14,RBP
            adox R10,R15
            mulx R15,RAX,QWORD PTR [RCX]
            adcx R10,RAX
            adox R11,R15
            mulx R15,RAX,QWORD PTR [RCX+16]
            adcx R11,RAX
            adox R12,R15
            mulx R15,RAX,QWORD PTR [RCX+32]
            mov QWORD PTR [RBX-40],R10
            adcx R12,RAX
            adox R13,R15
            mov QWORD PTR [RBX-32],R11
            mulx R15,RAX,QWORD PTR [RCX+48]
            mov RDX,R9
            lea RCX,QWORD PTR [RCX+64]
            mov QWORD PTR [RBX-24],R12
            adcx R13,RAX
            adox R15,RBP
            mov QWORD PTR [RBX-16],R13
            dec RDI
            jne .L_40c640

            mov RAX,QWORD PTR [RSP+8]
            movq RDX,XMM0
            adc R15,RBP
            sub RDI,QWORD PTR [RBX]
            mov RDI,QWORD PTR [RSP+16]
            mov R10,QWORD PTR [RSP+24]
            adc R14,R15
            lea RSI,QWORD PTR [RSI+RAX*1]
            adc RBP,RBP
            mov QWORD PTR [RBX-8],R14
            cmp RDI,R10
            jb .L_40c520

            mov R10,QWORD PTR [RCX-16]
            xor R15,R15
            sub R10,R14
            adc R15,R15
            or RBP,R15
            xor RBP,1
            lea RDI,QWORD PTR [RBX+RAX*1]
            lea RCX,QWORD PTR [RCX+RAX*2]
            sar RAX,5
            lea RBP,QWORD PTR [RCX+RBP*8]
            mov RDX,QWORD PTR [RSP+64]
            mov RCX,RAX
            jmp .L_40d200
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c780:

            mov RAX,RSP
            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R10D,R9D
            shl R9D,3
            shl R10D,5
            neg R9
            mov R8,QWORD PTR [R8]
            lea R11,QWORD PTR [RSP+R9*2-64]
            sub R11,RSI
            and R11,4095
            cmp R10,R11
            jb .L_40c7c0

            sub RSP,R11
            lea RSP,QWORD PTR [RSP+R9*2-64]
            jmp .L_40c7de
          .byte 0x66
          .byte 0x90
.L_40c7c0:

            lea R10,QWORD PTR [R9*2+4032]
            lea RSP,QWORD PTR [RSP+R9*2-64]
            sub R11,R10
            mov R10,0
            cmovb R11,R10
            sub RSP,R11
.L_40c7de:

            and RSP,-64
            mov R10,R9
            neg R9
            pxor XMM0,XMM0
            movq XMM1,RDI
            movq XMM2,RCX
            movq XMM3,R10
            movq XMM4,RDX
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+40],RAX
            call .L_40c880

            call .L_40c880

            call .L_40c880

            call .L_40c880

            call .L_40c880

            mov R9,R10
            mov RDI,RSI
            movq RCX,XMM2
            movq RDX,XMM4
            mov RAX,QWORD PTR [RSP+40]
            call .L_40c2a0

            mov RSI,QWORD PTR [RSP+40]
            mov RAX,1
            mov R15,QWORD PTR [RSI-48]
            mov R14,QWORD PTR [RSI-40]
            mov R13,QWORD PTR [RSI-32]
            mov R12,QWORD PTR [RSI-24]
            mov RBP,QWORD PTR [RSI-16]
            mov RBX,QWORD PTR [RSI-8]
            lea RSP,QWORD PTR [RSI]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c880:

            lea RDI,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RSI+R9*1]
            mov QWORD PTR [RSP+8],R9
            mov QWORD PTR [RSP+16],RBP
            jmp .L_40c8c0
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x66
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40c8ac:

            movdqa XMMWORD PTR DS:[RDI],XMM0
            movdqa XMMWORD PTR [RDI+16],XMM0
            movdqa XMMWORD PTR [RDI+32],XMM0
            movdqa XMMWORD PTR [RDI+48],XMM0
.L_40c8c0:

            movdqa XMMWORD PTR [RDI+64],XMM0
            movdqa XMMWORD PTR [RDI+80],XMM0
            movdqa XMMWORD PTR [RDI+96],XMM0
            movdqa XMMWORD PTR [RDI+112],XMM0
            lea RDI,QWORD PTR [RDI+128]
            sub R9,64
            jne .L_40c8ac

            mov RDX,QWORD PTR [RSI]
            xor R10,R10
            xor R11,R11
            xor R12,R12
            xor R13,R13
            xor R14,R14
            xor R15,R15
            lea RDI,QWORD PTR [RSP+56]
            xor RBP,RBP
            jmp .L_40c900
.L_40c900:

            mulx RAX,R8,QWORD PTR [RSI+8]
            adcx R8,R9
            adox R10,RAX
            mulx RAX,R9,QWORD PTR [RSI+16]
            adcx R9,R10
            adox R11,RAX
            mulx RAX,R10,QWORD PTR [RSI+24]
            adcx R10,R11
            adox R12,RAX
            mulx RAX,R11,QWORD PTR [RSI+32]
            adcx R11,R12
            adox R13,RAX
            mulx RAX,R12,QWORD PTR [RSI+40]
            adcx R12,R13
            adox R14,RAX
            mulx RAX,R13,QWORD PTR [RSI+48]
            adcx R13,R14
            adox RAX,R15
            mulx R15,R14,QWORD PTR [RSI+56]
            mov RDX,QWORD PTR [RSI+8]
            adcx R14,RAX
            adox R15,RBP
            adc R15,QWORD PTR [RDI+64]
            mov QWORD PTR [RDI+8],R8
            mov QWORD PTR [RDI+16],R9
            sbb RCX,RCX
            xor RBP,RBP
            mulx RBX,R8,QWORD PTR [RSI+16]
            mulx RAX,R9,QWORD PTR [RSI+24]
            adcx R8,R10
            adox R9,RBX
            mulx RBX,R10,QWORD PTR [RSI+32]
            adcx R9,R11
            adox R10,RAX
            mulx RAX,R11,QWORD PTR [RSI+40]
            adcx R10,R12
            adox R11,RBX
            mulx RBX,R12,QWORD PTR [RSI+48]
            adcx R11,R13
            adox R12,R14
            mulx R14,R13,QWORD PTR [RSI+56]
            mov RDX,QWORD PTR [RSI+16]
            adcx R12,RAX
            adox R13,RBX
            adcx R13,R15
            adox R14,RBP
            adcx R14,RBP
            mov QWORD PTR [RDI+24],R8
            mov QWORD PTR [RDI+32],R9
            mulx RBX,R8,QWORD PTR [RSI+24]
            mulx RAX,R9,QWORD PTR [RSI+32]
            adcx R8,R10
            adox R9,RBX
            mulx RBX,R10,QWORD PTR [RSI+40]
            adcx R9,R11
            adox R10,RAX
            mulx RAX,R11,QWORD PTR [RSI+48]
            adcx R10,R12
            adox R11,R13
            mulx R13,R12,QWORD PTR [RSI+56]
            mov RDX,QWORD PTR DS:[RSI+24]
            adcx R11,RBX
            adox R12,RAX
            adcx R12,R14
            mov QWORD PTR [RDI+40],R8
            mov QWORD PTR [RDI+48],R9
            mulx RAX,R8,QWORD PTR [RSI+32]
            adox R13,RBP
            adcx R13,RBP
            mulx RBX,R9,QWORD PTR [RSI+40]
            adcx R8,R10
            adox R9,RAX
            mulx RAX,R10,QWORD PTR [RSI+48]
            adcx R9,R11
            adox R10,R12
            mulx R12,R11,QWORD PTR [RSI+56]
            mov RDX,QWORD PTR [RSI+32]
            mov R14,QWORD PTR [RSI+40]
            adcx R10,RBX
            adox R11,RAX
            mov R15,QWORD PTR [RSI+48]
            adcx R11,R13
            adox R12,RBP
            adcx R12,RBP
            mov QWORD PTR [RDI+56],R8
            mov QWORD PTR [RDI+64],R9
            mulx RAX,R9,R14
            mov R8,QWORD PTR [RSI+56]
            adcx R9,R10
            mulx RBX,R10,R15
            adox R10,RAX
            adcx R10,R11
            mulx RAX,R11,R8
            mov RDX,R14
            adox R11,RBX
            adcx R11,R12
            adcx RAX,RBP
            mulx RBX,R14,R15
            mulx R13,R12,R8
            mov RDX,R15
            lea RSI,QWORD PTR [RSI+64]
            adcx R11,R14
            adox R12,RBX
            adcx R12,RAX
            adox R13,RBP
            mulx R14,R8,R8
            adcx R13,R8
            adcx R14,RBP
            cmp RSI,QWORD PTR [RSP+16]
            je .L_40cd60

            neg RCX
            mov RCX,-8
            mov R15,RBP
            mov R8,QWORD PTR [RDI+64]
            adcx R9,QWORD PTR [RDI+72]
            adcx R10,QWORD PTR [RDI+80]
            adcx R11,QWORD PTR [RDI+88]
            adc R12,QWORD PTR [RDI+96]
            adc R13,QWORD PTR [RDI+104]
            adc R14,QWORD PTR [RDI+112]
            adc R15,QWORD PTR [RDI+120]
            lea RBP,QWORD PTR [RSI]
            lea RDI,QWORD PTR [RDI+128]
            sbb RAX,RAX
            mov RDX,QWORD PTR [RSI-64]
            mov QWORD PTR [RSP+24],RAX
            mov QWORD PTR [RSP+32],RDI
            xor EAX,EAX
            jmp .L_40cbe0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cbe0:

            mov RBX,R8
            mulx R8,RAX,QWORD PTR [RBP]
            adcx RBX,RAX
            adox R8,R9
            mulx R9,RAX,QWORD PTR [RBP+8]
            adcx R8,RAX
            adox R9,R10
            mulx R10,RAX,QWORD PTR [RBP+16]
            adcx R9,RAX
            adox R10,R11
            mulx R11,RAX,QWORD PTR [RBP+24]
            adcx R10,RAX
            adox R11,R12
            mulx R12,RAX,QWORD PTR [RBP+32]
            adcx R11,RAX
            adox R12,R13
            mulx R13,RAX,QWORD PTR [RBP+40]
            adcx R12,RAX
            adox R13,R14
            mulx R14,RAX,QWORD PTR [RBP+48]
            mov QWORD PTR [RDI+RCX*8],RBX
            mov EBX,0
            adcx R13,RAX
            adox R14,R15
            mulx R15,RAX,QWORD PTR [RBP+56]
            mov RDX,QWORD PTR [RSI+RCX*8+8]
            adcx R14,RAX
            adox R15,RBX
            adcx R15,RBX
            inc RCX
            jne .L_40cbe0

            lea RBP,QWORD PTR [RBP+64]
            mov RCX,-8
            cmp RBP,QWORD PTR [RSP+16]
            je .L_40cd00

            sub RBX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSI-64]
            adcx R8,QWORD PTR [RDI]
            adcx R9,QWORD PTR [RDI+8]
            adc R10,QWORD PTR [RDI+16]
            adc R11,QWORD PTR [RDI+24]
            adc R12,QWORD PTR [RDI+32]
            adc R13,QWORD PTR [RDI+40]
            adc R14,QWORD PTR [RDI+48]
            adc R15,QWORD PTR [RDI+56]
            lea RDI,QWORD PTR [RDI+64]
            sbb RAX,RAX
            xor EBX,EBX
            mov QWORD PTR [RSP+24],RAX
            jmp .L_40cbe0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cd00:

            sub R8,QWORD PTR [RSP+24]
            mov RCX,QWORD PTR [RSP+32]
            mov RDX,QWORD PTR [RSI]
            xor EBP,EBP
            mov QWORD PTR [RDI],R8
            cmp RDI,RCX
            je .L_40c900

            mov QWORD PTR [RDI+8],R9
            mov R9,QWORD PTR [RCX+8]
            mov QWORD PTR [RDI+16],R10
            mov R10,QWORD PTR [RCX+16]
            mov QWORD PTR [RDI+24],R11
            mov R11,QWORD PTR [RCX+24]
            mov QWORD PTR [RDI+32],R12
            mov R12,QWORD PTR [RCX+32]
            mov QWORD PTR [RDI+40],R13
            mov R13,QWORD PTR [RCX+40]
            mov QWORD PTR [RDI+48],R14
            mov R14,QWORD PTR [RCX+48]
            mov QWORD PTR [RDI+56],R15
            mov R15,QWORD PTR [RCX+56]
            mov RDI,RCX
            jmp .L_40c900
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40cd60:

            mov QWORD PTR [RDI+72],R9
            movq RCX,XMM3
            mov QWORD PTR [RDI+80],R10
            mov QWORD PTR [RDI+88],R11
            mov QWORD PTR [RDI+96],R12
            mov QWORD PTR [RDI+104],R13
            mov QWORD PTR [RDI+112],R14
            lea RDI,QWORD PTR [RSP+56]
            mov RDX,QWORD PTR [RSI+RCX*1]
            mov R11,QWORD PTR [RDI+8]
            xor R10,R10
            mov R9,QWORD PTR [RSP+8]
            adox R11,R11
            mov R12,QWORD PTR [RDI+16]
            mov R13,QWORD PTR [RDI+24]
.L_40cda0:

            mulx RBX,RAX,RDX
            adox R12,R12
            adcx RAX,R10
            mov RDX,QWORD PTR [RSI+RCX*1+8]
            mov R10,QWORD PTR [RDI+32]
            adox R13,R13
            adcx RBX,R11
            mov R11,QWORD PTR [RDI+40]
            mov QWORD PTR [RDI],RAX
            mov QWORD PTR [RDI+8],RBX
            mulx RBX,RAX,RDX
            adox R10,R10
            adcx RAX,R12
            mov RDX,QWORD PTR [RSI+RCX*1+16]
            mov R12,QWORD PTR [RDI+48]
            adox R11,R11
            adcx RBX,R13
            mov R13,QWORD PTR [RDI+56]
            mov QWORD PTR [RDI+16],RAX
            mov QWORD PTR [RDI+24],RBX
            mulx RBX,RAX,RDX
            adox R12,R12
            adcx RAX,R10
            mov RDX,QWORD PTR [RSI+RCX*1+24]
            lea RCX,QWORD PTR [RCX+32]
            mov R10,QWORD PTR [RDI+64]
            adox R13,R13
            adcx RBX,R11
            mov R11,QWORD PTR [RDI+72]
            mov QWORD PTR [RDI+32],RAX
            mov QWORD PTR [RDI+40],RBX
            mulx RBX,RAX,RDX
            adox R10,R10
            adcx RAX,R12
            jrcxz .L_40ce80

            mov RDX,QWORD PTR [RSI+RCX*1]
            adox R11,R11
            adcx RBX,R13
            mov R12,QWORD PTR [RDI+80]
            mov R13,QWORD PTR [RDI+88]
            mov QWORD PTR [RDI+48],RAX
            mov QWORD PTR [RDI+56],RBX
            lea RDI,QWORD PTR [RDI+64]
            nop
            jmp .L_40cda0
.L_40ce80:

            adcx RBX,R13
            mov QWORD PTR [RDI+48],RAX
            mov QWORD PTR [RDI+56],RBX
            lea RDI,QWORD PTR [RDI+64]
            movq RBP,XMM2
.L_40ce97:

            xor EAX,EAX
            mov RBX,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+56]
            lea RCX,QWORD PTR [RBP+R9*2-128]
            mov QWORD PTR [RSP+8],RCX
            mov QWORD PTR [RSP+16],RDI
            lea RDI,QWORD PTR [RSP+56]
            jmp .L_40cec0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cec0:

            mov R9,QWORD PTR [RDI+8]
            mov R10,QWORD PTR [RDI+16]
            mov R11,QWORD PTR [RDI+24]
            mov R12,QWORD PTR [RDI+32]
            mov R8,RDX
            imul RDX,RBX
            mov R13,QWORD PTR [RDI+40]
            mov R14,QWORD PTR [RDI+48]
            mov R15,QWORD PTR [RDI+56]
            mov QWORD PTR [RSP+32],RAX
            lea RDI,QWORD PTR [RDI+64]
            xor RSI,RSI
            mov RCX,-8
            jmp .L_40cf00
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40cf00:

            mov RBX,R8
            mulx R8,RAX,QWORD PTR [RBP]
            adcx RAX,RBX
            adox R8,R9
            mulx R9,RBX,QWORD PTR [RBP+16]
            adcx R8,RBX
            adox R9,R10
            mulx R10,RBX,QWORD PTR [RBP+32]
            adcx R9,RBX
            adox R10,R11
            mulx R11,RBX,QWORD PTR [RBP+48]
            adcx R10,RBX
            adox R11,R12
            mulx R12,RBX,QWORD PTR [RBP+64]
            mov RAX,RDX
            mov RDX,R8
            adcx R11,RBX
            adox R12,R13
            mulx RDX,RBX,QWORD PTR [RSP+40]
            mov RDX,RAX
            mov QWORD PTR [RSP+RCX*8+120],RAX
            mulx R13,RAX,QWORD PTR [RBP+80]
            adcx R12,RAX
            adox R13,R14
            mulx R14,RAX,QWORD PTR [RBP+96]
            adcx R13,RAX
            adox R14,R15
            mulx R15,RAX,QWORD PTR [RBP+112]
            mov RDX,RBX
            adcx R14,RAX
            adox R15,RSI
            adcx R15,RSI
            inc RCX
            jne .L_40cf00

            mov RAX,RSI
            cmp RBP,QWORD PTR [RSP+8]
            jae .L_40d14d

            mov RDX,QWORD PTR [RSP+56]
            add R8,QWORD PTR [RDI]
            lea RBP,QWORD PTR [RBP+128]
            mov RCX,-8
            adcx R9,QWORD PTR [RDI+8]
            adcx R10,QWORD PTR [RDI+16]
            adc R11,QWORD PTR [RDI+24]
            adc R12,QWORD PTR [RDI+32]
            adc R13,QWORD PTR [RDI+40]
            adc R14,QWORD PTR [RDI+48]
            adc R15,QWORD PTR [RDI+56]
            lea RDI,QWORD PTR [RDI+64]
            sbb RAX,RAX
            xor RSI,RSI
            mov QWORD PTR [RSP+24],RAX
            jmp .L_40d020
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d020:

            mov RBX,R8
            mulx R8,RAX,QWORD PTR [RBP]
            adcx RBX,RAX
            adox R8,R9
            mulx R9,RAX,QWORD PTR [RBP+16]
            adcx R8,RAX
            adox R9,R10
            mulx R10,RAX,QWORD PTR [RBP+32]
            adcx R9,RAX
            adox R10,R11
            mulx R11,RAX,QWORD PTR [RBP+48]
            adcx R10,RAX
            adox R11,R12
            mulx R12,RAX,QWORD PTR [RBP+64]
            adcx R11,RAX
            adox R12,R13
            mulx R13,RAX,QWORD PTR [RBP+80]
            adcx R12,RAX
            adox R13,R14
            mulx R14,RAX,QWORD PTR [RBP+96]
            adcx R13,RAX
            adox R14,R15
            mulx R15,RAX,QWORD PTR [RBP+112]
            mov RDX,QWORD PTR [RSP+RCX*8+128]
            adcx R14,RAX
            adox R15,RSI
            mov QWORD PTR [RDI+RCX*8],RBX
            mov RBX,R8
            adcx R15,RSI
            inc RCX
            jne .L_40d020

            cmp RBP,QWORD PTR [RSP+8]
            jae .L_40d140

            sub RSI,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+56]
            lea RBP,QWORD PTR [RBP+128]
            adc R8,QWORD PTR [RDI]
            adc R9,QWORD PTR [RDI+8]
            adc R10,QWORD PTR [RDI+16]
            adc R11,QWORD PTR [RDI+24]
            adc R12,QWORD PTR [RDI+32]
            adc R13,QWORD PTR [RDI+40]
            adc R14,QWORD PTR [RDI+48]
            adc R15,QWORD PTR [RDI+56]
            lea RDI,QWORD PTR [RDI+64]
            sbb RAX,RAX
            sub RCX,8
            xor RSI,RSI
            mov QWORD PTR [RSP+24],RAX
            jmp .L_40d020
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d140:

            add R8,QWORD PTR [RSP+32]
            mov RAX,RSI
            sub RSI,QWORD PTR [RSP+24]
.L_40d14d:

            adc R8,QWORD PTR [RDI]
            movq RCX,XMM3
            adc R9,QWORD PTR [RDI+8]
            mov RSI,QWORD PTR [RBP+112]
            movq RBP,XMM2
            adc R10,QWORD PTR [RDI+16]
            adc R11,QWORD PTR [RDI+24]
            adc R12,QWORD PTR [RDI+32]
            adc R13,QWORD PTR [RDI+40]
            adc R14,QWORD PTR [RDI+48]
            adc R15,QWORD PTR [RDI+56]
            adc RAX,RAX
            mov RBX,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RDI+RCX*1+64]
            mov QWORD PTR [RDI],R8
            lea R8,QWORD PTR [RDI+64]
            mov QWORD PTR [RDI+8],R9
            mov QWORD PTR [RDI+16],R10
            mov QWORD PTR [RDI+24],R11
            mov QWORD PTR [RDI+32],R12
            mov QWORD PTR [RDI+40],R13
            mov QWORD PTR [RDI+48],R14
            mov QWORD PTR [RDI+56],R15
            lea RDI,QWORD PTR [RDI+RCX*1+64]
            cmp R8,QWORD PTR [RSP+16]
            jb .L_40cec0

            xor RBX,RBX
            sub RSI,R15
            adc RBX,RBX
            mov R10,RCX
            or RAX,RBX
            mov R9,RCX
            xor RAX,1
            sar RCX,5
            lea RBP,QWORD PTR [RBP+RAX*8]
            movq RDX,XMM1
            movq RSI,XMM1
            jmp .L_40d200
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d200:

            mov R12,QWORD PTR [RDI]
            mov R13,QWORD PTR [RDI+8]
            sbb R12,QWORD PTR [RBP]
            mov R14,QWORD PTR [RDI+16]
            sbb R13,QWORD PTR [RBP+16]
            mov R15,QWORD PTR [RDI+24]
            lea RDI,QWORD PTR [RDI+32]
            sbb R14,QWORD PTR [RBP+32]
            mov QWORD PTR [RDX],R12
            sbb R15,QWORD PTR [RBP+48]
            lea RBP,QWORD PTR [RBP+64]
            mov QWORD PTR [RDX+8],R13
            mov QWORD PTR [RDX+16],R14
            mov QWORD PTR [RDX+24],R15
            lea RDX,QWORD PTR [RDX+32]
            inc RCX
            jne .L_40d200

            neg R9
            ret 

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d250:

            lea R10,QWORD PTR [RDI]
            lea R11,QWORD PTR [RDI+1]
            mov ECX,ESI
            shr ESI,4
            and ECX,15
            lea EAX,DWORD PTR [RCX-8]
            cmp ECX,11
            cmova R10,R11
            cmova ECX,EAX
            movzx EAX,WORD PTR [R10+RSI*2]
            shr EAX,CL
            and EAX,31
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d280:

            cmp ESI,0
            je .L_40d29f

            lea RDX,QWORD PTR [RDX+RCX*8]
.L_40d289:

            mov RAX,QWORD PTR [RDI]
            lea RDI,QWORD PTR [RDI+8]
            mov QWORD PTR [RDX],RAX
            lea RDX,QWORD PTR [RDX+256]
            sub ESI,1
            jne .L_40d289
.L_40d29f:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40d2b0:

            mov R11D,ECX
            shr ECX,3
            and R11,7
            not ECX
            lea RAX,QWORD PTR [RIP+.L_40d340]
            and ECX,3
            lea RDX,QWORD PTR [RDX+R11*8+128]
            movq XMM4,QWORD PTR [RAX+RCX*8]
            movq XMM5,QWORD PTR [RAX+RCX*8+8]
            movq XMM6,QWORD PTR [RAX+RCX*8+16]
            movq XMM7,QWORD PTR [RAX+RCX*8+24]
            jmp .L_40d2f0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d2f0:

            movq XMM0,QWORD PTR [RDX-128]
            movq XMM1,QWORD PTR [RDX-64]
            pand XMM0,XMM4
            movq XMM2,QWORD PTR [RDX]
            pand XMM1,XMM5
            movq XMM3,QWORD PTR [RDX+64]
            pand XMM2,XMM6
            por XMM0,XMM1
            pand XMM3,XMM7
            por XMM0,XMM2
            lea RDX,QWORD PTR [RDX+256]
            por XMM0,XMM3
            movq QWORD PTR [RDI],XMM0
            lea RDI,QWORD PTR [RDI+8]
            sub ESI,1
            jne .L_40d2f0

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40d340:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x6f
          .byte 0x6e
          .byte 0x74
          .byte 0x67
          .byte 0x6f
          .byte 0x6d
          .byte 0x65
          .byte 0x72
          .byte 0x79
          .byte 0x20
          .byte 0x4d
          .byte 0x75
          .byte 0x6c
          .byte 0x74
          .byte 0x69
          .byte 0x70
          .byte 0x6c
          .byte 0x69
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x77
          .byte 0x69
          .byte 0x74
          .byte 0x68
          .byte 0x20
          .byte 0x73
          .byte 0x63
          .byte 0x61
          .byte 0x74
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x2f
          .byte 0x67
          .byte 0x61
          .byte 0x74
          .byte 0x68
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x66
          .byte 0x6f
          .byte 0x72
          .byte 0x20
          .byte 0x78
          .byte 0x38
          .byte 0x36
          .byte 0x5f
          .byte 0x36
          .byte 0x34
          .byte 0x2c
          .byte 0x20
          .byte 0x43
          .byte 0x52
          .byte 0x59
          .byte 0x50
          .byte 0x54
          .byte 0x4f
          .byte 0x47
          .byte 0x41
          .byte 0x4d
          .byte 0x53
          .byte 0x20
          .byte 0x62
          .byte 0x79
          .byte 0x20
          .byte 0x3c
          .byte 0x61
          .byte 0x70
          .byte 0x70
          .byte 0x72
          .byte 0x6f
          .byte 0x40
          .byte 0x6f
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x73
          .byte 0x73
          .byte 0x6c
          .byte 0x2e
          .byte 0x6f
          .string "rg>"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40d3e0:

            push R15
            push R14
            push R13
            push R12
            mov R13,R9
            push RBP
            push RBX
            mov RBP,RSI
            sub RSP,5688
.L_40d3f7:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+5672],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP],RDX
            mov QWORD PTR [RSP+24],RAX
            and RAX,-64
            lea RBX,QWORD PTR [RAX+64]
            mov RAX,RBX
            lea R15,QWORD PTR [RBX+960]
            lea R14,QWORD PTR [RBX+320]
            and EAX,4095
            lea R12,QWORD PTR [RBX+640]
            add RAX,320
            shr RAX,12
            test RAX,RAX
            jne .L_40d45d

            mov RAX,R14
            mov R14,R12
            mov R12,RBX
            mov RBX,RAX
.L_40d45d:

            mov RSI,RCX
            mov RDI,R12
            mov QWORD PTR [RSP+16],R8
            call .L_411000

            mov RSI,RBP
            mov RDI,R14
            mov EBP,1014
            call .L_411000

            mov R8,QWORD PTR [RSP+16]
            mov RDI,R15
            mov RSI,R8
            call .L_411000

            mov R8,R13
            mov RCX,R12
            mov RDX,R15
            mov RSI,R15
            mov RDI,R15
            call .L_410440

            lea RDX,QWORD PTR [RIP+.L_40dd80]
            mov R8,R13
            mov RCX,R12
            mov RSI,R15
            mov RDI,R15
            call .L_410440

            lea RDX,QWORD PTR [RIP+.L_40dec0]
            mov R8,R13
            mov RCX,R12
            mov RSI,R15
            mov RDI,RBX
            call .L_410440

            mov R8,R13
            mov RCX,R12
            mov RDX,R15
            mov RSI,R14
            mov RDI,R14
            call .L_410440

            xor EDX,EDX
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov EDX,1
            mov RSI,R14
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,R14
            mov RDI,RBX
            call .L_40f880

            mov EDX,2
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,4
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,8
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,16
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,17
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov EDX,2
            mov RSI,R15
            mov RDI,RBX
            call .L_4112c0

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,3
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,6
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,12
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,24
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,25
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov EDX,4
            mov RSI,R15
            mov RDI,RBX
            call .L_4112c0

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,5
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,10
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,20
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,21
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov EDX,6
            mov RSI,R15
            mov RDI,RBX
            call .L_4112c0

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,7
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,14
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,28
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,29
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov EDX,8
            mov RSI,R15
            mov RDI,RBX
            call .L_4112c0

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,9
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,18
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,19
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov EDX,10
            mov RSI,R15
            mov RDI,RBX
            call .L_4112c0

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,11
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,22
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,23
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov EDX,12
            mov RSI,R15
            mov RDI,RBX
            call .L_4112c0

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,13
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,26
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,27
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov EDX,14
            mov RSI,R15
            mov RDI,RBX
            call .L_4112c0

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,15
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8D,1
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov EDX,30
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov EDX,31
            mov RSI,RBX
            mov RDI,R15
            call .L_411260

            mov RAX,QWORD PTR [RSP]
            mov RSI,R15
            mov RDI,RBX
            movzx EAX,BYTE PTR [RAX+127]
            mov EDX,EAX
            mov BYTE PTR [RSP+16],AL
            shr DL,3
            movzx EDX,DL
            call .L_4112c0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40da00:

            mov R8D,5
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov RSI,QWORD PTR [RSP]
            mov EAX,EBP
            mov ECX,EBP
            sar EAX,3
            and ECX,7
            mov RDI,R14
            cdqe 
            sub EBP,5
            movzx EDX,WORD PTR [RSI+RAX*1]
            mov RSI,R15
            sar EDX,CL
            and EDX,31
            call .L_4112c0

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            cmp EBP,-1
            jne .L_40da00

            mov R8D,4
            mov RCX,R13
            mov RDX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_40f880

            mov RAX,QWORD PTR [RSP]
            mov RSI,R15
            mov RDI,R14
            movzx EDX,BYTE PTR [RAX]
            and EDX,15
            call .L_4112c0

            mov R8,R13
            mov RCX,R12
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            lea RDX,QWORD PTR [RIP+.L_40dec0]
            mov R8,R13
            mov RCX,R12
            mov RSI,RBX
            mov RDI,RBX
            call .L_410440

            mov RDI,QWORD PTR [RSP+8]
            mov RSI,RBX
            call .L_410d40

            mov RDI,QWORD PTR [RSP+24]
            mov ESI,5632
            call .L_41aa70

            mov RAX,QWORD PTR [RSP+5672]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40daf0

            add RSP,5688
.L_40dae5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40daf0:

            call __stack_chk_fail@PLT
.L_40daf5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40db00:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R12,R8
            push RBP
            push RBX
            mov RBP,RCX
            sub RSP,1272
.L_40db1a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1256],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP],RDX
            xor EDX,EDX
            mov QWORD PTR [RSP+24],R9
            mov QWORD PTR [RSP+16],RAX
            and RAX,-64
            lea R14,QWORD PTR [RAX+64]
            mov RAX,QWORD PTR [RCX]
            lea RBX,QWORD PTR [R14+1088]
            mov RDI,R14
            lea R13,QWORD PTR [R14+1024]
            neg RAX
            mov QWORD PTR [R14+1088],RAX
            mov RAX,QWORD PTR [RCX+8]
            mov RSI,RBX
            not RAX
            mov QWORD PTR [R14+1096],RAX
            mov RAX,QWORD PTR [RCX+16]
            not RAX
            mov QWORD PTR [R14+1104],RAX
            mov RAX,QWORD PTR [RCX+24]
            not RAX
            mov QWORD PTR [R14+1112],RAX
            mov RAX,QWORD PTR [RCX+32]
            not RAX
            mov QWORD PTR [R14+1120],RAX
            mov RAX,QWORD PTR [RCX+40]
            not RAX
            mov QWORD PTR [R14+1128],RAX
            mov RAX,QWORD PTR [RCX+48]
            not RAX
            mov QWORD PTR [R14+1136],RAX
            mov RAX,QWORD PTR [RCX+56]
            not RAX
            mov QWORD PTR [R14+1144],RAX
            call .L_40f7f0

            mov R9,QWORD PTR [RSP+24]
            mov R8,R12
            mov RCX,RBP
            mov RSI,R15
            mov RDI,R13
            mov R15D,3
            mov RDX,R9
            call .L_40e900

            mov EDX,1
            mov RSI,R13
            mov RDI,R14
            call .L_40f7f0

            mov R8D,1
            mov RCX,R12
            mov RDX,RBP
            mov RSI,R13
            mov RDI,RBX
            call .L_40e000

            mov EDX,2
            mov RSI,RBX
            mov RDI,R14
            call .L_40f7f0

            nop
            nop
            nop
.L_40dc30:

            mov R9D,R15D
            mov R8,R14
            mov RCX,R12
            mov RDX,RBP
            mov RSI,R13
            mov RDI,RBX
            add R15D,1
            call .L_40eee0

            cmp R15D,16
            jne .L_40dc30

            mov R15,QWORD PTR [RSP]
            mov RSI,R14
            mov RDI,RBX
            movzx EDX,BYTE PTR [R15+63]
            mov R13D,EDX
            shr EDX,4
            call .L_40f820

            mov R8D,4
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            call .L_40e000

            mov R9D,R13D
            mov R8,R12
            mov RCX,RBP
            and R9D,15
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_40ea20

            mov RAX,R15
            lea R15,QWORD PTR [R15+62]
            sub RAX,1
            mov QWORD PTR [RSP],RAX
            nop
            nop
            nop
            nop
.L_40dcb0:

            movzx R13D,BYTE PTR [R15]
            mov R8D,4
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            call .L_40e000

            mov R8,R12
            mov RCX,RBP
            mov RDX,R14
            movzx R9D,R13B
            mov RSI,RBX
            mov RDI,RBX
            shr R9D,4
            sub R15,1
            call .L_40ea20

            mov R8D,4
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            call .L_40e000

            mov R9D,R13D
            mov R8,R12
            mov RCX,RBP
            and R9D,15
            mov RDX,R14
            mov RSI,RBX
            mov RDI,RBX
            call .L_40ea20

            cmp R15,QWORD PTR [RSP]
            jne .L_40dcb0

            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            call .L_40f0c0

            mov RDI,QWORD PTR [RSP+16]
            mov ESI,1216
            call .L_41aa70

            mov RAX,QWORD PTR [RSP+1256]
            xor RAX,QWORD PTR FS:[40]
            jne .L_40dd6a

            add RSP,1272
.L_40dd5f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_40dd6a:

            call __stack_chk_fail@PLT
.L_40dd6f:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_40dd80:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
          .zero 1
.L_40dec0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e000:

            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            sub RSP,152
            mov RBP,RDX
            mov RDX,QWORD PTR [RSI]
            mov RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RSP+128],RCX
            mov R11D,524544
            and R11D,DWORD PTR [RIP+.L_63b410]
            cmp R11D,524544
            je .L_40e480

            jmp .L_40e040
          .byte 0x90
.L_40e040:

            mov DWORD PTR [RSP+136],R8D
            mov RBX,RDX
            mul RDX
            mov R8,RAX
            mov RAX,QWORD PTR [RSI+16]
            mov R9,RDX
            mul RBX
            add R9,RAX
            mov RAX,QWORD PTR [RSI+24]
            mov R10,RDX
            adc R10,0
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RSI+32]
            mov R11,RDX
            adc R11,0
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RSI+40]
            mov R12,RDX
            adc R12,0
            mul RBX
            add R12,RAX
            mov RAX,QWORD PTR [RSI+48]
            mov R13,RDX
            adc R13,0
            mul RBX
            add R13,RAX
            mov RAX,QWORD PTR [RSI+56]
            mov R14,RDX
            adc R14,0
            mul RBX
            add R14,RAX
            mov RAX,RBX
            mov R15,RDX
            adc R15,0
            add R8,R8
            mov RCX,R9
            adc R9,R9
            mul RAX
            mov QWORD PTR [RSP],RAX
            add R8,RDX
            adc R9,0
            mov QWORD PTR [RSP+8],R8
            shr RCX,63
            mov R8,QWORD PTR [RSI+8]
            mov RAX,QWORD PTR [RSI+16]
            mul R8
            add R10,RAX
            mov RAX,QWORD PTR [RSI+24]
            mov RBX,RDX
            adc RBX,0
            mul R8
            add R11,RAX
            mov RAX,QWORD PTR [RSI+32]
            adc RDX,0
            add R11,RBX
            mov RBX,RDX
            adc RBX,0
            mul R8
            add R12,RAX
            mov RAX,QWORD PTR [RSI+40]
            adc RDX,0
            add R12,RBX
            mov RBX,RDX
            adc RBX,0
            mul R8
            add R13,RAX
            mov RAX,QWORD PTR [RSI+48]
            adc RDX,0
            add R13,RBX
            mov RBX,RDX
            adc RBX,0
            mul R8
            add R14,RAX
            mov RAX,QWORD PTR [RSI+56]
            adc RDX,0
            add R14,RBX
            mov RBX,RDX
            adc RBX,0
            mul R8
            add R15,RAX
            mov RAX,R8
            adc RDX,0
            add R15,RBX
            mov R8,RDX
            mov RDX,R10
            adc R8,0
            add RDX,RDX
            lea R10,QWORD PTR [RCX+R10*2]
            mov RBX,R11
            adc R11,R11
            mul RAX
            add R9,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+24],R10
            shr RBX,63
            mov R9,QWORD PTR [RSI+16]
            mov RAX,QWORD PTR [RSI+24]
            mul R9
            add R12,RAX
            mov RAX,QWORD PTR [RSI+32]
            mov RCX,RDX
            adc RCX,0
            mul R9
            add R13,RAX
            mov RAX,QWORD PTR [RSI+40]
            adc RDX,0
            add R13,RCX
            mov RCX,RDX
            adc RCX,0
            mul R9
            add R14,RAX
            mov RAX,QWORD PTR [RSI+48]
            adc RDX,0
            add R14,RCX
            mov RCX,RDX
            adc RCX,0
            mul R9
            mov R10,R12
            lea R12,QWORD PTR [RBX+R12*2]
            add R15,RAX
            mov RAX,QWORD PTR [RSI+56]
            adc RDX,0
            add R15,RCX
            mov RCX,RDX
            adc RCX,0
            mul R9
            shr R10,63
            add R8,RAX
            mov RAX,R9
            adc RDX,0
            add R8,RCX
            mov R9,RDX
            adc R9,0
            mov RCX,R13
            lea R13,QWORD PTR [R10+R13*2]
            mul RAX
            add R11,RAX
            adc R12,RDX
            adc R13,0
            mov QWORD PTR [RSP+32],R11
            mov QWORD PTR [RSP+40],R12
            shr RCX,63
            mov R10,QWORD PTR [RSI+24]
            mov RAX,QWORD PTR [RSI+32]
            mul R10
            add R14,RAX
            mov RAX,QWORD PTR [RSI+40]
            mov RBX,RDX
            adc RBX,0
            mul R10
            add R15,RAX
            mov RAX,QWORD PTR [RSI+48]
            adc RDX,0
            add R15,RBX
            mov RBX,RDX
            adc RBX,0
            mul R10
            mov R12,R14
            lea R14,QWORD PTR [RCX+R14*2]
            add R8,RAX
            mov RAX,QWORD PTR [RSI+56]
            adc RDX,0
            add R8,RBX
            mov RBX,RDX
            adc RBX,0
            mul R10
            shr R12,63
            add R9,RAX
            mov RAX,R10
            adc RDX,0
            add R9,RBX
            mov R10,RDX
            adc R10,0
            mov RBX,R15
            lea R15,QWORD PTR [R12+R15*2]
            mul RAX
            add R13,RAX
            adc R14,RDX
            adc R15,0
            mov QWORD PTR [RSP+48],R13
            mov QWORD PTR [RSP+56],R14
            shr RBX,63
            mov R11,QWORD PTR [RSI+32]
            mov RAX,QWORD PTR [RSI+40]
            mul R11
            add R8,RAX
            mov RAX,QWORD PTR [RSI+48]
            mov RCX,RDX
            adc RCX,0
            mul R11
            add R9,RAX
            mov RAX,QWORD PTR [RSI+56]
            adc RDX,0
            mov R12,R8
            lea R8,QWORD PTR [RBX+R8*2]
            add R9,RCX
            mov RCX,RDX
            adc RCX,0
            mul R11
            shr R12,63
            add R10,RAX
            mov RAX,R11
            adc RDX,0
            add R10,RCX
            mov R11,RDX
            adc R11,0
            mov RCX,R9
            lea R9,QWORD PTR [R12+R9*2]
            mul RAX
            add R15,RAX
            adc R8,RDX
            adc R9,0
            mov QWORD PTR [RSP+64],R15
            mov QWORD PTR [RSP+72],R8
            shr RCX,63
            mov R12,QWORD PTR [RSI+40]
            mov RAX,QWORD PTR [RSI+48]
            mul R12
            add R10,RAX
            mov RAX,QWORD PTR [RSI+56]
            mov RBX,RDX
            adc RBX,0
            mul R12
            add R11,RAX
            mov RAX,R12
            mov R15,R10
            lea R10,QWORD PTR [RCX+R10*2]
            adc RDX,0
            shr R15,63
            add R11,RBX
            mov R12,RDX
            adc R12,0
            mov RBX,R11
            lea R11,QWORD PTR [R15+R11*2]
            mul RAX
            add R9,RAX
            adc R10,RDX
            adc R11,0
            mov QWORD PTR [RSP+80],R9
            mov QWORD PTR [RSP+88],R10
            mov R13,QWORD PTR [RSI+48]
            mov RAX,QWORD PTR [RSI+56]
            mul R13
            add R12,RAX
            mov RAX,R13
            mov R13,RDX
            adc R13,0
            xor R14,R14
            shl RBX,1
            adc R12,R12
            adc R13,R13
            adc R14,R14
            mul RAX
            add R11,RAX
            adc R12,RDX
            adc R13,0
            mov QWORD PTR [RSP+96],R11
            mov QWORD PTR [RSP+104],R12
            mov RAX,QWORD PTR [RSI+56]
            mul RAX
            add R13,RAX
            adc RDX,0
            add R14,RDX
            mov QWORD PTR [RSP+112],R13
            mov QWORD PTR [RSP+120],R14
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+56]
            call .L_40f1c0

            add R8,QWORD PTR [RSP+64]
            adc R9,QWORD PTR [RSP+72]
            adc R10,QWORD PTR [RSP+80]
            adc R11,QWORD PTR [RSP+88]
            adc R12,QWORD PTR [RSP+96]
            adc R13,QWORD PTR [RSP+104]
            adc R14,QWORD PTR [RSP+112]
            adc R15,QWORD PTR [RSP+120]
            sbb RCX,RCX
            call .L_40f3a0

            mov RDX,R8
            mov RAX,R9
            mov R8D,DWORD PTR [RSP+136]
            mov RSI,RDI
            dec R8D
            jne .L_40e040

            jmp .L_40e8c3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e480:

            mov DWORD PTR [RSP+136],R8D
            movq XMM0,RDI
            movq XMM1,RBP
            mulx R9,R8,RAX
            mulx R10,RCX,QWORD PTR [RSI+16]
            xor RBP,RBP
            mulx R11,RAX,QWORD PTR [RSI+24]
            adcx R9,RCX
            mulx R12,RCX,QWORD PTR [RSI+32]
            adcx R10,RAX
            mulx R13,RAX,QWORD PTR [RSI+40]
            adcx R11,RCX
            mulx R14,RCX,QWORD PTR [RSI+48]
            adcx R12,RAX
            adcx R13,RCX
            mulx R15,RAX,QWORD PTR [RSI+56]
            adcx R14,RAX
            adcx R15,RBP
            mov RCX,R9
            shld R9,R8,1
            shl R8,1
            xor EBP,EBP
            mulx RDX,RAX,RDX
            adcx R8,RDX
            mov RDX,QWORD PTR [RSI+8]
            adcx R9,RBP
            mov QWORD PTR [RSP],RAX
            mov QWORD PTR [RSP+8],R8
            mulx RBX,RAX,QWORD PTR [RSI+16]
            adox R10,RAX
            adcx R11,RBX
            mulx R8,RDI,QWORD PTR [RSI+24]
            adox R11,RDI
            adcx R12,R8
            mulx RBX,RAX,QWORD PTR [RSI+32]
            adox R12,RAX
            adcx R13,RBX
            mulx R8,RDI,QWORD PTR [RSI+40]
            adox R13,RDI
            adcx R14,R8
            mulx RBX,RAX,QWORD PTR [RSI+48]
            adox R14,RAX
            adcx R15,RBX
            mulx R8,RDI,QWORD PTR [RSI+56]
            adox R15,RDI
            adcx R8,RBP
            adox R8,RBP
            mov RBX,R11
            shld R11,R10,1
            shld R10,RCX,1
            xor EBP,EBP
            mulx RCX,RAX,RDX
            mov RDX,QWORD PTR [RSI+16]
            adcx R9,RAX
            adcx R10,RCX
            adcx R11,RBP
            mov QWORD PTR [RSP+16],R9
            mov QWORD PTR [RSP+24],R10
            mulx R9,RDI,QWORD PTR [RSI+24]
            adox R12,RDI
            adcx R13,R9
            mulx RCX,RAX,QWORD PTR [RSI+32]
            adox R13,RAX
            adcx R14,RCX
            mulx R9,RDI,QWORD PTR [RSI+40]
            adox R14,RDI
            adcx R15,R9
            mulx RCX,RAX,QWORD PTR [RSI+48]
            adox R15,RAX
            adcx R8,RCX
            mulx R9,RDI,QWORD PTR [RSI+56]
            adox R8,RDI
            adcx R9,RBP
            adox R9,RBP
            mov RCX,R13
            shld R13,R12,1
            shld R12,RBX,1
            xor EBP,EBP
            mulx RDX,RAX,RDX
            adcx R11,RAX
            adcx R12,RDX
            mov RDX,QWORD PTR [RSI+24]
            adcx R13,RBP
            mov QWORD PTR [RSP+32],R11
            mov QWORD PTR [RSP+40],R12
            mulx RBX,RAX,QWORD PTR [RSI+32]
            adox R14,RAX
            adcx R15,RBX
            mulx R10,RDI,QWORD PTR [RSI+40]
            adox R15,RDI
            adcx R8,R10
            mulx RBX,RAX,QWORD PTR [RSI+48]
            adox R8,RAX
            adcx R9,RBX
            mulx R10,RDI,QWORD PTR [RSI+56]
            adox R9,RDI
            adcx R10,RBP
            adox R10,RBP
            mov RBX,R15
            shld R15,R14,1
            shld R14,RCX,1
            xor EBP,EBP
            mulx RDX,RAX,RDX
            adcx R13,RAX
            adcx R14,RDX
            mov RDX,QWORD PTR [RSI+32]
            adcx R15,RBP
            mov QWORD PTR [RSP+48],R13
            mov QWORD PTR [RSP+56],R14
            mulx R11,RDI,QWORD PTR [RSI+40]
            adox R8,RDI
            adcx R9,R11
            mulx RCX,RAX,QWORD PTR [RSI+48]
            adox R9,RAX
            adcx R10,RCX
            mulx R11,RDI,QWORD PTR [RSI+56]
            adox R10,RDI
            adcx R11,RBP
            adox R11,RBP
            mov RCX,R9
            shld R9,R8,1
            shld R8,RBX,1
            xor EBP,EBP
            mulx RDX,RAX,RDX
            adcx R15,RAX
            adcx R8,RDX
            mov RDX,QWORD PTR [RSI+40]
            adcx R9,RBP
            mov QWORD PTR [RSP+64],R15
            mov QWORD PTR [RSP+72],R8
            mulx RBX,RAX,QWORD PTR [RSI+48]
            adox R10,RAX
            adcx R11,RBX
            mulx R12,RDI,QWORD PTR [RSI+56]
            adox R11,RDI
            adcx R12,RBP
            adox R12,RBP
            mov RBX,R11
            shld R11,R10,1
            shld R10,RCX,1
            xor EBP,EBP
            mulx RDX,RAX,RDX
            adcx R9,RAX
            adcx R10,RDX
            mov RDX,QWORD PTR [RSI+48]
            adcx R11,RBP
            mov QWORD PTR [RSP+80],R9
            mov QWORD PTR [RSP+88],R10
            mulx R13,RAX,QWORD PTR [RSI+56]
            adox R12,RAX
            adox R13,RBP
            xor R14,R14
            shld R14,R13,1
            shld R13,R12,1
            shld R12,RBX,1
            xor EBP,EBP
            mulx RDX,RAX,RDX
            adcx R11,RAX
            adcx R12,RDX
            mov RDX,QWORD PTR [RSI+56]
            adcx R13,RBP
            mov QWORD PTR [RSP+96],R11
            mov QWORD PTR [RSP+104],R12
            mulx RDX,RAX,RDX
            adox R13,RAX
            adox RDX,RBP
            add R14,RDX
            mov QWORD PTR [RSP+112],R13
            mov QWORD PTR [RSP+120],R14
            movq RDI,XMM0
            movq RBP,XMM1
            mov RDX,QWORD PTR [RSP+128]
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+56]
            call .L_40f2c0

            add R8,QWORD PTR [RSP+64]
            adc R9,QWORD PTR [RSP+72]
            adc R10,QWORD PTR [RSP+80]
            adc R11,QWORD PTR [RSP+88]
            adc R12,QWORD PTR [RSP+96]
            adc R13,QWORD PTR [RSP+104]
            adc R14,QWORD PTR [RSP+112]
            adc R15,QWORD PTR [RSP+120]
            sbb RCX,RCX
            call .L_40f3a0

            mov RDX,R8
            mov RAX,R9
            mov R8D,DWORD PTR [RSP+136]
            mov RSI,RDI
            dec R8D
            jne .L_40e480
.L_40e8c3:

            lea RAX,QWORD PTR [RSP+200]
            mov R15,QWORD PTR [RAX-48]
            mov R14,QWORD PTR [RAX-40]
            mov R13,QWORD PTR [RAX-32]
            mov R12,QWORD PTR [RAX-24]
            mov RBP,QWORD PTR [RAX-16]
            mov RBX,QWORD PTR [RAX-8]
            lea RSP,QWORD PTR [RAX]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40e900:

            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            sub RSP,152
            movq XMM0,RDI
            movq XMM1,RCX
            mov QWORD PTR [RSP+128],R8
            mov R11D,524544
            and R11D,DWORD PTR [RIP+.L_63b410]
            cmp R11D,524544
            je .L_40e980

            mov RBX,QWORD PTR [RDX]
            mov RBP,RDX
            call .L_40f460

            movq RDI,XMM0
            movq RBP,XMM1
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+56]
            call .L_40f1c0

            jmp .L_40e9c9
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40e980:

            mov RBP,RDX
            mov RDX,QWORD PTR [RDX]
            call .L_40f600

            movq RDI,XMM0
            movq RBP,XMM1
            mov RDX,QWORD PTR [RSP+128]
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+56]
            call .L_40f2c0
.L_40e9c9:

            add R8,QWORD PTR [RSP+64]
            adc R9,QWORD PTR [RSP+72]
            adc R10,QWORD PTR [RSP+80]
            adc R11,QWORD PTR [RSP+88]
            adc R12,QWORD PTR [RSP+96]
            adc R13,QWORD PTR [RSP+104]
            adc R14,QWORD PTR [RSP+112]
            adc R15,QWORD PTR [RSP+120]
            sbb RCX,RCX
            call .L_40f3a0

            lea RAX,QWORD PTR [RSP+200]
            mov R15,QWORD PTR [RAX-48]
            mov R14,QWORD PTR [RAX-40]
            mov R13,QWORD PTR [RAX-32]
            mov R12,QWORD PTR [RAX-24]
            mov RBP,QWORD PTR [RAX-16]
            mov RBX,QWORD PTR [RAX-8]
            lea RSP,QWORD PTR [RAX]
            ret 
          .byte 0x66
          .byte 0x90
.L_40ea20:

            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R9D,R9D
            sub RSP,152
            mov R11D,524544
            and R11D,DWORD PTR [RIP+.L_63b410]
            cmp R11D,524544
            je .L_40ec80

            mov EAX,DWORD PTR [RDX+R9*4+64]
            movq XMM0,RDI
            mov EBX,DWORD PTR [RDX+R9*4]
            movq XMM1,RCX
            mov QWORD PTR [RSP+128],R8
            shl RAX,32
            or RBX,RAX
            mov RAX,QWORD PTR [RSI]
            mov RCX,QWORD PTR [RSI+8]
            lea RBP,QWORD PTR [RDX+R9*4+128]
            mul RBX
            mov QWORD PTR [RSP],RAX
            mov RAX,RCX
            mov R8,RDX
            mul RBX
            movd XMM4,DWORD PTR [RBP]
            add R8,RAX
            mov RAX,QWORD PTR [RSI+16]
            mov R9,RDX
            adc R9,0
            mul RBX
            movd XMM5,DWORD PTR [RBP+64]
            add R9,RAX
            mov RAX,QWORD PTR [RSI+24]
            mov R10,RDX
            adc R10,0
            mul RBX
            pslldq XMM5,4
            add R10,RAX
            mov RAX,QWORD PTR [RSI+32]
            mov R11,RDX
            adc R11,0
            mul RBX
            por XMM4,XMM5
            add R11,RAX
            mov RAX,QWORD PTR [RSI+40]
            mov R12,RDX
            adc R12,0
            mul RBX
            add R12,RAX
            mov RAX,QWORD PTR [RSI+48]
            mov R13,RDX
            adc R13,0
            mul RBX
            lea RBP,QWORD PTR [RBP+128]
            add R13,RAX
            mov RAX,QWORD PTR [RSI+56]
            mov R14,RDX
            adc R14,0
            mul RBX
            movq RBX,XMM4
            add R14,RAX
            mov RAX,QWORD PTR [RSI]
            mov R15,RDX
            adc R15,0
            lea RDI,QWORD PTR [RSP+8]
            mov ECX,7
            jmp .L_40eb40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40eb40:

            mul RBX
            add R8,RAX
            mov RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RDI],R8
            mov R8,RDX
            adc R8,0
            mul RBX
            movd XMM4,DWORD PTR [RBP]
            add R9,RAX
            mov RAX,QWORD PTR [RSI+16]
            adc RDX,0
            add R8,R9
            mov R9,RDX
            adc R9,0
            mul RBX
            movd XMM5,DWORD PTR [RBP+64]
            add R10,RAX
            mov RAX,QWORD PTR [RSI+24]
            adc RDX,0
            add R9,R10
            mov R10,RDX
            adc R10,0
            mul RBX
            pslldq XMM5,4
            add R11,RAX
            mov RAX,QWORD PTR [RSI+32]
            adc RDX,0
            add R10,R11
            mov R11,RDX
            adc R11,0
            mul RBX
            por XMM4,XMM5
            add R12,RAX
            mov RAX,QWORD PTR [RSI+40]
            adc RDX,0
            add R11,R12
            mov R12,RDX
            adc R12,0
            mul RBX
            add R13,RAX
            mov RAX,QWORD PTR [RSI+48]
            adc RDX,0
            add R12,R13
            mov R13,RDX
            adc R13,0
            mul RBX
            add R14,RAX
            mov RAX,QWORD PTR [RSI+56]
            adc RDX,0
            add R13,R14
            mov R14,RDX
            adc R14,0
            mul RBX
            movq RBX,XMM4
            add R15,RAX
            mov RAX,QWORD PTR [RSI]
            adc RDX,0
            add R14,R15
            mov R15,RDX
            adc R15,0
            lea RBP,QWORD PTR [RBP+128]
            lea RDI,QWORD PTR [RDI+8]
            dec ECX
            jne .L_40eb40

            mov QWORD PTR [RDI],R8
            mov QWORD PTR [RDI+8],R9
            mov QWORD PTR [RDI+16],R10
            mov QWORD PTR [RDI+24],R11
            mov QWORD PTR [RDI+32],R12
            mov QWORD PTR [RDI+40],R13
            mov QWORD PTR [RDI+48],R14
            mov QWORD PTR [RDI+56],R15
            movq RDI,XMM0
            movq RBP,XMM1
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+56]
            call .L_40f1c0

            jmp .L_40ee74
.L_40ec80:

            mov EAX,DWORD PTR [RDX+R9*4+64]
            movq XMM0,RDI
            lea RBP,QWORD PTR [RDX+R9*4+128]
            mov EDX,DWORD PTR [RDX+R9*4]
            movq XMM1,RCX
            mov QWORD PTR [RSP+128],R8
            shl RAX,32
            or RDX,RAX
            mulx R8,RBX,QWORD PTR [RSI]
            mov QWORD PTR [RSP],RBX
            xor EDI,EDI
            mulx R9,RAX,QWORD PTR [RSI+8]
            movd XMM4,DWORD PTR [RBP]
            mulx R10,RBX,QWORD PTR [RSI+16]
            movd XMM5,DWORD PTR [RBP+64]
            adcx R8,RAX
            mulx R11,RAX,QWORD PTR [RSI+24]
            pslldq XMM5,4
            adcx R9,RBX
            mulx R12,RBX,QWORD PTR [RSI+32]
            por XMM4,XMM5
            adcx R10,RAX
            mulx R13,RAX,QWORD PTR [RSI+40]
            adcx R11,RBX
            mulx R14,RBX,QWORD PTR [RSI+48]
            lea RBP,QWORD PTR [RBP+128]
            adcx R12,RAX
            mulx R15,RAX,QWORD PTR [RSI+56]
            movq RDX,XMM4
            adcx R13,RBX
            adcx R14,RAX
            mov RBX,R8
            adcx R15,RDI
            mov RCX,-7
            jmp .L_40ed40
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40ed40:

            mulx R8,RAX,QWORD PTR [RSI]
            adcx RBX,RAX
            adox R8,R9
            mulx R9,RAX,QWORD PTR [RSI+8]
            movd XMM4,DWORD PTR [RBP]
            adcx R8,RAX
            adox R9,R10
            mulx R10,RAX,QWORD PTR [RSI+16]
            movd XMM5,DWORD PTR [RBP+64]
            lea RBP,QWORD PTR [RBP+128]
            adcx R9,RAX
            adox R10,R11
            mulx R11,RAX,QWORD PTR [RSI+24]
            pslldq XMM5,4
            por XMM4,XMM5
            adcx R10,RAX
            adox R11,R12
            mulx R12,RAX,QWORD PTR [RSI+32]
            adcx R11,RAX
            adox R12,R13
            mulx R13,RAX,QWORD PTR [RSI+40]
            adcx R12,RAX
            adox R13,R14
            mulx R14,RAX,QWORD PTR [RSI+48]
            adcx R13,RAX
            adox R14,R15
            mulx R15,RAX,QWORD PTR [RSI+56]
            movq RDX,XMM4
            mov QWORD PTR [RSP+RCX*8+64],RBX
            adcx R14,RAX
            adox R15,RDI
            mov RBX,R8
            adcx R15,RDI
            inc RCX
            jne .L_40ed40

            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            mov QWORD PTR [RSP+80],R10
            mov QWORD PTR [RSP+88],R11
            mov QWORD PTR [RSP+96],R12
            mov QWORD PTR [RSP+104],R13
            mov QWORD PTR [RSP+112],R14
            mov QWORD PTR [RSP+120],R15
            movq RDI,XMM0
            movq RBP,XMM1
            mov RDX,QWORD PTR [RSP+128]
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+56]
            call .L_40f2c0
.L_40ee74:

            add R8,QWORD PTR [RSP+64]
            adc R9,QWORD PTR [RSP+72]
            adc R10,QWORD PTR [RSP+80]
            adc R11,QWORD PTR [RSP+88]
            adc R12,QWORD PTR [RSP+96]
            adc R13,QWORD PTR [RSP+104]
            adc R14,QWORD PTR [RSP+112]
            adc R15,QWORD PTR [RSP+120]
            sbb RCX,RCX
            call .L_40f3a0

            lea RAX,QWORD PTR [RSP+200]
            mov R15,QWORD PTR [RAX-48]
            mov R14,QWORD PTR [RAX-40]
            mov R13,QWORD PTR [RAX-32]
            mov R12,QWORD PTR [RAX-24]
            mov RBP,QWORD PTR [RAX-16]
            mov RBX,QWORD PTR [RAX-8]
            lea RSP,QWORD PTR [RAX]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40eee0:

            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov R9D,R9D
            sub RSP,152
            lea R8,QWORD PTR [R8+R9*4]
            movq XMM0,RDI
            movq XMM1,RDX
            movq XMM2,R8
            mov QWORD PTR [RSP+128],RCX
            mov RBP,RDI
            mov R11D,524544
            and R11D,DWORD PTR [RIP+.L_63b410]
            cmp R11D,524544
            je .L_40ef80

            mov RBX,QWORD PTR [RDI]
            call .L_40f460

            movq RDI,XMM0
            movq RBP,XMM1
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+56]
            call .L_40f1c0

            jmp .L_40efc6
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40ef80:

            mov RDX,QWORD PTR [RDI]
            call .L_40f600

            movq RDI,XMM0
            movq RBP,XMM1
            mov RDX,QWORD PTR [RSP+128]
            mov R8,QWORD PTR [RSP]
            mov R9,QWORD PTR [RSP+8]
            mov R10,QWORD PTR [RSP+16]
            mov R11,QWORD PTR [RSP+24]
            mov R12,QWORD PTR [RSP+32]
            mov R13,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+48]
            mov R15,QWORD PTR [RSP+56]
            call .L_40f2c0
.L_40efc6:

            add R8,QWORD PTR [RSP+64]
            adc R9,QWORD PTR [RSP+72]
            adc R10,QWORD PTR [RSP+80]
            adc R11,QWORD PTR [RSP+88]
            adc R12,QWORD PTR [RSP+96]
            adc R13,QWORD PTR [RSP+104]
            adc R14,QWORD PTR [RSP+112]
            adc R15,QWORD PTR [RSP+120]
            movq RSI,XMM2
            sbb RCX,RCX
            call .L_40f3a0

            mov DWORD PTR [RSI],R8D
            shr R8,32
            mov DWORD PTR [RSI+128],R9D
            shr R9,32
            mov DWORD PTR [RSI+256],R10D
            shr R10,32
            mov DWORD PTR [RSI+384],R11D
            shr R11,32
            mov DWORD PTR [RSI+512],R12D
            shr R12,32
            mov DWORD PTR [RSI+640],R13D
            shr R13,32
            mov DWORD PTR [RSI+768],R14D
            shr R14,32
            mov DWORD PTR [RSI+896],R15D
            shr R15,32
            mov DWORD PTR [RSI+64],R8D
            mov DWORD PTR [RSI+192],R9D
            mov DWORD PTR [RSI+320],R10D
            mov DWORD PTR [RSI+448],R11D
            mov DWORD PTR [RSI+576],R12D
            mov DWORD PTR [RSI+704],R13D
            mov DWORD PTR [RSI+832],R14D
            mov DWORD PTR [RSI+960],R15D
            lea RAX,QWORD PTR [RSP+200]
            mov R15,QWORD PTR [RAX-48]
            mov R14,QWORD PTR [RAX-40]
            mov R13,QWORD PTR [RAX-32]
            mov R12,QWORD PTR [RAX-24]
            mov RBP,QWORD PTR [RAX-16]
            mov RBX,QWORD PTR [RAX-8]
            lea RSP,QWORD PTR [RAX]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f0c0:

            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            sub RSP,152
            mov EAX,DWORD PTR [RIP+.L_63b410]
            mov RBP,RDX
            mov QWORD PTR [RSP+128],RCX
            mov R8,QWORD PTR [RSI]
            pxor XMM0,XMM0
            mov R9,QWORD PTR [RSI+8]
            mov R10,QWORD PTR [RSI+16]
            mov R11,QWORD PTR [RSI+24]
            mov R12,QWORD PTR [RSI+32]
            mov R13,QWORD PTR [RSI+40]
            mov R14,QWORD PTR [RSI+48]
            mov R15,QWORD PTR [RSI+56]
            movdqa XMMWORD PTR [RSP],XMM0
            movdqa XMMWORD PTR [RSP+16],XMM0
            movdqa XMMWORD PTR [RSP+32],XMM0
            movdqa XMMWORD PTR [RSP+48],XMM0
            movdqa XMMWORD PTR [RSP+64],XMM0
            movdqa XMMWORD PTR [RSP+80],XMM0
            movdqa XMMWORD PTR [RSP+96],XMM0
            and EAX,524544
            cmp EAX,524544
            je .L_40f160

            call .L_40f1c0

            jmp .L_40f16d
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f160:

            mov RDX,QWORD PTR [RSP+128]
            call .L_40f2c0
.L_40f16d:

            mov QWORD PTR [RDI],R8
            mov QWORD PTR [RDI+8],R9
            mov QWORD PTR [RDI+16],R10
            mov QWORD PTR [RDI+24],R11
            mov QWORD PTR [RDI+32],R12
            mov QWORD PTR [RDI+40],R13
            mov QWORD PTR [RDI+48],R14
            mov QWORD PTR [RDI+56],R15
            lea RAX,QWORD PTR [RSP+200]
            mov R15,QWORD PTR [RAX-48]
            mov R14,QWORD PTR [RAX-40]
            mov R13,QWORD PTR [RAX-32]
            mov R12,QWORD PTR [RAX-24]
            mov RBP,QWORD PTR [RAX-16]
            mov RBX,QWORD PTR [RAX-8]
            lea RSP,QWORD PTR [RAX]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f1c0:

            mov RBX,R8
            imul RBX,QWORD PTR [RSP+136]
            mov RAX,QWORD PTR [RBP]
            mov ECX,8
            jmp .L_40f1e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f1e0:

            mul RBX
            mov RAX,QWORD PTR [RBP+8]
            neg R8
            mov R8,RDX
            adc R8,0
            mul RBX
            add R9,RAX
            mov RAX,QWORD PTR [RBP+16]
            adc RDX,0
            add R8,R9
            mov R9,RDX
            adc R9,0
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RBP+24]
            adc RDX,0
            add R9,R10
            mov R10,RDX
            adc R10,0
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RBP+32]
            adc RDX,0
            add R10,R11
            mov RSI,QWORD PTR [RSP+136]
            adc RDX,0
            mov R11,RDX
            mul RBX
            add R12,RAX
            mov RAX,QWORD PTR [RBP+40]
            adc RDX,0
            imul RSI,R8
            add R11,R12
            mov R12,RDX
            adc R12,0
            mul RBX
            add R13,RAX
            mov RAX,QWORD PTR [RBP+48]
            adc RDX,0
            add R12,R13
            mov R13,RDX
            adc R13,0
            mul RBX
            add R14,RAX
            mov RAX,QWORD PTR [RBP+56]
            adc RDX,0
            add R13,R14
            mov R14,RDX
            adc R14,0
            mul RBX
            mov RBX,RSI
            add R15,RAX
            mov RAX,QWORD PTR [RBP]
            adc RDX,0
            add R14,R15
            mov R15,RDX
            adc R15,0
            dec ECX
            jne .L_40f1e0

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f2c0:

            imul RDX,R8
            xor RSI,RSI
            mov ECX,8
            jmp .L_40f2e0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f2e0:

            mov RBX,R8
            mulx R8,RAX,QWORD PTR [RBP]
            adcx RAX,RBX
            adox R8,R9
            mulx R9,RAX,QWORD PTR [RBP+8]
            adcx R8,RAX
            adox R9,R10
            mulx R10,RBX,QWORD PTR [RBP+16]
            adcx R9,RBX
            adox R10,R11
            mulx R11,RBX,QWORD PTR [RBP+24]
            adcx R10,RBX
            adox R11,R12
            mulx R12,RBX,QWORD PTR [RBP+32]
            mov RAX,RDX
            mov RDX,R8
            adcx R11,RBX
            adox R12,R13
            mulx RDX,RBX,QWORD PTR [RSP+136]
            mov RDX,RAX
            mulx R13,RAX,QWORD PTR [RBP+40]
            adcx R12,RAX
            adox R13,R14
            mulx R14,RAX,QWORD PTR [RBP+48]
            adcx R13,RAX
            adox R14,R15
            mulx R15,RAX,QWORD PTR [RBP+56]
            mov RDX,RBX
            adcx R14,RAX
            adox R15,RSI
            adcx R15,RSI
            dec ECX
            jne .L_40f2e0

            ret 
          .byte 0x90
.L_40f3a0:

            mov QWORD PTR [RDI],R8
            mov QWORD PTR [RDI+8],R9
            mov QWORD PTR [RDI+16],R10
            mov QWORD PTR [RDI+24],R11
            mov QWORD PTR [RDI+32],R12
            mov QWORD PTR [RDI+40],R13
            mov QWORD PTR [RDI+48],R14
            mov QWORD PTR [RDI+56],R15
            mov R8,QWORD PTR [RBP]
            mov R9,QWORD PTR [RBP+8]
            neg R8
            not R9
            and R8,RCX
            mov R10,QWORD PTR [RBP+16]
            and R9,RCX
            not R10
            mov R11,QWORD PTR [RBP+24]
            and R10,RCX
            not R11
            mov R12,QWORD PTR [RBP+32]
            and R11,RCX
            not R12
            mov R13,QWORD PTR [RBP+40]
            and R12,RCX
            not R13
            mov R14,QWORD PTR [RBP+48]
            and R13,RCX
            not R14
            mov R15,QWORD PTR [RBP+56]
            and R14,RCX
            not R15
            and R15,RCX
            add R8,QWORD PTR [RDI]
            adc R9,QWORD PTR [RDI+8]
            adc R10,QWORD PTR [RDI+16]
            adc R11,QWORD PTR [RDI+24]
            adc R12,QWORD PTR [RDI+32]
            adc R13,QWORD PTR [RDI+40]
            adc R14,QWORD PTR [RDI+48]
            adc R15,QWORD PTR [RDI+56]
            mov QWORD PTR [RDI],R8
            mov QWORD PTR [RDI+8],R9
            mov QWORD PTR [RDI+16],R10
            mov QWORD PTR [RDI+24],R11
            mov QWORD PTR [RDI+32],R12
            mov QWORD PTR [RDI+40],R13
            mov QWORD PTR [RDI+48],R14
            mov QWORD PTR [RDI+56],R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f460:

            lea RDI,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSI]
            mul RBX
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RSI+8]
            mov R8,RDX
            mul RBX
            add R8,RAX
            mov RAX,QWORD PTR [RSI+16]
            mov R9,RDX
            adc R9,0
            mul RBX
            add R9,RAX
            mov RAX,QWORD PTR [RSI+24]
            mov R10,RDX
            adc R10,0
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RSI+32]
            mov R11,RDX
            adc R11,0
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RSI+40]
            mov R12,RDX
            adc R12,0
            mul RBX
            add R12,RAX
            mov RAX,QWORD PTR [RSI+48]
            mov R13,RDX
            adc R13,0
            mul RBX
            add R13,RAX
            mov RAX,QWORD PTR [RSI+56]
            mov R14,RDX
            adc R14,0
            mul RBX
            add R14,RAX
            mov RAX,QWORD PTR [RSI]
            mov R15,RDX
            adc R15,0
            lea RBP,QWORD PTR [RBP+8]
            lea RDI,QWORD PTR [RDI+8]
            mov ECX,7
            jmp .L_40f500
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f500:

            mov RBX,QWORD PTR [RBP]
            mul RBX
            add R8,RAX
            mov RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RDI],R8
            mov R8,RDX
            adc R8,0
            mul RBX
            add R9,RAX
            mov RAX,QWORD PTR [RSI+16]
            adc RDX,0
            add R8,R9
            mov R9,RDX
            adc R9,0
            mul RBX
            add R10,RAX
            mov RAX,QWORD PTR [RSI+24]
            adc RDX,0
            add R9,R10
            mov R10,RDX
            adc R10,0
            mul RBX
            add R11,RAX
            mov RAX,QWORD PTR [RSI+32]
            adc RDX,0
            add R10,R11
            mov R11,RDX
            adc R11,0
            mul RBX
            add R12,RAX
            mov RAX,QWORD PTR [RSI+40]
            adc RDX,0
            add R11,R12
            mov R12,RDX
            adc R12,0
            mul RBX
            add R13,RAX
            mov RAX,QWORD PTR [RSI+48]
            adc RDX,0
            add R12,R13
            mov R13,RDX
            adc R13,0
            mul RBX
            add R14,RAX
            mov RAX,QWORD PTR [RSI+56]
            adc RDX,0
            add R13,R14
            mov R14,RDX
            lea RBP,QWORD PTR [RBP+8]
            adc R14,0
            mul RBX
            add R15,RAX
            mov RAX,QWORD PTR [RSI]
            adc RDX,0
            add R14,R15
            mov R15,RDX
            adc R15,0
            lea RDI,QWORD PTR [RDI+8]
            dec ECX
            jne .L_40f500

            mov QWORD PTR [RDI],R8
            mov QWORD PTR [RDI+8],R9
            mov QWORD PTR [RDI+16],R10
            mov QWORD PTR [RDI+24],R11
            mov QWORD PTR [RDI+32],R12
            mov QWORD PTR [RDI+40],R13
            mov QWORD PTR [RDI+48],R14
            mov QWORD PTR [RDI+56],R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f600:

            mulx R8,RBX,QWORD PTR [RSI]
            mov RCX,-6
            mulx R9,RAX,QWORD PTR [RSI+8]
            mov QWORD PTR [RSP+8],RBX
            mulx R10,RBX,QWORD PTR [RSI+16]
            adc R8,RAX
            mulx R11,RAX,QWORD PTR [RSI+24]
            adc R9,RBX
            mulx R12,RBX,QWORD PTR [RSI+32]
            adc R10,RAX
            mulx R13,RAX,QWORD PTR [RSI+40]
            adc R11,RBX
            mulx R14,RBX,QWORD PTR [RSI+48]
            adc R12,RAX
            mulx R15,RAX,QWORD PTR [RSI+56]
            mov RDX,QWORD PTR [RBP+8]
            adc R13,RBX
            adc R14,RAX
            adc R15,0
            xor RDI,RDI
            jmp .L_40f660
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_40f660:

            mov RBX,R8
            mulx R8,RAX,QWORD PTR [RSI]
            adcx RBX,RAX
            adox R8,R9
            mulx R9,RAX,QWORD PTR [RSI+8]
            adcx R8,RAX
            adox R9,R10
            mulx R10,RAX,QWORD PTR [RSI+16]
            adcx R9,RAX
            adox R10,R11
            mulx R11,RAX,QWORD PTR [RSI+24]
            adcx R10,RAX
            adox R11,R12
            mulx R12,RAX,QWORD PTR DS:[RSI+32]
            adcx R11,RAX
            adox R12,R13
            mulx R13,RAX,QWORD PTR [RSI+40]
            adcx R12,RAX
            adox R13,R14
            mulx R14,RAX,QWORD PTR [RSI+48]
            adcx R13,RAX
            adox R14,R15
            mulx R15,RAX,QWORD PTR [RSI+56]
            mov RDX,QWORD PTR [RBP+RCX*8+64]
            mov QWORD PTR [RSP+RCX*8+64],RBX
            adcx R14,RAX
            adox R15,RDI
            adcx R15,RDI
            inc RCX
            jne .L_40f660

            mov RBX,R8
            mulx R8,RAX,QWORD PTR [RSI]
            adcx RBX,RAX
            adox R8,R9
            mulx R9,RAX,QWORD PTR [RSI+8]
            adcx R8,RAX
            adox R9,R10
            mulx R10,RAX,QWORD PTR [RSI+16]
            adcx R9,RAX
            adox R10,R11
            mulx R11,RAX,QWORD PTR [RSI+24]
            adcx R10,RAX
            adox R11,R12
            mulx R12,RAX,QWORD PTR [RSI+32]
            adcx R11,RAX
            adox R12,R13
            mulx R13,RAX,QWORD PTR [RSI+40]
            adcx R12,RAX
            adox R13,R14
            mulx R14,RAX,QWORD PTR [RSI+48]
            adcx R13,RAX
            adox R14,R15
            mulx R15,RAX,QWORD PTR [RSI+56]
            adcx R14,RAX
            adox R15,RDI
            adcx R15,RDI
            mov QWORD PTR [RSP+64],RBX
            mov QWORD PTR [RSP+72],R8
            mov QWORD PTR [RSP+80],R9
            mov QWORD PTR [RSP+88],R10
            mov QWORD PTR [RSP+96],R11
            mov QWORD PTR [RSP+104],R12
            mov QWORD PTR [RSP+112],R13
            mov QWORD PTR [RSP+120],R14
            mov QWORD PTR [RSP+128],R15
            ret 
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40f7f0:

            lea RDI,QWORD PTR [RDI+RDX*4]
            mov R9D,8
            jmp .L_40f800
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f800:

            mov RAX,QWORD PTR [RSI]
            lea RSI,QWORD PTR [RSI+8]
            mov DWORD PTR [RDI],EAX
            shr RAX,32
            mov DWORD PTR [RDI+64],EAX
            lea RDI,QWORD PTR [RDI+128]
            dec R9D
            jne .L_40f800

            ret 
          .byte 0x66
          .byte 0x90
.L_40f820:

            lea RSI,QWORD PTR [RSI+RDX*4]
            mov R9D,8
            jmp .L_40f830
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_40f830:

            mov EAX,DWORD PTR [RSI]
            mov R8D,DWORD PTR [RSI+64]
            lea RSI,QWORD PTR [RSI+128]
            shl R8,32
            or RAX,R8
            mov QWORD PTR [RDI],RAX
            lea RDI,QWORD PTR [RDI+8]
            dec R9D
            jne .L_40f830

            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_40f880:

            lea RAX,QWORD PTR [RSP]
            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            vzeroupper 
            mov RBP,RAX
            mov R13,RDX
            sub RSP,832
            mov R15,R13
            sub RDI,-128
            sub RSI,-128
            sub R13,-128
            and R15,4095
            add R15,320
            shr R15,12
            vpxor YMM9,YMM9,YMM9
            je .L_40f95b

            sub RSP,320
            vmovdqu YMM0,YMMWORD PTR [R13-128]
            and RSP,-2048
            vmovdqu YMM1,YMMWORD PTR [R13-96]
            vmovdqu YMM2,YMMWORD PTR [R13-64]
            vmovdqu YMM3,YMMWORD PTR [R13-32]
            vmovdqu YMM4,YMMWORD PTR [R13]
            vmovdqu YMM5,YMMWORD PTR [R13+32]
            vmovdqu YMM6,YMMWORD PTR [R13+64]
            vmovdqu YMM7,YMMWORD PTR [R13+96]
            vmovdqu YMM8,YMMWORD PTR [R13+128]
            lea R13,QWORD PTR [RSP+960]
            vmovdqu YMMWORD PTR [R13-128],YMM0
            vmovdqu YMMWORD PTR [R13-96],YMM1
            vmovdqu YMMWORD PTR [R13-64],YMM2
            vmovdqu YMMWORD PTR [R13-32],YMM3
            vmovdqu YMMWORD PTR [R13],YMM4
            vmovdqu YMMWORD PTR [R13+32],YMM5
            vmovdqu YMMWORD PTR [R13+64],YMM6
            vmovdqu YMMWORD PTR [R13+96],YMM7
            vmovdqu YMMWORD PTR [R13+128],YMM8
            vmovdqu YMMWORD PTR [R13+160],YMM9
.L_40f95b:

            and RSP,-1024
            vmovdqu YMM1,YMMWORD PTR [RSI-96]
            vmovdqu YMM2,YMMWORD PTR [RSI-64]
            vmovdqu YMM3,YMMWORD PTR [RSI-32]
            vmovdqu YMM4,YMMWORD PTR [RSI]
            vmovdqu YMM5,YMMWORD PTR [RSI+32]
            vmovdqu YMM6,YMMWORD PTR [RSI+64]
            vmovdqu YMM7,YMMWORD PTR [RSI+96]
            vmovdqu YMM8,YMMWORD PTR [RSI+128]
            lea RBX,QWORD PTR [RSP+192]
            vpbroadcastq YMM15,QWORD PTR [RIP+.L_411400]
            jmp .L_40f9a0
          .byte 0x90
.L_40f9a0:

            lea R9,QWORD PTR [RSP+704]
            lea R12,QWORD PTR [RSP+448]
            vpaddq YMM1,YMM1,YMM1
            vpbroadcastq YMM10,QWORD PTR [RSI-128]
            vpaddq YMM2,YMM2,YMM2
            vmovdqa YMMWORD PTR [R9-128],YMM1
            vpaddq YMM3,YMM3,YMM3
            vmovdqa YMMWORD PTR [R9-96],YMM2
            vpaddq YMM4,YMM4,YMM4
            vmovdqa YMMWORD PTR [R9-64],YMM3
            vpaddq YMM5,YMM5,YMM5
            vmovdqa YMMWORD PTR [R9-32],YMM4
            vpaddq YMM6,YMM6,YMM6
            vmovdqa YMMWORD PTR [R9],YMM5
            vpaddq YMM7,YMM7,YMM7
            vmovdqa YMMWORD PTR [R9+32],YMM6
            vpaddq YMM8,YMM8,YMM8
            vmovdqa YMMWORD PTR [R9+64],YMM7
            vpxor YMM9,YMM9,YMM9
            vmovdqa YMMWORD PTR [R9+96],YMM8
            vpmuludq YMM0,YMM10,YMMWORD PTR [RSI-128]
            vpbroadcastq YMM11,QWORD PTR [RSI-96]
            vmovdqu YMMWORD PTR [RBX+96],YMM9
            vpmuludq YMM1,YMM1,YMM10
            vmovdqu YMMWORD PTR [R12-128],YMM9
            vpmuludq YMM2,YMM2,YMM10
            vmovdqu YMMWORD PTR [R12-96],YMM9
            vpmuludq YMM3,YMM3,YMM10
            vmovdqu YMMWORD PTR [R12-64],YMM9
            vpmuludq YMM4,YMM4,YMM10
            vmovdqu YMMWORD PTR [R12-32],YMM9
            vpmuludq YMM5,YMM5,YMM10
            vmovdqu YMMWORD PTR [R12],YMM9
            vpmuludq YMM6,YMM6,YMM10
            vmovdqu YMMWORD PTR [R12+32],YMM9
            vpmuludq YMM7,YMM7,YMM10
            vmovdqu YMMWORD PTR [R12+64],YMM9
            vpmuludq YMM8,YMM8,YMM10
            vpbroadcastq YMM10,QWORD PTR [RSI-64]
            vmovdqu YMMWORD PTR [R12+96],YMM9
            mov R15,RSI
            mov R14D,4
            jmp .L_40fb12
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40faa0:

            vpbroadcastq YMM11,QWORD PTR [R15-96]
            vpmuludq YMM0,YMM10,YMMWORD PTR [RSI-128]
            vpaddq YMM0,YMM0,YMMWORD PTR [RBX-192]
            vpmuludq YMM1,YMM10,YMMWORD PTR [R9-128]
            vpaddq YMM1,YMM1,YMMWORD PTR [RBX-160]
            vpmuludq YMM2,YMM10,YMMWORD PTR [R9-96]
            vpaddq YMM2,YMM2,YMMWORD PTR [RBX-128]
            vpmuludq YMM3,YMM10,YMMWORD PTR [R9-64]
            vpaddq YMM3,YMM3,YMMWORD PTR [RBX-96]
            vpmuludq YMM4,YMM10,YMMWORD PTR [R9-32]
            vpaddq YMM4,YMM4,YMMWORD PTR [RBX-64]
            vpmuludq YMM5,YMM10,YMMWORD PTR [R9]
            vpaddq YMM5,YMM5,YMMWORD PTR [RBX-32]
            vpmuludq YMM6,YMM10,YMMWORD PTR [R9+32]
            vpaddq YMM6,YMM6,YMMWORD PTR [RBX]
            vpmuludq YMM7,YMM10,YMMWORD PTR [R9+64]
            vpaddq YMM7,YMM7,YMMWORD PTR [RBX+32]
            vpmuludq YMM8,YMM10,YMMWORD PTR [R9+96]
            vpbroadcastq YMM10,QWORD PTR [R15-64]
            vpaddq YMM8,YMM8,YMMWORD PTR [RBX+64]
.L_40fb12:

            vmovdqu YMMWORD PTR [RBX-192],YMM0
            vmovdqu YMMWORD PTR [RBX-160],YMM1
            vpmuludq YMM12,YMM11,YMMWORD PTR [RSI-96]
            vpaddq YMM2,YMM2,YMM12
            vpmuludq YMM14,YMM11,YMMWORD PTR [R9-96]
            vpaddq YMM3,YMM3,YMM14
            vpmuludq YMM13,YMM11,YMMWORD PTR [R9-64]
            vpaddq YMM4,YMM4,YMM13
            vpmuludq YMM12,YMM11,YMMWORD PTR [R9-32]
            vpaddq YMM5,YMM5,YMM12
            vpmuludq YMM14,YMM11,YMMWORD PTR [R9]
            vpaddq YMM6,YMM6,YMM14
            vpmuludq YMM13,YMM11,YMMWORD PTR [R9+32]
            vpaddq YMM7,YMM7,YMM13
            vpmuludq YMM12,YMM11,YMMWORD PTR [R9+64]
            vpaddq YMM8,YMM8,YMM12
            vpmuludq YMM0,YMM11,YMMWORD PTR [R9+96]
            vpbroadcastq YMM11,QWORD PTR [R15-32]
            vpaddq YMM0,YMM0,YMMWORD PTR [RBX+96]
            vmovdqu YMMWORD PTR [RBX-128],YMM2
            vmovdqu YMMWORD PTR [RBX-96],YMM3
            vpmuludq YMM13,YMM10,YMMWORD PTR [RSI-64]
            vpaddq YMM4,YMM4,YMM13
            vpmuludq YMM12,YMM10,YMMWORD PTR [R9-64]
            vpaddq YMM5,YMM5,YMM12
            vpmuludq YMM14,YMM10,YMMWORD PTR [R9-32]
            vpaddq YMM6,YMM6,YMM14
            vpmuludq YMM13,YMM10,YMMWORD PTR [R9]
            vpaddq YMM7,YMM7,YMM13
            vpmuludq YMM12,YMM10,YMMWORD PTR [R9+32]
            vpaddq YMM8,YMM8,YMM12
            vpmuludq YMM14,YMM10,YMMWORD PTR [R9+64]
            vpaddq YMM0,YMM0,YMM14
            vpmuludq YMM1,YMM10,YMMWORD PTR [R9+96]
            vpbroadcastq YMM10,QWORD PTR [R15]
            vpaddq YMM1,YMM1,YMMWORD PTR [R12-128]
            vmovdqu YMMWORD PTR [RBX-64],YMM4
            vmovdqu YMMWORD PTR [RBX-32],YMM5
            vpmuludq YMM12,YMM11,YMMWORD PTR [RSI-32]
            vpaddq YMM6,YMM6,YMM12
            vpmuludq YMM14,YMM11,YMMWORD PTR [R9-32]
            vpaddq YMM7,YMM7,YMM14
            vpmuludq YMM13,YMM11,YMMWORD PTR [R9]
            vpaddq YMM8,YMM8,YMM13
            vpmuludq YMM12,YMM11,YMMWORD PTR [R9+32]
            vpaddq YMM0,YMM0,YMM12
            vpmuludq YMM14,YMM11,YMMWORD PTR [R9+64]
            vpaddq YMM1,YMM1,YMM14
            vpmuludq YMM2,YMM11,YMMWORD PTR [R9+96]
            vpbroadcastq YMM11,QWORD PTR [R15+32]
            vpaddq YMM2,YMM2,YMMWORD PTR [R12-96]
            vmovdqu YMMWORD PTR [RBX],YMM6
            vmovdqu YMMWORD PTR [RBX+32],YMM7
            vpmuludq YMM12,YMM10,YMMWORD PTR [RSI]
            vpaddq YMM8,YMM8,YMM12
            vpmuludq YMM14,YMM10,YMMWORD PTR [R9]
            vpaddq YMM0,YMM0,YMM14
            vpmuludq YMM13,YMM10,YMMWORD PTR [R9+32]
            vpaddq YMM1,YMM1,YMM13
            vpmuludq YMM12,YMM10,YMMWORD PTR [R9+64]
            vpaddq YMM2,YMM2,YMM12
            vpmuludq YMM3,YMM10,YMMWORD PTR [R9+96]
            vpbroadcastq YMM10,QWORD PTR [R15+64]
            vpaddq YMM3,YMM3,YMMWORD PTR [R12-64]
            vmovdqu YMMWORD PTR [RBX+64],YMM8
            vmovdqu YMMWORD PTR [RBX+96],YMM0
            lea RBX,QWORD PTR [RBX+8]
            vpmuludq YMM13,YMM11,YMMWORD PTR [RSI+32]
            vpaddq YMM1,YMM1,YMM13
            vpmuludq YMM12,YMM11,YMMWORD PTR [R9+32]
            vpaddq YMM2,YMM2,YMM12
            vpmuludq YMM14,YMM11,YMMWORD PTR [R9+64]
            vpaddq YMM3,YMM3,YMM14
            vpmuludq YMM4,YMM11,YMMWORD PTR [R9+96]
            vpbroadcastq YMM11,QWORD PTR [R15+96]
            vpaddq YMM4,YMM4,YMMWORD PTR [R12-32]
            vmovdqu YMMWORD PTR [R12-128],YMM1
            vmovdqu YMMWORD PTR [R12-96],YMM2
            vpmuludq YMM12,YMM10,YMMWORD PTR [RSI+64]
            vpaddq YMM3,YMM3,YMM12
            vpmuludq YMM14,YMM10,YMMWORD PTR [R9+64]
            vpbroadcastq YMM0,QWORD PTR [R15+128]
            vpaddq YMM4,YMM4,YMM14
            vpmuludq YMM5,YMM10,YMMWORD PTR [R9+96]
            vpbroadcastq YMM10,QWORD PTR [R15-120]
            vpaddq YMM5,YMM5,YMMWORD PTR [R12]
            vmovdqu YMMWORD PTR [R12-64],YMM3
            vmovdqu YMMWORD PTR [R12-32],YMM4
            lea R15,QWORD PTR [R15+8]
            vpmuludq YMM12,YMM11,YMMWORD PTR [RSI+96]
            vpaddq YMM5,YMM5,YMM12
            vpmuludq YMM6,YMM11,YMMWORD PTR [R9+96]
            vpaddq YMM6,YMM6,YMMWORD PTR [R12+32]
            vpmuludq YMM7,YMM0,YMMWORD PTR [RSI+128]
            vmovdqu YMMWORD PTR [R12],YMM5
            vpaddq YMM7,YMM7,YMMWORD PTR [R12+64]
            vmovdqu YMMWORD PTR [R12+32],YMM6
            vmovdqu YMMWORD PTR [R12+64],YMM7
            lea R12,QWORD PTR [R12+8]
            dec R14D
            jne .L_40faa0

            vmovdqu YMM8,YMMWORD PTR [RSP+256]
            vmovdqu YMM1,YMMWORD PTR [RSP+288]
            vmovdqu YMM2,YMMWORD PTR [RSP+320]
            lea RBX,QWORD PTR [RSP+192]
            vpsrlq YMM14,YMM8,29
            vpand YMM8,YMM8,YMM15
            vpsrlq YMM11,YMM1,29
            vpand YMM1,YMM1,YMM15
            vpermq YMM14,YMM14,147
            vpxor YMM9,YMM9,YMM9
            vpermq YMM11,YMM11,147
            vpblendd YMM10,YMM14,YMM9,3
            vpblendd YMM14,YMM11,YMM14,3
            vpaddq YMM8,YMM8,YMM10
            vpblendd YMM11,YMM9,YMM11,3
            vpaddq YMM1,YMM1,YMM14
            vpaddq YMM2,YMM2,YMM11
            vmovdqu YMMWORD PTR [RBX+96],YMM1
            vmovdqu YMMWORD PTR [RBX+128],YMM2
            mov RAX,QWORD PTR [RSP]
            mov R10,QWORD PTR [RSP+8]
            mov R11,QWORD PTR [RSP+16]
            mov R12,QWORD PTR [RSP+24]
            vmovdqu YMM1,YMMWORD PTR [RSP+32]
            vmovdqu YMM2,YMMWORD PTR [RBX-128]
            vmovdqu YMM3,YMMWORD PTR [RBX-96]
            vmovdqu YMM4,YMMWORD PTR [RBX-64]
            vmovdqu YMM5,YMMWORD PTR [RBX-32]
            vmovdqu YMM6,YMMWORD PTR [RBX]
            vmovdqu YMM7,YMMWORD PTR [RBX+32]
            mov R9,RAX
            imul EAX,ECX
            and EAX,536870911
            vmovd XMM12,EAX
            mov RDX,RAX
            imul RAX,QWORD PTR [R13-128]
            vpbroadcastq YMM12,XMM12
            add R9,RAX
            mov RAX,RDX
            imul RAX,QWORD PTR [R13-120]
            shr R9,29
            add R10,RAX
            mov RAX,RDX
            imul RAX,QWORD PTR [R13-112]
            add R10,R9
            add R11,RAX
            imul RDX,QWORD PTR [R13-104]
            add R12,RDX
            mov RAX,R10
            imul EAX,ECX
            and EAX,536870911
            mov R14D,9
            jmp .L_40fe60
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_40fe60:

            vmovd XMM13,EAX
            vpbroadcastq YMM13,XMM13
            vpmuludq YMM10,YMM12,YMMWORD PTR [R13-96]
            mov RDX,RAX
            imul RAX,QWORD PTR [R13-128]
            vpaddq YMM1,YMM1,YMM10
            add R10,RAX
            vpmuludq YMM14,YMM12,YMMWORD PTR [R13-64]
            mov RAX,RDX
            imul RAX,QWORD PTR [R13-120]
            vpaddq YMM2,YMM2,YMM14
            vpmuludq YMM11,YMM12,YMMWORD PTR [R13-32]
            add R11,RAX
            mov RAX,RDX
            imul RAX,QWORD PTR [R13-112]
            shr R10,29
            vpaddq YMM3,YMM3,YMM11
            vpmuludq YMM10,YMM12,YMMWORD PTR [R13]
            add R12,RAX
            add R11,R10
            vpaddq YMM4,YMM4,YMM10
            vpmuludq YMM14,YMM12,YMMWORD PTR [R13+32]
            mov RAX,R11
            imul EAX,ECX
            vpaddq YMM5,YMM5,YMM14
            vpmuludq YMM11,YMM12,YMMWORD PTR [R13+64]
            and EAX,536870911
            vpaddq YMM6,YMM6,YMM11
            vpmuludq YMM10,YMM12,YMMWORD PTR [R13+96]
            vpaddq YMM7,YMM7,YMM10
            vpmuludq YMM14,YMM12,YMMWORD PTR [R13+128]
            vmovd XMM12,EAX
            vpaddq YMM8,YMM8,YMM14
            vpbroadcastq YMM12,XMM12
            vpmuludq YMM11,YMM13,YMMWORD PTR [R13-104]
            vmovdqu YMM14,YMMWORD PTR [R13-40]
            mov RDX,RAX
            imul RAX,QWORD PTR [R13-128]
            vpaddq YMM1,YMM1,YMM11
            vpmuludq YMM10,YMM13,YMMWORD PTR [R13-72]
            vmovdqu YMM11,YMMWORD PTR [R13-8]
            add R11,RAX
            mov RAX,RDX
            imul RAX,QWORD PTR [R13-120]
            vpaddq YMM2,YMM2,YMM10
            add RAX,R12
            shr R11,29
            vpmuludq YMM14,YMM14,YMM13
            vmovdqu YMM10,YMMWORD PTR [R13+24]
            add RAX,R11
            vpaddq YMM3,YMM3,YMM14
            vpmuludq YMM11,YMM11,YMM13
            vmovdqu YMM14,YMMWORD PTR [R13+56]
            mov R12,RAX
            imul EAX,ECX
            vpaddq YMM4,YMM4,YMM11
            vpmuludq YMM10,YMM10,YMM13
            vmovdqu YMM11,YMMWORD PTR [R13+88]
            and EAX,536870911
            vpaddq YMM5,YMM5,YMM10
            vpmuludq YMM14,YMM14,YMM13
            vmovdqu YMM10,YMMWORD PTR [R13+120]
            vpaddq YMM6,YMM6,YMM14
            vpmuludq YMM11,YMM11,YMM13
            vmovdqu YMM9,YMMWORD PTR [R13+152]
            vmovd XMM0,EAX
            imul RAX,QWORD PTR [R13-128]
            vpaddq YMM7,YMM7,YMM11
            vpmuludq YMM10,YMM10,YMM13
            vmovdqu YMM14,YMMWORD PTR [R13-112]
            vpbroadcastq YMM0,XMM0
            vpaddq YMM8,YMM8,YMM10
            vpmuludq YMM9,YMM9,YMM13
            vmovdqu YMM11,YMMWORD PTR [R13-80]
            add R12,RAX
            vmovdqu YMM13,YMMWORD PTR [R13-120]
            vpmuludq YMM14,YMM14,YMM12
            vmovdqu YMM10,YMMWORD PTR [R13-48]
            vpaddq YMM1,YMM1,YMM14
            vpmuludq YMM13,YMM13,YMM0
            vpmuludq YMM11,YMM11,YMM12
            vmovdqu YMM14,YMMWORD PTR [R13-16]
            vpaddq YMM13,YMM13,YMM1
            vpaddq YMM2,YMM2,YMM11
            vpmuludq YMM10,YMM10,YMM12
            vmovdqu YMM11,YMMWORD PTR [R13+16]
            vmovq RAX,XMM13
            vmovdqu YMMWORD PTR [RSP],YMM13
            vpaddq YMM3,YMM3,YMM10
            vpmuludq YMM14,YMM14,YMM12
            vmovdqu YMM10,YMMWORD PTR [R13+48]
            vpaddq YMM4,YMM4,YMM14
            vpmuludq YMM11,YMM11,YMM12
            vmovdqu YMM14,YMMWORD PTR [R13+80]
            vpaddq YMM5,YMM5,YMM11
            vpmuludq YMM10,YMM10,YMM12
            vmovdqu YMM11,YMMWORD PTR [R13+112]
            vpaddq YMM6,YMM6,YMM10
            vpmuludq YMM14,YMM14,YMM12
            shr R12,29
            vmovdqu YMM10,YMMWORD PTR [R13+144]
            add RAX,R12
            vpaddq YMM7,YMM7,YMM14
            vpmuludq YMM11,YMM11,YMM12
            mov R9,RAX
            imul EAX,ECX
            vpaddq YMM8,YMM8,YMM11
            vpmuludq YMM10,YMM10,YMM12
            and EAX,536870911
            vmovd XMM12,EAX
            vmovdqu YMM11,YMMWORD PTR [R13-56]
            vpaddq YMM9,YMM9,YMM10
            vpbroadcastq YMM12,XMM12
            vpmuludq YMM14,YMM0,YMMWORD PTR [R13-88]
            vmovdqu YMM10,YMMWORD PTR [R13-24]
            mov RDX,RAX
            imul RAX,QWORD PTR [R13-128]
            mov R10,QWORD PTR [RSP+8]
            vpaddq YMM1,YMM2,YMM14
            vpmuludq YMM11,YMM11,YMM0
            vmovdqu YMM14,YMMWORD PTR [R13+8]
            add R9,RAX
            mov RAX,RDX
            imul RAX,QWORD PTR [R13-120]
            shr R9,29
            mov R11,QWORD PTR [RSP+16]
            vpaddq YMM2,YMM3,YMM11
            vpmuludq YMM10,YMM10,YMM0
            vmovdqu YMM11,YMMWORD PTR [R13+40]
            add R10,RAX
            mov RAX,RDX
            imul RAX,QWORD PTR [R13-112]
            vpaddq YMM3,YMM4,YMM10
            vpmuludq YMM14,YMM14,YMM0
            vmovdqu YMM10,YMMWORD PTR [R13+72]
            imul RDX,QWORD PTR [R13-104]
            add R11,RAX
            lea RAX,QWORD PTR [R9+R10*1]
            vpaddq YMM4,YMM5,YMM14
            vpmuludq YMM11,YMM11,YMM0
            vmovdqu YMM14,YMMWORD PTR [R13+104]
            mov R10,RAX
            imul EAX,ECX
            vpmuludq YMM10,YMM10,YMM0
            vpaddq YMM5,YMM6,YMM11
            vmovdqu YMM11,YMMWORD PTR [R13+136]
            and EAX,536870911
            vpaddq YMM6,YMM7,YMM10
            vpmuludq YMM14,YMM14,YMM0
            add RDX,QWORD PTR [RSP+24]
            vpaddq YMM7,YMM8,YMM14
            vpmuludq YMM11,YMM11,YMM0
            vpaddq YMM8,YMM9,YMM11
            vmovq XMM9,R12
            mov R12,RDX
            dec R14D
            jne .L_40fe60

            lea R12,QWORD PTR [RSP+448]
            vpaddq YMM0,YMM13,YMM9
            vpxor YMM9,YMM9,YMM9
            vpaddq YMM0,YMM0,YMMWORD PTR [RBX+96]
            vpaddq YMM1,YMM1,YMMWORD PTR [R12-128]
            vpaddq YMM2,YMM2,YMMWORD PTR [R12-96]
            vpaddq YMM3,YMM3,YMMWORD PTR [R12-64]
            vpaddq YMM4,YMM4,YMMWORD PTR [R12-32]
            vpaddq YMM5,YMM5,YMMWORD PTR [R12]
            vpaddq YMM6,YMM6,YMMWORD PTR [R12+32]
            vpaddq YMM7,YMM7,YMMWORD PTR [R12+64]
            vpaddq YMM8,YMM8,YMMWORD PTR [R12+96]
            vpsrlq YMM14,YMM0,29
            vpand YMM0,YMM0,YMM15
            vpsrlq YMM11,YMM1,29
            vpand YMM1,YMM1,YMM15
            vpsrlq YMM12,YMM2,29
            vpermq YMM14,YMM14,147
            vpand YMM2,YMM2,YMM15
            vpsrlq YMM13,YMM3,29
            vpermq YMM11,YMM11,147
            vpand YMM3,YMM3,YMM15
            vpermq YMM12,YMM12,147
            vpblendd YMM10,YMM14,YMM9,3
            vpermq YMM13,YMM13,147
            vpblendd YMM14,YMM11,YMM14,3
            vpaddq YMM0,YMM0,YMM10
            vpblendd YMM11,YMM12,YMM11,3
            vpaddq YMM1,YMM1,YMM14
            vpblendd YMM12,YMM13,YMM12,3
            vpaddq YMM2,YMM2,YMM11
            vpblendd YMM13,YMM9,YMM13,3
            vpaddq YMM3,YMM3,YMM12
            vpaddq YMM4,YMM4,YMM13
            vpsrlq YMM14,YMM0,29
            vpand YMM0,YMM0,YMM15
            vpsrlq YMM11,YMM1,29
            vpand YMM1,YMM1,YMM15
            vpsrlq YMM12,YMM2,29
            vpermq YMM14,YMM14,147
            vpand YMM2,YMM2,YMM15
            vpsrlq YMM13,YMM3,29
            vpermq YMM11,YMM11,147
            vpand YMM3,YMM3,YMM15
            vpermq YMM12,YMM12,147
            vpblendd YMM10,YMM14,YMM9,3
            vpermq YMM13,YMM13,147
            vpblendd YMM14,YMM11,YMM14,3
            vpaddq YMM0,YMM0,YMM10
            vpblendd YMM11,YMM12,YMM11,3
            vpaddq YMM1,YMM1,YMM14
            vmovdqu YMMWORD PTR [RDI-128],YMM0
            vpblendd YMM12,YMM13,YMM12,3
            vpaddq YMM2,YMM2,YMM11
            vmovdqu YMMWORD PTR [RDI-96],YMM1
            vpblendd YMM13,YMM9,YMM13,3
            vpaddq YMM3,YMM3,YMM12
            vmovdqu YMMWORD PTR [RDI-64],YMM2
            vpaddq YMM4,YMM4,YMM13
            vmovdqu YMMWORD PTR [RDI-32],YMM3
            vpsrlq YMM14,YMM4,29
            vpand YMM4,YMM4,YMM15
            vpsrlq YMM11,YMM5,29
            vpand YMM5,YMM5,YMM15
            vpsrlq YMM12,YMM6,29
            vpermq YMM14,YMM14,147
            vpand YMM6,YMM6,YMM15
            vpsrlq YMM13,YMM7,29
            vpermq YMM11,YMM11,147
            vpand YMM7,YMM7,YMM15
            vpsrlq YMM0,YMM8,29
            vpermq YMM12,YMM12,147
            vpand YMM8,YMM8,YMM15
            vpermq YMM13,YMM13,147
            vpblendd YMM10,YMM14,YMM9,3
            vpermq YMM0,YMM0,147
            vpblendd YMM14,YMM11,YMM14,3
            vpaddq YMM4,YMM4,YMM10
            vpblendd YMM11,YMM12,YMM11,3
            vpaddq YMM5,YMM5,YMM14
            vpblendd YMM12,YMM13,YMM12,3
            vpaddq YMM6,YMM6,YMM11
            vpblendd YMM13,YMM0,YMM13,3
            vpaddq YMM7,YMM7,YMM12
            vpaddq YMM8,YMM8,YMM13
            vpsrlq YMM14,YMM4,29
            vpand YMM4,YMM4,YMM15
            vpsrlq YMM11,YMM5,29
            vpand YMM5,YMM5,YMM15
            vpsrlq YMM12,YMM6,29
            vpermq YMM14,YMM14,147
            vpand YMM6,YMM6,YMM15
            vpsrlq YMM13,YMM7,29
            vpermq YMM11,YMM11,147
            vpand YMM7,YMM7,YMM15
            vpsrlq YMM0,YMM8,29
            vpermq YMM12,YMM12,147
            vpand YMM8,YMM8,YMM15
            vpermq YMM13,YMM13,147
            vpblendd YMM10,YMM14,YMM9,3
            vpermq YMM0,YMM0,147
            vpblendd YMM14,YMM11,YMM14,3
            vpaddq YMM4,YMM4,YMM10
            vpblendd YMM11,YMM12,YMM11,3
            vpaddq YMM5,YMM5,YMM14
            vmovdqu YMMWORD PTR [RDI],YMM4
            vpblendd YMM12,YMM13,YMM12,3
            vpaddq YMM6,YMM6,YMM11
            vmovdqu YMMWORD PTR [RDI+32],YMM5
            vpblendd YMM13,YMM0,YMM13,3
            vpaddq YMM7,YMM7,YMM12
            vmovdqu YMMWORD PTR [RDI+64],YMM6
            vpaddq YMM8,YMM8,YMM13
            vmovdqu YMMWORD PTR [RDI+96],YMM7
            vmovdqu YMMWORD PTR [RDI+128],YMM8
            mov RSI,RDI
            dec R8D
            jne .L_40f9a0

            vzeroall 
            mov RAX,RBP
            mov R15,QWORD PTR [RAX-48]
            mov R14,QWORD PTR [RAX-40]
            mov R13,QWORD PTR [RAX-32]
            mov R12,QWORD PTR [RAX-24]
            mov RBP,QWORD PTR [RAX-16]
            mov RBX,QWORD PTR [RAX-8]
            lea RSP,QWORD PTR [RAX]
            ret 
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90
          .byte 0x90

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_410440:

            lea RAX,QWORD PTR [RSP]
            push RBX
            push RBP
            push R12
            push R13
            push R14
            push R15
            mov RBP,RAX
            vzeroall 
            mov R13,RDX
            sub RSP,64
            mov R15,RSI
            and R15,4095
            add R15,320
            shr R15,12
            mov R15,RSI
            cmovne RSI,R13
            cmovne R13,R15
            mov R15,RCX
            sub RSI,-128
            sub RCX,-128
            sub RDI,-128
            and R15,4095
            add R15,320
            shr R15,12
            je .L_410546

            sub RSP,320
            vmovdqu YMM0,YMMWORD PTR [RCX-128]
            and RSP,-512
            vmovdqu YMM1,YMMWORD PTR [RCX-96]
            vmovdqu YMM2,YMMWORD PTR [RCX-64]
            vmovdqu YMM3,YMMWORD PTR [RCX-32]
            vmovdqu YMM4,YMMWORD PTR [RCX]
            vmovdqu YMM5,YMMWORD PTR [RCX+32]
            vmovdqu YMM6,YMMWORD PTR [RCX+64]
            vmovdqu YMM7,YMMWORD PTR [RCX+96]
            vmovdqu YMM8,YMMWORD PTR [RCX+128]
            lea RCX,QWORD PTR [RSP+192]
            vmovdqu YMMWORD PTR [RCX-128],YMM0
            vpxor YMM0,YMM0,YMM0
            vmovdqu YMMWORD PTR [RCX-96],YMM1
            vpxor YMM1,YMM1,YMM1
            vmovdqu YMMWORD PTR [RCX-64],YMM2
            vpxor YMM2,YMM2,YMM2
            vmovdqu YMMWORD PTR [RCX-32],YMM3
            vpxor YMM3,YMM3,YMM3
            vmovdqu YMMWORD PTR [RCX],YMM4
            vpxor YMM4,YMM4,YMM4
            vmovdqu YMMWORD PTR [RCX+32],YMM5
            vpxor YMM5,YMM5,YMM5
            vmovdqu YMMWORD PTR [RCX+64],YMM6
            vpxor YMM6,YMM6,YMM6
            vmovdqu YMMWORD PTR [RCX+96],YMM7
            vpxor YMM7,YMM7,YMM7
            vmovdqu YMMWORD PTR [RCX+128],YMM8
            vmovdqa YMM8,YMM0
            vmovdqu YMMWORD PTR [RCX+160],YMM9
.L_410546:

            and RSP,-64
            mov RBX,QWORD PTR [R13]
            vpbroadcastq YMM10,QWORD PTR [R13]
            vmovdqu YMMWORD PTR [RSP],YMM0
            xor R9,R9
            xor R10,R10
            xor R11,R11
            xor R12,R12
            vmovdqu YMM15,YMMWORD PTR [RIP+.L_411400]
            mov R14D,9
            vmovdqu YMMWORD PTR [RDI+160],YMM9
            jmp .L_410580
          .byte 0x66
          .byte 0x90
.L_410580:

            vpsrlq YMM9,YMM3,29
            mov RAX,RBX
            imul RAX,QWORD PTR [RSI-128]
            add RAX,R9
            mov R10,RBX
            imul R10,QWORD PTR [RSI-120]
            add R10,QWORD PTR [RSP+8]
            mov R9,RAX
            imul EAX,R8D
            and EAX,536870911
            mov R11,RBX
            imul R11,QWORD PTR [RSI-112]
            add R11,QWORD PTR [RSP+16]
            mov R12,RBX
            imul R12,QWORD PTR [RSI-104]
            add R12,QWORD PTR [RSP+24]
            vpmuludq YMM0,YMM10,YMMWORD PTR [RSI-96]
            vmovd XMM11,EAX
            vpaddq YMM1,YMM1,YMM0
            vpmuludq YMM12,YMM10,YMMWORD PTR [RSI-64]
            vpbroadcastq YMM11,XMM11
            vpaddq YMM2,YMM2,YMM12
            vpmuludq YMM13,YMM10,YMMWORD PTR [RSI-32]
            vpand YMM3,YMM3,YMM15
            vpaddq YMM3,YMM3,YMM13
            vpmuludq YMM0,YMM10,YMMWORD PTR [RSI]
            vpaddq YMM4,YMM4,YMM0
            vpmuludq YMM12,YMM10,YMMWORD PTR [RSI+32]
            vpaddq YMM5,YMM5,YMM12
            vpmuludq YMM13,YMM10,YMMWORD PTR [RSI+64]
            vpaddq YMM6,YMM6,YMM13
            vpmuludq YMM0,YMM10,YMMWORD PTR [RSI+96]
            vpermq YMM9,YMM9,147
            vpaddq YMM7,YMM7,YMM0
            vpmuludq YMM12,YMM10,YMMWORD PTR [RSI+128]
            vpbroadcastq YMM10,QWORD PTR [R13+8]
            vpaddq YMM8,YMM8,YMM12
            mov RDX,RAX
            imul RAX,QWORD PTR [RCX-128]
            add R9,RAX
            mov RAX,RDX
            imul RAX,QWORD PTR [RCX-120]
            add R10,RAX
            mov RAX,RDX
            imul RAX,QWORD PTR [RCX-112]
            add R11,RAX
            shr R9,29
            imul RDX,QWORD PTR [RCX-104]
            add R12,RDX
            add R10,R9
            vpmuludq YMM13,YMM11,YMMWORD PTR [RCX-96]
            vmovq RBX,XMM10
            vpaddq YMM1,YMM1,YMM13
            vpmuludq YMM0,YMM11,YMMWORD PTR [RCX-64]
            vpaddq YMM2,YMM2,YMM0
            vpmuludq YMM12,YMM11,YMMWORD PTR [RCX-32]
            vpaddq YMM3,YMM3,YMM12
            vpmuludq YMM13,YMM11,YMMWORD PTR [RCX]
            vpaddq YMM4,YMM4,YMM13
            vpmuludq YMM0,YMM11,YMMWORD PTR [RCX+32]
            vpaddq YMM5,YMM5,YMM0
            vpmuludq YMM12,YMM11,YMMWORD PTR [RCX+64]
            vpaddq YMM6,YMM6,YMM12
            vpmuludq YMM13,YMM11,YMMWORD PTR [RCX+96]
            vpblendd YMM9,YMM9,YMM14,3
            vpaddq YMM7,YMM7,YMM13
            vpmuludq YMM0,YMM11,YMMWORD PTR [RCX+128]
            vpaddq YMM3,YMM3,YMM9
            vpaddq YMM8,YMM8,YMM0
            mov RAX,RBX
            imul RAX,QWORD PTR [RSI-128]
            add R10,RAX
            vmovdqu YMM12,YMMWORD PTR [RSI-104]
            mov RAX,RBX
            imul RAX,QWORD PTR [RSI-120]
            add R11,RAX
            vmovdqu YMM13,YMMWORD PTR [RSI-72]
            mov RAX,R10
            imul EAX,R8D
            and EAX,536870911
            imul RBX,QWORD PTR [RSI-112]
            add R12,RBX
            vpmuludq YMM12,YMM12,YMM10
            vmovd XMM11,EAX
            vmovdqu YMM0,YMMWORD PTR [RSI-40]
            vpaddq YMM1,YMM1,YMM12
            vpmuludq YMM13,YMM13,YMM10
            vpbroadcastq YMM11,XMM11
            vmovdqu YMM12,YMMWORD PTR [RSI-8]
            vpaddq YMM2,YMM2,YMM13
            vpmuludq YMM0,YMM0,YMM10
            vmovdqu YMM13,YMMWORD PTR [RSI+24]
            vpaddq YMM3,YMM3,YMM0
            vpmuludq YMM12,YMM12,YMM10
            vmovdqu YMM0,YMMWORD PTR [RSI+56]
            vpaddq YMM4,YMM4,YMM12
            vpmuludq YMM13,YMM13,YMM10
            vmovdqu YMM12,YMMWORD PTR [RSI+88]
            vpaddq YMM5,YMM5,YMM13
            vpmuludq YMM0,YMM0,YMM10
            vmovdqu YMM13,YMMWORD PTR [RSI+120]
            vpaddq YMM6,YMM6,YMM0
            vpmuludq YMM12,YMM12,YMM10
            vmovdqu YMM9,YMMWORD PTR [RSI+152]
            vpaddq YMM7,YMM7,YMM12
            vpmuludq YMM13,YMM13,YMM10
            vpaddq YMM8,YMM8,YMM13
            vpmuludq YMM9,YMM9,YMM10
            vpbroadcastq YMM10,QWORD PTR [R13+16]
            mov RDX,RAX
            imul RAX,QWORD PTR [RCX-128]
            add R10,RAX
            vmovdqu YMM0,YMMWORD PTR [RCX-104]
            mov RAX,RDX
            imul RAX,QWORD PTR [RCX-120]
            add R11,RAX
            vmovdqu YMM12,YMMWORD PTR [RCX-72]
            shr R10,29
            imul RDX,QWORD PTR [RCX-112]
            add R12,RDX
            add R11,R10
            vpmuludq YMM0,YMM0,YMM11
            vmovq RBX,XMM10
            vmovdqu YMM13,YMMWORD PTR [RCX-40]
            vpaddq YMM1,YMM1,YMM0
            vpmuludq YMM12,YMM12,YMM11
            vmovdqu YMM0,YMMWORD PTR [RCX-8]
            vpaddq YMM2,YMM2,YMM12
            vpmuludq YMM13,YMM13,YMM11
            vmovdqu YMM12,YMMWORD PTR [RCX+24]
            vpaddq YMM3,YMM3,YMM13
            vpmuludq YMM0,YMM0,YMM11
            vmovdqu YMM13,YMMWORD PTR [RCX+56]
            vpaddq YMM4,YMM4,YMM0
            vpmuludq YMM12,YMM12,YMM11
            vmovdqu YMM0,YMMWORD PTR [RCX+88]
            vpaddq YMM5,YMM5,YMM12
            vpmuludq YMM13,YMM13,YMM11
            vmovdqu YMM12,YMMWORD PTR [RCX+120]
            vpaddq YMM6,YMM6,YMM13
            vpmuludq YMM0,YMM0,YMM11
            vmovdqu YMM13,YMMWORD PTR [RCX+152]
            vpaddq YMM7,YMM7,YMM0
            vpmuludq YMM12,YMM12,YMM11
            vpaddq YMM8,YMM8,YMM12
            vpmuludq YMM13,YMM13,YMM11
            vpaddq YMM9,YMM9,YMM13
            vmovdqu YMM0,YMMWORD PTR [RSI-112]
            mov RAX,RBX
            imul RAX,QWORD PTR [RSI-128]
            add RAX,R11
            vmovdqu YMM12,YMMWORD PTR [RSI-80]
            mov R11,RAX
            imul EAX,R8D
            and EAX,536870911
            imul RBX,QWORD PTR [RSI-120]
            add R12,RBX
            vpmuludq YMM0,YMM0,YMM10
            vmovd XMM11,EAX
            vmovdqu YMM13,YMMWORD PTR [RSI-48]
            vpaddq YMM1,YMM1,YMM0
            vpmuludq YMM12,YMM12,YMM10
            vpbroadcastq YMM11,XMM11
            vmovdqu YMM0,YMMWORD PTR [RSI-16]
            vpaddq YMM2,YMM2,YMM12
            vpmuludq YMM13,YMM13,YMM10
            vmovdqu YMM12,YMMWORD PTR [RSI+16]
            vpaddq YMM3,YMM3,YMM13
            vpmuludq YMM0,YMM0,YMM10
            vmovdqu YMM13,YMMWORD PTR [RSI+48]
            vpaddq YMM4,YMM4,YMM0
            vpmuludq YMM12,YMM12,YMM10
            vmovdqu YMM0,YMMWORD PTR [RSI+80]
            vpaddq YMM5,YMM5,YMM12
            vpmuludq YMM13,YMM13,YMM10
            vmovdqu YMM12,YMMWORD PTR [RSI+112]
            vpaddq YMM6,YMM6,YMM13
            vpmuludq YMM0,YMM0,YMM10
            vmovdqu YMM13,YMMWORD PTR [RSI+144]
            vpaddq YMM7,YMM7,YMM0
            vpmuludq YMM12,YMM12,YMM10
            vpaddq YMM8,YMM8,YMM12
            vpmuludq YMM13,YMM13,YMM10
            vpbroadcastq YMM10,QWORD PTR [R13+24]
            vpaddq YMM9,YMM9,YMM13
            vmovdqu YMM0,YMMWORD PTR [RCX-112]
            mov RDX,RAX
            imul RAX,QWORD PTR [RCX-128]
            add R11,RAX
            vmovdqu YMM12,YMMWORD PTR [RCX-80]
            imul RDX,QWORD PTR [RCX-120]
            add R12,RDX
            shr R11,29
            vpmuludq YMM0,YMM0,YMM11
            vmovq RBX,XMM10
            vmovdqu YMM13,YMMWORD PTR [RCX-48]
            vpaddq YMM1,YMM1,YMM0
            vpmuludq YMM12,YMM12,YMM11
            vmovdqu YMM0,YMMWORD PTR [RCX-16]
            vpaddq YMM2,YMM2,YMM12
            vpmuludq YMM13,YMM13,YMM11
            vmovdqu YMM12,YMMWORD PTR [RCX+16]
            vpaddq YMM3,YMM3,YMM13
            vpmuludq YMM0,YMM0,YMM11
            vmovdqu YMM13,YMMWORD PTR [RCX+48]
            vpaddq YMM4,YMM4,YMM0
            vpmuludq YMM12,YMM12,YMM11
            vmovdqu YMM0,YMMWORD PTR [RCX+80]
            vpaddq YMM5,YMM5,YMM12
            vpmuludq YMM13,YMM13,YMM11
            vmovdqu YMM12,YMMWORD PTR [RCX+112]
            vpaddq YMM6,YMM6,YMM13
            vpmuludq YMM0,YMM0,YMM11
            vmovdqu YMM13,YMMWORD PTR [RCX+144]
            vpaddq YMM7,YMM7,YMM0
            vpmuludq YMM12,YMM12,YMM11
            vmovdqu YMM0,YMMWORD PTR [RSI-120]
            vpaddq YMM8,YMM8,YMM12
            vpmuludq YMM13,YMM13,YMM11
            vmovdqu YMM12,YMMWORD PTR [RSI-88]
            vpaddq YMM9,YMM9,YMM13
            add R12,R11
            imul RBX,QWORD PTR [RSI-128]
            add R12,RBX
            mov RAX,R12
            imul EAX,R8D
            and EAX,536870911
            vpmuludq YMM0,YMM0,YMM10
            vmovd XMM11,EAX
            vmovdqu YMM13,YMMWORD PTR [RSI-56]
            vpaddq YMM1,YMM1,YMM0
            vpmuludq YMM12,YMM12,YMM10
            vpbroadcastq YMM11,XMM11
            vmovdqu YMM0,YMMWORD PTR [RSI-24]
            vpaddq YMM2,YMM2,YMM12
            vpmuludq YMM13,YMM13,YMM10
            vmovdqu YMM12,YMMWORD PTR [RSI+8]
            vpaddq YMM3,YMM3,YMM13
            vpmuludq YMM0,YMM0,YMM10
            vmovdqu YMM13,YMMWORD PTR [RSI+40]
            vpaddq YMM4,YMM4,YMM0
            vpmuludq YMM12,YMM12,YMM10
            vmovdqu YMM0,YMMWORD PTR [RSI+72]
            vpaddq YMM5,YMM5,YMM12
            vpmuludq YMM13,YMM13,YMM10
            vmovdqu YMM12,YMMWORD PTR [RSI+104]
            vpaddq YMM6,YMM6,YMM13
            vpmuludq YMM0,YMM0,YMM10
            vmovdqu YMM13,YMMWORD PTR [RSI+136]
            vpaddq YMM7,YMM7,YMM0
            vpmuludq YMM12,YMM12,YMM10
            vpaddq YMM8,YMM8,YMM12
            vpmuludq YMM13,YMM13,YMM10
            vpbroadcastq YMM10,QWORD PTR [R13+32]
            vpaddq YMM9,YMM9,YMM13
            add R13,32
            vmovdqu YMM0,YMMWORD PTR [RCX-120]
            imul RAX,QWORD PTR [RCX-128]
            add R12,RAX
            shr R12,29
            vmovdqu YMM12,YMMWORD PTR [RCX-88]
            vpmuludq YMM0,YMM0,YMM11
            vmovq RBX,XMM10
            vmovdqu YMM13,YMMWORD PTR [RCX-56]
            vpaddq YMM0,YMM1,YMM0
            vpmuludq YMM12,YMM12,YMM11
            vmovdqu YMMWORD PTR [RSP],YMM0
            vpaddq YMM1,YMM2,YMM12
            vmovdqu YMM0,YMMWORD PTR [RCX-24]
            vpmuludq YMM13,YMM13,YMM11
            vmovdqu YMM12,YMMWORD PTR [RCX+8]
            vpaddq YMM2,YMM3,YMM13
            vpmuludq YMM0,YMM0,YMM11
            vmovdqu YMM13,YMMWORD PTR [RCX+40]
            vpaddq YMM3,YMM4,YMM0
            vpmuludq YMM12,YMM12,YMM11
            vmovdqu YMM0,YMMWORD PTR [RCX+72]
            vpaddq YMM4,YMM5,YMM12
            vpmuludq YMM13,YMM13,YMM11
            vmovdqu YMM12,YMMWORD PTR [RCX+104]
            vpaddq YMM5,YMM6,YMM13
            vpmuludq YMM0,YMM0,YMM11
            vmovdqu YMM13,YMMWORD PTR [RCX+136]
            mov R9,R12
            vpaddq YMM6,YMM7,YMM0
            vpmuludq YMM12,YMM12,YMM11
            add R9,QWORD PTR [RSP]
            vpaddq YMM7,YMM8,YMM12
            vpmuludq YMM13,YMM13,YMM11
            vmovq XMM12,R12
            vpaddq YMM8,YMM9,YMM13
            dec R14D
            jne .L_410580

            vpermq YMM15,YMM15,0
            vpaddq YMM0,YMM12,YMMWORD PTR [RSP]
            vpsrlq YMM12,YMM0,29
            vpand YMM0,YMM0,YMM15
            vpsrlq YMM13,YMM1,29
            vpand YMM1,YMM1,YMM15
            vpsrlq YMM10,YMM2,29
            vpermq YMM12,YMM12,147
            vpand YMM2,YMM2,YMM15
            vpsrlq YMM11,YMM3,29
            vpermq YMM13,YMM13,147
            vpand YMM3,YMM3,YMM15
            vpblendd YMM9,YMM12,YMM14,3
            vpermq YMM10,YMM10,147
            vpblendd YMM12,YMM13,YMM12,3
            vpermq YMM11,YMM11,147
            vpaddq YMM0,YMM0,YMM9
            vpblendd YMM13,YMM10,YMM13,3
            vpaddq YMM1,YMM1,YMM12
            vpblendd YMM10,YMM11,YMM10,3
            vpaddq YMM2,YMM2,YMM13
            vpblendd YMM11,YMM14,YMM11,3
            vpaddq YMM3,YMM3,YMM10
            vpaddq YMM4,YMM4,YMM11
            vpsrlq YMM12,YMM0,29
            vpand YMM0,YMM0,YMM15
            vpsrlq YMM13,YMM1,29
            vpand YMM1,YMM1,YMM15
            vpsrlq YMM10,YMM2,29
            vpermq YMM12,YMM12,147
            vpand YMM2,YMM2,YMM15
            vpsrlq YMM11,YMM3,29
            vpermq YMM13,YMM13,147
            vpand YMM3,YMM3,YMM15
            vpermq YMM10,YMM10,147
            vpblendd YMM9,YMM12,YMM14,3
            vpermq YMM11,YMM11,147
            vpblendd YMM12,YMM13,YMM12,3
            vpaddq YMM0,YMM0,YMM9
            vpblendd YMM13,YMM10,YMM13,3
            vpaddq YMM1,YMM1,YMM12
            vpblendd YMM10,YMM11,YMM10,3
            vpaddq YMM2,YMM2,YMM13
            vpblendd YMM11,YMM14,YMM11,3
            vpaddq YMM3,YMM3,YMM10
            vpaddq YMM4,YMM4,YMM11
            vmovdqu YMMWORD PTR [RDI-128],YMM0
            vmovdqu YMMWORD PTR [RDI-96],YMM1
            vmovdqu YMMWORD PTR [RDI-64],YMM2
            vmovdqu YMMWORD PTR [RDI-32],YMM3
            vpsrlq YMM12,YMM4,29
            vpand YMM4,YMM4,YMM15
            vpsrlq YMM13,YMM5,29
            vpand YMM5,YMM5,YMM15
            vpsrlq YMM10,YMM6,29
            vpermq YMM12,YMM12,147
            vpand YMM6,YMM6,YMM15
            vpsrlq YMM11,YMM7,29
            vpermq YMM13,YMM13,147
            vpand YMM7,YMM7,YMM15
            vpsrlq YMM0,YMM8,29
            vpermq YMM10,YMM10,147
            vpand YMM8,YMM8,YMM15
            vpermq YMM11,YMM11,147
            vpblendd YMM9,YMM12,YMM14,3
            vpermq YMM0,YMM0,147
            vpblendd YMM12,YMM13,YMM12,3
            vpaddq YMM4,YMM4,YMM9
            vpblendd YMM13,YMM10,YMM13,3
            vpaddq YMM5,YMM5,YMM12
            vpblendd YMM10,YMM11,YMM10,3
            vpaddq YMM6,YMM6,YMM13
            vpblendd YMM11,YMM0,YMM11,3
            vpaddq YMM7,YMM7,YMM10
            vpaddq YMM8,YMM8,YMM11
            vpsrlq YMM12,YMM4,29
            vpand YMM4,YMM4,YMM15
            vpsrlq YMM13,YMM5,29
            vpand YMM5,YMM5,YMM15
            vpsrlq YMM10,YMM6,29
            vpermq YMM12,YMM12,147
            vpand YMM6,YMM6,YMM15
            vpsrlq YMM11,YMM7,29
            vpermq YMM13,YMM13,147
            vpand YMM7,YMM7,YMM15
            vpsrlq YMM0,YMM8,29
            vpermq YMM10,YMM10,147
            vpand YMM8,YMM8,YMM15
            vpermq YMM11,YMM11,147
            vpblendd YMM9,YMM12,YMM14,3
            vpermq YMM0,YMM0,147
            vpblendd YMM12,YMM13,YMM12,3
            vpaddq YMM4,YMM4,YMM9
            vpblendd YMM13,YMM10,YMM13,3
            vpaddq YMM5,YMM5,YMM12
            vpblendd YMM10,YMM11,YMM10,3
            vpaddq YMM6,YMM6,YMM13
            vpblendd YMM11,YMM0,YMM11,3
            vpaddq YMM7,YMM7,YMM10
            vpaddq YMM8,YMM8,YMM11
            vmovdqu YMMWORD PTR [RDI],YMM4
            vmovdqu YMMWORD PTR [RDI+32],YMM5
            vmovdqu YMMWORD PTR [RDI+64],YMM6
            vmovdqu YMMWORD PTR [RDI+96],YMM7
            vmovdqu YMMWORD PTR [RDI+128],YMM8
            vzeroupper 
            mov RAX,RBP
            mov R15,QWORD PTR [RAX-48]
            mov R14,QWORD PTR [RAX-40]
            mov R13,QWORD PTR [RAX-32]
            mov R12,QWORD PTR [RAX-24]
            mov RBP,QWORD PTR [RAX-16]
            mov RBX,QWORD PTR [RAX-8]
            lea RSP,QWORD PTR [RAX]
            ret 
          .byte 0x66
          .byte 0x90
.L_410d40:

            sub RSI,-128
            xor RAX,RAX
            mov R8,QWORD PTR [RSI-128]
            mov R9,QWORD PTR [RSI-120]
            mov R10,QWORD PTR [RSI-112]
            shl R8,0
            shl R9,29
            mov R11,R10
            shl R10,58
            shr R11,6
            add RAX,R8
            add RAX,R9
            add RAX,R10
            adc R11,0
            mov QWORD PTR [RDI],RAX
            mov RAX,R11
            mov R8,QWORD PTR [RSI-104]
            mov R9,QWORD PTR [RSI-96]
            shl R8,23
            mov R10,R9
            shl R9,52
            shr R10,12
            add RAX,R8
            add RAX,R9
            adc R10,0
            mov QWORD PTR [RDI+8],RAX
            mov RAX,R10
            mov R11,QWORD PTR [RSI-88]
            mov R8,QWORD PTR [RSI-80]
            shl R11,17
            mov R9,R8
            shl R8,46
            shr R9,18
            add RAX,R11
            add RAX,R8
            adc R9,0
            mov QWORD PTR [RDI+16],RAX
            mov RAX,R9
            mov R10,QWORD PTR [RSI-72]
            mov R11,QWORD PTR [RSI-64]
            shl R10,11
            mov R8,R11
            shl R11,40
            shr R8,24
            add RAX,R10
            add RAX,R11
            adc R8,0
            mov QWORD PTR [RDI+24],RAX
            mov RAX,R8
            mov R9,QWORD PTR [RSI-56]
            mov R10,QWORD PTR [RSI-48]
            mov R11,QWORD PTR [RSI-40]
            shl R9,5
            shl R10,34
            mov R8,R11
            shl R11,63
            shr R8,1
            add RAX,R9
            add RAX,R10
            add RAX,R11
            adc R8,0
            mov QWORD PTR [RDI+32],RAX
            mov RAX,R8
            mov R9,QWORD PTR [RSI-32]
            mov R10,QWORD PTR [RSI-24]
            shl R9,28
            mov R11,R10
            shl R10,57
            shr R11,7
            add RAX,R9
            add RAX,R10
            adc R11,0
            mov QWORD PTR [RDI+40],RAX
            mov RAX,R11
            mov R8,QWORD PTR [RSI-16]
            mov R9,QWORD PTR [RSI-8]
            shl R8,22
            mov R10,R9
            shl R9,51
            shr R10,13
            add RAX,R8
            add RAX,R9
            adc R10,0
            mov QWORD PTR [RDI+48],RAX
            mov RAX,R10
            mov R11,QWORD PTR [RSI]
            mov R8,QWORD PTR [RSI+8]
            shl R11,16
            mov R9,R8
            shl R8,45
            shr R9,19
            add RAX,R11
            add RAX,R8
            adc R9,0
            mov QWORD PTR [RDI+56],RAX
            mov RAX,R9
            mov R10,QWORD PTR [RSI+16]
            mov R11,QWORD PTR [RSI+24]
            shl R10,10
            mov R8,R11
            shl R11,39
            shr R8,25
            add RAX,R10
            add RAX,R11
            adc R8,0
            mov QWORD PTR [RDI+64],RAX
            mov RAX,R8
            mov R9,QWORD PTR [RSI+32]
            mov R10,QWORD PTR [RSI+40]
            mov R11,QWORD PTR [RSI+48]
            shl R9,4
            shl R10,33
            mov R8,R11
            shl R11,62
            shr R8,2
            add RAX,R9
            add RAX,R10
            add RAX,R11
            adc R8,0
            mov QWORD PTR [RDI+72],RAX
            mov RAX,R8
            mov R9,QWORD PTR [RSI+56]
            mov R10,QWORD PTR [RSI+64]
            shl R9,27
            mov R11,R10
            shl R10,56
            shr R11,8
            add RAX,R9
            add RAX,R10
            adc R11,0
            mov QWORD PTR [RDI+80],RAX
            mov RAX,R11
            mov R8,QWORD PTR [RSI+72]
            mov R9,QWORD PTR [RSI+80]
            shl R8,21
            mov R10,R9
            shl R9,50
            shr R10,14
            add RAX,R8
            add RAX,R9
            adc R10,0
            mov QWORD PTR [RDI+88],RAX
            mov RAX,R10
            mov R11,QWORD PTR [RSI+88]
            mov R8,QWORD PTR [RSI+96]
            shl R11,15
            mov R9,R8
            shl R8,44
            shr R9,20
            add RAX,R11
            add RAX,R8
            adc R9,0
            mov QWORD PTR [RDI+96],RAX
            mov RAX,R9
            mov R10,QWORD PTR [RSI+104]
            mov R11,QWORD PTR [RSI+112]
            shl R10,9
            mov R8,R11
            shl R11,38
            shr R8,26
            add RAX,R10
            add RAX,R11
            adc R8,0
            mov QWORD PTR [RDI+104],RAX
            mov RAX,R8
            mov R9,QWORD PTR [RSI+120]
            mov R10,QWORD PTR [RSI+128]
            mov R11,QWORD PTR [RSI+136]
            shl R9,3
            shl R10,32
            mov R8,R11
            shl R11,61
            shr R8,3
            add RAX,R9
            add RAX,R10
            add RAX,R11
            adc R8,0
            mov QWORD PTR [RDI+112],RAX
            mov RAX,R8
            mov R9,QWORD PTR [RSI+144]
            mov R10,QWORD PTR [RSI+152]
            shl R9,26
            mov R11,R10
            shl R10,55
            shr R11,9
            add RAX,R9
            add RAX,R10
            adc R11,0
            mov QWORD PTR [RDI+120],RAX
            mov RAX,R11
            ret 
          .byte 0x66
          .byte 0x90
.L_411000:

            sub RDI,-128
            mov R8,QWORD PTR [RSI]
            mov EAX,536870911
            mov R9,QWORD PTR [RSI+8]
            mov R11,R8
            shr R11,0
            and R11,RAX
            mov QWORD PTR [RDI-128],R11
            mov R10,R8
            shr R10,29
            and R10,RAX
            mov QWORD PTR [RDI-120],R10
            shrd R8,R9,58
            and R8,RAX
            mov QWORD PTR [RDI-112],R8
            mov R10,QWORD PTR [RSI+16]
            mov R8,R9
            shr R8,23
            and R8,RAX
            mov QWORD PTR [RDI-104],R8
            shrd R9,R10,52
            and R9,RAX
            mov QWORD PTR [RDI-96],R9
            mov R11,QWORD PTR [RSI+24]
            mov R9,R10
            shr R9,17
            and R9,RAX
            mov QWORD PTR [RDI-88],R9
            shrd R10,R11,46
            and R10,RAX
            mov QWORD PTR [RDI-80],R10
            mov R8,QWORD PTR [RSI+32]
            mov R10,R11
            shr R10,11
            and R10,RAX
            mov QWORD PTR [RDI-72],R10
            shrd R11,R8,40
            and R11,RAX
            mov QWORD PTR [RDI-64],R11
            mov R9,QWORD PTR [RSI+40]
            mov R11,R8
            shr R11,5
            and R11,RAX
            mov QWORD PTR [RDI-56],R11
            mov R10,R8
            shr R10,34
            and R10,RAX
            mov QWORD PTR [RDI-48],R10
            shrd R8,R9,63
            and R8,RAX
            mov QWORD PTR [RDI-40],R8
            mov R10,QWORD PTR [RSI+48]
            mov R8,R9
            shr R8,28
            and R8,RAX
            mov QWORD PTR [RDI-32],R8
            shrd R9,R10,57
            and R9,RAX
            mov QWORD PTR [RDI-24],R9
            mov R11,QWORD PTR [RSI+56]
            mov R9,R10
            shr R9,22
            and R9,RAX
            mov QWORD PTR [RDI-16],R9
            shrd R10,R11,51
            and R10,RAX
            mov QWORD PTR [RDI-8],R10
            mov R8,QWORD PTR [RSI+64]
            mov R10,R11
            shr R10,16
            and R10,RAX
            mov QWORD PTR [RDI],R10
            shrd R11,R8,45
            and R11,RAX
            mov QWORD PTR [RDI+8],R11
            mov R9,QWORD PTR [RSI+72]
            mov R11,R8
            shr R11,10
            and R11,RAX
            mov QWORD PTR [RDI+16],R11
            shrd R8,R9,39
            and R8,RAX
            mov QWORD PTR [RDI+24],R8
            mov R10,QWORD PTR [RSI+80]
            mov R8,R9
            shr R8,4
            and R8,RAX
            mov QWORD PTR [RDI+32],R8
            mov R11,R9
            shr R11,33
            and R11,RAX
            mov QWORD PTR [RDI+40],R11
            shrd R9,R10,62
            and R9,RAX
            mov QWORD PTR [RDI+48],R9
            mov R11,QWORD PTR [RSI+88]
            mov R9,R10
            shr R9,27
            and R9,RAX
            mov QWORD PTR [RDI+56],R9
            shrd R10,R11,56
            and R10,RAX
            mov QWORD PTR [RDI+64],R10
            mov R8,QWORD PTR [RSI+96]
            mov R10,R11
            shr R10,21
            and R10,RAX
            mov QWORD PTR [RDI+72],R10
            shrd R11,R8,50
            and R11,RAX
            mov QWORD PTR [RDI+80],R11
            mov R9,QWORD PTR [RSI+104]
            mov R11,R8
            shr R11,15
            and R11,RAX
            mov QWORD PTR [RDI+88],R11
            shrd R8,R9,44
            and R8,RAX
            mov QWORD PTR [RDI+96],R8
            mov R10,QWORD PTR [RSI+112]
            mov R8,R9
            shr R8,9
            and R8,RAX
            mov QWORD PTR [RDI+104],R8
            shrd R9,R10,38
            and R9,RAX
            mov QWORD PTR [RDI+112],R9
            mov R11,QWORD PTR [RSI+120]
            mov R9,R10
            shr R9,3
            and R9,RAX
            mov QWORD PTR [RDI+120],R9
            mov R8,R10
            shr R8,32
            and R8,RAX
            mov QWORD PTR [RDI+128],R8
            shrd R10,R11,61
            and R10,RAX
            mov QWORD PTR [RDI+136],R10
            xor R8,R8
            mov R10,R11
            shr R10,26
            and R10,RAX
            mov QWORD PTR [RDI+144],R10
            shrd R11,R8,55
            and R11,RAX
            mov QWORD PTR [RDI+152],R11
            mov QWORD PTR [RDI+160],R8
            mov QWORD PTR [RDI+168],R8
            mov QWORD PTR [RDI+176],R8
            mov QWORD PTR [RDI+184],R8
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411260:

            vzeroupper 
            vmovdqu YMM5,YMMWORD PTR [RIP+.L_411420]
            shl EDX,4
            lea RDI,QWORD PTR [RDI+RDX*1]
            mov EAX,9
            jmp .L_411280
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411280:

            vmovdqu YMM0,YMMWORD PTR [RSI]
            lea RSI,QWORD PTR [RSI+32]
            vpermd YMM0,YMM5,YMM0
            vmovdqu XMMWORD PTR [RDI],XMM0
            lea RDI,QWORD PTR [RDI+512]
            dec EAX
            jne .L_411280

            vzeroupper 
            ret 
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4112c0:

            lea R11,QWORD PTR [RIP+.L_411460]
            mov EAX,EDX
            and EDX,3
            shr EAX,2
            shl EDX,4
            vmovdqu YMM7,YMMWORD PTR [R11-32]
            vpbroadcastb XMM8,BYTE PTR [R11+RAX*1+8]
            vpbroadcastb XMM9,BYTE PTR [R11+RAX*1+7]
            vpbroadcastb XMM10,BYTE PTR [R11+RAX*1+6]
            vpbroadcastb XMM11,BYTE PTR [R11+RAX*1+5]
            vpbroadcastb XMM12,BYTE PTR [R11+RAX*1+4]
            vpbroadcastb XMM13,BYTE PTR [R11+RAX*1+3]
            vpbroadcastb XMM14,BYTE PTR [R11+RAX*1+2]
            vpbroadcastb XMM15,BYTE PTR [R11+RAX*1+1]
            lea RSI,QWORD PTR [RSI+RDX*1+64]
            mov R11,64
            mov EAX,9
            jmp .L_411340
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411340:

            vpand XMM0,XMM8,XMMWORD PTR [RSI-64]
            vpand XMM1,XMM9,XMMWORD PTR [RSI]
            vpand XMM2,XMM10,XMMWORD PTR [RSI+64]
            vpand XMM3,XMM11,XMMWORD PTR [RSI+R11*2]
            vpor XMM1,XMM1,XMM0
            vpand XMM4,XMM12,XMMWORD PTR [RSI+R11*2+64]
            vpor XMM3,XMM3,XMM2
            vpand XMM5,XMM13,XMMWORD PTR [RSI+R11*4]
            vpor XMM3,XMM3,XMM1
            vpand XMM6,XMM14,XMMWORD PTR [RSI+R11*4+64]
            vpor XMM5,XMM5,XMM4
            vpand XMM2,XMM15,XMMWORD PTR [RSI+R11*8-128]
            lea RSI,QWORD PTR [RSI+R11*8]
            vpor XMM5,XMM5,XMM3
            vpor XMM6,XMM6,XMM2
            vpor XMM6,XMM6,XMM5
            vpermd YMM6,YMM7,YMM6
            vmovdqu YMMWORD PTR [RDI],YMM6
            lea RDI,QWORD PTR [RDI+32]
            dec EAX
            jne .L_411340

            vpxor YMM0,YMM0,YMM0
            vmovdqu YMMWORD PTR [RDI],YMM0
            vzeroupper 
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4113c0:

            mov EAX,DWORD PTR [RIP+.L_63b410]
            mov ECX,524544
            mov EDX,0
            and ECX,EAX
            cmp ECX,524544
            cmove EAX,EDX
            and EAX,32
            shr EAX,5
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411400:
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
          .byte 0xff
.L_411420:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411460:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411480:

            push RBX
            mov RBX,RDI
            call .L_4045a0

            lea RDI,QWORD PTR [RBX+24]
            call .L_4045a0

            mov DWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+56],0
            pop RBX
            ret 
.L_4114a2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4114b0:

            push RBX

            lea RSI,QWORD PTR [RIP+.L_41193d]
            mov EDX,75
            mov EDI,64
            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            je .L_4114ee

            mov RDI,RAX
            call .L_4045a0

            lea RDI,QWORD PTR [RBX+24]
            call .L_4045a0

            mov DWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+56],1
.L_4114ee:

            mov RAX,RBX
            pop RBX

            ret 
.L_4114f3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411500:

            test RDI,RDI
            je .L_411530

            push RBX
            mov RBX,RDI
            call .L_404540

            lea RDI,QWORD PTR [RBX+24]
            call .L_404540

            test BYTE PTR [RBX+56],1
            jne .L_411520

            pop RBX
            ret 
          .byte 0x90
.L_411520:

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411530:

            ret 
.L_411532:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411540:

            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            call .L_404650

            xor EDX,EDX
            test RAX,RAX
            je .L_41157a

            lea RDI,QWORD PTR [RBX+24]
            xor ESI,ESI
            call .L_4048e0

            mov RDI,RBP
            call .L_404490

            mov DWORD PTR [RBX+52],0
            mov DWORD PTR [RBX+48],EAX
            mov EDX,1
.L_41157a:

            add RSP,8
            mov EAX,EDX
            pop RBX
            pop RBP
            ret 
.L_411583:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411590:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov RDI,RCX
            push RBX
.L_41159e:

            mov RBX,RCX
            mov R14,RSI
            mov R12D,EDX
            call .L_405420

            mov RDI,RBX
            call .L_4055b0

            test RAX,RAX
            je .L_411600

            mov ESI,R12D
            mov RDI,RAX
            mov RBP,RAX
            call .L_404c20

            test EAX,EAX
            je .L_411600

            xor ESI,ESI
            mov R8,RBX
            mov RCX,R14
            mov RDX,RBP
            mov RDI,R13
            call .L_41b130

            test EAX,EAX
            je .L_411600
.L_4115e2:

            mov RDI,RBX
            call .L_405530

            pop RBX
.L_4115eb:

            mov EAX,R12D
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411600:

            mov R12D,4294967295
            jmp .L_4115e2
.L_411608:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411610:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,R8
            mov RDI,R8
            sub RSP,24
.L_41162d:

            mov QWORD PTR [RSP],RDX
            call .L_405420

            mov RDI,RBX
            call .L_4055b0

            mov RDI,RBX
            mov R13,RAX
            call .L_4055b0

            test RBP,RBP
            mov R15,RAX
            je .L_411748

            test R12,R12
            je .L_411760
.L_41165e:

            test R13,R13
            je .L_4116f8

            test R15,R15
            je .L_4116f8

            test RBP,RBP
            je .L_4116f8

            test R12,R12
            je .L_4116f8

            mov RDI,QWORD PTR [RSP]
            mov RSI,R14
            call .L_404b00

            test EAX,EAX
            js .L_411718

            mov RDI,QWORD PTR [RSP]
            call .L_404490

            mov ECX,DWORD PTR [R14+48]
            lea R9D,DWORD PTR [RCX+RCX*1]
            cmp R9D,EAX
            cmovl R9D,EAX
            cmp DWORD PTR [R14+52],R9D
            mov EAX,R9D
            je .L_4116d3

            lea RDI,QWORD PTR [R14+24]
            mov EDX,R9D
            mov RCX,RBX
            mov RSI,R14
            mov DWORD PTR [RSP+12],R9D
            call .L_411590

            mov R9D,DWORD PTR [RSP+12]
            mov DWORD PTR [R14+52],EAX
.L_4116d3:

            cmp EAX,-1
            mov DWORD PTR [RSP+12],R9D
            je .L_4116f8

            mov EDX,DWORD PTR [R14+48]
            mov RSI,QWORD PTR [RSP]
            mov RDI,R13
            call .L_4084d0

            test EAX,EAX
            jne .L_411770

            nop
            nop
            nop
.L_4116f8:

            xor EBP,EBP
.L_4116fa:

            mov RDI,RBX
            call .L_405530
.L_411702:

            add RSP,24
.L_411706:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411718:

            xor ESI,ESI
            mov RDI,RBP
            xor EBP,EBP
            call .L_4048e0

            mov RSI,QWORD PTR [RSP]
            mov RDI,R12
            call .L_404650

            test RAX,RAX
            je .L_411702

            mov RDI,RBX
            mov EBP,1
            call .L_405530

            jmp .L_411702
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_411748:

            mov RDI,RBX
            call .L_4055b0

            test R12,R12
            mov RBP,RAX
            jne .L_41165e

            nop
            nop
            nop
            nop
.L_411760:

            mov RDI,RBX
            call .L_4055b0

            mov R12,RAX
            jmp .L_41165e
.L_411770:

            lea RDX,QWORD PTR [R14+24]
            mov RCX,RBX
            mov RSI,R13
            mov RDI,R15
            call .L_406be0

            test EAX,EAX
            mov R9D,DWORD PTR [RSP+12]
            je .L_4116f8

            mov EDX,R9D
            sub EDX,DWORD PTR [R14+48]
            mov RSI,R15
            mov RDI,RBP
            call .L_4084d0

            test EAX,EAX
            je .L_4116f8

            mov DWORD PTR [RBP+16],0
            mov RCX,RBX
            mov RDX,RBP
            mov RSI,R14
            mov RDI,R15
            call .L_406be0

            test EAX,EAX
            je .L_4116f8

            mov RSI,QWORD PTR [RSP]
            mov RDX,R15
            mov RDI,R12
            call .L_41acf0

            test EAX,EAX
            je .L_4116f8

            mov DWORD PTR [R12+16],0
            mov R13D,4
.L_4117ef:

            mov RSI,R14
            mov RDI,R12
            call .L_404b00

            test EAX,EAX
            js .L_411856

            sub R13D,1
            je .L_411830

            mov RDX,R14
            mov RSI,R12
            mov RDI,R12
            call .L_41acf0

            test EAX,EAX
            je .L_4116f8

            mov ESI,1
            mov RDI,RBP
            call .L_408810

            test EAX,EAX
            jne .L_4117ef

            jmp .L_4116f8
.L_411830:

            lea RCX,QWORD PTR [RIP+.L_41193d]
            mov R8D,203
            mov EDX,101
            mov ESI,130
            mov EDI,3
            call .L_416a00

            jmp .L_4116f8
.L_411856:

            xor EAX,EAX
            cmp DWORD PTR [R12+8],0
            je .L_411867

            mov RAX,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RAX+16]
.L_411867:

            mov DWORD PTR [R12+16],EAX
            mov RAX,QWORD PTR [RSP]
            mov EAX,DWORD PTR [RAX+16]
            xor EAX,DWORD PTR [R14+16]
            mov DWORD PTR [RBP+16],EAX
            mov EBP,1
            jmp .L_4116fa
.L_411884:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411890:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov RDI,R8
            push RBP
            push RBX
            mov RBX,R8
            mov R13,RSI
            mov R12,RDX
            mov R15,RCX
            sub RSP,8
.L_4118b0:

            call .L_405420

            mov RDI,RBX
            call .L_4055b0

            test RAX,RAX
            je .L_411918

            test R12,R12
            je .L_411938

            cmp R12,R13
            mov RBP,RAX
            je .L_411900

            mov RCX,RBX
            mov RDX,R12
            mov RSI,R13
            mov RDI,RAX
            call .L_406be0

            test EAX,EAX
            je .L_411918
.L_4118e4:

            mov RDX,RBP
            mov R8,RBX
            mov RCX,R15
            mov RSI,R14
            xor EDI,EDI
            call .L_411610

            mov EBP,EAX
            jmp .L_41191a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411900:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call .L_408d30

            test EAX,EAX
            jne .L_4118e4

            nop
            nop
            nop
            nop
            nop
            nop
.L_411918:

            xor EBP,EBP
.L_41191a:

            mov RDI,RBX
            call .L_405530

            add RSP,8
.L_411926:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411938:

            mov RBP,R13
            jmp .L_4118e4
.L_41193d:
          .string "bn_recp.c"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411950:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_41195e:

            mov EBP,DWORD PTR [RDX+40]
            test EBP,EBP
            je .L_411bc0

            lea R14D,DWORD PTR [RBP+RBP*1]
            cmp DWORD PTR [RSI+12],R14D
            mov R13,RDX
            mov RBX,RSI
            mov QWORD PTR [RSP+24],RDI
            jl .L_411be0
.L_411983:

            mov EDX,DWORD PTR [RBX+8]
            mov EAX,DWORD PTR [R13+48]
            xor DWORD PTR [RBX+16],EAX
            mov RAX,QWORD PTR [R13+32]
            mov R15,QWORD PTR [RBX]
            cmp R14D,EDX
            mov QWORD PTR [RSP+8],RAX
            jle .L_4119c8

            movsxd RCX,EDX
            not EDX
            add EDX,R14D
            lea RAX,QWORD PTR [R15+RCX*8]
            add RDX,RCX
            lea RDX,QWORD PTR [R15+RDX*8+8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4119b8:

            mov QWORD PTR [RAX],0
            add RAX,8
            cmp RAX,RDX
            jne .L_4119b8
.L_4119c8:

            test EBP,EBP
            mov DWORD PTR [RBX+8],R14D
            mov R13,QWORD PTR [R13+80]
            jle .L_411c28

            lea EAX,DWORD PTR [RBP-1]
            movsxd R10,EBP
            xor R12D,R12D
            lea R14,QWORD PTR [R10*8]
            lea RAX,QWORD PTR [R15+RAX*8+8]
            mov QWORD PTR [RSP+16],RAX
            nop
            nop
            nop
            nop
            nop
.L_4119f8:

            mov RCX,QWORD PTR [R15]
            mov RSI,QWORD PTR [RSP+8]
            mov EDX,EBP
            mov RDI,R15
            imul RCX,R13
            call .L_408f90

            mov RCX,QWORD PTR [R15+R14*1]
            add RAX,R12
            xor EDX,EDX
            add RAX,RCX
            cmp RCX,RAX
            mov QWORD PTR [R15+R14*1],RAX
            setne DL
            or RDX,R12
            mov R8,RDX
            xor EDX,EDX
            cmp RCX,RAX
            setae DL
            add R15,8
            and RDX,R8
            cmp R15,QWORD PTR [RSP+16]
            mov R12,RDX
            jne .L_4119f8
.L_411a43:

            mov RAX,QWORD PTR [RSP+24]
            cmp DWORD PTR [RAX+12],EBP
            jl .L_411c08
.L_411a51:

            mov RDI,QWORD PTR [RSP+24]
            mov EAX,DWORD PTR [RBX+16]
            mov ECX,EBP
            mov RDX,QWORD PTR [RBX]
            mov DWORD PTR [RDI+16],EAX
            mov R14,QWORD PTR [RDI]
            movsxd RAX,EBP
            lea R13,QWORD PTR [RDX+RAX*8]
            mov RDX,QWORD PTR [RSP+8]
            mov DWORD PTR [RDI+8],EBP
            mov RSI,R13
            mov RDI,R14
            call .L_409260

            sub RAX,R12
            xor ECX,ECX
            lea RSI,QWORD PTR [RAX-1]
            neg RAX
            and RAX,R13
            and RSI,R14
            or RSI,RAX
            cmp EBP,4
            jle .L_411b13

            lea R11D,DWORD PTR [RBP-5]
            mov RDX,RSI
            neg RDX
            shr R11D,2
            lea RCX,QWORD PTR [R13+RDX*1]
            add RDX,R14
            mov EAX,R11D
            shl RAX,5
            lea R12,QWORD PTR [RSI+RAX*1+32]
            mov RAX,RSI
.L_411abd:

            mov R15,QWORD PTR [RAX]
            mov R10,QWORD PTR [RAX+8]
            mov R8,QWORD PTR [RAX+16]
            mov QWORD PTR [RCX+RAX*1],0
            mov RDI,QWORD PTR [RAX+24]
            mov QWORD PTR [RCX+RAX*1+8],0
            mov QWORD PTR [RDX+RAX*1],R15
            mov QWORD PTR [RCX+RAX*1+16],0
            mov QWORD PTR [RDX+RAX*1+8],R10
            mov QWORD PTR [RCX+RAX*1+24],0
            mov QWORD PTR [RDX+RAX*1+16],R8
            mov QWORD PTR [RDX+RAX*1+24],RDI
            add RAX,32
            cmp RAX,R12
            jne .L_411abd

            lea ECX,DWORD PTR [R11*4+4]
.L_411b13:

            cmp EBP,ECX
            jle .L_411b4f

            lea R9D,DWORD PTR [RBP-1]
            movsxd RAX,ECX
            lea RDX,QWORD PTR [RSI+RAX*8]
            sub R9D,ECX
            add RAX,R9
            lea RCX,QWORD PTR [RSI+RAX*8+8]
            neg RSI
            add R14,RSI
            add R13,RSI
.L_411b36:

            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [R14+RDX*1],RAX
            mov QWORD PTR [R13+RDX*1],0
            add RDX,8
            cmp RCX,RDX
            jne .L_411b36
.L_411b4f:

            mov EAX,DWORD PTR [RBX+8]
            test EAX,EAX
            jle .L_411b7b

            mov RCX,QWORD PTR [RBX]
            movsxd RDX,EAX
            lea RDX,QWORD PTR [RCX+RDX*8-8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411b68:

            sub RDX,8
            cmp QWORD PTR [RDX+8],0
            jne .L_411b78

            sub EAX,1
            jne .L_411b68
.L_411b78:

            mov DWORD PTR [RBX+8],EAX
.L_411b7b:

            mov RBX,QWORD PTR [RSP+24]
            mov EAX,1
            mov EDX,DWORD PTR [RBX+8]
            test EDX,EDX
            jle .L_411bcc

            mov RCX,QWORD PTR [RBX]
            movsxd RAX,EDX
            lea RAX,QWORD PTR [RCX+RAX*8-8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411ba0:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_411bb0

            sub EDX,1
            jne .L_411ba0
.L_411bb0:

            mov RAX,QWORD PTR [RSP+24]
            mov DWORD PTR [RAX+8],EDX
            mov EAX,1
            jmp .L_411bcc
          .byte 0x90
.L_411bc0:

            mov DWORD PTR [RDI+8],0
            mov EAX,1
.L_411bcc:

            add RSP,40
.L_411bd0:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411be0:

            mov ESI,R14D
            mov RDI,RBX
            call .L_404630

            test RAX,RAX
            jne .L_411983

            xor EAX,EAX
.L_411bf6:

            add RSP,40
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_411c08:

            mov RDI,QWORD PTR [RSP+24]
            mov ESI,EBP
            call .L_404630

            test RAX,RAX
            jne .L_411a51

            xor EAX,EAX
            jmp .L_411bf6
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411c28:

            xor R12D,R12D
            jmp .L_411a43
.L_411c30:

            push RBX
            mov RBX,RDI
            add RDI,8
            call .L_404540

            lea RDI,QWORD PTR [RBX+32]
            call .L_404540

            lea RDI,QWORD PTR [RBX+56]
            call .L_404540

            test BYTE PTR [RBX+96],1
            jne .L_411c60

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411c60:

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
.L_411c69:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411c70:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            mov R14,RDI
            push RBP
            push RBX
            mov R12,RSI
            mov R13,RCX
            mov RBX,R8
            sub RSP,24
.L_411c8d:

            mov EBP,DWORD PTR [RCX+40]
            cmp EBP,1
            jle .L_411c9e

            cmp DWORD PTR [RSI+8],EBP
            je .L_411d30
.L_411c9e:

            mov RDI,RBX
            call .L_405420

            mov RDI,RBX
            call .L_4055b0

            test RAX,RAX
            mov RBP,RAX
            je .L_411d08

            cmp R12,R15
            je .L_411cf0

            mov RCX,RBX
            mov RDX,R15
            mov RSI,R12
            mov RDI,RAX
            call .L_406be0

            test EAX,EAX
            je .L_411d08
.L_411cd0:

            mov RDX,R13
            mov RSI,RBP
            mov RDI,R14
            call .L_411950

            test EAX,EAX
            setne AL
            movzx EAX,AL
            jmp .L_411d0a
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411cf0:

            mov RDX,RBX
            mov RSI,R12
            mov RDI,RAX
            call .L_408d30

            test EAX,EAX
            jne .L_411cd0

            nop
            nop
            nop
            nop
            nop
            nop
.L_411d08:

            xor EAX,EAX
.L_411d0a:

            mov RDI,RBX
            mov DWORD PTR [RSP+12],EAX
            call .L_405530

            mov EAX,DWORD PTR [RSP+12]
.L_411d1a:

            add RSP,24
.L_411d1e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411d30:

            cmp DWORD PTR [RDX+8],EBP
            jne .L_411c9e

            cmp DWORD PTR [RDI+12],EBP
            jl .L_411da0
.L_411d3e:

            mov RCX,QWORD PTR [R13+32]
            mov RDX,QWORD PTR [R15]
            lea R8,QWORD PTR [R13+80]
            mov RSI,QWORD PTR [R12]
            mov RDI,QWORD PTR [R14]
            mov R9D,EBP
            call .L_409e60

            test EAX,EAX
            je .L_411c9e

            mov EAX,DWORD PTR [R12+16]
            xor EAX,DWORD PTR [R15+16]
            mov RDX,QWORD PTR [R14]
            mov DWORD PTR [R14+16],EAX
            movsxd RAX,EBP
            lea RAX,QWORD PTR [RDX+RAX*8-8]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411d80:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_411d90

            sub EBP,1
            jne .L_411d80
.L_411d90:

            mov DWORD PTR [R14+8],EBP
            mov EAX,1
            jmp .L_411d1a
          .byte 0x66
          .byte 0x90
.L_411da0:

            mov ESI,EBP
            call .L_404630

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_411d1a

            jmp .L_411d3e
.L_411db7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411dc0:

            push R14
            push R13
            mov R13,RDI
            push R12
            push RBP
            mov RDI,RCX
            push RBX
.L_411dce:

            mov RBX,RCX
            mov R12,RSI
            mov R14,RDX
            call .L_405420

            mov RDI,RBX
            call .L_4055b0

            test RAX,RAX
            je .L_411e10

            mov RSI,R12
            mov RDI,RAX
            mov RBP,RAX
            call .L_404650

            test RAX,RAX
            je .L_411e10

            mov RSI,RBP
            mov RDX,R14
            mov RDI,R13
            call .L_411950

            mov EBP,EAX
            jmp .L_411e12
          .byte 0x66
          .byte 0x90
.L_411e10:

            xor EBP,EBP
.L_411e12:

            mov RDI,RBX
            call .L_405530

            pop RBX
.L_411e1b:

            mov EAX,EBP
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_411e25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411e30:

            push RBX
            mov RBX,RDI
            mov DWORD PTR [RDI],0
            lea RDI,QWORD PTR [RDI+8]
            call .L_4045a0

            lea RDI,QWORD PTR [RBX+32]
            call .L_4045a0

            lea RDI,QWORD PTR [RBX+56]
            call .L_4045a0

            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+80],0
            mov DWORD PTR [RBX+96],0
            pop RBX
            ret 
.L_411e6e:

            nop
            nop
.L_411e70:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_41223d]
            mov EDX,341
            mov EDI,104
            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            je .L_411e9e

            mov RDI,RAX
            call .L_411e30

            mov DWORD PTR [RBX+96],1
.L_411e9e:

            mov RAX,RBX
            pop RBX
            ret 
.L_411ea3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411eb0:

            test RDI,RDI
            je .L_411ec0

            jmp .L_411c30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_411ec0:

            ret 
.L_411ec2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_411ed0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            mov RDI,RDX
            sub RSP,88
.L_411eea:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            call .L_405420

            mov RDI,RBX
            call .L_4055b0

            test RAX,RAX
            je .L_411f82

            lea R13,QWORD PTR [RBP+32]
            mov RSI,R12
            mov R15,RAX
            mov RDI,R13
            call .L_404650

            test RAX,RAX
            je .L_411f82

            lea RDI,QWORD PTR [RSP+16]
            mov DWORD PTR [RBP+48],0
            lea R14,QWORD PTR [RBP+8]
            mov QWORD PTR [RSP+8],RDI
            call .L_4045a0

            lea RAX,QWORD PTR [RSP+48]
            mov RDI,R12
            mov QWORD PTR [RSP+28],2
            mov QWORD PTR [RSP+16],RAX
            call .L_404490

            lea EDX,DWORD PTR [RAX+126]
            add EAX,63
            mov RDI,R14
            cmovs EAX,EDX
            xor ESI,ESI
            and EAX,4294967232
            mov DWORD PTR [RBP],EAX
            call .L_4048e0

            mov ESI,64
            mov RDI,R14
            call .L_404c20

            test EAX,EAX
            jne .L_411fb8
.L_411f82:

            xor EBP,EBP
.L_411f84:

            mov RDI,RBX
            call .L_405530

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_4120c4

            add RSP,88
.L_411fa6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_411fb8:

            mov RAX,QWORD PTR [R12]
            mov RDX,QWORD PTR [RSP+8]
            mov RCX,RBX
            mov RSI,R14
            mov RDI,R15
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+56],0
            test RAX,RAX
            mov QWORD PTR [RSP+48],RAX
            setne AL
            movzx EAX,AL
            mov DWORD PTR [RSP+24],EAX
            call .L_41bab0

            test RAX,RAX
            je .L_411f82

            mov EDX,64
            mov RSI,R15
            mov RDI,R15
            call .L_4082f0

            test EAX,EAX
            je .L_411f82

            mov ECX,DWORD PTR [R15+8]
            test ECX,ECX
            je .L_4120a8

            mov ESI,1
            mov RDI,R15
            call .L_4089e0

            test EAX,EAX
            je .L_411f82
.L_41202b:

            mov RCX,QWORD PTR [RSP+8]
            xor ESI,ESI
            mov R8,RBX
            mov RDX,R15
            mov RDI,R15
            call .L_41b130

            test EAX,EAX
            je .L_411f82

            mov EDX,DWORD PTR [R15+8]
            xor EAX,EAX
            test EDX,EDX
            jle .L_412058

            mov RAX,QWORD PTR [R15]
            mov RAX,QWORD PTR [RAX]
.L_412058:

            xor ESI,ESI
            mov RDI,R14
            mov QWORD PTR [RBP+80],RAX
            mov QWORD PTR [RBP+88],0
            call .L_4048e0

            mov ESI,DWORD PTR [RBP]
            mov RDI,R14
            add ESI,ESI
            call .L_404c20

            test EAX,EAX
            je .L_411f82

            xor EDI,EDI
            mov R8,RBX
            mov RCX,R13
            mov RDX,R14
            mov RSI,R14
            xor EBP,EBP
            call .L_41b130

            test EAX,EAX
            setne BPL
            jmp .L_411f84
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4120a8:

            mov RSI,-1
            mov RDI,R15
            call .L_4048e0

            test EAX,EAX
            jne .L_41202b

            jmp .L_411f82
.L_4120c4:

            call __stack_chk_fail@PLT
.L_4120c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4120d0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
.L_4120d9:

            cmp RDI,RSI
            je .L_41212c

            mov RBP,RSI
            lea RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RSI+8]
            call .L_404650

            test RAX,RAX
            je .L_412140

            lea RSI,QWORD PTR [RBP+32]
            lea RDI,QWORD PTR [RBX+32]
            call .L_404650

            test RAX,RAX
            je .L_412140

            lea RSI,QWORD PTR [RBP+56]
            lea RDI,QWORD PTR [RBX+56]
            call .L_404650

            test RAX,RAX
            je .L_412140

            mov EAX,DWORD PTR [RBP]
            mov DWORD PTR [RBX],EAX
            mov RAX,QWORD PTR [RBP+80]
            mov QWORD PTR [RBX+80],RAX
            mov RAX,QWORD PTR [RBP+88]
            mov QWORD PTR [RBX+88],RAX
.L_41212c:

            add RSP,8
.L_412130:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412140:

            xor EBX,EBX
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_41214c:

            nop
            nop
            nop
            nop
.L_412150:

            push R15
            push R14
            mov R14,RCX
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            lea RDX,QWORD PTR [RIP+.L_41223d]
            mov R12,RDI
            mov ECX,524
            mov EDI,5
            sub RSP,8
            mov EBX,ESI
            call .L_417ca0

            mov RBP,QWORD PTR [R12]
            lea RDX,QWORD PTR [RIP+.L_41223d]
            mov ECX,526
            mov ESI,EBX
            mov EDI,6
            call .L_417ca0

            test RBP,RBP
            je .L_4121b8
.L_4121a0:

            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4121b8:

            call .L_411e70

            test RAX,RAX
            mov R15,RAX
            je .L_4121a0

            mov RDX,R14
            mov RSI,R13
            mov RDI,RAX
            call .L_411ed0

            test EAX,EAX
            je .L_412230

            lea RDX,QWORD PTR [RIP+.L_41223d]
            mov ECX,547
            mov ESI,EBX
            mov EDI,9
            call .L_417ca0

            cmp QWORD PTR [R12],0
            je .L_412220

            mov RDI,R15
            call .L_411c30

            mov RBP,QWORD PTR [R12]
.L_412202:

            lea RDX,QWORD PTR [RIP+.L_41223d]
            mov ECX,553
            mov ESI,EBX
            mov EDI,10
            call .L_417ca0

            jmp .L_4121a0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412220:

            mov QWORD PTR [R12],R15
            mov RBP,R15
            jmp .L_412202
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412230:

            mov RDI,R15
            call .L_411c30

            jmp .L_4121a0
.L_41223d:
          .string "bn_mont.c"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412250:

            push R12
            lea R12,QWORD PTR [RDI+96]
            push RBP
            push RBX
            movabs RAX,4294967296
            mov RBP,RSI
            mov RBX,RDI
            mov RDX,R12
            sub RSP,16
.L_41226f:

            mov QWORD PTR [RDI],RSI
            mov QWORD PTR [RDI+8],0
            mov QWORD PTR [RDI+16],0
            mov QWORD PTR [RDI+24],RAX
            mov RSI,RDI
            mov QWORD PTR [RDI+32],0
            mov DWORD PTR [RDI+40],0
            mov QWORD PTR [RDI+48],0
            mov QWORD PTR [RDI+64],0
            mov QWORD PTR [RDI+56],0
            mov DWORD PTR [RDI+72],1
            mov QWORD PTR [RDI+80],0
            mov QWORD PTR [RDI+88],0
            xor EDI,EDI
            call .L_41a120

            mov RAX,QWORD PTR [RBP+56]
            test RAX,RAX
            je .L_4122e0

            mov RDI,RBX
            call RAX

            test EAX,EAX
            je .L_4122f0
.L_4122e0:

            add RSP,16
.L_4122e4:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4122f0:

            mov RDX,R12
            mov RSI,RBX
            xor EDI,EDI
            mov DWORD PTR [RSP+12],EAX
            call .L_41a1c0

            mov EAX,DWORD PTR [RSP+12]
            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
.L_41230e:

            nop
            nop
.L_412310:

            push RBP
            push RBX
            lea RSI,QWORD PTR [RIP+.L_412e8d]
            mov RBP,RDI
            mov EDX,70
            mov EDI,112
            sub RSP,8
            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            je .L_412360

            mov RSI,RBP
            mov RDI,RAX
            call .L_412250

            test EAX,EAX
            je .L_412350
.L_412346:

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_412350:

            mov RDI,RBX
            xor EBX,EBX
            call .L_418aa0

            jmp .L_412346
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412360:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov R8D,72
            mov EDX,65
            mov ESI,108
            mov EDI,32
            call .L_416a00

            jmp .L_412346
.L_412383:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412390:

            xor EDX,EDX
            test RDI,RDI
            je .L_412430

            push RBX
            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov RBX,RDI
            lea RDI,QWORD PTR [RDI+72]
            mov EDX,21
            mov R8D,114
            mov ESI,4294967295
            call .L_4180e0

            test EAX,EAX
            mov EDX,1
            jle .L_4123d0
.L_4123c8:

            mov EAX,EDX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4123d0:

            mov RAX,QWORD PTR [RBX+8]
            test RAX,RAX
            je .L_4123f6

            xor EDX,EDX
            xor R8D,R8D
            xor ECX,ECX
            mov R9D,1
            mov ESI,1
            mov RDI,RBX
            call RAX

            test EAX,EAX
            mov EDX,EAX
            jle .L_4123c8
.L_4123f6:

            lea RDX,QWORD PTR [RBX+96]
            xor EDI,EDI
            mov RSI,RBX
            call .L_41a1c0

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_41241a

            mov RAX,QWORD PTR [RAX+64]
            test RAX,RAX
            je .L_41241a

            mov RDI,RBX
            call RAX
.L_41241a:

            mov RDI,RBX
            call .L_418aa0

            mov EDX,1
            mov EAX,EDX
            pop RBX
.L_41242a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412430:

            mov EAX,EDX
            ret 
.L_412433:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412440:

            jmp .L_412390
.L_412445:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412450:

            not ESI
            and DWORD PTR [RDI+32],ESI
            ret 
.L_412456:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412460:

            mov EAX,DWORD PTR [RDI+32]
            and EAX,ESI
            ret 
.L_412466:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412470:

            or DWORD PTR [RDI+32],ESI
            ret 
.L_412474:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412480:

            mov RAX,QWORD PTR [RDI+8]
            ret 
.L_412485:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412490:

            mov QWORD PTR [RDI+8],RSI
            ret 
.L_412495:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4124a0:

            mov QWORD PTR [RDI+16],RSI
            ret 
.L_4124a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4124b0:

            mov RAX,QWORD PTR [RDI+16]
            ret 
.L_4124b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4124c0:

            mov RAX,QWORD PTR [RDI]
            mov RAX,QWORD PTR [RAX+8]
            ret 
.L_4124c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4124d0:

            mov RAX,QWORD PTR [RDI]
            mov EAX,DWORD PTR [RAX]
            ret 
.L_4124d6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4124e0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4124ea:

            test RDI,RDI
            je .L_412578

            mov RAX,QWORD PTR [RDI]
            mov RBX,RDI
            test RAX,RAX
            je .L_412578

            cmp QWORD PTR [RAX+24],0
            je .L_412578

            mov RBP,QWORD PTR [RDI+8]
            mov R12,RSI
            mov R13D,EDX
            test RBP,RBP
            je .L_41252d

            xor R8D,R8D
            mov ECX,EDX
            mov R9D,1
            mov RDX,RSI
            mov ESI,2
            call RBP

            test EAX,EAX
            jle .L_412569
.L_41252d:

            mov EAX,DWORD PTR [RBX+24]
            test EAX,EAX
            je .L_4125a0

            mov RAX,QWORD PTR [RBX]
            mov EDX,R13D
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RAX+24]

            test EAX,EAX
            jle .L_41254e

            movsxd RDX,EAX
            add QWORD PTR [RBX+80],RDX
.L_41254e:

            test RBP,RBP
            je .L_412569

            movsxd R9,EAX
            xor R8D,R8D
            mov ECX,R13D
            mov RDX,R12
            mov ESI,130
            mov RDI,RBX
            call RBP
.L_412569:

            add RSP,8
.L_41256d:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412578:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov R8D,196
            mov EDX,121
            mov ESI,111
            mov EDI,32
            call .L_416a00

            mov EAX,4294967294
            jmp .L_412569
.L_4125a0:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov R8D,206
            mov EDX,120
            mov ESI,111
            mov EDI,32
            call .L_416a00

            mov EAX,4294967294
            jmp .L_412569
.L_4125c8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4125d0:

            xor EAX,EAX
            test RDI,RDI
            je .L_412670

            push R13
            push R12
            mov R13D,EDX
            push RBP
            push RBX
            mov R12,RSI
            mov RBX,RDI
            sub RSP,8
.L_4125ee:

            mov RAX,QWORD PTR [RDI]
            mov RBP,QWORD PTR [RDI+8]
            test RAX,RAX
            je .L_412672

            cmp QWORD PTR [RAX+16],0
            je .L_412672

            test RBP,RBP
            je .L_41261f

            xor R8D,R8D
            mov ECX,EDX
            mov R9D,1
            mov RDX,RSI
            mov ESI,3
            call RBP

            test EAX,EAX
            jle .L_41265b
.L_41261f:

            mov EAX,DWORD PTR [RBX+24]
            test EAX,EAX
            je .L_41269a

            mov RAX,QWORD PTR [RBX]
            mov EDX,R13D
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RAX+16]

            test EAX,EAX
            jle .L_412640

            movsxd RDX,EAX
            add QWORD PTR [RBX+88],RDX
.L_412640:

            test RBP,RBP
            je .L_41265b

            movsxd R9,EAX
            xor R8D,R8D
            mov ECX,R13D
            mov RDX,R12
            mov ESI,131
            mov RDI,RBX
            call RBP
.L_41265b:

            add RSP,8
.L_41265f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412670:

            ret 
.L_412672:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov R8D,230
            mov EDX,121
            mov ESI,113
            mov EDI,32
            call .L_416a00

            mov EAX,4294967294
            jmp .L_41265b
.L_41269a:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov R8D,239
            mov EDX,120
            mov ESI,113
            mov EDI,32
            call .L_416a00

            mov EAX,4294967294
            jmp .L_41265b
.L_4126c2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4126d0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_4126d7:

            je .L_412750

            mov RAX,QWORD PTR [RDI]
            mov RBX,RDI
            test RAX,RAX
            je .L_412750

            cmp QWORD PTR [RAX+32],0
            je .L_412750

            mov RBP,QWORD PTR [RDI+8]
            mov R12,RSI
            test RBP,RBP
            je .L_412710

            xor R8D,R8D
            xor ECX,ECX
            mov RDX,RSI
            mov R9D,1
            mov ESI,4
            call RBP

            test EAX,EAX
            jle .L_412748
.L_412710:

            mov EAX,DWORD PTR [RBX+24]
            test EAX,EAX
            je .L_412778

            mov RAX,QWORD PTR [RBX]
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RAX+32]

            test EAX,EAX
            jle .L_41272e

            movsxd RDX,EAX
            add QWORD PTR [RBX+88],RDX
.L_41272e:

            test RBP,RBP
            je .L_412748

            movsxd R9,EAX
            xor R8D,R8D
            xor ECX,ECX
            mov RDX,R12
            mov ESI,132
            mov RDI,RBX
            call RBP
.L_412748:

            pop RBX
.L_412749:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412750:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov R8D,259
            mov EDX,121
            mov ESI,110
            mov EDI,32
            call .L_416a00

            mov EAX,4294967294
            jmp .L_412748
.L_412778:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov R8D,269
            mov EDX,120
            mov ESI,110
            mov EDI,32
            call .L_416a00

            mov EAX,4294967294
            jmp .L_412748
.L_4127a0:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_4127aa:

            test RDI,RDI
            je .L_412880

            mov RAX,QWORD PTR [RDI]
            mov RBX,RDI
            test RAX,RAX
            je .L_412880

            mov RAX,QWORD PTR [RAX+40]
            test RAX,RAX
            je .L_412880

            mov RBP,QWORD PTR [RDI+8]
            mov R12,RSI
            mov R13D,EDX
            test RBP,RBP
            je .L_412838

            xor R8D,R8D
            mov ECX,EDX
            mov R9D,1
            mov RDX,RSI
            mov ESI,5
            call RBP

            test EAX,EAX
            mov EDX,EAX
            jle .L_412827

            mov ECX,DWORD PTR [RBX+24]
            test ECX,ECX
            je .L_412858

            mov RAX,QWORD PTR [RBX]
            mov EDX,R13D
            mov RSI,R12
            mov RDI,RBX
            call QWORD PTR [RAX+40]

            mov RDX,R12
            movsxd R9,EAX
            xor R8D,R8D
            mov ECX,R13D
            mov ESI,133
            mov RDI,RBX
            call RBP

            mov EDX,EAX
.L_412827:

            add RSP,8
.L_41282b:

            mov EAX,EDX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412838:

            mov EDX,DWORD PTR [RDI+24]
            test EDX,EDX
            je .L_412858

            add RSP,8
            mov EDX,R13D
            mov RSI,R12
            mov RDI,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_412858:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov EDX,120
            mov R8D,299
            mov ESI,104
            mov EDI,32
            call .L_416a00

            mov EDX,4294967294
            jmp .L_412827
.L_412880:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov EDX,121
            mov R8D,289
            mov ESI,104
            mov EDI,32
            call .L_416a00

            mov EDX,4294967294
            jmp .L_412827
.L_4128ab:

            nop
            nop
            nop
            nop
            nop
.L_4128b0:

            push R12
            test ESI,ESI
            push RBP
            push RBX
            mov EBX,0
            mov R12,RDI
            cmovs ESI,EBX
            lea RBP,QWORD PTR [RIP+.L_412e97]
            cmp ESI,EDX
            cmovle EDX,ESI
            mov EBX,EDX
            jmp .L_4128eb
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4128d8:

            mov RSI,RBP
            mov RDI,R12
            sub EBX,1
            call .L_4126d0

            cmp EAX,1
            jne .L_412900
.L_4128eb:

            test EBX,EBX
            jne .L_4128d8

            pop RBX
            mov EAX,1
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412900:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_412907:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412910:

            test RDI,RDI
            je .L_412990

            push R14
            push R13
            mov R13,RCX
            push R12
            push RBP
            mov R12,RDX
            push RBX
.L_412923:

            mov RAX,QWORD PTR [RDI]
            mov EBP,ESI
            mov RBX,RDI
            test RAX,RAX
            je .L_4129a2

            mov RAX,QWORD PTR [RAX+48]
            test RAX,RAX
            je .L_4129a2

            mov R14,QWORD PTR [RDI+8]
            test R14,R14
            je .L_412998

            mov R8,RDX
            mov ECX,ESI
            mov R9D,1
            mov RDX,R13
            mov ESI,6
            call R14

            test RAX,RAX
            jle .L_4129ca

            mov RAX,QWORD PTR [RBX]
            mov RCX,R13
            mov RDX,R12
            mov ESI,EBP
            mov RDI,RBX
            call QWORD PTR [RAX+48]

            mov R8,R12
            mov R9,RAX
            mov ECX,EBP
            mov RDX,R13
            mov RDI,RBX
            mov RAX,R14
            pop RBX
.L_412980:

            pop RBP
            pop R12
            pop R13
            pop R14
            mov ESI,134
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_412990:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412998:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp RAX
.L_4129a2:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov R8D,349
            mov EDX,121
            mov ESI,103
            mov EDI,32
            call .L_416a00

            mov RAX,-2
.L_4129ca:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_4129d3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4129e0:

            sub RSP,24
            mov DWORD PTR [RSP+4],ECX
            lea RCX,QWORD PTR [RSP+4]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_412910

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            jne .L_412a17

            add RSP,24
            ret 
.L_412a17:

            call __stack_chk_fail@PLT
.L_412a1c:

            nop
            nop
            nop
            nop
.L_412a20:

            sub RSP,24
            mov RCX,RSP
            mov QWORD PTR [RSP],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_412910

            test RAX,RAX
            jle .L_412a68

            mov RAX,QWORD PTR [RSP]
.L_412a4d:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_412a6c

            add RSP,24
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412a68:

            xor EAX,EAX
            jmp .L_412a4d
.L_412a6c:

            call __stack_chk_fail@PLT
.L_412a71:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412a80:

            push RBX
            mov RCX,RDI
            mov RBX,RDI
            jmp .L_412a93
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412a90:

            mov RCX,RAX
.L_412a93:

            mov RAX,QWORD PTR [RCX+56]
            test RAX,RAX
            jne .L_412a90

            test RSI,RSI
            mov QWORD PTR [RCX+56],RSI
            je .L_412aa9

            mov QWORD PTR [RSI+64],RCX
.L_412aa9:

            mov RDI,RBX
            xor EDX,EDX
            mov ESI,6
            call .L_412910

            mov RAX,RBX
            pop RBX
            ret 
.L_412abd:

            nop
            nop
            nop
.L_412ac0:

            push R13
            push R12
            xor EAX,EAX
            push RBP
            push RBX
            sub RSP,24
.L_412acc:

            test RDI,RDI
            mov QWORD PTR [RSP+8],RDX
            je .L_412b3b

            mov RAX,QWORD PTR [RDI]
            mov EBP,ESI
            mov RBX,RDI
            test RAX,RAX
            je .L_412b62

            mov RAX,QWORD PTR [RAX+72]
            test RAX,RAX
            je .L_412b62

            mov R12,QWORD PTR [RDI+8]
            test R12,R12
            je .L_412b50

            lea R13,QWORD PTR [RSP+8]
            xor R8D,R8D
            mov ECX,ESI
            mov R9D,1
            mov ESI,6
            mov RDX,R13
            call R12

            test RAX,RAX
            jle .L_412b3b

            mov RAX,QWORD PTR [RBX]
            mov RDX,QWORD PTR [RSP+8]
            mov ESI,EBP
            mov RDI,RBX
            call QWORD PTR [RAX+72]

            xor R8D,R8D
            mov R9,RAX
            mov ECX,EBP
            mov RDX,R13
            mov ESI,134
            mov RDI,RBX
            call R12
.L_412b3b:

            add RSP,24
.L_412b3f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412b50:

            mov RDX,QWORD PTR [RSP+8]
            call RAX

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_412b62:

            lea RCX,QWORD PTR [RIP+.L_412e8d]
            mov R8D,377
            mov EDX,121
            mov ESI,131
            mov EDI,32
            call .L_416a00

            mov RAX,-2
            jmp .L_412b3b
.L_412b8c:

            nop
            nop
            nop
            nop
.L_412b90:

            xor ECX,ECX
            xor EDX,EDX
            mov ESI,10
            jmp .L_412910
.L_412b9e:

            nop
            nop
.L_412ba0:

            xor ECX,ECX
            xor EDX,EDX
            mov ESI,13
            jmp .L_412910
.L_412bae:

            nop
            nop
.L_412bb0:

            test RDI,RDI
            je .L_412bba

            jmp .L_412a80
.L_412bba:

            mov RAX,RSI
            ret 
.L_412bbe:

            nop
            nop
.L_412bc0:

            push RBP
            push RBX
            sub RSP,8
.L_412bc6:

            test RDI,RDI
            je .L_412c20

            mov RBX,RDI
            xor EDX,EDX
            mov RCX,RDI
            mov ESI,7
            mov RBP,QWORD PTR [RDI+56]
            call .L_412910

            mov RAX,QWORD PTR [RBX+64]
            test RAX,RAX
            je .L_412bf2

            mov RDX,QWORD PTR [RBX+56]
            mov QWORD PTR [RAX+56],RDX
.L_412bf2:

            mov RDX,QWORD PTR [RBX+56]
            test RDX,RDX
            je .L_412bff

            mov QWORD PTR [RDX+64],RAX
.L_412bff:

            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+64],0
.L_412c0f:

            add RSP,8
.L_412c13:

            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412c20:

            xor EBP,EBP
            jmp .L_412c0f
.L_412c24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412c30:

            mov RAX,RDI
            jmp .L_412c47
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412c38:

            mov RDX,QWORD PTR [RDI+56]
            mov RAX,RDI
            test RDX,RDX
            je .L_412c4d

            mov RDI,RDX
.L_412c47:

            test BYTE PTR [RDI+32],8
            jne .L_412c38
.L_412c4d:

            test RSI,RSI
            je .L_412c57

            mov EDX,DWORD PTR [RAX+36]
            mov DWORD PTR [RSI],EDX
.L_412c57:

            ret 
.L_412c59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412c60:

            mov EAX,DWORD PTR [RDI+36]
            ret 
.L_412c64:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412c70:

            test RDI,RDI
            je .L_412cb2

            movzx ECX,SIL
            mov RAX,RDI
            jmp .L_412c8d
          .byte 0x66
          .byte 0x90
.L_412c80:

            test ESI,EDX
            jne .L_412cb0
.L_412c84:

            mov RAX,QWORD PTR [RAX+56]
            test RAX,RAX
            je .L_412ca8
.L_412c8d:

            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            je .L_412c84

            test ECX,ECX
            mov EDX,DWORD PTR [RDX]
            je .L_412c80

            cmp ESI,EDX
            jne .L_412c84

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412ca8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412cb0:

            ret 
.L_412cb2:

            xor EAX,EAX
            ret 
.L_412cb5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412cc0:

            test RDI,RDI
            je .L_412cd0

            mov RAX,QWORD PTR [RDI+56]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_412cd0:

            xor EAX,EAX
            ret 
.L_412cd3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ce0:

            test RDI,RDI
            je .L_412d10

            push RBP
            push RBX
            sub RSP,8
            jmp .L_412cf8
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_412cf0:

            test RBP,RBP
            mov RDI,RBP
            je .L_412d09
.L_412cf8:

            mov EBX,DWORD PTR [RDI+72]
            mov RBP,QWORD PTR [RDI+56]
            call .L_412390

            cmp EBX,1
            jle .L_412cf0
.L_412d09:

            add RSP,8
            pop RBX
            pop RBP
            ret 
.L_412d10:

            ret 
.L_412d12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412d20:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_412d2a:

            test RDI,RDI
            je .L_412def

            mov RBX,RDI
            xor R13D,R13D
            xor R12D,R12D
            jmp .L_412d60
          .byte 0x66
          .byte 0x90
.L_412d40:

            test R13,R13
            je .L_412d50

            mov RSI,RBP
            mov RDI,R13
            call .L_412a80
.L_412d50:

            mov RBX,QWORD PTR [RBX+56]
            mov R13,RBP
            test RBX,RBX
            je .L_412df2
.L_412d60:

            mov RDI,QWORD PTR [RBX]
            call .L_412310

            test RAX,RAX
            mov RBP,RAX
            je .L_412dea

            mov RAX,QWORD PTR [RBX+8]
            xor EDX,EDX
            mov RCX,RBP
            mov ESI,12
            mov RDI,RBX
            mov QWORD PTR [RBP+8],RAX
            mov RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBP+16],RAX
            mov EAX,DWORD PTR [RBX+24]
            mov DWORD PTR [RBP+24],EAX
            mov EAX,DWORD PTR [RBX+28]
            mov DWORD PTR [RBP+28],EAX
            mov EAX,DWORD PTR [RBX+32]
            mov DWORD PTR [RBP+32],EAX
            mov EAX,DWORD PTR [RBX+40]
            mov DWORD PTR [RBP+40],EAX
            call .L_412910

            test RAX,RAX
            je .L_412e00

            lea RDX,QWORD PTR [RBX+96]
            lea RSI,QWORD PTR [RBP+96]
            xor EDI,EDI
            call .L_41a170

            test EAX,EAX
            je .L_412e00

            test R12,R12
            jne .L_412d40

            mov R12,RBP
            jmp .L_412d50
.L_412dd0:

            mov EBX,DWORD PTR [R12+72]
            mov RDI,R12
            mov RBP,QWORD PTR [R12+56]
            call .L_412390

            cmp EBX,1
            jg .L_412def

            mov R12,RBP
.L_412dea:

            test R12,R12
            jne .L_412dd0
.L_412def:

            xor R12D,R12D
.L_412df2:

            add RSP,8
.L_412df6:

            mov RAX,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_412e00:

            mov RDI,RBP
            call .L_412390

            jmp .L_412dea
.L_412e0a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_412e10:

            mov RDX,QWORD PTR [RDI+56]
            mov EAX,DWORD PTR [RDX+32]
            and EAX,15
            or DWORD PTR [RDI+32],EAX
            mov EAX,DWORD PTR [RDX+36]
            mov DWORD PTR [RDI+36],EAX
            ret 
.L_412e24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412e30:

            mov R9,R8
            mov R8,RCX
            mov RCX,RDX
            mov RDX,RSI
            mov RSI,RDI
            xor EDI,EDI
            jmp .L_41a0b0
.L_412e46:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412e50:

            add RDI,96
            jmp .L_41a210
.L_412e59:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412e60:

            add RDI,96
            jmp .L_41a2f0
.L_412e69:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412e70:

            xor EAX,EAX
            test RDI,RDI
            je .L_412e7b

            mov RAX,QWORD PTR [RDI+80]
.L_412e7b:

            ret 
.L_412e7d:

            nop
            nop
            nop
.L_412e80:

            xor EAX,EAX
            test RDI,RDI
            je .L_412e8b

            mov RAX,QWORD PTR [RDI+88]
.L_412e8b:

            ret 
.L_412e8d:
          .string "bio_lib.c"
.L_412e97:

            and BYTE PTR [RAX],AL
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ea0:

            mov DWORD PTR [RDI+24],0
            mov DWORD PTR [RDI+40],0
            mov EAX,1
            mov QWORD PTR [RDI+48],0
            mov DWORD PTR [RDI+32],0
            ret 
.L_412ec3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ed0:

            push RBX
            mov RBX,RSI
            mov ESI,EDX
            mov BYTE PTR [RBX],0
            mov RDX,QWORD PTR [RDI+48]
            mov RDI,RBX
            call fgets@PLT

            xor EDX,EDX
            test RAX,RAX
            je .L_412efb

            cmp BYTE PTR [RBX],0
            je .L_412efb

            mov RDI,RBX
            call strlen@PLT

            mov EDX,EAX
.L_412efb:

            mov EAX,EDX
            pop RBX
            ret 
.L_412eff:

            nop
.L_412f00:

            push RBX
            mov EAX,DWORD PTR [RDI+24]
            mov RBX,RDI
            test EAX,EAX
            je .L_412f28

            mov RDI,QWORD PTR [RDI+48]
            test RDI,RDI
            je .L_412f28

            call fclose@PLT

            mov QWORD PTR [RBX+48],0
            mov DWORD PTR [RBX+32],0
.L_412f28:

            mov DWORD PTR [RBX+24],0
            mov EAX,1
            pop RBX
            ret 
.L_412f36:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412f40:

            test RDI,RDI
            je .L_412f60

            mov EAX,DWORD PTR [RDI+28]
            test EAX,EAX
            je .L_412f50

            jmp .L_412f00
          .byte 0x66
          .byte 0x90
.L_412f50:

            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_412f60:

            xor EAX,EAX
            ret 
.L_412f63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412f70:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,32
.L_412f7b:

            mov RDI,QWORD PTR [RDI+48]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp ESI,11
            je .L_4131d0

            mov RBP,RDX
            jle .L_413010

            cmp ESI,107
            mov R12,RCX
            je .L_4130f8

            jg .L_413040

            cmp ESI,12
            mov EAX,1
            je .L_412ff0

            cmp ESI,106
            jne .L_4131c0

            mov EDX,DWORD PTR [RBX+28]
            test EDX,EDX
            je .L_412fd1

            mov RDI,RBX
            call .L_412f00
.L_412fd1:

            and EBP,1
            mov QWORD PTR [RBX+48],R12
            mov DWORD PTR [RBX+24],1
            mov DWORD PTR [RBX+28],EBP
            mov EAX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_412ff0:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_4132ae

            add RSP,32
.L_413008:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413010:

            cmp ESI,3
            je .L_4131e0

            jle .L_413138

            cmp ESI,8
            je .L_413110

            cmp ESI,9
            jne .L_4131c0

            mov DWORD PTR [RBX+28],EDX
            mov EAX,1
            jmp .L_412ff0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413040:

            cmp ESI,128
            je .L_413120

            cmp ESI,133
            je .L_4131e0

            cmp ESI,108
            jne .L_4131c0

            mov EAX,DWORD PTR [RBX+28]
            test EAX,EAX
            jne .L_413218
.L_41306c:

            mov EAX,EBP
            and EAX,1
            test BPL,8
            mov DWORD PTR [RBX+28],EAX
            jne .L_4131f0

            mov RAX,RBP
            and EAX,6
            cmp RAX,6
            je .L_413290

            test BPL,4
            jne .L_413240

            mov RAX,RBP
            and EAX,2
            je .L_413260

            lea RBP,QWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RIP+.L_413572]
            mov EDX,4
            mov RDI,RBP
            call .L_41c650

            nop
            nop
            nop
.L_4130c0:

            mov RSI,RBP
            mov RDI,R12
            call fopen64@PLT

            test RAX,RAX
            je .L_413150

            mov QWORD PTR [RBX+48],RAX
            mov DWORD PTR [RBX+24],1
            xor ESI,ESI
            mov RDI,RBX
            call .L_412450

            mov EAX,1
            jmp .L_412ff0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4130f8:

            test RCX,RCX
            mov EAX,1
            je .L_412ff0

            mov QWORD PTR [RCX],RDI
            jmp .L_412ff0
          .byte 0x66
          .byte 0x90
.L_413110:

            movsxd RAX,DWORD PTR [RBX+28]
            jmp .L_412ff0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413120:

            xor EDX,EDX
            mov RSI,RBP
            call fseek@PLT

            cdqe 
            jmp .L_412ff0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413138:

            cmp ESI,1
            je .L_413120

            cmp ESI,2
            jne .L_4131c0

            call feof@PLT

            cdqe 
            jmp .L_412ff0

            nop
            nop
.L_413150:

            call __errno_location@PLT

            mov EDX,DWORD PTR [RAX]
            lea RCX,QWORD PTR [RIP+.L_413574]
            mov R8D,391
            mov ESI,1
            mov EDI,2
            call .L_416a00

            lea RCX,QWORD PTR [RIP+.L_413582]
            lea RSI,QWORD PTR [RIP+.L_413586]
            lea R9,QWORD PTR [RIP+.L_41357f]
            mov R8,RBP
            mov RDX,R12
            mov EDI,5
            xor EAX,EAX
            call .L_417090

            lea RCX,QWORD PTR [RIP+.L_413574]
            mov R8D,393
            mov EDX,2
            mov ESI,116
            mov EDI,32
            call .L_416a00

            nop
            nop
            nop
            nop
            nop
.L_4131c0:

            xor EAX,EAX
            jmp .L_412ff0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4131d0:

            call fflush@PLT

            mov EAX,1
            jmp .L_412ff0
          .byte 0x90
.L_4131e0:

            call ftell@PLT

            jmp .L_412ff0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4131f0:

            and EBP,2
            mov EDX,4
            lea RBP,QWORD PTR [RSP+20]
            je .L_413228

            lea RSI,QWORD PTR [RIP+.L_413568]
            mov RDI,RBP
            call .L_41c650

            jmp .L_4130c0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413218:

            mov RDI,RBX
            call .L_412f00

            jmp .L_41306c
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413228:

            lea RSI,QWORD PTR [RIP+.L_41356b]
            mov RDI,RBP
            call .L_41c650

            jmp .L_4130c0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413240:

            lea RBP,QWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RIP+.L_413570]
            mov EDX,4
            mov RDI,RBP
            call .L_41c650

            jmp .L_4130c0
          .byte 0x66
          .byte 0x90
.L_413260:

            lea RCX,QWORD PTR [RIP+.L_413574]
            mov R8D,373
            mov EDX,101
            mov ESI,116
            mov EDI,32
            mov QWORD PTR [RSP+8],RAX
            call .L_416a00

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_412ff0
.L_413290:

            lea RBP,QWORD PTR [RSP+20]
            lea RSI,QWORD PTR [RIP+.L_41356d]
            mov EDX,4
            mov RDI,RBP
            call .L_41c650

            jmp .L_4130c0
.L_4132ae:

            call __stack_chk_fail@PLT
.L_4132b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4132c0:

            push RBP
            push RBX
            sub RSP,8
.L_4132c6:

            mov EAX,DWORD PTR [RDI+24]
            test EAX,EAX
            je .L_413350

            test RSI,RSI
            je .L_413350

            mov RCX,QWORD PTR [RDI+48]
            mov RAX,RSI
            mov RBX,RDI
            movsxd RDX,EDX
            mov ESI,1
            mov RDI,RAX
            call fread@PLT

            mov RDI,QWORD PTR [RBX+48]
            mov EBP,EAX
            call ferror@PLT

            test EAX,EAX
            je .L_413352

            call __errno_location@PLT

            mov EDX,DWORD PTR [RAX]
            lea RCX,QWORD PTR [RIP+.L_413574]
            mov R8D,244
            mov ESI,11
            mov EDI,2
            mov EBP,4294967295
            call .L_416a00

            lea RCX,QWORD PTR [RIP+.L_413574]
            mov R8D,245
            mov EDX,2
            mov ESI,130
            mov EDI,32
            call .L_416a00

            jmp .L_413352
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413350:

            xor EBP,EBP
.L_413352:

            add RSP,8
.L_413356:

            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
.L_41335b:

            nop
            nop
            nop
            nop
            nop
.L_413360:

            mov EAX,DWORD PTR [RDI+24]
            test EAX,EAX
            je .L_41336c

            test RSI,RSI
            jne .L_413370
.L_41336c:

            xor EAX,EAX
            ret 
          .byte 0x90
.L_413370:

            push RBX
            mov RCX,QWORD PTR [RDI+48]
            mov R8,RSI
            mov EBX,EDX
            movsxd RSI,EDX
            mov RDI,R8
            mov EDX,1
            call fwrite@PLT

            mov RDX,RAX
            mov EAX,EBX
            test EDX,EDX
            je .L_413398

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413398:

            xor EAX,EAX
            pop RBX
            ret 
.L_41339c:

            nop
            nop
            nop
            nop
.L_4133a0:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            mov RDI,RSI
            mov RBX,RSI
            call strlen@PLT

            mov EDX,DWORD PTR [RBP+24]
            test EDX,EDX
            jne .L_4133c8
.L_4133b9:

            xor R12D,R12D
            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4133c8:

            mov RCX,QWORD PTR [RBP+48]
            movsxd RSI,EAX
            mov EDX,1
            mov RDI,RBX
            mov R12D,EAX
            call fwrite@PLT

            test EAX,EAX
            je .L_4133b9

            mov EAX,R12D
            pop RBX
            pop RBP
            pop R12
            ret 
.L_4133eb:

            nop
            nop
            nop
            nop
            nop
.L_4133f0:

            push R12
            push RBP
            mov R12,RSI
            push RBX
.L_4133f7:

            mov RBX,RDI
            call fopen64@PLT

            test RAX,RAX
            je .L_413450

            lea RDI,QWORD PTR [RIP+.L_6391a0]
            mov RBP,RAX
            call .L_412310

            test RAX,RAX
            mov RBX,RAX
            je .L_413500

            xor ESI,ESI
            mov RDI,RAX
            call .L_412450

            mov RCX,RBP
            mov EDX,1
            mov ESI,106
            mov RDI,RBX
            call .L_412910
.L_41343e:

            mov RAX,RBX
            pop RBX
.L_413442:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413450:

            call __errno_location@PLT

            mov EDX,DWORD PTR [RAX]
            lea RCX,QWORD PTR [RIP+.L_413574]
            mov R8D,168
            mov ESI,1
            mov EDI,2
            mov RBP,RAX
            call .L_416a00

            lea R9,QWORD PTR [RIP+.L_41357f]
            lea RCX,QWORD PTR [RIP+.L_413582]
            lea RSI,QWORD PTR [RIP+.L_413586]
            xor EAX,EAX
            mov R8,R12
            mov RDX,RBX
            mov EDI,5
            call .L_417090

            cmp DWORD PTR [RBP],2
            je .L_4134d0

            lea RCX,QWORD PTR [RIP+.L_413574]
            xor EBX,EBX
            mov R8D,173
            mov EDX,2
            mov ESI,109
            mov EDI,32
            call .L_416a00

            mov RAX,RBX
            pop RBX
.L_4134ca:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4134d0:

            lea RCX,QWORD PTR [RIP+.L_413574]
            xor EBX,EBX
            mov R8D,171
            mov EDX,128
            mov ESI,109
            mov EDI,32
            call .L_416a00

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413500:

            mov RDI,RBP
            call fclose@PLT

            jmp .L_41343e
.L_41350d:

            nop
            nop
            nop
.L_413510:

            push R12
            mov R12,RDI
            push RBP
            lea RDI,QWORD PTR [RIP+.L_6391a0]
            push RBX
            mov EBP,ESI
            call .L_412310

            test RAX,RAX
            mov RBX,RAX
            je .L_41354a

            xor ESI,ESI
            mov RDI,RAX
            call .L_412470

            movsxd RDX,EBP
            mov RCX,R12
            mov ESI,106
            mov RDI,RBX
            call .L_412910
.L_41354a:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            ret 
.L_413552:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413560:

            lea RAX,QWORD PTR [RIP+.L_6391a0]
            ret 
.L_413568:
          .string "a+"
.L_41356b:
          .string "a"
.L_41356d:
          .string "r+"
.L_413570:
          .string "w"
.L_413572:
          .string "r"
.L_413574:
          .string "bss_file.c"
.L_41357f:
          .string "\')"
.L_413582:
          .string "\',\'"
.L_413586:

            outsw DX,WORD PTR [RSI]
            jo .L_4135ef
          .byte 0x6e
          .byte 0x28
          .byte 0x27
          .byte 0x0
.L_41358e:
          .string "FILE pointer"
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4135a0:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDX
            sub RSP,24
            test RSI,RSI
            mov RDX,QWORD PTR [RDX]
            mov RAX,QWORD PTR [RCX]
            je .L_4135c3

            cmp RAX,RDX
            je .L_4135f0
.L_4135c3:

            cmp RDX,RAX
            jae .L_4135e3
.L_4135c8:

            mov RAX,QWORD PTR [R13]
            lea RCX,QWORD PTR [RDX+1]
            mov ESI,R8D
            test RAX,RAX
            je .L_413682

            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RAX+RDX*1],R8B
.L_4135e3:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
.L_4135ef:

            nop
.L_4135f0:

            mov RDI,QWORD PTR [RSI]
            lea RAX,QWORD PTR [RDX+1024]
            mov R12,RCX
            mov DWORD PTR [RSP+12],R8D
            mov QWORD PTR [RCX],RAX
            test RDI,RDI
            je .L_413640

            lea RDX,QWORD PTR [RIP+.L_41504c]
            mov ECX,724
            mov ESI,EAX
            call .L_418920

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            je .L_4135e3

            mov RDX,QWORD PTR [RBX]
            mov RAX,QWORD PTR [R12]
            mov R8D,DWORD PTR [RSP+12]
            cmp RDX,RAX
            jb .L_4135c8

            jmp .L_4135e3
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413640:

            lea RSI,QWORD PTR [RIP+.L_41504c]
            mov EDX,713
            mov EDI,EAX
            call .L_418820

            test RAX,RAX
            mov QWORD PTR [RBP],RAX
            je .L_4135e3

            mov RDX,QWORD PTR [RBX]
            mov R8D,DWORD PTR [RSP+12]
            test RDX,RDX
            jne .L_4136a0
.L_413669:

            cmp QWORD PTR [R12],RDX
            mov QWORD PTR [R13],0
            jbe .L_4135e3

            lea RCX,QWORD PTR [RDX+1]
            mov ESI,R8D
.L_413682:

            mov RAX,QWORD PTR [RBP]
            mov QWORD PTR [RBX],RCX
            mov BYTE PTR [RAX+RDX*1],SIL
            add RSP,24
.L_413691:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4136a0:

            mov RSI,QWORD PTR [R13]
            mov RDI,RAX
            call memcpy@PLT

            mov RDX,QWORD PTR [RBX]
            mov R8D,DWORD PTR [RSP+12]
            jmp .L_413669
.L_4136b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4136c0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov R12,RCX
            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDX
            sub RSP,88
.L_4136da:

            mov R15D,DWORD PTR [RSP+152]
            mov ESI,DWORD PTR [RSP+160]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            test R15D,R15D
            cmovns EAX,R15D
            test SIL,64
            mov R11D,EAX
            mov RAX,R8
            jne .L_413740

            test R8,R8
            js .L_413a00

            test SIL,2
            jne .L_413a20

            mov EDI,ESI
            and EDI,4
            mov DWORD PTR [RSP+12],EDI
            jne .L_413a38

            mov DWORD PTR [RSP+8],0
            jmp .L_413750
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413740:

            mov DWORD PTR [RSP+8],0
            mov DWORD PTR [RSP+12],0
.L_413750:

            lea RDI,QWORD PTR [RIP+.L_415056]
            test SIL,8
            mov QWORD PTR [RSP],RDI
            je .L_41378c

            lea RDI,QWORD PTR [RIP+.L_415057]
            cmp R9D,8
            mov QWORD PTR [RSP],RDI
            je .L_41378c

            lea RCX,QWORD PTR [RIP+.L_415059]
            lea RDX,QWORD PTR [RIP+.L_415056]
            cmp R9D,16
            cmove RDX,RCX
            mov QWORD PTR [RSP],RDX
.L_41378c:

            lea RDI,QWORD PTR [RIP+.L_41505c]
            lea RDX,QWORD PTR [RIP+.L_41506d]
            lea RCX,QWORD PTR [RSP+32]
            test SIL,32
            movsxd R9,R9D
            cmove RDI,RDX
            mov QWORD PTR [RSP+24],RCX
            xor R15D,R15D
            jmp .L_4137bb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4137b8:

            mov R15D,R10D
.L_4137bb:

            xor EDX,EDX
            lea R10D,DWORD PTR [R15+1]
            div R9
            movzx EDX,BYTE PTR [RDI+RDX*1]
            test RAX,RAX
            setne R8B
            cmp R10D,25
            mov BYTE PTR [RCX],DL
            setle DL
            add RCX,1
            test R8B,DL
            jne .L_4137b8

            cmp R10D,26
            mov RDI,QWORD PTR [RSP]
            mov R13D,R11D
            cmovne R15D,R10D
            mov DWORD PTR [RSP+20],ESI
            mov DWORD PTR [RSP+16],R11D
            movsxd RAX,R15D
            sub R13D,R15D
            mov BYTE PTR [RSP+RAX*1+32],0
            call strlen@PLT

            mov R11D,DWORD PTR [RSP+16]
            mov ESI,DWORD PTR [RSP+144]
            mov EDI,R13D
            cmp R15D,R11D
            mov EDX,R11D
            cmovge EDX,R15D
            xor ECX,ECX
            sub ESI,EDX
            mov EDX,ESI
            sub EDX,DWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RSP+20]
            test R13D,R13D
            cmovs EDI,ECX
            mov R13D,ESI
            mov DWORD PTR [RSP+8],EDI
            sub EDX,EAX
            mov EAX,ECX
            cmovns EAX,EDX
            and R13D,1
            and ESI,16
            mov DWORD PTR [RSP+16],EAX
            je .L_413980

            cmp EDI,EAX
            cmovge EAX,EDI
            xor R13D,R13D
            mov DWORD PTR [RSP+8],EAX
.L_413861:

            mov EDX,DWORD PTR [RSP+12]
            test EDX,EDX
            jne .L_4139d4
.L_41386d:

            mov RAX,QWORD PTR [RSP]
            movsx R8D,BYTE PTR [RAX]
            test R8B,R8B
            je .L_4138ac

            mov DWORD PTR [RSP+12],R13D
            mov R13,QWORD PTR [RSP]
            nop
            nop
            nop
            nop
            nop
.L_413888:

            add R13,1
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R14
            call .L_4135a0

            movsx R8D,BYTE PTR [R13]
            test R8B,R8B
            jne .L_413888

            mov R13D,DWORD PTR [RSP+12]
.L_4138ac:

            mov EAX,DWORD PTR [RSP+8]
            test EAX,EAX
            je .L_4138e1

            mov DWORD PTR [RSP],R13D
            mov R13D,DWORD PTR [RSP+8]
            nop
            nop
            nop
.L_4138c0:

            mov R8D,48
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R14
            call .L_4135a0

            sub R13D,1
            jne .L_4138c0

            mov R13D,DWORD PTR [RSP]
.L_4138e1:

            test R15D,R15D
            je .L_413933

            lea EAX,DWORD PTR [R15-1]
            mov RSI,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP],R13D
            movsxd RDX,EAX
            mov EAX,EAX
            lea R15,QWORD PTR [RSI+RDX*1]
            lea RDX,QWORD PTR [RSI+RDX*1-1]
            sub RDX,RAX
            mov R13,R15
            mov R15,RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_413910:

            movsx R8D,BYTE PTR [R13]
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R14
            sub R13,1
            call .L_4135a0

            cmp R13,R15
            jne .L_413910

            mov R13D,DWORD PTR [RSP]
.L_413933:

            test R13D,R13D
            je .L_41395d

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413940:

            mov R8D,32
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R14
            call .L_4135a0

            add R13D,1
            jne .L_413940
.L_41395d:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_413a4d

            add RSP,88
.L_413975:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_413980:

            test R13D,R13D
            mov R13D,DWORD PTR [RSP+16]
            jne .L_4139f0

            test EDX,EDX
            jle .L_413861

            nop
            nop
            nop
            nop
            nop
            nop
.L_413998:

            mov R8D,32
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R14
            call .L_4135a0

            sub R13D,1
            jne .L_413998

            mov ESI,DWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+12]
            mov EAX,1
            test ESI,ESI
            cmovg EAX,ESI
            sub ESI,EAX
            test EDX,EDX
            mov R13D,ESI
            je .L_41386d
.L_4139d4:

            mov R8D,DWORD PTR [RSP+12]
            mov RCX,R12
            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R14
            call .L_4135a0

            jmp .L_41386d
          .byte 0x90
.L_4139f0:

            neg R13D
            jmp .L_413861
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413a00:

            neg RAX
            mov DWORD PTR [RSP+8],1
            mov DWORD PTR [RSP+12],45
            jmp .L_413750
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413a20:

            mov DWORD PTR [RSP+8],1
            mov DWORD PTR [RSP+12],43
            jmp .L_413750
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_413a38:

            mov DWORD PTR [RSP+8],1
            mov DWORD PTR [RSP+12],32
            jmp .L_413750
.L_413a4d:

            call __stack_chk_fail@PLT
.L_413a52:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_413a60:

            push R15
            push R14
            lea R11,QWORD PTR [R9+1]
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_415098]
            push RBP
            push RBX
            mov R13,RSI
            mov R10,RDX
            mov R14,R8
            xor EBP,EBP
            sub RSP,200
.L_413a87:

            movsx EBX,BYTE PTR [R9]
            xor R9D,R9D
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+184],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+120]
            mov R15,QWORD PTR [RSP+256]
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+120],0
            mov QWORD PTR [RSP+16],RAX
            lea RAX,QWORD PTR [RSP+128]
            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+32],4294967295
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [RSP+127]
            mov QWORD PTR [RSP+56],RAX
.L_413aed:

            test BL,BL
            je .L_413af6

            cmp EBP,7
            jne .L_413b70
.L_413af6:

            mov RAX,QWORD PTR [R10]
.L_413af9:

            mov RDX,QWORD PTR [RSP+120]
.L_413afe:

            sub RAX,1
            xor ECX,ECX
            cmp RAX,RDX
            setb CL
            mov DWORD PTR [R14],ECX
            jae .L_413b14

            mov QWORD PTR [RSP+120],RAX
.L_413b14:

            mov RDI,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+16]
            xor R8D,R8D
            mov RCX,R10
            mov RSI,R13
            call .L_4135a0

            mov RAX,QWORD PTR [RSP+120]
            mov RDI,QWORD PTR [RSP+24]
            sub RAX,1
            mov QWORD PTR [RDI],RAX
            mov RAX,QWORD PTR [RSP+184]
            xor RAX,QWORD PTR FS:[40]
            jne .L_414a53

            add RSP,200
.L_413b5b:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413b70:

            test R13,R13
            je .L_413b90
.L_413b75:

            cmp EBP,6
            ja .L_413dd0

            mov EAX,EBP
            movsxd RAX,DWORD PTR [R12+RAX*4]
            add RAX,R12
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413b90:

            mov RAX,QWORD PTR [RSP+120]
            cmp QWORD PTR [R10],RAX
            ja .L_413b75

            mov EBP,7
            jmp .L_413aed
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_413ba8:

            lea EAX,DWORD PTR [RBX-32]
            cmp AL,16
            ja .L_413f56

            lea RDX,QWORD PTR [RIP+.L_4150b4]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_413bd0:

            mov QWORD PTR [RSP+80],R10
            mov DWORD PTR [RSP+72],R9D
            mov QWORD PTR [RSP+64],R11
            call __ctype_b_loc@PLT

            mov RCX,QWORD PTR [RAX]
            movzx EDX,BL
            mov R11,QWORD PTR [RSP+64]
            mov R9D,DWORD PTR [RSP+72]
            mov R10,QWORD PTR [RSP+80]
            test BYTE PTR [RCX+RDX*2+1],8
            je .L_413e40

            lea EAX,DWORD PTR [R9+R9*4]
            add R11,1
            lea R9D,DWORD PTR [RBX+RAX*2-48]
            movsx EBX,BYTE PTR [R11-1]
            jmp .L_413aed
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413c20:

            cmp BL,46
            mov EBP,5
            jne .L_413aed

            movsx EBX,BYTE PTR [R11]
            mov EBP,4
            add R11,1
            jmp .L_413aed
.L_413c40:

            mov QWORD PTR [RSP+80],R10
            mov DWORD PTR [RSP+72],R9D
            mov QWORD PTR [RSP+64],R11
            call __ctype_b_loc@PLT

            mov RCX,QWORD PTR [RAX]
            movzx EDX,BL
            mov R11,QWORD PTR [RSP+64]
            mov R9D,DWORD PTR [RSP+72]
            mov R10,QWORD PTR [RSP+80]
            test BYTE PTR [RCX+RDX*2+1],8
            je .L_413e80

            mov ESI,DWORD PTR [RSP+32]
            mov EAX,0
            test ESI,ESI
            cmovns EAX,ESI
            add R11,1
            lea EAX,DWORD PTR [RAX+RAX*4]
            lea EAX,DWORD PTR [RBX+RAX*2-48]
            mov DWORD PTR [RSP+32],EAX
            movsx EBX,BYTE PTR [R11-1]
            jmp .L_413aed

            nop
            nop
            nop
            nop
            nop
.L_413ca0:

            cmp BL,104
            je .L_414750

            jle .L_413ec0

            cmp BL,108
            je .L_4147a0

            cmp BL,113
            jne .L_414790

            movzx EBX,BYTE PTR [R11]
            test BL,BL
            je .L_413af6

            add R11,1
            test R13,R13
            je .L_414c23

            lea EAX,DWORD PTR [RBX-37]
            cmp AL,83
            ja .L_413da0

            lea RDX,QWORD PTR [RIP+.L_4150f8]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
.L_413cf8:

            cmp BL,112
            je .L_41452d

            jle .L_414484

            cmp BL,117
            je .L_413d24

            jle .L_41456b

            cmp BL,119
            je .L_414430

            cmp BL,120
            jne .L_413da0
.L_413d24:

            mov EAX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [R15]
            or EAX,64
.L_413d2e:

            cmp EDX,47
            ja .L_414a58

            mov ECX,EDX
            add RCX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_413d43:

            mov R8D,DWORD PTR [RCX]
.L_413d46:

            cmp BL,111
            mov EDX,8
            je .L_413d60

            cmp BL,117
            mov EDX,10
            mov ECX,16
            cmovne EDX,ECX
.L_413d60:

            mov QWORD PTR [RSP+40],R11
            sub RSP,8
.L_413d69:

            mov RCX,R10
            push RAX
            mov EAX,DWORD PTR [RSP+48]
            mov RSI,R13
            push RAX
            push R9
            mov R9D,EDX
            mov RDI,QWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+64],R10
            call .L_4136c0

            add RSP,32
.L_413d92:

            mov R10,QWORD PTR [RSP+32]
            mov R11,QWORD PTR [RSP+40]
            nop
            nop
            nop
            nop
.L_413da0:

            movzx EBX,BYTE PTR [R11]
            test BL,BL
            je .L_413af6

            add R11,1
            test R13,R13
            je .L_414920
.L_413db9:

            mov DWORD PTR [RSP+40],0
            mov DWORD PTR [RSP+32],4294967295
            xor R9D,R9D
            nop
            nop
            nop
            nop
.L_413dd0:

            cmp BL,37
            mov EBP,1
            je .L_413e13

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R10
            movsx R8D,BL
            mov RSI,R13
            mov DWORD PTR [RSP+80],R9D
            mov QWORD PTR [RSP+72],R11
            mov QWORD PTR [RSP+64],R10
            xor EBP,EBP
            call .L_4135a0

            mov R9D,DWORD PTR [RSP+80]
            mov R11,QWORD PTR [RSP+72]
            mov R10,QWORD PTR [RSP+64]
.L_413e13:

            movsx EBX,BYTE PTR [R11]
            add R11,1
            jmp .L_413aed
.L_413e20:

            lea EAX,DWORD PTR [RBX-37]
            cmp AL,83
            ja .L_413da0

            lea RDX,QWORD PTR [RIP+.L_415248]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0x90
.L_413e40:

            cmp BL,42
            mov EBP,3
            jne .L_413aed

            mov EDX,DWORD PTR [R15]
            cmp EDX,47
            ja .L_414a7a

            mov EAX,EDX
            add RAX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_413e66:

            movsx EBX,BYTE PTR [R11]
            mov R9D,DWORD PTR [RAX]
            add R11,1
            mov EBP,3
            jmp .L_413aed
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_413e80:

            cmp BL,42
            mov EBP,5
            jne .L_413aed

            mov EDX,DWORD PTR [R15]
            cmp EDX,47
            ja .L_414cdd

            mov EAX,EDX
            add RAX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_413ea6:

            mov EAX,DWORD PTR [RAX]
            movsx EBX,BYTE PTR [R11]
            mov EBP,5
            add R11,1
            mov DWORD PTR [RSP+32],EAX
            jmp .L_413aed
          .byte 0x66
          .byte 0x90
.L_413ec0:

            cmp BL,76
            jne .L_414790

            movzx EBX,BYTE PTR [R11]
            test BL,BL
            je .L_413af6

            add R11,1
            test R13,R13
            je .L_414a3d

            lea EAX,DWORD PTR [RBX-37]
            cmp AL,83
            ja .L_413da0

            lea RDX,QWORD PTR [RIP+.L_415398]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
.L_413f00:

            or DWORD PTR [RSP+40],16
            add R11,1
            movsx EBX,BYTE PTR [R11-1]
            jmp .L_413aed
.L_413f13:

            or DWORD PTR [RSP+40],1
            jmp .L_413e13
.L_413f1d:

            or DWORD PTR [RSP+40],2
            add R11,1
            movsx EBX,BYTE PTR [R11-1]
            jmp .L_413aed
.L_413f30:

            or DWORD PTR [RSP+40],8
            add R11,1
            movsx EBX,BYTE PTR [R11-1]
            jmp .L_413aed
.L_413f43:

            or DWORD PTR [RSP+40],4
            add R11,1
            movsx EBX,BYTE PTR [R11-1]
            jmp .L_413aed
.L_413f56:

            mov EBP,2
            jmp .L_413aed
.L_413f60:

            mov EAX,DWORD PTR [R15]
            mov RDX,QWORD PTR [RSP+120]
.L_413f68:

            cmp EAX,47
            ja .L_414cee

            mov ECX,EAX
            add RCX,QWORD PTR [R15+16]
            add EAX,8
            mov DWORD PTR [R15],EAX
.L_413f7d:

            mov RAX,QWORD PTR [RCX]
            mov DWORD PTR [RAX],EDX
            jmp .L_413da0
.L_413f87:

            mov EAX,DWORD PTR [R15+4]
            cmp EAX,175
            ja .L_414cff

            add EAX,16
            mov DWORD PTR [R15+4],EAX
            jmp .L_413da0
.L_413fa2:

            cmp BL,103
            je .L_413f87

            jg .L_413cf8

            cmp BL,88
            je .L_414a33

            jle .L_414439

            cmp BL,100
            je .L_41449c
.L_413fc5:

            jle .L_4144ff

            cmp BL,101
            je .L_414411

            cmp BL,102
            jne .L_413da0
.L_413fdd:

            mov EDX,DWORD PTR [R15+4]
            cmp EDX,175
            ja .L_414caa

            mov EAX,EDX
            add RAX,QWORD PTR [R15+16]
            add EDX,16
            mov DWORD PTR [R15+4],EDX
.L_413ffa:

            movsd XMM1,QWORD PTR [RAX]
            mov EAX,DWORD PTR [RSP+32]
            test EAX,EAX
            js .L_414933

            cmp EAX,9
            mov EDI,9
            cmovle EDI,EAX
.L_414015:

            pxor XMM0,XMM0
            ucomisd XMM0,XMM1
            ja .L_414945

            mov EAX,DWORD PTR [RSP+40]
            test AL,2
            jne .L_41490b

            and EAX,4
            mov DWORD PTR [RSP+64],EAX
            jne .L_41497c

            mov DWORD PTR [RSP+72],0
.L_414044:

            mov EBX,DWORD PTR [RSP+32]
            cvttsd2si RCX,XMM1
            test EBX,EBX
            je .L_414962

            movsd XMM0,QWORD PTR [RIP+.L_415788]
            mov EAX,EDI
            movsd XMM2,QWORD PTR [RIP+.L_415790]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414070:

            sub EAX,1
            mulsd XMM0,XMM2
            jne .L_414070

            cvttsd2si RDX,XMM0
            pxor XMM3,XMM3
            mov EAX,EDI
            cvtsi2sd XMM3,RDX
            subsd XMM0,XMM3
            movsd XMM3,QWORD PTR [RIP+.L_415798]
            ucomisd XMM0,XMM3
            movsd XMM0,QWORD PTR [RIP+.L_415788]
            sbb RDX,-1
            nop
            nop
            nop
.L_4140a8:

            sub EAX,1
            mulsd XMM0,XMM2
            jne .L_4140a8
.L_4140b1:

            pxor XMM2,XMM2
            cvtsi2sd XMM2,RCX
            subsd XMM1,XMM2
            mulsd XMM0,XMM1
            pxor XMM1,XMM1
            cvttsd2si RSI,XMM0
            cvtsi2sd XMM1,RSI
            subsd XMM0,XMM1
            ucomisd XMM0,XMM3
            sbb RSI,-1
            cmp RSI,RDX
            jl .L_4140e8

            add RCX,1
            sub RSI,RDX
.L_4140e8:

            xor EAX,EAX
            mov QWORD PTR [RSP+80],RSI
            mov R8,QWORD PTR [RSP+48]
            lea RBX,QWORD PTR [RIP+.L_415085]
            mov ESI,EAX
            jmp .L_414102
          .byte 0x90
.L_414100:

            mov ESI,EBP
.L_414102:

            movabs RAX,7378697629483820647
            lea EBP,DWORD PTR [RSI+1]
            imul RCX
            mov RAX,RDX
            mov RDX,RCX
            sar RDX,63
            sar RAX,2
            sub RAX,RDX
            lea RDX,QWORD PTR [RAX+RAX*4]
            add RDX,RDX
            sub RCX,RDX
            test RAX,RAX
            movzx EDX,BYTE PTR [RBX+RCX*1]
            mov RCX,RAX
            mov BYTE PTR [R8],DL
            setne DL
            cmp EBP,19
            setle AL
            add R8,1
            test DL,AL
            jne .L_414100

            mov EAX,ESI
            cmp EBP,20
            mov RSI,QWORD PTR [RSP+80]
            cmove EBP,EAX
            movabs R8,7378697629483820647
            xor ECX,ECX
            movsxd RAX,EBP
            mov BYTE PTR [RSP+RAX*1+128],0
            lea RAX,QWORD PTR [RSP+160]
            mov QWORD PTR [RSP+80],RAX
            nop
            nop
            nop
            nop
.L_414180:

            mov RAX,RSI
            imul R8
            mov RAX,RDX
            mov RDX,RSI
            sar RDX,63
            sar RAX,2
            sub RAX,RDX
            lea RDX,QWORD PTR [RAX+RAX*4]
            add RDX,RDX
            sub RSI,RDX
            movzx EDX,BYTE PTR [RBX+RSI*1]
            mov RSI,QWORD PTR [RSP+80]
            mov BYTE PTR [RSI+RCX*1],DL
            add RCX,1
            mov RSI,RAX
            cmp EDI,ECX
            jg .L_414180

            test EDI,EDI
            mov EAX,1
            mov EBX,R9D
            cmovg EAX,EDI
            sub EBX,EBP
            cdqe 
            sub EBX,EDI
            sub EBX,1
            mov DWORD PTR [RSP+100],EAX
            sub EDI,EAX
            mov BYTE PTR [RSP+RAX*1+160],0
            mov EAX,0
            mov DWORD PTR [RSP+96],EDI
            cmovns EAX,EDI
            mov DWORD PTR [RSP+92],EAX
            mov EAX,DWORD PTR [RSP+40]
            mov EDX,EAX
            and EDX,1
            sub EBX,DWORD PTR [RSP+72]
            js .L_4148b4

            and EAX,16
            test EDX,EDX
            je .L_41485b

            neg EBX
.L_41420c:

            mov R8D,DWORD PTR [RSP+64]
            test R8D,R8D
            je .L_41423f

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R10
            mov RSI,R13
            mov QWORD PTR [RSP+72],R11
            mov QWORD PTR [RSP+64],R10
            call .L_4135a0

            mov R10,QWORD PTR [RSP+64]
            mov R11,QWORD PTR [RSP+72]
.L_41423f:

            test EBP,EBP
            je .L_4142ab

            mov RAX,QWORD PTR [RSP+48]
            sub EBP,1
            mov DWORD PTR [RSP+72],EBX
            movsxd RDX,EBP
            mov EBP,EBP
            mov QWORD PTR [RSP+104],R14
            mov QWORD PTR [RSP+64],R11
            mov RBX,R10
            add RAX,RDX
            add RDX,QWORD PTR [RSP+56]
            mov R14,RAX
            sub RDX,RBP
            mov RBP,RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_414278:

            movsx R8D,BYTE PTR [R14]
            mov RDX,QWORD PTR [RSP+16]
            mov RCX,RBX
            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R13
            sub R14,1
            call .L_4135a0

            cmp RBP,R14
            jne .L_414278

            mov R10,RBX
            mov R11,QWORD PTR [RSP+64]
            mov EBX,DWORD PTR [RSP+72]
            mov R14,QWORD PTR [RSP+104]
.L_4142ab:

            mov EDI,DWORD PTR [RSP+32]
            test EDI,EDI
            jne .L_4142be

            test BYTE PTR [RSP+40],8
            je .L_414349
.L_4142be:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R10
            mov R8D,46
            mov RSI,R13
            mov QWORD PTR [RSP+72],R10
            mov QWORD PTR [RSP+32],R11
            call .L_4135a0

            mov EAX,DWORD PTR [RSP+100]
            mov R9,QWORD PTR [RSP+80]
            mov R10,QWORD PTR [RSP+72]
            mov DWORD PTR [RSP+40],EBX
            mov QWORD PTR [RSP+64],R14
            sub EAX,1
            movsxd RDX,EAX
            mov EAX,EAX
            mov R14,R10
            lea RBP,QWORD PTR [RSP+RDX*1+159]
            add R9,RDX
            mov RBX,R9
            sub RBP,RAX
.L_414316:

            movsx R8D,BYTE PTR [RBX]
            mov RDX,QWORD PTR [RSP+16]
            mov RCX,R14
            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R13
            sub RBX,1
            call .L_4135a0

            cmp RBP,RBX
            jne .L_414316

            mov R10,R14
            mov R11,QWORD PTR [RSP+32]
            mov EBX,DWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+64]
.L_414349:

            mov ESI,DWORD PTR [RSP+96]
            test ESI,ESI
            jle .L_414394

            mov DWORD PTR [RSP+40],EBX
            mov EBX,DWORD PTR [RSP+92]
            mov RBP,R10
            mov QWORD PTR [RSP+32],R11
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414368:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov R8D,48
            mov RCX,RBP
            mov RSI,R13
            call .L_4135a0

            sub EBX,1
            jne .L_414368

            mov R11,QWORD PTR [RSP+32]
            mov EBX,DWORD PTR [RSP+40]
            mov R10,RBP
.L_414394:

            test EBX,EBX
            je .L_413da0

            mov QWORD PTR [RSP+32],R11
            mov RBP,R10
            nop
            nop
            nop
            nop
.L_4143a8:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov R8D,32
            mov RCX,RBP
            mov RSI,R13
            call .L_4135a0

            add EBX,1
            jne .L_4143a8

            mov R11,QWORD PTR [RSP+32]
            mov R10,RBP
            jmp .L_413da0
.L_4143d5:

            xor ECX,ECX
.L_4143d7:

            mov EAX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [R15]
            mov EBX,88
            or EAX,96
            cmp ECX,2
            je .L_4143f4

            cmp ECX,4
            jne .L_4148e4
.L_4143f4:

            cmp EDX,47
            ja .L_414d09

            mov ECX,EDX
            add RCX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_414409:

            mov R8,QWORD PTR [RCX]
            jmp .L_413d46
.L_414411:

            mov EDX,DWORD PTR [R15+4]
            cmp EDX,175
            ja .L_414cff

            add EDX,16
            mov DWORD PTR [R15+4],EDX
            jmp .L_413da0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_414430:

            add R11,1
            jmp .L_413da0
.L_414439:

            cmp BL,69
            je .L_414411

            cmp BL,71
            je .L_413f87

            cmp BL,37
            jne .L_413da0
.L_414450:

            mov QWORD PTR [RSP+40],R11
            mov R8D,37
.L_41445b:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R10
            mov RSI,R13
            mov QWORD PTR [RSP+32],R10
            call .L_4135a0

            mov R10,QWORD PTR [RSP+32]
            mov R11,QWORD PTR [RSP+40]
            jmp .L_413da0
.L_414484:

            cmp BL,110
            je .L_414d4f

            jg .L_413d24

            cmp BL,105
            jne .L_413da0
.L_41449c:

            mov EDX,DWORD PTR [R15]
            cmp EDX,47
            ja .L_414ccc

            mov EAX,EDX
            add RAX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_4144b4:

            movsxd R8,DWORD PTR [RAX]
.L_4144b7:

            mov QWORD PTR [RSP+64],R11
            sub RSP,8
.L_4144c0:

            mov EAX,DWORD PTR [RSP+48]
            push RAX
            mov EAX,DWORD PTR [RSP+48]
            push RAX
            push R9
            mov R9D,10
.L_4144d2:

            mov RDX,QWORD PTR [RSP+48]
            mov RDI,QWORD PTR [RSP+40]
            mov RCX,R10
            mov RSI,R13
            mov QWORD PTR [RSP+64],R10
            call .L_4136c0

            add RSP,32
.L_4144f0:

            mov R10,QWORD PTR [RSP+32]
            mov R11,QWORD PTR [RSP+64]
            jmp .L_413da0
.L_4144ff:

            cmp BL,99
            jne .L_413da0
.L_414508:

            mov EDX,DWORD PTR [R15]
            cmp EDX,47
            ja .L_414a69

            mov EAX,EDX
            add RAX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_414520:

            mov QWORD PTR [RSP+40],R11
            mov R8D,DWORD PTR [RAX]
            jmp .L_41445b
.L_41452d:

            mov EDX,DWORD PTR [R15]
            cmp EDX,47
            ja .L_414c99

            mov EAX,EDX
            add RAX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_414545:

            mov QWORD PTR [RSP+64],R11
            sub RSP,8
.L_41454e:

            mov EDX,DWORD PTR [RSP+48]
            or EDX,8
            push RDX
            mov ESI,DWORD PTR [RSP+48]
            push RSI
            push R9
            mov R9D,16
            mov R8,QWORD PTR [RAX]
            jmp .L_4144d2
.L_41456b:

            cmp BL,115
            jne .L_413da0
.L_414574:

            mov EDX,DWORD PTR [R15]
            cmp EDX,47
            ja .L_414cbb

            mov EAX,EDX
            add RAX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_41458c:

            mov ECX,DWORD PTR [RSP+32]
            mov RAX,QWORD PTR [RAX]
            test ECX,ECX
            js .L_4148c7
.L_41459b:

            test RAX,RAX
            je .L_4148bb

            cmp BYTE PTR [RAX],0
            je .L_4145c0
.L_4145a9:

            mov EDX,1
            nop
            nop
.L_4145b0:

            mov ECX,EDX
            add RDX,1
            cmp BYTE PTR [RAX+RDX*1-1],0
            jne .L_4145b0

            sub R9D,ECX
.L_4145c0:

            mov EBP,DWORD PTR [RSP+40]
            test R9D,R9D
            mov EBX,0
            cmovns EBX,R9D
            and EBP,1
            jne .L_414840

            mov EDX,DWORD PTR [RSP+32]
            test EDX,EDX
            jle .L_414644

            test R9D,R9D
            jle .L_414644

            mov QWORD PTR [RSP+72],R14
            mov QWORD PTR [RSP+40],R11
            mov R14D,EBP
            mov QWORD PTR [RSP+64],RAX
            mov EBP,EBX
            mov RBX,R10
            jmp .L_414607
          .byte 0x90
.L_414600:

            cmp DWORD PTR [RSP+32],R14D
            jle .L_41462d
.L_414607:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov R8D,32
            mov RCX,RBX
            mov RSI,R13
            sub EBP,1
            add R14D,1
            call .L_4135a0

            test EBP,EBP
            jg .L_414600
.L_41462d:

            mov R10,RBX
            mov R11,QWORD PTR [RSP+40]
            mov EBX,EBP
            mov RAX,QWORD PTR [RSP+64]
            mov EBP,R14D
            mov R14,QWORD PTR [RSP+72]
.L_414644:

            movsx R8D,BYTE PTR [RAX]
            test R8B,R8B
            je .L_4146d9

            mov ESI,DWORD PTR [RSP+32]
            cmp ESI,EBP
            jle .L_413da0

            lea EDX,DWORD PTR [RSI-1]
            mov DWORD PTR [RSP+64],EBP
            mov DWORD PTR [RSP+92],EBX
            mov QWORD PTR [RSP+80],R14
            mov QWORD PTR [RSP+72],R11
            mov RBX,RAX
            sub EDX,EBP
            mov R14,RAX
            mov RBP,R10
            lea RSI,QWORD PTR [RAX+RDX*1+1]
            mov QWORD PTR [RSP+40],RSI
            jmp .L_41469b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414690:

            cmp R14,QWORD PTR [RSP+40]
            je .L_414849
.L_41469b:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            add R14,1
            mov RCX,RBP
            mov RSI,R13
            call .L_4135a0

            movsx R8D,BYTE PTR [R14]
            mov EAX,R14D
            sub EAX,EBX
            add EAX,DWORD PTR [RSP+64]
            test R8B,R8B
            jne .L_414690

            mov R11,QWORD PTR [RSP+72]
            mov EBX,DWORD PTR [RSP+92]
            mov R10,RBP
            mov R14,QWORD PTR [RSP+80]
            mov EBP,EAX
.L_4146d9:

            cmp DWORD PTR [RSP+32],EBP
            jle .L_413da0

            test EBX,EBX
            jns .L_413da0

            mov QWORD PTR [RSP+64],R14
            mov QWORD PTR [RSP+72],R15
            mov R14,R10
            mov QWORD PTR [RSP+40],R11
            mov R15D,EBX
            jmp .L_41470e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414708:

            cmp DWORD PTR [RSP+32],EDX
            jle .L_414739
.L_41470e:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            add R15D,1
            mov R8D,32
            mov RCX,R14
            mov RSI,R13
            call .L_4135a0

            mov EDX,R15D
            sub EDX,EBX
            add EDX,EBP
            test R15D,R15D
            js .L_414708
.L_414739:

            mov R10,R14
            mov R11,QWORD PTR [RSP+40]
            mov R14,QWORD PTR [RSP+64]
            mov R15,QWORD PTR [RSP+72]
            jmp .L_413da0
.L_414750:

            movzx EBX,BYTE PTR [R11]
            test BL,BL
            je .L_413af6

            add R11,1
            test R13,R13
            je .L_414abd

            lea EAX,DWORD PTR [RBX-37]
            cmp AL,83
            ja .L_413da0

            lea RDX,QWORD PTR [RIP+.L_4154e8]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_414790:

            mov EBP,6
            jmp .L_413aed
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4147a0:

            movzx EBX,BYTE PTR [R11]
            cmp BL,108
            je .L_4147dc

            test BL,BL
            je .L_413af6

            add R11,1
            test R13,R13
            je .L_414b93

            lea EAX,DWORD PTR [RBX-37]
            cmp AL,83
            ja .L_413da0

            lea RDX,QWORD PTR [RIP+.L_415638]
            movzx EAX,AL
            movsxd RAX,DWORD PTR [RDX+RAX*4]
            add RAX,RDX
            jmp RAX
.L_4147dc:

            movzx EBX,BYTE PTR [R11+1]
            test BL,BL
            je .L_413af6

            add R11,2
            test R13,R13
            je .L_414d3c
.L_4147f6:

            cmp BL,103
            je .L_413f87

            jle .L_414c3c

            cmp BL,112
            je .L_41452d

            jle .L_414c4f
.L_414814:

            cmp BL,117
            je .L_414831

            jle .L_41456b

            cmp BL,119
            je .L_414430

            cmp BL,120
            jne .L_413da0
.L_414831:

            mov EAX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [R15]
            or EAX,64
            jmp .L_4143f4
.L_414840:

            neg EBX
            xor EBP,EBP
            jmp .L_414644
.L_414849:

            mov R11,QWORD PTR [RSP+72]
            mov R10,RBP
            mov R14,QWORD PTR [RSP+80]
            jmp .L_413da0
.L_41485b:

            test EAX,EAX
            je .L_4149e2

            test EBX,EBX
            je .L_41420c

            mov R8D,DWORD PTR [RSP+64]
            test R8D,R8D
            jne .L_414991
.L_414879:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov RCX,R10
            mov R8D,48
            mov RSI,R13
            mov QWORD PTR [RSP+72],R11
            mov QWORD PTR [RSP+64],R10
            call .L_4135a0

            sub EBX,1
            mov R10,QWORD PTR [RSP+64]
            mov R11,QWORD PTR [RSP+72]
            jne .L_414879

            xor EBX,EBX
            jmp .L_41423f
.L_4148b4:

            xor EBX,EBX
            jmp .L_41420c
.L_4148bb:

            lea RAX,QWORD PTR [RIP+.L_41507e]
            jmp .L_4145a9
.L_4148c7:

            test R13,R13
            mov DWORD PTR [RSP+32],2147483647
            jne .L_41459b

            mov ESI,DWORD PTR [R10]
            mov DWORD PTR [RSP+32],ESI
            jmp .L_41459b
.L_4148e4:

            cmp ECX,1
            jne .L_413d2e
.L_4148ed:

            cmp EDX,47
            ja .L_4149d1

            mov ECX,EDX
            add RCX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_414902:

            movzx R8D,WORD PTR [RCX]
            jmp .L_413d46
.L_41490b:

            mov DWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+64],43
            jmp .L_414044
.L_414920:

            mov RAX,QWORD PTR [R10]
            cmp RAX,QWORD PTR [RSP+120]
            ja .L_413db9

            jmp .L_413af9
.L_414933:

            mov EDI,6
            mov DWORD PTR [RSP+32],6
            jmp .L_414015
.L_414945:

            xorpd XMM1,XMMWORD PTR [RIP+.L_4157a0]
            mov DWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+64],45
            jmp .L_414044
.L_414962:

            mov EDX,1
            movsd XMM0,QWORD PTR [RIP+.L_415788]
            movsd XMM3,QWORD PTR [RIP+.L_415798]
            jmp .L_4140b1
.L_41497c:

            mov DWORD PTR [RSP+72],1
            mov DWORD PTR [RSP+64],32
            jmp .L_414044
.L_414991:

            mov R8D,DWORD PTR [RSP+64]
            mov RDX,QWORD PTR [RSP+16]
            mov RCX,R10
            mov RDI,QWORD PTR [RSP+8]
            sub EBX,1
            mov RSI,R13
            mov QWORD PTR [RSP+72],R11
            mov QWORD PTR [RSP+64],R10
            call .L_4135a0

            test EBX,EBX
            mov R10,QWORD PTR [RSP+64]
            mov R11,QWORD PTR [RSP+72]
            jne .L_414879

            xor EBX,EBX
            jmp .L_41423f
.L_4149d1:

            mov RCX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RCX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_414902
.L_4149e2:

            test EBX,EBX
            jle .L_41420c

            mov DWORD PTR [RSP+104],EBP
            mov QWORD PTR [RSP+72],R11
            mov EBP,EBX
            mov RBX,R10
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414a00:

            mov RDX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+8]
            mov R8D,32
            mov RCX,RBX
            mov RSI,R13
            call .L_4135a0

            sub EBP,1
            jne .L_414a00

            mov R10,RBX
            mov R11,QWORD PTR [RSP+72]
            mov EBX,EBP
            mov EBP,DWORD PTR [RSP+104]
            jmp .L_41420c
.L_414a33:

            mov ECX,3
            jmp .L_4143d7
.L_414a3d:

            mov RDX,QWORD PTR [RSP+120]
            cmp RDX,QWORD PTR [R10]
            jb .L_413fa2
.L_414a4b:

            mov RAX,QWORD PTR [R10]
            jmp .L_413afe
.L_414a53:

            call __stack_chk_fail@PLT
.L_414a58:

            mov RCX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RCX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_413d43
.L_414a69:

            mov RAX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_414520
.L_414a7a:

            mov RAX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_413e66
.L_414a8b:

            mov EAX,DWORD PTR [R15]
            cmp EAX,47
            ja .L_414d1a

            mov EDX,EAX
            add RDX,QWORD PTR [R15+16]
            add EAX,8
            mov DWORD PTR [R15],EAX
.L_414aa3:

            mov RAX,QWORD PTR [RDX]
            mov RDX,QWORD PTR [RSP+120]
            mov WORD PTR [RAX],DX
            jmp .L_413da0
.L_414ab3:

            mov ECX,1
            jmp .L_4143d7
.L_414abd:

            mov RAX,QWORD PTR [R10]
            cmp RAX,QWORD PTR [RSP+120]
            jbe .L_413af9

            cmp BL,103
            je .L_413f87

            jg .L_414b07

            cmp BL,88
            je .L_414ab3

            jle .L_414439

            cmp BL,100
            jne .L_413fc5
.L_414aea:

            mov EDX,DWORD PTR [R15]
            cmp EDX,47
            ja .L_414b53

            mov EAX,EDX
            add RAX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_414afe:

            movsx R8,WORD PTR [RAX]
            jmp .L_4144b7
.L_414b07:

            cmp BL,112
            je .L_41452d

            jle .L_414b3e

            cmp BL,117
            je .L_414b2f

            jle .L_41456b

            cmp BL,119
            je .L_414430

            cmp BL,120
            jne .L_413da0
.L_414b2f:

            mov EAX,DWORD PTR [RSP+40]
            mov EDX,DWORD PTR [R15]
            or EAX,64
            jmp .L_4148ed
.L_414b3e:

            cmp BL,110
            je .L_414a8b

            jg .L_414b2f

            cmp BL,105
            je .L_414aea

            jmp .L_413da0
.L_414b53:

            mov RAX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_414afe
.L_414b61:

            mov EAX,DWORD PTR [R15]
            cmp EAX,47
            ja .L_414c04

            mov EDX,EAX
            add RDX,QWORD PTR [R15+16]
            add EAX,8
            mov DWORD PTR [R15],EAX
.L_414b79:

            mov RAX,QWORD PTR [RDX]
            mov RDX,QWORD PTR [RSP+120]
            mov QWORD PTR [RAX],RDX
            jmp .L_413da0
.L_414b89:

            mov ECX,2
            jmp .L_4143d7
.L_414b93:

            mov RAX,QWORD PTR [R10]
            cmp RAX,QWORD PTR [RSP+120]
            jbe .L_413af9

            cmp BL,103
            je .L_413f87

            jg .L_414bdc

            cmp BL,88
            je .L_414b89
.L_414bb1:

            jle .L_414439

            cmp BL,100
            jne .L_413fc5
.L_414bc0:

            mov EDX,DWORD PTR [R15]
            cmp EDX,47
            ja .L_414c15

            mov EAX,EDX
            add RAX,QWORD PTR [R15+16]
            add EDX,8
            mov DWORD PTR [R15],EDX
.L_414bd4:

            mov R8,QWORD PTR [RAX]
            jmp .L_4144b7
.L_414bdc:

            cmp BL,112
            je .L_41452d

            jg .L_414814

            cmp BL,110
            je .L_414b61
.L_414bf4:

            jg .L_414831

            cmp BL,105
            je .L_414bc0

            jmp .L_413da0
.L_414c04:

            mov RDX,QWORD PTR [R15+8]
            lea RAX,QWORD PTR [RDX+8]
            mov QWORD PTR [R15+8],RAX
            jmp .L_414b79
.L_414c15:

            mov RAX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_414bd4
.L_414c23:

            mov RDX,QWORD PTR [RSP+120]
            cmp RDX,QWORD PTR [R10]
            jae .L_414a4b

            cmp BL,103
            je .L_413f87

            jg .L_414c7c
.L_414c3c:

            cmp BL,88
            jne .L_414bb1
.L_414c45:

            mov ECX,4
            jmp .L_4143d7
.L_414c4f:

            cmp BL,110
            jne .L_414bf4
.L_414c54:

            mov EAX,DWORD PTR [R15]
            mov RDX,QWORD PTR [RSP+120]
.L_414c5c:

            cmp EAX,47
            ja .L_414d2b

            mov ECX,EAX
            add RCX,QWORD PTR [R15+16]
            add EAX,8
            mov DWORD PTR [R15],EAX
.L_414c71:

            mov RAX,QWORD PTR [RCX]
            mov QWORD PTR [RAX],RDX
            jmp .L_413da0
.L_414c7c:

            cmp BL,112
            je .L_41452d

            jg .L_414814

            cmp BL,110
            jne .L_414bf4

            mov EAX,DWORD PTR [R15]
            jmp .L_414c5c
.L_414c99:

            mov RAX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_414545
.L_414caa:

            mov RAX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_413ffa
.L_414cbb:

            mov RAX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_41458c
.L_414ccc:

            mov RAX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_4144b4
.L_414cdd:

            mov RAX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_413ea6
.L_414cee:

            mov RCX,QWORD PTR [R15+8]
            lea RAX,QWORD PTR [RCX+8]
            mov QWORD PTR [R15+8],RAX
            jmp .L_413f7d
.L_414cff:

            add QWORD PTR [R15+8],8
            jmp .L_413da0
.L_414d09:

            mov RCX,QWORD PTR [R15+8]
            lea RDX,QWORD PTR [RCX+8]
            mov QWORD PTR [R15+8],RDX
            jmp .L_414409
.L_414d1a:

            mov RDX,QWORD PTR [R15+8]
            lea RAX,QWORD PTR [RDX+8]
            mov QWORD PTR [R15+8],RAX
            jmp .L_414aa3
.L_414d2b:

            mov RCX,QWORD PTR [R15+8]
            lea RAX,QWORD PTR [RCX+8]
            mov QWORD PTR [R15+8],RAX
            jmp .L_414c71
.L_414d3c:

            mov RAX,QWORD PTR [R10]
            cmp RAX,QWORD PTR [RSP+120]
            ja .L_4147f6

            jmp .L_413af9
.L_414d4f:

            mov EAX,DWORD PTR [R15]
            jmp .L_413f68
.L_414d57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414d60:

            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            lea RSI,QWORD PTR [RIP+.L_41504c]
            mov RBP,RDI
            lea RDI,QWORD PTR [RIP+.L_415090]
            mov R13,RDX
            sub RSP,2120
.L_414d84:

            mov EDX,770
            lea RBX,QWORD PTR [RSP+48]
            mov QWORD PTR [RSP+32],2048
            mov QWORD PTR [RSP+40],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+2104],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP+24],RBX
            call .L_419320

            lea RDX,QWORD PTR [RSP+32]
            lea RSI,QWORD PTR [RSP+40]
            lea RCX,QWORD PTR [RSP+16]
            lea RDI,QWORD PTR [RSP+24]
            sub RSP,8
.L_414dd5:

            mov R9,R12
            push R13
            lea R8,QWORD PTR [RSP+28]
            call .L_413a60

            mov RSI,QWORD PTR [RSP+56]
            pop RAX
            pop RDX
            test RSI,RSI
            mov EDX,DWORD PTR [RSP+16]
            je .L_414e30

            mov RDI,RBP
            call .L_4125d0

            mov RDI,QWORD PTR [RSP+40]
            mov EBX,EAX
            call .L_418aa0
.L_414e08:

            call .L_419420

            mov RCX,QWORD PTR [RSP+2104]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_414e3f

            add RSP,2120
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_414e30:

            mov RSI,RBX
            mov RDI,RBP
            call .L_4125d0

            mov EBX,EAX
            jmp .L_414e08
.L_414e3f:

            call __stack_chk_fail@PLT
.L_414e44:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414e50:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_414ea6

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_414ea6:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RDX,RSP
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],16
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_414d60

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            jne .L_414efc

            add RSP,216

            ret 
.L_414efc:

            call __stack_chk_fail@PLT
.L_414f01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414f10:

            sub RSP,56
            mov R9,RDX
            mov QWORD PTR [RSP+8],RDI
            mov QWORD PTR [RSP],RSI
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            lea RSI,QWORD PTR [RSP+32]
            lea RDI,QWORD PTR [RSP+8]
            sub RSP,8
            push RCX
            mov RCX,RSI
            xor ESI,ESI
            lea R8,QWORD PTR [RSP+44]
            call .L_413a60

            pop RAX
            pop RDX
            mov ECX,DWORD PTR [RSP+28]
            test ECX,ECX
            jne .L_414f88

            mov RAX,QWORD PTR [RSP+32]
            mov EDX,4294967295
            cmp RAX,2147483647
            cmova EAX,EDX
.L_414f6e:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_414f8f

            add RSP,56
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_414f88:

            mov EAX,4294967295
            jmp .L_414f6e
.L_414f8f:

            call __stack_chk_fail@PLT
.L_414f94:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_414fa0:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_414ff1

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_414ff1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RCX,RSP
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],24
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_414f10

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            jne .L_415047

            add RSP,216

            ret 
.L_415047:

            call __stack_chk_fail@PLT
.L_41504c:
          .string "b_print.c"
.L_415056:
          .zero 1
.L_415057:
          .string "0"
.L_415059:
          .string "0x"
.L_41505c:
          .string "0123456789ABCDEF"
.L_41506d:
          .string "0123456789abcdef"
.L_41507e:
          .byte 0x3c
          .byte 0x4e
          .byte 0x55
          .byte 0x4c
          .byte 0x4c
          .byte 0x3e
          .byte 0x0
.L_415085:
          .byte 0x30
          .byte 0x31
          .byte 0x32
          .byte 0x33
          .byte 0x34
          .byte 0x35
          .byte 0x36
          .byte 0x37
          .byte 0x38
          .byte 0x39
          .byte 0x0
.L_415090:
          .string "doapr()"
.L_415098:
          .long .L_413dd0-.L_415098
          .long .L_413ba8-.L_415098
          .long .L_413bd0-.L_415098
          .long .L_413c20-.L_415098
          .long .L_413c40-.L_415098
          .long .L_413ca0-.L_415098
          .long .L_413e20-.L_415098
.L_4150b4:
          .long .L_413f43-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f30-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f1d-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f13-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f56-.L_4150b4
          .long .L_413f00-.L_4150b4
.L_4150f8:
          .long .L_414450-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_414411-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413f87-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_414c45-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_414508-.L_4150f8
          .long .L_414bc0-.L_4150f8
          .long .L_414411-.L_4150f8
          .long .L_413fdd-.L_4150f8
          .long .L_413f87-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_414bc0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_414c54-.L_4150f8
          .long .L_414831-.L_4150f8
          .long .L_41452d-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_414574-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_414831-.L_4150f8
          .long .L_413da0-.L_4150f8
          .long .L_414430-.L_4150f8
          .long .L_414831-.L_4150f8
.L_415248:
          .long .L_414450-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_414411-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413f87-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_4143d5-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_414508-.L_415248
          .long .L_41449c-.L_415248
          .long .L_414411-.L_415248
          .long .L_413fdd-.L_415248
          .long .L_413f87-.L_415248
          .long .L_413da0-.L_415248
          .long .L_41449c-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413f60-.L_415248
          .long .L_413d24-.L_415248
          .long .L_41452d-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413da0-.L_415248
          .long .L_414574-.L_415248
          .long .L_413da0-.L_415248
          .long .L_413d24-.L_415248
          .long .L_413da0-.L_415248
          .long .L_414430-.L_415248
          .long .L_413d24-.L_415248
.L_415398:
          .long .L_414450-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_414411-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413f87-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_414a33-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_414508-.L_415398
          .long .L_41449c-.L_415398
          .long .L_414411-.L_415398
          .long .L_413fdd-.L_415398
          .long .L_413f87-.L_415398
          .long .L_413da0-.L_415398
          .long .L_41449c-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413f60-.L_415398
          .long .L_413d24-.L_415398
          .long .L_41452d-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413da0-.L_415398
          .long .L_414574-.L_415398
          .long .L_413da0-.L_415398
          .long .L_413d24-.L_415398
          .long .L_413da0-.L_415398
          .long .L_414430-.L_415398
          .long .L_413d24-.L_415398
.L_4154e8:
          .long .L_414450-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_414411-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413f87-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_414ab3-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_414508-.L_4154e8
          .long .L_414aea-.L_4154e8
          .long .L_414411-.L_4154e8
          .long .L_413fdd-.L_4154e8
          .long .L_413f87-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_414aea-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_414a8b-.L_4154e8
          .long .L_414b2f-.L_4154e8
          .long .L_41452d-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_414574-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_414b2f-.L_4154e8
          .long .L_413da0-.L_4154e8
          .long .L_414430-.L_4154e8
          .long .L_414b2f-.L_4154e8
.L_415638:
          .long .L_414450-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_414411-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413f87-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_414b89-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_414508-.L_415638
          .long .L_414bc0-.L_415638
          .long .L_414411-.L_415638
          .long .L_413fdd-.L_415638
          .long .L_413f87-.L_415638
          .long .L_413da0-.L_415638
          .long .L_414bc0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_414b61-.L_415638
          .long .L_414831-.L_415638
          .long .L_41452d-.L_415638
          .long .L_413da0-.L_415638
          .long .L_413da0-.L_415638
          .long .L_414574-.L_415638
          .long .L_413da0-.L_415638
          .long .L_414831-.L_415638
          .long .L_413da0-.L_415638
          .long .L_414430-.L_415638
          .long .L_414831-.L_415638
.L_415788:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x3f
.L_415790:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            and AL,64
.L_415798:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            loopne 87423
.L_4157a0:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_4157b0:

            mov RAX,QWORD PTR [RDI]
            mov RDX,RAX
            mov ECX,EAX
            shr RDX,12
            shr ECX,24
            and EDX,4095
            xor ECX,EDX
            movabs RDX,-2912643801112034465
            movsxd RCX,ECX
            xor RCX,RAX
            mov RAX,RCX
            mov RSI,RCX
            mul RDX
            shr RDX,4
            lea RAX,QWORD PTR [RDX+RDX*8]
            lea RAX,QWORD PTR [RDX+RAX*2]
            sub RSI,RAX
            lea RDX,QWORD PTR [RSI+RSI*2]
            lea RAX,QWORD PTR [RSI+RDX*4]
            xor RAX,RCX
            ret 
.L_4157fb:

            nop
            nop
            nop
            nop
            nop
.L_415800:

            mov RAX,QWORD PTR [RDI]
            sub EAX,DWORD PTR [RSI]
            ret 
.L_415806:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415810:

            push RBX

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,554
            mov ESI,1
            mov EDI,9
            call .L_417ca0

            mov EBX,DWORD PTR [RIP+.L_6391f4]
            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,556
            mov ESI,1
            mov EDI,10
            lea EAX,DWORD PTR [RBX+1]
            mov DWORD PTR [RIP+.L_6391f4],EAX
            call .L_417ca0

            mov EAX,EBX
            pop RBX

            ret 
.L_41585a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_415860:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            sub RSP,8
.L_41586b:

            mov EDI,9
            mov ECX,375
            mov ESI,1
            call .L_417ca0

            mov RDI,QWORD PTR [RIP+.L_63b310]
            test RDI,RDI
            je .L_41589b

            call .L_41d1a0

            mov QWORD PTR [RIP+.L_63b310],0
.L_41589b:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,380
            mov ESI,1
            mov EDI,10
            add RSP,8
.L_4158b5:

            jmp .L_417ca0
.L_4158ba:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4158c0:

            push RBP
            push RBX
            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov EBP,EDI
            mov ECX,452
            mov ESI,1
            sub RSP,8
.L_4158d9:

            mov EDI,9
            call .L_417ca0

            test EBP,EBP
            mov RBX,QWORD PTR [RIP+.L_63b308]
            je .L_4158f3

            test RBX,RBX
            je .L_415928
.L_4158f3:

            test RBX,RBX
            je .L_4158ff

            add DWORD PTR [RIP+.L_63b300],1
.L_4158ff:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,462
            mov ESI,1
            mov EDI,10
            call .L_417ca0

            add RSP,8
.L_41591e:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415928:

            lea RSI,QWORD PTR [RIP+.L_41726c]
            lea RDI,QWORD PTR [RIP+.L_417272]
            mov EDX,454
            call .L_419320

            lea RSI,QWORD PTR [RIP+.L_415a10]
            lea RDI,QWORD PTR [RIP+.L_415a20]
            call .L_41d040

            mov QWORD PTR [RIP+.L_63b308],RAX
            call .L_419420

            mov RBX,QWORD PTR [RIP+.L_63b308]
            jmp .L_4158f3
.L_415968:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415970:

            push RBP
            push RBX
            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov EBP,EDI
            mov ECX,360
            mov ESI,1
            sub RSP,8
            mov EDI,9
            call .L_417ca0

            test EBP,EBP
            mov RBX,QWORD PTR [RIP+.L_63b310]
            je .L_4159a3

            test RBX,RBX
            je .L_4159d0
.L_4159a3:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,368
            mov ESI,1
            mov EDI,10
            call .L_417ca0

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4159d0:

            lea RSI,QWORD PTR [RIP+.L_41726c]
            lea RDI,QWORD PTR [RIP+.L_417289]
            mov EDX,362
            call .L_419320

            lea RSI,QWORD PTR [RIP+.L_415800]
            lea RDI,QWORD PTR [RIP+.L_4157b0]
            call .L_41d040

            mov QWORD PTR [RIP+.L_63b310],RAX
            call .L_419420

            mov RBX,QWORD PTR [RIP+.L_63b310]
            jmp .L_4159a3
.L_415a10:

            jmp .L_417930
.L_415a15:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415a20:

            sub RSP,8
            call .L_417950

            lea RDX,QWORD PTR [RAX+RAX*2]
            add RSP,8
            lea RAX,QWORD PTR [RAX+RDX*4]
            ret 
.L_415a36:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415a40:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            sub RSP,8
            mov ECX,295
            mov ESI,1
            mov EDI,9
            call .L_417ca0

            cmp QWORD PTR [RIP+.L_63b318],0
            je .L_415a90
.L_415a69:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,298
            mov ESI,1
            mov EDI,10
            add RSP,8
            jmp .L_417ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415a90:

            lea RAX,QWORD PTR [RIP+.L_62f680]
            mov QWORD PTR [RIP+.L_63b318],RAX
            jmp .L_415a69
.L_415aa0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_415aa9:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_415b10
.L_415ab5:

            xor EDI,EDI
            call QWORD PTR [RAX]

            test RAX,RAX
            mov RBX,RAX
            je .L_415b20

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,427
            mov ESI,1
            mov EDI,9
            call .L_417ca0

            mov RDI,RBX
            mov RSI,RBP
            call .L_41d410

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,429
            mov ESI,1
            mov EDI,10
            mov RBX,RAX
            call .L_417ca0
.L_415b05:

            add RSP,8
.L_415b09:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_415b10:

            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            jmp .L_415ab5
          .byte 0x66
          .byte 0x90
.L_415b20:

            xor EBX,EBX
            jmp .L_415b05
.L_415b24:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415b30:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_415b38:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_415be0
.L_415b58:

            mov EDI,1
            call QWORD PTR [RAX+40]

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_415bf8

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,517
            mov ESI,1
            mov EDI,9
            call .L_417ca0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RBX
            call .L_41d210

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov EDI,10
            mov ECX,519
            mov ESI,1
            mov RBX,RAX
            call .L_417ca0

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RSP
            call QWORD PTR [RAX+48]
.L_415bbf:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_415bfc

            add RSP,16
.L_415bd6:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415be0:

            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            jmp .L_415b58
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415bf8:

            xor EBX,EBX
            jmp .L_415bbf
.L_415bfc:

            call __stack_chk_fail@PLT
.L_415c01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415c10:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_415c19:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_415c88
.L_415c25:

            mov EDI,1
            call QWORD PTR [RAX]

            test RAX,RAX
            mov RBX,RAX
            je .L_415ca0

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,410
            mov ESI,1
            mov EDI,9
            call .L_417ca0

            mov RDI,RBX
            mov RSI,RBP
            call .L_41d210

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,412
            mov ESI,1
            mov EDI,10
            mov RBX,RAX
            call .L_417ca0
.L_415c78:

            add RSP,8
.L_415c7c:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415c88:

            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            jmp .L_415c25
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415ca0:

            xor EBX,EBX
            jmp .L_415c78
.L_415ca4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415cb0:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_415cb8:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_415d58
.L_415cd8:

            xor EDI,EDI
            call QWORD PTR [RAX+40]

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_415d70

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,499
            mov ESI,1
            mov EDI,5
            call .L_417ca0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RBX
            call .L_41d580

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov EDI,6
            mov ECX,501
            mov ESI,1
            mov RBX,RAX
            call .L_417ca0

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RSP
            call QWORD PTR [RAX+48]
.L_415d3c:

            mov RDX,QWORD PTR [RSP+8]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_415d74

            add RSP,16
.L_415d53:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415d58:

            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            jmp .L_415cd8
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415d70:

            xor EBX,EBX
            jmp .L_415d3c
.L_415d74:

            call __stack_chk_fail@PLT
.L_415d79:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415d80:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_415d89:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_415df0
.L_415d95:

            xor EDI,EDI
            call QWORD PTR [RAX]

            test RAX,RAX
            mov RBX,RAX
            je .L_415e00

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,393
            mov ESI,1
            mov EDI,5
            call .L_417ca0

            mov RDI,RBX
            mov RSI,RBP
            call .L_41d580

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,395
            mov ESI,1
            mov EDI,6
            mov RBX,RAX
            call .L_417ca0
.L_415de5:

            add RSP,8
.L_415de9:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_415df0:

            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            jmp .L_415d95
          .byte 0x66
          .byte 0x90
.L_415e00:

            xor EBX,EBX
            jmp .L_415de5
.L_415e04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415e10:

            push RBP
            push RBX
            mov RBP,RDI
            xor EBX,EBX
            sub RSP,8
.L_415e1b:

            jmp .L_415e35
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_415e20:

            mov DWORD PTR [RBP+RBX*1+336],0
            add RBX,4
            cmp RBX,64
            je .L_415e60
.L_415e35:

            mov RDI,QWORD PTR [RBP+RBX*2+208]
            test RDI,RDI
            je .L_415e20

            test BYTE PTR [RBP+RBX*1+336],1
            je .L_415e20

            call .L_418aa0

            mov QWORD PTR [RBP+RBX*2+208],0
            jmp .L_415e20
          .byte 0x90
.L_415e60:

            add RSP,8
.L_415e64:

            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_418aa0
.L_415e6e:

            nop
            nop
.L_415e70:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_415e78:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_415f60
.L_415e98:

            xor EDI,EDI
            call QWORD PTR [RAX+40]

            test RAX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_415f0e

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,535
            mov ESI,1
            mov EDI,9
            call .L_417ca0

            mov RDI,QWORD PTR [RSP]
            mov RSI,RBX
            call .L_41d410

            cmp DWORD PTR [RIP+.L_63b300],1
            mov RBX,RAX
            je .L_415f28
.L_415ed9:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,543
            mov ESI,1
            mov EDI,10
            call .L_417ca0

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RSP
            call QWORD PTR [RAX+48]

            test RBX,RBX
            je .L_415f0e

            mov RDI,RBX
            call .L_415e10
.L_415f0e:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_415f71

            add RSP,16
.L_415f22:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_415f28:

            mov RDI,QWORD PTR [RIP+.L_63b308]
            test RDI,RDI
            je .L_415ed9

            call .L_41d6e0

            test RAX,RAX
            jne .L_415ed9

            mov RDI,QWORD PTR [RIP+.L_63b308]
            call .L_41d1a0

            mov QWORD PTR [RIP+.L_63b308],0
            jmp .L_415ed9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415f60:

            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            jmp .L_415e98
.L_415f71:

            call __stack_chk_fail@PLT
.L_415f76:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415f80:

            test RDI,RDI
            je .L_415fc0

            cmp QWORD PTR [RDI],0
            je .L_415fc0

            push RBX
            lea RCX,QWORD PTR [RIP+.L_41726c]
            mov RBX,RDI
            lea RDI,QWORD PTR [RIP+.L_63b300]
            mov R8D,473
            mov EDX,1
            mov ESI,4294967295
            call .L_4180e0

            test EAX,EAX
            jle .L_415fc8

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_415fc0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_415fc8:

            mov QWORD PTR [RBX],0
            pop RBX
            ret 
.L_415fd1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_415fe0:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_415ff0

            ret 
          .byte 0x66
          .byte 0x90
.L_415ff0:

            sub RSP,8
            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            add RSP,8
            ret 
.L_416005:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416010:

            push RBP
            push RBX
            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov RBP,RDI
            mov ECX,313
            mov ESI,1
            sub RSP,8
.L_41602a:

            mov EDI,9
            xor EBX,EBX
            call .L_417ca0

            cmp QWORD PTR [RIP+.L_63b318],0
            jne .L_41604c

            mov QWORD PTR [RIP+.L_63b318],RBP
            mov EBX,1
.L_41604c:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,322
            mov ESI,1
            mov EDI,10
            call .L_417ca0

            add RSP,8
.L_41606b:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_416070:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_41607e:

            cmp QWORD PTR [RIP+.L_63b318],0
            je .L_4162bf
.L_41608c:

            cmp QWORD PTR [RIP+.L_639520],0
            je .L_4160b7

            lea RBX,QWORD PTR [RIP+.L_639520]
            nop
            nop
            nop
.L_4160a0:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RBX
            add RBX,16
            call QWORD PTR [RAX+24]

            cmp QWORD PTR [RBX],0
            jne .L_4160a0
.L_4160b7:

            cmp QWORD PTR [RIP+.L_639200],0
            je .L_4160e7

            lea RBX,QWORD PTR [RIP+.L_639200]
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4160d0:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RBX
            add RBX,16
            call QWORD PTR [RAX+24]

            cmp QWORD PTR [RBX],0
            jne .L_4160d0
.L_4160e7:

            mov RAX,QWORD PTR [RIP+.L_639460]
            test RAX,RAX
            je .L_416123

            lea RBX,QWORD PTR [RIP+.L_639460]
            nop
            nop
            nop
            nop
            nop
            nop
.L_416100:

            or RAX,33554432
            mov RDI,RBX
            add RBX,16
            mov QWORD PTR [RBX-16],RAX
            mov RAX,QWORD PTR [RIP+.L_63b318]
            call QWORD PTR [RAX+24]

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            jne .L_416100
.L_416123:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,583
            mov ESI,1
            mov EDI,5
            call .L_417ca0

            mov EDX,DWORD PTR [RIP+.L_6391f0]
            test EDX,EDX
            je .L_416230

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,589
            mov ESI,1
            mov EDI,6
            lea R14,QWORD PTR [RIP+.L_639b00]
            lea RBX,QWORD PTR [RIP+.L_63ab08]
            call .L_417ca0

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,590
            mov ESI,1
            mov EDI,9
            mov EBP,1
            lea R13,QWORD PTR [R14+31]
            call .L_417ca0

            mov EAX,DWORD PTR [RIP+.L_6391f0]
            lea R12,QWORD PTR [RIP+.L_41729d]
            test EAX,EAX
            jne .L_4161ee

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,592
            mov ESI,1
            mov EDI,10
            call .L_417ca0

            jmp .L_41624b
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4161d0:

            cmp QWORD PTR [RBX],0
            jne .L_4161d9

            mov QWORD PTR [RBX],R12
.L_4161d9:

            add RBP,1
            add RBX,16
            cmp RBP,128
            je .L_416298
.L_4161ee:

            cmp QWORD PTR [RBX],0
            mov QWORD PTR [RBX-8],RBP
            jne .L_4161d9

            mov EDI,EBP
            call strerror@PLT

            test RAX,RAX
            je .L_4161d0

            mov R15,RBP
            mov EDX,32
            mov RSI,RAX
            shl R15,5
            lea RCX,QWORD PTR [R14+R15*1]
            mov RDI,RCX
            call strncpy@PLT

            mov BYTE PTR [R15+R13*1],0
            mov QWORD PTR [RBX],RAX
            jmp .L_4161d9
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416230:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,585
            mov ESI,1
            mov EDI,6
            call .L_417ca0
.L_41624b:

            mov RAX,QWORD PTR [RIP+.L_63ab00]
            lea RBX,QWORD PTR [RIP+.L_63ab00]
            test RAX,RAX
            je .L_416283

            nop
            nop
.L_416260:

            or RAX,33554432
            mov RDI,RBX
            add RBX,16
            mov QWORD PTR [RBX-16],RAX
            mov RAX,QWORD PTR [RIP+.L_63b318]
            call QWORD PTR [RAX+24]

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            jne .L_416260
.L_416283:

            add RSP,8
.L_416287:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416298:

            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,620
            mov ESI,1
            mov EDI,10
            mov DWORD PTR [RIP+.L_6391f0],0
            call .L_417ca0

            jmp .L_41624b
.L_4162bf:

            call .L_415a40

            jmp .L_41608c
.L_4162c9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4162d0:

            push R12
            push RBP
            mov EBP,EDI
            push RBX
            mov RBX,RSI
            call .L_416070

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            je .L_416313

            movzx R12D,BPL
            shl R12,24
            nop
            nop
.L_4162f0:

            test EBP,EBP
            je .L_4162fa

            or RAX,R12
            mov QWORD PTR [RBX],RAX
.L_4162fa:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RBX
            add RBX,16
            call QWORD PTR [RAX+24]

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            jne .L_4162f0
.L_416313:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_416318:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416320:

            mov RAX,QWORD PTR [RSI]
            test RAX,RAX
            je .L_416370

            push R12
            movzx R12D,DIL
            push RBP
            shl R12,24
            push RBX
            mov EBP,EDI
            mov RBX,RSI
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416340:

            test EBP,EBP
            je .L_41634a

            or RAX,R12
            mov QWORD PTR [RBX],RAX
.L_41634a:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RBX
            add RBX,16
            call QWORD PTR [RAX+32]

            mov RAX,QWORD PTR [RBX]
            test RAX,RAX
            jne .L_416340

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416370:

            ret 
.L_416372:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416380:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_416390

            jmp QWORD PTR [RAX+8]
          .byte 0x90
.L_416390:

            sub RSP,8
            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RAX,QWORD PTR [RAX+8]
            add RSP,8
            jmp RAX
.L_4163aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4163b0:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_4163c8

            mov RAX,QWORD PTR [RAX]
            xor EDI,EDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4163c8:

            sub RSP,8
            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            xor EDI,EDI
            mov RAX,QWORD PTR [RAX]
            add RSP,8
            jmp RAX
.L_4163e3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4163f0:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_416408

            mov RAX,QWORD PTR [RAX+40]
            xor EDI,EDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416408:

            sub RSP,8
            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            xor EDI,EDI
            mov RAX,QWORD PTR [RAX+40]
            add RSP,8
            jmp RAX
.L_416424:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416430:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_416440

            jmp QWORD PTR [RAX+48]

            nop
.L_416440:

            sub RSP,24
            mov QWORD PTR [RSP+8],RDI
            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RAX+48]
            add RSP,24
            jmp RAX
.L_416464:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416470:

            sub RSP,56
.L_416474:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_4164c8
.L_416490:

            shr EDI,24
            shl RDI,24
            mov QWORD PTR [RSP+16],RDI
            lea RDI,QWORD PTR [RSP+16]
            call QWORD PTR [RAX+16]

            test RAX,RAX
            je .L_4164e0

            mov RAX,QWORD PTR [RAX+8]
.L_4164ad:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_4164e4

            add RSP,56
.L_4164c1:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4164c8:

            mov QWORD PTR [RSP+8],RDI
            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,QWORD PTR [RSP+8]
            jmp .L_416490
.L_4164e0:

            xor EAX,EAX
            jmp .L_4164ad
.L_4164e4:

            call __stack_chk_fail@PLT
.L_4164e9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4164f0:

            sub RSP,56
.L_4164f4:

            mov RDX,QWORD PTR [RIP+.L_63b318]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_416550
.L_416510:

            mov EAX,EDI
            and EDI,16773120
            shr EAX,24
            shl RAX,24
            or RDI,RAX
            mov QWORD PTR [RSP+16],RDI
            lea RDI,QWORD PTR [RSP+16]
            call QWORD PTR [RDX+16]

            test RAX,RAX
            je .L_416570

            mov RAX,QWORD PTR [RAX+8]
.L_416538:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_416574

            add RSP,56
.L_41654c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416550:

            mov QWORD PTR [RSP+8],RDI
            call .L_415a40

            mov RDX,QWORD PTR [RIP+.L_63b318]
            mov RDI,QWORD PTR [RSP+8]
            jmp .L_416510
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416570:

            xor EAX,EAX
            jmp .L_416538
.L_416574:

            call __stack_chk_fail@PLT
.L_416579:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416580:

            push RBP
            push RBX
            sub RSP,56
.L_416586:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_416600
.L_4165a2:

            mov RBP,RDI
            shr EDI,24
            lea RBX,QWORD PTR [RSP+16]
            and EBP,4095
            shl RDI,24
            or RDI,RBP
            mov QWORD PTR [RSP+16],RDI
            mov RDI,RBX
            call QWORD PTR [RAX+16]

            test RAX,RAX
            jne .L_4165e1

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov QWORD PTR [RSP+16],RBP
            mov RDI,RBX
            call QWORD PTR [RAX+16]

            test RAX,RAX
            je .L_416620
.L_4165e1:

            mov RAX,QWORD PTR [RAX+8]
.L_4165e5:

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_416624

            add RSP,56
.L_4165f9:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416600:

            mov QWORD PTR [RSP+8],RDI
            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,QWORD PTR [RSP+8]
            jmp .L_4165a2
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416620:

            xor EAX,EAX
            jmp .L_4165e5
.L_416624:

            call __stack_chk_fail@PLT
.L_416629:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416630:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov R13,RDX
            mov RBX,RSI
            sub RSP,216
.L_41664a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+200],RAX
            xor EAX,EAX
            call .L_416470

            mov RDI,R12
            mov RBP,RAX
            call .L_4164f0

            mov RDI,R12
            mov R15,RAX
            call .L_416580

            test RBP,RBP
            mov R14,RAX
            je .L_416770

            test R15,R15
            je .L_416798
.L_41668d:

            test R14,R14
            je .L_416740
.L_416696:

            test RBP,RBP
            mov RAX,RSP
            lea RDX,QWORD PTR [RIP+.L_4172b8]
            cmove RBP,RAX
            sub RSP,8
.L_4166ab:

            mov RCX,R12
            push R14
            mov RSI,R13
            mov R9,R15
            mov R8,RBP
            mov RDI,RBX
            xor EAX,EAX
            call .L_414fa0

            mov RDI,RBX
            call strlen@PLT

            cmp R13,4
            lea RDX,QWORD PTR [R13-1]
            pop RCX
            pop RSI
            jbe .L_4166dc

            cmp RAX,RDX
            je .L_416708
.L_4166dc:

            mov RAX,QWORD PTR [RSP+200]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4167c5

            add RSP,216
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_416708:

            lea RBP,QWORD PTR [RBX+R13*1-5]
            lea R12,QWORD PTR [RBX+RDX*1]
.L_416711:

            mov ESI,58
            mov RDI,RBX
            call strchr@PLT

            test RAX,RAX
            je .L_416728

            cmp RAX,RBP
            jbe .L_41672f
.L_416728:

            mov BYTE PTR [RBP],58
            mov RAX,RBP
.L_41672f:

            add RBP,1
            lea RBX,QWORD PTR [RAX+1]
            cmp RBP,R12
            jne .L_416711

            jmp .L_4166dc
          .byte 0x66
          .byte 0x90
.L_416740:

            lea R14,QWORD PTR [RSP+128]
            mov RCX,R12
            lea RDX,QWORD PTR [RIP+.L_4172cd]
            and ECX,4095
            mov ESI,64
            xor EAX,EAX
            mov RDI,R14
            call .L_414fa0

            jmp .L_416696

            nop
            nop
            nop
            nop
.L_416770:

            mov ECX,R12D
            lea RDX,QWORD PTR [RIP+.L_4172a5]
            xor EAX,EAX
            shr ECX,24
            mov RDI,RSP
            mov ESI,64
            call .L_414fa0

            test R15,R15
            jne .L_41668d

            nop
            nop
            nop
.L_416798:

            mov RCX,R12
            lea R15,QWORD PTR [RSP+64]
            lea RDX,QWORD PTR [RIP+.L_4172ae]
            shr RCX,12
            mov ESI,64
            xor EAX,EAX
            and ECX,4095
            mov RDI,R15
            call .L_414fa0

            jmp .L_41668d
.L_4167c5:

            call __stack_chk_fail@PLT
.L_4167ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4167d0:

            lea RAX,QWORD PTR [RIP+.L_639a20]
            push RBX
            test RSI,RSI
            mov RBX,RSI
            mov EDX,256
            cmove RBX,RAX
            mov RSI,RBX
            call .L_416630

            mov RAX,RBX
            pop RBX
            ret 
.L_4167f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416800:

            push RBX
            sub RSP,608
.L_416808:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+600],RAX
            xor EAX,EAX
            test RDI,RDI
            mov RBX,RSP
            je .L_416860

            mov RSI,RDI
            mov RDI,RBX
            call .L_417940

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_416874
.L_41683a:

            mov RDI,RBX
            call QWORD PTR [RAX+72]

            mov RAX,QWORD PTR [RSP+600]
            xor RAX,QWORD PTR FS:[40]
            jne .L_416882

            add RSP,608
.L_41685a:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416860:

            mov RDI,RBX
            call .L_4178f0

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            jne .L_41683a
.L_416874:

            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            jmp .L_41683a
.L_416882:

            call __stack_chk_fail@PLT
.L_416887:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416890:

            xor EDI,EDI
            jmp .L_416800
.L_416897:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4168a0:

            push RBP
            push RBX
            sub RSP,632
.L_4168a9:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+616],RAX
            xor EAX,EAX
            cmp QWORD PTR [RIP+.L_63b318],0
            je .L_4169c0
.L_4168ca:

            lea RBX,QWORD PTR [RSP+16]
            mov RBP,RSP
            mov RDI,RBP
            call .L_4178f0

            mov RDI,RBX
            mov RSI,RBP
            call .L_417940

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RBX
            call QWORD PTR [RAX+56]

            test RAX,RAX
            mov RBX,RAX
            je .L_416920
.L_4168fa:

            mov RCX,QWORD PTR [RSP+616]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_4169f6

            add RSP,632
.L_41691b:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_416920:

            lea RSI,QWORD PTR [RIP+.L_41726c]
            mov EDX,1027
            mov EDI,600
            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            je .L_4169d0

            mov RDI,RAX
            mov RSI,RBP
            call .L_417940

            mov QWORD PTR [RBX+592],0
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_416960:

            mov QWORD PTR [RBX+RAX*2+208],0
            mov DWORD PTR [RBX+RAX*1+336],0
            add RAX,4
            cmp RAX,64
            jne .L_416960

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RBX
            call QWORD PTR [RAX+64]

            mov RBP,RAX
            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RDI,RBX
            call QWORD PTR [RAX+56]

            cmp RAX,RBX
            je .L_4169e0

            mov RDI,RBX
            lea RBX,QWORD PTR [RIP+.L_6397c0]
            call .L_415e10

            jmp .L_4168fa
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4169c0:

            call .L_415a40

            jmp .L_4168ca
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4169d0:

            lea RBX,QWORD PTR [RIP+.L_6397c0]
            jmp .L_4168fa
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4169e0:

            test RBP,RBP
            je .L_4168fa

            mov RDI,RBP
            call .L_415e10

            jmp .L_4168fa
.L_4169f6:

            call __stack_chk_fail@PLT
.L_4169fb:

            nop
            nop
            nop
            nop
            nop
.L_416a00:

            push R14
            push R13
            mov R14D,ESI
            push R12
            push RBP
            mov R12,RCX
            push RBX
            mov EBP,EDX
            mov EBX,EDI
            mov R13D,R8D
            sub RSP,16
.L_416a19:

            call .L_4168a0

            mov EDI,DWORD PTR [RAX+592]
            lea R9D,DWORD PTR [RDI+1]
            mov EDX,R9D
            sar EDX,31
            shr EDX,28
            add R9D,EDX
            and R9D,15
            sub R9D,EDX
            cmp R9D,DWORD PTR [RAX+596]
            mov DWORD PTR [RAX+592],R9D
            jne .L_416a64

            lea EDX,DWORD PTR [R9+1]
            mov ECX,EDX
            sar ECX,31
            shr ECX,28
            add EDX,ECX
            and EDX,15
            sub EDX,ECX
            mov DWORD PTR [RAX+596],EDX
.L_416a64:

            mov ESI,R14D
            mov EDX,EBP
            movsxd R9,R9D
            and ESI,4095
            and EDX,4095
            movzx EBX,BL
            shl RSI,12
            lea R8,QWORD PTR [RAX+R9*8]
            lea RCX,QWORD PTR [RAX+R9*4]
            or RDX,RSI
            shl RBX,24
            or RDX,RBX
            mov DWORD PTR [RCX+16],0
            mov QWORD PTR [R8+400],R12
            mov QWORD PTR [R8+80],RDX
            mov DWORD PTR [RCX+528],R13D
            mov RDI,QWORD PTR [R8+208]
            test RDI,RDI
            je .L_416abf

            test BYTE PTR [RCX+336],1
            jne .L_416ae0
.L_416abf:

            mov DWORD PTR [RAX+R9*4+336],0
            add RSP,16
.L_416acf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416ae0:

            mov QWORD PTR [RSP+8],RAX
            call .L_418aa0

            mov RAX,QWORD PTR [RSP+8]
            movsxd R9,DWORD PTR [RAX+592]
            mov QWORD PTR [RAX+R9*8+208],0
            jmp .L_416abf
.L_416b04:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416b10:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_416b1a:

            call .L_4168a0

            lea RBP,QWORD PTR [RAX+80]
            mov R13,RAX
            lea RBX,QWORD PTR [RAX+16]
            mov R12,RBP
            jmp .L_416b5c
          .byte 0x90
.L_416b30:

            mov DWORD PTR [RBX+320],0
            mov QWORD PTR [RBP+320],0
            add RBX,4
            mov DWORD PTR [RBX+508],4294967295
            add RBP,8
            cmp RBX,R12
            je .L_416b98
.L_416b5c:

            mov RDI,QWORD PTR [RBP+128]
            mov DWORD PTR [RBX],0
            mov QWORD PTR [RBP],0
            test RDI,RDI
            je .L_416b30

            test BYTE PTR [RBX+320],1
            je .L_416b30

            call .L_418aa0

            mov QWORD PTR [RBP+128],0
            jmp .L_416b30
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416b98:

            mov QWORD PTR [R13+592],0
            add RSP,8
.L_416ba7:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_416bae:

            nop
            nop
.L_416bb0:

            push R15
            push R14
            mov R14D,ESI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov EBP,EDI
            mov R15,RCX
            mov R12,R8
            sub RSP,24
.L_416bcc:

            mov QWORD PTR [RSP],R9
            call .L_4168a0

            test EBP,R14D
            mov R9,QWORD PTR [RSP]
            je .L_416c30

            test R13,R13
            je .L_416bee

            lea RAX,QWORD PTR [RIP+.L_4172d9]
            mov QWORD PTR [R13],RAX
.L_416bee:

            test R15,R15
            je .L_416bfa

            mov DWORD PTR [R15],0
.L_416bfa:

            test R12,R12
            je .L_416c0a

            lea RAX,QWORD PTR [RIP+.L_4172d9]
            mov QWORD PTR [R12],RAX
.L_416c0a:

            test R9,R9
            mov EAX,68
            je .L_416c1b
.L_416c14:

            mov DWORD PTR [R9],0
.L_416c1b:

            add RSP,24
.L_416c1f:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_416c30:

            mov EDX,DWORD PTR [RAX+596]
            mov EDI,DWORD PTR [RAX+592]
            mov RBX,RAX
            xor EAX,EAX
            cmp EDX,EDI
            je .L_416c1b

            test R14D,R14D
            je .L_416cd0

            movsxd RDX,EDI
            test EBP,EBP
            lea R14,QWORD PTR [RBX+RDX*8]
            mov RAX,QWORD PTR [R14+80]
            jne .L_416cc0
.L_416c5d:

            test R13,R13
            je .L_416c85

            test R15,R15
            je .L_416c85

            mov RCX,QWORD PTR [R14+400]
            test RCX,RCX
            je .L_416d70

            mov QWORD PTR [R13],RCX
            mov ECX,DWORD PTR [RBX+RDX*4+528]
            mov DWORD PTR [R15],ECX
.L_416c85:

            test R12,R12
            je .L_416d20

            mov RCX,QWORD PTR [R14+208]
            test RCX,RCX
            je .L_416d00

            test R9,R9
            mov QWORD PTR [R12],RCX
            je .L_416c1b

            mov EDX,DWORD PTR [RBX+RDX*4+336]
            mov DWORD PTR [R9],EDX
            add RSP,24
.L_416cb5:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_416cc0:

            mov DWORD PTR [RBX+596],EDI
            mov QWORD PTR [R14+80],0
            jmp .L_416c5d
.L_416cd0:

            lea EDI,DWORD PTR [RDX+1]
            mov EAX,EDI
            sar EAX,31
            shr EAX,28
            add EDI,EAX
            and EDI,15
            sub EDI,EAX
            test EBP,EBP
            movsxd RDX,EDI
            lea R14,QWORD PTR [RBX+RDX*8]
            mov RAX,QWORD PTR [R14+80]
            je .L_416c5d

            jmp .L_416cc0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416d00:

            lea RSI,QWORD PTR [RIP+.L_4172d9]
            test R9,R9
            mov QWORD PTR [R12],RSI
            jne .L_416c14

            jmp .L_416c1b
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_416d20:

            test EBP,EBP
            je .L_416c1b

            mov RDI,QWORD PTR [R14+208]
            test RDI,RDI
            je .L_416d60

            test BYTE PTR [RBX+RDX*4+336],1
            je .L_416d60

            mov QWORD PTR [RSP+8],RDX
            mov QWORD PTR [RSP],RAX
            call .L_418aa0

            mov RDX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSP]
            mov QWORD PTR [R14+208],0
.L_416d60:

            mov DWORD PTR [RBX+RDX*4+336],0
            jmp .L_416c1b
.L_416d70:

            lea RSI,QWORD PTR [RIP+.L_4172da]
            mov QWORD PTR [R13],RSI
            mov DWORD PTR [R15],0
            jmp .L_416c85
.L_416d87:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416d90:

            xor R9D,R9D
            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            xor ESI,ESI
            mov EDI,1
            jmp .L_416bb0
.L_416da6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416db0:

            mov RDX,RDI
            mov RCX,RSI
            xor R9D,R9D
            xor R8D,R8D
            xor ESI,ESI
            mov EDI,1
            jmp .L_416bb0
.L_416dc8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416dd0:

            mov R8,RDX
            mov R9,RCX
            mov RDX,RDI
            mov RCX,RSI
            mov EDI,1
            xor ESI,ESI
            jmp .L_416bb0
.L_416de8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416df0:

            xor R9D,R9D
            xor R8D,R8D
            xor ECX,ECX
            xor EDX,EDX
            xor ESI,ESI
            xor EDI,EDI
            jmp .L_416bb0
.L_416e03:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416e10:

            mov RDX,RDI
            mov RCX,RSI
            xor R9D,R9D
            xor R8D,R8D
            xor ESI,ESI
            xor EDI,EDI
            jmp .L_416bb0
.L_416e25:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416e30:

            mov R8,RDX
            mov R9,RCX
            mov RDX,RDI
            mov RCX,RSI
            xor EDI,EDI
            xor ESI,ESI
            jmp .L_416bb0
.L_416e45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416e50:

            mov RDX,RDI
            mov RCX,RSI
            xor R9D,R9D
            xor R8D,R8D
            mov ESI,1
            xor EDI,EDI
            jmp .L_416bb0
.L_416e68:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416e70:

            mov R8,RDX
            mov R9,RCX
            mov RDX,RDI
            mov RCX,RSI
            xor EDI,EDI
            mov ESI,1
            jmp .L_416bb0
.L_416e88:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416e90:

            sub RSP,8
            call .L_4168a0

            mov RCX,RAX
            movsxd RDX,DWORD PTR [RAX+592]
            xor EAX,EAX
            cmp DWORD PTR [RCX+596],EDX
            je .L_416eb2

            mov RAX,QWORD PTR [RCX+RDX*8+80]
.L_416eb2:

            add RSP,8
            ret 
.L_416eb7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416ec0:

            mov RAX,QWORD PTR [RIP+.L_63b318]
            test RAX,RAX
            je .L_416ed0

            jmp QWORD PTR [RAX+80]
          .byte 0x90
.L_416ed0:

            sub RSP,8
            call .L_415a40

            mov RAX,QWORD PTR [RIP+.L_63b318]
            mov RAX,QWORD PTR [RAX+80]
            add RSP,8
            jmp RAX
.L_416eea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_416ef0:

            push R13
            push R12
            mov R13D,ESI
            push RBP
            push RBX
            mov R12,RDI
            sub RSP,24
.L_416f00:

            call .L_4168a0

            mov EDX,DWORD PTR [RAX+592]
            mov ECX,15
            test EDX,EDX
            cmove EDX,ECX
            movsxd RBX,EDX
            lea RBP,QWORD PTR [RAX+RBX*8]
            mov RDI,QWORD PTR [RBP+208]
            test RDI,RDI
            je .L_416f32

            test BYTE PTR [RAX+RBX*4+336],1
            jne .L_416f50
.L_416f32:

            mov QWORD PTR [RBP+208],R12
            mov DWORD PTR [RAX+RBX*4+336],R13D
            add RSP,24
.L_416f45:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_416f50:

            mov QWORD PTR [RSP+8],RAX
            call .L_418aa0

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_416f32
.L_416f61:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_416f70:

            push R15
            push R14
            mov EDX,1089
            push R13
            push R12
            mov R14D,EDI
            push RBP
            push RBX
            mov EDI,81
            sub RSP,24
.L_416f8b:

            mov QWORD PTR [RSP+8],RSI
            lea RSI,QWORD PTR [RIP+.L_41726c]
            call .L_418820

            test RAX,RAX
            je .L_417048

            test R14D,R14D
            mov R12,RAX
            mov BYTE PTR [RAX],0
            jle .L_417029

            mov R13D,80
            xor EBP,EBP
            xor EBX,EBX
.L_416fba:

            mov RCX,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RCX]
            cmp EDX,47
            ja .L_417076

            mov EAX,EDX
            add RAX,QWORD PTR [RCX+16]
            add EDX,8
            mov DWORD PTR [RCX],EDX
.L_416fd5:

            mov R15,QWORD PTR [RAX]
            test R15,R15
            je .L_417021

            mov RDI,R15
            call strlen@PLT

            add EBP,EAX
            cmp EBP,R13D
            jle .L_41700f

            lea ESI,DWORD PTR [RBP+21]
            lea RDX,QWORD PTR [RIP+.L_41726c]
            mov ECX,1102
            mov RDI,R12
            lea R13D,DWORD PTR [RBP+20]
            call .L_418920

            test RAX,RAX
            je .L_417060

            mov R12,RAX
.L_41700f:

            movsxd RDX,R13D
            mov RSI,R15
            mov RDI,R12
            add RDX,1
            call .L_41c790
.L_417021:

            add EBX,1
            cmp R14D,EBX
            jne .L_416fba
.L_417029:

            add RSP,24
.L_41702d:

            mov RDI,R12
            mov ESI,3
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_416ef0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417048:

            add RSP,24
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417060:

            add RSP,24
            mov RDI,R12
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            jmp .L_418aa0
.L_417076:

            mov RCX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RCX+8]
            lea RDX,QWORD PTR [RAX+8]
            mov QWORD PTR [RCX+8],RDX
            jmp .L_416fd5
.L_41708c:

            nop
            nop
            nop
            nop
.L_417090:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_4170eb

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_4170eb:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RSI,RSP
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],8
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call .L_416f70

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_417141

            add RSP,216

            ret 
.L_417141:

            call __stack_chk_fail@PLT
.L_417146:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417150:

            sub RSP,8
            call .L_4168a0

            mov RCX,RAX
            movsxd RDX,DWORD PTR [RAX+592]
            xor EAX,EAX
            cmp DWORD PTR [RCX+596],EDX
            je .L_417177

            or DWORD PTR [RCX+RDX*4+16],1
            mov EAX,1
.L_417177:

            add RSP,8
            ret 
.L_41717c:

            nop
            nop
            nop
            nop
.L_417180:

            push RBX
.L_417181:

            call .L_4168a0

            mov RBX,RAX
            mov EDX,DWORD PTR [RAX+592]
            mov R8D,DWORD PTR [RAX+596]
            jmp .L_4171d6
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4171a0:

            lea RAX,QWORD PTR [RBX+RCX*4]
            sub EDX,1
            cmp EDX,-1
            mov DWORD PTR [RAX+336],0
            mov QWORD PTR [RBX+RCX*8+400],0
            mov DWORD PTR [RAX+528],4294967295
            mov DWORD PTR [RBX+592],EDX
            je .L_417258
.L_4171d6:

            cmp R8D,EDX
            je .L_417250

            movsxd RCX,EDX
            lea RSI,QWORD PTR [RBX+RCX*4]
            mov EDI,DWORD PTR [RSI+16]
            mov EAX,EDI
            and EAX,1
            jne .L_417240

            lea RAX,QWORD PTR [RBX+RCX*8]
            mov DWORD PTR [RSI+16],0
            mov RDI,QWORD PTR [RAX+208]
            mov QWORD PTR [RAX+80],0
            test RDI,RDI
            je .L_4171a0

            test BYTE PTR [RSI+336],1
            je .L_4171a0

            call .L_418aa0

            movsxd RCX,DWORD PTR [RBX+592]
            mov R8D,DWORD PTR [RBX+596]
            mov RDX,RCX
            mov QWORD PTR [RBX+RCX*8+208],0
            jmp .L_4171a0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417240:

            and EDI,4294967294
            mov DWORD PTR [RBX+RCX*4+16],EDI
            pop RBX
.L_417248:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417250:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417258:

            mov DWORD PTR [RBX+592],15
            mov EDX,15
            jmp .L_4171d6
.L_41726c:
          .string "err.c"
.L_417272:
          .string "int_thread_get (err.c)"
.L_417289:
          .string "int_err_get (err.c)"
.L_41729d:
          .string "unknown"
.L_4172a5:
          .string "lib(%lu)"
.L_4172ae:
          .string "func(%lu)"
.L_4172b8:
          .string "error:%08lX:%s:%s:%s"
.L_4172cd:
          .string "reason(%lu)"
.L_4172d9:
          .zero 1
.L_4172da:
          .string "NA"
.L_4172dd:
          .string "system lib"
.L_4172e8:
          .string "BN lib"
.L_4172ef:
          .string "RSA lib"
.L_4172f7:
          .string "DH lib"
.L_4172fe:
          .string "EVP lib"
.L_417306:
          .string "BUF lib"
.L_41730e:
          .string "OBJ lib"
.L_417316:
          .string "PEM lib"
.L_41731e:
          .string "DSA lib"
.L_417326:
          .string "X509 lib"
.L_41732f:
          .string "ASN1 lib"
.L_417338:
          .string "CONF lib"
.L_417341:
          .string "CRYPTO lib"
.L_41734c:
          .string "EC lib"
.L_417353:
          .string "SSL lib"
.L_41735b:
          .string "BIO lib"
.L_417363:
          .string "PKCS7 lib"
.L_41736d:
          .string "X509V3 lib"
.L_417378:
          .string "PKCS12 lib"
.L_417383:
          .string "RAND lib"
.L_41738c:
          .string "DSO lib"
.L_417394:
          .string "ENGINE lib"
.L_41739f:
          .string "OCSP lib"
.L_4173a8:
          .string "TS lib"
.L_4173af:
          .string "nested asn1 error"
.L_4173c1:
          .string "bad asn1 object header"
.L_4173d8:
          .string "bad get asn1 object call"
.L_4173f1:
          .string "expecting an asn1 sequence"
.L_41740c:
          .string "asn1 length mismatch"
.L_417421:
          .string "missing asn1 eos"
.L_417432:
          .string "fatal"
.L_417438:
          .string "malloc failure"
.L_417447:
          .string "passed a null parameter"
.L_41745f:
          .string "internal error"
.L_41746e:
          .string "fopen"
.L_417474:
          .string "connect"
.L_41747c:
          .string "getservbyname"
.L_41748a:
          .string "socket"
.L_417491:
          .string "ioctlsocket"
.L_41749d:
          .string "bind"
.L_4174a2:
          .string "listen"
.L_4174a9:
          .string "accept"
.L_4174b0:

            outsd DX,DWORD PTR [RSI]
            jo .L_417518

            outsb DX,BYTE PTR [RSI]
            imul ESI,DWORD PTR FS:[RDX],1634038374
            add BYTE PTR FS:[RBP+110],DH
            imul EBP,DWORD PTR [RSI+111],119
            outsb DX,BYTE PTR [RSI]
            and BYTE PTR [RCX+RBP*2+98],CH
            jb .L_41752c
          .byte 0x72
          .byte 0x79
          .byte 0x0
.L_4174ce:
          .string "system library"
.L_4174dd:
          .string "bignum routines"
.L_4174ed:
          .string "rsa routines"
.L_4174fa:
          .string "Diffie-Hellman routines"
.L_417512:
          .byte 0x64
          .byte 0x69
          .byte 0x67
          .byte 0x69
          .byte 0x74
          .byte 0x61
.L_417518:

            insb BYTE PTR [RDI],DX
            and BYTE PTR [RBP+110],AH
          .byte 0x76
          .byte 0x65

            insb BYTE PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
          .byte 0x70
          .byte 0x65
          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x73
          .byte 0x0
.L_41752c:

            insd DWORD PTR [RDI],DX
            insd DWORD PTR [RDI],DX
            outsd DX,DWORD PTR [RSI]
            jb .L_4175ab

            and BYTE PTR [RDX+117],AH
            jb .L_41755a

            jb .L_4175ab

            jne .L_4175b2
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x73
          .byte 0x0
.L_417543:
          .byte 0x6f
          .byte 0x62
          .byte 0x6a
          .byte 0x65
          .byte 0x63
          .byte 0x74
          .byte 0x20
          .byte 0x69
          .byte 0x64
          .byte 0x65
          .byte 0x6e
          .byte 0x74
          .byte 0x69
          .byte 0x66
          .byte 0x69
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74
          .byte 0x69
.L_41755a:

            outsb DX,BYTE PTR [RSI]
            jae .L_41755e
.L_41755e:

            push RAX
            and BYTE PTR [R10+111],R14B
            jne .L_4175da
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x73
          .byte 0x0
.L_41756b:
          .string "dsa routines"
.L_417578:
          .string "x509 certificate routines"
# WARNING: found overlapping blocks at address 17321
# WARNING: found overlapping blocks at address 1732b
.L_417592:
          .string "asn1 encoding routines"
.L_4175a9:
          .byte 0x63
          .byte 0x6f
.L_4175ab:

            outsb DX,BYTE PTR [RSI]
            imul SP,WORD PTR [RDI+117],24946
.L_4175b2:

            je .L_41761d
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x66
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x73
          .byte 0x0
.L_4175c5:
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x6d
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x6c
          .byte 0x69
          .byte 0x62
          .byte 0x63
          .byte 0x72
          .byte 0x79
          .byte 0x70
          .byte 0x74
          .byte 0x6f
          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74
.L_4175da:

            imul EBP,DWORD PTR [RSI+101],1818558579
            insb BYTE PTR [RDI],DX
            imul ESI,DWORD PTR [RAX+116],1663066985
            jne .L_41765d

            jbe .L_417652
          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74

            imul EBP,DWORD PTR [RSI+101],1397948531
            and BYTE PTR [RDX+111],R14B
            jne .L_417673
# WARNING: found overlapping blocks at address 17397
.set .L_4175f7, . - 8


            imul EBP,DWORD PTR [RSI+101],1229062259
            and BYTE PTR [R10+111],R14B
            jne .L_417680
# WARNING: found overlapping blocks at address 173a4
.set .L_417604, . - 8

          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x73
          .byte 0x0
.L_417611:
          .byte 0x50
          .byte 0x4b
          .byte 0x43
          .byte 0x53
          .byte 0x37
          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74
          .byte 0x69
          .byte 0x6e
.L_41761d:

            jae .L_417620
.L_417620:

            pop RAX
            xor EAX,1444952368
            xor ESP,DWORD PTR [RAX]
            jb .L_417699

            jne .L_4176a0
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x73
          .byte 0x0
.L_417631:
          .string "PKCS12 routines"
.L_417641:
          .byte 0x72
          .byte 0x61
          .byte 0x6e
          .byte 0x64
          .byte 0x6f
          .byte 0x6d
          .byte 0x20
          .byte 0x6e
          .byte 0x75
          .byte 0x6d
          .byte 0x62
          .byte 0x65
          .byte 0x72
          .byte 0x20
          .byte 0x67
          .byte 0x65
          .byte 0x6e
.L_417652:

            jb .L_4176b6
          .byte 0x74
          .byte 0x6f
          .byte 0x72
          .byte 0x0
.L_417659:
          .byte 0x44
          .byte 0x53
          .byte 0x4f
          .byte 0x20
.L_41765d:

            jae .L_4176d4
          .byte 0x70
          .byte 0x70
          .byte 0x6f
          .byte 0x72
          .byte 0x74
          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x73
          .byte 0x0
.L_41766e:

            je .L_4176d9
          .byte 0x6d
          .byte 0x65
          .byte 0x20
.L_417673:

            jae .L_4176e9
          .byte 0x61
          .byte 0x6d
          .byte 0x70
          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x65
.L_417680:

            jae .L_417682
.L_417682:

            outsb DX,BYTE PTR GS:[RSI]
            imul EBP,DWORD PTR [ESI+101],1970237984
            je .L_4176f7

            outsb DX,BYTE PTR [RSI]
            jae .L_417692
.L_417692:

            push R11
            push RAX
            and BYTE PTR [RDX+111],DH
.L_417699:

            jne .L_41770f

            imul EBP,DWORD PTR [RSI+101],1229324403
            push RAX
            push RBX
# WARNING: found overlapping blocks at address 17440
.set .L_4176a0, . - 4

          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x73
          .byte 0x0
.L_4176ae:
          .byte 0x43
          .byte 0x4d
          .byte 0x53
          .byte 0x20
          .byte 0x72
          .byte 0x6f
          .byte 0x75
          .byte 0x74
.L_4176b6:

            imul EBP,DWORD PTR [RSI+101],1296564339
            and BYTE PTR [R10+111],SIL
          .byte 0x75
          .byte 0x74
          .byte 0x69
          .byte 0x6e
          .byte 0x65
          .byte 0x73
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4176d0:
          .byte 0x63
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
.L_4176d4:

            and BYTE PTR FS:[RCX+32],AH
.L_4176d9:

            jne .L_41774a
          .byte 0x63
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x79
          .byte 0x6f
          .byte 0x75
          .byte 0x20

            jae .L_417750

            outsd DX,DWORD PTR [RSI]
.L_4176e9:

            jne .L_417757
          .byte 0x64
          .byte 0x20
          .byte 0x6e
          .byte 0x6f
          .byte 0x74
          .byte 0x20
          .byte 0x63
          .byte 0x61
          .byte 0x6c
          .byte 0x6c
          .byte 0x0
          .byte 0x0
.L_4176f7:

            add BYTE PTR [RBX+97],AH
            insb BYTE PTR [RDI],DX
            insb BYTE PTR [RDI],DX
            and BYTE PTR FS:[RCX+32],AH
            jne .L_417772
          .byte 0x63
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x74
          .byte 0x68
          .byte 0x61
          .byte 0x74
          .byte 0x20
.L_41770f:

            ja .L_417772
          .byte 0x73
          .byte 0x20
          .byte 0x64
          .byte 0x69
          .byte 0x73
          .byte 0x61
          .byte 0x62
          .byte 0x6c
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x61
          .byte 0x74
          .byte 0x20
          .byte 0x63
          .byte 0x6f
          .byte 0x6d
          .byte 0x70
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x2d
          .byte 0x74
          .byte 0x69
          .byte 0x6d
          .byte 0x65
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417730:

            push RBX
            sub RSP,16
            cmp QWORD PTR [RIP+.L_63b368],0
            je .L_417790
.L_41773f:

            call .L_41c760

            test RAX,RAX
            mov RBX,RAX
.L_41774a:

            je .L_4177d8
.L_417750:

            mov RDI,QWORD PTR [RIP+.L_63b368]
.L_417757:

            mov RSI,RAX
            call .L_41cb00
          .byte 0x85
          .byte 0xc0
          .byte 0x74
          .byte 0xd

            add RSP,16
            add EAX,41
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
          .byte 0x48
          .byte 0x89
.L_417772:

            fisttp WORD PTR [RCX-402119612]
            and AL,19
            add BYTE PTR [RAX],AL
            mov EAX,DWORD PTR [RSP+8]
            add RSP,16
            pop RBX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417790:

            mov QWORD PTR [RSP+8],RDI
            call .L_41c980

            test RAX,RAX
            mov QWORD PTR [RIP+.L_63b368],RAX
            mov R8D,221
            mov RDI,QWORD PTR [RSP+8]
            jne .L_41773f
.L_4177b1:

            lea RCX,QWORD PTR [RIP+.L_418183]
            mov EDX,65
            mov ESI,101
            mov EDI,15
            call .L_416a00

            add RSP,16
.L_4177d0:

            xor EAX,EAX
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4177d8:

            mov R8D,225
            jmp .L_4177b1
.L_4177e0:

            mov EAX,41
            ret 
.L_4177e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4177f0:

            mov RAX,QWORD PTR [RIP+.L_63b338]
            ret 
.L_4177f8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417800:

            mov RAX,QWORD PTR [RIP+.L_63b330]
            ret 
.L_417808:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417810:

            mov RAX,QWORD PTR [RIP+.L_63b328]
            ret 
.L_417818:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417820:

            mov QWORD PTR [RIP+.L_63b338],RDI
            ret 
.L_417828:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417830:

            mov QWORD PTR [RIP+.L_63b330],RDI
            ret 
.L_417838:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417840:

            mov QWORD PTR [RIP+.L_63b328],RDI
            ret 
.L_417848:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417850:

            mov RAX,QWORD PTR [RIP+.L_63b358]
            ret 
.L_417858:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417860:

            mov RAX,QWORD PTR [RIP+.L_63b350]
            ret 
.L_417868:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417870:

            push RBX
            mov RBX,RDI
            call .L_41a890

            mov QWORD PTR [RIP+.L_63b358],RBX
            pop RBX
            ret 
.L_417882:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417890:

            mov QWORD PTR [RIP+.L_63b350],RDI
            ret 
.L_417898:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4178a0:

            mov QWORD PTR [RDI],0
            mov QWORD PTR [RDI+8],RSI
            ret 
.L_4178ac:

            nop
            nop
            nop
            nop
.L_4178b0:

            mov QWORD PTR [RDI],RSI
            mov QWORD PTR [RDI+8],RSI
            ret 
.L_4178b8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4178c0:

            xor EAX,EAX
            cmp QWORD PTR [RIP+.L_63b340],0
            je .L_4178d0

            ret 
          .byte 0x66
          .byte 0x90
.L_4178d0:

            mov QWORD PTR [RIP+.L_63b340],RDI
            mov EAX,1
            ret 
.L_4178dd:

            nop
            nop
            nop
.L_4178e0:

            mov RAX,QWORD PTR [RIP+.L_63b340]
            ret 
.L_4178e8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4178f0:

            mov RAX,QWORD PTR [RIP+.L_63b340]
            test RAX,RAX
            je .L_417900

            jmp RAX
          .byte 0x66
          .byte 0x90
.L_417900:

            mov RAX,QWORD PTR [RIP+.L_63b348]
            push RBX
            mov RBX,RDI
            test RAX,RAX
            je .L_41791f

            call RAX

            mov QWORD PTR [RBX],0
            mov QWORD PTR [RBX+8],RAX
            pop RBX
            ret 
.L_41791f:

            call __errno_location@PLT

            mov QWORD PTR [RBX],RAX
            mov QWORD PTR [RBX+8],RAX
            pop RBX
            ret 
.L_41792d:

            nop
            nop
            nop
.L_417930:

            mov EDX,16
            jmp memcmp@PLT
.L_41793a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_417940:

            movdqu XMM0,XMMWORD PTR [RSI]
            movups XMMWORD PTR [RDI],XMM0
            ret 
.L_417948:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417950:

            mov RAX,QWORD PTR [RDI+8]
            ret 
.L_417955:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417960:

            mov RAX,QWORD PTR [RIP+.L_63b348]
            ret 
.L_417968:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417970:

            mov QWORD PTR [RIP+.L_63b348],RDI
            ret 
.L_417978:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417980:

            mov RAX,QWORD PTR [RIP+.L_63b348]
            test RAX,RAX
            je .L_417990

            jmp RAX
          .byte 0x66
          .byte 0x90
.L_417990:

            sub RSP,8
            call getpid@PLT

            add RSP,8
            cdqe 
            ret 
.L_4179a0:

            test EDI,EDI
            js .L_4179e0

            cmp EDI,40
            jg .L_4179c0

            lea RAX,QWORD PTR [RIP+.L_62f6e0]
            movsxd RDI,EDI
            mov RAX,QWORD PTR [RAX+RDI*8]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4179c0:

            push RBX
            lea EBX,DWORD PTR [RDI-41]
            mov RDI,QWORD PTR [RIP+.L_63b368]
            call .L_41ce20

            mov EDX,EAX
            lea RAX,QWORD PTR [RIP+.L_418196]
            cmp EBX,EDX
            jle .L_4179f0

            pop RBX
            ret 
          .byte 0x90
.L_4179e0:

            lea RAX,QWORD PTR [RIP+.L_41818e]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4179f0:

            mov ESI,EBX
            mov RDI,QWORD PTR [RIP+.L_63b368]
            pop RBX
            jmp .L_41ce30
.L_4179ff:

            nop
.L_417a00:

            mov DWORD PTR [RIP+.L_63b410],0
            lea RAX,QWORD PTR [RIP+.L_63b408]
            ret 
.L_417a12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417a20:

            push R12
            push RBP
            push RBX
            sub RSP,16
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov EAX,DWORD PTR [RIP+.L_63b324]
            test EAX,EAX
            je .L_417a60
.L_417a42:

            mov RAX,QWORD PTR [RSP+8]
            xor RAX,QWORD PTR FS:[40]
            jne .L_417b95

            add RSP,16
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x90
.L_417a60:

            lea RDI,QWORD PTR [RIP+.L_41819c]
            mov DWORD PTR [RIP+.L_63b324],1
            call getenv@PLT

            test RAX,RAX
            mov RBX,RAX
            je .L_417b50

            movzx R12D,BYTE PTR [RAX]
            xor EBP,EBP
            lea RSI,QWORD PTR [RIP+.L_4181ac]
            mov RDX,RSP
            cmp R12B,126
            sete BPL
            add RBP,RAX
            xor EAX,EAX
            mov RDI,RBP
            call __isoc99_sscanf@PLT

            test EAX,EAX
            je .L_417b20
.L_417aab:

            cmp R12B,126
            je .L_417b60

            cmp BYTE PTR [RBX],58
            je .L_417b80
.L_417abe:

            mov ESI,58
            mov RDI,RBX
            mov DWORD PTR [RIP+.L_63b410],0
            call strchr@PLT

            test RAX,RAX
            je .L_417b40

            movzx EBX,BYTE PTR [RAX+1]
            xor EDX,EDX
            cmp BL,126
            sete DL
            xor ESI,ESI
            lea RDI,QWORD PTR [RAX+RDX*1+1]
            xor EDX,EDX
            call strtoul@PLT

            cmp BL,126
            je .L_417b38

            mov DWORD PTR [RIP+.L_63b410],EAX
            mov RAX,QWORD PTR [RSP]
.L_417b03:

            mov EDX,EAX
            shr RAX,32
            or DH,4
            mov DWORD PTR [RIP+.L_63b40c],EAX
            mov DWORD PTR [RIP+.L_63b408],EDX
            jmp .L_417a42
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417b20:

            xor EDX,EDX
            xor ESI,ESI
            mov RDI,RBP
            call strtoul@PLT

            mov QWORD PTR [RSP],RAX
            jmp .L_417aab
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_417b38:

            not EAX
            and DWORD PTR [RIP+.L_63b410],EAX
.L_417b40:

            mov RAX,QWORD PTR [RSP]
            jmp .L_417b03
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417b50:

            lea RDI,QWORD PTR [RIP+.L_63b408]
            call .L_41a8e0

            jmp .L_417b03
          .byte 0x66
          .byte 0x90
.L_417b60:

            lea RDI,QWORD PTR [RIP+.L_63b408]
            call .L_41a8e0

            mov RDX,QWORD PTR [RSP]
            not RDX
            and RAX,RDX
            mov QWORD PTR [RSP],RAX
            jmp .L_417abe
          .byte 0x90
.L_417b80:

            lea RDI,QWORD PTR [RIP+.L_63b408]
            call .L_41a8e0

            mov QWORD PTR [RSP],RAX
            jmp .L_417abe
.L_417b95:

            call __stack_chk_fail@PLT
.L_417b9a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_417ba0:

            sub RSP,216

            test AL,AL
            mov QWORD PTR [RSP+40],RSI
            mov QWORD PTR [RSP+48],RDX
            mov QWORD PTR [RSP+56],RCX
            mov QWORD PTR [RSP+64],R8
            mov QWORD PTR [RSP+72],R9
            je .L_417bfb

            movaps XMMWORD PTR [RSP+80],XMM0
            movaps XMMWORD PTR [RSP+96],XMM1
            movaps XMMWORD PTR [RSP+112],XMM2
            movaps XMMWORD PTR [RSP+128],XMM3
            movaps XMMWORD PTR [RSP+144],XMM4
            movaps XMMWORD PTR [RSP+160],XMM5
            movaps XMMWORD PTR [RSP+176],XMM6
            movaps XMMWORD PTR [RSP+192],XMM7
.L_417bfb:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+224]
            mov RDX,RDI
            mov RCX,RSP
            mov ESI,1
            mov RDI,QWORD PTR [RIP+stderr]
            mov QWORD PTR [RSP+8],RAX
            lea RAX,QWORD PTR [RSP+32]
            mov DWORD PTR [RSP],8
            mov DWORD PTR [RSP+4],48
            mov QWORD PTR [RSP+16],RAX
            call __vfprintf_chk@PLT

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_417c60

            add RSP,216

            ret 
.L_417c60:

            call __stack_chk_fail@PLT
.L_417c65:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417c70:

            xor EAX,EAX
            ret 
.L_417c73:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417c80:

            mov RCX,RDX
            mov EDX,ESI
            mov RSI,RDI
            lea RDI,QWORD PTR [RIP+.L_418300]
            sub RSP,8
            xor EAX,EAX
            call .L_417ba0

            call abort@PLT
.L_417c9f:

            nop
.L_417ca0:

            test ESI,ESI
            js .L_417cb8

            mov RAX,QWORD PTR [RIP+.L_63b358]
            test RAX,RAX
            je .L_417d08

            jmp RAX
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417cb8:

            cmp QWORD PTR [RIP+.L_63b330],0
            je .L_417d08

            push R13
            push R12
            mov R13D,ECX
            push RBP
            push RBX
            mov EBP,EDI
            mov EDI,ESI
            mov R12,RDX
            mov EBX,ESI
            sub RSP,8
            call .L_418040

            test RAX,RAX
            je .L_417d0a

            mov EDI,EBP
            mov ECX,R13D
            mov RDX,R12
            mov RSI,RAX
            call QWORD PTR [RIP+.L_63b330]

            add RSP,8
            mov EDI,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            jmp .L_417f40
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417d08:

            ret 
.L_417d0a:

            lea RDX,QWORD PTR [RIP+.L_4181b1]
            lea RDI,QWORD PTR [RIP+.L_418183]
            mov ESI,589
            call .L_417c80
.L_417d22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_417d30:

            push RBP
            push RBX
            sub RSP,8
.L_417d36:

            cmp QWORD PTR [RIP+.L_63b338],0
            je .L_417e40

            lea RDX,QWORD PTR [RIP+.L_418183]
            mov ECX,251
            mov ESI,29
            mov EDI,9
            call .L_417ca0

            cmp QWORD PTR [RIP+.L_63b360],0
            je .L_417ea8
.L_417d6d:

            lea RDX,QWORD PTR [RIP+.L_418183]
            mov ECX,258
            mov ESI,29
            mov EDI,10
            call .L_417ca0

            lea RSI,QWORD PTR [RIP+.L_418183]
            mov EDX,260
            mov EDI,16
            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            mov R8D,262
            je .L_417e7e

            mov DWORD PTR [RAX],1
            mov ESI,266
            lea RDI,QWORD PTR [RIP+.L_418183]
            call QWORD PTR [RIP+.L_63b338]

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_417e70

            lea RDX,QWORD PTR [RIP+.L_418183]
            mov ECX,273
            mov ESI,29
            mov EDI,9
            call .L_417ca0

            mov RDI,QWORD PTR [RIP+.L_63b360]
            xor ESI,ESI
            call .L_41cae0

            cmp EAX,-1
            mov EBP,EAX
            je .L_417ee0

            mov RDI,QWORD PTR [RIP+.L_63b360]
            mov RDX,RBX
            mov ESI,EAX
            call .L_41ce60

            lea RDX,QWORD PTR [RIP+.L_418183]
            mov ECX,289
            mov ESI,29
            mov EDI,10
            call .L_417ca0
.L_417e35:

            mov EAX,EBP
            add RSP,8
.L_417e3b:

            not EAX
            pop RBX
            pop RBP
            ret 
.L_417e40:

            lea RCX,QWORD PTR [RIP+.L_418183]
            mov R8D,248
            mov EDX,100
            mov ESI,103
            mov EDI,15
            call .L_416a00

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417e70:

            mov RDI,RBX
            call .L_418aa0

            mov R8D,269
.L_417e7e:

            lea RCX,QWORD PTR [RIP+.L_418183]
            mov EDX,65
            mov ESI,103
            mov EDI,15
            call .L_416a00

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_417ea8:

            call .L_41c980

            test RAX,RAX
            mov QWORD PTR [RIP+.L_63b360],RAX
            jne .L_417d6d

            lea RDX,QWORD PTR [RIP+.L_418183]
            mov ECX,254
            mov ESI,29
            mov EDI,10
            call .L_417ca0

            mov R8D,255
            jmp .L_417e7e
.L_417ee0:

            mov RDI,QWORD PTR [RIP+.L_63b360]
            mov RSI,RBX
            call .L_41cb00

            lea RDX,QWORD PTR [RIP+.L_418183]
            lea EBP,DWORD PTR [RAX-1]
            mov ECX,289
            mov ESI,29
            mov EDI,10
            call .L_417ca0

            cmp EBP,-1
            jne .L_417e35

            mov RDI,QWORD PTR [RBX+8]
            mov EDX,292
            lea RSI,QWORD PTR [RIP+.L_418183]
            call QWORD PTR [RIP+.L_63b328]

            mov RDI,RBX
            call .L_418aa0

            add RSP,8
.L_417f38:

            mov EAX,1
            pop RBX
            pop RBP
            ret 
.L_417f40:

            push RBP
            push RBX
            mov EAX,EDI
            mov EBX,EDI
            not EAX
            sub RSP,8
.L_417f4c:

            test EDI,EDI
            cmovne EBX,EAX
            cmp QWORD PTR [RIP+.L_63b328],0
            je .L_417fb0

            lea RDX,QWORD PTR [RIP+.L_418183]
            mov EDI,9
            mov ECX,307
            mov ESI,29
            call .L_417ca0

            mov RDI,QWORD PTR [RIP+.L_63b360]
            test RDI,RDI
            je .L_417f8b

            call .L_41ce20

            cmp EAX,EBX
            jg .L_417fc0
.L_417f8b:

            mov ECX,310
.L_417f90:

            add RSP,8
.L_417f94:

            lea RDX,QWORD PTR [RIP+.L_418183]
            mov ESI,29
            pop RBX
            pop RBP
            mov EDI,10
            jmp .L_417ca0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_417fb0:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417fc0:

            mov RDI,QWORD PTR [RIP+.L_63b360]
            mov ESI,EBX
            call .L_41ce30

            test RAX,RAX
            mov RBP,RAX
            je .L_417fe2

            mov EAX,DWORD PTR [RAX]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [RBP],EAX
            jle .L_417ff0
.L_417fe2:

            mov ECX,328
            jmp .L_417f90
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_417ff0:

            mov RDI,QWORD PTR [RIP+.L_63b360]
            mov ESI,EBX
            xor EDX,EDX
            call .L_41ce60

            lea RDX,QWORD PTR [RIP+.L_418183]
            mov ECX,328
            mov ESI,29
            mov EDI,10
            call .L_417ca0

            mov RDI,QWORD PTR [RBP+8]
            mov EDX,331
            lea RSI,QWORD PTR [RIP+.L_418183]
            call QWORD PTR [RIP+.L_63b328]

            add RSP,8
.L_418035:

            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_418aa0
.L_41803f:

            nop
.L_418040:

            push RBX
.L_418041:

            mov EAX,EDI
            lea RDX,QWORD PTR [RIP+.L_418183]
            test EDI,EDI
            mov EBX,EDI
            not EAX
            mov EDI,9
            mov ECX,342
            mov ESI,29
            cmovne EBX,EAX
            call .L_417ca0

            mov RDI,QWORD PTR [RIP+.L_63b360]
            test RDI,RDI
            je .L_41807c

            call .L_41ce20

            cmp EAX,EBX
            jg .L_4180a0
.L_41807c:

            lea RDX,QWORD PTR [RIP+.L_418183]
            mov ECX,349
            mov ESI,29
            mov EDI,10
            call .L_417ca0

            xor EAX,EAX
            pop RBX
.L_41809a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4180a0:

            mov RDI,QWORD PTR [RIP+.L_63b360]
            mov ESI,EBX
            call .L_41ce30

            test RAX,RAX
            mov RBX,RAX
            je .L_41807c

            add DWORD PTR [RAX],1
            lea RDX,QWORD PTR [RIP+.L_418183]
            mov ECX,349
            mov ESI,29
            mov EDI,10
            call .L_417ca0

            mov RAX,QWORD PTR [RBX+8]
            pop RBX
            ret 
.L_4180da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4180e0:

            mov R9,QWORD PTR [RIP+.L_63b350]
            test R9,R9
            je .L_4180f0

            jmp R9
          .byte 0x90
.L_4180f0:

            push R14
            push R13
            mov R14,RDI
            push R12
            mov R12,RCX
            push RBP
            mov EBP,EDX
            push RBX
            mov ECX,R8D
            mov RDX,R12
            mov EBX,ESI
            mov EDI,9
            mov ESI,EBP
            mov R13D,R8D
            call .L_417ca0

            add EBX,DWORD PTR [R14]
            mov ECX,R13D
            mov RDX,R12
            mov ESI,EBP
            mov EDI,10
            mov DWORD PTR [R14],EBX
            call .L_417ca0

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41813a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_418140:

            mov RAX,QWORD PTR [RIP+stderr]
            ret 
.L_418148:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418150:

            test RDX,RDX
            je .L_418180

            xor EAX,EAX
            xor ECX,ECX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418160:

            movzx R8D,BYTE PTR [RDI+RCX*1]
            xor R8B,BYTE PTR [RSI+RCX*1]
            add RCX,1
            or EAX,R8D
            cmp RDX,RCX
            jne .L_418160

            movzx EAX,AL
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418180:

            xor EAX,EAX
            ret 
.L_418183:
          .string "cryptlib.c"
.L_41818e:
          .string "dynamic"
.L_418196:
          .string "ERROR"
.L_41819c:
          .string "OPENSSL_ia32cap"
.L_4181ac:
          .string "%lli"
.L_4181b1:
          .string "pointer != NULL"
.L_4181c1:
          .string "<<ERROR>>"
.L_4181cb:
          .string "err"
.L_4181cf:
          .string "ex_data"
.L_4181d7:
          .string "x509"
.L_4181dc:
          .string "x509_info"
.L_4181e6:
          .string "x509_pkey"
.L_4181f0:
          .string "x509_crl"
.L_4181f9:

            js .L_418230
          .byte 0x30
          .byte 0x39
          .byte 0x5f
          .byte 0x72
          .byte 0x65
          .byte 0x71
          .byte 0x0
.L_418202:
          .string "dsa"
.L_418206:
          .string "rsa"
.L_41820a:
          .string "evp_pkey"
.L_418213:
          .string "x509_store"
.L_41821e:
          .string "ssl_ctx"
.L_418226:
          .string "ssl_cert"
.L_41822f:
          .byte 0x73
.L_418230:

            jae .L_41829e
          .byte 0x5f
          .byte 0x73
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x0
.L_41823b:
          .string "ssl_sess_cert"
.L_418249:
          .string "ssl"
.L_41824d:
          .string "ssl_method"
.L_418258:
          .string "rand"
.L_41825d:
          .string "rand2"
.L_418263:
          .string "debug_malloc"
.L_418270:
          .string "BIO"
.L_418274:
          .string "gethostbyname"
.L_418282:
          .string "getservbyname"
.L_418290:
          .string "readdir"
.L_418298:
          .byte 0x52
          .byte 0x53
          .byte 0x41
          .byte 0x5f
          .byte 0x62
          .byte 0x6c
.L_41829e:

            imul EBP,DWORD PTR [RSI+100],6778473
.L_4182a5:
          .string "dh"
.L_4182a8:
          .string "debug_malloc2"
.L_4182b6:
          .string "dso"
.L_4182ba:
          .string "dynlock"
.L_4182c2:
          .string "engine"
.L_4182c9:
          .string "ui"
# WARNING: found overlapping blocks at address 1806b

          .zero 1
.L_4182d2:
          .string "ec"
.L_4182d5:
          .string "ecdh"
.L_4182da:
          .string "bn"
.L_4182dd:
          .string "ec_pre_comp"
.L_4182e9:
          .string "store"
# WARNING: found overlapping blocks at address 1808b
# WARNING: found overlapping blocks at address 1808c
.L_4182ef:
          .string "comp"
.L_4182f4:
          .string "fips"
.L_4182f9:
          .string "fips2"
          .byte 0x90
.L_418300:
          .byte 0x25
          .byte 0x73
          .byte 0x28
          .byte 0x25
          .byte 0x64
          .byte 0x29
          .byte 0x3a
          .byte 0x20
          .byte 0x4f
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x53
          .byte 0x53
          .byte 0x4c
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x74
          .byte 0x65
          .byte 0x72
          .byte 0x6e
          .byte 0x61
          .byte 0x6c
          .byte 0x20
          .byte 0x65
          .byte 0x72
          .byte 0x72
          .byte 0x6f
          .byte 0x72
          .byte 0x2c
          .byte 0x20
          .byte 0x61
          .byte 0x73
          .byte 0x73
          .byte 0x65
          .byte 0x72
          .byte 0x74
          .byte 0x69
          .byte 0x6f
          .byte 0x6e
          .byte 0x20
          .byte 0x66
          .byte 0x61
          .byte 0x69
          .byte 0x6c
          .byte 0x65
          .byte 0x64
          .byte 0x3a
          .byte 0x20
.L_418332:

            and EAX,1711278707
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418340:

            jmp QWORD PTR [RIP+.L_639718]
.L_418346:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418350:

            jmp QWORD PTR [RIP+.L_639710]
.L_418356:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418360:

            jmp QWORD PTR [RIP+.L_639700]
.L_418366:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418370:

            push R12
            push RBP
            mov R12,RSI
            push RBX
.L_418377:

            mov RBP,RDX
            mov RBX,RDI
            call .L_41a890

            mov EAX,DWORD PTR [RIP+.L_6396f4]
            test EAX,EAX
            je .L_4183f3

            test RBX,RBX
            sete DL
            test R12,R12
            sete AL
            or DL,AL
            jne .L_418400

            test RBP,RBP
            je .L_418400

            lea RAX,QWORD PTR [RIP+.L_418340]
            mov QWORD PTR [RIP+.L_639718],RBX
            mov QWORD PTR [RIP+.L_639710],R12
            mov QWORD PTR [RIP+.L_639708],RBP
            mov QWORD PTR [RIP+.L_639700],RBX
            mov QWORD PTR [RIP+.L_639730],RAX
            lea RAX,QWORD PTR [RIP+.L_418350]
            mov QWORD PTR [RIP+.L_6396f8],RBP
            mov QWORD PTR [RIP+.L_639728],RAX
            lea RAX,QWORD PTR [RIP+.L_418360]
            mov QWORD PTR [RIP+.L_639720],RAX
            mov EAX,1
.L_4183f3:

            pop RBX
.L_4183f4:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418400:

            pop RBX
            xor EAX,EAX
            pop RBP
            pop R12
            ret 
.L_418407:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418410:

            mov EAX,DWORD PTR [RIP+.L_6396f4]
            test EAX,EAX
            je .L_418482

            test RDI,RDI
            sete CL
            test RSI,RSI
            sete AL
            or CL,AL
            jne .L_418480

            test RDX,RDX
            je .L_418480

            mov QWORD PTR [RIP+.L_639718],0
            mov QWORD PTR [RIP+.L_639730],RDI
            mov EAX,1
            mov QWORD PTR [RIP+.L_639710],0
            mov QWORD PTR [RIP+.L_639728],RSI
            mov QWORD PTR [RIP+.L_639708],RDX
            mov QWORD PTR [RIP+.L_639700],0
            mov QWORD PTR [RIP+.L_639720],RDI
            mov QWORD PTR [RIP+.L_6396f8],RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418480:

            xor EAX,EAX
.L_418482:

            ret 
.L_418484:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418490:

            mov EAX,DWORD PTR [RIP+.L_6396f4]
            test EAX,EAX
            je .L_4184d2

            test RDI,RDI
            je .L_4184d0

            test RSI,RSI
            je .L_4184d0

            lea RAX,QWORD PTR [RIP+.L_418360]
            mov QWORD PTR [RIP+.L_639700],RDI
            mov QWORD PTR [RIP+.L_6396f8],RSI
            mov QWORD PTR [RIP+.L_639720],RAX
            mov EAX,1
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4184d0:

            xor EAX,EAX
.L_4184d2:

            ret 
.L_4184d4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4184e0:

            mov EAX,DWORD PTR [RIP+.L_6396f4]
            test EAX,EAX
            je .L_41851a

            test RDI,RDI
            je .L_418518

            test RSI,RSI
            je .L_418518

            mov QWORD PTR [RIP+.L_639700],0
            mov QWORD PTR [RIP+.L_639720],RDI
            mov EAX,1
            mov QWORD PTR [RIP+.L_639708],RSI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418518:

            xor EAX,EAX
.L_41851a:

            ret 
.L_41851c:

            nop
            nop
            nop
            nop
.L_418520:

            mov EAX,DWORD PTR [RIP+.L_6396f0]
            test EAX,EAX
            jne .L_418530

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_418530:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov R12,RDX
            push RBX
            mov RBP,RCX
            mov RBX,R8
            mov R13,RSI
            call .L_41a890

            mov QWORD PTR [RIP+.L_63b390],R14
            mov QWORD PTR [RIP+.L_63b388],R13
            mov EAX,1
            mov QWORD PTR [RIP+.L_63b380],R12
            mov QWORD PTR [RIP+.L_63b378],RBP
            mov QWORD PTR [RIP+.L_63b370],RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41857d:

            nop
            nop
            nop
.L_418580:

            test RDI,RDI
            je .L_41859a

            xor EAX,EAX
            lea RCX,QWORD PTR [RIP+.L_418340]
            cmp QWORD PTR [RIP+.L_639730],RCX
            je .L_4185d8
.L_418597:

            mov QWORD PTR [RDI],RAX
.L_41859a:

            test RSI,RSI
            je .L_4185b4

            xor EAX,EAX
            lea RCX,QWORD PTR [RIP+.L_418350]
            cmp QWORD PTR [RIP+.L_639728],RCX
            je .L_4185c8
.L_4185b1:

            mov QWORD PTR [RSI],RAX
.L_4185b4:

            test RDX,RDX
            je .L_4185c3

            mov RAX,QWORD PTR [RIP+.L_639708]
            mov QWORD PTR [RDX],RAX
.L_4185c3:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4185c8:

            mov RAX,QWORD PTR [RIP+.L_639710]
            jmp .L_4185b1
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4185d8:

            mov RAX,QWORD PTR [RIP+.L_639718]
            jmp .L_418597
.L_4185e1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4185f0:

            test RDI,RDI
            je .L_418612

            mov RAX,QWORD PTR [RIP+.L_639730]
            lea RCX,QWORD PTR [RIP+.L_418340]
            cmp RAX,RCX
            mov ECX,0
            cmove RAX,RCX
            mov QWORD PTR [RDI],RAX
.L_418612:

            test RSI,RSI
            je .L_418634

            mov RAX,QWORD PTR [RIP+.L_639728]
            lea RCX,QWORD PTR [RIP+.L_418350]
            cmp RAX,RCX
            mov ECX,0
            cmove RAX,RCX
            mov QWORD PTR [RSI],RAX
.L_418634:

            test RDX,RDX
            je .L_418643

            mov RAX,QWORD PTR [RIP+.L_639708]
            mov QWORD PTR [RDX],RAX
.L_418643:

            ret 
.L_418645:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418650:

            test RDI,RDI
            je .L_41866a

            xor EAX,EAX
            lea RDX,QWORD PTR [RIP+.L_418360]
            cmp QWORD PTR [RIP+.L_639720],RDX
            je .L_418680
.L_418667:

            mov QWORD PTR [RDI],RAX
.L_41866a:

            test RSI,RSI
            je .L_418679

            mov RAX,QWORD PTR [RIP+.L_6396f8]
            mov QWORD PTR [RSI],RAX
.L_418679:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418680:

            mov RAX,QWORD PTR [RIP+.L_639700]
            jmp .L_418667
.L_418689:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418690:

            test RDI,RDI
            je .L_4186b2

            mov RAX,QWORD PTR [RIP+.L_639720]
            lea RDX,QWORD PTR [RIP+.L_418360]
            cmp RAX,RDX
            mov EDX,0
            cmove RAX,RDX
            mov QWORD PTR [RDI],RAX
.L_4186b2:

            test RSI,RSI
            je .L_4186c1

            mov RAX,QWORD PTR [RIP+.L_6396f8]
            mov QWORD PTR [RSI],RAX
.L_4186c1:

            ret 
.L_4186c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4186d0:

            test RDI,RDI
            je .L_4186df

            mov RAX,QWORD PTR [RIP+.L_63b390]
            mov QWORD PTR [RDI],RAX
.L_4186df:

            test RSI,RSI
            je .L_4186ee

            mov RAX,QWORD PTR [RIP+.L_63b388]
            mov QWORD PTR [RSI],RAX
.L_4186ee:

            test RDX,RDX
            je .L_4186fd

            mov RAX,QWORD PTR [RIP+.L_63b380]
            mov QWORD PTR [RDX],RAX
.L_4186fd:

            test RCX,RCX
            je .L_41870c

            mov RAX,QWORD PTR [RIP+.L_63b378]
            mov QWORD PTR [RCX],RAX
.L_41870c:

            test R8,R8
            je .L_41871b

            mov RAX,QWORD PTR [RIP+.L_63b370]
            mov QWORD PTR [R8],RAX
.L_41871b:

            ret 
.L_41871d:

            nop
            nop
            nop
.L_418720:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_41872a:

            test EDI,EDI
            jle .L_4187d0

            mov ECX,DWORD PTR [RIP+.L_6396f4]
            test ECX,ECX
            jne .L_4187b0
.L_41873c:

            mov RAX,QWORD PTR [RIP+.L_63b390]
            mov R12D,EDX
            mov RBP,RSI
            mov EBX,EDI
            test RAX,RAX
            je .L_418769

            mov EDX,DWORD PTR [RIP+.L_6396f0]
            test EDX,EDX
            jne .L_4187c0
.L_41875a:

            xor R8D,R8D
            mov ECX,R12D
            mov RDX,RBP
            mov ESI,EBX
            xor EDI,EDI
            call RAX
.L_418769:

            movsxd RDI,EBX
            mov EDX,R12D
            mov RSI,RBP
            call QWORD PTR [RIP+.L_639720]

            mov R13,RAX
            mov RAX,QWORD PTR [RIP+.L_63b390]
            test RAX,RAX
            je .L_41879a

            mov R8D,1
            mov ECX,R12D
            mov RDX,RBP
            mov ESI,EBX
            mov RDI,R13
            call RAX
.L_41879a:

            add RSP,8
.L_41879e:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4187b0:

            mov DWORD PTR [RIP+.L_6396f4],0
            jmp .L_41873c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4187c0:

            mov DWORD PTR [RIP+.L_6396f0],0
            jmp .L_41875a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4187d0:

            xor R13D,R13D
            jmp .L_41879a
.L_4187d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4187e0:

            mov RAX,QWORD PTR [RIP+.L_63b380]
            push RBX
            mov RBX,RDI
            test RAX,RAX
            je .L_4187f4

            xor ESI,ESI
            call RAX
.L_4187f4:

            mov RDI,RBX
            call QWORD PTR [RIP+.L_6396f8]

            mov RAX,QWORD PTR [RIP+.L_63b380]
            test RAX,RAX
            je .L_418818

            pop RBX
            mov ESI,1
            xor EDI,EDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418818:

            pop RBX
            ret 
.L_41881a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_418820:

            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_41882a:

            test EDI,EDI
            jle .L_4188d0

            mov ECX,DWORD PTR [RIP+.L_6396f4]
            test ECX,ECX
            jne .L_4188b0
.L_41883c:

            mov RAX,QWORD PTR [RIP+.L_63b390]
            mov R12D,EDX
            mov RBP,RSI
            mov EBX,EDI
            test RAX,RAX
            je .L_418869

            mov EDX,DWORD PTR [RIP+.L_6396f0]
            test EDX,EDX
            jne .L_4188c0
.L_41885a:

            xor R8D,R8D
            mov ECX,R12D
            mov RDX,RBP
            mov ESI,EBX
            xor EDI,EDI
            call RAX
.L_418869:

            movsxd RDI,EBX
            mov EDX,R12D
            mov RSI,RBP
            call QWORD PTR [RIP+.L_639730]

            mov R13,RAX
            mov RAX,QWORD PTR [RIP+.L_63b390]
            test RAX,RAX
            je .L_41889a

            mov R8D,1
            mov ECX,R12D
            mov RDX,RBP
            mov ESI,EBX
            mov RDI,R13
            call RAX
.L_41889a:

            add RSP,8
.L_41889e:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4188b0:

            mov DWORD PTR [RIP+.L_6396f4],0
            jmp .L_41883c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4188c0:

            mov DWORD PTR [RIP+.L_6396f0],0
            jmp .L_41885a
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4188d0:

            xor R13D,R13D
            jmp .L_41889a
.L_4188d5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4188e0:

            push R12
            push RBP
            mov R12D,EDX
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            call strlen@PLT

            lea EDI,DWORD PTR [RAX+1]
            mov EDX,R12D
            mov RSI,RBP
            call .L_418820

            test RAX,RAX
            mov RDX,RAX
            je .L_418916

            mov RSI,RBX
            mov RDI,RAX
            call strcpy@PLT

            mov RDX,RAX
.L_418916:

            pop RBX
            mov RAX,RDX
            pop RBP
            pop R12
            ret 
.L_41891e:

            nop
            nop
.L_418920:

            test RDI,RDI
            push R14
            push R13
            push R12
            mov R12,RDX
            push RBP
            mov EBP,ESI
            push RBX
.L_418930:

            je .L_4189a0

            test ESI,ESI
            jle .L_4189b8

            mov RAX,QWORD PTR [RIP+.L_63b388]
            mov R13D,ECX
            mov RBX,RDI
            test RAX,RAX
            je .L_41895b

            mov R8D,ECX
            xor R9D,R9D
            mov RCX,RDX
            mov EDX,ESI
            xor ESI,ESI
            call RAX
.L_41895b:

            movsxd RSI,EBP
            mov ECX,R13D
            mov RDX,R12
            mov RDI,RBX
            call QWORD PTR [RIP+.L_639728]

            mov R14,RAX
            mov RAX,QWORD PTR [RIP+.L_63b388]
            test RAX,RAX
            je .L_418992

            mov R9D,1
            mov R8D,R13D
            mov RCX,R12
            mov EDX,EBP
            mov RSI,R14
            mov RDI,RBX
            call RAX
.L_418992:

            pop RBX
.L_418993:

            mov RAX,R14
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0x90
.L_4189a0:

            pop RBX
            mov RSI,R12
            mov EDI,EBP
            mov EDX,ECX
            pop RBP
            pop R12
            pop R13
            pop R14
            jmp .L_418820
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4189b8:

            xor R14D,R14D
            jmp .L_418992
.L_4189bd:

            nop
            nop
            nop
.L_4189c0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,EDX
            sub RSP,8
.L_4189d0:

            test RDI,RDI
            je .L_418a78

            cmp EDX,ESI
            jl .L_418a98

            test EDX,EDX
            jle .L_418a98

            mov RAX,QWORD PTR [RIP+.L_63b388]
            mov R14D,R8D
            mov R13,RCX
            movsxd R12,ESI
            mov RBX,RDI
            test RAX,RAX
            je .L_418a08

            xor R9D,R9D
            xor ESI,ESI
            call RAX
.L_418a08:

            movsxd RDI,EBP
            mov EDX,R14D
            mov RSI,R13
            call QWORD PTR [RIP+.L_639730]

            test RAX,RAX
            mov R15,RAX
            je .L_418a41

            mov RDX,R12
            mov RSI,RBX
            mov RDI,RAX
            call memcpy@PLT

            mov RDI,RBX
            mov RSI,R12
            call .L_41aa70

            mov RDI,RBX
            call QWORD PTR [RIP+.L_639708]
.L_418a41:

            mov RAX,QWORD PTR [RIP+.L_63b388]
            test RAX,RAX
            je .L_418a63

            mov R9D,1
            mov R8D,R14D
            mov RCX,R13
            mov EDX,EBP
            mov RSI,R15
            mov RDI,RBX
            call RAX
.L_418a63:

            add RSP,8
.L_418a67:

            mov RAX,R15
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418a78:

            add RSP,8
            mov EDI,EBP
            mov EDX,R8D
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            mov RSI,RCX
            jmp .L_418820
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418a98:

            xor R15D,R15D
            jmp .L_418a63
.L_418a9d:

            nop
            nop
            nop
.L_418aa0:

            mov RAX,QWORD PTR [RIP+.L_63b380]
            push RBX
            mov RBX,RDI
            test RAX,RAX
            je .L_418ab4

            xor ESI,ESI
            call RAX
.L_418ab4:

            mov RDI,RBX
            call QWORD PTR [RIP+.L_639708]

            mov RAX,QWORD PTR [RIP+.L_63b380]
            test RAX,RAX
            je .L_418ad8

            pop RBX
            mov ESI,1
            xor EDI,EDI
            jmp RAX
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418ad8:

            pop RBX
            ret 
.L_418ada:

            nop
            nop
            nop
            nop
            nop
            nop
.L_418ae0:

            test RDI,RDI
            push RBX
            mov EBX,ESI
            je .L_418aed

            call .L_418aa0
.L_418aed:

            mov EDI,EBX
            lea RSI,QWORD PTR [RIP+.L_418b43]
            mov EDX,451
            pop RBX
            jmp .L_418820
.L_418b01:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418b10:

            mov RAX,QWORD PTR [RIP+.L_63b378]
            test RAX,RAX
            je .L_418b20

            jmp RAX
          .byte 0x66
          .byte 0x90
.L_418b20:

            ret 
.L_418b22:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418b30:

            mov RAX,QWORD PTR [RIP+.L_63b370]
            test RAX,RAX
            je .L_418b40

            jmp RAX
          .byte 0x66
          .byte 0x90
.L_418b40:

            xor EAX,EAX
            ret 
.L_418b43:
          .string "mem.c"
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418b50:

            mov RAX,QWORD PTR [RDI]
            sub RAX,QWORD PTR [RSI]
            ret 
.L_418b57:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418b60:

            mov RDX,QWORD PTR [RDI]
            imul RAX,RDX,17851
            mov RSI,RDX
            shr RDX,4
            shr RSI,14
            imul RDX,RDX,251
            lea RCX,QWORD PTR [RSI*8]
            sub RCX,RSI
            add RDX,RCX
            add RAX,RDX
            ret 
.L_418b8e:

            nop
            nop
.L_418b90:

            mov R10,QWORD PTR [RDI+16]
            mov RAX,RDI
            mov ECX,DWORD PTR [RDI+8]
            mov EDX,DWORD PTR [RDI+24]
            mov R9,QWORD PTR [RSI]
            mov RDI,QWORD PTR [RDI+48]
            mov R8,QWORD PTR [RAX]
            mov RSI,R10
            jmp R9
.L_418bad:

            nop
            nop
            nop
.L_418bb0:

            jmp .L_417930
.L_418bb5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418bc0:

            mov EAX,DWORD PTR [RDI+48]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [RDI+48],EAX
            jle .L_418bd0

            ret 
          .byte 0x90
.L_418bd0:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+40]
            test RDI,RDI
            jne .L_418bf0

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418bf0:

            call .L_418bc0

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
.L_418bfe:

            nop
            nop
.L_418c00:

            sub RSP,8
            call .L_417950

            imul RCX,RAX,17851
            mov RSI,RAX
            shr RAX,4
            shr RSI,14
            add RSP,8
            imul RAX,RAX,251
            lea RDX,QWORD PTR [RSI*8]
            sub RDX,RSI
            add RAX,RDX
            add RAX,RCX
            ret 
.L_418c38:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418c40:

            push RBP
            push RBX
            sub RSP,72
.L_418c46:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp QWORD PTR [RIP+.L_63b3c0],0
            je .L_418cf0

            mov RBX,RSP
            mov RDI,RBX
            call .L_4178f0

            mov RDI,QWORD PTR [RIP+.L_63b3c0]
            mov RSI,RBX
            call .L_41d410

            test RAX,RAX
            mov RBX,RAX
            je .L_418cf0

            mov RBP,QWORD PTR [RAX+40]
            test RBP,RBP
            je .L_418cc8

            add DWORD PTR [RBP+48],1
            mov RDI,QWORD PTR [RIP+.L_63b3c0]
            mov RSI,RBP
            call .L_41d210

            mov EAX,DWORD PTR [RBX+48]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [RBX+48],EAX
            jg .L_418cd5

            mov QWORD PTR [RBX+40],0
            sub DWORD PTR [RBP+48],1
.L_418cbb:

            mov RDI,RBX
            call .L_418aa0

            jmp .L_418cd5
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_418cc8:

            mov EAX,DWORD PTR [RAX+48]
            sub EAX,1
            test EAX,EAX
            mov DWORD PTR [RBX+48],EAX
            jle .L_418cbb
.L_418cd5:

            mov RDX,QWORD PTR [RSP+56]
            xor RDX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_418cf4

            add RSP,72
.L_418cec:

            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_418cf0:

            xor EBX,EBX
            jmp .L_418cd5
.L_418cf4:

            call __stack_chk_fail@PLT
.L_418cf9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_418d00:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,1080
.L_418d11:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+1064],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RSI]
            cmp QWORD PTR [RDI],RAX
            je .L_418f50

            test BYTE PTR [RIP+.L_63b3b8],1
            lea RBX,QWORD PTR [RSP+32]
            mov R13,RSI
            mov RBP,RDI
            mov ESI,1024
            mov R12,RBX
            jne .L_418fc8
.L_418d50:

            mov RCX,QWORD PTR [RBP+48]
            mov R9D,DWORD PTR [RBP+24]
            lea RDX,QWORD PTR [RIP+.L_419a98]
            mov R8,QWORD PTR [RBP+16]
            mov RDI,R12
            xor EAX,EAX
            mov R14D,1024
            call .L_414fa0

            mov RDI,R12
            call strlen@PLT

            add R12,RAX
            mov RSI,R14
            mov RAX,R12
            sub RAX,RBX
            sub RSI,RAX
            test BYTE PTR [RIP+.L_63b3b8],2
            jne .L_418f80
.L_418d97:

            mov ECX,DWORD PTR [RBP+8]
            mov R8,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RIP+.L_419abd]
            mov RDI,R12
            xor EAX,EAX
            call .L_414fa0

            mov RDI,QWORD PTR [R13]
            mov RSI,RBX
            call .L_4126d0

            movsxd RAX,DWORD PTR [RBP+8]
            mov RBP,QWORD PTR [RBP+64]
            add DWORD PTR [R13+8],1
            add QWORD PTR [R13+16],RAX
            test RBP,RBP
            je .L_418f50

            lea RDI,QWORD PTR [RSP+16]
            mov RSI,RBP
            mov R12D,1
            mov QWORD PTR [RSP],RDI
            call .L_417940

            jmp .L_418e44
          .byte 0x66
          .byte 0x90
.L_418df0:

            movsxd RDX,EDX
            call memcpy@PLT

            mov ESI,899
            mov EDI,125
.L_418e02:

            lea RDX,QWORD PTR [RIP+.L_419ad7]
            add RDI,RBX
            xor EAX,EAX
            call .L_414fa0

            mov RDI,QWORD PTR [R13]
            mov RSI,RBX
            call .L_4126d0

            mov RBP,QWORD PTR [RBP+40]
            test RBP,RBP
            je .L_418f50

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBP
            add R12,1
            call .L_417930

            test EAX,EAX
            jne .L_418f50
.L_418e44:

            mov ECX,1024
            mov RDX,R12
            mov ESI,62
            mov RDI,RBX
            call __memset_chk@PLT

            mov R14,QWORD PTR [RBP+16]
            mov R15D,DWORD PTR [RBP+24]
            mov RDI,RBP
            call .L_417950

            mov ESI,1024
            lea RDI,QWORD PTR [RBX+R12*1]
            lea RDX,QWORD PTR [RIP+.L_419ae8]
            mov R8,R14
            mov RCX,RAX
            sub RSI,R12
            mov R9D,R15D
            xor EAX,EAX
            mov R14,RBX
            call .L_414fa0
.L_418e8f:

            mov EDX,DWORD PTR [R14]
            add R14,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_418e8f

            mov EDX,EAX
            mov RSI,QWORD PTR [RBP+32]
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [R14+2]
            mov ECX,EAX
            mov RDI,RSI
            mov QWORD PTR [RSP+8],RSI
            cmove R14,RDX
            add CL,AL
            sbb R14,3
            sub R14,RBX
            call strlen@PLT

            mov EDX,125
            mov RSI,QWORD PTR [RSP+8]
            sub EDX,R14D
            movsxd R14,R14D
            cmp EDX,EAX
            lea RDI,QWORD PTR [RBX+R14*1]
            jl .L_418df0

            mov EDX,1024
            sub RDX,R14
            call .L_41c650

            mov RDI,RBX
.L_418f04:

            mov EDX,DWORD PTR [RDI]
            add RDI,4
            lea EAX,DWORD PTR [RDX-16843009]
            not EDX
            and EAX,EDX
            and EAX,2155905152
            je .L_418f04

            mov EDX,EAX
            mov ESI,1024
            shr EDX,16
            test EAX,32896
            cmove EAX,EDX
            lea RDX,QWORD PTR [RDI+2]
            mov ECX,EAX
            cmove RDI,RDX
            add CL,AL
            sbb RDI,3
            sub RDI,RBX
            movsxd RDI,EDI
            sub RSI,RDI
            jmp .L_418e02
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_418f50:

            mov RAX,QWORD PTR [RSP+1064]
            xor RAX,QWORD PTR FS:[40]
            jne .L_41903c

            add RSP,1080
.L_418f6e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418f80:

            lea RDI,QWORD PTR [RBP+32]
            mov QWORD PTR [RSP],RSI
            call .L_417950

            mov RSI,QWORD PTR [RSP]
            lea RDX,QWORD PTR [RIP+.L_419ab0]
            mov RCX,RAX
            mov RDI,R12
            xor EAX,EAX
            call .L_414fa0

            mov RDI,R12
            call strlen@PLT

            add R12,RAX
            mov RSI,R14
            mov RAX,R12
            sub RAX,RBX
            sub RSI,RAX
            jmp .L_418d97
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_418fc8:

            lea RDI,QWORD PTR [RDI+56]
            call localtime@PLT

            mov ECX,DWORD PTR [RAX+8]
            mov R9D,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RIP+.L_419a86]
            mov R8D,DWORD PTR [RAX+4]
            mov ESI,1024
            mov RDI,RBX
            xor EAX,EAX
            call .L_414fa0

            mov RDX,RBX
.L_418ff4:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_418ff4

            mov ECX,EAX
            mov ESI,1024
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            cmove RDX,RCX
            mov ECX,EAX
            add CL,AL
            sbb RDX,3
            sub RDX,RBX
            lea R12,QWORD PTR [RBX+RDX*1]
            sub RSI,RDX
            jmp .L_418d50
.L_41903c:

            call __stack_chk_fail@PLT
.L_419041:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419050:

            jmp .L_418d00
.L_419055:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419060:

            push RBP
            push RBX
            mov EBX,1
            sub RSP,40
.L_41906b:

            mov RBP,RSP
            mov RDI,RBP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_4178f0

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov ECX,285
            mov ESI,20
            mov EDI,5
            call .L_417ca0

            test BYTE PTR [RIP+.L_63b3d8],2
            je .L_4190e0
.L_4190aa:

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov ECX,290
            mov ESI,20
            mov EDI,6
            call .L_417ca0

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,EBX
            jne .L_4190f8

            add RSP,40
.L_4190db:

            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0x90
.L_4190e0:

            lea RDI,QWORD PTR [RIP+.L_63b3a0]
            mov RSI,RBP
            xor EBX,EBX
            call .L_417930

            test EAX,EAX
            setne BL
            jmp .L_4190aa
.L_4190f8:

            call __stack_chk_fail@PLT
.L_4190fd:

            nop
            nop
            nop
.L_419100:

            push RBP
            push RBX
            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov EBX,EDI
            mov ECX,212
            mov ESI,20
            sub RSP,40
.L_419119:

            mov EDI,9
            mov EBP,DWORD PTR [RIP+.L_63b3d8]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            call .L_417ca0

            cmp EBX,1
            je .L_419218

            jle .L_4191f0

            cmp EBX,2
            je .L_4191a0

            cmp EBX,3
            jne .L_419160

            test BYTE PTR [RIP+.L_63b3d8],1
            jne .L_419238

            nop
.L_419160:

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov ECX,274
            mov ESI,20
            mov EDI,10
            call .L_417ca0

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_4192d9

            add RSP,40
.L_419195:

            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4191a0:

            mov EAX,DWORD PTR [RIP+.L_63b3d8]
            test AL,1
            je .L_419160

            mov EDX,DWORD PTR [RIP+.L_63b3b0]
            test EDX,EDX
            je .L_419160

            sub EDX,1
            test EDX,EDX
            mov DWORD PTR [RIP+.L_63b3b0],EDX
            jne .L_419160

            lea RDX,QWORD PTR [RIP+.L_419ada]
            or EAX,2
            mov ECX,265
            mov ESI,27
            mov EDI,10
            mov DWORD PTR [RIP+.L_63b3d8],EAX
            call .L_417ca0

            jmp .L_419160
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4191f0:

            test EBX,EBX
            jne .L_419160

            mov DWORD PTR [RIP+.L_63b3d8],0
            mov DWORD PTR [RIP+.L_63b3b0],0
            jmp .L_419160
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419218:

            mov DWORD PTR [RIP+.L_63b3d8],3
            mov DWORD PTR [RIP+.L_63b3b0],0
            jmp .L_419160
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419238:

            mov RBX,RSP
            mov RDI,RBX
            call .L_4178f0

            mov EAX,DWORD PTR [RIP+.L_63b3b0]
            test EAX,EAX
            jne .L_4192c0
.L_41924d:

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov ECX,244
            mov ESI,20
            mov EDI,10
            call .L_417ca0

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov ECX,251
            mov ESI,27
            mov EDI,9
            call .L_417ca0

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov ESI,20
            mov EDI,9
            mov ECX,252
            call .L_417ca0

            lea RDI,QWORD PTR [RIP+.L_63b3a0]
            mov RSI,RBX
            and DWORD PTR [RIP+.L_63b3d8],4294967293
            call .L_417940
.L_4192b4:

            add DWORD PTR [RIP+.L_63b3b0],1
            jmp .L_419160
.L_4192c0:

            lea RDI,QWORD PTR [RIP+.L_63b3a0]
            mov RSI,RBX
            call .L_417930

            test EAX,EAX
            jne .L_41924d

            jmp .L_4192b4
.L_4192d9:

            call __stack_chk_fail@PLT
.L_4192de:

            nop
            nop
.L_4192e0:

            test BYTE PTR [RIP+.L_63b3d8],1
            jne .L_4192f0

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4192f0:

            jmp .L_419060
.L_4192f5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419300:

            mov QWORD PTR [RIP+.L_63b3b8],RDI
            ret 
.L_419308:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419310:

            mov RAX,QWORD PTR [RIP+.L_63b3b8]
            ret 
.L_419318:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419320:

            test BYTE PTR [RIP+.L_63b3d8],1
            jne .L_419330

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419330:

            push R13
            push R12
            mov R12D,EDX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDI
            sub RSP,8
            call .L_419060

            test EAX,EAX
            jne .L_419360

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419360:

            mov EDI,3
            call .L_419100

            lea RSI,QWORD PTR [RIP+.L_419ada]
            mov EDX,397
            mov EDI,56
            call .L_418820

            test RAX,RAX
            mov R13,RAX
            je .L_4193ce

            cmp QWORD PTR [RIP+.L_63b3c0],0
            je .L_4193e8
.L_419392:

            mov RDI,R13
            call .L_4178f0

            mov RDI,QWORD PTR [RIP+.L_63b3c0]
            mov QWORD PTR [R13+16],RBP
            mov RSI,R13
            mov DWORD PTR [R13+24],R12D
            mov QWORD PTR [R13+32],RBX
            mov DWORD PTR [R13+48],1
            mov QWORD PTR [R13+40],0
            call .L_41d210

            test RAX,RAX
            je .L_4193ce

            mov QWORD PTR [R13+40],RAX
.L_4193ce:

            mov EDI,2
            call .L_419100

            add RSP,8
.L_4193dc:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4193e8:

            lea RSI,QWORD PTR [RIP+.L_418bb0]
            lea RDI,QWORD PTR [RIP+.L_418c00]
            call .L_41d040

            test RAX,RAX
            mov QWORD PTR [RIP+.L_63b3c0],RAX
            jne .L_419392

            mov RDI,R13
            call .L_418aa0

            jmp .L_4193ce
.L_419411:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419420:

            test BYTE PTR [RIP+.L_63b3d8],1
            push RBX
            jne .L_419430
.L_41942a:

            xor EBX,EBX
            mov EAX,EBX
            pop RBX
            ret 
.L_419430:

            call .L_419060

            test EAX,EAX
            je .L_41942a

            mov EDI,3
            xor EBX,EBX
            call .L_419100

            call .L_418c40

            test RAX,RAX
            mov EDI,2
            setne BL
            call .L_419100

            mov EAX,EBX
            pop RBX
            ret 
.L_41945e:

            nop
            nop
.L_419460:

            test BYTE PTR [RIP+.L_63b3d8],1
            push RBX
            jne .L_419470
.L_41946a:

            xor EBX,EBX
            mov EAX,EBX
            pop RBX
            ret 
.L_419470:

            call .L_419060

            test EAX,EAX
            je .L_41946a

            mov EDI,3
            xor EBX,EBX
            call .L_419100

            jmp .L_419493
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419490:

            add EBX,1
.L_419493:

            call .L_418c40

            test RAX,RAX
            jne .L_419490

            mov EDI,2
            call .L_419100

            mov EAX,EBX
            pop RBX
            ret 
.L_4194ab:

            nop
            nop
            nop
            nop
            nop
.L_4194b0:

            push R13
            push R12
            and R8D,127
            push RBP
            push RBX
            sub RSP,88
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp R8D,1
            jne .L_4194e5

            test RDI,RDI
            mov RBX,RDI
            je .L_4194e5

            test BYTE PTR [RIP+.L_63b3d8],1
            jne .L_419508
.L_4194e5:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_4196a0

            add RSP,88
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419508:

            mov EBP,ESI
            mov R12,RDX
            mov DWORD PTR [RSP+12],ECX
            call .L_419060

            test EAX,EAX
            je .L_4194e5

            mov EDI,3
            call .L_419100

            lea RSI,QWORD PTR [RIP+.L_419ada]
            mov EDX,481
            mov EDI,72
            call .L_418820

            test RAX,RAX
            mov R13,RAX
            mov ECX,DWORD PTR [RSP+12]
            je .L_41961b

            cmp QWORD PTR [RIP+.L_63b3c8],0
            je .L_419660
.L_419558:

            mov RAX,QWORD PTR [RIP+.L_63b3b8]
            mov QWORD PTR [R13],RBX
            lea RDI,QWORD PTR [R13+32]
            mov QWORD PTR [R13+16],R12
            mov DWORD PTR [R13+24],ECX
            mov DWORD PTR [R13+8],EBP
            test AL,2
            je .L_419638

            call .L_4178f0

            mov RAX,QWORD PTR [RIP+.L_63b3b8]
.L_419587:

            mov RDX,QWORD PTR [RIP+.L_63b3d0]
            test AL,1
            lea RCX,QWORD PTR [RDX+1]
            mov QWORD PTR [R13+48],RDX
            mov QWORD PTR [RIP+.L_63b3d0],RCX
            jne .L_419650

            mov QWORD PTR [R13+56],0
.L_4195ad:

            lea RBX,QWORD PTR [RSP+16]
            mov RDI,RBX
            call .L_4178f0

            mov RDI,QWORD PTR [RIP+.L_63b3c0]
            mov QWORD PTR [R13+64],0
            test RDI,RDI
            je .L_4195e3

            mov RSI,RBX
            call .L_41d580

            test RAX,RAX
            je .L_4195e3

            mov QWORD PTR [R13+64],RAX
            add DWORD PTR [RAX+48],1
.L_4195e3:

            mov RDI,QWORD PTR [RIP+.L_63b3c8]
            mov RSI,R13
            call .L_41d210

            test RAX,RAX
            je .L_41960c

            mov RDX,QWORD PTR [RAX+64]
            test RDX,RDX
            je .L_419604

            sub DWORD PTR [RDX+48],1
.L_419604:

            mov RDI,RAX
            call .L_418aa0
.L_41960c:

            mov EDI,2
            call .L_419100

            jmp .L_4194e5
.L_41961b:

            mov RDI,RBX
            call .L_418aa0

            mov EDI,2
            call .L_419100

            jmp .L_4194e5
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419638:

            pxor XMM0,XMM0
            movups XMMWORD PTR [R13+32],XMM0
            jmp .L_419587
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419650:

            xor EDI,EDI
            call time@PLT

            mov QWORD PTR [R13+56],RAX
            jmp .L_4195ad
.L_419660:

            lea RSI,QWORD PTR [RIP+.L_418b50]
            lea RDI,QWORD PTR [RIP+.L_418b60]
            mov DWORD PTR [RSP+12],ECX
            call .L_41d040

            test RAX,RAX
            mov QWORD PTR [RIP+.L_63b3c8],RAX
            mov ECX,DWORD PTR [RSP+12]
            jne .L_419558

            mov RDI,RBX
            call .L_418aa0

            mov RDI,R13
            call .L_418aa0

            jmp .L_41960c
.L_4196a0:

            call __stack_chk_fail@PLT
.L_4196a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4196b0:

            push RBX
            sub RSP,96
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            test ESI,ESI
            jne .L_4196da

            test RDI,RDI
            mov RBX,RDI
            je .L_4196da

            test BYTE PTR [RIP+.L_63b3d8],1
            jne .L_4196f0
.L_4196da:

            mov RAX,QWORD PTR [RSP+88]
            xor RAX,QWORD PTR FS:[40]
            jne .L_419754

            add RSP,96
            pop RBX
            ret 
.L_4196f0:

            call .L_419060

            test EAX,EAX
            je .L_4196da

            cmp QWORD PTR [RIP+.L_63b3c8],0
            je .L_4196da

            mov EDI,3
            call .L_419100

            mov RDI,QWORD PTR [RIP+.L_63b3c8]
            lea RSI,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+16],RBX
            call .L_41d410

            test RAX,RAX
            je .L_419748

            mov RDI,QWORD PTR [RAX+64]
            test RDI,RDI
            je .L_419740

            mov QWORD PTR [RSP+8],RAX
            call .L_418bc0

            mov RAX,QWORD PTR [RSP+8]
.L_419740:

            mov RDI,RAX
            call .L_418aa0
.L_419748:

            mov EDI,2
            call .L_419100

            jmp .L_4196da
.L_419754:

            call __stack_chk_fail@PLT
.L_419759:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419760:

            push R12
            push RBP
            push RBX
            sub RSP,80
.L_419768:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            cmp R9D,1
            jne .L_41979a

            test RSI,RSI
            mov RBX,RSI
            je .L_41979a

            test RDI,RDI
            mov RBP,RDI
            mov R12D,EDX
            je .L_419808

            test BYTE PTR [RIP+.L_63b3d8],1
            jne .L_4197b8
.L_41979a:

            mov RAX,QWORD PTR [RSP+72]
            xor RAX,QWORD PTR FS:[40]
            jne .L_419824

            add RSP,80
.L_4197ae:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4197b8:

            call .L_419060

            test EAX,EAX
            je .L_41979a

            mov EDI,3
            call .L_419100

            mov RDI,QWORD PTR [RIP+.L_63b3c8]
            mov RSI,RSP
            mov QWORD PTR [RSP],RBP
            call .L_41d410

            test RAX,RAX
            je .L_4197f9

            mov RDI,QWORD PTR [RIP+.L_63b3c8]
            mov QWORD PTR [RAX],RBX
            mov RSI,RAX
            mov DWORD PTR [RAX+8],R12D
            call .L_41d210
.L_4197f9:

            mov EDI,2
            call .L_419100

            jmp .L_41979a
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419808:

            mov RDX,RCX
            mov ESI,R12D
            mov ECX,R8D
            mov RDI,RBX
            mov R8D,129
            call .L_4194b0

            jmp .L_41979a
.L_419824:

            call __stack_chk_fail@PLT
.L_419829:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419830:

            push RBX
            mov RBX,RDI
            sub RSP,32
.L_419838:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp QWORD PTR [RIP+.L_63b3c8],0
            je .L_419960
.L_419856:

            mov EDI,3
            call .L_419100

            mov RDI,QWORD PTR [RIP+.L_63b3c8]
            mov QWORD PTR [RSP],RBX
            mov QWORD PTR [RSP+16],0
            mov DWORD PTR [RSP+8],0
            test RDI,RDI
            je .L_4198d8

            lea RSI,QWORD PTR [RIP+.L_419050]
            mov RDX,RSP
            call .L_41d660

            mov ECX,DWORD PTR [RSP+8]
            test ECX,ECX
            je .L_4198d8

            mov RDX,QWORD PTR [RSP+16]
            lea RSI,QWORD PTR [RIP+.L_419b10]
            mov RDI,RBX
            xor EAX,EAX
            call .L_414e50
.L_4198ae:

            mov EDI,2
            call .L_419100
.L_4198b8:

            mov RAX,QWORD PTR [RSP+24]
            xor RAX,QWORD PTR FS:[40]
            jne .L_419991

            add RSP,32
.L_4198d0:

            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4198d8:

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov EDI,9
            mov ECX,747
            mov ESI,20
            call .L_417ca0

            mov RDI,QWORD PTR [RIP+.L_63b3c8]
            mov EBX,DWORD PTR [RIP+.L_63b3d8]
            mov DWORD PTR [RIP+.L_63b3d8],0
            test RDI,RDI
            je .L_41991f

            call .L_41d1a0

            mov QWORD PTR [RIP+.L_63b3c8],0
.L_41991f:

            mov RDI,QWORD PTR [RIP+.L_63b3c0]
            test RDI,RDI
            je .L_419935

            call .L_41d6e0

            test RAX,RAX
            je .L_419978
.L_419935:

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov ECX,768
            mov ESI,20
            mov EDI,10
            mov DWORD PTR [RIP+.L_63b3d8],EBX
            call .L_417ca0

            jmp .L_4198ae
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419960:

            cmp QWORD PTR [RIP+.L_63b3c0],0
            jne .L_419856

            jmp .L_4198b8
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419978:

            mov RDI,QWORD PTR [RIP+.L_63b3c0]
            call .L_41d1a0

            mov QWORD PTR [RIP+.L_63b3c0],0
            jmp .L_419935
.L_419991:

            call __stack_chk_fail@PLT
.L_419996:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4199a0:

            cmp QWORD PTR [RIP+.L_63b3c8],0
            je .L_419a10

            push RBP
            push RBX
            mov RBX,RDI
            mov EDI,3
            sub RSP,8
.L_4199b8:

            call .L_419100

            call .L_413560

            mov RDI,RAX
            call .L_412310

            mov EDI,2
            mov RBP,RAX
            call .L_419100

            test RBP,RBP
            je .L_419a08

            mov RCX,RBX
            mov RDI,RBP
            xor EDX,EDX
            mov ESI,106
            call .L_412910

            mov RDI,RBP
            call .L_419830

            add RSP,8
.L_4199fa:

            mov RDI,RBP
            pop RBX
            pop RBP
            jmp .L_412390
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419a08:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0x90
.L_419a10:

            ret 
.L_419a12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419a20:

            sub RSP,24
.L_419a24:

            cmp QWORD PTR [RIP+.L_63b3c8],0
            mov QWORD PTR [RSP+8],RDI
            je .L_419a81

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov ECX,826
            mov ESI,27
            mov EDI,9
            call .L_417ca0

            mov RDI,QWORD PTR [RIP+.L_63b3c8]
            lea RDX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RIP+.L_418b90]
            call .L_41d660

            lea RDX,QWORD PTR [RIP+.L_419ada]
            mov ECX,829
            mov ESI,27
            mov EDI,10
            call .L_417ca0
.L_419a81:

            add RSP,24
.L_419a85:

            ret 
.L_419a86:
          .string "[%02d:%02d:%02d] "
.L_419a98:
          .string "%5lu file=%s, line=%d, "
.L_419ab0:
          .string "thread=%lu, "
.L_419abd:

            outsb DX,BYTE PTR [RSI]
            jne .L_419b2d
          .byte 0x62
          .byte 0x65
          .byte 0x72
          .byte 0x3d
          .byte 0x25
          .byte 0x64
          .byte 0x2c
          .byte 0x20
          .byte 0x61
          .byte 0x64
          .byte 0x64
          .byte 0x72
          .byte 0x65
          .byte 0x73
          .byte 0x73
          .byte 0x3d
          .byte 0x25
          .byte 0x30
          .byte 0x38
          .byte 0x6c
          .byte 0x58
          .byte 0xa
          .byte 0x0
.L_419ad7:
          .string "\"\n"
.L_419ada:
          .string "mem_dbg.c"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419ae8:
          .string " thread=%lu, file=%s, line=%d, info=\""
          .zero 2
.L_419b10:
          .byte 0x25
          .byte 0x6c
          .byte 0x64
          .byte 0x20
          .byte 0x62
          .byte 0x79
          .byte 0x74

            jae .L_419b3a
          .byte 0x6c
          .byte 0x65
          .byte 0x61
          .byte 0x6b
          .byte 0x65
          .byte 0x64
          .byte 0x20
          .byte 0x69
          .byte 0x6e
          .byte 0x20
          .byte 0x25
          .byte 0x64
          .byte 0x20
          .byte 0x63
          .byte 0x68
          .byte 0x75
          .byte 0x6e
          .byte 0x6b
          .byte 0x73
.L_419b2d:

            or AL,BYTE PTR [RAX]
            nop
.L_419b30:

            movsxd RAX,DWORD PTR [RDI]
            ret 
.L_419b34:
          .byte 0x66
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
.L_419b3a:

            test BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_419b40:

            mov EAX,DWORD PTR [RDI]
            sub EAX,DWORD PTR [RSI]
            ret 
.L_419b45:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419b50:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            sub RSP,8
.L_419b5b:

            mov ECX,201
            mov ESI,2
            mov EDI,9
            call .L_417ca0

            cmp QWORD PTR [RIP+.L_63b3e8],0
            jne .L_419b87

            lea RAX,QWORD PTR [RIP+.L_639740]
            mov QWORD PTR [RIP+.L_63b3e8],RAX
.L_419b87:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,204
            mov ESI,2
            mov EDI,10
            add RSP,8
.L_419ba1:

            jmp .L_417ca0
.L_419ba6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419bb0:

            push RBX

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,385
            mov ESI,2
            mov EDI,9
            call .L_417ca0

            mov EBX,DWORD PTR [RIP+.L_639738]
            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,387
            mov ESI,2
            mov EDI,10
            lea EAX,DWORD PTR [RBX+1]
            mov DWORD PTR [RIP+.L_639738],EAX
            call .L_417ca0

            mov EAX,EBX
            pop RBX

            ret 
.L_419bfa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_419c00:

            jmp .L_418aa0
.L_419c05:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419c10:

            push RBX
.L_419c11:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,278
            mov ESI,2
            mov EDI,9
            mov EBX,1
            call .L_417ca0

            cmp QWORD PTR [RIP+.L_63b3e0],0
            je .L_419c60
.L_419c3b:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,281
            mov ESI,2
            mov EDI,10
            call .L_417ca0

            mov EAX,EBX
            pop RBX
.L_419c59:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419c60:

            lea RSI,QWORD PTR [RIP+.L_419b40]
            lea RDI,QWORD PTR [RIP+.L_419b30]
            xor EBX,EBX
            call .L_41d040

            test RAX,RAX
            mov QWORD PTR [RIP+.L_63b3e0],RAX
            setne BL
            jmp .L_419c3b
.L_419c84:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419c90:

            push R12
            push RBP
            mov EBP,EDI
            push RBX
            sub RSP,32
.L_419c9a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp QWORD PTR [RIP+.L_63b3e0],0
            je .L_419d28
.L_419cb4:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,318
            mov ESI,2
            mov EDI,9
            mov DWORD PTR [RSP],EBP
            call .L_417ca0

            mov RDI,QWORD PTR [RIP+.L_63b3e0]
            mov RSI,RSP
            call .L_41d580

            test RAX,RAX
            mov RBX,RAX
            je .L_419d38
.L_419ce9:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,338
            mov ESI,2
            mov EDI,10
            call .L_417ca0
.L_419d04:

            mov RCX,QWORD PTR [RSP+24]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBX
            jne .L_419dd1

            add RSP,32
.L_419d1f:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_419d28:

            call .L_419c10

            test EAX,EAX
            jne .L_419cb4

            xor EBX,EBX
            jmp .L_419d04
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419d38:

            lea RSI,QWORD PTR [RIP+.L_41a881]
            mov EDX,321
            mov EDI,24
            call .L_418820

            test RAX,RAX
            mov R12,RAX
            je .L_419d90

            mov DWORD PTR [RAX],EBP
            mov DWORD PTR [RAX+16],0
            call .L_41c980

            test RAX,RAX
            mov QWORD PTR [R12+8],RAX
            je .L_419d88

            mov RDI,QWORD PTR [RIP+.L_63b3e0]
            mov RSI,R12
            mov RBX,R12
            call .L_41d210

            jmp .L_419ce9
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_419d88:

            mov RDI,R12
            call .L_418aa0
.L_419d90:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,338
            mov ESI,2
            mov EDI,10
            call .L_417ca0

            lea RCX,QWORD PTR [RIP+.L_41a881]
            mov R8D,340
            mov EDX,65
            mov ESI,105
            mov EDI,15
            call .L_416a00

            jmp .L_419d04
.L_419dd1:

            call __stack_chk_fail@PLT
.L_419dd6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419de0:

            sub RSP,8
            mov RDI,QWORD PTR [RIP+.L_63b3e0]
            test RDI,RDI
            je .L_419e28
.L_419df0:

            lea RSI,QWORD PTR [RIP+.L_419e40]
            call .L_41d5f0

            mov RDI,QWORD PTR [RIP+.L_63b3e0]
            call .L_41d1a0

            mov QWORD PTR [RIP+.L_63b3e0],0
            mov QWORD PTR [RIP+.L_63b3e8],0
.L_419e1e:

            add RSP,8
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_419e28:

            call .L_419c10

            test EAX,EAX
            je .L_419e1e

            mov RDI,QWORD PTR [RIP+.L_63b3e0]
            jmp .L_419df0
.L_419e3a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_419e40:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            lea RSI,QWORD PTR [RIP+.L_419c00]
            call .L_41cdc0

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
.L_419e5d:

            nop
            nop
            nop
.L_419e60:

            push R15
            push R14
            mov R15,RSI
            push R13
            push R12
            mov R14,RDX
            push RBP
            push RBX
            mov R13,RCX
            mov RBP,R9
            sub RSP,24
.L_419e7a:

            mov QWORD PTR [RSP+8],R8
            call .L_419c90

            test RAX,RAX
            je .L_419f90

            lea RSI,QWORD PTR [RIP+.L_41a881]
            mov EDX,354
            mov EDI,40
            mov R12,RAX
            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            je .L_419f97

            mov QWORD PTR [RAX],R15
            mov QWORD PTR [RAX+8],R14
            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov QWORD PTR [RAX+16],R13
            mov RAX,QWORD PTR [RSP+8]
            mov ECX,364
            mov QWORD PTR [RBX+24],RBP
            mov ESI,2
            mov EDI,9
            mov QWORD PTR [RBX+32],RAX
            call .L_417ca0

            jmp .L_419f00
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419ef0:

            mov RDI,QWORD PTR [R12+8]
            xor ESI,ESI
            call .L_41cb00

            test EAX,EAX
            je .L_419f60
.L_419f00:

            mov RDI,QWORD PTR [R12+8]
            call .L_41ce20

            mov EBP,DWORD PTR [R12+16]
            cmp EAX,EBP
            jle .L_419ef0

            lea EAX,DWORD PTR [RBP+1]
            mov RDI,QWORD PTR [R12+8]
            mov RDX,RBX
            mov ESI,EBP
            mov DWORD PTR [R12+16],EAX
            call .L_41ce60
.L_419f2a:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,375
            mov ESI,2
            mov EDI,10
            call .L_417ca0
.L_419f45:

            add RSP,24
.L_419f49:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_419f60:

            lea RCX,QWORD PTR [RIP+.L_41a881]
            mov R8D,367
            mov EDX,65
            mov ESI,104
            mov EDI,15
            mov EBP,4294967295
            call .L_416a00

            mov RDI,RBX
            call .L_418aa0

            jmp .L_419f2a
.L_419f90:

            mov EBP,4294967295
            jmp .L_419f45
.L_419f97:

            lea RCX,QWORD PTR [RIP+.L_41a881]
            mov R8D,356
            mov EDX,65
            mov ESI,104
            mov EDI,15
            mov EBP,4294967295
            call .L_416a00

            jmp .L_419f45
.L_419fbf:

            nop
.L_419fc0:

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            test RAX,RAX
            je .L_419fd0

            ret 
          .byte 0x66
          .byte 0x90
.L_419fd0:

            sub RSP,8
            call .L_419b50

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            add RSP,8
            ret 
.L_419fe5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_419ff0:

            push RBP
            push RBX
            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov RBP,RDI
            mov ECX,222
            mov ESI,2
            sub RSP,8
.L_41a00a:

            mov EDI,9
            xor EBX,EBX
            call .L_417ca0

            cmp QWORD PTR [RIP+.L_63b3e8],0
            jne .L_41a02c

            mov QWORD PTR [RIP+.L_63b3e8],RBP
            mov EBX,1
.L_41a02c:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,227
            mov ESI,2
            mov EDI,10
            call .L_417ca0

            add RSP,8
.L_41a04b:

            mov EAX,EBX
            pop RBX
            pop RBP
            ret 
.L_41a050:

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            test RAX,RAX
            je .L_41a060

            jmp QWORD PTR [RAX]
          .byte 0x66
          .byte 0x90
.L_41a060:

            sub RSP,8
            call .L_419b50

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            mov RAX,QWORD PTR [RAX]
            add RSP,8
            jmp RAX
.L_41a079:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a080:

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            test RAX,RAX
            je .L_41a090

            jmp QWORD PTR [RAX+8]
          .byte 0x90
.L_41a090:

            sub RSP,8
            call .L_419b50

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            mov RAX,QWORD PTR [RAX+8]
            add RSP,8
            jmp RAX
.L_41a0aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41a0b0:

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            test RAX,RAX
            je .L_41a0c0

            jmp QWORD PTR [RAX+16]
          .byte 0x90
.L_41a0c0:

            sub RSP,56
.L_41a0c4:

            mov QWORD PTR [RSP+40],R9
            mov QWORD PTR [RSP+32],R8
            mov QWORD PTR [RSP+24],RCX
            mov QWORD PTR [RSP+16],RDX
            mov QWORD PTR [RSP+8],RSI
            mov DWORD PTR [RSP+4],EDI
            call .L_419b50

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            mov R9,QWORD PTR [RSP+40]
            mov R8,QWORD PTR [RSP+32]
            mov RCX,QWORD PTR [RSP+24]
            mov RDX,QWORD PTR [RSP+16]
            mov RSI,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RSP+4]
            mov RAX,QWORD PTR [RAX+16]
            add RSP,56
.L_41a112:

            jmp RAX
.L_41a114:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a120:

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            test RAX,RAX
            je .L_41a130

            jmp QWORD PTR [RAX+24]
          .byte 0x90
.L_41a130:

            sub RSP,40
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+16],RSI
            mov DWORD PTR [RSP+12],EDI
            call .L_419b50

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,DWORD PTR [RSP+12]
            mov RAX,QWORD PTR [RAX+24]
            add RSP,40
            jmp RAX
.L_41a166:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a170:

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            test RAX,RAX
            je .L_41a180

            jmp QWORD PTR [RAX+32]

            nop
.L_41a180:

            sub RSP,40
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+16],RSI
            mov DWORD PTR [RSP+12],EDI
            call .L_419b50

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,DWORD PTR [RSP+12]
            mov RAX,QWORD PTR [RAX+32]
            add RSP,40
            jmp RAX
.L_41a1b6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a1c0:

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            test RAX,RAX
            je .L_41a1d0

            jmp QWORD PTR [RAX+40]

            nop
.L_41a1d0:

            sub RSP,40
            mov QWORD PTR [RSP+24],RDX
            mov QWORD PTR [RSP+16],RSI
            mov DWORD PTR [RSP+12],EDI
            call .L_419b50

            mov RAX,QWORD PTR [RIP+.L_63b3e8]
            mov RDX,QWORD PTR [RSP+24]
            mov RSI,QWORD PTR [RSP+16]
            mov EDI,DWORD PTR [RSP+12]
            mov RAX,QWORD PTR [RAX+40]
            add RSP,40
            jmp RAX
.L_41a206:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a210:

            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            mov RBP,RDI
            mov R12D,ESI
            sub RSP,24
.L_41a223:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_41a2b0
.L_41a22f:

            call .L_41ce20

            cmp EAX,R12D
            mov EBX,EAX
            jle .L_41a248

            jmp .L_41a290
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a240:

            add EBX,1
            cmp R12D,EBX
            jl .L_41a290
.L_41a248:

            mov RDI,QWORD PTR [RBP]
            xor ESI,ESI
            call .L_41cb00

            test EAX,EAX
            jne .L_41a240

            lea RCX,QWORD PTR [RIP+.L_41a881]
            mov R8D,623
            mov EDX,65
            mov ESI,102
            mov EDI,15
            mov DWORD PTR [RSP+12],EAX
            call .L_416a00

            mov EAX,DWORD PTR [RSP+12]
.L_41a280:

            add RSP,24
.L_41a284:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a290:

            mov RDI,QWORD PTR [RBP]
            mov RDX,R13
            mov ESI,R12D
            call .L_41ce60

            add RSP,24
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x90
.L_41a2b0:

            call .L_41c980

            test RAX,RAX
            mov RDI,RAX
            mov QWORD PTR [RBP],RAX
            jne .L_41a22f

            lea RCX,QWORD PTR [RIP+.L_41a881]
            mov R8D,615
            mov EDX,65
            mov ESI,102
            mov EDI,15
            call .L_416a00

            xor EAX,EAX
            jmp .L_41a280
.L_41a2ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41a2f0:

            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,8
            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_41a320

            mov EBP,ESI
            call .L_41ce20

            cmp EAX,EBP
            jle .L_41a320

            mov RDI,QWORD PTR [RBX]
            add RSP,8
            mov ESI,EBP
            pop RBX
            pop RBP
            jmp .L_41ce30
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a320:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
.L_41a329:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a330:

            cmp QWORD PTR [RIP+.L_63b3e0],0
            je .L_41a3d0

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R12,RDX
            push RBP
            push RBX
            sub RSP,8
.L_41a352:

            call .L_419c90

            test RAX,RAX
            mov RBX,RAX
            je .L_41a3ba

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,507
            mov ESI,2
            mov EDI,5
            call .L_417ca0

            mov RDI,QWORD PTR [RBX+8]
            call .L_41ce20

            test EAX,EAX
            mov EBP,EAX
            jg .L_41a3d8

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,517
            mov ESI,2
            mov EDI,6
            call .L_417ca0
.L_41a3a4:

            mov RDI,QWORD PTR [R12]
            test RDI,RDI
            je .L_41a3ba

            call .L_41cba0

            mov QWORD PTR [R12],0
.L_41a3ba:

            add RSP,8
.L_41a3be:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a3d0:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a3d8:

            lea EDI,DWORD PTR [RAX*8]
            lea RSI,QWORD PTR [RIP+.L_41a881]
            mov EDX,510
            call .L_418820

            test RAX,RAX
            mov R13,RAX
            je .L_41a4a0

            lea R15D,DWORD PTR [RBP-1]
            xor EBP,EBP
            add R15,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a410:

            mov RDI,QWORD PTR [RBX+8]
            mov ESI,EBP
            call .L_41ce30

            mov QWORD PTR [R13+RBP*8],RAX
            add RBP,1
            cmp R15,RBP
            jne .L_41a410

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,517
            mov ESI,2
            mov EDI,6
            xor EBX,EBX
            call .L_417ca0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a450:

            mov RAX,QWORD PTR [R13+RBX*8]
            test RAX,RAX
            je .L_41a486

            cmp QWORD PTR [RAX+24],0
            je .L_41a486

            mov ESI,EBX
            mov RDI,R12
            call .L_41a2f0

            mov R10,QWORD PTR [R13+RBX*8]
            mov ECX,EBX
            mov RDX,R12
            mov RSI,RAX
            mov RDI,R14
            mov R9,QWORD PTR [R10+8]
            mov R8,QWORD PTR [R10]
            call QWORD PTR [R10+24]
.L_41a486:

            add RBX,1
            cmp RBX,RBP
            jne .L_41a450

            mov RDI,R13
            call .L_418aa0

            jmp .L_41a3a4
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41a4a0:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,517
            mov ESI,2
            mov EDI,6
            call .L_417ca0

            add RSP,8
.L_41a4bf:

            lea RCX,QWORD PTR [RIP+.L_41a881]
            mov R8D,519
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            mov EDX,65
            mov ESI,107
            mov EDI,15
            jmp .L_416a00
.L_41a4ea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41a4f0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov EBP,1
            sub RSP,40
.L_41a503:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            cmp QWORD PTR [RDX],0
            je .L_41a590

            mov R12,RSI
            mov RBX,RDX
            xor EBP,EBP
            call .L_419c90

            test RAX,RAX
            mov R13,RAX
            je .L_41a590

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,466
            mov ESI,2
            mov EDI,5
            call .L_417ca0

            mov RDI,QWORD PTR [R13+8]
            call .L_41ce20

            mov RDI,QWORD PTR [RBX]
            mov R15D,EAX
            call .L_41ce20

            cmp R15D,EAX
            cmovg R15D,EAX
            test R15D,R15D
            jg .L_41a5b8

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,479
            mov ESI,2
            mov EDI,6
            mov EBP,1
            call .L_417ca0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a590:

            mov RDX,QWORD PTR [RSP+24]
            xor RDX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_41a6e1

            add RSP,40
.L_41a5aa:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41a5b8:

            lea EDI,DWORD PTR [R15*8]
            lea RSI,QWORD PTR [RIP+.L_41a881]
            mov EDX,472
            call .L_418820

            test RAX,RAX
            mov R14,RAX
            je .L_41a6a0

            sub R15D,1
            xor EBP,EBP
            add R15,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a5f0:

            mov RDI,QWORD PTR [R13+8]
            mov ESI,EBP
            call .L_41ce30

            mov QWORD PTR [R14+RBP*8],RAX
            add RBP,1
            cmp R15,RBP
            jne .L_41a5f0

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,479
            mov ESI,2
            mov EDI,6
            xor R15D,R15D
            call .L_417ca0

            lea RAX,QWORD PTR [RSP+16]
            mov QWORD PTR [RSP+8],RAX
.L_41a630:

            mov ESI,R15D
            mov RDI,RBX
            mov R13D,R15D
            call .L_41a2f0

            mov RCX,QWORD PTR [R14+R15*8]
            mov QWORD PTR [RSP+16],RAX
            test RCX,RCX
            je .L_41a672

            mov R11,QWORD PTR [RCX+32]
            test R11,R11
            je .L_41a672

            mov R9,QWORD PTR [RCX+8]
            mov R8,QWORD PTR [RCX]
            mov RSI,RBX
            mov ECX,R15D
            mov RDX,QWORD PTR [RSP+8]
            mov RDI,R12
            call R11

            mov RAX,QWORD PTR [RSP+16]
.L_41a672:

            mov RDX,RAX
            mov ESI,R13D
            mov RDI,R12
            add R15,1
            call .L_41a210

            cmp RBP,R15
            jne .L_41a630

            mov RDI,R14
            mov EBP,1
            call .L_418aa0

            jmp .L_41a590
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a6a0:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,479
            mov ESI,2
            mov EDI,6
            call .L_417ca0

            lea RCX,QWORD PTR [RIP+.L_41a881]
            mov R8D,481
            mov EDX,65
            mov ESI,106
            mov EDI,15
            call .L_416a00

            jmp .L_41a590
.L_41a6e1:

            call __stack_chk_fail@PLT
.L_41a6e6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41a6f0:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            mov R13,RDX
            push RBP
            push RBX
            xor EBP,EBP
            sub RSP,8
.L_41a706:

            call .L_419c90

            test RAX,RAX
            je .L_41a766

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov RBX,RAX
            mov ECX,426
            mov ESI,2
            mov EDI,5
            mov QWORD PTR [R13],0
            call .L_417ca0

            mov RDI,QWORD PTR [RBX+8]
            call .L_41ce20

            test EAX,EAX
            mov R15D,EAX
            jg .L_41a780

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,436
            mov ESI,2
            mov EDI,6
            mov EBP,1
            call .L_417ca0
.L_41a766:

            add RSP,8
.L_41a76a:

            mov EAX,EBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a780:

            lea EDI,DWORD PTR [RAX*8]
            lea RSI,QWORD PTR [RIP+.L_41a881]
            mov EDX,429
            call .L_418820

            test RAX,RAX
            mov R12,RAX
            je .L_41a840

            sub R15D,1
            xor EBP,EBP
            add R15,1
            nop
            nop
.L_41a7b0:

            mov RDI,QWORD PTR [RBX+8]
            mov ESI,EBP
            call .L_41ce30

            mov QWORD PTR [R12+RBP*8],RAX
            add RBP,1
            cmp R15,RBP
            jne .L_41a7b0

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,436
            mov ESI,2
            mov EDI,6
            xor EBX,EBX
            call .L_417ca0

            nop
            nop
            nop
.L_41a7e8:

            mov RAX,QWORD PTR [R12+RBX*8]
            test RAX,RAX
            je .L_41a81c

            cmp QWORD PTR [RAX+16],0
            je .L_41a81c

            mov ESI,EBX
            mov RDI,R13
            call .L_41a2f0

            mov R10,QWORD PTR [R12+RBX*8]
            mov ECX,EBX
            mov RDX,R13
            mov RSI,RAX
            mov RDI,R14
            mov R9,QWORD PTR [R10+8]
            mov R8,QWORD PTR [R10]
            call QWORD PTR [R10+16]
.L_41a81c:

            add RBX,1
            cmp RBX,RBP
            jne .L_41a7e8

            mov RDI,R12
            mov EBP,1
            call .L_418aa0

            jmp .L_41a766
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41a840:

            lea RDX,QWORD PTR [RIP+.L_41a881]
            mov ECX,436
            mov ESI,2
            mov EDI,6
            call .L_417ca0

            lea RCX,QWORD PTR [RIP+.L_41a881]
            mov R8D,438
            mov EDX,65
            mov ESI,108
            mov EDI,15
            call .L_416a00

            jmp .L_41a766
.L_41a881:

            js .L_41a8e3
          .byte 0x64
          .byte 0x61
          .byte 0x74
          .byte 0x61
          .byte 0x2e
          .byte 0x63
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a890:

            mov EAX,DWORD PTR [RIP+.L_63b3f0]
            test EAX,EAX
            jne .L_41a8a4

            mov DWORD PTR [RIP+.L_63b3f0],1
.L_41a8a4:

            ret 
.L_41a8a6:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            mov EAX,DWORD PTR [RDI]
.L_41a8b2:

            lea R8,QWORD PTR [RSI+RAX*1]
            lock cmpxchg DWORD PTR [RDI],R8D
            jne .L_41a8b2

            mov EAX,R8D
            cdqe 
            ret 
          .byte 0x66
          .byte 0x90
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            rdtsc 
            shl RDX,32
            or RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41a8e0:

            mov R8,RBX
.L_41a8e3:

            xor EAX,EAX
            mov DWORD PTR [RDI+8],EAX
            cpuid 
            mov R11D,EAX
            xor EAX,EAX
            cmp EBX,1970169159
            setne AL
            mov R9D,EAX
            cmp EDX,1231384169
            setne AL
            or R9D,EAX
            cmp ECX,1818588270
            setne AL
            or R9D,EAX
            je .L_41a9a0

            cmp EBX,1752462657
            setne AL
            mov R10D,EAX
            cmp EDX,1769238117
            setne AL
            or R10D,EAX
            cmp ECX,1145913699
            setne AL
            or R10D,EAX
            jne .L_41a9a0

            mov EAX,2147483648
            cpuid 
            cmp EAX,2147483649
            jb .L_41a9a0

            mov R10D,EAX
            mov EAX,2147483649
            cpuid 
            or R9D,ECX
            and R9D,2049
            cmp R10D,2147483656
            jb .L_41a9a0

            mov EAX,2147483656
            cpuid 
            movzx R10,CL
            inc R10
            mov EAX,1
            cpuid 
            bt EDX,28
            jae .L_41aa25

            shr EBX,16
            cmp BL,R10B
            ja .L_41aa25

            and EDX,4026531839
            jmp .L_41aa25
.L_41a9a0:

            cmp R11D,4
            mov R10D,4294967295
            jb .L_41a9d8

            mov EAX,4
            mov ECX,0
            cpuid 
            mov R10D,EAX
            shr R10D,14
            and R10D,4095
            cmp R11D,7
            jb .L_41a9d8

            mov EAX,7
            xor ECX,ECX
            cpuid 
            mov DWORD PTR [RDI+8],EBX
.L_41a9d8:

            mov EAX,1
            cpuid 
            and EDX,3220176895
            cmp R9D,0
            jne .L_41a9ff

            or EDX,1073741824
            and AH,15
            cmp AH,15
            jne .L_41a9ff

            or EDX,1048576
.L_41a9ff:

            bt EDX,28
            jae .L_41aa25

            and EDX,4026531839
            cmp R10D,0
            je .L_41aa25

            or EDX,268435456
            shr EBX,16
            cmp BL,1
            ja .L_41aa25

            and EDX,4026531839
.L_41aa25:

            and R9D,2048
            and ECX,4294965247
            or R9D,ECX
            mov R10D,EDX
            bt R9D,27
            jae .L_41aa4c

            xor ECX,ECX
            xgetbv 
            and EAX,6
            cmp EAX,6
            je .L_41aa58
.L_41aa4c:

            mov EAX,4026525695
            and R9D,EAX
            and DWORD PTR [RDI+8],4294967263
.L_41aa58:

            shl R9,32
            mov EAX,R10D
            mov RBX,R8
            or RAX,R9
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aa70:

            xor RAX,RAX
            cmp RSI,15
            jae .L_41aa90

            cmp RSI,0
            je .L_41aa8b
.L_41aa7f:

            mov BYTE PTR [RDI],AL
            sub RSI,1
            lea RDI,QWORD PTR [RDI+1]
            jne .L_41aa7f
.L_41aa8b:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41aa90:

            test RDI,7
            je .L_41aaa5

            mov BYTE PTR [RDI],AL
            lea RSI,QWORD PTR [RSI-1]
            lea RDI,QWORD PTR [RDI+1]
            jmp .L_41aa90
.L_41aaa5:

            mov QWORD PTR [RDI],RAX
            lea RSI,QWORD PTR [RSI-8]
            test RSI,-8
            lea RDI,QWORD PTR [RDI+8]
            jne .L_41aaa5

            cmp RSI,0
            jne .L_41aa7f

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            pxor XMM0,XMM0
            pxor XMM1,XMM1
            pxor XMM2,XMM2
            pxor XMM3,XMM3
            pxor XMM4,XMM4
            pxor XMM5,XMM5
            pxor XMM6,XMM6
            pxor XMM7,XMM7
            pxor XMM8,XMM8
            pxor XMM9,XMM9
            pxor XMM10,XMM10
            pxor XMM11,XMM11
            pxor XMM12,XMM12
            pxor XMM13,XMM13
            pxor XMM14,XMM14
            pxor XMM15,XMM15
            xor RCX,RCX
            xor RDX,RDX
            xor RSI,RSI
            xor RDI,RDI
            xor R8,R8
            xor R9,R9
            xor R10,R10
            xor R11,R11
            lea RAX,QWORD PTR [RSP+8]
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            mov ECX,8
.L_41ab45:

            rdrand RAX
            jb .L_41ab4d

            loop .L_41ab45
.L_41ab4d:

            cmp RAX,0
            cmove RAX,RCX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0

            mov ECX,8
.L_41ab65:

            rdseed RAX
            jb .L_41ab6d

            loop .L_41ab65
.L_41ab6d:

            cmp RAX,0
            cmove RAX,RCX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ab80:

            push R14
            push R13
            mov R14,RDI
            push R12
            push RBP
            mov R13,RSI
            push RBX
            sub RSP,16
.L_41ab92:

            mov EBP,DWORD PTR [RSI+8]
            mov EBX,DWORD PTR [RDX+8]
            cmp EBP,EBX
            jge .L_41aba8

            mov EAX,EBP
            mov R13,RDX
            mov EBP,EBX
            mov RDX,RSI
            mov EBX,EAX
.L_41aba8:

            cmp DWORD PTR [R14+12],EBP
            jle .L_41aca8
.L_41abb2:

            mov R13,QWORD PTR [R13]
            mov R12D,EBP
            mov DWORD PTR [R14+8],EBP
            mov RBP,QWORD PTR [R14]
            mov RDX,QWORD PTR [RDX]
            mov ECX,EBX
            sub R12D,EBX
            mov RSI,R13
            mov RDI,RBP
            call .L_409230

            movsxd RSI,EBX
            shl RSI,3
            lea RDI,QWORD PTR [RBP+RSI*1]
            add RSI,R13
            test RAX,RAX
            je .L_41ac70

            test R12D,R12D
            je .L_41ace0

            mov RAX,QWORD PTR [RSI]
            sub R12D,1
            lea RCX,QWORD PTR [RSI+8]
            lea RDX,QWORD PTR [RDI+8]
            add RAX,1
            test RAX,RAX
            mov QWORD PTR [RDI],RAX
            je .L_41ac35

            jmp .L_41ac60
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ac18:

            add RCX,8
            mov RAX,QWORD PTR [RCX-8]
            add RDX,8
            sub R12D,1
            add RAX,1
            test RAX,RAX
            mov QWORD PTR [RDX-8],RAX
            jne .L_41ac60
.L_41ac35:

            test R12D,R12D
            jne .L_41ac18
.L_41ac3a:

            mov QWORD PTR [RDX],1
            add DWORD PTR [R14+8],1
.L_41ac46:

            mov DWORD PTR [R14+16],0
            add RSP,16
.L_41ac52:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41ac60:

            mov RDI,RDX
            mov RSI,RCX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ac70:

            cmp RSI,RDI
            je .L_41ac46

            test R12D,R12D
            je .L_41ac46

            lea EAX,DWORD PTR [R12-1]
            lea RCX,QWORD PTR [RAX*8+8]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ac90:

            mov RDX,QWORD PTR [RSI+RAX*1]
            mov QWORD PTR [RDI+RAX*1],RDX
            add RAX,8
            cmp RCX,RAX
            jne .L_41ac90

            jmp .L_41ac46
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41aca8:

            lea ESI,DWORD PTR [RBP+1]
            mov RDI,R14
            mov QWORD PTR [RSP+8],RDX
            call .L_404630

            mov RCX,RAX
            xor EAX,EAX
            mov RDX,QWORD PTR [RSP+8]
            test RCX,RCX
            jne .L_41abb2

            add RSP,16
.L_41accf:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ace0:

            mov RDX,RDI
            jmp .L_41ac3a
.L_41ace8:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41acf0:

            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,16
.L_41acfc:

            mov EBX,DWORD PTR [RSI+8]
            mov EBP,DWORD PTR [RDX+8]
            mov R13D,EBX
            sub R13D,EBP
            js .L_41af00

            cmp DWORD PTR [RDI+12],EBX
            mov R12,RDI
            mov R14,RSI
            jl .L_41ae30
.L_41ad1d:

            mov RDI,QWORD PTR [R12]
            test EBP,EBP
            mov RCX,QWORD PTR [R14]
            mov R10,QWORD PTR [RDX]
            mov RAX,RDI
            je .L_41ae60

            lea EAX,DWORD PTR [RBP-1]
            xor R8D,R8D
            mov RBP,RAX
            lea R9,QWORD PTR [RAX*8+8]
            xor EAX,EAX
            jmp .L_41ad6e
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ad50:

            xor R8D,R8D
            cmp RDX,RSI
            setbe R8B
            sub RDX,1
            sub RDX,RSI
            mov QWORD PTR [RDI+RAX*1],RDX
            add RAX,8
            cmp RAX,R9
            je .L_41ad95
.L_41ad6e:

            test R8D,R8D
            mov RDX,QWORD PTR [RCX+RAX*1]
            mov RSI,QWORD PTR [R10+RAX*1]
            jne .L_41ad50

            xor R8D,R8D
            cmp RDX,RSI
            setb R8B
            sub RDX,RSI
            mov QWORD PTR [RDI+RAX*1],RDX
            add RAX,8
            cmp RAX,R9
            jne .L_41ad6e
.L_41ad95:

            lea RAX,QWORD PTR [RBP*8+8]
            add RCX,RAX
            add RAX,RDI
            test R8D,R8D
            je .L_41ae60

            test R13D,R13D
            je .L_41ae4a

            nop
            nop
            nop
.L_41adb8:

            add RCX,8
            mov RDX,QWORD PTR [RCX-8]
            add RAX,8
            sub R13D,1
            lea RSI,QWORD PTR [RDX-1]
            test RDX,RDX
            mov QWORD PTR [RAX-8],RSI
            jne .L_41ae60

            test R13D,R13D
            jne .L_41adb8

            nop
            nop
.L_41ade0:

            test EBX,EBX
            mov DWORD PTR [R12+8],EBX
            mov DWORD PTR [R12+16],0
            jle .L_41ae15

            movsxd RAX,EBX
            lea RAX,QWORD PTR [RDI+RAX*8-8]
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ae00:

            sub RAX,8
            cmp QWORD PTR [RAX+8],0
            jne .L_41ae10

            sub EBX,1
            jne .L_41ae00
.L_41ae10:

            mov DWORD PTR [R12+8],EBX
.L_41ae15:

            add RSP,16
.L_41ae19:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ae30:

            mov ESI,EBX
            mov QWORD PTR [RSP+8],RDX
            call .L_404630

            test RAX,RAX
            mov RDX,QWORD PTR [RSP+8]
            jne .L_41ad1d
.L_41ae4a:

            add RSP,16
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ae60:

            cmp RCX,RAX
            je .L_41ade0

            test R13D,R13D
            je .L_41ade0

            mov RDX,QWORD PTR [RCX]
            cmp R13D,1
            mov QWORD PTR [RAX],RDX
            je .L_41ade0

            mov RDX,QWORD PTR [RCX+8]
            cmp R13D,2
            mov QWORD PTR [RAX+8],RDX
            je .L_41ade0

            mov RDX,QWORD PTR [RCX+16]
            cmp R13D,3
            mov QWORD PTR [RAX+16],RDX
            lea EDX,DWORD PTR [R13-4]
            jne .L_41aee4

            jmp .L_41ade0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41aeb0:

            mov RSI,QWORD PTR [RCX]
            cmp EDX,1
            mov QWORD PTR [RAX],RSI
            je .L_41ade0

            mov RSI,QWORD PTR [RCX+8]
            cmp EDX,2
            mov QWORD PTR [RAX+8],RSI
            je .L_41ade0

            mov RSI,QWORD PTR [RCX+16]
            sub EDX,4
            cmp EDX,-1
            mov QWORD PTR [RAX+16],RSI
            je .L_41ade0
.L_41aee4:

            mov RSI,QWORD PTR [RCX+24]
            add RAX,32
            add RCX,32
            mov QWORD PTR [RAX-8],RSI
            test EDX,EDX
            jne .L_41aeb0

            jmp .L_41ade0
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41af00:

            lea RCX,QWORD PTR [RIP+.L_41b119]
            mov R8D,183
            mov EDX,100
            mov ESI,115
            mov EDI,3
            call .L_416a00

            add RSP,16
.L_41af25:

            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41af30:

            push R13
            push R12
            mov R13,RDI
            push RBP
            push RBX
            mov RBP,RDX
            mov RBX,RSI
            sub RSP,8
            mov R12D,DWORD PTR [RSI+16]
            cmp DWORD PTR [RDX+16],R12D
            je .L_41aff0

            test R12D,R12D
            jne .L_41af88

            mov RSI,RBP
            mov RDI,RBX
            call .L_404b00

            test EAX,EAX
            js .L_41af9d
.L_41af65:

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R13
            call .L_41acf0

            test EAX,EAX
            jne .L_41afd0
.L_41af77:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41af88:

            mov RBX,RDX
            mov RBP,RSI
            mov RSI,RBP
            mov RDI,RBX
            call .L_404b00

            test EAX,EAX
            jns .L_41af65
.L_41af9d:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R13
            call .L_41acf0

            test EAX,EAX
            je .L_41af77

            mov DWORD PTR [R13+16],1
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41afd0:

            mov DWORD PTR [R13+16],0
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41aff0:

            call .L_41ab80

            mov DWORD PTR [R13+16],R12D
            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_41b004:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b010:

            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            mov RBX,RDX
            mov RBP,RSI
            sub RSP,8
            mov EAX,DWORD PTR [RDX+16]
            mov EDX,DWORD PTR [RSI+16]
            test EDX,EDX
            je .L_41b060

            test EAX,EAX
            mov R13D,1
            jne .L_41b070
.L_41b037:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_41ab80

            test EAX,EAX
            jne .L_41b0d8
.L_41b04d:

            xor EAX,EAX
.L_41b04f:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b060:

            test EAX,EAX
            je .L_41b076

            xor R13D,R13D
            jmp .L_41b037
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b070:

            mov RBP,RBX
            mov RBX,RSI
.L_41b076:

            mov ESI,DWORD PTR [RBP+8]
            cmp DWORD PTR [RBX+8],ESI
            cmovge ESI,DWORD PTR [RBX+8]
            cmp DWORD PTR [R12+12],ESI
            jl .L_41b0c0
.L_41b087:

            mov RSI,RBX
            mov RDI,RBP
            call .L_404b00

            test EAX,EAX
            js .L_41b0f0

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,R12
            call .L_41acf0

            test EAX,EAX
            je .L_41b04d

            mov DWORD PTR [R12+16],0
            mov EAX,1
            jmp .L_41b04f
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b0c0:

            mov RDI,R12
            call .L_404630

            test RAX,RAX
            je .L_41b04d

            jmp .L_41b087
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b0d8:

            mov DWORD PTR [R12+16],R13D
            add RSP,8
.L_41b0e1:

            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b0f0:

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,R12
            call .L_41acf0

            test EAX,EAX
            je .L_41b04d

            mov DWORD PTR [R12+16],1
            mov EAX,1
            jmp .L_41b04f
.L_41b119:
          .string "bn_add.c"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b130:

            push R15
            push R14
            mov R15,RDI
            push R13
            push R12
            mov R14,RCX
            push RBP
            push RBX
            mov RBP,RSI
            mov RBX,RDX
            mov R12,R8
            sub RSP,136
.L_41b150:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RAX
            xor EAX,EAX
            movsxd RAX,DWORD PTR [RDX+8]
            test EAX,EAX
            jle .L_41b177

            mov RDX,QWORD PTR [RDX]
            cmp QWORD PTR [RDX+RAX*8-8],0
            je .L_41b240
.L_41b177:

            movsxd RAX,DWORD PTR [R14+8]
            test EAX,EAX
            jle .L_41b290

            mov RDX,QWORD PTR [R14]
            cmp QWORD PTR [RDX+RAX*8-8],0
            je .L_41b240

            test BYTE PTR [RBX+20],4
            je .L_41b2d8
.L_41b19c:

            mov DWORD PTR [RSP+24],1
.L_41b1a4:

            mov RDI,R12
            call .L_405420

            mov RDI,R12
            call .L_4055b0

            mov RDI,R12
            mov R13,RAX
            call .L_4055b0

            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            call .L_4055b0

            test R15,R15
            mov R10,RAX
            je .L_41b340
.L_41b1d8:

            test R10,R10
            mov QWORD PTR [RSP+16],R10
            je .L_41b230

            test R15,R15
            je .L_41b230

            test R13,R13
            je .L_41b230

            cmp QWORD PTR [RSP+8],0
            je .L_41b230

            mov RDI,R14
            call .L_404490

            cdq 
            mov R10,QWORD PTR [RSP+16]
            mov RSI,R14
            shr EDX,26
            add EAX,EDX
            and EAX,63
            mov RDI,R10
            sub EAX,EDX
            mov EDX,64
            sub EDX,EAX
            mov DWORD PTR [RSP+28],EAX
            call .L_4082f0

            test EAX,EAX
            mov R10,QWORD PTR [RSP+16]
            jne .L_41b360

            nop
.L_41b230:

            mov RDI,R12
            call .L_405530

            xor EAX,EAX
            jmp .L_41b263
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b240:

            lea RCX,QWORD PTR [RIP+.L_41b8b9]
            mov R8D,207
            mov EDX,107
            mov ESI,107
            mov EDI,3
            call .L_416a00

            xor EAX,EAX
.L_41b263:

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41b86d

            add RSP,136
.L_41b27e:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b290:

            test BYTE PTR [RBX+20],4
            je .L_41b2c8
.L_41b296:

            test EAX,EAX
            jne .L_41b19c
.L_41b29e:

            lea RCX,QWORD PTR [RIP+.L_41b8b9]
            mov R8D,229
            mov EDX,103
            mov ESI,107
            mov EDI,3
            call .L_416a00

            xor EAX,EAX
            jmp .L_41b263
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b2c8:

            test BYTE PTR [R14+20],4
            jne .L_41b296

            test EAX,EAX
            je .L_41b29e

            jmp .L_41b2e3
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41b2d8:

            test BYTE PTR [R14+20],4
            jne .L_41b19c
.L_41b2e3:

            mov RSI,R14
            mov RDI,RBX
            call .L_404b00

            test EAX,EAX
            mov DWORD PTR [RSP+24],0
            jns .L_41b1a4

            test RBP,RBP
            je .L_41b31c

            mov RSI,RBX
            mov RDI,RBP
            call .L_404650

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_41b263
.L_41b31c:

            test R15,R15
            je .L_41b640

            xor ESI,ESI
            mov RDI,R15
            call .L_4048e0

            mov EAX,1
            jmp .L_41b263
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b340:

            mov RDI,R12
            mov QWORD PTR [RSP+16],RAX
            call .L_4055b0

            mov R10,QWORD PTR [RSP+16]
            mov R15,RAX
            jmp .L_41b1d8
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41b360:

            mov EAX,128
            sub EAX,DWORD PTR [RSP+28]
            mov RDI,QWORD PTR [RSP+8]
            mov DWORD PTR [R10+16],0
            mov RSI,RBX
            mov QWORD PTR [RSP+32],R10
            mov EDX,EAX
            mov DWORD PTR [RSP+28],EAX
            call .L_4082f0

            test EAX,EAX
            je .L_41b230

            mov RAX,QWORD PTR [RSP+8]
            mov EDI,DWORD PTR [RSP+24]
            mov R10,QWORD PTR [RSP+32]
            mov ESI,DWORD PTR [RAX+8]
            test EDI,EDI
            mov DWORD PTR [RAX+16],0
            mov R8D,DWORD PTR [R10+8]
            mov DWORD PTR [RSP+16],ESI
            mov RSI,RAX
            mov EAX,DWORD PTR [RAX+12]
            jne .L_41b64a

            mov RDX,QWORD PTR [RSI]
.L_41b3c2:

            mov R11D,DWORD PTR [RSP+16]
            xor R9D,R9D
            mov DWORD PTR [RSP+112],0
            mov DWORD PTR [RSP+104],R8D
            sub R11D,R8D
            movsxd RSI,R11D
            sub EAX,R11D
            lea RCX,QWORD PTR [RSI*8]
            mov DWORD PTR [RSP+108],EAX
            add RDX,RCX
            cmp R8D,1
            mov QWORD PTR [RSP+96],RDX
            movsxd RDX,R8D
            mov RAX,QWORD PTR [R10]
            lea RSI,QWORD PTR [RDX*8]
            mov RDI,QWORD PTR [RAX+RSI*1-8]
            mov QWORD PTR [RSP+32],RSI
            mov QWORD PTR [RSP+64],RDI
            je .L_41b41c

            mov R9,QWORD PTR [RAX+RSI*1-16]
.L_41b41c:

            mov RAX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RAX]
            mov QWORD PTR [RSP+40],RAX
            mov EAX,DWORD PTR [RBX+16]
            xor EAX,DWORD PTR [R14+16]
            cmp DWORD PTR [R15+12],R11D
            mov DWORD PTR [R15+16],EAX
            jle .L_41b6fc
.L_41b43e:

            mov EAX,R11D
            sub EAX,DWORD PTR [RSP+24]
            cmp DWORD PTR [R13+12],R8D
            mov R14,QWORD PTR [R15]
            mov DWORD PTR [R15+8],EAX
            jle .L_41b750
.L_41b456:

            mov ESI,DWORD PTR [RSP+24]
            lea RAX,QWORD PTR [R14+RCX*1-8]
            mov QWORD PTR [RSP+72],RAX
            test ESI,ESI
            je .L_41b82a
.L_41b46c:

            mov ECX,DWORD PTR [R15+8]
            test ECX,ECX
            jne .L_41b7a0

            mov DWORD PTR [R15+16],0
.L_41b480:

            cmp R11D,1
            jle .L_41b5ae

            movsxd RDI,DWORD PTR [RSP+16]
            mov RAX,QWORD PTR [RSP+40]
            mov QWORD PTR [RSP+80],R15
            mov QWORD PTR [RSP+88],RBX
            mov R15,QWORD PTR [RSP+64]
            mov RBX,QWORD PTR [RSP+72]
            mov QWORD PTR [RSP+16],R10
            mov QWORD PTR [RSP+72],R12
            lea R14,QWORD PTR [RAX+RDI*8-8]
            lea EAX,DWORD PTR [R8+1]
            mov DWORD PTR [RSP+40],R8D
            mov QWORD PTR [RSP+64],RBP
            mov DWORD PTR [RSP+56],EAX
            lea EAX,DWORD PTR [R11-2]
            mov R12,R14
            not RAX
            lea RAX,QWORD PTR [R14+RAX*8]
            mov R14,R9
            mov QWORD PTR [RSP+48],RAX
            nop
.L_41b4e0:

            mov RDX,QWORD PTR [R12]
            mov RBP,-1
            cmp R15,RDX
            je .L_41b538

            mov RAX,QWORD PTR [R12-8]
            div R15
            mov RCX,RDX
            mov RBP,RAX
            mov RAX,R14
            mul RBP
            cmp RCX,RDX
            mov RSI,RDX
            jbe .L_41b528

            jmp .L_41b538
          .byte 0x66
          .byte 0x90
.L_41b510:

            sub RBP,1
            add RCX,R15
            jb .L_41b538

            cmp RAX,R14
            sbb RSI,0
            sub RAX,R14
            cmp RSI,RCX
            jb .L_41b538
.L_41b528:

            cmp RSI,RCX
            jne .L_41b510

            cmp QWORD PTR [R12-16],RAX
            jb .L_41b510

            nop
            nop
            nop
            nop
.L_41b538:

            mov RAX,QWORD PTR [RSP+16]
            mov EDX,DWORD PTR [RSP+40]
            mov RCX,RBP
            mov RDI,QWORD PTR [R13]
            mov RSI,QWORD PTR [RAX]
            call .L_4090a0

            mov RDX,QWORD PTR [R13]
            mov RSI,QWORD PTR [RSP+32]
            mov ECX,DWORD PTR [RSP+56]
            mov QWORD PTR [RDX+RSI*1],RAX
            mov RAX,QWORD PTR [RSP+96]
            lea RDI,QWORD PTR [RAX-8]
            mov QWORD PTR [RSP+96],RDI
            mov RDX,QWORD PTR [R13]
            mov RSI,RDI
            call .L_409260

            test RAX,RAX
            jne .L_41b698
.L_41b584:

            mov QWORD PTR [RBX],RBP
            sub R12,8
            sub RBX,8
            cmp QWORD PTR [RSP+48],R12
            jne .L_41b4e0

            mov R15,QWORD PTR [RSP+80]
            mov RBP,QWORD PTR [RSP+64]
            mov RBX,QWORD PTR [RSP+88]
            mov R12,QWORD PTR [RSP+72]
.L_41b5ae:

            mov RSI,QWORD PTR [RSP+8]
            mov EAX,DWORD PTR [RSI+8]
            test EAX,EAX
            jle .L_41b5dd

            mov RCX,QWORD PTR [RSI]
            movsxd RDX,EAX
            lea RDX,QWORD PTR [RCX+RDX*8-8]
.L_41b5c5:

            sub RDX,8
            cmp QWORD PTR [RDX+8],0
            jne .L_41b5d5

            sub EAX,1
            jne .L_41b5c5
.L_41b5d5:

            mov RSI,QWORD PTR [RSP+8]
            mov DWORD PTR [RSI+8],EAX
.L_41b5dd:

            test RBP,RBP
            je .L_41b600

            mov EDX,DWORD PTR [RSP+28]
            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBP
            mov EBX,DWORD PTR [RBX+16]
            call .L_4084d0

            mov EDX,DWORD PTR [RBP+8]
            test EDX,EDX
            je .L_41b600

            mov DWORD PTR [RBP+16],EBX
.L_41b600:

            mov EAX,DWORD PTR [RSP+24]
            test EAX,EAX
            je .L_41b62f

            mov EAX,DWORD PTR [R15+8]
            test EAX,EAX
            jle .L_41b62f

            mov RCX,QWORD PTR [R15]
            movsxd RDX,EAX
            lea RDX,QWORD PTR [RCX+RDX*8-8]
.L_41b61b:

            sub RDX,8
            cmp QWORD PTR [RDX+8],0
            jne .L_41b62b

            sub EAX,1
            jne .L_41b61b
.L_41b62b:

            mov DWORD PTR [R15+8],EAX
.L_41b62f:

            mov RDI,R12
            call .L_405530

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41b640:

            mov EAX,1
            jmp .L_41b263
.L_41b64a:

            lea R11D,DWORD PTR [R8+1]
            cmp R11D,DWORD PTR [RSP+16]
            jl .L_41b6c8

            cmp R11D,EAX
            lea ESI,DWORD PTR [R8+2]
            jge .L_41b7df

            mov RCX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RCX]
.L_41b66a:

            movsxd RDI,DWORD PTR [RSP+16]
            mov RDX,RCX
.L_41b672:

            mov QWORD PTR [RCX+RDI*8],0
            add RDI,1
            cmp R11D,EDI
            jge .L_41b672
.L_41b683:

            mov RCX,QWORD PTR [RSP+8]
            mov DWORD PTR [RSP+16],ESI
            mov DWORD PTR [RCX+8],ESI
            mov R8D,DWORD PTR [R10+8]
            jmp .L_41b3c2
.L_41b698:

            mov RAX,QWORD PTR [RSP+16]
            mov RDI,QWORD PTR [RSP+96]
            sub RBP,1
            mov ECX,DWORD PTR [RSP+40]
            mov RDX,QWORD PTR [RAX]
            mov RSI,RDI
            call .L_409230

            test RAX,RAX
            je .L_41b584

            add QWORD PTR [R12],1
            jmp .L_41b584
.L_41b6c8:

            mov ECX,DWORD PTR [RSP+16]
            cmp ECX,EAX
            lea ESI,DWORD PTR [RCX+1]
            jge .L_41b7ab
.L_41b6d7:

            mov RCX,QWORD PTR [RSP+8]
            movsxd RDI,DWORD PTR [RSP+16]
            mov DWORD PTR [RSP+16],ESI
            mov RDX,QWORD PTR [RCX]
            mov QWORD PTR [RDX+RDI*8],0
            mov DWORD PTR [RCX+8],ESI
            mov R8D,DWORD PTR [R10+8]
            jmp .L_41b3c2
.L_41b6fc:

            lea ESI,DWORD PTR [R11+1]
            mov RDI,R15
            mov DWORD PTR [RSP+88],R8D
            mov QWORD PTR [RSP+80],R10
            mov QWORD PTR [RSP+72],R9
            mov QWORD PTR [RSP+56],RCX
            mov DWORD PTR [RSP+48],R11D
            call .L_404630

            test RAX,RAX
            mov R11D,DWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+72]
            mov R10,QWORD PTR [RSP+80]
            mov R8D,DWORD PTR [RSP+88]
            je .L_41b230

            jmp .L_41b43e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41b750:

            lea ESI,DWORD PTR [R8+1]
            mov RDI,R13
            mov DWORD PTR [RSP+88],R11D
            mov QWORD PTR [RSP+80],R10
            mov QWORD PTR [RSP+72],R9
            mov QWORD PTR [RSP+56],RCX
            mov DWORD PTR [RSP+48],R8D
            call .L_404630

            test RAX,RAX
            mov R8D,DWORD PTR [RSP+48]
            mov RCX,QWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+72]
            mov R10,QWORD PTR [RSP+80]
            mov R11D,DWORD PTR [RSP+88]
            je .L_41b230

            jmp .L_41b456
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b7a0:

            sub QWORD PTR [RSP+72],8
            jmp .L_41b480
.L_41b7ab:

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],R10
            call .L_404630

            test RAX,RAX
            mov R10,QWORD PTR [RSP+16]
            je .L_41b230

            mov RAX,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [RAX+8]
            mov EAX,DWORD PTR [RAX+12]
            mov DWORD PTR [RSP+16],ESI
            add ESI,1
            jmp .L_41b6d7
.L_41b7df:

            mov RDI,QWORD PTR [RSP+8]
            mov QWORD PTR [RSP+16],R10
            call .L_404630

            test RAX,RAX
            mov R10,QWORD PTR [RSP+16]
            je .L_41b230

            mov RAX,QWORD PTR [RSP+8]
            mov ESI,DWORD PTR [R10+8]
            mov EDI,DWORD PTR [RAX+8]
            lea R11D,DWORD PTR [RSI+1]
            mov RCX,QWORD PTR [RAX]
            add ESI,2
            mov EAX,DWORD PTR [RAX+12]
            cmp EDI,R11D
            mov DWORD PTR [RSP+16],EDI
            mov RDX,RCX
            jg .L_41b683

            jmp .L_41b66a
.L_41b82a:

            lea RDI,QWORD PTR [RSP+96]
            mov RSI,R10
            mov DWORD PTR [RSP+88],R8D
            mov DWORD PTR [RSP+80],R11D
            mov QWORD PTR [RSP+56],R9
            mov QWORD PTR [RSP+48],R10
            call .L_404b00

            test EAX,EAX
            mov R10,QWORD PTR [RSP+48]
            mov R9,QWORD PTR [RSP+56]
            mov R11D,DWORD PTR [RSP+80]
            mov R8D,DWORD PTR [RSP+88]
            jns .L_41b872

            sub DWORD PTR [R15+8],1
            jmp .L_41b46c
.L_41b86d:

            call __stack_chk_fail@PLT
.L_41b872:

            mov RDI,QWORD PTR [RSP+96]
            mov RDX,QWORD PTR [R10]
            mov ECX,R8D
            mov DWORD PTR [RSP+88],R11D
            mov QWORD PTR [RSP+80],R9
            mov DWORD PTR [RSP+56],R8D
            mov RSI,RDI
            call .L_409260

            mov RAX,QWORD PTR [RSP+72]
            mov R10,QWORD PTR [RSP+48]
            mov R8D,DWORD PTR [RSP+56]
            mov R9,QWORD PTR [RSP+80]
            mov R11D,DWORD PTR [RSP+88]
            mov QWORD PTR [RAX],1
            jmp .L_41b46c
.L_41b8b9:
          .string "bn_div.c"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41b8d0:

            push R15
            push R14
            mov R14,RDI
            push R13
            push R12
            mov RDI,RCX
            push RBP
            push RBX
            mov R12,RCX
            mov R13,RSI
            mov R15,RDX
            sub RSP,8
.L_41b8ed:

            call .L_405420

            mov RDI,R12
            call .L_4055b0

            mov RDI,R12
            mov RBX,RAX
            call .L_4055b0

            test RBX,RBX
            je .L_41b9e0

            test RAX,RAX
            mov RBP,RAX
            je .L_41b9e0

            mov RSI,R13
            mov RDI,RBX
            call .L_404650

            test RAX,RAX
            je .L_41b9e0

            mov RSI,R15
            mov RDI,RBP
            call .L_404650

            test RAX,RAX
            je .L_41b9e0

            mov DWORD PTR [RBX+16],0
            mov RSI,RBP
            mov DWORD PTR [RBP+16],0
            mov RDI,RBX
            call .L_404b70

            test EAX,EAX
            jns .L_41b968

            mov RAX,RBX
            mov RBX,RBP
            mov RBP,RAX
.L_41b968:

            xor R13D,R13D
            nop
            nop
            nop
            nop
            nop
.L_41b970:

            mov EAX,DWORD PTR [RBP+8]
            test EAX,EAX
            je .L_41ba80

            mov EDX,DWORD PTR [RBX+8]
            test EDX,EDX
            jle .L_41ba00

            mov RDX,QWORD PTR [RBX]
            test BYTE PTR [RDX],1
            je .L_41ba00

            test EAX,EAX
            jle .L_41b99b

            mov RAX,QWORD PTR [RBP]
            test BYTE PTR [RAX],1
            jne .L_41ba50
.L_41b99b:

            mov RSI,RBP
            mov RDI,RBP
            call .L_4081f0

            test EAX,EAX
            je .L_41b9e0
.L_41b9aa:

            mov RSI,RBP
            mov RDI,RBX
            call .L_404b70

            test EAX,EAX
            jns .L_41b970

            mov RAX,RBX
            mov RBX,RBP
            mov RBP,RAX
            jmp .L_41b970
.L_41b9c4:

            mov EDX,R13D
            mov RSI,RBX
            mov RDI,RBX
            call .L_4082f0

            test EAX,EAX
            jne .L_41ba89

            nop
            nop
            nop
            nop
            nop
            nop
.L_41b9e0:

            xor EBX,EBX
.L_41b9e2:

            mov RDI,R12
            call .L_405530

            add RSP,8
.L_41b9ee:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41ba00:

            test EAX,EAX
            mov RSI,RBX
            mov RDI,RBX
            jle .L_41ba13

            mov RAX,QWORD PTR [RBP]
            test BYTE PTR [RAX],1
            jne .L_41ba38
.L_41ba13:

            call .L_4081f0

            test EAX,EAX
            je .L_41b9e0

            mov RSI,RBP
            mov RDI,RBP
            call .L_4081f0

            test EAX,EAX
            je .L_41b9e0

            add R13D,1
            jmp .L_41b970
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ba38:

            call .L_4081f0

            test EAX,EAX
            jne .L_41b9aa

            jmp .L_41b9e0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ba50:

            mov RDX,RBP
            mov RSI,RBX
            mov RDI,RBX
            call .L_41b010

            test EAX,EAX
            je .L_41b9e0

            mov RSI,RBX
            mov RDI,RBX
            call .L_4081f0

            test EAX,EAX
            jne .L_41b9aa

            jmp .L_41b9e0
          .byte 0x66
          .byte 0x90
.L_41ba80:

            test R13D,R13D
            jne .L_41b9c4
.L_41ba89:

            mov RSI,RBX
            mov RDI,R14
            xor EBX,EBX
            call .L_404650

            test RAX,RAX
            setne BL
            jmp .L_41b9e2
.L_41baa1:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bab0:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RCX
            sub RSP,136
.L_41bac4:

            mov RCX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+120],RCX
            xor ECX,ECX
            test BYTE PTR [RSI+20],4
            mov QWORD PTR [RSP+32],RDI
            mov RDI,RBX
            mov QWORD PTR [RSP+8],RSI
            mov QWORD PTR [RSP+40],RDX
            jne .L_41baf6

            test BYTE PTR [RDX+20],4
            je .L_41bd40
.L_41baf6:

            call .L_405420

            mov RDI,RBX
            call .L_4055b0

            mov RDI,RBX
            mov R15,RAX
            call .L_4055b0

            mov RDI,RBX
            mov RBP,RAX
            call .L_4055b0

            mov RDI,RBX
            mov R13,RAX
            call .L_4055b0

            mov RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_4055b0

            mov RDI,RBX
            mov R12,RAX
            call .L_4055b0

            mov RDI,RBX
            mov R14,RAX
            call .L_4055b0

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_41bcdb

            cmp QWORD PTR [RSP+32],0
            je .L_41bf88

            mov ESI,1
            mov RDI,R13
            call .L_4048e0

            xor ESI,ESI
            mov RDI,R14
            call .L_4048e0

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_404650

            test RAX,RAX
            je .L_41bce7

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,R15
            call .L_404650

            test RAX,RAX
            je .L_41bce7

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+24],RAX
.L_41bbad:

            mov DWORD PTR [R15+16],0
            mov EDI,DWORD PTR [RBP+16]
            test EDI,EDI
            je .L_41bd28
.L_41bbc0:

            mov RAX,QWORD PTR [RBP]
            mov EDX,DWORD PTR [RBP+20]
            lea RSI,QWORD PTR [RSP+96]
            mov RCX,RBX
            mov RDI,RBP
            mov QWORD PTR [RSP+96],RAX
            mov EAX,DWORD PTR [RBP+8]
            and EDX,4294967294
            mov DWORD PTR [RSP+104],EAX
            mov EAX,DWORD PTR [RBP+12]
            mov DWORD PTR [RSP+108],EAX
            mov EAX,DWORD PTR [RBP+16]
            mov DWORD PTR [RSP+112],EAX
            mov EAX,DWORD PTR [RSP+116]
            and EAX,1
            or EAX,6
            or EAX,EDX
            mov RDX,R15
            mov DWORD PTR [RSP+116],EAX
            call .L_407250

            test EAX,EAX
            je .L_41bcdb
.L_41bc0f:

            mov ESI,DWORD PTR [RBP+8]
            lea RAX,QWORD PTR [RSP+64]
            mov DWORD PTR [RSP+8],4294967295
            mov QWORD PTR [RSP+16],RAX
            test ESI,ESI
            jne .L_41bc85

            jmp .L_41c1f1
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41bc30:

            mov RSI,QWORD PTR [RSP]
            mov RCX,RBX
            mov RDX,R13
            mov RDI,R15
            call .L_406be0

            test EAX,EAX
            je .L_41bcdb

            mov RDX,R14
            mov RSI,R15
            mov RDI,R15
            call .L_41af30

            test EAX,EAX
            je .L_41bcdb

            mov EDX,DWORD PTR [RSP+8]
            mov ECX,DWORD PTR [R12+8]
            mov RAX,R14
            mov R14,R13
            neg EDX
            test ECX,ECX
            je .L_41bff0

            mov R13,R15
            mov DWORD PTR [RSP+8],EDX
            mov R15,RBP
            mov RBP,R12
            mov R12,RAX
.L_41bc85:

            mov RAX,QWORD PTR [R15]
            mov EDX,DWORD PTR [R15+20]
            mov R8,RBX
            mov RDI,QWORD PTR [RSP]
            mov RCX,RBP
            mov RSI,R12
            mov QWORD PTR [RSP+64],RAX
            mov EAX,DWORD PTR [R15+8]
            and EDX,4294967294
            mov DWORD PTR [RSP+72],EAX
            mov EAX,DWORD PTR [R15+12]
            mov DWORD PTR [RSP+76],EAX
            mov EAX,DWORD PTR [R15+16]
            mov DWORD PTR [RSP+80],EAX
            mov EAX,DWORD PTR [RSP+84]
            and EAX,1
            or EAX,6
            or EAX,EDX
            mov RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+84],EAX
            call .L_41b130

            test EAX,EAX
            jne .L_41bc30
.L_41bcdb:

            cmp QWORD PTR [RSP+32],0
            je .L_41bfe0
.L_41bce7:

            mov QWORD PTR [RSP+24],0
.L_41bcf0:

            mov RDI,RBX
            call .L_405530

            mov RCX,QWORD PTR [RSP+120]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,QWORD PTR [RSP+24]
            jne .L_41c4e3

            add RSP,136
.L_41bd18:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bd28:

            mov RSI,R15
            mov RDI,RBP
            call .L_404b00

            test EAX,EAX
            jns .L_41bbc0

            jmp .L_41bc0f
.L_41bd40:

            call .L_405420

            mov RDI,RBX
            call .L_4055b0

            mov RDI,RBX
            mov RBP,RAX
            call .L_4055b0

            mov RDI,RBX
            mov R13,RAX
            call .L_4055b0

            mov RDI,RBX
            mov QWORD PTR [RSP],RAX
            call .L_4055b0

            mov RDI,RBX
            mov R14,RAX
            call .L_4055b0

            mov RDI,RBX
            mov R12,RAX
            call .L_4055b0

            mov RDI,RBX
            mov QWORD PTR [RSP+48],RAX
            call .L_4055b0

            test RAX,RAX
            mov QWORD PTR [RSP+16],RAX
            je .L_41bf68

            cmp QWORD PTR [RSP+32],0
            je .L_41c1d0

            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_4048e0

            mov RDI,QWORD PTR [RSP+48]
            xor ESI,ESI
            call .L_4048e0

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_404650

            test RAX,RAX
            je .L_41bce7

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,RBP
            call .L_404650

            test RAX,RAX
            je .L_41bce7

            mov RAX,QWORD PTR [RSP+32]
            mov QWORD PTR [RSP+24],RAX
.L_41bdfc:

            mov DWORD PTR [RBP+16],0
            mov R11D,DWORD PTR [R13+16]
            test R11D,R11D
            jne .L_41c07a

            mov RSI,RBP
            mov RDI,R13
            call .L_404b00

            test EAX,EAX
            jns .L_41c07a
.L_41be23:

            mov RAX,QWORD PTR [RSP+40]
            mov R10D,DWORD PTR [RAX+8]
            test R10D,R10D
            jle .L_41be42

            mov RAX,QWORD PTR [RSP+40]
            mov RAX,QWORD PTR [RAX]
            test BYTE PTR [RAX],1
            jne .L_41c2b0
.L_41be42:

            mov R9D,DWORD PTR [R13+8]
            test R9D,R9D
            je .L_41c4ba

            mov QWORD PTR [RSP+56],RBX
            mov DWORD PTR [RSP+8],4294967295
            mov RBX,QWORD PTR [RSP+48]
            jmp .L_41bf11
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41be70:

            mov RDI,RBP
            call .L_404490

            mov RDI,R13
            mov R15D,EAX
            call .L_404490

            add EAX,1
            cmp R15D,EAX
            je .L_41c130

            mov R8,QWORD PTR [RSP+56]
            mov RCX,R13
            mov RDX,RBP
            mov RSI,R12
            mov RDI,R14
            call .L_41b130

            test EAX,EAX
            je .L_41bf54
.L_41bead:

            cmp DWORD PTR [R14+8],1
            je .L_41c0a8

            mov RCX,QWORD PTR [RSP+56]
            mov RDX,QWORD PTR [RSP]
            mov RSI,R14
            mov RDI,RBP
            call .L_406be0

            test EAX,EAX
            je .L_41bf54
.L_41bed4:

            mov RDX,RBX
            mov RSI,RBP
            mov RDI,RBP
            call .L_41af30

            test EAX,EAX
            je .L_41bf54
.L_41bee6:

            mov EAX,DWORD PTR [R12+8]
            mov ECX,DWORD PTR [RSP+8]
            mov RDX,R12
            mov R12,RBX
            neg ECX
            test EAX,EAX
            je .L_41c335

            mov RBX,QWORD PTR [RSP]
            mov DWORD PTR [RSP+8],ECX
            mov QWORD PTR [RSP],RBP
            mov RBP,R13
            mov R13,RDX
.L_41bf11:

            mov RDI,RBP
            call .L_404490

            mov RDI,R13
            mov R15D,EAX
            call .L_404490

            cmp R15D,EAX
            jne .L_41be70
.L_41bf2d:

            mov ESI,1
            mov RDI,R14
            call .L_4048e0

            test EAX,EAX
            je .L_41bf54

            mov RDX,R13
            mov RSI,RBP
            mov RDI,R12
            call .L_41b010

            test EAX,EAX
            jne .L_41bead
.L_41bf54:

            mov RAX,QWORD PTR [RSP+24]
            mov RBX,QWORD PTR [RSP+56]
            mov QWORD PTR [RSP+16],RAX
            nop
            nop
            nop
            nop
            nop
.L_41bf68:

            cmp QWORD PTR [RSP+32],0
            jne .L_41bce7
.L_41bf74:

            mov RDI,QWORD PTR [RSP+16]
            call .L_404540

            jmp .L_41bce7
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41bf88:

            call .L_4045b0

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_41bfe0

            mov ESI,1
            mov RDI,R13
            call .L_4048e0

            xor ESI,ESI
            mov RDI,R14
            call .L_4048e0

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,RBP
            call .L_404650

            test RAX,RAX
            je .L_41bfe0

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,R15
            call .L_404650

            test RAX,RAX
            jne .L_41bbad

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41bfe0:

            mov RDI,QWORD PTR [RSP+24]
            call .L_404540

            jmp .L_41bce7
          .byte 0x90
.L_41bff0:

            cmp DWORD PTR [RSP+8],1
            je .L_41c1f7
.L_41bffb:

            cmp DWORD PTR [RBP+8],1
            jne .L_41c108

            mov RAX,QWORD PTR [RBP]
            cmp QWORD PTR [RAX],1
            jne .L_41c108

            mov R12D,DWORD PTR [RBP+16]
            test R12D,R12D
            jne .L_41c108

            mov EBP,DWORD PTR [R13+16]
            test EBP,EBP
            jne .L_41c058

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,R13
            call .L_404b00

            test EAX,EAX
            jns .L_41c058

            mov RDI,QWORD PTR [RSP+24]
            mov RSI,R13
            call .L_404650

            test RAX,RAX
            jne .L_41bcf0

            jmp .L_41bcdb
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c058:

            mov RDX,QWORD PTR [RSP+40]
            mov RDI,QWORD PTR [RSP+24]
            mov RCX,RBX
            mov RSI,R13
            call .L_407250

            test EAX,EAX
            jne .L_41bcf0

            jmp .L_41bcdb
.L_41c07a:

            mov RCX,RBX
            mov RDX,RBP
            mov RSI,R13
            mov RDI,R13
            call .L_407250

            test EAX,EAX
            jne .L_41be23
.L_41c093:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_41bf68
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c0a8:

            mov RAX,QWORD PTR [R14]
            mov RAX,QWORD PTR [RAX]
            cmp RAX,1
            je .L_41c214

            cmp RAX,2
            je .L_41c240

            cmp RAX,4
            jne .L_41c0d4

            mov EAX,DWORD PTR [R14+16]
            test EAX,EAX
            je .L_41c288
.L_41c0d4:

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBP
            call .L_404650

            test RAX,RAX
            je .L_41bf54

            mov RAX,QWORD PTR [R14]
            mov RDI,RBP
            mov RSI,QWORD PTR [RAX]
            call .L_408a00

            test EAX,EAX
            jne .L_41bed4

            jmp .L_41bf54
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c108:

            lea RCX,QWORD PTR [RIP+.L_41c586]
            mov R8D,690
            mov EDX,108
            mov ESI,139
            mov EDI,3
            call .L_416a00

            jmp .L_41bcdb
          .byte 0x66
          .byte 0x90
.L_41c130:

            mov R15,QWORD PTR [RSP+16]
            mov RSI,R13
            mov RDI,R15
            call .L_408110

            test EAX,EAX
            je .L_41bf54

            mov RSI,R15
            mov RDI,RBP
            call .L_404b00

            test EAX,EAX
            js .L_41bf2d

            mov R15,QWORD PTR [RSP+16]
            mov RSI,RBP
            mov RDI,R12
            mov RDX,R15
            call .L_41b010

            test EAX,EAX
            je .L_41bf54

            mov RDX,R13
            mov RSI,R15
            mov RDI,R14
            call .L_41af30

            test EAX,EAX
            je .L_41bf54

            mov RSI,R14
            mov RDI,RBP
            call .L_404b00

            test EAX,EAX
            js .L_41c268

            mov ESI,3
            mov RDI,R14
            call .L_4048e0

            test EAX,EAX
            je .L_41bf54

            mov RDX,R13
            mov RSI,R12
            mov RDI,R12
            call .L_41b010

            test EAX,EAX
            jne .L_41bead

            jmp .L_41bf54
          .byte 0x90
.L_41c1d0:

            call .L_4045b0

            test RAX,RAX
            mov QWORD PTR [RSP+24],RAX
            jne .L_41c519

            mov QWORD PTR [RSP+16],0
            jmp .L_41bf74
.L_41c1f1:

            mov RBP,R15
            mov R13,R14
.L_41c1f7:

            mov RSI,QWORD PTR [RSP+40]
            mov RDX,R13
            mov RDI,R13
            call .L_41b010

            test EAX,EAX
            jne .L_41bffb

            jmp .L_41bcdb
.L_41c214:

            mov ECX,DWORD PTR [R14+16]
            test ECX,ECX
            jne .L_41c0d4

            mov RSI,QWORD PTR [RSP]
            mov RDX,RBX
            mov RDI,RBP
            call .L_41af30

            test EAX,EAX
            jne .L_41bee6

            jmp .L_41bf54
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41c240:

            mov EDX,DWORD PTR [R14+16]
            test EDX,EDX
            jne .L_41c0d4

            mov RSI,QWORD PTR [RSP]
            mov RDI,RBP
            call .L_408110

            test EAX,EAX
            jne .L_41bed4

            jmp .L_41bf54
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c268:

            mov ESI,2
            mov RDI,R14
            call .L_4048e0

            test EAX,EAX
            jne .L_41bead

            jmp .L_41bf54
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c288:

            mov RSI,QWORD PTR [RSP]
            mov EDX,2
            mov RDI,RBP
            call .L_4082f0

            test EAX,EAX
            jne .L_41bed4

            jmp .L_41bf54
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c2b0:

            mov RDI,QWORD PTR [RSP+40]
            call .L_404490

            cmp EAX,2048
            jg .L_41be42

            mov R15,QWORD PTR [RSP+48]
            mov R12,QWORD PTR [RSP]
.L_41c2ce:

            mov ESI,DWORD PTR [R13+8]
            test ESI,ESI
            je .L_41c4ba

            xor R14D,R14D
            jmp .L_41c2f2
.L_41c2df:

            mov RSI,R12
            mov RDI,R12
            call .L_4081f0

            test EAX,EAX
            je .L_41c093
.L_41c2f2:

            mov ESI,R14D
            mov RDI,R13
            call .L_404d50

            test EAX,EAX
            jne .L_41c38a

            mov R8D,DWORD PTR [R12+8]
            add R14D,1
            test R8D,R8D
            jle .L_41c2df

            mov RAX,QWORD PTR [R12]
            test BYTE PTR [RAX],1
            je .L_41c2df

            mov RDX,QWORD PTR [RSP+40]
            mov RSI,R12
            mov RDI,R12
            call .L_41ab80

            test EAX,EAX
            jne .L_41c2df

            jmp .L_41c093
.L_41c335:

            cmp DWORD PTR [RSP+8],1
            mov RBX,QWORD PTR [RSP+56]
            je .L_41c4ae
.L_41c345:

            cmp DWORD PTR [R13+8],1
            jne .L_41c35a

            mov RAX,QWORD PTR [R13]
            cmp QWORD PTR [RAX],1
            je .L_41c461
.L_41c35a:

            lea RCX,QWORD PTR [RIP+.L_41c586]
            mov R8D,525
            mov EDX,108
            mov ESI,110
            mov EDI,3
            call .L_416a00

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_41bf68
.L_41c38a:

            test R14D,R14D
            jne .L_41c446
.L_41c393:

            xor R14D,R14D
            jmp .L_41c3ab
.L_41c398:

            mov RSI,R15
            mov RDI,R15
            call .L_4081f0

            test EAX,EAX
            je .L_41c093
.L_41c3ab:

            mov ESI,R14D
            mov RDI,RBP
            call .L_404d50

            test EAX,EAX
            jne .L_41c3e7

            mov EDI,DWORD PTR [R15+8]
            add R14D,1
            test EDI,EDI
            jle .L_41c398

            mov RAX,QWORD PTR [R15]
            test BYTE PTR [RAX],1
            je .L_41c398

            mov RDX,QWORD PTR [RSP+40]
            mov RSI,R15
            mov RDI,R15
            call .L_41ab80

            test EAX,EAX
            jne .L_41c398

            jmp .L_41c093
.L_41c3e7:

            test R14D,R14D
            je .L_41c402

            mov EDX,R14D
            mov RSI,RBP
            mov RDI,RBP
            call .L_4084d0

            test EAX,EAX
            je .L_41c093
.L_41c402:

            mov RSI,RBP
            mov RDI,R13
            call .L_404b00

            test EAX,EAX
            js .L_41c4e8

            mov RDX,R15
            mov RSI,R12
            mov RDI,R12
            call .L_41ab80

            test EAX,EAX
            je .L_41c093

            mov RDX,RBP
            mov RSI,R13
            mov RDI,R13
            call .L_41acf0

            test EAX,EAX
            jne .L_41c2ce

            jmp .L_41c093
.L_41c446:

            mov EDX,R14D
            mov RSI,R13
            mov RDI,R13
            call .L_4084d0

            test EAX,EAX
            jne .L_41c393

            jmp .L_41c093
.L_41c461:

            cmp DWORD PTR [R13+16],0
            jne .L_41c35a

            mov RAX,QWORD PTR [RSP]
            cmp DWORD PTR [RAX+16],0
            jne .L_41c48b

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,RAX
            call .L_404b00

            test EAX,EAX
            js .L_41c56a
.L_41c48b:

            mov RDX,QWORD PTR [RSP+40]
            mov RSI,QWORD PTR [RSP]
            mov RCX,RBX
            mov RDI,QWORD PTR [RSP+24]
            call .L_407250

            test EAX,EAX
            je .L_41c093

            jmp .L_41bcf0
.L_41c4ae:

            mov RAX,QWORD PTR [RSP]
            mov RBP,R13
            mov QWORD PTR [RSP+48],RAX
.L_41c4ba:

            mov R14,QWORD PTR [RSP+48]
            mov RSI,QWORD PTR [RSP+40]
            mov RDX,R14
            mov RDI,R14
            call .L_41b010

            test EAX,EAX
            je .L_41c093

            mov QWORD PTR [RSP],R14
            mov R13,RBP
            jmp .L_41c345
.L_41c4e3:

            call __stack_chk_fail@PLT
.L_41c4e8:

            mov RDX,R12
            mov RSI,R15
            mov RDI,R15
            call .L_41ab80

            test EAX,EAX
            je .L_41c093

            mov RDX,R13
            mov RSI,RBP
            mov RDI,RBP
            call .L_41acf0

            test EAX,EAX
            jne .L_41c2ce

            jmp .L_41c093
.L_41c519:

            mov RDI,QWORD PTR [RSP]
            mov ESI,1
            call .L_4048e0

            mov RDI,QWORD PTR [RSP+48]
            xor ESI,ESI
            call .L_4048e0

            mov RSI,QWORD PTR [RSP+8]
            mov RDI,R13
            call .L_404650

            test RAX,RAX
            je .L_41c55b

            mov RSI,QWORD PTR [RSP+40]
            mov RDI,RBP
            call .L_404650

            test RAX,RAX
            jne .L_41bdfc
.L_41c55b:

            mov RAX,QWORD PTR [RSP+24]
            mov QWORD PTR [RSP+16],RAX
            jmp .L_41bf74
.L_41c56a:

            mov RSI,QWORD PTR [RSP]
            mov RDI,QWORD PTR [RSP+24]
            call .L_404650

            test RAX,RAX
            jne .L_41bcf0

            jmp .L_41c093
.L_41c586:
          .string "bn_gcd.c"
          .byte 0x90
.L_41c590:

            test RSI,RSI
            mov RAX,RDI
            je .L_41c5c0

            cmp BYTE PTR [RDI],0
            je .L_41c5c0

            add RSI,RDI
            jmp .L_41c5ad
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c5a8:

            cmp BYTE PTR [RDI],0
            je .L_41c5b6
.L_41c5ad:

            add RDI,1
            cmp RDI,RSI
            jne .L_41c5a8
.L_41c5b6:

            sub RDI,RAX
            mov RAX,RDI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c5c0:

            xor EAX,EAX
            ret 
.L_41c5c3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c5d0:

            test RDI,RDI
            je .L_41c640

            push RBP
            push RBX
            mov RBP,RSI
            lea RSI,QWORD PTR [RIP+.L_41c7bd]
            mov RBX,RDI
            mov EDX,104
            sub RSP,8
            mov EDI,EBP
            call .L_418820

            test RAX,RAX
            je .L_41c610

            add RSP,8
            mov RDX,RBP
            mov RSI,RBX
            pop RBX
            pop RBP
            mov RDI,RAX
            jmp memcpy@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c610:

            lea RCX,QWORD PTR [RIP+.L_41c7bd]
            mov R8D,106
            mov EDX,65
            mov ESI,103
            mov EDI,7
            call .L_416a00

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c640:

            xor EAX,EAX
            ret 
.L_41c643:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c650:

            cmp RDX,1
            push RBX
.L_41c655:

            mov RBX,RDX
            jbe .L_41c6a0

            movzx EAX,BYTE PTR [RSI]
            test AL,AL
            je .L_41c6a8

            lea RDX,QWORD PTR [RDX-1]
            xor EBX,EBX
            jmp .L_41c677
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c670:

            movzx EAX,BYTE PTR [RSI]
            test AL,AL
            je .L_41c68b
.L_41c677:

            add RBX,1
            add RDI,1
            add RSI,1
            cmp RDX,RBX
            mov BYTE PTR [RDI-1],AL
            jne .L_41c670
.L_41c68b:

            mov BYTE PTR [RDI],0
.L_41c68e:

            mov RDI,RSI
            call strlen@PLT

            add RAX,RBX
            pop RBX
.L_41c69a:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c6a0:

            test RDX,RDX
            je .L_41c68e

            nop
            nop
            nop
.L_41c6a8:

            xor EBX,EBX
            jmp .L_41c68b
.L_41c6ac:

            nop
            nop
            nop
            nop
.L_41c6b0:

            test RDI,RDI
            push R12
            push RBP
            push RBX
.L_41c6b7:

            je .L_41c729

            test RSI,RSI
            mov RBP,RDI
            je .L_41c720

            cmp BYTE PTR [RDI],0
            je .L_41c720

            lea RAX,QWORD PTR [RDI+RSI*1]
            mov RDX,RDI
            jmp .L_41c6d5
          .byte 0x90
.L_41c6d0:

            cmp BYTE PTR [RDX],0
            je .L_41c6de
.L_41c6d5:

            add RDX,1
            cmp RDX,RAX
            jne .L_41c6d0
.L_41c6de:

            sub RDX,RBP
            lea EDI,DWORD PTR [RDX+1]
            mov RBX,RDX
.L_41c6e7:

            lea RSI,QWORD PTR [RIP+.L_41c7bd]
            mov EDX,88
            call .L_418820

            test RAX,RAX
            mov R12,RAX
            je .L_41c72e

            lea RDX,QWORD PTR [RBX+1]
            mov RSI,RBP
            mov RDI,RAX
            call .L_41c650
.L_41c70f:

            mov RAX,R12
            pop RBX
.L_41c713:

            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c720:

            xor EBX,EBX
            mov EDI,1
            jmp .L_41c6e7
.L_41c729:

            xor R12D,R12D
            jmp .L_41c70f
.L_41c72e:

            lea RCX,QWORD PTR [RIP+.L_41c7bd]
            mov R8D,90
            mov EDX,65
            mov ESI,104
            mov EDI,7
            call .L_416a00

            jmp .L_41c70f
.L_41c751:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c760:

            test RDI,RDI
            je .L_41c780

            push RBX
            mov RBX,RDI
            call strlen@PLT

            mov RDI,RBX
            mov RSI,RAX
            pop RBX
            jmp .L_41c6b0
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c780:

            xor EAX,EAX
            ret 
.L_41c783:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c790:

            push RBX
            xor EBX,EBX
            test RDX,RDX
            jne .L_41c7ae

            jmp .L_41c7b3
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c7a0:

            add RBX,1
            add RDI,1
            sub RDX,1
            je .L_41c7b3
.L_41c7ae:

            cmp BYTE PTR [RDI],0
            jne .L_41c7a0
.L_41c7b3:

            call .L_41c650

            add RAX,RBX
            pop RBX
            ret 
.L_41c7bd:
          .string "buf_str.c"
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c7d0:

            push RBX
            sub RSP,16
.L_41c7d5:

            test RDI,RDI
            mov QWORD PTR [RSP+8],RSI
            je .L_41c89a

            mov RCX,QWORD PTR [RDI+24]
            test RCX,RCX
            je .L_41c860

            mov EAX,DWORD PTR [RDI+16]
            mov R9D,EDX
            mov RBX,RDI
            test EAX,EAX
            je .L_41c838
.L_41c7f9:

            cmp QWORD PTR [RSP+8],0
            je .L_41c89a

            mov RSI,QWORD PTR [RBX+8]
            mov R8,QWORD PTR [RBX+24]
            lea RDI,QWORD PTR [RSP+8]
            mov EDX,DWORD PTR [RBX]
            mov ECX,8
            call .L_41e870

            test RAX,RAX
            je .L_41c89a

            sub RAX,QWORD PTR [RBX+8]
            sar RAX,3
.L_41c82b:

            add RSP,16
.L_41c82f:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c838:

            movsxd RSI,DWORD PTR [RDI]
            mov RDI,QWORD PTR [RDI+8]
            mov DWORD PTR [RSP+4],EDX
            mov EDX,8
            call qsort@PLT

            mov DWORD PTR [RBX+16],1
            mov R9D,DWORD PTR [RSP+4]
            jmp .L_41c7f9
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c860:

            mov EAX,DWORD PTR [RDI]
            test EAX,EAX
            jle .L_41c89a

            mov RSI,QWORD PTR [RDI+8]
            mov RDI,QWORD PTR [RSP+8]
            cmp QWORD PTR [RSI],RDI
            je .L_41c8a8

            lea ECX,DWORD PTR [RAX-1]
            mov EDX,1
            add RCX,1
            jmp .L_41c893
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41c888:

            add RDX,1
            cmp QWORD PTR [RSI+RDX*8-8],RDI
            je .L_41c82b
.L_41c893:

            cmp RCX,RDX
            mov EAX,EDX
            jne .L_41c888
.L_41c89a:

            add RSP,16
.L_41c89e:

            mov EAX,4294967295
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41c8a8:

            xor EAX,EAX
            jmp .L_41c82b
.L_41c8af:

            nop
.L_41c8b0:

            mov RAX,QWORD PTR [RDI+24]
            cmp RAX,RSI
            je .L_41c8c0

            mov DWORD PTR [RDI+16],0
.L_41c8c0:

            mov QWORD PTR [RDI+24],RSI
            ret 
.L_41c8c5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c8d0:

            push RBP
            push RBX
            lea RSI,QWORD PTR [RIP+.L_41cedf]
            mov RBP,RDI
            mov EDX,162
            mov EDI,32
            sub RSP,8
.L_41c8ea:

            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            je .L_41c94d

            lea RSI,QWORD PTR [RIP+.L_41cedf]
            mov EDX,164
            mov EDI,32
            call .L_418820

            test RAX,RAX
            mov QWORD PTR [RBX+8],RAX
            je .L_41c960

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            movabs RAX,17179869184
            mov QWORD PTR [RBX+24],RBP
            mov DWORD PTR [RBX],0
            mov QWORD PTR [RBX+16],RAX
.L_41c94d:

            add RSP,8
.L_41c951:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c960:

            mov RDI,RBX
            xor EBX,EBX
            call .L_418aa0

            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_41c974:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c980:

            xor EDI,EDI
            jmp .L_41c8d0
.L_41c987:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41c990:

            test RDI,RDI
            je .L_41ca28

            push R12
            push RBP
            mov R12,RSI
            push RBX
            movsxd RCX,DWORD PTR [RDI]
            mov RBX,RDI
            mov ESI,DWORD PTR [RDI+20]
            movsxd RBP,EDX
            mov RDI,QWORD PTR [RDI+8]
            lea EAX,DWORD PTR [RCX+1]
            cmp ESI,EAX
            jle .L_41c9f0

            test EBP,EBP
            js .L_41c9bf
.L_41c9bb:

            cmp EBP,ECX
            jl .L_41c9d8
.L_41c9bf:

            mov QWORD PTR [RDI+RCX*8],R12
.L_41c9c3:

            mov DWORD PTR [RBX],EAX
            mov DWORD PTR [RBX+16],0
.L_41c9cc:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41c9d8:

            mov RDX,QWORD PTR [RDI+RCX*8]
            mov QWORD PTR [RDI+RCX*8+8],RDX
            sub RCX,1
            cmp EBP,ECX
            jle .L_41c9d8

            mov QWORD PTR [RDI+RBP*8],R12
            jmp .L_41c9c3
          .byte 0x90
.L_41c9f0:

            lea RDX,QWORD PTR [RIP+.L_41cedf]
            shl ESI,4
            mov ECX,187
            call .L_418920

            mov RDI,RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_41c9cc

            movsxd RCX,DWORD PTR [RBX]
            shl DWORD PTR [RBX+20],1
            test EBP,EBP
            mov QWORD PTR [RBX+8],RDI
            lea EAX,DWORD PTR [RCX+1]
            jns .L_41c9bb

            jmp .L_41c9bf
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ca28:

            xor EAX,EAX
            ret 
.L_41ca2b:

            nop
            nop
            nop
            nop
            nop
.L_41ca30:

            test RDI,RDI
            je .L_41ca80

            test ESI,ESI
            js .L_41ca80

            mov ECX,DWORD PTR [RDI]
            cmp ECX,ESI
            jle .L_41ca80

            mov R9,QWORD PTR [RDI+8]
            movsxd R10,ESI
            lea R8D,DWORD PTR [RCX-1]
            cmp R8D,ESI
            lea RDX,QWORD PTR [R9+R10*8]
            mov RAX,QWORD PTR [RDX]
            je .L_41ca79

            jle .L_41ca79

            sub ECX,ESI
            sub ECX,2
            add R10,RCX
            lea RSI,QWORD PTR [R9+R10*8+8]
            nop
            nop
            nop
.L_41ca68:

            mov RCX,QWORD PTR [RDX+8]
            add RDX,8
            mov QWORD PTR [RDX-8],RCX
            cmp RDX,RSI
            jne .L_41ca68
.L_41ca79:

            mov DWORD PTR [RDI],R8D
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41ca80:

            xor EAX,EAX
            ret 
.L_41ca83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ca90:

            mov EAX,DWORD PTR [RDI]
            test EAX,EAX
            jle .L_41cac3

            mov RCX,QWORD PTR [RDI+8]
            cmp RSI,QWORD PTR [RCX]
            je .L_41cad0

            lea EDX,DWORD PTR [RAX-1]
            mov EAX,1
            add RDX,1
            jmp .L_41cabb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41cab0:

            add RAX,1
            cmp QWORD PTR [RCX+RAX*8-8],RSI
            je .L_41cad3
.L_41cabb:

            cmp RDX,RAX
            mov R8D,EAX
            jne .L_41cab0
.L_41cac3:

            xor EAX,EAX
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cad0:

            xor R8D,R8D
.L_41cad3:

            mov ESI,R8D
            jmp .L_41ca30
.L_41cadb:

            nop
            nop
            nop
            nop
            nop
.L_41cae0:

            mov EDX,2
            jmp .L_41c7d0
.L_41caea:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41caf0:

            mov EDX,1
            jmp .L_41c7d0
.L_41cafa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41cb00:

            mov EDX,DWORD PTR [RDI]
            jmp .L_41c990
.L_41cb07:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cb10:

            xor EDX,EDX
            jmp .L_41c990
.L_41cb17:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cb20:

            test RDI,RDI
            je .L_41cb38

            mov EAX,DWORD PTR [RDI]
            test EAX,EAX
            jle .L_41cb38

            xor ESI,ESI
            jmp .L_41ca30
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cb38:

            xor EAX,EAX
            ret 
.L_41cb3b:

            nop
            nop
            nop
            nop
            nop
.L_41cb40:

            test RDI,RDI
            je .L_41cb58

            mov ESI,DWORD PTR [RDI]
            test ESI,ESI
            jle .L_41cb58

            sub ESI,1
            jmp .L_41ca30
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cb58:

            xor EAX,EAX
            ret 
.L_41cb5b:

            nop
            nop
            nop
            nop
            nop
.L_41cb60:

            test RDI,RDI
            je .L_41cb90

            movsxd RDX,DWORD PTR [RDI]
            test EDX,EDX
            jle .L_41cb90

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            shl RDX,3
            xor ESI,ESI
            call memset@PLT

            mov DWORD PTR [RBX],0
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cb90:

            ret 
.L_41cb92:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cba0:

            test RDI,RDI
            je .L_41cbc0

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_41cbb7

            call .L_418aa0
.L_41cbb7:

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
.L_41cbc0:

            ret 
.L_41cbc2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cbd0:

            push RBP
            push RBX
            mov RBP,RDI
            sub RSP,8
.L_41cbd9:

            mov RDI,QWORD PTR [RDI+24]
            call .L_41c8d0

            test RAX,RAX
            mov RBX,RAX
            je .L_41cc18

            mov EAX,DWORD PTR [RBP+20]
            mov RDI,QWORD PTR [RBX+8]
            lea RDX,QWORD PTR [RIP+.L_41cedf]
            mov ECX,101
            lea ESI,DWORD PTR [RAX*8]
            call .L_418920

            test RAX,RAX
            jne .L_41cc28

            mov RDI,RBX
            xor EBX,EBX
            call .L_41cba0
.L_41cc18:

            add RSP,8
.L_41cc1c:

            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cc28:

            mov EDX,DWORD PTR [RBP]
            mov QWORD PTR [RBX+8],RAX
            mov RDI,RAX
            mov RSI,QWORD PTR [RBP+8]
            mov DWORD PTR [RBX],EDX
            movsxd RDX,DWORD PTR [RBP]
            shl RDX,3
            call memcpy@PLT

            mov EAX,DWORD PTR [RBP+16]
            mov DWORD PTR [RBX+16],EAX
            mov EAX,DWORD PTR [RBP+20]
            mov DWORD PTR [RBX+20],EAX
            mov RAX,QWORD PTR [RBP+24]
            mov QWORD PTR [RBX+24],RAX
            add RSP,8
            mov RAX,RBX
            pop RBX
            pop RBP
            ret 
.L_41cc63:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cc70:

            push R15
            push R14
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            lea RSI,QWORD PTR [RIP+.L_41cedf]
            mov R13,RDI
            mov EDI,32
            sub RSP,24
.L_41cc90:

            mov QWORD PTR [RSP+8],RDX
            mov EDX,124
            call .L_418820

            test RAX,RAX
            mov RBP,RAX
            je .L_41cd97

            mov RAX,QWORD PTR [R13+24]
            mov EDI,4
            lea RSI,QWORD PTR [RIP+.L_41cedf]
            mov EDX,130
            mov QWORD PTR [RBP+24],RAX
            mov EAX,DWORD PTR [R13+16]
            mov DWORD PTR [RBP+16],EAX
            mov EAX,DWORD PTR [R13]
            mov DWORD PTR [RBP],EAX
            cmp DWORD PTR [R13],4
            cmovge EDI,DWORD PTR [R13]
            mov DWORD PTR [RBP+20],EDI
            shl EDI,3
            call .L_418820

            test RAX,RAX
            mov QWORD PTR [RBP+8],RAX
            je .L_41cda9

            mov EDX,DWORD PTR [RBP+20]
            test EDX,EDX
            jle .L_41cd18

            sub EDX,1
            lea RDX,QWORD PTR [RAX+RDX*8+8]
            nop
            nop
            nop
            nop
            nop
.L_41cd08:

            mov QWORD PTR [RAX],0
            add RAX,8
            cmp RAX,RDX
            jne .L_41cd08
.L_41cd18:

            mov EAX,DWORD PTR [RBP]
            test EAX,EAX
            jle .L_41cd97

            xor EBX,EBX
            jmp .L_41cd34
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41cd28:

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RBP],EAX
            jle .L_41cd97
.L_41cd34:

            mov RDX,QWORD PTR [R13+8]
            movsxd R14,EBX
            lea RAX,QWORD PTR [RBX*8]
            mov RDI,QWORD PTR [RDX+RBX*8]
            test RDI,RDI
            je .L_41cd28

            add RAX,QWORD PTR [RBP+8]
            mov R15,RAX
            call R12

            test RAX,RAX
            mov QWORD PTR [R15],RAX
            jne .L_41cd28

            lea RBX,QWORD PTR [R14*8-8]
            mov R12,-8
            jmp .L_41cd88
          .byte 0x90
.L_41cd70:

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RAX+RBX*1]
            test RDI,RDI
            je .L_41cd84

            mov RAX,QWORD PTR [RSP+8]
            call RAX
.L_41cd84:

            sub RBX,8
.L_41cd88:

            cmp RBX,R12
            jne .L_41cd70

            mov RDI,RBP
            xor EBP,EBP
            call .L_41cba0
.L_41cd97:

            add RSP,24
.L_41cd9b:

            mov RAX,RBP
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41cda9:

            mov RDI,RBP
            xor EBP,EBP
            call .L_418aa0

            jmp .L_41cd97
.L_41cdb5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cdc0:

            test RDI,RDI
            je .L_41ce10

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov EAX,DWORD PTR [RDI]
            mov RBP,RDI
            test EAX,EAX
            jle .L_41cdfc

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cde0:

            mov RAX,QWORD PTR [RBP+8]
            mov RDI,QWORD PTR [RAX+RBX*8]
            test RDI,RDI
            je .L_41cdf0

            call R12
.L_41cdf0:

            lea EAX,DWORD PTR [RBX+1]
            add RBX,1
            cmp DWORD PTR [RBP],EAX
            jg .L_41cde0
.L_41cdfc:

            pop RBX
            mov RDI,RBP
            pop RBP
            pop R12
            jmp .L_41cba0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ce10:

            ret 
.L_41ce12:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ce20:

            test RDI,RDI
            je .L_41ce28

            mov EAX,DWORD PTR [RDI]
            ret 
.L_41ce28:

            mov EAX,4294967295
            ret 
.L_41ce2e:

            nop
            nop
.L_41ce30:

            test RDI,RDI
            je .L_41ce50

            test ESI,ESI
            js .L_41ce50

            cmp DWORD PTR [RDI],ESI
            jle .L_41ce50

            mov RAX,QWORD PTR [RDI+8]
            movsxd RSI,ESI
            mov RAX,QWORD PTR [RAX+RSI*8]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ce50:

            xor EAX,EAX
            ret 
.L_41ce53:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ce60:

            test RDI,RDI
            je .L_41ce80

            test ESI,ESI
            js .L_41ce80

            cmp DWORD PTR [RDI],ESI
            jle .L_41ce80

            mov RAX,QWORD PTR [RDI+8]
            movsxd RSI,ESI
            mov QWORD PTR [RAX+RSI*8],RDX
            mov RAX,RDX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41ce80:

            xor EAX,EAX
            ret 
.L_41ce83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ce90:

            test RDI,RDI
            je .L_41ce9c

            mov EAX,DWORD PTR [RDI+16]
            test EAX,EAX
            je .L_41cea0
.L_41ce9c:

            ret 
          .byte 0x66
          .byte 0x90
.L_41cea0:

            push RBX
            movsxd RSI,DWORD PTR [RDI]
            mov RBX,RDI
            mov RCX,QWORD PTR [RDI+24]
            mov RDI,QWORD PTR [RDI+8]
            mov EDX,8
            call qsort@PLT

            mov DWORD PTR [RBX+16],1
            pop RBX
            ret 
.L_41cec2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ced0:

            test RDI,RDI
            mov EAX,1
            je .L_41cedd

            mov EAX,DWORD PTR [RDI+16]
.L_41cedd:

            ret 
.L_41cedf:
          .string "stack.c"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x74
          .byte 0x61
          .byte 0x63
          .byte 0x6b
          .byte 0x20
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x74
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x4f
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x53
          .byte 0x53
          .byte 0x4c
          .byte 0x20
          .byte 0x31
          .byte 0x2e
          .byte 0x30
          .byte 0x2e
          .byte 0x32
          .byte 0x64
          .byte 0x20
          .byte 0x39
          .byte 0x20
          .byte 0x4a
          .byte 0x75
          .byte 0x6c
          .byte 0x20
          .byte 0x32
          .byte 0x30
          .byte 0x31
          .byte 0x35
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41cf30:

            push R15
            push R14
            mov R14,RSI
            push R13
            push R12
            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RDX
            mov RDI,RSI
            sub RSP,8
.L_41cf4a:

            call QWORD PTR [RBP+16]

            mov ECX,DWORD PTR [RBP+36]
            xor EDX,EDX
            add QWORD PTR [RBP+96],1
            mov R12,RAX
            mov QWORD PTR [RBX],RAX
            div RCX
            mov EAX,DWORD PTR [RBP+32]
            cmp RAX,RDX
            jbe .L_41cf73

            mov ECX,DWORD PTR [RBP+28]
            mov RAX,R12
            xor EDX,EDX
            div RCX
.L_41cf73:

            mov RAX,QWORD PTR [RBP]
            movsxd RDX,EDX
            mov R15,QWORD PTR [RBP+8]
            lea R13,QWORD PTR [RAX+RDX*8]
            mov RBX,QWORD PTR [R13]
            test RBX,RBX
            je .L_41cfbd

            nop
            nop
            nop
            nop
            nop
.L_41cf90:

            add QWORD PTR [RBP+160],1
            cmp QWORD PTR [RBX+16],R12
            jne .L_41cfb0

            add QWORD PTR [RBP+104],1
            mov RSI,R14
            mov RDI,QWORD PTR [RBX]
            call R15

            test EAX,EAX
            je .L_41cfbd
.L_41cfb0:

            lea R13,QWORD PTR [RBX+8]
            mov RBX,QWORD PTR [RBX+8]
            test RBX,RBX
            jne .L_41cf90
.L_41cfbd:

            add RSP,8
.L_41cfc1:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_41cfcf:

            nop
.L_41cfd0:

            xor EAX,EAX
            test RDI,RDI
            je .L_41d03a

            movzx ECX,BYTE PTR [RDI]
            test CL,CL
            je .L_41d03a

            mov R8D,256
            mov R9D,32
            nop
            nop
            nop
            nop
            nop
            nop
.L_41cff0:

            movsx RDX,CL
            mov R10D,R9D
            mov RSI,RAX
            or RDX,R8
            add RDI,1
            add R8,256
            mov RCX,RDX
            shr RCX,2
            xor ECX,EDX
            and ECX,15
            sub R10D,ECX
            shl RSI,CL
            mov ECX,R10D
            shr RAX,CL
            movzx ECX,BYTE PTR [RDI]
            imul RDX,RDX
            or EAX,ESI
            xor RAX,RDX
            test CL,CL
            jne .L_41cff0

            mov RDX,RAX
            shr RDX,16
            xor RAX,RDX
.L_41d03a:

            ret 
.L_41d03c:

            nop
            nop
            nop
            nop
.L_41d040:

            push R12
            mov R12,RSI
            push RBP
            lea RSI,QWORD PTR [RIP+.L_41d6ed]
            push RBX
.L_41d04e:

            mov RBP,RDI
            mov EDX,120
            mov EDI,176
            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            je .L_41d17c

            lea RSI,QWORD PTR [RIP+.L_41d6ed]
            mov EDX,122
            mov EDI,128
            call .L_418820

            test RAX,RAX
            mov QWORD PTR [RBX],RAX
            je .L_41d194

            lea RDX,QWORD PTR [RAX+128]
            nop
            nop
            nop
.L_41d098:

            mov QWORD PTR [RAX],0
            add RAX,8
            cmp RDX,RAX
            jne .L_41d098

            test R12,R12
            je .L_41d188
.L_41d0b1:

            lea RAX,QWORD PTR [RIP+.L_41cfd0]
            test RBP,RBP
            mov QWORD PTR [RBX+8],R12
            mov QWORD PTR [RBX+40],512
            mov QWORD PTR [RBX+48],256
            cmove RBP,RAX
            movabs RAX,68719476744
            mov QWORD PTR [RBX+56],0
            mov QWORD PTR [RBX+24],RAX
            movabs RAX,34359738368
            mov QWORD PTR [RBX+16],RBP
            mov QWORD PTR [RBX+32],RAX
            mov QWORD PTR [RBX+64],0
            mov QWORD PTR [RBX+72],0
            mov QWORD PTR [RBX+80],0
            mov QWORD PTR [RBX+88],0
            mov QWORD PTR [RBX+96],0
            mov QWORD PTR [RBX+104],0
            mov QWORD PTR [RBX+112],0
            mov QWORD PTR [RBX+120],0
            mov QWORD PTR [RBX+128],0
            mov QWORD PTR [RBX+136],0
            mov QWORD PTR [RBX+144],0
            mov QWORD PTR [RBX+152],0
            mov QWORD PTR [RBX+160],0
            mov DWORD PTR [RBX+168],0
.L_41d17c:

            mov RAX,RBX
            pop RBX
.L_41d180:

            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d188:

            mov R12,QWORD PTR [RIP+strcmp@GOTPCREL]
            jmp .L_41d0b1
.L_41d194:

            mov RDI,RBX
            xor EBX,EBX
            call .L_418aa0

            jmp .L_41d17c
.L_41d1a0:

            test RDI,RDI
            je .L_41d208

            push R12
            push RBP
            mov R12,RDI
            push RBX
.L_41d1ac:

            mov EDX,DWORD PTR [RDI+24]
            mov RAX,QWORD PTR [RDI]
            test EDX,EDX
            je .L_41d1ef

            xor EBP,EBP
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d1c0:

            mov EDX,EBP
            mov RDI,QWORD PTR [RAX+RDX*8]
            test RDI,RDI
            je .L_41d1e5

            nop
            nop
            nop
            nop
            nop
.L_41d1d0:

            mov RBX,QWORD PTR [RDI+8]
            call .L_418aa0

            test RBX,RBX
            mov RDI,RBX
            jne .L_41d1d0

            mov RAX,QWORD PTR [R12]
.L_41d1e5:

            add EBP,1
            cmp DWORD PTR [R12+24],EBP
            ja .L_41d1c0
.L_41d1ef:

            mov RDI,RAX
            call .L_418aa0

            pop RBX
.L_41d1f8:

            mov RDI,R12
            pop RBP
            pop R12
            jmp .L_418aa0
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d208:

            ret 
.L_41d20a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41d210:

            push R15
            push R14
            xor EDX,EDX
            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,24
.L_41d226:

            mov ECX,DWORD PTR [RDI+24]
            mov DWORD PTR [RDI+168],0
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            mov RAX,QWORD PTR [RDI+56]
            shl RAX,8
            div RCX
            cmp QWORD PTR [RDI+40],RAX
            jbe .L_41d2a0
.L_41d254:

            mov RDX,RSP
            mov RSI,R12
            mov RDI,RBX
            call .L_41cf30

            mov RDX,QWORD PTR [RAX]
            mov RBP,RAX
            test RDX,RDX
            je .L_41d3a0

            mov RAX,QWORD PTR [RDX]
            mov QWORD PTR [RDX],R12
            add QWORD PTR [RBX+120],1
.L_41d27c:

            mov RDI,QWORD PTR [RSP+8]
            xor RDI,QWORD PTR FS:[40]
            jne .L_41d40b

            add RSP,24
.L_41d294:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x90
.L_41d2a0:

            mov R13D,DWORD PTR [RDI+32]
            mov RSI,RCX
            mov R14D,DWORD PTR [RBX+36]
            add ESI,1
            add QWORD PTR [RDI+64],1
            mov R9D,DWORD PTR [RBX+28]
            mov DWORD PTR [RDI+24],ESI
            lea R15D,DWORD PTR [R13+1]
            mov RAX,R13
            add EAX,R14D
            mov RSI,R9
            mov DWORD PTR [RDI+32],R15D
            mov RDI,QWORD PTR [RDI]
            lea R10,QWORD PTR [RDI+R13*8]
            lea RBP,QWORD PTR [RDI+RAX*8]
            mov QWORD PTR [RBP],0
            mov R8,QWORD PTR [R10]
            test R8,R8
            je .L_41d32b

            mov RCX,R8
            jmp .L_41d30a

            nop
            nop
            nop
            nop
            nop
.L_41d2f0:

            mov QWORD PTR [R10],R11
            mov RAX,QWORD PTR [RBP]
            mov QWORD PTR [R8+8],RAX
            mov QWORD PTR [RBP],R8
            mov RCX,QWORD PTR [R10]
            test RCX,RCX
            mov R8,RCX
            je .L_41d32b
.L_41d30a:

            mov RAX,QWORD PTR [R8+16]
            xor EDX,EDX
            mov R11,QWORD PTR [RCX+8]
            div R9
            cmp R13,RDX
            jne .L_41d2f0

            lea R10,QWORD PTR [RCX+8]
            mov RCX,R11
            test RCX,RCX
            mov R8,RCX
            jne .L_41d30a
.L_41d32b:

            cmp R15D,R14D
            jb .L_41d254

            lea RDX,QWORD PTR [RIP+.L_41d6ed]
            lea EBP,DWORD PTR [RSI+RSI*1]
            mov ECX,336
            shl ESI,4
            call .L_418920

            test RAX,RAX
            je .L_41d3f8

            mov ESI,DWORD PTR [RBX+28]
            cmp EBP,ESI
            jbe .L_41d380

            mov ECX,ESI
            mov EDI,ESI
            not ECX
            lea RDX,QWORD PTR [RAX+RDI*8]
            add ECX,EBP
            add RCX,RDI
            lea RCX,QWORD PTR [RAX+RCX*8+8]
            nop
.L_41d370:

            mov QWORD PTR [RDX],0
            add RDX,8
            cmp RDX,RCX
            jne .L_41d370
.L_41d380:

            mov DWORD PTR [RBX+36],ESI
            mov DWORD PTR [RBX+28],EBP
            add QWORD PTR [RBX+72],1
            mov DWORD PTR [RBX+32],0
            mov QWORD PTR [RBX],RAX
            jmp .L_41d254
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d3a0:

            lea RSI,QWORD PTR [RIP+.L_41d6ed]
            mov EDX,191
            mov EDI,24
            call .L_418820

            test RAX,RAX
            je .L_41d3e8

            mov RDX,QWORD PTR [RSP]
            mov QWORD PTR [RAX],R12
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],RDX
            mov QWORD PTR [RBP],RAX
            xor EAX,EAX
            add QWORD PTR [RBX+112],1
            add QWORD PTR [RBX+56],1
            jmp .L_41d27c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d3e8:

            add DWORD PTR [RBX+168],1
            jmp .L_41d27c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d3f8:

            add DWORD PTR [RBX+168],1
            mov DWORD PTR [RBX+32],0
            jmp .L_41d254
.L_41d40b:

            call __stack_chk_fail@PLT
.L_41d410:

            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,16
.L_41d41b:

            mov DWORD PTR [RDI+168],0
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_41cf30

            mov RDI,QWORD PTR [RAX]
            test RDI,RDI
            je .L_41d508

            mov RDX,QWORD PTR [RDI+8]
            mov QWORD PTR [RAX],RDX
            mov RBP,QWORD PTR [RDI]
            call .L_418aa0

            mov RAX,QWORD PTR [RBX+56]
            mov ECX,DWORD PTR [RBX+24]
            add QWORD PTR [RBX+128],1
            sub RAX,1
            cmp ECX,16
            mov QWORD PTR [RBX+56],RAX
            jbe .L_41d485

            shl RAX,8
            xor EDX,EDX
            mov ESI,ECX
            div RSI
            cmp QWORD PTR [RBX+48],RAX
            jae .L_41d4a8
.L_41d485:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov RAX,RBP
            jne .L_41d578

            add RSP,16
.L_41d4a0:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d4a8:

            mov EDX,DWORD PTR [RBX+32]
            mov ESI,DWORD PTR [RBX+36]
            mov RAX,QWORD PTR [RBX]
            lea EDI,DWORD PTR [RDX+RSI*1-1]
            test EDX,EDX
            lea RDI,QWORD PTR [RAX+RDI*8]
            mov R12,QWORD PTR [RDI]
            mov QWORD PTR [RDI],0
            je .L_41d520

            sub EDX,1
            mov DWORD PTR [RBX+32],EDX
.L_41d4cd:

            movsxd RDX,EDX
            sub ECX,1
            add QWORD PTR [RBX+80],1
            lea RAX,QWORD PTR [RAX+RDX*8]
            mov DWORD PTR [RBX+24],ECX
            mov RDX,QWORD PTR [RAX]
            test RDX,RDX
            jne .L_41d4f3

            jmp .L_41d570
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d4f0:

            mov RDX,RAX
.L_41d4f3:

            mov RAX,QWORD PTR [RDX+8]
            test RAX,RAX
            jne .L_41d4f0

            mov QWORD PTR [RDX+8],R12
            jmp .L_41d485
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d508:

            add QWORD PTR [RBX+136],1
            xor EBP,EBP
            jmp .L_41d485
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d520:

            lea RDX,QWORD PTR [RIP+.L_41d6ed]
            shl ESI,3
            mov ECX,363
            mov RDI,RAX
            call .L_418920

            test RAX,RAX
            je .L_41d560

            mov EDX,DWORD PTR [RBX+36]
            add QWORD PTR [RBX+88],1
            shr DWORD PTR [RBX+28],1
            mov QWORD PTR [RBX],RAX
            mov ECX,DWORD PTR [RBX+24]
            shr EDX,1
            mov DWORD PTR [RBX+36],EDX
            sub EDX,1
            mov DWORD PTR [RBX+32],EDX
            jmp .L_41d4cd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41d560:

            add DWORD PTR [RBX+168],1
            jmp .L_41d485
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d570:

            mov QWORD PTR [RAX],R12
            jmp .L_41d485
.L_41d578:

            call __stack_chk_fail@PLT
.L_41d57d:

            nop
            nop
            nop
.L_41d580:

            push RBX
            mov RBX,RDI
            sub RSP,16
.L_41d588:

            mov DWORD PTR [RDI+168],0
            mov RDX,RSP
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            call .L_41cf30

            mov RAX,QWORD PTR [RAX]
            test RAX,RAX
            je .L_41d5d8

            mov RAX,QWORD PTR [RAX]
            add QWORD PTR [RBX+144],1
.L_41d5bd:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41d5e2

            add RSP,16
.L_41d5d1:

            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d5d8:

            add QWORD PTR [RBX+152],1
            jmp .L_41d5bd
.L_41d5e2:

            call __stack_chk_fail@PLT
.L_41d5e7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d5f0:

            test RDI,RDI
            je .L_41d650

            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_41d5fd:

            mov R12D,DWORD PTR [RDI+24]
            sub R12D,1
            js .L_41d647

            movsxd R13,R12D
            mov RBP,RSI
            mov R14,RDI
            shl R13,3
            nop
            nop
            nop
            nop
.L_41d618:

            mov RAX,QWORD PTR [R14]
            mov RAX,QWORD PTR [RAX+R13*1]
            test RAX,RAX
            je .L_41d639

            nop
            nop
            nop
            nop
.L_41d628:

            mov RBX,QWORD PTR [RAX+8]
            mov RDI,QWORD PTR [RAX]
            call RBP

            test RBX,RBX
            mov RAX,RBX
            jne .L_41d628
.L_41d639:

            sub R12D,1
            sub R13,8
            cmp R12D,-1
            jne .L_41d618
.L_41d647:

            pop RBX
.L_41d648:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41d650:

            ret 
.L_41d652:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d660:

            test RDI,RDI
            je .L_41d6d8

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_41d673:

            mov R13D,DWORD PTR [RDI+24]
            sub R13D,1
            js .L_41d6c2

            movsxd R14,R13D
            mov R12,RDX
            mov RBP,RSI
            mov R15,RDI
            shl R14,3
            nop
            nop
            nop
.L_41d690:

            mov RAX,QWORD PTR [R15]
            mov RAX,QWORD PTR [RAX+R14*1]
            test RAX,RAX
            je .L_41d6b4

            nop
            nop
            nop
            nop
.L_41d6a0:

            mov RBX,QWORD PTR [RAX+8]
            mov RDI,QWORD PTR [RAX]
            mov RSI,R12
            call RBP

            test RBX,RBX
            mov RAX,RBX
            jne .L_41d6a0
.L_41d6b4:

            sub R13D,1
            sub R14,8
            cmp R13D,-1
            jne .L_41d690
.L_41d6c2:

            add RSP,8
.L_41d6c6:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d6d8:

            ret 
.L_41d6da:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41d6e0:

            xor EAX,EAX
            test RDI,RDI
            je .L_41d6eb

            mov RAX,QWORD PTR [RDI+56]
.L_41d6eb:

            ret 
.L_41d6ed:
          .string "lhash.c"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x6c
          .byte 0x68
          .byte 0x61
          .byte 0x73
          .byte 0x68
          .byte 0x20
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x74
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x4f
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x53
          .byte 0x53
          .byte 0x4c
          .byte 0x20
          .byte 0x31
          .byte 0x2e
          .byte 0x30
          .byte 0x2e
          .byte 0x32
          .byte 0x64
          .byte 0x20
          .byte 0x39
          .byte 0x20
          .byte 0x4a
          .byte 0x75
          .byte 0x6c
          .byte 0x20
          .byte 0x32
          .byte 0x30
          .byte 0x31
          .byte 0x35
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d730:

            mov RAX,QWORD PTR [RDI+8]
            mov DWORD PTR [RAX+16],0
            or DWORD PTR [RAX+32],13
            ret 
.L_41d740:

            mov RAX,QWORD PTR [RDI+8]
            add DWORD PTR [RAX+16],1
            ret 
.L_41d749:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d750:

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            sub DWORD PTR [RDI+16],1
            jne .L_41d763

            call .L_428c40
.L_41d763:

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
.L_41d76c:

            nop
            nop
            nop
            nop
.L_41d770:

            mov EAX,DWORD PTR [RSI]
            lea RDX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RDI]
            mov RDI,QWORD PTR [RAX+8]
            lea RAX,QWORD PTR [RIP+.L_62f840]
            mov RSI,QWORD PTR [RAX+RDX*8+8]
            jmp strcmp@PLT
.L_41d78e:

            nop
            nop
.L_41d790:

            mov EAX,DWORD PTR [RSI]
            lea RDX,QWORD PTR [RIP+.L_62f840]
            lea RCX,QWORD PTR [RAX+RAX*4]
            mov RAX,QWORD PTR [RDI]
            mov RSI,QWORD PTR [RDX+RCX*8]
            mov RDI,QWORD PTR [RAX]
            jmp strcmp@PLT
.L_41d7ac:

            nop
            nop
            nop
            nop
.L_41d7b0:

            push RBX
            mov ESI,DWORD PTR [RDI]
            mov RBX,RDI
            mov RDX,QWORD PTR [RDI+8]
            cmp ESI,1
            je .L_41d868

            jle .L_41d800

            cmp ESI,2
            je .L_41d7f0

            cmp ESI,3
            jne .L_41d860

            movsxd R8,DWORD PTR [RDX+16]
.L_41d7d7:

            movsxd RAX,ESI
            and R8D,1073741823
            shl RAX,30
            or RAX,R8
            pop RBX
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d7f0:

            mov RDI,QWORD PTR [RDX+8]
            call .L_41cfd0

            mov ESI,DWORD PTR [RBX]
            mov R8,RAX
            jmp .L_41d7d7
.L_41d800:

            test ESI,ESI
            jne .L_41d860

            mov ECX,DWORD PTR [RDX+20]
            mov R10,QWORD PTR [RDX+24]
            mov R8D,ECX
            shl R8D,20
            test ECX,ECX
            movsxd R8,R8D
            jle .L_41d7d7

            lea EBX,DWORD PTR [RCX+RCX*2]
            xor R9D,R9D
            mov R11D,2863311531
            nop
            nop
            nop
.L_41d828:

            mov EAX,R9D
            movzx EDI,BYTE PTR [R10]
            mov ECX,R9D
            mul R11D
            add R9D,3
            add R10,1
            shr EDX,4
            lea EAX,DWORD PTR [RDX+RDX*2]
            shl EAX,3
            sub ECX,EAX
            shl EDI,CL
            movsxd RDI,EDI
            xor R8,RDI
            cmp EBX,R9D
            jne .L_41d828

            jmp .L_41d7d7
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d860:

            xor EAX,EAX
            pop RBX
.L_41d863:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d868:

            mov RDI,QWORD PTR [RDX]
            call .L_41cfd0

            mov ESI,DWORD PTR [RBX]
            mov R8,RAX
            jmp .L_41d7d7
.L_41d87a:

            nop
            nop
            nop
            nop
            nop
            nop
.L_41d880:

            mov EAX,DWORD PTR [RSI]
            mov RDI,QWORD PTR [RDI]
            movsxd RDX,DWORD PTR [RDI+20]
            lea RCX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RIP+.L_62f840]
            lea RCX,QWORD PTR [RAX+RCX*8]
            mov EAX,EDX
            sub EAX,DWORD PTR [RCX+20]
            jne .L_41d8b0

            test EDX,EDX
            je .L_41d8b0

            mov RDI,QWORD PTR [RDI+24]
            mov RSI,QWORD PTR [RCX+24]
            jmp memcmp@PLT
.L_41d8b0:

            ret 
.L_41d8b2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41d8c0:

            mov EDX,DWORD PTR [RDI]
            mov EAX,EDX
            sub EAX,DWORD PTR [RSI]
            jne .L_41d905

            cmp EDX,1
            mov RDI,QWORD PTR [RDI+8]
            mov RCX,QWORD PTR [RSI+8]
            je .L_41d8f0

            jle .L_41d930

            cmp EDX,2
            je .L_41d910

            cmp EDX,3
            jne .L_41d950

            mov EAX,DWORD PTR [RDI+16]
            sub EAX,DWORD PTR [RCX+16]
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d8f0:

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_41d95a

            mov RSI,QWORD PTR [RCX]
            test RSI,RSI
            jne .L_41d922
.L_41d900:

            mov EAX,1
.L_41d905:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d910:

            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_41d95a

            mov RSI,QWORD PTR [RCX+8]
            test RSI,RSI
            je .L_41d900
.L_41d922:

            jmp strcmp@PLT
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41d930:

            test EDX,EDX
            jne .L_41d958

            movsxd RDX,DWORD PTR [RDI+20]
            mov EAX,EDX
            sub EAX,DWORD PTR [RCX+20]
            jne .L_41d905

            mov RSI,QWORD PTR [RCX+24]
            mov RDI,QWORD PTR [RDI+24]
            jmp memcmp@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d950:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41d958:

            ret 
.L_41d95a:

            mov EAX,4294967295
            ret 
.L_41d960:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,40
.L_41d96e:

            test EDX,EDX
            mov QWORD PTR [RSP],RDI
            mov QWORD PTR [RSP+16],RSI
            mov QWORD PTR [RSP+8],R8
            mov DWORD PTR [RSP+24],R9D
            jle .L_41da6c

            mov R13D,EDX
            mov R14D,ECX
            xor R12D,R12D
            jmp .L_41d9a3
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41d998:

            je .L_41da00

            lea R12D,DWORD PTR [R15+1]
            cmp R12D,R13D
            jge .L_41d9dd
.L_41d9a3:

            lea EAX,DWORD PTR [R12+R13*1]
            mov RDI,QWORD PTR [RSP]
            mov ECX,EAX
            shr ECX,31
            add ECX,EAX
            mov RAX,QWORD PTR [RSP+8]
            sar ECX,1
            mov EBX,ECX
            mov R15D,ECX
            mov EBP,ECX
            imul EBX,R14D
            movsxd RBX,EBX
            add RBX,QWORD PTR [RSP+16]
            mov RSI,RBX
            call RAX

            test EAX,EAX
            jns .L_41d998

            mov R13D,R15D
            cmp R12D,R13D
            jl .L_41d9a3
.L_41d9dd:

            test EAX,EAX
            je .L_41da00

            test BYTE PTR [RSP+24],1
            je .L_41da7c
.L_41d9ec:

            add RSP,40
.L_41d9f0:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x90
.L_41da00:

            test BYTE PTR [RSP+24],2
            je .L_41d9ec

            test R15D,R15D
            jle .L_41d9ec

            lea EDX,DWORD PTR [R15-1]
            mov EAX,R14D
            neg EAX
            imul EDX,R14D
            cdqe 
            mov R13,RAX
            movsxd RDX,EDX
            add RDX,QWORD PTR [RSP+16]
            jmp .L_41da3b
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41da30:

            add RDX,R13
            test R12D,R12D
            mov EBP,R12D
            je .L_41d9ec
.L_41da3b:

            mov RBX,RDX
            mov QWORD PTR [RSP+24],RDX
            mov RSI,RDX
            mov RDI,QWORD PTR [RSP]
            mov RAX,QWORD PTR [RSP+8]
            lea R12D,DWORD PTR [RBP-1]
            call RAX

            test EAX,EAX
            mov RDX,QWORD PTR [RSP+24]
            je .L_41da30

            imul EBP,R14D
            movsxd RBX,EBP
            add RBX,QWORD PTR [RSP+16]
            jmp .L_41d9ec
.L_41da6c:

            test BYTE PTR [RSP+24],2
            mov RBX,QWORD PTR [RSP+16]
            jne .L_41d9ec
.L_41da7c:

            xor EBX,EBX
            jmp .L_41d9ec
.L_41da83:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41da90:

            mov EAX,DWORD PTR [RIP+.L_63b3f8]
            test EAX,EAX
            jne .L_41daa2

            cmp EDI,957
            jg .L_41daa8
.L_41daa2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41daa8:

            mov DWORD PTR [RIP+.L_63b3f8],1
            ret 
.L_41dab3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41dac0:

            mov EAX,DWORD PTR [RIP+.L_63b3f8]
            test EAX,EAX
            jne .L_41db38

            mov RDI,QWORD PTR [RIP+.L_63b400]
            test RDI,RDI
            je .L_41db30

            lea RSI,QWORD PTR [RIP+.L_41d730]
            sub RSP,8
.L_41dae1:

            mov QWORD PTR [RDI+48],0
            call .L_41d5f0

            mov RDI,QWORD PTR [RIP+.L_63b400]
            lea RSI,QWORD PTR [RIP+.L_41d740]
            call .L_41d5f0

            mov RDI,QWORD PTR [RIP+.L_63b400]
            lea RSI,QWORD PTR [RIP+.L_41d750]
            call .L_41d5f0

            mov RDI,QWORD PTR [RIP+.L_63b400]
            call .L_41d1a0

            mov QWORD PTR [RIP+.L_63b400],0
            add RSP,8
.L_41db2f:

            ret 
.L_41db30:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41db38:

            mov DWORD PTR [RIP+.L_63b3f8],2
            ret 
.L_41db43:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41db50:

            mov EAX,DWORD PTR [RIP+.L_639770]
            add EDI,EAX
            mov DWORD PTR [RIP+.L_639770],EDI
            ret 
.L_41db5f:

            nop
.L_41db60:

            push R12
            push RBP
            mov RBP,RDI
            push RBX
            sub RSP,48
.L_41db6b:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            cmp QWORD PTR [RIP+.L_63b400],0
            mov QWORD PTR [RSP],0
            mov QWORD PTR [RSP+8],0
            mov QWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],0
            je .L_41dd30
.L_41dbac:

            mov RDI,RBP
            call .L_428250

            test RAX,RAX
            mov R12,RAX
            je .L_41dcd8

            lea RSI,QWORD PTR [RIP+.L_41eb0f]
            mov EDX,270
            mov EDI,16
            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            mov QWORD PTR [RSP+24],RAX
            je .L_41dd58

            mov EAX,DWORD PTR [R12+20]
            test EAX,EAX
            je .L_41dc1d

            cmp QWORD PTR [RBP+24],0
            je .L_41dc1d

            lea RSI,QWORD PTR [RIP+.L_41eb0f]
            mov EDX,274
            mov EDI,16
            call .L_418820

            test RAX,RAX
            mov RBX,RAX
            mov QWORD PTR [RSP],RAX
            je .L_41dd58
.L_41dc1d:

            cmp QWORD PTR [R12],0
            je .L_41dc4c

            lea RSI,QWORD PTR [RIP+.L_41eb0f]
            mov EDX,279
            mov EDI,16
            call .L_418820

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            mov RBX,QWORD PTR [RSP]
            je .L_41dd58
.L_41dc4c:

            cmp QWORD PTR [R12+8],0
            je .L_41dd80

            lea RSI,QWORD PTR [RIP+.L_41eb0f]
            mov EDX,284
            mov EDI,16
            call .L_418820

            test RAX,RAX
            mov QWORD PTR [RSP+16],RAX
            mov RBX,QWORD PTR [RSP]
            je .L_41dd58
.L_41dc80:

            xor EBP,EBP
            test RBX,RBX
            je .L_41dca9
.L_41dc87:

            mov RDI,QWORD PTR [RIP+.L_63b400]
            mov DWORD PTR [RBX],EBP
            mov RSI,RBX
            mov QWORD PTR [RBX+8],R12
            call .L_41d210

            test RAX,RAX
            je .L_41dca9

            mov RDI,RAX
            call .L_418aa0
.L_41dca9:

            add RBP,1
            cmp RBP,4
            je .L_41dcc6
.L_41dcb3:

            mov RBX,QWORD PTR [RSP+RBP*8]
            test RBX,RBX
            jne .L_41dc87

            add RBP,1
            cmp RBP,4
            jne .L_41dcb3
.L_41dcc6:

            and DWORD PTR [R12+32],4294967282
            mov EAX,DWORD PTR [R12+16]
            jmp .L_41dd15
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41dcd8:

            xor EBX,EBX
.L_41dcda:

            xor EBP,EBP
            test RBX,RBX
            je .L_41dce9
.L_41dce1:

            mov RDI,RBX
            call .L_418aa0
.L_41dce9:

            add RBP,8
            cmp RBP,32
            je .L_41dd06
.L_41dcf3:

            mov RBX,QWORD PTR [RSP+RBP*1]
            test RBX,RBX
            jne .L_41dce1

            add RBP,8
            cmp RBP,32
            jne .L_41dcf3
.L_41dd06:

            test R12,R12
            je .L_41dd13

            mov RDI,R12
            call .L_418aa0
.L_41dd13:

            xor EAX,EAX
.L_41dd15:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41dd89

            add RSP,48
.L_41dd29:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_41dd30:

            lea RSI,QWORD PTR [RIP+.L_41d8c0]
            lea RDI,QWORD PTR [RIP+.L_41d7b0]
            call .L_41d040

            test RAX,RAX
            mov QWORD PTR [RIP+.L_63b400],RAX
            jne .L_41dbac

            jmp .L_41dd13
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41dd58:

            lea RCX,QWORD PTR [RIP+.L_41eb0f]
            mov R8D,303
            mov EDX,65
            mov ESI,105
            mov EDI,8
            call .L_416a00

            jmp .L_41dcda
          .byte 0x66
          .byte 0x90
.L_41dd80:

            mov RBX,QWORD PTR [RSP]
            jmp .L_41dc80
.L_41dd89:

            call __stack_chk_fail@PLT
.L_41dd8e:

            nop
            nop
.L_41dd90:

            sub RSP,72
.L_41dd94:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp EDI,957
            ja .L_41dde0

            test EDI,EDI
            lea RAX,QWORD PTR [RIP+.L_62f840]
            je .L_41de30

            movsxd RDI,EDI
            mov R8D,320
            lea RDX,QWORD PTR [RDI+RDI*4]
            mov EDX,DWORD PTR [RAX+RDX*8+16]
            test EDX,EDX
            je .L_41de42
.L_41ddcc:

            lea RDX,QWORD PTR [RDI+RDI*4]
            lea RAX,QWORD PTR [RAX+RDX*8]
            jmp .L_41de15
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dde0:

            mov RAX,QWORD PTR [RIP+.L_63b400]
            test RAX,RAX
            je .L_41de38

            lea RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+32],EDI
            mov RSI,RSP
            mov RDI,RAX
            mov DWORD PTR [RSP],3
            mov QWORD PTR [RSP+8],RDX
            call .L_41d580

            test RAX,RAX
            je .L_41de3c

            mov RAX,QWORD PTR [RAX+8]
.L_41de15:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41de61

            add RSP,72
.L_41de29:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41de30:

            xor EDI,EDI
            jmp .L_41ddcc
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41de38:

            xor EAX,EAX
            jmp .L_41de15
.L_41de3c:

            mov R8D,334
.L_41de42:

            lea RCX,QWORD PTR [RIP+.L_41eb0f]
            mov EDX,101
            mov ESI,103
            mov EDI,8
            call .L_416a00

            xor EAX,EAX
            jmp .L_41de15
.L_41de61:

            call __stack_chk_fail@PLT
.L_41de66:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41de70:

            sub RSP,72
.L_41de74:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp EDI,957
            ja .L_41dec0

            test EDI,EDI
            lea RAX,QWORD PTR [RIP+.L_62f840]
            je .L_41df10

            movsxd RDI,EDI
            mov R8D,347
            lea RDX,QWORD PTR [RDI+RDI*4]
            mov EDX,DWORD PTR [RAX+RDX*8+16]
            test EDX,EDX
            je .L_41df22
.L_41deac:

            lea RDX,QWORD PTR [RDI+RDI*4]
            mov RAX,QWORD PTR [RAX+RDX*8]
            jmp .L_41def8
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dec0:

            mov RAX,QWORD PTR [RIP+.L_63b400]
            test RAX,RAX
            je .L_41df18

            lea RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+32],EDI
            mov RSI,RSP
            mov RDI,RAX
            mov DWORD PTR [RSP],3
            mov QWORD PTR [RSP+8],RDX
            call .L_41d580

            test RAX,RAX
            je .L_41df1c

            mov RAX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX]
.L_41def8:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41df41

            add RSP,72
.L_41df0c:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41df10:

            xor EDI,EDI
            jmp .L_41deac
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41df18:

            xor EAX,EAX
            jmp .L_41def8
.L_41df1c:

            mov R8D,361
.L_41df22:

            lea RCX,QWORD PTR [RIP+.L_41eb0f]
            mov EDX,101
            mov ESI,104
            mov EDI,8
            call .L_416a00

            xor EAX,EAX
            jmp .L_41def8
.L_41df41:

            call __stack_chk_fail@PLT
.L_41df46:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41df50:

            sub RSP,72
.L_41df54:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+56],RAX
            xor EAX,EAX
            cmp EDI,957
            ja .L_41dfa0

            test EDI,EDI
            lea RAX,QWORD PTR [RIP+.L_62f840]
            je .L_41dff0

            movsxd RDI,EDI
            mov R8D,374
            lea RDX,QWORD PTR [RDI+RDI*4]
            mov EDX,DWORD PTR [RAX+RDX*8+16]
            test EDX,EDX
            je .L_41e002
.L_41df8c:

            lea RDX,QWORD PTR [RDI+RDI*4]
            mov RAX,QWORD PTR [RAX+RDX*8+8]
            jmp .L_41dfd9
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41dfa0:

            mov RAX,QWORD PTR [RIP+.L_63b400]
            test RAX,RAX
            je .L_41dff8

            lea RDX,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+32],EDI
            mov RSI,RSP
            mov RDI,RAX
            mov DWORD PTR [RSP],3
            mov QWORD PTR [RSP+8],RDX
            call .L_41d580

            test RAX,RAX
            je .L_41dffc

            mov RAX,QWORD PTR [RAX+8]
            mov RAX,QWORD PTR [RAX+8]
.L_41dfd9:

            mov RCX,QWORD PTR [RSP+56]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41e021

            add RSP,72
.L_41dfed:

            ret 
          .byte 0x66
          .byte 0x90
.L_41dff0:

            xor EDI,EDI
            jmp .L_41df8c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41dff8:

            xor EAX,EAX
            jmp .L_41dfd9
.L_41dffc:

            mov R8D,388
.L_41e002:

            lea RCX,QWORD PTR [RIP+.L_41eb0f]
            mov EDX,101
            mov ESI,102
            mov EDI,8
            call .L_416a00

            xor EAX,EAX
            jmp .L_41dfd9
.L_41e021:

            call __stack_chk_fail@PLT
.L_41e026:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e030:

            sub RSP,56
.L_41e034:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test RDI,RDI
            mov QWORD PTR [RSP+8],RDI
            je .L_41e0a8

            mov EAX,DWORD PTR [RDI+16]
            mov RDX,RDI
            test EAX,EAX
            jne .L_41e090

            mov EAX,DWORD PTR [RDI+20]
            test EAX,EAX
            je .L_41e0a8

            mov RDI,QWORD PTR [RIP+.L_63b400]
            test RDI,RDI
            je .L_41e0b0

            lea RSI,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+16],0
            mov QWORD PTR [RSP+24],RDX
            call .L_41d580

            test RAX,RAX
            je .L_41e0b0

            mov RAX,QWORD PTR [RAX+8]
            mov EAX,DWORD PTR [RAX+16]
            nop
            nop
.L_41e090:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41e0ed

            add RSP,56
.L_41e0a4:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e0a8:

            xor EAX,EAX
            jmp .L_41e090
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e0b0:

            lea RDI,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RIP+.L_41d880]
            lea RSI,QWORD PTR [RIP+.L_423200]
            xor R9D,R9D
            mov ECX,4
            mov EDX,890
            call .L_41d960

            test RAX,RAX
            je .L_41e0a8

            mov EAX,DWORD PTR [RAX]
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RIP+.L_62f840]
            mov EAX,DWORD PTR [RAX+RDX*8+16]
            jmp .L_41e090
.L_41e0ed:

            call __stack_chk_fail@PLT
.L_41e0f2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e100:

            push R15
            push R14
            mov RAX,RDI
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
.L_41e111:

            mov QWORD PTR [RSP+8],RDI
            mov DWORD PTR [RSP+20],ESI
            mov RDI,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RDI
            xor EDI,EDI
            test RAX,RAX
            je .L_41e136

            test ESI,ESI
            jle .L_41e136

            mov BYTE PTR [RAX],0
.L_41e136:

            test RDX,RDX
            je .L_41e370

            mov RBX,QWORD PTR [RDX+24]
            test RBX,RBX
            je .L_41e370

            test ECX,ECX
            je .L_41e490
.L_41e154:

            mov EBP,DWORD PTR [RDX+20]
            test EBP,EBP
            jle .L_41e370

            lea RAX,QWORD PTR [RSP+48]
            xor R13D,R13D
            mov DWORD PTR [RSP+24],1
            mov DWORD PTR [RSP],0
            movabs R14,144115188075855871
            mov QWORD PTR [RSP+32],RAX
.L_41e185:

            xor R12D,R12D
            xor EAX,EAX
.L_41e18a:

            add RBX,1
            sub EBP,1
            movzx R15D,BYTE PTR [RBX-1]
            jne .L_41e1a0

            test R15B,R15B
            js .L_41e20b

            nop
            nop
            nop
.L_41e1a0:

            mov RSI,R15
            and ESI,127
            test EAX,EAX
            jne .L_41e248

            or R12,RSI
            test R15B,R15B
            jns .L_41e545

            cmp R12,R14
            jbe .L_41e340

            test R13,R13
            je .L_41e350
.L_41e1cc:

            mov RSI,R12
            mov RDI,R13
            call .L_4048e0

            test EAX,EAX
            je .L_41e330
.L_41e1df:

            mov EDX,7
            mov RSI,R13
            mov RDI,R13
            call .L_4082f0

            test EAX,EAX
            je .L_41e20b

            add RBX,1
            sub EBP,1
            mov EAX,1
            movzx R15D,BYTE PTR [RBX-1]
            jne .L_41e1a0

            test R15B,R15B
            jns .L_41e1a0
.L_41e20b:

            test R13,R13
            jne .L_41e330
.L_41e214:

            mov DWORD PTR [RSP],4294967295
.L_41e21b:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,DWORD PTR [RSP]
            jne .L_41e540

            add RSP,104
.L_41e236:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e248:

            mov RDI,R13
            call .L_408810

            test EAX,EAX
            je .L_41e20b

            test R15B,R15B
            js .L_41e1df

            mov EAX,DWORD PTR [RSP+24]
            test EAX,EAX
            jne .L_41e380
.L_41e265:

            mov RDI,R13
            call .L_407870

            test RAX,RAX
            mov R12,RAX
            je .L_41e20b

            mov RDI,RAX
            call strlen@PLT

            mov RCX,RAX
            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            je .L_41e2ee

            mov EDX,DWORD PTR [RSP+20]
            cmp EDX,1
            jle .L_41e2ac

            mov ESI,46
            sub EDX,1
            add RAX,1
            mov WORD PTR [RAX-1],SI
            mov DWORD PTR [RSP+20],EDX
            mov QWORD PTR [RSP+8],RAX
.L_41e2ac:

            movsxd R8,DWORD PTR [RSP+20]
            mov RDI,QWORD PTR [RSP+8]
            mov RSI,R12
            mov QWORD PTR [RSP+24],RCX
            mov RDX,R8
            mov R15,R8
            mov QWORD PTR [RSP+40],R8
            call .L_41c650

            mov RCX,QWORD PTR [RSP+24]
            cmp R15D,ECX
            jge .L_41e4e9

            mov R8,QWORD PTR [RSP+40]
            add QWORD PTR [RSP+8],R8
            mov DWORD PTR [RSP+20],0
.L_41e2ee:

            mov EAX,DWORD PTR [RSP]
            mov RDI,R12
            lea EAX,DWORD PTR [RAX+RCX*1+1]
            mov DWORD PTR [RSP],EAX
            call .L_418aa0
.L_41e300:

            test EBP,EBP
            mov DWORD PTR [RSP+24],0
            jg .L_41e185

            test R13,R13
            je .L_41e21b

            mov RDI,R13
            call .L_404540

            jmp .L_41e21b
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e330:

            mov RDI,R13
            call .L_404540

            jmp .L_41e214
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41e340:

            shl R12,7
            jmp .L_41e18a
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e350:

            call .L_4045b0

            test RAX,RAX
            mov R13,RAX
            jne .L_41e1cc

            jmp .L_41e214
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e370:

            mov DWORD PTR [RSP],0
            jmp .L_41e21b
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e380:

            cmp R12,79
            ja .L_41e521
.L_41e38a:

            movabs RAX,-3689348814741910323
            mul R12
            shr RDX,5
            lea EAX,DWORD PTR [RDX+RDX*4]
            mov ECX,EDX
            shl EAX,3
            cdqe 
            sub R12,RAX
.L_41e3a8:

            mov RAX,QWORD PTR [RSP+8]
            test RAX,RAX
            je .L_41e3d4

            mov EDX,DWORD PTR [RSP+20]
            cmp EDX,1
            jle .L_41e3d4

            add ECX,48
            mov BYTE PTR [RAX+1],0
            sub EDX,1
            mov BYTE PTR [RAX],CL
            add RAX,1
            mov DWORD PTR [RSP+20],EDX
            mov QWORD PTR [RSP+8],RAX
.L_41e3d4:

            mov EDI,DWORD PTR [RSP+24]
            add DWORD PTR [RSP],1
            test EDI,EDI
            jne .L_41e265
.L_41e3e4:

            mov R15,QWORD PTR [RSP+32]
            lea RDX,QWORD PTR [RIP+.L_41eb19]
            mov RCX,R12
            mov ESI,37
            xor EAX,EAX
            mov RDI,R15
            call .L_414fa0

            mov RDX,R15
.L_41e405:

            mov ECX,DWORD PTR [RDX]
            add RDX,4
            lea EAX,DWORD PTR [RCX-16843009]
            not ECX
            and EAX,ECX
            and EAX,2155905152
            je .L_41e405

            mov ECX,EAX
            mov RSI,QWORD PTR [RSP+32]
            mov R15,QWORD PTR [RSP+8]
            shr ECX,16
            test EAX,32896
            cmove EAX,ECX
            lea RCX,QWORD PTR [RDX+2]
            cmove RDX,RCX
            mov ECX,EAX
            add CL,AL
            sbb RDX,3
            mov R12D,EDX
            sub R12D,ESI
            test R15,R15
            je .L_41e487

            movsxd RCX,DWORD PTR [RSP+20]
            test ECX,ECX
            jle .L_41e487

            mov RDX,RCX
            mov RDI,R15
            mov QWORD PTR [RSP+24],RCX
            call .L_41c650

            cmp R12D,DWORD PTR [RSP+20]
            jle .L_41e50f

            mov RCX,QWORD PTR [RSP+24]
            mov DWORD PTR [RSP+20],0
            add R15,RCX
            mov QWORD PTR [RSP+8],R15
.L_41e487:

            add DWORD PTR [RSP],R12D
            jmp .L_41e300
.L_41e490:

            mov RDI,RDX
            mov QWORD PTR [RSP],RDX
            call .L_41e030

            test EAX,EAX
            mov EBX,EAX
            mov RDX,QWORD PTR [RSP]
            jne .L_41e4af
.L_41e4a6:

            mov RBX,QWORD PTR [RDX+24]
            jmp .L_41e154
.L_41e4af:

            mov EDI,EAX
            mov QWORD PTR [RSP],RDX
            call .L_41df50

            test RAX,RAX
            mov RBP,RAX
            je .L_41e4fa
.L_41e4c2:

            mov RDI,QWORD PTR [RSP+8]
            test RDI,RDI
            je .L_41e4d9

            movsxd RDX,DWORD PTR [RSP+20]
            mov RSI,RBP
            call .L_41c650
.L_41e4d9:

            mov RDI,RBP
            call strlen@PLT

            mov DWORD PTR [RSP],EAX
            jmp .L_41e21b
.L_41e4e9:

            movsxd RAX,ECX
            sub DWORD PTR [RSP+20],ECX
            add QWORD PTR [RSP+8],RAX
            jmp .L_41e2ee
.L_41e4fa:

            mov EDI,EBX
            call .L_41de70

            test RAX,RAX
            mov RBP,RAX
            jne .L_41e4c2

            mov RDX,QWORD PTR [RSP]
            jmp .L_41e4a6
.L_41e50f:

            movsxd RAX,R12D
            sub DWORD PTR [RSP+20],R12D
            add QWORD PTR [RSP+8],RAX
            jmp .L_41e487
.L_41e521:

            mov ESI,80
            mov RDI,R13
            call .L_4089e0

            test EAX,EAX
            je .L_41e20b
.L_41e536:

            mov ECX,2
            jmp .L_41e3a8
.L_41e540:

            call __stack_chk_fail@PLT
.L_41e545:

            cmp DWORD PTR [RSP+24],0
            je .L_41e3e4

            cmp R12,79
            ja .L_41e568

            mov DWORD PTR [RSP+24],0
            jmp .L_41e38a
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e568:

            sub R12,80
            mov DWORD PTR [RSP+24],0
            jmp .L_41e536
.L_41e576:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e580:

            sub RSP,88
.L_41e584:

            mov QWORD PTR [RSP+40],RDI
            mov RDI,QWORD PTR [RIP+.L_63b400]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+32]
            test RDI,RDI
            mov QWORD PTR [RSP+8],RAX
            je .L_41e5f0

            lea RSI,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+16],2
            mov QWORD PTR [RSP+24],RAX
            call .L_41d580

            test RAX,RAX
            je .L_41e5f0

            mov RAX,QWORD PTR [RAX+8]
            mov EAX,DWORD PTR [RAX+16]
.L_41e5d2:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41e632

            add RSP,88
.L_41e5e6:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e5f0:

            lea RDI,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RIP+.L_41d770]
            lea RSI,QWORD PTR [RIP+.L_424000]
            xor R9D,R9D
            mov EDX,951
            mov ECX,4
            call .L_41d960

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_41e5d2

            mov EAX,DWORD PTR [RDX]
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RIP+.L_62f840]
            mov EAX,DWORD PTR [RAX+RDX*8+16]
            jmp .L_41e5d2
.L_41e632:

            call __stack_chk_fail@PLT
.L_41e637:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e640:

            sub RSP,88
.L_41e644:

            mov QWORD PTR [RSP+32],RDI
            mov RDI,QWORD PTR [RIP+.L_63b400]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+72],RAX
            xor EAX,EAX
            lea RAX,QWORD PTR [RSP+32]
            test RDI,RDI
            mov QWORD PTR [RSP+8],RAX
            je .L_41e6b0

            lea RSI,QWORD PTR [RSP+16]
            mov DWORD PTR [RSP+16],1
            mov QWORD PTR [RSP+24],RAX
            call .L_41d580

            test RAX,RAX
            je .L_41e6b0

            mov RAX,QWORD PTR [RAX+8]
            mov EAX,DWORD PTR [RAX+16]
.L_41e692:

            mov RCX,QWORD PTR [RSP+72]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41e6f2

            add RSP,88
.L_41e6a6:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e6b0:

            lea RDI,QWORD PTR [RSP+8]
            lea R8,QWORD PTR [RIP+.L_41d790]
            lea RSI,QWORD PTR [RIP+.L_424ee0]
            xor R9D,R9D
            mov EDX,951
            mov ECX,4
            call .L_41d960

            mov RDX,RAX
            xor EAX,EAX
            test RDX,RDX
            je .L_41e692

            mov EAX,DWORD PTR [RDX]
            lea RDX,QWORD PTR [RAX+RAX*4]
            lea RAX,QWORD PTR [RIP+.L_62f840]
            mov EAX,DWORD PTR [RAX+RDX*8+16]
            jmp .L_41e692
.L_41e6f2:

            call __stack_chk_fail@PLT
.L_41e6f7:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e700:

            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            sub RSP,56
.L_41e70d:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            test ESI,ESI
            jne .L_41e73e

            call .L_41e640

            test EAX,EAX
            jne .L_41e800

            mov RDI,RBX
            call .L_41e580

            test EAX,EAX
            jne .L_41e800
.L_41e73e:

            xor ESI,ESI
            xor EDI,EDI
            mov ECX,4294967295
            mov RDX,RBX
            call .L_428520

            test EAX,EAX
            mov EBP,EAX
            jle .L_41e810

            xor EDI,EDI
            mov EDX,6
            mov ESI,EAX
            call .L_4293b0

            lea RSI,QWORD PTR [RIP+.L_41eb0f]
            mov EDX,470
            mov EDI,EAX
            mov R13D,EAX
            call .L_418820

            test RAX,RAX
            mov R12,RAX
            je .L_41e810

            lea RDI,QWORD PTR [RSP+24]
            xor R8D,R8D
            mov ECX,6
            mov EDX,EBP
            xor ESI,ESI
            mov QWORD PTR [RSP+24],RAX
            call .L_429280

            mov RDI,QWORD PTR [RSP+24]
            mov ECX,4294967295
            mov RDX,RBX
            mov ESI,EBP
            call .L_428520

            lea RSI,QWORD PTR [RSP+32]
            movsxd RDX,R13D
            xor EDI,EDI
            mov QWORD PTR [RSP+32],R12
            call .L_428e80

            mov RDI,R12
            mov QWORD PTR [RSP+8],RAX
            call .L_418aa0

            mov RAX,QWORD PTR [RSP+8]
.L_41e7de:

            mov RCX,QWORD PTR [RSP+40]
            xor RCX,QWORD PTR FS:[40]
            jne .L_41e814

            add RSP,56
.L_41e7f2:

            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e800:

            mov EDI,EAX
            call .L_41dd90

            jmp .L_41e7de
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e810:

            xor EAX,EAX
            jmp .L_41e7de
.L_41e814:

            call __stack_chk_fail@PLT
.L_41e819:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e820:

            push RBP
            push RBX
            xor ESI,ESI
            sub RSP,8
            call .L_41e700

            mov RBX,RAX
            mov RDI,RAX
            call .L_41e030

            mov RDI,RBX
            mov EBP,EAX
            call .L_428c40

            add RSP,8
            mov EAX,EBP
            pop RBX
            pop RBP
            ret 
.L_41e84b:

            nop
            nop
            nop
            nop
            nop
.L_41e850:

            test EDX,EDX
            je .L_41e860

            xor R9D,R9D
            jmp .L_41d960
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_41e860:

            xor EAX,EAX
            ret 
.L_41e863:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41e870:

            test EDX,EDX
            je .L_41e879

            jmp .L_41d960
.L_41e879:

            xor EAX,EAX
            ret 
.L_41e87c:

            nop
            nop
            nop
            nop
.L_41e880:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            mov RDX,RDI
            push RBP
            push RBX
            mov R12,RDI
            mov R14,RSI
            xor EDI,EDI
            xor ESI,ESI
            sub RSP,8
.L_41e89e:

            mov ECX,4294967295
            xor EBX,EBX
            call .L_428520

            test EAX,EAX
            jle .L_41e8f5

            lea RSI,QWORD PTR [RIP+.L_41eb0f]
            mov EDX,786
            mov EDI,EAX
            mov EBP,EAX
            call .L_418820

            test RAX,RAX
            mov R13,RAX
            je .L_41e910

            mov ESI,EBP
            mov ECX,4294967295
            mov RDX,R12
            mov RDI,RAX
            xor EBP,EBP
            call .L_428520

            test EAX,EAX
            mov EBX,EAX
            jne .L_41e938
.L_41e8e5:

            mov RDI,RBP
            call .L_428c40

            mov RDI,R13
            call .L_418aa0
.L_41e8f5:

            add RSP,8
.L_41e8f9:

            mov EAX,EBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41e910:

            lea RCX,QWORD PTR [RIP+.L_41eb0f]
            mov R8D,787
            mov EDX,65
            mov ESI,100
            mov EDI,8
            call .L_416a00

            jmp .L_41e8f5
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_41e938:

            mov EDI,DWORD PTR [RIP+.L_639770]
            mov EDX,EBX
            mov R8,R15
            mov RCX,R14
            mov RSI,R13
            xor EBX,EBX
            lea EAX,DWORD PTR [RDI+1]
            mov DWORD PTR [RIP+.L_639770],EAX
            call .L_428f40

            test RAX,RAX
            mov RBP,RAX
            je .L_41e8e5

            mov RDI,RAX
            call .L_41db60

            mov EBX,EAX
            jmp .L_41e8e5
.L_41e970:

            push R14
            push R13
            xor R14D,R14D
            push R12
            push RBP
            mov R13,RDI
            push RBX
            xor R12D,R12D
            xor EBP,EBP
            sub RSP,528
.L_41e98a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+520],RAX
            xor EAX,EAX
            mov RBX,RSP
.L_41e9a0:

            mov EDX,512
            mov RSI,RBX
            mov RDI,R13
            call .L_4127a0

            test EAX,EAX
            jle .L_41ea70

            sub EAX,1
            cdqe 
            mov BYTE PTR [RSP+RAX*1],0
            call __ctype_b_loc@PLT

            mov RDI,QWORD PTR [RAX]
            movzx EAX,BYTE PTR [RSP]
            mov R8,RAX
            movzx EAX,WORD PTR [RDI+RAX*2]
            test AL,8
            je .L_41ea70

            test AH,8
            jne .L_41e9eb

            cmp R8B,46
            jne .L_41eaf2
.L_41e9eb:

            mov RAX,RBX
            nop
            nop
.L_41e9f0:

            add RAX,1
            movzx ECX,BYTE PTR [RAX]
            test BYTE PTR [RDI+RCX*2+1],8
            mov RDX,RCX
            jne .L_41e9f0

            cmp CL,46
            je .L_41e9f0
.L_41ea06:

            xor ESI,ESI
            test DL,DL
            jne .L_41ea30
.L_41ea0c:

            test R8B,R8B
            je .L_41ea70
.L_41ea11:

            mov RDX,R12
            mov RDI,RBX
            call .L_41e880

            test EAX,EAX
            je .L_41ea70

            add EBP,1
            jmp .L_41e9a0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_41ea30:

            movzx EDX,BYTE PTR [RAX+1]
            mov BYTE PTR [RAX],0
            lea RSI,QWORD PTR [RAX+1]
            test BYTE PTR [RDI+RDX*2+1],32
            mov RAX,RDX
            je .L_41ea59

            nop
            nop
            nop
.L_41ea48:

            add RSI,1
            movzx EDX,BYTE PTR [RSI]
            test BYTE PTR [RDI+RDX*2+1],32
            mov RAX,RDX
            jne .L_41ea48
.L_41ea59:

            test AL,AL
            jne .L_41ea99

            movzx R8D,BYTE PTR [RSP]
            xor ESI,ESI
            test R8B,R8B
            jne .L_41ea11

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_41ea70:

            mov RBX,QWORD PTR [RSP+520]
            xor RBX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_41eb0a

            add RSP,528
.L_41ea90:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
.L_41ea99:

            movzx EAX,BYTE PTR [RSI]
            mov RDX,RSI
            test AL,AL
            jne .L_41eab3

            jmp .L_41eafd
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_41eaa8:

            add RDX,1
            movzx EAX,BYTE PTR [RDX]
            test AL,AL
            je .L_41eafd
.L_41eab3:

            test BYTE PTR [RDI+RAX*2+1],32
            je .L_41eaa8

            mov BYTE PTR [RDX],0
            lea R12,QWORD PTR [RDX+1]
            movzx EDX,BYTE PTR [RDX+1]
            test BYTE PTR [RDI+RDX*2+1],32
            mov RAX,RDX
            je .L_41eae2
.L_41eacf:

            add R12,1
            movzx EDX,BYTE PTR [R12]
            test BYTE PTR [RDI+RDX*2+1],32
            mov RAX,RDX
            jne .L_41eacf
.L_41eae2:

            test AL,AL
            movzx R8D,BYTE PTR [RSP]
            cmove R12,R14
            jmp .L_41ea0c
.L_41eaf2:

            mov EDX,R8D
            mov RAX,RBX
            jmp .L_41ea06
.L_41eafd:

            movzx R8D,BYTE PTR [RSP]
            xor R12D,R12D
            jmp .L_41ea0c
.L_41eb0a:

            call __stack_chk_fail@PLT
.L_41eb0f:
          .string "obj_dat.c"
.L_41eb19:
          .string ".%lu"
.L_41eb1e:
          .string "UNDEF"
.L_41eb24:
          .string "undefined"
.L_41eb2e:
          .string "rsadsi"
.L_41eb35:
          .string "RSA Data Security, Inc."
.L_41eb4d:
          .string "pkcs"
.L_41eb52:
          .string "RSA Data Security, Inc. PKCS"
.L_41eb6f:
          .string "MD2"
.L_41eb73:
          .string "md2"
.L_41eb77:
          .string "MD5"
.L_41eb7b:
          .string "md5"
.L_41eb7f:
          .string "RC4"
.L_41eb83:
          .string "rc4"
.L_41eb87:
          .string "rsaEncryption"
.L_41eb95:
          .string "RSA-MD2"
.L_41eb9d:
          .string "md2WithRSAEncryption"
.L_41ebb2:
          .string "RSA-MD5"
.L_41ebba:
          .string "md5WithRSAEncryption"
.L_41ebcf:
          .string "PBE-MD2-DES"
.L_41ebdb:
          .string "pbeWithMD2AndDES-CBC"
.L_41ebf0:
          .string "PBE-MD5-DES"
.L_41ebfc:
          .string "pbeWithMD5AndDES-CBC"
.L_41ec11:
          .string "X500"
.L_41ec16:
          .string "directory services (X.500)"
.L_41ec31:
          .string "X509"
.L_41ec36:
          .string "CN"
.L_41ec39:
          .string "commonName"
.L_41ec44:
          .string "C"
.L_41ec46:
          .string "countryName"
.L_41ec52:
          .string "L"
.L_41ec54:
          .string "localityName"
.L_41ec61:
          .string "ST"
.L_41ec64:
          .string "stateOrProvinceName"
.L_41ec78:
          .string "O"
.L_41ec7a:
          .string "organizationName"
.L_41ec8b:
          .string "OU"
.L_41ec8e:
          .string "organizationalUnitName"
.L_41eca5:
          .string "RSA"
.L_41eca9:
          .string "rsa"
.L_41ecad:
          .string "pkcs7"
.L_41ecb3:
          .string "pkcs7-data"
.L_41ecbe:
          .string "pkcs7-signedData"
.L_41eccf:
          .string "pkcs7-envelopedData"
.L_41ece3:
          .string "pkcs7-signedAndEnvelopedData"
.L_41ed00:
          .string "pkcs7-digestData"
.L_41ed11:
          .string "pkcs7-encryptedData"
.L_41ed25:
          .string "pkcs3"
.L_41ed2b:
          .string "dhKeyAgreement"
.L_41ed3a:
          .string "DES-ECB"
.L_41ed42:
          .string "des-ecb"
.L_41ed4a:
          .string "DES-CFB"
.L_41ed52:
          .string "des-cfb"
.L_41ed5a:
          .string "DES-CBC"
.L_41ed62:
          .string "des-cbc"
.L_41ed6a:
          .string "DES-EDE"
.L_41ed72:
          .string "des-ede"
.L_41ed7a:
          .string "DES-EDE3"
.L_41ed83:
          .string "des-ede3"
.L_41ed8c:
          .string "IDEA-CBC"
.L_41ed95:
          .string "idea-cbc"
.L_41ed9e:
          .string "IDEA-CFB"
.L_41eda7:
          .string "idea-cfb"
.L_41edb0:
          .string "IDEA-ECB"
.L_41edb9:
          .string "idea-ecb"
.L_41edc2:
          .string "RC2-CBC"
.L_41edca:
          .string "rc2-cbc"
.L_41edd2:
          .string "RC2-ECB"
.L_41edda:
          .string "rc2-ecb"
.L_41ede2:
          .string "RC2-CFB"
.L_41edea:
          .string "rc2-cfb"
.L_41edf2:
          .string "RC2-OFB"
.L_41edfa:
          .string "rc2-ofb"
.L_41ee02:
          .string "SHA"
.L_41ee06:
          .string "sha"
.L_41ee0a:
          .string "RSA-SHA"
.L_41ee12:
          .string "shaWithRSAEncryption"
.L_41ee27:
          .string "DES-EDE-CBC"
.L_41ee33:
          .string "des-ede-cbc"
.L_41ee3f:
          .string "DES-EDE3-CBC"
.L_41ee4c:
          .string "des-ede3-cbc"
.L_41ee59:
          .string "DES-OFB"
.L_41ee61:
          .string "des-ofb"
.L_41ee69:
          .string "IDEA-OFB"
.L_41ee72:
          .string "idea-ofb"
.L_41ee7b:
          .string "pkcs9"
.L_41ee81:
          .string "emailAddress"
.L_41ee8e:
          .string "unstructuredName"
.L_41ee9f:
          .string "contentType"
.L_41eeab:
          .string "messageDigest"
.L_41eeb9:
          .string "signingTime"
.L_41eec5:
          .string "countersignature"
.L_41eed6:
          .string "challengePassword"
.L_41eee8:
          .string "unstructuredAddress"
.L_41eefc:
          .string "extendedCertificateAttributes"
.L_41ef1a:
          .string "Netscape"
.L_41ef23:
          .string "Netscape Communications Corp."
.L_41ef41:
          .string "nsCertExt"
.L_41ef4b:
          .string "nsDataType"
.L_41ef56:
          .string "Netscape Data Type"
.L_41ef69:
          .string "DES-EDE-CFB"
.L_41ef75:
          .string "des-ede-cfb"
.L_41ef81:
          .string "DES-EDE3-CFB"
.L_41ef8e:
          .string "des-ede3-cfb"
.L_41ef9b:
          .string "DES-EDE-OFB"
.L_41efa7:
          .string "des-ede-ofb"
.L_41efb3:
          .string "DES-EDE3-OFB"
.L_41efc0:
          .string "des-ede3-ofb"
.L_41efcd:
          .string "SHA1"
.L_41efd2:
          .string "sha1"
.L_41efd7:
          .string "RSA-SHA1"
.L_41efe0:
          .string "sha1WithRSAEncryption"
.L_41eff6:
          .string "DSA-SHA"
.L_41effe:
          .string "dsaWithSHA"
.L_41f009:
          .string "DSA-old"
.L_41f011:
          .string "dsaEncryption-old"
.L_41f023:
          .string "PBE-SHA1-RC2-64"
.L_41f033:
          .string "pbeWithSHA1AndRC2-CBC"
.L_41f049:
          .string "PBKDF2"
.L_41f050:
          .string "DSA-SHA1-old"
.L_41f05d:
          .string "dsaWithSHA1-old"
.L_41f06d:
          .string "nsCertType"
.L_41f078:
          .string "Netscape Cert Type"
.L_41f08b:
          .string "nsBaseUrl"
.L_41f095:
          .string "Netscape Base Url"
.L_41f0a7:
          .string "nsRevocationUrl"
.L_41f0b7:
          .string "Netscape Revocation Url"
.L_41f0cf:
          .string "nsCaRevocationUrl"
.L_41f0e1:
          .string "Netscape CA Revocation Url"
.L_41f0fc:
          .string "nsRenewalUrl"
.L_41f109:
          .string "Netscape Renewal Url"
.L_41f11e:
          .string "nsCaPolicyUrl"
.L_41f12c:
          .string "Netscape CA Policy Url"
.L_41f143:
          .string "nsSslServerName"
.L_41f153:
          .string "Netscape SSL Server Name"
.L_41f16c:
          .string "nsComment"
.L_41f176:
          .string "Netscape Comment"
.L_41f187:
          .string "nsCertSequence"
.L_41f196:
          .string "Netscape Certificate Sequence"
.L_41f1b4:
          .string "DESX-CBC"
.L_41f1bd:
          .string "desx-cbc"
.L_41f1c6:
          .string "id-ce"
.L_41f1cc:
          .string "subjectKeyIdentifier"
.L_41f1e1:
          .string "X509v3 Subject Key Identifier"
.L_41f1ff:
          .string "keyUsage"
.L_41f208:
          .string "X509v3 Key Usage"
.L_41f219:
          .string "privateKeyUsagePeriod"
.L_41f22f:
          .string "subjectAltName"
.L_41f23e:
          .string "issuerAltName"
.L_41f24c:
          .string "basicConstraints"
.L_41f25d:
          .string "X509v3 Basic Constraints"
.L_41f276:
          .string "crlNumber"
.L_41f280:
          .string "X509v3 CRL Number"
.L_41f292:
          .string "certificatePolicies"
.L_41f2a6:
          .string "X509v3 Certificate Policies"
.L_41f2c2:
          .string "authorityKeyIdentifier"
.L_41f2d9:
          .string "BF-CBC"
.L_41f2e0:
          .string "bf-cbc"
.L_41f2e7:
          .string "BF-ECB"
.L_41f2ee:
          .string "bf-ecb"
.L_41f2f5:
          .string "BF-CFB"
.L_41f2fc:
          .string "bf-cfb"
.L_41f303:
          .string "BF-OFB"
.L_41f30a:
          .string "bf-ofb"
.L_41f311:
          .string "MDC2"
.L_41f316:
          .string "mdc2"
.L_41f31b:
          .string "RSA-MDC2"
.L_41f324:
          .string "mdc2WithRSA"
.L_41f330:
          .string "RC4-40"
.L_41f337:
          .string "rc4-40"
.L_41f33e:
          .string "RC2-40-CBC"
.L_41f349:
          .string "rc2-40-cbc"
.L_41f354:
          .string "GN"
.L_41f357:
          .string "givenName"
.L_41f361:
          .string "SN"
.L_41f364:
          .string "surname"
.L_41f36c:
          .string "initials"
.L_41f375:
          .string "crlDistributionPoints"
.L_41f38b:
          .string "RSA-NP-MD5"
.L_41f396:
          .string "md5WithRSA"
.L_41f3a1:
          .string "serialNumber"
.L_41f3ae:
          .string "title"
.L_41f3b4:
          .string "description"
.L_41f3c0:
          .string "CAST5-CBC"
.L_41f3ca:
          .string "cast5-cbc"
.L_41f3d4:
          .string "CAST5-ECB"
.L_41f3de:
          .string "cast5-ecb"
.L_41f3e8:
          .string "CAST5-CFB"
.L_41f3f2:
          .string "cast5-cfb"
.L_41f3fc:
          .string "CAST5-OFB"
.L_41f406:
          .string "cast5-ofb"
.L_41f410:
          .string "pbeWithMD5AndCast5CBC"
.L_41f426:
          .string "DSA-SHA1"
.L_41f42f:
          .string "dsaWithSHA1"
.L_41f43b:
          .string "MD5-SHA1"
.L_41f444:
          .string "md5-sha1"
.L_41f44d:
          .string "RSA-SHA1-2"
.L_41f458:
          .string "sha1WithRSA"
.L_41f464:
          .string "DSA"
.L_41f468:
          .string "dsaEncryption"
.L_41f476:
          .string "RIPEMD160"
.L_41f480:
          .string "ripemd160"
.L_41f48a:
          .string "RSA-RIPEMD160"
.L_41f498:
          .string "ripemd160WithRSA"
.L_41f4a9:
          .string "RC5-CBC"
.L_41f4b1:
          .string "rc5-cbc"
.L_41f4b9:
          .string "RC5-ECB"
.L_41f4c1:
          .string "rc5-ecb"
.L_41f4c9:
          .string "RC5-CFB"
.L_41f4d1:
          .string "rc5-cfb"
.L_41f4d9:
          .string "RC5-OFB"
.L_41f4e1:
          .string "rc5-ofb"
.L_41f4e9:
          .string "RLE"
.L_41f4ed:
          .string "run length compression"
.L_41f504:
          .string "ZLIB"
.L_41f509:
          .string "zlib compression"
.L_41f51a:
          .string "extendedKeyUsage"
.L_41f52b:
          .string "X509v3 Extended Key Usage"
.L_41f545:
          .string "PKIX"
.L_41f54a:
          .string "id-kp"
.L_41f550:
          .string "serverAuth"
.L_41f55b:
          .string "TLS Web Server Authentication"
.L_41f579:
          .string "clientAuth"
.L_41f584:
          .string "TLS Web Client Authentication"
.L_41f5a2:
          .string "codeSigning"
.L_41f5ae:
          .string "Code Signing"
.L_41f5bb:
          .string "emailProtection"
.L_41f5cb:
          .string "E-mail Protection"
.L_41f5dd:
          .string "timeStamping"
.L_41f5ea:
          .string "Time Stamping"
.L_41f5f8:
          .string "msCodeInd"
.L_41f602:
          .string "msCodeCom"
.L_41f60c:
          .string "msCTLSign"
.L_41f616:
          .string "Microsoft Trust List Signing"
.L_41f633:
          .string "msSGC"
.L_41f639:
          .string "Microsoft Server Gated Crypto"
.L_41f657:
          .string "msEFS"
.L_41f65d:
          .string "nsSGC"
.L_41f663:
          .string "Netscape Server Gated Crypto"
.L_41f680:
          .string "deltaCRL"
.L_41f689:
          .string "X509v3 Delta CRL Indicator"
.L_41f6a4:
          .string "CRLReason"
.L_41f6ae:
          .string "X509v3 CRL Reason Code"
.L_41f6c5:
          .string "invalidityDate"
.L_41f6d4:
          .string "Invalidity Date"
.L_41f6e4:
          .string "SXNetID"
.L_41f6ec:
          .string "Strong Extranet ID"
.L_41f6ff:
          .string "PBE-SHA1-RC4-128"
.L_41f710:
          .string "pbeWithSHA1And128BitRC4"
.L_41f728:
          .string "PBE-SHA1-RC4-40"
.L_41f738:
          .string "pbeWithSHA1And40BitRC4"
.L_41f74f:
          .string "PBE-SHA1-3DES"
.L_41f75d:
          .string "PBE-SHA1-2DES"
.L_41f76b:
          .string "PBE-SHA1-RC2-128"
.L_41f77c:
          .string "pbeWithSHA1And128BitRC2-CBC"
.L_41f798:
          .string "PBE-SHA1-RC2-40"
.L_41f7a8:
          .string "pbeWithSHA1And40BitRC2-CBC"
.L_41f7c3:
          .string "keyBag"
.L_41f7ca:
          .string "pkcs8ShroudedKeyBag"
.L_41f7de:
          .string "certBag"
.L_41f7e6:
          .string "crlBag"
.L_41f7ed:
          .string "secretBag"
.L_41f7f7:
          .string "safeContentsBag"
.L_41f807:
          .string "friendlyName"
.L_41f814:
          .string "localKeyID"
.L_41f81f:
          .string "x509Certificate"
.L_41f82f:
          .string "sdsiCertificate"
.L_41f83f:
          .string "x509Crl"
.L_41f847:
          .string "PBES2"
.L_41f84d:
          .string "PBMAC1"
.L_41f854:
          .string "hmacWithSHA1"
.L_41f861:
          .string "id-qt-cps"
.L_41f86b:
          .string "Policy Qualifier CPS"
.L_41f880:
          .string "id-qt-unotice"
.L_41f88e:
          .string "Policy Qualifier User Notice"
.L_41f8ab:
          .string "RC2-64-CBC"
.L_41f8b6:
          .string "rc2-64-cbc"
.L_41f8c1:
          .string "SMIME-CAPS"
.L_41f8cc:
          .string "S/MIME Capabilities"
.L_41f8e0:
          .string "PBE-MD2-RC2-64"
.L_41f8ef:
          .string "pbeWithMD2AndRC2-CBC"
.L_41f904:
          .string "PBE-MD5-RC2-64"
.L_41f913:
          .string "pbeWithMD5AndRC2-CBC"
.L_41f928:
          .string "PBE-SHA1-DES"
.L_41f935:
          .string "pbeWithSHA1AndDES-CBC"
.L_41f94b:
          .string "msExtReq"
.L_41f954:
          .string "Microsoft Extension Request"
.L_41f970:
          .string "extReq"
.L_41f977:
          .string "Extension Request"
.L_41f989:
          .string "name"
.L_41f98e:
          .string "dnQualifier"
.L_41f99a:
          .string "id-pe"
.L_41f9a0:
          .string "id-ad"
.L_41f9a6:
          .string "authorityInfoAccess"
.L_41f9ba:
          .string "Authority Information Access"
.L_41f9d7:
          .string "OCSP"
.L_41f9dc:
          .string "caIssuers"
.L_41f9e6:
          .string "CA Issuers"
.L_41f9f1:
          .string "OCSPSigning"
.L_41f9fd:
          .string "OCSP Signing"
.L_41fa0a:
          .string "ISO"
.L_41fa0e:
          .string "iso"
.L_41fa12:
          .string "member-body"
.L_41fa1e:
          .string "ISO Member Body"
.L_41fa2e:
          .string "ISO-US"
.L_41fa35:
          .string "ISO US Member Body"
.L_41fa48:
          .string "X9-57"
.L_41fa4e:
          .string "X9.57"
.L_41fa54:
          .string "X9cm"
.L_41fa59:
          .string "X9.57 CM ?"
.L_41fa64:
          .string "pkcs1"
.L_41fa6a:
          .string "pkcs5"
.L_41fa70:
          .string "SMIME"
.L_41fa76:
          .string "S/MIME"
.L_41fa7d:
          .string "id-smime-mod"
.L_41fa8a:
          .string "id-smime-ct"
.L_41fa96:
          .string "id-smime-aa"
.L_41faa2:
          .string "id-smime-alg"
.L_41faaf:
          .string "id-smime-cd"
.L_41fabb:
          .string "id-smime-spq"
.L_41fac8:
          .string "id-smime-cti"
.L_41fad5:
          .string "id-smime-mod-cms"
.L_41fae6:
          .string "id-smime-mod-ess"
.L_41faf7:
          .string "id-smime-mod-oid"
.L_41fb08:
          .string "id-smime-mod-msg-v3"
.L_41fb1c:
          .string "id-smime-ct-receipt"
.L_41fb30:
          .string "id-smime-ct-authData"
.L_41fb45:
          .string "id-smime-ct-publishCert"
.L_41fb5d:
          .string "id-smime-ct-TSTInfo"
.L_41fb71:
          .string "id-smime-ct-TDTInfo"
.L_41fb85:
          .string "id-smime-ct-contentInfo"
.L_41fb9d:
          .string "id-smime-ct-DVCSRequestData"
.L_41fbb9:
          .string "id-smime-ct-DVCSResponseData"
.L_41fbd6:
          .string "id-smime-aa-receiptRequest"
.L_41fbf1:
          .string "id-smime-aa-securityLabel"
.L_41fc0b:
          .string "id-smime-aa-mlExpandHistory"
.L_41fc27:
          .string "id-smime-aa-contentHint"
.L_41fc3f:
          .string "id-smime-aa-msgSigDigest"
.L_41fc58:
          .string "id-smime-aa-encapContentType"
.L_41fc75:
          .string "id-smime-aa-contentIdentifier"
.L_41fc93:
          .string "id-smime-aa-macValue"
.L_41fca8:
          .string "id-smime-aa-equivalentLabels"
.L_41fcc5:
          .string "id-smime-aa-contentReference"
.L_41fce2:
          .string "id-smime-aa-encrypKeyPref"
.L_41fcfc:
          .string "id-smime-aa-smimeEncryptCerts"
.L_41fd1a:
          .string "id-smime-aa-timeStampToken"
.L_41fd35:
          .string "id-smime-aa-ets-sigPolicyId"
.L_41fd51:
          .string "id-smime-aa-ets-signerAttr"
.L_41fd6c:
          .string "id-smime-aa-ets-otherSigCert"
.L_41fd89:
          .string "id-smime-aa-ets-certValues"
.L_41fda4:
          .string "id-smime-aa-ets-escTimeStamp"
.L_41fdc1:
          .string "id-smime-aa-signatureType"
.L_41fddb:
          .string "id-smime-aa-dvcs-dvc"
.L_41fdf0:
          .string "id-smime-alg-ESDHwith3DES"
.L_41fe0a:
          .string "id-smime-alg-ESDHwithRC2"
.L_41fe23:
          .string "id-smime-alg-3DESwrap"
.L_41fe39:
          .string "id-smime-alg-RC2wrap"
.L_41fe4e:
          .string "id-smime-alg-ESDH"
.L_41fe60:
          .string "id-smime-alg-CMS3DESwrap"
.L_41fe79:
          .string "id-smime-alg-CMSRC2wrap"
.L_41fe91:
          .string "id-smime-cd-ldap"
.L_41fea2:
          .string "id-smime-spq-ets-sqt-uri"
.L_41febb:
          .string "id-smime-spq-ets-sqt-unotice"
.L_41fed8:
          .string "MD4"
.L_41fedc:
          .string "md4"
.L_41fee0:
          .string "id-pkix-mod"
.L_41feec:
          .string "id-qt"
.L_41fef2:
          .string "id-it"
.L_41fef8:
          .string "id-pkip"
.L_41ff00:
          .string "id-alg"
.L_41ff07:
          .string "id-cmc"
.L_41ff0e:
          .string "id-on"
.L_41ff14:
          .string "id-pda"
.L_41ff1b:
          .string "id-aca"
.L_41ff22:
          .string "id-qcs"
.L_41ff29:
          .string "id-cct"
.L_41ff30:
          .string "id-pkix1-explicit-88"
.L_41ff45:
          .string "id-pkix1-implicit-88"
.L_41ff5a:
          .string "id-pkix1-explicit-93"
.L_41ff6f:
          .string "id-pkix1-implicit-93"
.L_41ff84:
          .string "id-mod-crmf"
.L_41ff90:
          .string "id-mod-cmc"
.L_41ff9b:
          .string "id-mod-kea-profile-88"
.L_41ffb1:
          .string "id-mod-kea-profile-93"
.L_41ffc7:
          .string "id-mod-cmp"
.L_41ffd2:
          .string "id-mod-qualified-cert-88"
.L_41ffeb:
          .string "id-mod-qualified-cert-93"
.L_420004:
          .string "id-mod-attribute-cert"
.L_42001a:
          .string "id-mod-timestamp-protocol"
.L_420034:
          .string "id-mod-ocsp"
.L_420040:
          .string "id-mod-dvcs"
.L_42004c:
          .string "id-mod-cmp2000"
.L_42005b:
          .string "biometricInfo"
.L_420069:
          .string "Biometric Info"
.L_420078:
          .string "qcStatements"
.L_420085:
          .string "ac-auditEntity"
.L_420094:
          .string "ac-targeting"
.L_4200a1:
          .string "aaControls"
.L_4200ac:
          .string "sbgp-ipAddrBlock"
.L_4200bd:
          .string "sbgp-autonomousSysNum"
.L_4200d3:
          .string "sbgp-routerIdentifier"
.L_4200e9:
          .string "textNotice"
.L_4200f4:
          .string "ipsecEndSystem"
.L_420103:
          .string "IPSec End System"
.L_420114:
          .string "ipsecTunnel"
.L_420120:
          .string "IPSec Tunnel"
.L_42012d:
          .string "ipsecUser"
.L_420137:
          .string "IPSec User"
.L_420142:
          .string "DVCS"
.L_420147:
          .string "dvcs"
.L_42014c:
          .string "id-it-caProtEncCert"
.L_420160:
          .string "id-it-signKeyPairTypes"
.L_420177:
          .string "id-it-encKeyPairTypes"
.L_42018d:
          .string "id-it-preferredSymmAlg"
.L_4201a4:
          .string "id-it-caKeyUpdateInfo"
.L_4201ba:
          .string "id-it-currentCRL"
.L_4201cb:
          .string "id-it-unsupportedOIDs"
.L_4201e1:
          .string "id-it-subscriptionRequest"
.L_4201fb:
          .string "id-it-subscriptionResponse"
.L_420216:
          .string "id-it-keyPairParamReq"
.L_42022c:
          .string "id-it-keyPairParamRep"
.L_420242:
          .string "id-it-revPassphrase"
.L_420256:
          .string "id-it-implicitConfirm"
.L_42026c:
          .string "id-it-confirmWaitTime"
.L_420282:
          .string "id-it-origPKIMessage"
.L_420297:
          .string "id-regCtrl"
.L_4202a2:
          .string "id-regInfo"
.L_4202ad:
          .string "id-regCtrl-regToken"
.L_4202c1:
          .string "id-regCtrl-authenticator"
.L_4202da:
          .string "id-regCtrl-pkiPublicationInfo"
.L_4202f8:
          .string "id-regCtrl-pkiArchiveOptions"
.L_420315:
          .string "id-regCtrl-oldCertID"
.L_42032a:
          .string "id-regCtrl-protocolEncrKey"
.L_420345:
          .string "id-regInfo-utf8Pairs"
.L_42035a:
          .string "id-regInfo-certReq"
.L_42036d:
          .string "id-alg-des40"
.L_42037a:
          .string "id-alg-noSignature"
.L_42038d:
          .string "id-alg-dh-sig-hmac-sha1"
.L_4203a5:
          .string "id-alg-dh-pop"
.L_4203b3:
          .string "id-cmc-statusInfo"
.L_4203c5:
          .string "id-cmc-identification"
.L_4203db:
          .string "id-cmc-identityProof"
.L_4203f0:
          .string "id-cmc-dataReturn"
.L_420402:
          .string "id-cmc-transactionId"
.L_420417:
          .string "id-cmc-senderNonce"
.L_42042a:
          .string "id-cmc-recipientNonce"
.L_420440:
          .string "id-cmc-addExtensions"
.L_420455:
          .string "id-cmc-encryptedPOP"
.L_420469:
          .string "id-cmc-decryptedPOP"
.L_42047d:
          .string "id-cmc-lraPOPWitness"
.L_420492:
          .string "id-cmc-getCert"
.L_4204a1:
          .string "id-cmc-getCRL"
.L_4204af:
          .string "id-cmc-revokeRequest"
.L_4204c4:
          .string "id-cmc-regInfo"
.L_4204d3:
          .string "id-cmc-responseInfo"
.L_4204e7:
          .string "id-cmc-queryPending"
.L_4204fb:
          .string "id-cmc-popLinkRandom"
.L_420510:
          .string "id-cmc-popLinkWitness"
.L_420526:
          .string "id-cmc-confirmCertAcceptance"
.L_420543:
          .string "id-on-personalData"
.L_420556:
          .string "id-pda-dateOfBirth"
.L_420569:
          .string "id-pda-placeOfBirth"
.L_42057d:
          .string "id-pda-gender"
.L_42058b:
          .string "id-pda-countryOfCitizenship"
.L_4205a7:
          .string "id-pda-countryOfResidence"
.L_4205c1:
          .string "id-aca-authenticationInfo"
.L_4205db:
          .string "id-aca-accessIdentity"
.L_4205f1:
          .string "id-aca-chargingIdentity"
.L_420609:
          .string "id-aca-group"
.L_420616:
          .string "id-aca-role"
.L_420622:
          .string "id-qcs-pkixQCSyntax-v1"
.L_420639:
          .string "id-cct-crs"
.L_420644:
          .string "id-cct-PKIData"
.L_420653:
          .string "id-cct-PKIResponse"
.L_420666:
          .string "ad_timestamping"
.L_420676:
          .string "AD Time Stamping"
.L_420687:
          .string "AD_DVCS"
.L_42068f:
          .string "ad dvcs"
.L_420697:
          .string "basicOCSPResponse"
.L_4206a9:
          .string "Basic OCSP Response"
.L_4206bd:
          .string "Nonce"
.L_4206c3:
          .string "OCSP Nonce"
.L_4206ce:
          .string "CrlID"
.L_4206d4:
          .string "OCSP CRL ID"
.L_4206e0:
          .string "acceptableResponses"
.L_4206f4:
          .string "Acceptable OCSP Responses"
.L_42070e:
          .string "noCheck"
.L_420716:
          .string "OCSP No Check"
.L_420724:
          .string "archiveCutoff"
.L_420732:
          .string "OCSP Archive Cutoff"
.L_420746:
          .string "serviceLocator"
.L_420755:
          .string "OCSP Service Locator"
.L_42076a:
          .string "extendedStatus"
.L_420779:
          .string "Extended OCSP Status"
.L_42078e:
          .string "valid"
.L_420794:
          .string "path"
.L_420799:
          .string "trustRoot"
.L_4207a3:
          .string "Trust Root"
.L_4207ae:
          .string "algorithm"
.L_4207b8:
          .string "rsaSignature"
.L_4207c5:
          .string "X500algorithms"
.L_4207d4:
          .string "ORG"
.L_4207d8:
          .string "org"
.L_4207dc:
          .string "DOD"
.L_4207e0:
          .string "dod"
.L_4207e4:
          .string "IANA"
.L_4207e9:
          .string "iana"
.L_4207ee:
          .string "directory"
.L_4207f8:
          .string "Directory"
.L_420802:
          .string "mgmt"
.L_420807:
          .string "Management"
.L_420812:
          .string "experimental"
.L_42081f:
          .string "Experimental"
.L_42082c:
          .string "private"
.L_420834:
          .string "Private"
.L_42083c:
          .string "security"
.L_420845:
          .string "Security"
.L_42084e:
          .string "snmpv2"
.L_420855:
          .string "SNMPv2"
.L_42085c:
          .string "Mail"
.L_420861:
          .string "enterprises"
.L_42086d:
          .string "Enterprises"
.L_420879:
          .string "dcobject"
.L_420882:
          .string "dcObject"
.L_42088b:
          .string "DC"
.L_42088e:
          .string "domainComponent"
.L_42089e:
          .string "domain"
.L_4208a5:
          .string "Domain"
.L_4208ac:
          .string "NULL"
.L_4208b1:
          .string "selected-attribute-types"
.L_4208ca:
          .string "Selected Attribute Types"
.L_4208e3:
          .string "clearance"
.L_4208ed:
          .string "RSA-MD4"
.L_4208f5:
          .string "md4WithRSAEncryption"
.L_42090a:
          .string "ac-proxying"
.L_420916:
          .string "subjectInfoAccess"
.L_420928:
          .string "Subject Information Access"
.L_420943:
          .string "id-aca-encAttrs"
.L_420953:
          .string "role"
.L_420958:
          .string "policyConstraints"
.L_42096a:
          .string "X509v3 Policy Constraints"
.L_420984:
          .string "targetInformation"
.L_420996:
          .string "X509v3 AC Targeting"
.L_4209aa:
          .string "noRevAvail"
.L_4209b5:
          .string "ansi-X9-62"
.L_4209c0:
          .string "ANSI X9.62"
.L_4209cb:
          .string "prime-field"
.L_4209d7:
          .string "characteristic-two-field"
.L_4209f0:
          .string "id-ecPublicKey"
.L_4209ff:
          .string "prime192v1"
.L_420a0a:
          .string "prime192v2"
.L_420a15:
          .string "prime192v3"
.L_420a20:
          .string "prime239v1"
.L_420a2b:
          .string "prime239v2"
.L_420a36:
          .string "prime239v3"
.L_420a41:
          .string "prime256v1"
.L_420a4c:
          .string "ecdsa-with-SHA1"
.L_420a5c:
          .string "CSPName"
.L_420a64:
          .string "Microsoft CSP Name"
.L_420a77:
          .string "AES-128-ECB"
.L_420a83:
          .string "aes-128-ecb"
.L_420a8f:
          .string "AES-128-CBC"
.L_420a9b:
          .string "aes-128-cbc"
.L_420aa7:
          .string "AES-128-OFB"
.L_420ab3:
          .string "aes-128-ofb"
.L_420abf:
          .string "AES-128-CFB"
.L_420acb:
          .string "aes-128-cfb"
.L_420ad7:
          .string "AES-192-ECB"
.L_420ae3:
          .string "aes-192-ecb"
.L_420aef:
          .string "AES-192-CBC"
.L_420afb:
          .string "aes-192-cbc"
.L_420b07:
          .string "AES-192-OFB"
.L_420b13:
          .string "aes-192-ofb"
.L_420b1f:
          .string "AES-192-CFB"
.L_420b2b:
          .string "aes-192-cfb"
.L_420b37:
          .string "AES-256-ECB"
.L_420b43:
          .string "aes-256-ecb"
.L_420b4f:
          .string "AES-256-CBC"
.L_420b5b:
          .string "aes-256-cbc"
.L_420b67:
          .string "AES-256-OFB"
.L_420b73:
          .string "aes-256-ofb"
.L_420b7f:
          .string "AES-256-CFB"
.L_420b8b:
          .string "aes-256-cfb"
.L_420b97:
          .string "holdInstructionCode"
.L_420bab:
          .string "Hold Instruction Code"
.L_420bc1:
          .string "holdInstructionNone"
.L_420bd5:
          .string "Hold Instruction None"
.L_420beb:
          .string "holdInstructionCallIssuer"
.L_420c05:
          .string "Hold Instruction Call Issuer"
.L_420c22:
          .string "holdInstructionReject"
.L_420c38:
          .string "Hold Instruction Reject"
.L_420c50:
          .string "data"
.L_420c55:
          .string "pss"
.L_420c59:
          .string "ucl"
.L_420c5d:
          .string "pilot"
.L_420c63:
          .string "pilotAttributeType"
.L_420c76:
          .string "pilotAttributeSyntax"
.L_420c8b:
          .string "pilotObjectClass"
.L_420c9c:
          .string "pilotGroups"
.L_420ca8:
          .string "iA5StringSyntax"
.L_420cb8:
          .string "caseIgnoreIA5StringSyntax"
.L_420cd2:
          .string "pilotObject"
.L_420cde:
          .string "pilotPerson"
.L_420cea:
          .string "account"
.L_420cf2:
          .string "document"
.L_420cfb:
          .string "room"
.L_420d00:
          .string "documentSeries"
.L_420d0f:
          .string "rFC822localPart"
.L_420d1f:
          .string "dNSDomain"
.L_420d29:
          .string "domainRelatedObject"
.L_420d3d:
          .string "friendlyCountry"
.L_420d4d:
          .string "simpleSecurityObject"
.L_420d62:
          .string "pilotOrganization"
.L_420d74:
          .string "pilotDSA"
.L_420d7d:
          .string "qualityLabelledData"
.L_420d91:
          .string "UID"
.L_420d95:
          .string "userId"
.L_420d9c:
          .string "textEncodedORAddress"
.L_420db1:
          .string "mail"
.L_420db6:
          .string "rfc822Mailbox"
.L_420dc4:
          .string "info"
.L_420dc9:
          .string "favouriteDrink"
.L_420dd8:
          .string "roomNumber"
.L_420de3:
          .string "photo"
.L_420de9:
          .string "userClass"
.L_420df3:
          .string "host"
.L_420df8:
          .string "manager"
.L_420e00:
          .string "documentIdentifier"
.L_420e13:
          .string "documentTitle"
.L_420e21:
          .string "documentVersion"
.L_420e31:
          .string "documentAuthor"
.L_420e40:
          .string "documentLocation"
.L_420e51:
          .string "homeTelephoneNumber"
.L_420e65:
          .string "secretary"
.L_420e6f:
          .string "otherMailbox"
.L_420e7c:
          .string "lastModifiedTime"
.L_420e8d:
          .string "lastModifiedBy"
.L_420e9c:
          .string "aRecord"
.L_420ea4:
          .string "pilotAttributeType27"
.L_420eb9:
          .string "mXRecord"
.L_420ec2:
          .string "nSRecord"
.L_420ecb:
          .string "sOARecord"
.L_420ed5:
          .string "cNAMERecord"
.L_420ee1:
          .string "associatedDomain"
.L_420ef2:
          .string "associatedName"
.L_420f01:
          .string "homePostalAddress"
.L_420f13:
          .string "personalTitle"
.L_420f21:
          .string "mobileTelephoneNumber"
.L_420f37:
          .string "pagerTelephoneNumber"
.L_420f4c:
          .string "friendlyCountryName"
.L_420f60:
          .string "organizationalStatus"
.L_420f75:
          .string "janetMailbox"
.L_420f82:
          .string "mailPreferenceOption"
.L_420f97:
          .string "buildingName"
.L_420fa4:
          .string "dSAQuality"
.L_420faf:
          .string "singleLevelQuality"
.L_420fc2:
          .string "subtreeMinimumQuality"
.L_420fd8:
          .string "subtreeMaximumQuality"
.L_420fee:
          .string "personalSignature"
.L_421000:
          .string "dITRedirect"
.L_42100c:
          .string "audio"
.L_421012:
          .string "documentPublisher"
.L_421024:
          .string "x500UniqueIdentifier"
.L_421039:
          .string "mime-mhs"
.L_421042:
          .string "MIME MHS"
.L_42104b:
          .string "mime-mhs-headings"
.L_42105d:
          .string "mime-mhs-bodies"
.L_42106d:
          .string "id-hex-partial-message"
.L_421084:
          .string "id-hex-multipart-message"
.L_42109d:
          .string "generationQualifier"
.L_4210b1:
          .string "pseudonym"
.L_4210bb:
          .string "id-set"
.L_4210c2:
          .string "set-ctype"
.L_4210cc:
          .string "content types"
.L_4210da:
          .string "set-msgExt"
.L_4210e5:
          .string "message extensions"
.L_4210f8:
          .string "set-attr"
.L_421101:
          .string "set-policy"
.L_42110c:
          .string "set-certExt"
.L_421118:
          .string "certificate extensions"
.L_42112f:
          .string "set-brand"
.L_421139:
          .string "setct-PANData"
.L_421147:
          .string "setct-PANToken"
.L_421156:
          .string "setct-PANOnly"
.L_421164:
          .string "setct-OIData"
.L_421171:
          .string "setct-PI"
.L_42117a:
          .string "setct-PIData"
.L_421187:
          .string "setct-PIDataUnsigned"
.L_42119c:
          .string "setct-HODInput"
.L_4211ab:
          .string "setct-AuthResBaggage"
.L_4211c0:
          .string "setct-AuthRevReqBaggage"
.L_4211d8:
          .string "setct-AuthRevResBaggage"
.L_4211f0:
          .string "setct-CapTokenSeq"
.L_421202:
          .string "setct-PInitResData"
.L_421215:
          .string "setct-PI-TBS"
.L_421222:
          .string "setct-PResData"
.L_421231:
          .string "setct-AuthReqTBS"
.L_421242:
          .string "setct-AuthResTBS"
.L_421253:
          .string "setct-AuthResTBSX"
.L_421265:
          .string "setct-AuthTokenTBS"
.L_421278:
          .string "setct-CapTokenData"
.L_42128b:
          .string "setct-CapTokenTBS"
.L_42129d:
          .string "setct-AcqCardCodeMsg"
.L_4212b2:
          .string "setct-AuthRevReqTBS"
.L_4212c6:
          .string "setct-AuthRevResData"
.L_4212db:
          .string "setct-AuthRevResTBS"
.L_4212ef:
          .string "setct-CapReqTBS"
.L_4212ff:
          .string "setct-CapReqTBSX"
.L_421310:
          .string "setct-CapResData"
.L_421321:
          .string "setct-CapRevReqTBS"
.L_421334:
          .string "setct-CapRevReqTBSX"
.L_421348:
          .string "setct-CapRevResData"
.L_42135c:
          .string "setct-CredReqTBS"
.L_42136d:
          .string "setct-CredReqTBSX"
.L_42137f:
          .string "setct-CredResData"
.L_421391:
          .string "setct-CredRevReqTBS"
.L_4213a5:
          .string "setct-CredRevReqTBSX"
.L_4213ba:
          .string "setct-CredRevResData"
.L_4213cf:
          .string "setct-PCertReqData"
.L_4213e2:
          .string "setct-PCertResTBS"
.L_4213f4:
          .string "setct-BatchAdminReqData"
.L_42140c:
          .string "setct-BatchAdminResData"
.L_421424:
          .string "setct-CardCInitResTBS"
.L_42143a:
          .string "setct-MeAqCInitResTBS"
.L_421450:
          .string "setct-RegFormResTBS"
.L_421464:
          .string "setct-CertReqData"
.L_421476:
          .string "setct-CertReqTBS"
.L_421487:
          .string "setct-CertResData"
.L_421499:
          .string "setct-CertInqReqTBS"
.L_4214ad:
          .string "setct-ErrorTBS"
.L_4214bc:
          .string "setct-PIDualSignedTBE"
.L_4214d2:
          .string "setct-PIUnsignedTBE"
.L_4214e6:
          .string "setct-AuthReqTBE"
.L_4214f7:
          .string "setct-AuthResTBE"
.L_421508:
          .string "setct-AuthResTBEX"
.L_42151a:
          .string "setct-AuthTokenTBE"
.L_42152d:
          .string "setct-CapTokenTBE"
.L_42153f:
          .string "setct-CapTokenTBEX"
.L_421552:
          .string "setct-AcqCardCodeMsgTBE"
.L_42156a:
          .string "setct-AuthRevReqTBE"
.L_42157e:
          .string "setct-AuthRevResTBE"
.L_421592:
          .string "setct-AuthRevResTBEB"
.L_4215a7:
          .string "setct-CapReqTBE"
.L_4215b7:
          .string "setct-CapReqTBEX"
.L_4215c8:
          .string "setct-CapResTBE"
.L_4215d8:
          .string "setct-CapRevReqTBE"
.L_4215eb:
          .string "setct-CapRevReqTBEX"
.L_4215ff:
          .string "setct-CapRevResTBE"
.L_421612:
          .string "setct-CredReqTBE"
.L_421623:
          .string "setct-CredReqTBEX"
.L_421635:
          .string "setct-CredResTBE"
.L_421646:
          .string "setct-CredRevReqTBE"
.L_42165a:
          .string "setct-CredRevReqTBEX"
.L_42166f:
          .string "setct-CredRevResTBE"
.L_421683:
          .string "setct-BatchAdminReqTBE"
.L_42169a:
          .string "setct-BatchAdminResTBE"
.L_4216b1:
          .string "setct-RegFormReqTBE"
.L_4216c5:
          .string "setct-CertReqTBE"
.L_4216d6:
          .string "setct-CertReqTBEX"
.L_4216e8:
          .string "setct-CertResTBE"
.L_4216f9:
          .string "setct-CRLNotificationTBS"
.L_421712:
          .string "setct-CRLNotificationResTBS"
.L_42172e:
          .string "setct-BCIDistributionTBS"
.L_421747:
          .string "setext-genCrypt"
.L_421757:
          .string "generic cryptogram"
.L_42176a:
          .string "setext-miAuth"
.L_421778:
          .string "merchant initiated auth"
.L_421790:
          .string "setext-pinSecure"
.L_4217a1:
          .string "setext-pinAny"
.L_4217af:
          .string "setext-track2"
.L_4217bd:
          .string "setext-cv"
.L_4217c7:
          .string "additional verification"
.L_4217df:
          .string "set-policy-root"
.L_4217ef:
          .string "setCext-hashedRoot"
.L_421802:
          .string "setCext-certType"
.L_421813:
          .string "setCext-merchData"
.L_421825:
          .string "setCext-cCertRequired"
.L_42183b:
          .string "setCext-tunneling"
.L_42184d:
          .string "setCext-setExt"
.L_42185c:
          .string "setCext-setQualf"
.L_42186d:
          .string "setCext-PGWYcapabilities"
.L_421886:
          .string "setCext-TokenIdentifier"
.L_42189e:
          .string "setCext-Track2Data"
.L_4218b1:
          .string "setCext-TokenType"
.L_4218c3:
          .string "setCext-IssuerCapabilities"
.L_4218de:
          .string "setAttr-Cert"
.L_4218eb:
          .string "setAttr-PGWYcap"
.L_4218fb:
          .string "payment gateway capabilities"
.L_421918:
          .string "setAttr-TokenType"
.L_42192a:
          .string "setAttr-IssCap"
.L_421939:
          .string "issuer capabilities"
.L_42194d:
          .string "set-rootKeyThumb"
.L_42195e:
          .string "set-addPolicy"
.L_42196c:
          .string "setAttr-Token-EMV"
.L_42197e:
          .string "setAttr-Token-B0Prime"
.L_421994:
          .string "setAttr-IssCap-CVM"
.L_4219a7:
          .string "setAttr-IssCap-T2"
.L_4219b9:
          .string "setAttr-IssCap-Sig"
.L_4219cc:
          .string "setAttr-GenCryptgrm"
.L_4219e0:
          .string "generate cryptogram"
.L_4219f4:
          .string "setAttr-T2Enc"
.L_421a02:
          .string "encrypted track 2"
.L_421a14:
          .string "setAttr-T2cleartxt"
.L_421a27:
          .string "cleartext track 2"
.L_421a39:
          .string "setAttr-TokICCsig"
.L_421a4b:
          .string "ICC or token signature"
.L_421a62:
          .string "setAttr-SecDevSig"
.L_421a74:
          .string "secure device signature"
.L_421a8c:
          .string "set-brand-IATA-ATA"
.L_421a9f:
          .string "set-brand-Diners"
.L_421ab0:
          .string "set-brand-AmericanExpress"
.L_421aca:
          .string "set-brand-JCB"
.L_421ad8:
          .string "set-brand-Visa"
.L_421ae7:
          .string "set-brand-MasterCard"
.L_421afc:
          .string "set-brand-Novus"
.L_421b0c:
          .string "DES-CDMF"
.L_421b15:
          .string "des-cdmf"
.L_421b1e:
          .string "rsaOAEPEncryptionSET"
.L_421b33:
          .string "ITU-T"
.L_421b39:
          .string "itu-t"
.L_421b3f:
          .string "JOINT-ISO-ITU-T"
.L_421b4f:
          .string "joint-iso-itu-t"
.L_421b5f:
          .string "international-organizations"
.L_421b7b:
          .string "International Organizations"
.L_421b97:
          .string "msSmartcardLogin"
.L_421ba8:
          .string "Microsoft Smartcardlogin"
.L_421bc1:
          .string "msUPN"
.L_421bc7:
          .string "AES-128-CFB1"
.L_421bd4:
          .string "aes-128-cfb1"
.L_421be1:
          .string "AES-192-CFB1"
.L_421bee:
          .string "aes-192-cfb1"
.L_421bfb:
          .string "AES-256-CFB1"
.L_421c08:
          .string "aes-256-cfb1"
.L_421c15:
          .string "AES-128-CFB8"
.L_421c22:
          .string "aes-128-cfb8"
.L_421c2f:
          .string "AES-192-CFB8"
.L_421c3c:
          .string "aes-192-cfb8"
.L_421c49:
          .string "AES-256-CFB8"
.L_421c56:
          .string "aes-256-cfb8"
.L_421c63:
          .string "DES-CFB1"
.L_421c6c:
          .string "des-cfb1"
.L_421c75:
          .string "DES-CFB8"
.L_421c7e:
          .string "des-cfb8"
.L_421c87:
          .string "DES-EDE3-CFB1"
.L_421c95:
          .string "des-ede3-cfb1"
.L_421ca3:
          .string "DES-EDE3-CFB8"
.L_421cb1:
          .string "des-ede3-cfb8"
.L_421cbf:
          .string "street"
.L_421cc6:
          .string "streetAddress"
.L_421cd4:
          .string "postalCode"
.L_421cdf:
          .string "id-ppl"
.L_421ce6:
          .string "proxyCertInfo"
.L_421cf4:
          .string "Proxy Certificate Information"
.L_421d12:
          .string "id-ppl-anyLanguage"
.L_421d25:
          .string "Any language"
.L_421d32:
          .string "id-ppl-inheritAll"
.L_421d44:
          .string "Inherit all"
.L_421d50:
          .string "nameConstraints"
.L_421d60:
          .string "X509v3 Name Constraints"
.L_421d78:
          .string "id-ppl-independent"
.L_421d8b:
          .string "Independent"
.L_421d97:
          .string "RSA-SHA256"
.L_421da2:
          .string "sha256WithRSAEncryption"
.L_421dba:
          .string "RSA-SHA384"
.L_421dc5:
          .string "sha384WithRSAEncryption"
.L_421ddd:
          .string "RSA-SHA512"
.L_421de8:
          .string "sha512WithRSAEncryption"
.L_421e00:
          .string "RSA-SHA224"
.L_421e0b:
          .string "sha224WithRSAEncryption"
.L_421e23:
          .string "SHA256"
.L_421e2a:
          .string "sha256"
.L_421e31:
          .string "SHA384"
.L_421e38:
          .string "sha384"
.L_421e3f:
          .string "SHA512"
.L_421e46:
          .string "sha512"
.L_421e4d:
          .string "SHA224"
.L_421e54:
          .string "sha224"
.L_421e5b:
          .string "identified-organization"
.L_421e73:
          .string "certicom-arc"
.L_421e80:
          .string "wap"
.L_421e84:
          .string "wap-wsg"
.L_421e8c:
          .string "id-characteristic-two-basis"
.L_421ea8:
          .string "onBasis"
.L_421eb0:
          .string "tpBasis"
.L_421eb8:
          .string "ppBasis"
.L_421ec0:
          .string "c2pnb163v1"
.L_421ecb:
          .string "c2pnb163v2"
.L_421ed6:
          .string "c2pnb163v3"
.L_421ee1:
          .string "c2pnb176v1"
.L_421eec:
          .string "c2tnb191v1"
.L_421ef7:
          .string "c2tnb191v2"
.L_421f02:
          .string "c2tnb191v3"
.L_421f0d:
          .string "c2onb191v4"
.L_421f18:
          .string "c2onb191v5"
.L_421f23:
          .string "c2pnb208w1"
.L_421f2e:
          .string "c2tnb239v1"
.L_421f39:
          .string "c2tnb239v2"
.L_421f44:
          .string "c2tnb239v3"
.L_421f4f:
          .string "c2onb239v4"
.L_421f5a:
          .string "c2onb239v5"
.L_421f65:
          .string "c2pnb272w1"
.L_421f70:
          .string "c2pnb304w1"
.L_421f7b:
          .string "c2tnb359v1"
.L_421f86:
          .string "c2pnb368w1"
.L_421f91:
          .string "c2tnb431r1"
.L_421f9c:
          .string "secp112r1"
.L_421fa6:
          .string "secp112r2"
.L_421fb0:
          .string "secp128r1"
.L_421fba:
          .string "secp128r2"
.L_421fc4:
          .string "secp160k1"
.L_421fce:
          .string "secp160r1"
.L_421fd8:
          .string "secp160r2"
.L_421fe2:
          .string "secp192k1"
.L_421fec:
          .string "secp224k1"
.L_421ff6:
          .string "secp224r1"
.L_422000:
          .string "secp256k1"
.L_42200a:
          .string "secp384r1"
.L_422014:
          .string "secp521r1"
.L_42201e:
          .string "sect113r1"
.L_422028:
          .string "sect113r2"
.L_422032:
          .string "sect131r1"
.L_42203c:
          .string "sect131r2"
.L_422046:
          .string "sect163k1"
.L_422050:
          .string "sect163r1"
.L_42205a:
          .string "sect163r2"
.L_422064:
          .string "sect193r1"
.L_42206e:
          .string "sect193r2"
.L_422078:
          .string "sect233k1"
.L_422082:
          .string "sect233r1"
.L_42208c:
          .string "sect239k1"
.L_422096:
          .string "sect283k1"
.L_4220a0:
          .string "sect283r1"
.L_4220aa:
          .string "sect409k1"
.L_4220b4:
          .string "sect409r1"
.L_4220be:
          .string "sect571k1"
.L_4220c8:
          .string "sect571r1"
.L_4220d2:
          .string "wap-wsg-idm-ecid-wtls1"
.L_4220e9:
          .string "wap-wsg-idm-ecid-wtls3"
.L_422100:
          .string "wap-wsg-idm-ecid-wtls4"
.L_422117:
          .string "wap-wsg-idm-ecid-wtls5"
.L_42212e:
          .string "wap-wsg-idm-ecid-wtls6"
.L_422145:
          .string "wap-wsg-idm-ecid-wtls7"
.L_42215c:
          .string "wap-wsg-idm-ecid-wtls8"
.L_422173:
          .string "wap-wsg-idm-ecid-wtls9"
.L_42218a:
          .string "wap-wsg-idm-ecid-wtls10"
.L_4221a2:
          .string "wap-wsg-idm-ecid-wtls11"
.L_4221ba:
          .string "wap-wsg-idm-ecid-wtls12"
.L_4221d2:
          .string "anyPolicy"
.L_4221dc:
          .string "X509v3 Any Policy"
.L_4221ee:
          .string "policyMappings"
.L_4221fd:
          .string "X509v3 Policy Mappings"
.L_422214:
          .string "inhibitAnyPolicy"
.L_422225:
          .string "X509v3 Inhibit Any Policy"
.L_42223f:
          .string "Oakley-EC2N-3"
.L_42224d:
          .string "ipsec3"
.L_422254:
          .string "Oakley-EC2N-4"
.L_422262:
          .string "ipsec4"
.L_422269:
          .string "CAMELLIA-128-CBC"
.L_42227a:
          .string "camellia-128-cbc"
.L_42228b:
          .string "CAMELLIA-192-CBC"
.L_42229c:
          .string "camellia-192-cbc"
.L_4222ad:
          .string "CAMELLIA-256-CBC"
.L_4222be:
          .string "camellia-256-cbc"
.L_4222cf:
          .string "CAMELLIA-128-ECB"
.L_4222e0:
          .string "camellia-128-ecb"
.L_4222f1:
          .string "CAMELLIA-192-ECB"
.L_422302:
          .string "camellia-192-ecb"
.L_422313:
          .string "CAMELLIA-256-ECB"
.L_422324:
          .string "camellia-256-ecb"
.L_422335:
          .string "CAMELLIA-128-CFB"
.L_422346:
          .string "camellia-128-cfb"
.L_422357:
          .string "CAMELLIA-192-CFB"
.L_422368:
          .string "camellia-192-cfb"
.L_422379:
          .string "CAMELLIA-256-CFB"
.L_42238a:
          .string "camellia-256-cfb"
.L_42239b:
          .string "CAMELLIA-128-CFB1"
.L_4223ad:
          .string "camellia-128-cfb1"
.L_4223bf:
          .string "CAMELLIA-192-CFB1"
.L_4223d1:
          .string "camellia-192-cfb1"
.L_4223e3:
          .string "CAMELLIA-256-CFB1"
.L_4223f5:
          .string "camellia-256-cfb1"
.L_422407:
          .string "CAMELLIA-128-CFB8"
.L_422419:
          .string "camellia-128-cfb8"
.L_42242b:
          .string "CAMELLIA-192-CFB8"
.L_42243d:
          .string "camellia-192-cfb8"
.L_42244f:
          .string "CAMELLIA-256-CFB8"
.L_422461:
          .string "camellia-256-cfb8"
.L_422473:
          .string "CAMELLIA-128-OFB"
.L_422484:
          .string "camellia-128-ofb"
.L_422495:
          .string "CAMELLIA-192-OFB"
.L_4224a6:
          .string "camellia-192-ofb"
.L_4224b7:
          .string "CAMELLIA-256-OFB"
.L_4224c8:
          .string "camellia-256-ofb"
.L_4224d9:
          .string "subjectDirectoryAttributes"
.L_4224f4:
          .string "issuingDistributionPoint"
.L_42250d:
          .string "certificateIssuer"
.L_42251f:
          .string "X509v3 Certificate Issuer"
.L_422539:
          .string "KISA"
.L_42253e:
          .string "kisa"
.L_422543:
          .string "SEED-ECB"
.L_42254c:
          .string "seed-ecb"
.L_422555:
          .string "SEED-CBC"
.L_42255e:
          .string "seed-cbc"
.L_422567:
          .string "SEED-OFB"
.L_422570:
          .string "seed-ofb"
.L_422579:
          .string "SEED-CFB"
.L_422582:
          .string "seed-cfb"
.L_42258b:
          .string "HMAC-MD5"
.L_422594:
          .string "hmac-md5"
.L_42259d:
          .string "HMAC-SHA1"
.L_4225a7:
          .string "hmac-sha1"
.L_4225b1:
          .string "id-PasswordBasedMAC"
.L_4225c5:
          .string "password based MAC"
.L_4225d8:
          .string "id-DHBasedMac"
.L_4225e6:
          .string "Diffie-Hellman based MAC"
.L_4225ff:
          .string "id-it-suppLangTags"
.L_422612:
          .string "caRepository"
.L_42261f:
          .string "CA Repository"
.L_42262d:
          .string "id-smime-ct-compressedData"
.L_422648:
          .string "id-ct-asciiTextWithCRLF"
.L_422660:
          .string "id-aes128-wrap"
.L_42266f:
          .string "id-aes192-wrap"
.L_42267e:
          .string "id-aes256-wrap"
.L_42268d:
          .string "ecdsa-with-Recommended"
.L_4226a4:
          .string "ecdsa-with-Specified"
.L_4226b9:
          .string "ecdsa-with-SHA224"
.L_4226cb:
          .string "ecdsa-with-SHA256"
.L_4226dd:
          .string "ecdsa-with-SHA384"
.L_4226ef:
          .string "ecdsa-with-SHA512"
.L_422701:
          .string "hmacWithMD5"
.L_42270d:
          .string "hmacWithSHA224"
.L_42271c:
          .string "hmacWithSHA256"
.L_42272b:
          .string "hmacWithSHA384"
.L_42273a:
          .string "hmacWithSHA512"
.L_422749:
          .string "dsa_with_SHA224"
.L_422759:
          .string "dsa_with_SHA256"
.L_422769:
          .string "whirlpool"
.L_422773:
          .string "cryptopro"
.L_42277d:
          .string "cryptocom"
.L_422787:
          .string "md_gost94"
.L_422791:
          .string "GOST R 34.11-94"
.L_4227a1:
          .string "id-HMACGostR3411-94"
.L_4227b5:
          .string "HMAC GOST 34.11-94"
.L_4227c8:
          .string "gost2001"
.L_4227d1:
          .string "GOST R 34.10-2001"
.L_4227e3:
          .string "gost94"
.L_4227ea:
          .string "GOST R 34.10-94"
.L_4227fa:
          .string "gost89"
.L_422801:
          .string "GOST 28147-89"
.L_42280f:
          .string "gost89-cnt"
.L_42281a:
          .string "gost-mac"
.L_422823:
          .string "GOST 28147-89 MAC"
.L_422835:
          .string "prf-gostr3411-94"
.L_422846:
          .string "GOST R 34.11-94 PRF"
.L_42285a:
          .string "id-GostR3410-2001DH"
.L_42286e:
          .string "GOST R 34.10-2001 DH"
.L_422883:
          .string "id-GostR3410-94DH"
.L_422895:
          .string "GOST R 34.10-94 DH"
.L_4228a8:
          .string "id-GostR3411-94-TestParamSet"
.L_4228c5:
          .string "id-Gost28147-89-TestParamSet"
.L_4228e2:
          .string "id-GostR3410-94-TestParamSet"
.L_4228ff:
          .string "id-GostR3410-94-a"
.L_422911:
          .string "id-GostR3410-94-aBis"
.L_422926:
          .string "id-GostR3410-94-b"
.L_422938:
          .string "id-GostR3410-94-bBis"
.L_42294d:
          .string "id-Gost28147-89-cc"
.L_422960:
          .string "gost94cc"
.L_422969:
          .string "GOST 34.10-94 Cryptocom"
.L_422981:
          .string "gost2001cc"
.L_42298c:
          .string "GOST 34.10-2001 Cryptocom"
.L_4229a6:
          .string "id-GostR3410-2001-ParamSet-cc"
.L_4229c4:
          .string "HMAC"
.L_4229c9:
          .string "hmac"
.L_4229ce:
          .string "LocalKeySet"
.L_4229da:
          .string "Microsoft Local Key set"
.L_4229f2:
          .string "freshestCRL"
.L_4229fe:
          .string "X509v3 Freshest CRL"
.L_422a12:
          .string "id-on-permanentIdentifier"
.L_422a2c:
          .string "Permanent Identifier"
.L_422a41:
          .string "searchGuide"
.L_422a4d:
          .string "businessCategory"
.L_422a5e:
          .string "postalAddress"
.L_422a6c:
          .string "postOfficeBox"
.L_422a7a:
          .string "physicalDeliveryOfficeName"
.L_422a95:
          .string "telephoneNumber"
.L_422aa5:
          .string "telexNumber"
.L_422ab1:
          .string "teletexTerminalIdentifier"
.L_422acb:
          .string "facsimileTelephoneNumber"
.L_422ae4:
          .string "x121Address"
.L_422af0:
          .string "internationaliSDNNumber"
.L_422b08:
          .string "registeredAddress"
.L_422b1a:
          .string "destinationIndicator"
.L_422b2f:
          .string "preferredDeliveryMethod"
.L_422b47:
          .string "presentationAddress"
.L_422b5b:
          .string "supportedApplicationContext"
.L_422b77:
          .string "member"
.L_422b7e:
          .string "owner"
.L_422b84:
          .string "roleOccupant"
.L_422b91:
          .string "seeAlso"
.L_422b99:
          .string "userPassword"
.L_422ba6:
          .string "userCertificate"
.L_422bb6:
          .string "cACertificate"
.L_422bc4:
          .string "authorityRevocationList"
.L_422bdc:
          .string "certificateRevocationList"
.L_422bf6:
          .string "crossCertificatePair"
.L_422c0b:
          .string "enhancedSearchGuide"
.L_422c1f:
          .string "protocolInformation"
.L_422c33:
          .string "distinguishedName"
.L_422c45:
          .string "uniqueMember"
.L_422c52:
          .string "houseIdentifier"
.L_422c62:
          .string "supportedAlgorithms"
.L_422c76:
          .string "deltaRevocationList"
.L_422c8a:
          .string "dmdName"
.L_422c92:
          .string "id-alg-PWRI-KEK"
.L_422ca2:
          .string "CMAC"
.L_422ca7:
          .string "cmac"
.L_422cac:
          .string "id-aes128-GCM"
.L_422cba:
          .string "aes-128-gcm"
.L_422cc6:
          .string "id-aes128-CCM"
.L_422cd4:
          .string "aes-128-ccm"
.L_422ce0:
          .string "id-aes128-wrap-pad"
.L_422cf3:
          .string "id-aes192-GCM"
.L_422d01:
          .string "aes-192-gcm"
.L_422d0d:
          .string "id-aes192-CCM"
.L_422d1b:
          .string "aes-192-ccm"
.L_422d27:
          .string "id-aes192-wrap-pad"
.L_422d3a:
          .string "id-aes256-GCM"
.L_422d48:
          .string "aes-256-gcm"
.L_422d54:
          .string "id-aes256-CCM"
.L_422d62:
          .string "aes-256-ccm"
.L_422d6e:
          .string "id-aes256-wrap-pad"
.L_422d81:
          .string "AES-128-CTR"
.L_422d8d:
          .string "aes-128-ctr"
.L_422d99:
          .string "AES-192-CTR"
.L_422da5:
          .string "aes-192-ctr"
.L_422db1:
          .string "AES-256-CTR"
.L_422dbd:
          .string "aes-256-ctr"
.L_422dc9:
          .string "id-camellia128-wrap"
.L_422ddd:
          .string "id-camellia192-wrap"
.L_422df1:
          .string "id-camellia256-wrap"
.L_422e05:
          .string "anyExtendedKeyUsage"
.L_422e19:
          .string "Any Extended Key Usage"
.L_422e30:
          .string "MGF1"
.L_422e35:
          .string "mgf1"
.L_422e3a:
          .string "RSASSA-PSS"
.L_422e45:
          .string "rsassaPss"
.L_422e4f:
          .string "AES-128-XTS"
.L_422e5b:
          .string "aes-128-xts"
.L_422e67:
          .string "AES-256-XTS"
.L_422e73:
          .string "aes-256-xts"
.L_422e7f:
          .string "RC4-HMAC-MD5"
.L_422e8c:
          .string "rc4-hmac-md5"
.L_422e99:
          .string "AES-128-CBC-HMAC-SHA1"
.L_422eaf:
          .string "aes-128-cbc-hmac-sha1"
.L_422ec5:
          .string "AES-192-CBC-HMAC-SHA1"
.L_422edb:
          .string "aes-192-cbc-hmac-sha1"
.L_422ef1:
          .string "AES-256-CBC-HMAC-SHA1"
.L_422f07:
          .string "aes-256-cbc-hmac-sha1"
.L_422f1d:
          .string "RSAES-OAEP"
.L_422f28:
          .string "rsaesOaep"
.L_422f32:
          .string "dhpublicnumber"
.L_422f41:
          .string "X9.42 DH"
.L_422f4a:
          .string "brainpoolP160r1"
.L_422f5a:
          .string "brainpoolP160t1"
.L_422f6a:
          .string "brainpoolP192r1"
.L_422f7a:
          .string "brainpoolP192t1"
.L_422f8a:
          .string "brainpoolP224r1"
.L_422f9a:
          .string "brainpoolP224t1"
.L_422faa:
          .string "brainpoolP256r1"
.L_422fba:
          .string "brainpoolP256t1"
.L_422fca:
          .string "brainpoolP320r1"
.L_422fda:
          .string "brainpoolP320t1"
.L_422fea:
          .string "brainpoolP384r1"
.L_422ffa:
          .string "brainpoolP384t1"
.L_42300a:
          .string "brainpoolP512r1"
.L_42301a:
          .string "brainpoolP512t1"
.L_42302a:
          .string "PSPECIFIED"
.L_423035:
          .string "pSpecified"
.L_423040:
          .string "dh-std-kdf"
.L_42304b:
          .string "dh-cofactor-kdf"
.L_42305b:
          .string "AES-128-CBC-HMAC-SHA256"
.L_423073:
          .string "aes-128-cbc-hmac-sha256"
.L_42308b:
          .string "AES-192-CBC-HMAC-SHA256"
.L_4230a3:
          .string "aes-192-cbc-hmac-sha256"
.L_4230bb:
          .string "AES-256-CBC-HMAC-SHA256"
.L_4230d3:
          .string "aes-256-cbc-hmac-sha256"
.L_4230eb:
          .string "ct_precert_scts"
.L_4230fb:
          .string "CT Precertificate SCTs"
.L_423112:
          .string "ct_precert_poison"
.L_423124:
          .string "CT Precertificate Poison"
.L_42313d:
          .string "ct_precert_signer"
.L_42314f:
          .string "CT Precertificate Signer"
.L_423168:
          .string "ct_cert_scts"
.L_423175:
          .string "CT Certificate SCTs"
.L_423189:
          .string "jurisdictionL"
.L_423197:
          .string "jurisdictionLocalityName"
.L_4231b0:
          .string "jurisdictionST"
.L_4231bf:
          .string "jurisdictionC"
.L_4231cd:
          .string "jurisdictionCountryName"
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_423200:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424000:
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_424ee0:
          .byte 0x6c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xac
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xaf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x98
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xee
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xfa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x86
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x89
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xbd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xba
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xeb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x95
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xab
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x99
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x97
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x84
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xc0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xca
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xcd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xce
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xcf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xda
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xde
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x71
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x81
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x82
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x74
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x76
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x79
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x73
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x72
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x67
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x68
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x69
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x63
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x65
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x66
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x40
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x16
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x11
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x42
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x58
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x51
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x57
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x56
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x47
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x48
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x49
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x12
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x36
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x53
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x54
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x35
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x38
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x39
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x13
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x15
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x59
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xc6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x83
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x94
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x92
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x60
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x62
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x61
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xaa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x78
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x70
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x75
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xe6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x64
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_425dc0:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
.L_425dc6:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
.L_425dcd:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x2
          .byte 0x2
.L_425dd5:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x2
          .byte 0x5
.L_425ddd:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x3
          .byte 0x4
.L_425de5:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0x1
.L_425dee:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0x2
.L_425df7:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0x4
.L_425e00:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
          .byte 0x1
.L_425e09:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
          .byte 0x3
.L_425e12:
          .byte 0x55
.L_425e13:
          .byte 0x55
          .byte 0x4
.L_425e15:
          .byte 0x55
          .byte 0x4
          .byte 0x3
.L_425e18:
          .byte 0x55
          .byte 0x4
          .byte 0x6
.L_425e1b:
          .byte 0x55
          .byte 0x4
          .byte 0x7
.L_425e1e:
          .byte 0x55
          .byte 0x4
          .byte 0x8
.L_425e21:
          .byte 0x55
          .byte 0x4
          .byte 0xa
.L_425e24:
          .byte 0x55
          .byte 0x4
          .byte 0xb
.L_425e27:
          .byte 0x55
          .byte 0x8
          .byte 0x1
          .byte 0x1
.L_425e2b:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x7
.L_425e33:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x7
          .byte 0x1
.L_425e3c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x7
          .byte 0x2
.L_425e45:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x7
          .byte 0x3
.L_425e4e:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x7
          .byte 0x4
.L_425e57:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x7
          .byte 0x5
.L_425e60:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x7
          .byte 0x6
.L_425e69:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x3
.L_425e71:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x3
          .byte 0x1
.L_425e7a:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x6
.L_425e7f:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x9
.L_425e84:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x7
.L_425e89:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x11
.L_425e8e:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x81
          .byte 0x3c
          .byte 0x7
          .byte 0x1
          .byte 0x1
          .byte 0x2
.L_425e99:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x3
          .byte 0x2
.L_425ea1:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x12
.L_425ea6:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0xf
.L_425eab:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x3
          .byte 0x7
.L_425eb3:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x8
.L_425eb8:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
.L_425ec0:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x1
.L_425ec9:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x2
.L_425ed2:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x3
.L_425edb:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x4
.L_425ee4:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x5
.L_425eed:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x6
.L_425ef6:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x7
.L_425eff:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x8
.L_425f08:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x9
.L_425f11:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
.L_425f18:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x1
.L_425f20:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x2
.L_425f28:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x1a
.L_425f2d:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0x5
.L_425f36:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0xd
.L_425f3b:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0xc
.L_425f40:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
          .byte 0xb
.L_425f49:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
          .byte 0xc
.L_425f52:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x1b
.L_425f57:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x1
          .byte 0x1
.L_425f60:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x1
          .byte 0x2
.L_425f69:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x1
          .byte 0x3
.L_425f72:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x1
          .byte 0x4
.L_425f7b:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x1
          .byte 0x7
.L_425f84:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x1
          .byte 0x8
.L_425f8d:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x1
          .byte 0xc
.L_425f96:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x1
          .byte 0xd
.L_425f9f:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x2
          .byte 0x5
.L_425fa8:
          .byte 0x55
          .byte 0x1d
.L_425faa:
          .byte 0x55
          .byte 0x1d
          .byte 0xe
.L_425fad:
          .byte 0x55
          .byte 0x1d
          .byte 0xf
.L_425fb0:
          .byte 0x55
          .byte 0x1d
          .byte 0x10
.L_425fb3:
          .byte 0x55
          .byte 0x1d
          .byte 0x11
.L_425fb6:
          .byte 0x55
          .byte 0x1d
          .byte 0x12
.L_425fb9:
          .byte 0x55
          .byte 0x1d
          .byte 0x13
.L_425fbc:
          .byte 0x55
          .byte 0x1d
          .byte 0x14
.L_425fbf:
          .byte 0x55
          .byte 0x1d
          .byte 0x20
.L_425fc2:
          .byte 0x55
          .byte 0x1d
          .byte 0x23
.L_425fc5:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x97
          .byte 0x55
          .byte 0x1
          .byte 0x2
.L_425fce:
          .byte 0x55
          .byte 0x8
          .byte 0x3
          .byte 0x65
.L_425fd2:
          .byte 0x55
          .byte 0x8
          .byte 0x3
          .byte 0x64
.L_425fd6:
          .byte 0x55
          .byte 0x4
          .byte 0x2a
.L_425fd9:
          .byte 0x55
          .byte 0x4
          .byte 0x4
.L_425fdc:
          .byte 0x55
          .byte 0x4
          .byte 0x2b
.L_425fdf:
          .byte 0x55
          .byte 0x1d
          .byte 0x1f
.L_425fe2:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x3
.L_425fe7:
          .byte 0x55
          .byte 0x4
          .byte 0x5
.L_425fea:
          .byte 0x55
          .byte 0x4
          .byte 0xc
.L_425fed:
          .byte 0x55
          .byte 0x4
          .byte 0xd
.L_425ff0:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf6
          .byte 0x7d
          .byte 0x7
          .byte 0x42
          .byte 0xa
.L_425ff9:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf6
          .byte 0x7d
          .byte 0x7
          .byte 0x42
          .byte 0xc
.L_426002:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x38
          .byte 0x4
          .byte 0x3
.L_426009:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0x1d
.L_42600e:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x38
          .byte 0x4
          .byte 0x1
.L_426015:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x2
          .byte 0x1
.L_42601a:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x1
          .byte 0x2
.L_426020:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x3
          .byte 0x8
.L_426028:
          .byte 0x29
          .byte 0x1
          .byte 0x1
          .byte 0x85
          .byte 0x1a
          .byte 0x1
.L_42602e:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
          .byte 0x8
.L_426039:
          .byte 0x55
          .byte 0x1d
          .byte 0x25
.L_42603c:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
.L_426042:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
.L_426049:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0x1
.L_426051:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0x2
.L_426059:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0x3
.L_426061:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0x4
.L_426069:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0x8
.L_426071:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x2
          .byte 0x1
          .byte 0x15
.L_42607b:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x2
          .byte 0x1
          .byte 0x16
.L_426085:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0xa
          .byte 0x3
          .byte 0x1
.L_42608f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0xa
          .byte 0x3
          .byte 0x3
.L_426099:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0xa
          .byte 0x3
          .byte 0x4
.L_4260a3:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x86
          .byte 0xf8
          .byte 0x42
          .byte 0x4
          .byte 0x1
.L_4260ac:
          .byte 0x55
          .byte 0x1d
          .byte 0x1b
.L_4260af:
          .byte 0x55
          .byte 0x1d
          .byte 0x15
.L_4260b2:
          .byte 0x55
          .byte 0x1d
          .byte 0x18
.L_4260b5:
          .byte 0x2b
          .byte 0x65
          .byte 0x1
          .byte 0x4
          .byte 0x1
.L_4260ba:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0x1
.L_4260c4:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0x2
.L_4260ce:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0x3
.L_4260d8:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0x4
.L_4260e2:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0x5
.L_4260ec:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0x1
          .byte 0x6
.L_4260f6:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x1
.L_426101:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x2
.L_42610c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x3
.L_426117:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x4
.L_426122:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x5
.L_42612d:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0xc
          .byte 0xa
          .byte 0x1
          .byte 0x6
.L_426138:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x14
.L_426141:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x15
.L_42614a:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x16
          .byte 0x1
.L_426154:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x16
          .byte 0x2
.L_42615e:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x17
          .byte 0x1
.L_426168:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
          .byte 0xd
.L_426171:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
          .byte 0xe
.L_42617a:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x2
          .byte 0x7
.L_426182:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x2
          .byte 0x1
.L_42618a:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x2
          .byte 0x2
.L_426192:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0xf
.L_42619b:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
          .byte 0x4
.L_4261a4:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
          .byte 0x6
.L_4261ad:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
          .byte 0xa
.L_4261b6:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x2
          .byte 0x1
          .byte 0xe
.L_4261c0:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0xe
.L_4261c9:
          .byte 0x55
          .byte 0x4
          .byte 0x29
.L_4261cc:
          .byte 0x55
          .byte 0x4
          .byte 0x2e
.L_4261cf:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
.L_4261d6:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
.L_4261dd:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0x1
.L_4261e5:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
.L_4261ed:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x2
.L_4261f5:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0x9
.L_4261fd:
          .byte 0x2a
.L_4261fe:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
.L_426201:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x38
.L_426206:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x38
          .byte 0x4
.L_42620c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
.L_426214:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x5
.L_42621c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
.L_426225:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x0
.L_42622f:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
.L_426239:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
.L_426243:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
.L_42624d:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x4
.L_426257:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x5
.L_426261:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x6
.L_42626b:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x0
          .byte 0x1
.L_426276:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x0
          .byte 0x2
.L_426281:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x0
          .byte 0x3
.L_42628c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x0
          .byte 0x4
.L_426297:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x0
          .byte 0x5
.L_4262a2:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x0
          .byte 0x6
.L_4262ad:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x0
          .byte 0x7
.L_4262b8:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x0
          .byte 0x8
.L_4262c3:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x1
.L_4262ce:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x2
.L_4262d9:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x3
.L_4262e4:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x4
.L_4262ef:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x5
.L_4262fa:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x6
.L_426305:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x7
.L_426310:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x8
.L_42631b:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x1
.L_426326:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x2
.L_426331:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x3
.L_42633c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x4
.L_426347:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x5
.L_426352:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x6
.L_42635d:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x7
.L_426368:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x8
.L_426373:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x9
.L_42637e:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0xa
.L_426389:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0xb
.L_426394:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0xc
.L_42639f:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0xd
.L_4263aa:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0xe
.L_4263b5:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0xf
.L_4263c0:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x10
.L_4263cb:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x11
.L_4263d6:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x12
.L_4263e1:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x13
.L_4263ec:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x14
.L_4263f7:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x15
.L_426402:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x16
.L_42640d:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x17
.L_426418:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x18
.L_426423:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x19
.L_42642e:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x1a
.L_426439:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x1b
.L_426444:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x1c
.L_42644f:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x2
          .byte 0x1d
.L_42645a:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
          .byte 0x1
.L_426465:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
          .byte 0x2
.L_426470:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
          .byte 0x3
.L_42647b:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
          .byte 0x4
.L_426486:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
          .byte 0x5
.L_426491:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
          .byte 0x6
.L_42649c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
          .byte 0x7
.L_4264a7:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x4
          .byte 0x1
.L_4264b2:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x5
          .byte 0x1
.L_4264bd:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x5
          .byte 0x2
.L_4264c8:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x6
          .byte 0x1
.L_4264d3:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x6
          .byte 0x2
.L_4264de:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x6
          .byte 0x3
.L_4264e9:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x6
          .byte 0x4
.L_4264f4:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x6
          .byte 0x5
.L_4264ff:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x6
          .byte 0x6
.L_42650a:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x2
          .byte 0x4
.L_426512:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
.L_426519:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x2
.L_426520:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
.L_426527:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
.L_42652e:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x6
.L_426535:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
.L_42653c:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x8
.L_426543:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x9
.L_42654a:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xa
.L_426551:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xb
.L_426558:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xc
.L_42655f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x1
.L_426567:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x2
.L_42656f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x3
.L_426577:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x4
.L_42657f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x5
.L_426587:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x6
.L_42658f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x7
.L_426597:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x8
.L_42659f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x9
.L_4265a7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0xa
.L_4265af:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0xb
.L_4265b7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0xc
.L_4265bf:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0xd
.L_4265c7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0xe
.L_4265cf:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0xf
.L_4265d7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x0
          .byte 0x10
.L_4265df:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0x2
.L_4265e7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0x3
.L_4265ef:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0x4
.L_4265f7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0x5
.L_4265ff:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0x6
.L_426607:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0x7
.L_42660f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0x8
.L_426617:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0x9
.L_42661f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x2
          .byte 0x3
.L_426627:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0x5
.L_42662f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0x6
.L_426637:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0x7
.L_42663f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x3
          .byte 0xa
.L_426647:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x1
.L_42664f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x2
.L_426657:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x3
.L_42665f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x4
.L_426667:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x5
.L_42666f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x6
.L_426677:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x7
.L_42667f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x8
.L_426687:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x9
.L_42668f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0xa
.L_426697:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0xb
.L_42669f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0xc
.L_4266a7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0xd
.L_4266af:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0xe
.L_4266b7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0xf
.L_4266bf:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x1
.L_4266c7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x2
.L_4266cf:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x1
          .byte 0x1
.L_4266d8:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x1
          .byte 0x2
.L_4266e1:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x1
          .byte 0x3
.L_4266ea:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x1
          .byte 0x4
.L_4266f3:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x1
          .byte 0x5
.L_4266fc:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x1
          .byte 0x6
.L_426705:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x2
          .byte 0x1
.L_42670e:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x5
          .byte 0x2
          .byte 0x2
.L_426717:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x6
          .byte 0x1
.L_42671f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x6
          .byte 0x2
.L_426727:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x6
          .byte 0x3
.L_42672f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x6
          .byte 0x4
.L_426737:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x1
.L_42673f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x2
.L_426747:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x3
.L_42674f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x4
.L_426757:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x5
.L_42675f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x6
.L_426767:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x7
.L_42676f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x8
.L_426777:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x9
.L_42677f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0xa
.L_426787:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0xb
.L_42678f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0xf
.L_426797:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x10
.L_42679f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x11
.L_4267a7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x12
.L_4267af:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x13
.L_4267b7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x15
.L_4267bf:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x16
.L_4267c7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x17
.L_4267cf:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x7
          .byte 0x18
.L_4267d7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x8
          .byte 0x1
.L_4267df:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x9
          .byte 0x1
.L_4267e7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x9
          .byte 0x2
.L_4267ef:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x9
          .byte 0x3
.L_4267f7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x9
          .byte 0x4
.L_4267ff:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x9
          .byte 0x5
.L_426807:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xa
          .byte 0x1
.L_42680f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xa
          .byte 0x2
.L_426817:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xa
          .byte 0x3
.L_42681f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xa
          .byte 0x4
.L_426827:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xa
          .byte 0x5
.L_42682f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xb
          .byte 0x1
.L_426837:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xc
          .byte 0x1
.L_42683f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xc
          .byte 0x2
.L_426847:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xc
          .byte 0x3
.L_42684f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x3
.L_426857:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x4
.L_42685f:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0x1
.L_426868:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0x2
.L_426871:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0x3
.L_42687a:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0x4
.L_426883:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0x5
.L_42688c:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0x6
.L_426895:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0x7
.L_42689e:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0x8
.L_4268a7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0x9
.L_4268b0:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0xa
.L_4268b9:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x1
          .byte 0xb
.L_4268c2:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
.L_4268c6:
          .byte 0x2b
          .byte 0xe
          .byte 0x3
          .byte 0x2
          .byte 0xb
.L_4268cb:
          .byte 0x55
          .byte 0x8
.L_4268cd:
          .byte 0x2b
.L_4268ce:
          .byte 0x2b
          .byte 0x6
.L_4268d0:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
.L_4268d3:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x1
.L_4268d7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x2
.L_4268db:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x3
.L_4268df:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
.L_4268e3:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
.L_4268e7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x6
.L_4268eb:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x7
.L_4268ef:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
.L_4268f4:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x8b
          .byte 0x3a
          .byte 0x82
          .byte 0x58
.L_4268fd:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x19
.L_426907:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0xd
.L_426911:
          .byte 0x55
          .byte 0x1
          .byte 0x5
.L_426914:
          .byte 0x55
          .byte 0x1
          .byte 0x5
          .byte 0x37
.L_426918:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0x3
.L_426921:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0xa
.L_426929:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0xb
.L_426931:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0xa
          .byte 0x6
.L_426939:
          .byte 0x55
          .byte 0x4
          .byte 0x48
.L_42693c:
          .byte 0x55
          .byte 0x1d
          .byte 0x24
.L_42693f:
          .byte 0x55
          .byte 0x1d
          .byte 0x37
.L_426942:
          .byte 0x55
          .byte 0x1d
          .byte 0x38
.L_426945:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
.L_42694a:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x1
          .byte 0x1
.L_426951:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x1
          .byte 0x2
.L_426958:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x2
          .byte 0x1
.L_42695f:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x1
          .byte 0x1
.L_426967:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x1
          .byte 0x2
.L_42696f:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x1
          .byte 0x3
.L_426977:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x1
          .byte 0x4
.L_42697f:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x1
          .byte 0x5
.L_426987:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x1
          .byte 0x6
.L_42698f:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x1
          .byte 0x7
.L_426997:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x4
          .byte 0x1
.L_42699e:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x11
          .byte 0x1
.L_4269a7:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x1
.L_4269b0:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x2
.L_4269b9:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x3
.L_4269c2:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x4
.L_4269cb:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x15
.L_4269d4:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x16
.L_4269dd:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x17
.L_4269e6:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x18
.L_4269ef:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x29
.L_4269f8:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x2a
.L_426a01:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x2b
.L_426a0a:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x2c
.L_426a13:
          .byte 0x55
          .byte 0x1d
          .byte 0x17
.L_426a16:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x38
          .byte 0x2
          .byte 0x1
.L_426a1d:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x38
          .byte 0x2
          .byte 0x2
.L_426a24:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x38
          .byte 0x2
          .byte 0x3
.L_426a2b:
          .byte 0x9
.L_426a2c:
          .byte 0x9
          .byte 0x92
          .byte 0x26
.L_426a2f:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
.L_426a36:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
.L_426a3e:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
.L_426a47:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x3
.L_426a50:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
.L_426a59:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0xa
.L_426a62:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x3
          .byte 0x4
.L_426a6c:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x3
          .byte 0x5
.L_426a76:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x3
.L_426a80:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x4
.L_426a8a:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x5
.L_426a94:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x6
.L_426a9e:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x7
.L_426aa8:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x9
.L_426ab2:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0xe
.L_426abc:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0xf
.L_426ac6:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x11
.L_426ad0:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x12
.L_426ada:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x13
.L_426ae4:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x14
.L_426aee:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x15
.L_426af8:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x4
          .byte 0x16
.L_426b02:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x1
.L_426b0c:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x2
.L_426b16:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x3
.L_426b20:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x4
.L_426b2a:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x5
.L_426b34:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x6
.L_426b3e:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x7
.L_426b48:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x8
.L_426b52:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x9
.L_426b5c:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0xa
.L_426b66:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0xb
.L_426b70:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0xc
.L_426b7a:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0xd
.L_426b84:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0xe
.L_426b8e:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0xf
.L_426b98:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x14
.L_426ba2:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x15
.L_426bac:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x16
.L_426bb6:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x17
.L_426bc0:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x18
.L_426bca:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x1a
.L_426bd4:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x1b
.L_426bde:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x1c
.L_426be8:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x1d
.L_426bf2:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x1e
.L_426bfc:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x1f
.L_426c06:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x25
.L_426c10:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x26
.L_426c1a:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x27
.L_426c24:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x28
.L_426c2e:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x29
.L_426c38:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x2a
.L_426c42:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x2b
.L_426c4c:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x2d
.L_426c56:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x2e
.L_426c60:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x2f
.L_426c6a:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x30
.L_426c74:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x31
.L_426c7e:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x32
.L_426c88:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x33
.L_426c92:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x34
.L_426c9c:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x35
.L_426ca6:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x36
.L_426cb0:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x37
.L_426cba:
          .byte 0x9
          .byte 0x92
          .byte 0x26
          .byte 0x89
          .byte 0x93
          .byte 0xf2
          .byte 0x2c
          .byte 0x64
          .byte 0x1
          .byte 0x38
.L_426cc4:
          .byte 0x55
          .byte 0x4
          .byte 0x2d
.L_426cc7:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x7
          .byte 0x1
.L_426ccc:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x1
.L_426cd2:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x2
.L_426cd8:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x1
          .byte 0x1
.L_426cdf:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x7
          .byte 0x1
          .byte 0x1
          .byte 0x2
.L_426ce6:
          .byte 0x55
          .byte 0x4
          .byte 0x2c
.L_426ce9:
          .byte 0x55
          .byte 0x4
          .byte 0x41
.L_426cec:
          .byte 0x67
          .byte 0x2a
.L_426cee:
          .string "g*"
.L_426cf1:
          .byte 0x67
          .byte 0x2a
          .byte 0x1
.L_426cf4:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
.L_426cf7:
          .byte 0x67
          .byte 0x2a
          .byte 0x5
.L_426cfa:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
.L_426cfd:
          .byte 0x67
          .byte 0x2a
          .byte 0x8
.L_426d00:
          .string "g*"
          .zero 1
.L_426d04:
          .string "g*"
          .byte 0x1
.L_426d08:
          .string "g*"
          .byte 0x2
.L_426d0c:
          .string "g*"
          .byte 0x3
.L_426d10:
          .string "g*"
          .byte 0x4
.L_426d14:
          .string "g*"
          .byte 0x5
.L_426d18:
          .string "g*"
          .byte 0x6
.L_426d1c:
          .string "g*"
          .byte 0x7
.L_426d20:
          .string "g*"
          .byte 0x8
.L_426d24:
          .string "g*"
          .byte 0x9
.L_426d28:
          .string "g*"
          .byte 0xa
.L_426d2c:
          .string "g*"
          .byte 0xb
.L_426d30:
          .string "g*"
          .byte 0xc
.L_426d34:
          .string "g*"
          .byte 0xd
.L_426d38:
          .string "g*"
          .byte 0xe
.L_426d3c:
          .string "g*"
          .byte 0x10
.L_426d40:
          .string "g*"
          .byte 0x11
.L_426d44:
          .string "g*"
          .byte 0x12
.L_426d48:
          .string "g*"
          .byte 0x13
.L_426d4c:
          .string "g*"
          .byte 0x14
.L_426d50:
          .string "g*"
          .byte 0x15
.L_426d54:
          .string "g*"
          .byte 0x16
.L_426d58:
          .string "g*"
          .byte 0x17
.L_426d5c:
          .string "g*"
          .byte 0x18
.L_426d60:
          .string "g*"
          .byte 0x19
.L_426d64:
          .string "g*"
          .byte 0x1a
.L_426d68:
          .string "g*"
          .byte 0x1b
.L_426d6c:
          .string "g*"
          .byte 0x1c
.L_426d70:
          .string "g*"
          .byte 0x1d
.L_426d74:
          .string "g*"
          .byte 0x1e
.L_426d78:
          .string "g*"
          .byte 0x1f
.L_426d7c:
          .string "g*"
          .byte 0x20
.L_426d80:
          .string "g*"
          .byte 0x21
.L_426d84:
          .string "g*"
          .byte 0x22
.L_426d88:
          .string "g*"
          .byte 0x23
.L_426d8c:
          .string "g*"
          .byte 0x24
.L_426d90:
          .string "g*"
          .byte 0x25
.L_426d94:
          .string "g*"
          .byte 0x26
.L_426d98:
          .string "g*"
          .byte 0x27
.L_426d9c:
          .string "g*"
          .byte 0x28
.L_426da0:
          .string "g*"
          .byte 0x29
.L_426da4:
          .string "g*"
          .byte 0x2a
.L_426da8:
          .string "g*"
          .byte 0x2b
.L_426dac:
          .string "g*"
          .byte 0x2c
.L_426db0:
          .string "g*"
          .byte 0x2d
.L_426db4:
          .string "g*"
          .byte 0x2e
.L_426db8:
          .string "g*"
          .byte 0x2f
.L_426dbc:
          .string "g*"
          .byte 0x30
.L_426dc0:
          .string "g*"
          .byte 0x31
.L_426dc4:
          .string "g*"
          .byte 0x32
.L_426dc8:
          .string "g*"
          .byte 0x33
.L_426dcc:
          .string "g*"
          .byte 0x34
.L_426dd0:
          .string "g*"
          .byte 0x35
.L_426dd4:
          .string "g*"
          .byte 0x36
.L_426dd8:
          .string "g*"
          .byte 0x37
.L_426ddc:
          .string "g*"
          .byte 0x38
.L_426de0:
          .string "g*"
          .byte 0x39
.L_426de4:
          .string "g*"
          .byte 0x3a
.L_426de8:
          .string "g*"
          .byte 0x3b
.L_426dec:
          .string "g*"
          .byte 0x3c
.L_426df0:
          .string "g*"
          .byte 0x3d
.L_426df4:
          .string "g*"
          .byte 0x3e
.L_426df8:
          .string "g*"
          .byte 0x3f
.L_426dfc:
          .string "g*"
          .byte 0x40
.L_426e00:
          .string "g*"
          .byte 0x41
.L_426e04:
          .string "g*"
          .byte 0x42
.L_426e08:
          .string "g*"
          .byte 0x43
.L_426e0c:
          .string "g*"
          .byte 0x44
.L_426e10:
          .string "g*"
          .byte 0x45
.L_426e14:
          .string "g*"
          .byte 0x46
.L_426e18:
          .string "g*"
          .byte 0x47
.L_426e1c:
          .string "g*"
          .byte 0x48
.L_426e20:
          .string "g*"
          .byte 0x49
.L_426e24:
          .string "g*"
          .byte 0x4a
.L_426e28:
          .string "g*"
          .byte 0x4b
.L_426e2c:
          .string "g*"
          .byte 0x4c
.L_426e30:
          .string "g*"
          .byte 0x4d
.L_426e34:
          .string "g*"
          .byte 0x4e
.L_426e38:
          .string "g*"
          .byte 0x4f
.L_426e3c:
          .string "g*"
          .byte 0x50
.L_426e40:
          .string "g*"
          .byte 0x51
.L_426e44:
          .string "g*"
          .byte 0x52
.L_426e48:
          .byte 0x67
          .byte 0x2a
          .byte 0x1
          .byte 0x1
.L_426e4c:
          .byte 0x67
          .byte 0x2a
          .byte 0x1
          .byte 0x3
.L_426e50:
          .byte 0x67
          .byte 0x2a
          .byte 0x1
          .byte 0x4
.L_426e54:
          .byte 0x67
          .byte 0x2a
          .byte 0x1
          .byte 0x5
.L_426e58:
          .byte 0x67
          .byte 0x2a
          .byte 0x1
          .byte 0x7
.L_426e5c:
          .byte 0x67
          .byte 0x2a
          .byte 0x1
          .byte 0x8
.L_426e60:
          .byte 0x67
          .byte 0x2a
          .byte 0x5
          .byte 0x0
.L_426e64:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x0
.L_426e68:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x1
.L_426e6c:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x2
.L_426e70:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x3
.L_426e74:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x4
.L_426e78:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x5
.L_426e7c:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x6
.L_426e80:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x7
.L_426e84:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x8
.L_426e88:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0x9
.L_426e8c:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0xa
.L_426e90:
          .byte 0x67
          .byte 0x2a
          .byte 0x7
          .byte 0xb
.L_426e94:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x0
.L_426e98:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x1
.L_426e9c:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x2
.L_426ea0:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x3
.L_426ea4:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x0
          .byte 0x0
.L_426ea9:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x0
          .byte 0x1
.L_426eae:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x2
          .byte 0x1
.L_426eb3:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x2
          .byte 0x2
.L_426eb8:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x3
.L_426ebd:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x4
.L_426ec2:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x5
.L_426ec7:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x3
          .byte 0x1
.L_426ecd:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x4
          .byte 0x1
.L_426ed3:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x4
          .byte 0x2
.L_426ed9:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x5
          .byte 0x1
.L_426edf:
          .byte 0x67
          .byte 0x2a
          .byte 0x3
          .byte 0x3
          .byte 0x5
          .byte 0x2
.L_426ee5:
          .byte 0x67
          .byte 0x2a
          .byte 0x8
          .byte 0x1
.L_426ee9:
          .byte 0x67
          .byte 0x2a
          .byte 0x8
          .byte 0x1e
.L_426eed:
          .byte 0x67
          .byte 0x2a
          .byte 0x8
          .byte 0x22
.L_426ef1:
          .byte 0x67
          .byte 0x2a
          .byte 0x8
          .byte 0x23
.L_426ef5:
          .byte 0x67
          .byte 0x2a
          .byte 0x8
          .byte 0x4
.L_426ef9:
          .byte 0x67
          .byte 0x2a
          .byte 0x8
          .byte 0x5
.L_426efd:
          .byte 0x67
          .byte 0x2a
          .byte 0x8
          .byte 0xae
          .byte 0x7b
.L_426f02:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x3
          .byte 0xa
.L_426f0a:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0x6
.L_426f13:
          .byte 0x67
.L_426f14:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x14
          .byte 0x2
          .byte 0x2
.L_426f1e:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x14
          .byte 0x2
          .byte 0x3
.L_426f28:
          .byte 0x55
          .byte 0x4
          .byte 0x9
.L_426f2b:
          .byte 0x55
          .byte 0x4
          .byte 0x11
.L_426f2e:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x15
.L_426f35:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x1
          .byte 0xe
.L_426f3d:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x15
          .byte 0x0
.L_426f45:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x15
          .byte 0x1
.L_426f4d:
          .byte 0x55
          .byte 0x1d
          .byte 0x1e
.L_426f50:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x15
          .byte 0x2
.L_426f58:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0xb
.L_426f61:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0xc
.L_426f6a:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0xd
.L_426f73:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0xe
.L_426f7c:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x2
          .byte 0x1
.L_426f85:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x2
          .byte 0x2
.L_426f8e:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x2
          .byte 0x3
.L_426f97:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x2
          .byte 0x4
.L_426fa0:
          .byte 0x2b
.L_426fa1:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
.L_426fa4:
          .byte 0x67
          .byte 0x2b
.L_426fa6:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
.L_426fa9:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x1
          .byte 0x2
          .byte 0x3
.L_426fb1:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x1
.L_426fba:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x2
.L_426fc3:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x1
          .byte 0x2
          .byte 0x3
          .byte 0x3
.L_426fcc:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x1
.L_426fd4:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x2
.L_426fdc:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x3
.L_426fe4:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x4
.L_426fec:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x5
.L_426ff4:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x6
.L_426ffc:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x7
.L_427004:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x8
.L_42700c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x9
.L_427014:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0xa
.L_42701c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0xb
.L_427024:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0xc
.L_42702c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0xd
.L_427034:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0xe
.L_42703c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0xf
.L_427044:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x10
.L_42704c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x11
.L_427054:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x12
.L_42705c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x13
.L_427064:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x14
.L_42706c:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x6
.L_427071:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x7
.L_427076:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x1c
.L_42707b:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x1d
.L_427080:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x9
.L_427085:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x8
.L_42708a:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x1e
.L_42708f:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x1f
.L_427094:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x20
.L_427099:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x21
.L_42709e:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0xa
.L_4270a3:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x22
.L_4270a8:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x23
.L_4270ad:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x4
.L_4270b2:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x5
.L_4270b7:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x16
.L_4270bc:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x17
.L_4270c1:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x1
.L_4270c6:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x2
.L_4270cb:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0xf
.L_4270d0:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x18
.L_4270d5:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x19
.L_4270da:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x1a
.L_4270df:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x1b
.L_4270e4:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x3
.L_4270e9:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x10
.L_4270ee:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x11
.L_4270f3:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x24
.L_4270f8:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x25
.L_4270fd:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x26
.L_427102:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x0
          .byte 0x27
.L_427107:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0x1
.L_42710c:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0x3
.L_427111:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0x4
.L_427116:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0x5
.L_42711b:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0x6
.L_427120:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0x7
.L_427125:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0x8
.L_42712a:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0x9
.L_42712f:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0xa
.L_427134:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0xb
.L_427139:
          .byte 0x67
          .byte 0x2b
          .byte 0x1
          .byte 0x4
          .byte 0xc
.L_42713e:
          .byte 0x55
          .byte 0x1d
          .byte 0x20
          .byte 0x0
.L_427142:
          .byte 0x55
          .byte 0x1d
          .byte 0x21
.L_427145:
          .byte 0x55
          .byte 0x1d
          .byte 0x36
.L_427148:
          .byte 0x2a
          .byte 0x83
          .byte 0x8
          .byte 0x8c
          .byte 0x9a
          .byte 0x4b
          .byte 0x3d
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x2
.L_427153:
          .byte 0x2a
          .byte 0x83
          .byte 0x8
          .byte 0x8c
          .byte 0x9a
          .byte 0x4b
          .byte 0x3d
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x3
.L_42715e:
          .byte 0x2a
          .byte 0x83
          .byte 0x8
          .byte 0x8c
          .byte 0x9a
          .byte 0x4b
          .byte 0x3d
          .byte 0x1
          .byte 0x1
          .byte 0x1
          .byte 0x4
.L_427169:
          .byte 0x3
          .byte 0xa2
          .byte 0x31
          .byte 0x5
          .byte 0x3
          .byte 0x1
          .byte 0x9
          .byte 0x1
.L_427171:
          .byte 0x3
          .byte 0xa2
          .byte 0x31
          .byte 0x5
          .byte 0x3
          .byte 0x1
          .byte 0x9
          .byte 0x15
.L_427179:
          .byte 0x3
          .byte 0xa2
          .byte 0x31
          .byte 0x5
          .byte 0x3
          .byte 0x1
          .byte 0x9
          .byte 0x29
.L_427181:
          .byte 0x3
          .byte 0xa2
          .byte 0x31
          .byte 0x5
          .byte 0x3
          .byte 0x1
          .byte 0x9
          .byte 0x4
.L_427189:
          .byte 0x3
          .byte 0xa2
          .byte 0x31
          .byte 0x5
          .byte 0x3
          .byte 0x1
          .byte 0x9
          .byte 0x18
.L_427191:
          .byte 0x3
          .byte 0xa2
          .byte 0x31
          .byte 0x5
          .byte 0x3
          .byte 0x1
          .byte 0x9
          .byte 0x2c
.L_427199:
          .byte 0x3
          .byte 0xa2
          .byte 0x31
          .byte 0x5
          .byte 0x3
          .byte 0x1
          .byte 0x9
          .byte 0x3
.L_4271a1:
          .byte 0x3
          .byte 0xa2
          .byte 0x31
          .byte 0x5
          .byte 0x3
          .byte 0x1
          .byte 0x9
          .byte 0x17
.L_4271a9:
          .byte 0x3
          .byte 0xa2
          .byte 0x31
          .byte 0x5
          .byte 0x3
          .byte 0x1
          .byte 0x9
          .byte 0x2b
.L_4271b1:
          .byte 0x55
          .byte 0x1d
          .byte 0x9
.L_4271b4:
          .byte 0x55
          .byte 0x1d
          .byte 0x1c
.L_4271b7:
          .byte 0x55
          .byte 0x1d
          .byte 0x1d
.L_4271ba:
          .byte 0x2a
          .byte 0x83
          .byte 0x1a
          .byte 0x8c
          .byte 0x9a
          .byte 0x44
.L_4271c0:
          .byte 0x2a
          .byte 0x83
          .byte 0x1a
          .byte 0x8c
          .byte 0x9a
          .byte 0x44
          .byte 0x1
          .byte 0x3
.L_4271c8:
          .byte 0x2a
          .byte 0x83
          .byte 0x1a
          .byte 0x8c
          .byte 0x9a
          .byte 0x44
          .byte 0x1
          .byte 0x4
.L_4271d0:
          .byte 0x2a
          .byte 0x83
          .byte 0x1a
          .byte 0x8c
          .byte 0x9a
          .byte 0x44
          .byte 0x1
          .byte 0x6
.L_4271d8:
          .byte 0x2a
          .byte 0x83
          .byte 0x1a
          .byte 0x8c
          .byte 0x9a
          .byte 0x44
          .byte 0x1
          .byte 0x5
.L_4271e0:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x8
          .byte 0x1
          .byte 0x1
.L_4271e8:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x8
          .byte 0x1
          .byte 0x2
.L_4271f0:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf6
          .byte 0x7d
          .byte 0x7
          .byte 0x42
          .byte 0xd
.L_4271f9:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf6
          .byte 0x7d
          .byte 0x7
          .byte 0x42
          .byte 0x1e
.L_427202:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x4
          .byte 0x10
.L_42720a:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x30
          .byte 0x5
.L_427212:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x9
.L_42721d:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x1
          .byte 0x1b
.L_427228:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x5
.L_427231:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x19
.L_42723a:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x2d
.L_427243:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x4
          .byte 0x2
.L_42724a:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x4
          .byte 0x3
.L_427251:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x4
          .byte 0x3
          .byte 0x1
.L_427259:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x4
          .byte 0x3
          .byte 0x2
.L_427261:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x4
          .byte 0x3
          .byte 0x3
.L_427269:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3d
          .byte 0x4
          .byte 0x3
          .byte 0x4
.L_427271:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x2
          .byte 0x6
.L_427279:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x2
          .byte 0x8
.L_427281:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x2
          .byte 0x9
.L_427289:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x2
          .byte 0xa
.L_427291:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x2
          .byte 0xb
.L_427299:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x3
          .byte 0x1
.L_4272a2:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x3
          .byte 0x2
.L_4272ab:
          .byte 0x28
          .byte 0xcf
          .byte 0x6
          .byte 0x3
          .byte 0x0
          .byte 0x37
.L_4272b1:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
.L_4272b6:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x9
.L_4272bb:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x3
.L_4272c1:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x4
.L_4272c7:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x9
.L_4272cd:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0xa
.L_4272d3:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x13
.L_4272d9:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x14
.L_4272df:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x15
.L_4272e5:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x16
.L_4272eb:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x17
.L_4272f1:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x62
.L_4272f7:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x63
.L_4272fd:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0xe
          .byte 0x1
.L_427304:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0xe
          .byte 0x0
.L_42730b:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1e
          .byte 0x0
.L_427312:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1e
          .byte 0x1
.L_427319:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1f
          .byte 0x0
.L_427320:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1f
          .byte 0x1
.L_427327:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1f
          .byte 0x2
.L_42732e:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1f
          .byte 0x3
.L_427335:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1f
          .byte 0x4
.L_42733c:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1f
          .byte 0x5
.L_427343:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1f
          .byte 0x6
.L_42734a:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x1f
          .byte 0x7
.L_427351:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x20
          .byte 0x0
.L_427358:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x20
          .byte 0x2
.L_42735f:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x20
          .byte 0x3
.L_427366:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x20
          .byte 0x4
.L_42736d:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x20
          .byte 0x5
.L_427374:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x21
          .byte 0x1
.L_42737b:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x21
          .byte 0x2
.L_427382:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x21
          .byte 0x3
.L_427389:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x23
          .byte 0x0
.L_427390:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x23
          .byte 0x1
.L_427397:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x23
          .byte 0x2
.L_42739e:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x23
          .byte 0x3
.L_4273a5:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x24
          .byte 0x0
.L_4273ac:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x24
          .byte 0x1
.L_4273b3:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x14
          .byte 0x1
.L_4273ba:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x14
          .byte 0x2
.L_4273c1:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x14
          .byte 0x3
.L_4273c8:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x2
          .byte 0x14
          .byte 0x4
.L_4273cf:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x9
          .byte 0x1
          .byte 0x6
          .byte 0x1
.L_4273d7:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x9
          .byte 0x1
          .byte 0x5
          .byte 0x3
.L_4273df:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x9
          .byte 0x1
          .byte 0x5
          .byte 0x4
.L_4273e7:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x9
          .byte 0x1
          .byte 0x3
          .byte 0x3
.L_4273ef:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x9
          .byte 0x1
          .byte 0x3
          .byte 0x4
.L_4273f7:
          .byte 0x2a
          .byte 0x85
          .byte 0x3
          .byte 0x2
          .byte 0x9
          .byte 0x1
          .byte 0x8
          .byte 0x1
.L_4273ff:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x11
          .byte 0x2
.L_427408:
          .byte 0x55
          .byte 0x1d
          .byte 0x2e
.L_42740b:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x5
          .byte 0x5
          .byte 0x7
          .byte 0x8
          .byte 0x3
.L_427413:
          .byte 0x55
          .byte 0x4
          .byte 0xe
.L_427416:
          .byte 0x55
          .byte 0x4
          .byte 0xf
.L_427419:
          .byte 0x55
          .byte 0x4
          .byte 0x10
.L_42741c:
          .byte 0x55
          .byte 0x4
          .byte 0x12
.L_42741f:
          .byte 0x55
          .byte 0x4
          .byte 0x13
.L_427422:
          .byte 0x55
          .byte 0x4
          .byte 0x14
.L_427425:
          .byte 0x55
          .byte 0x4
          .byte 0x15
.L_427428:
          .byte 0x55
          .byte 0x4
          .byte 0x16
.L_42742b:
          .byte 0x55
          .byte 0x4
          .byte 0x17
.L_42742e:
          .byte 0x55
          .byte 0x4
          .byte 0x18
.L_427431:
          .byte 0x55
          .byte 0x4
          .byte 0x19
.L_427434:
          .byte 0x55
          .byte 0x4
          .byte 0x1a
.L_427437:
          .byte 0x55
          .byte 0x4
          .byte 0x1b
.L_42743a:
          .byte 0x55
          .byte 0x4
          .byte 0x1c
.L_42743d:
          .byte 0x55
          .byte 0x4
          .byte 0x1d
.L_427440:
          .byte 0x55
          .byte 0x4
          .byte 0x1e
.L_427443:
          .byte 0x55
          .byte 0x4
          .byte 0x1f
.L_427446:
          .byte 0x55
          .byte 0x4
          .byte 0x20
.L_427449:
          .byte 0x55
          .byte 0x4
          .byte 0x21
.L_42744c:
          .byte 0x55
          .byte 0x4
          .byte 0x22
.L_42744f:
          .byte 0x55
          .byte 0x4
          .byte 0x23
.L_427452:
          .byte 0x55
          .byte 0x4
          .byte 0x24
.L_427455:
          .byte 0x55
          .byte 0x4
          .byte 0x25
.L_427458:
          .byte 0x55
          .byte 0x4
          .byte 0x26
.L_42745b:
          .byte 0x55
          .byte 0x4
          .byte 0x27
.L_42745e:
          .byte 0x55
          .byte 0x4
          .byte 0x28
.L_427461:
          .byte 0x55
          .byte 0x4
          .byte 0x2f
.L_427464:
          .byte 0x55
          .byte 0x4
          .byte 0x30
.L_427467:
          .byte 0x55
          .byte 0x4
          .byte 0x31
.L_42746a:
          .byte 0x55
          .byte 0x4
          .byte 0x32
.L_42746d:
          .byte 0x55
          .byte 0x4
          .byte 0x33
.L_427470:
          .byte 0x55
          .byte 0x4
          .byte 0x34
.L_427473:
          .byte 0x55
          .byte 0x4
          .byte 0x35
.L_427476:
          .byte 0x55
          .byte 0x4
          .byte 0x36
.L_427479:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x9
          .byte 0x10
          .byte 0x3
          .byte 0x9
.L_427484:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x6
.L_42748d:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x7
.L_427496:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x8
.L_42749f:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x1a
.L_4274a8:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x1b
.L_4274b1:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x1c
.L_4274ba:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x2e
.L_4274c3:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x2f
.L_4274cc:
          .byte 0x60
          .byte 0x86
          .byte 0x48
          .byte 0x1
          .byte 0x65
          .byte 0x3
          .byte 0x4
          .byte 0x1
          .byte 0x30
.L_4274d5:
          .byte 0x2a
          .byte 0x83
          .byte 0x8
          .byte 0x8c
          .byte 0x9a
          .byte 0x4b
          .byte 0x3d
          .byte 0x1
          .byte 0x1
          .byte 0x3
          .byte 0x2
.L_4274e0:
          .byte 0x2a
          .byte 0x83
          .byte 0x8
          .byte 0x8c
          .byte 0x9a
          .byte 0x4b
          .byte 0x3d
          .byte 0x1
          .byte 0x1
          .byte 0x3
          .byte 0x3
.L_4274eb:
          .byte 0x2a
          .byte 0x83
          .byte 0x8
          .byte 0x8c
          .byte 0x9a
          .byte 0x4b
          .byte 0x3d
          .byte 0x1
          .byte 0x1
          .byte 0x3
          .byte 0x4
.L_4274f6:
          .byte 0x55
          .byte 0x1d
          .byte 0x25
          .byte 0x0
.L_4274fa:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0x8
.L_427503:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0xa
.L_42750c:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0x7
.L_427515:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0xce
          .byte 0x3e
          .byte 0x2
          .byte 0x1
.L_42751c:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x1
.L_427525:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x2
.L_42752e:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x3
.L_427537:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x4
.L_427540:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x5
.L_427549:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x6
.L_427552:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x7
.L_42755b:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x8
.L_427564:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0x9
.L_42756d:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0xa
.L_427576:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0xb
.L_42757f:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0xc
.L_427588:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0xd
.L_427591:
          .byte 0x2b
          .byte 0x24
          .byte 0x3
          .byte 0x3
          .byte 0x2
          .byte 0x8
          .byte 0x1
          .byte 0x1
          .byte 0xe
.L_42759a:
          .byte 0x2a
          .byte 0x86
          .byte 0x48
          .byte 0x86
          .byte 0xf7
          .byte 0xd
          .byte 0x1
          .byte 0x1
          .byte 0x9
.L_4275a3:
          .byte 0x2b
          .byte 0x81
          .byte 0x5
          .byte 0x10
          .byte 0x86
          .byte 0x48
          .byte 0x3f
          .byte 0x0
          .byte 0x2
.L_4275ac:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x1
          .byte 0xb
          .byte 0x0
.L_4275b2:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x1
          .byte 0xb
          .byte 0x1
.L_4275b8:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x1
          .byte 0xb
          .byte 0x2
.L_4275be:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x1
          .byte 0xb
          .byte 0x3
.L_4275c4:
          .byte 0x2b
          .byte 0x81
          .byte 0x5
          .byte 0x10
          .byte 0x86
          .byte 0x48
          .byte 0x3f
          .byte 0x0
          .byte 0x3
.L_4275cd:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x1
          .byte 0xe
          .byte 0x0
.L_4275d3:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x1
          .byte 0xe
          .byte 0x1
.L_4275d9:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x1
          .byte 0xe
          .byte 0x2
.L_4275df:
          .byte 0x2b
          .byte 0x81
          .byte 0x4
          .byte 0x1
          .byte 0xe
          .byte 0x3
.L_4275e5:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0xd6
          .byte 0x79
          .byte 0x2
          .byte 0x4
          .byte 0x2
.L_4275ef:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0xd6
          .byte 0x79
          .byte 0x2
          .byte 0x4
          .byte 0x3
.L_4275f9:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0xd6
          .byte 0x79
          .byte 0x2
          .byte 0x4
          .byte 0x4
.L_427603:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0xd6
          .byte 0x79
          .byte 0x2
          .byte 0x4
          .byte 0x5
.L_42760d:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x3c
          .byte 0x2
          .byte 0x1
          .byte 0x1
.L_427618:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x3c
          .byte 0x2
          .byte 0x1
          .byte 0x2
.L_427623:
          .byte 0x2b
          .byte 0x6
          .byte 0x1
          .byte 0x4
          .byte 0x1
          .byte 0x82
          .byte 0x37
          .byte 0x3c
          .byte 0x2
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x90
.L_427630:
          .string "Netscape Certificate Extension"
          .zero 1
.L_427650:
          .string "X509v3 Private Key Usage Period"
.L_427670:
          .string "X509v3 Subject Alternative Name"
.L_427690:
          .string "X509v3 Issuer Alternative Name"
          .zero 1
.L_4276b0:
          .string "X509v3 Authority Key Identifier"
.L_4276d0:
          .string "X509v3 CRL Distribution Points"
          .zero 1
.L_4276f0:
          .string "Microsoft Individual Code Signing"
          .zero 6
.L_427718:
          .string "Microsoft Commercial Code Signing"
          .zero 6
.L_427740:
          .string "Microsoft Encrypted File System"
.L_427760:
          .string "pbeWithSHA1And3-KeyTripleDES-CBC"
          .zero 7
.L_427788:
          .string "pbeWithSHA1And2-KeyTripleDES-CBC"
          .zero 7
.L_4277b0:
          .string "id-smime-mod-ets-eSignature-88"
          .zero 1
.L_4277d0:
          .string "id-smime-mod-ets-eSignature-97"
          .zero 1
.L_4277f0:
          .string "id-smime-mod-ets-eSigPolicy-88"
          .zero 1
.L_427810:
          .string "id-smime-mod-ets-eSigPolicy-97"
          .zero 1
.L_427830:
          .string "id-smime-aa-signingCertificate"
          .zero 1
.L_427850:
          .string "id-smime-aa-ets-commitmentType"
          .zero 1
.L_427870:
          .string "id-smime-aa-ets-signerLocation"
          .zero 1
.L_427890:
          .string "id-smime-aa-ets-contentTimestamp"
          .zero 7
.L_4278b8:
          .string "id-smime-aa-ets-CertificateRefs"
.L_4278d8:
          .string "id-smime-aa-ets-RevocationRefs"
          .zero 1
.L_4278f8:
          .string "id-smime-aa-ets-revocationValues"
          .zero 7
.L_427920:
          .string "id-smime-aa-ets-certCRLTimestamp"
          .zero 7
.L_427948:
          .string "id-smime-aa-ets-archiveTimeStamp"
          .zero 7
.L_427970:
          .string "id-smime-cti-ets-proofOfOrigin"
          .zero 1
.L_427990:
          .string "id-smime-cti-ets-proofOfReceipt"
.L_4279b0:
          .string "id-smime-cti-ets-proofOfDelivery"
          .zero 7
.L_4279d8:
          .string "id-smime-cti-ets-proofOfSender"
          .zero 1
.L_4279f8:
          .string "id-smime-cti-ets-proofOfApproval"
          .zero 7
.L_427a20:
          .string "id-smime-cti-ets-proofOfCreation"
          .zero 7
.L_427a48:
          .string "directory services - algorithms"
.L_427a68:
          .string "X509v3 No Revocation Available"
          .zero 1
.L_427a88:
          .string "Secure Electronic Transactions"
          .zero 1
.L_427aa8:
          .string "Microsoft Universal Principal Name"
          .zero 5
.L_427ad0:
          .string "X509v3 Subject Directory Attributes"
          .zero 4
.L_427af8:
          .string "X509v3 Issuing Distrubution Point"
          .zero 6
.L_427b20:
          .string "id-GostR3411-94-with-GostR3410-2001"
          .zero 4
.L_427b48:
          .string "GOST R 34.11-94 with GOST R 34.10-2001"
          .zero 1
.L_427b70:
          .string "id-GostR3411-94-with-GostR3410-94"
          .zero 6
.L_427b98:
          .string "GOST R 34.11-94 with GOST R 34.10-94"
          .zero 3
.L_427bc0:
          .string "id-Gost28147-89-CryptoPro-KeyMeshing"
          .zero 3
.L_427be8:
          .string "id-Gost28147-89-None-KeyMeshing"
.L_427c08:
          .string "id-GostR3411-94-CryptoProParamSet"
          .zero 6
.L_427c30:
          .string "id-Gost28147-89-CryptoPro-A-ParamSet"
          .zero 3
.L_427c58:
          .string "id-Gost28147-89-CryptoPro-B-ParamSet"
          .zero 3
.L_427c80:
          .string "id-Gost28147-89-CryptoPro-C-ParamSet"
          .zero 3
.L_427ca8:
          .string "id-Gost28147-89-CryptoPro-D-ParamSet"
          .zero 3
.L_427cd0:
          .string "id-Gost28147-89-CryptoPro-Oscar-1-1-ParamSet"
          .zero 3
.L_427d00:
          .string "id-Gost28147-89-CryptoPro-Oscar-1-0-ParamSet"
          .zero 3
.L_427d30:
          .string "id-Gost28147-89-CryptoPro-RIC-1-ParamSet"
          .zero 7
.L_427d60:
          .string "id-GostR3410-94-CryptoPro-A-ParamSet"
          .zero 3
.L_427d88:
          .string "id-GostR3410-94-CryptoPro-B-ParamSet"
          .zero 3
.L_427db0:
          .string "id-GostR3410-94-CryptoPro-C-ParamSet"
          .zero 3
.L_427dd8:
          .string "id-GostR3410-94-CryptoPro-D-ParamSet"
          .zero 3
.L_427e00:
          .string "id-GostR3410-94-CryptoPro-XchA-ParamSet"
.L_427e28:
          .string "id-GostR3410-94-CryptoPro-XchB-ParamSet"
.L_427e50:
          .string "id-GostR3410-94-CryptoPro-XchC-ParamSet"
.L_427e78:
          .string "id-GostR3410-2001-TestParamSet"
          .zero 1
.L_427e98:
          .string "id-GostR3410-2001-CryptoPro-A-ParamSet"
          .zero 1
.L_427ec0:
          .string "id-GostR3410-2001-CryptoPro-B-ParamSet"
          .zero 1
.L_427ee8:
          .string "id-GostR3410-2001-CryptoPro-C-ParamSet"
          .zero 1
.L_427f10:
          .string "id-GostR3410-2001-CryptoPro-XchA-ParamSet"
          .zero 6
.L_427f40:
          .string "id-GostR3410-2001-CryptoPro-XchB-ParamSet"
          .zero 6
.L_427f70:
          .string "GOST 28147-89 Cryptocom ParamSet"
          .zero 7
.L_427f98:
          .string "id-GostR3411-94-with-GostR3410-94-cc"
          .zero 3
.L_427fc0:
          .string "GOST R 34.11-94 with GOST R 34.10-94 Cryptocom"
          .zero 1
.L_427ff0:
          .string "id-GostR3411-94-with-GostR3410-2001-cc"
          .zero 1
.L_428018:
          .string "GOST R 34.11-94 with GOST R 34.10-2001 Cryptocom"
          .zero 7
.L_428050:
          .string "GOST R 3410-2001 Parameter Set Cryptocom"
          .zero 7
.L_428080:
          .string "dhSinglePass-stdDH-sha1kdf-scheme"
          .zero 6
.L_4280a8:
          .string "dhSinglePass-stdDH-sha224kdf-scheme"
          .zero 4
.L_4280d0:
          .string "dhSinglePass-stdDH-sha256kdf-scheme"
          .zero 4
.L_4280f8:
          .string "dhSinglePass-stdDH-sha384kdf-scheme"
          .zero 4
.L_428120:
          .string "dhSinglePass-stdDH-sha512kdf-scheme"
          .zero 4
.L_428148:
          .string "dhSinglePass-cofactorDH-sha1kdf-scheme"
          .zero 1
.L_428170:
          .string "dhSinglePass-cofactorDH-sha224kdf-scheme"
          .zero 7
.L_4281a0:
          .string "dhSinglePass-cofactorDH-sha256kdf-scheme"
          .zero 7
.L_4281d0:
          .string "dhSinglePass-cofactorDH-sha384kdf-scheme"
          .zero 7
.L_428200:
          .string "dhSinglePass-cofactorDH-sha512kdf-scheme"
          .zero 7
.L_428230:

            push 117
            jb .L_42829d
          .byte 0x73
          .byte 0x64

            imul ESP,DWORD PTR [RBX+116],1399746409
            je .L_4282a0
          .byte 0x74
          .byte 0x65
          .byte 0x4f
          .byte 0x72
          .byte 0x50
          .byte 0x72
          .byte 0x6f
          .byte 0x76
          .byte 0x69
          .byte 0x6e
          .byte 0x63
          .byte 0x65
          .byte 0x4e
          .byte 0x61
          .byte 0x6d
          .byte 0x65
          .byte 0x0
.L_428250:

            test RDI,RDI
            push R14
            push R13
            push R12
            push RBP
            push RBX
            mov RBX,RDI
            je .L_428266

            test BYTE PTR [RDI+32],1
            jne .L_428278
.L_428266:

            mov RAX,RBX
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428278:

            call .L_428bc0

            test RAX,RAX
            mov RBP,RAX
            je .L_4283d0

            mov EDI,DWORD PTR [RBX+20]
            lea RSI,QWORD PTR [RIP+.L_428472]
            mov EDX,83
            call .L_418820
.L_42829d:

            test RAX,RAX
.L_4282a0:

            mov R13,RAX
            je .L_428423

            mov RSI,QWORD PTR [RBX+24]
            movsxd RDX,DWORD PTR [RBX+20]
            test RSI,RSI
            je .L_4282c1

            mov RDI,RAX
            call memcpy@PLT

            mov EDX,DWORD PTR [RBX+20]
.L_4282c1:

            mov EAX,DWORD PTR [RBX+16]
            mov QWORD PTR [RBP+8],0
            mov RDI,QWORD PTR [RBX+8]
            mov QWORD PTR [RBP+24],R13
            mov DWORD PTR [RBP+20],EDX
            mov QWORD PTR [RBP],0
            mov DWORD PTR [RBP+16],EAX
            test RDI,RDI
            je .L_428380

            call strlen@PLT

            lea R12D,DWORD PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_428472]
            mov EDX,95
            mov EDI,R12D
            call .L_418820

            test RAX,RAX
            mov R14,RAX
            je .L_428400

            mov RSI,QWORD PTR [RBX+8]
            movsxd RDX,R12D
            mov RDI,RAX
            call memcpy@PLT

            mov QWORD PTR [RBP+8],R14
.L_428327:

            mov RDI,QWORD PTR [RBX]
            test RDI,RDI
            je .L_428363

            call strlen@PLT

            lea R12D,DWORD PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_428472]
            mov EDX,104
            mov EDI,R12D
            call .L_418820

            test RAX,RAX
            je .L_428388

            mov RSI,QWORD PTR [RBX]
            movsxd RDX,R12D
            mov RDI,RAX
            call memcpy@PLT

            mov QWORD PTR [RBP],RAX
.L_428363:

            mov EAX,DWORD PTR [RBX+32]
            mov RBX,RBP
            or EAX,13
            mov DWORD PTR [RBP+32],EAX
            mov RAX,RBX
            pop RBX
.L_428373:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428380:

            xor R14D,R14D
            jmp .L_428327
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428388:

            lea RCX,QWORD PTR [RIP+.L_428472]
            mov R8D,115
            mov EDX,65
            mov ESI,101
            mov EDI,8
            call .L_416a00

            test R14,R14
            je .L_4283b6

            mov RDI,R14
            call .L_418aa0
.L_4283b6:

            mov RDI,R13
            call .L_418aa0
.L_4283be:

            mov RDI,RBP
            xor EBX,EBX
            call .L_418aa0

            jmp .L_428266
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_4283d0:

            lea RCX,QWORD PTR [RIP+.L_428472]
            mov R8D,80
            mov EDX,13
            mov ESI,101
            mov EDI,8
            xor EBX,EBX
            call .L_416a00

            jmp .L_428266
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428400:

            lea RCX,QWORD PTR [RIP+.L_428472]
            mov R8D,115
            mov EDX,65
            mov ESI,101
            mov EDI,8
            call .L_416a00

            jmp .L_4283b6
.L_428423:

            lea RCX,QWORD PTR [RIP+.L_428472]
            mov R8D,115
            mov EDX,65
            mov ESI,101
            mov EDI,8
            call .L_416a00

            jmp .L_4283be
.L_428449:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428450:

            movsxd RDX,DWORD PTR [RDI+20]
            mov EAX,EDX
            sub EAX,DWORD PTR [RSI+20]
            jne .L_428470

            mov RSI,QWORD PTR [RSI+24]
            mov RDI,QWORD PTR [RDI+24]
            jmp memcmp@PLT
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428470:

            ret 
.L_428472:
          .string "obj_lib.c"
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428480:

            push R12
            push RBP
            xor EBP,EBP
            push RBX
            sub RSP,16
.L_42848a:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+8],RAX
            xor EAX,EAX
            test RDI,RDI
            je .L_4284fc

            cmp QWORD PTR [RDI+24],0
            mov RBX,RDI
            je .L_4284fc

            mov R12,RSI
            mov ESI,DWORD PTR [RDI+20]
            mov EDX,6
            xor EDI,EDI
            call .L_4293b0

            test R12,R12
            mov EBP,EAX
            je .L_4284fc

            mov RAX,QWORD PTR [R12]
            mov EDX,DWORD PTR [RBX+20]
            mov RDI,RSP
            xor R8D,R8D
            mov ECX,6
            xor ESI,ESI
            mov QWORD PTR [RSP],RAX
            call .L_429280

            movsxd RDX,DWORD PTR [RBX+20]
            mov RSI,QWORD PTR [RBX+24]
            mov RDI,QWORD PTR [RSP]
            call memcpy@PLT

            movsxd RAX,DWORD PTR [RBX+20]
            add RAX,QWORD PTR [RSP]
            mov QWORD PTR [R12],RAX
.L_4284fc:

            mov RCX,QWORD PTR [RSP+8]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_428517

            add RSP,16
.L_428512:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_428517:

            call __stack_chk_fail@PLT
.L_42851c:

            nop
            nop
            nop
            nop
.L_428520:

            push R15
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,104
.L_42852e:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            test ECX,ECX
            mov QWORD PTR [RSP],RDI
            mov DWORD PTR [RSP+20],ESI
            je .L_4286c0

            cmp ECX,-1
            je .L_4286f0

            movsx EAX,BYTE PTR [RDX]
            sub EAX,48
            cmp EAX,2
            mov DWORD PTR [RSP+28],EAX
            ja .L_428717
.L_42856a:

            cmp ECX,1
            jle .L_428908

            sub ECX,2
            lea R13,QWORD PTR [RDX+2]
            movsx EAX,BYTE PTR [RDX+1]
            mov EBP,ECX
            je .L_4286c2

            cmp EAX,32
            je .L_428594

            cmp EAX,46
            jne .L_4289ba
.L_428594:

            movsxd RAX,DWORD PTR [RSP+28]
            xor R14D,R14D
            mov DWORD PTR [RSP+56],24
            mov DWORD PTR [RSP+24],0
            mov RDI,RAX
            lea RAX,QWORD PTR [RAX+RAX*4]
            shl RAX,3
            mov QWORD PTR [RSP+40],RAX
            lea EAX,DWORD PTR [RDI+RDI*4]
            shl EAX,3
            cdqe 
            mov QWORD PTR [RSP+48],RAX
            lea RAX,QWORD PTR [RSP+64]
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+8],RAX
.L_4285d8:

            xor R15D,R15D
            xor EAX,EAX
            jmp .L_428644
          .byte 0x90
.L_4285e0:

            movabs RCX,1844674407370955152
            cmp R15,RCX
            jbe .L_42867a

            test R14,R14
            je .L_428690
.L_4285fc:

            mov RSI,R15
            mov RDI,R14
            call .L_4048e0

            test EAX,EAX
            je .L_4289f8
.L_42860f:

            mov ESI,10
            mov RDI,R14
            call .L_408a00

            test EAX,EAX
            je .L_428780

            movsxd RSI,EBX
            mov RDI,R14
            call .L_408810

            test EAX,EAX
            je .L_428780

            mov EAX,1
.L_42863c:

            test EBP,EBP
            je .L_428740
.L_428644:

            add R13,1
            movsx R12D,BYTE PTR [R13-1]
            sub EBP,1
            cmp R12D,32
            je .L_428740

            cmp R12D,46
            je .L_428740

            lea EBX,DWORD PTR [R12-48]
            cmp EBX,9
            ja .L_428930

            test EAX,EAX
            je .L_4285e0
.L_42867a:

            test EAX,EAX
            jne .L_42860f

            lea RDX,QWORD PTR [R15+R15*4]
            movsxd RBX,EBX
            lea R15,QWORD PTR [RBX+RDX*2]
            jmp .L_42863c
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428690:

            call .L_4045b0

            test RAX,RAX
            mov R14,RAX
            jne .L_4285fc

            mov RAX,QWORD PTR [RSP+8]
            mov RDI,QWORD PTR [RSP+32]
            cmp RAX,RDI
            je .L_4286c0

            mov RDI,RAX
            call .L_418aa0

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4286c0:

            xor EBP,EBP
.L_4286c2:

            mov RDI,QWORD PTR [RSP+88]
            xor RDI,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_428a7d

            add RSP,104
.L_4286dc:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4286f0:

            mov RDI,RDX
            mov QWORD PTR [RSP+8],RDX
            call strlen@PLT

            mov RDX,QWORD PTR [RSP+8]
            mov ECX,EAX
            movsx EAX,BYTE PTR [RDX]
            sub EAX,48
            cmp EAX,2
            mov DWORD PTR [RSP+28],EAX
            jbe .L_42856a
.L_428717:

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov R8D,108
            mov EDX,122
            mov ESI,100
            mov EDI,13
            xor EBP,EBP
            call .L_416a00

            jmp .L_4286c2
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428740:

            mov EDX,DWORD PTR [RSP+24]
            test EDX,EDX
            jne .L_428890

            cmp DWORD PTR [RSP+28],1
            jg .L_4287b0

            cmp R15,39
            jbe .L_4287b0

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov R8D,155
            mov EDX,147
            mov ESI,100
            mov EDI,13
            call .L_416a00

            nop
            nop
            nop
            nop
            nop
            nop
.L_428780:

            mov RDX,QWORD PTR [RSP+32]
            cmp QWORD PTR [RSP+8],RDX
            je .L_428796
.L_42878c:

            mov RDI,QWORD PTR [RSP+8]
            call .L_418aa0
.L_428796:

            test R14,R14
            je .L_4286c0
.L_42879f:

            mov RDI,R14
            xor EBP,EBP
            call .L_404540

            jmp .L_4286c2
          .byte 0x66
          .byte 0x90
.L_4287b0:

            add R15,QWORD PTR [RSP+40]
            test EAX,EAX
            jne .L_428a10
.L_4287bd:

            mov RCX,QWORD PTR [RSP+8]
            mov EAX,1
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4287d0:

            mov EDX,R15D
            shr R15,7
            mov EBX,EAX
            and EDX,127
            mov BYTE PTR [RCX+RAX*1-1],DL
            add RAX,1
            test R15,R15
            jne .L_4287d0
.L_4287e9:

            mov EAX,DWORD PTR [RSP+24]
            add EAX,EBX
.L_4287ef:

            cmp QWORD PTR [RSP],0
            je .L_428960

            cmp DWORD PTR [RSP+20],EAX
            jl .L_428a57

            lea ECX,DWORD PTR [RBX-1]
            mov EAX,DWORD PTR [RSP+24]
            test ECX,ECX
            jle .L_428857

            movsxd RDX,DWORD PTR [RSP+24]
            mov RDI,QWORD PTR [RSP]
            movsxd RCX,ECX
            add RCX,QWORD PTR [RSP+8]
            lea RSI,QWORD PTR [RDI+RDX*1+1]
            lea RAX,QWORD PTR [RDI+RDX*1]
            lea EDX,DWORD PTR [RBX-2]
            mov R8,RDX
            add RSI,RDX
            nop
            nop
            nop
            nop
            nop
            nop
.L_428838:

            movzx EDX,BYTE PTR [RCX]
            add RAX,1
            sub RCX,1
            or EDX,4294967168
            mov BYTE PTR [RAX-1],DL
            cmp RSI,RAX
            jne .L_428838

            mov EAX,DWORD PTR [RSP+24]
            lea EAX,DWORD PTR [RAX+R8*1+1]
.L_428857:

            mov RDX,QWORD PTR [RSP+8]
            lea EDI,DWORD PTR [RAX+1]
            cdqe 
            mov DWORD PTR [RSP+24],EDI
            mov RDI,QWORD PTR [RSP]
            movzx EDX,BYTE PTR [RDX]
            mov BYTE PTR [RDI+RAX*1],DL
.L_42886f:

            test EBP,EBP
            je .L_428a2a

            cmp R12D,46
            je .L_4285d8

            cmp R12D,32
            je .L_4285d8

            jmp .L_4289cc
.L_428890:

            test EAX,EAX
            je .L_4287bd
.L_428898:

            mov RDI,R14
            call .L_404490

            lea ECX,DWORD PTR [RAX+6]
            mov EAX,2454267027
            imul ECX
            lea R8D,DWORD PTR [RDX+RCX*1]
            sar ECX,31
            sar R8D,2
            mov EBX,R8D
            sub EBX,ECX
            cmp EBX,DWORD PTR [RSP+56]
            jle .L_428970

            mov RAX,QWORD PTR [RSP+8]
            mov RDX,QWORD PTR [RSP+32]
            cmp RAX,RDX
            je .L_4288db

            mov RDI,RAX
            call .L_418aa0
.L_4288db:

            lea EAX,DWORD PTR [RBX+32]
            lea RSI,QWORD PTR [RIP+.L_428f94]
            mov EDX,173
            mov EDI,EAX
            mov DWORD PTR [RSP+56],EAX
            call .L_418820

            test RAX,RAX
            mov QWORD PTR [RSP+8],RAX
            jne .L_42897c

            jmp .L_42878c
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428908:

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov R8D,113
            mov EDX,138
            mov ESI,100
            mov EDI,13
            xor EBP,EBP
            call .L_416a00

            jmp .L_4286c2
.L_428930:

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov R8D,135
            mov EDX,130
            mov ESI,100
            mov EDI,13
            call .L_416a00

            jmp .L_428780
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428960:

            mov DWORD PTR [RSP+24],EAX
            jmp .L_42886f
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428970:

            test EBX,EBX
            mov EAX,DWORD PTR [RSP+24]
            je .L_4287ef
.L_42897c:

            mov RDX,QWORD PTR [RSP+8]
            lea EAX,DWORD PTR [RBX-1]
            mov DWORD PTR [RSP+60],EBX
            lea RAX,QWORD PTR [RDX+RAX*1+1]
            mov RBX,RDX
            mov R15,RAX
            nop
            nop
            nop
            nop
            nop
.L_428998:

            mov ESI,128
            mov RDI,R14
            add RBX,1
            call .L_408700

            mov BYTE PTR [RBX-1],AL
            cmp R15,RBX
            jne .L_428998

            mov EBX,DWORD PTR [RSP+60]
            jmp .L_4287e9
.L_4289ba:

            lea RAX,QWORD PTR [RSP+64]
            xor R14D,R14D
            mov QWORD PTR [RSP+32],RAX
            mov QWORD PTR [RSP+8],RAX
.L_4289cc:

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov R8D,122
            mov EDX,131
            mov ESI,100
            mov EDI,13
            call .L_416a00

            jmp .L_428780
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4289f8:

            mov RDX,QWORD PTR [RSP+32]
            cmp QWORD PTR [RSP+8],RDX
            jne .L_42878c

            jmp .L_42879f
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428a10:

            mov RSI,QWORD PTR [RSP+48]
            mov RDI,R14
            call .L_408810

            test EAX,EAX
            jne .L_428898

            jmp .L_428780
.L_428a2a:

            mov RAX,QWORD PTR [RSP+8]
            mov RCX,QWORD PTR [RSP+32]
            cmp RAX,RCX
            je .L_428a41

            mov RDI,RAX
            call .L_418aa0
.L_428a41:

            test R14,R14
            je .L_428a82

            mov RDI,R14
            call .L_404540

            mov EBP,DWORD PTR [RSP+24]
            jmp .L_4286c2
.L_428a57:

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov R8D,191
            mov EDX,107
            mov ESI,100
            mov EDI,13
            call .L_416a00

            jmp .L_428780
.L_428a7d:

            call __stack_chk_fail@PLT
.L_428a82:

            mov EBP,DWORD PTR [RSP+24]
            jmp .L_4286c2
.L_428a8b:

            nop
            nop
            nop
            nop
            nop
.L_428a90:

            xor ECX,ECX
            jmp .L_41e100
.L_428a97:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428aa0:

            push R15
            push R14
            push R13
            push R12
            mov R12,RDI
            push RBP
            push RBX
            sub RSP,104
.L_428ab1:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+88],RAX
            xor EAX,EAX
            test RSI,RSI
            je .L_428b10

            cmp QWORD PTR [RSI+24],0
            mov RBX,RSI
            je .L_428b10

            mov R13,RSP
            xor ECX,ECX
            mov RDX,RSI
            mov RDI,R13
            mov ESI,80
            call .L_41e100

            cmp EAX,79
            mov EBP,EAX
            jg .L_428b60

            test EAX,EAX
            jg .L_428b50

            lea RSI,QWORD PTR [RIP+.L_428fa4]
            mov EDX,9
            mov RDI,R12
            call .L_4125d0

            mov EBP,EAX
            jmp .L_428b26
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428b10:

            lea RSI,QWORD PTR [RIP+.L_428f9f]
            mov EDX,4
            mov RDI,R12
            call .L_4125d0

            mov EBP,EAX
.L_428b26:

            mov RCX,QWORD PTR [RSP+88]
            xor RCX,QWORD PTR FS:[40]
            mov EAX,EBP
            jne .L_428bb9

            add RSP,104
.L_428b40:

            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428b50:

            mov EDX,EBP
            mov RSI,R13
            mov RDI,R12
            call .L_4125d0

            jmp .L_428b26
          .byte 0x90
.L_428b60:

            lea R15D,DWORD PTR [RAX+1]
            lea RSI,QWORD PTR [RIP+.L_428f94]
            mov EDX,227
            mov EDI,R15D
            call .L_418820

            test RAX,RAX
            mov R14,RAX
            je .L_428baf

            xor ECX,ECX
            mov RDX,RBX
            mov ESI,R15D
            mov RDI,RAX
            call .L_41e100

            mov EDX,EBP
            mov RSI,R14
            mov RDI,R12
            call .L_4125d0

            cmp R14,R13
            je .L_428b26

            mov RDI,R14
            call .L_418aa0

            jmp .L_428b26
.L_428baf:

            mov EBP,4294967295
            jmp .L_428b26
.L_428bb9:

            call __stack_chk_fail@PLT
.L_428bbe:

            nop
            nop
.L_428bc0:

            lea RSI,QWORD PTR [RIP+.L_428f94]
            sub RSP,24
            mov EDX,346
            mov EDI,40
            call .L_418820

            test RAX,RAX
            je .L_428c10

            mov QWORD PTR [RAX],0
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
            mov QWORD PTR [RAX+24],0
            mov DWORD PTR [RAX+32],1
.L_428c05:

            add RSP,24
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428c10:

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov R8D,348
            mov EDX,65
            mov ESI,123
            mov EDI,13
            mov QWORD PTR [RSP+8],RAX
            call .L_416a00

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_428c05
.L_428c3d:

            nop
            nop
            nop
.L_428c40:

            test RDI,RDI
            je .L_428cc0

            push RBX
.L_428c46:

            mov EAX,DWORD PTR [RDI+32]
            mov RBX,RDI
            test AL,4
            je .L_428c7d

            mov RDI,QWORD PTR [RDI]
            test RDI,RDI
            je .L_428c5d

            call .L_418aa0
.L_428c5d:

            mov RDI,QWORD PTR [RBX+8]
            test RDI,RDI
            je .L_428c6b

            call .L_418aa0
.L_428c6b:

            mov EAX,DWORD PTR [RBX+32]
            mov QWORD PTR [RBX+8],0
            mov QWORD PTR [RBX],0
.L_428c7d:

            test AL,8
            je .L_428ca1

            mov RDI,QWORD PTR [RBX+24]
            test RDI,RDI
            je .L_428c92

            call .L_418aa0

            mov EAX,DWORD PTR [RBX+32]
.L_428c92:

            mov QWORD PTR [RBX+24],0
            mov DWORD PTR [RBX+20],0
.L_428ca1:

            test AL,1
            jne .L_428cb0

            pop RBX
.L_428ca6:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428cb0:

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_428cc0:

            ret 
.L_428cc2:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428cd0:

            push R15
            lea RAX,QWORD PTR [RDX-1]
            push R14
            push R13
            push R12
            push RBP
            push RBX
            sub RSP,8
.L_428ce2:

            cmp RAX,2147483646
            ja .L_428d04

            test RSI,RSI
            mov R12,RSI
            je .L_428d04

            mov RBX,QWORD PTR [RSI]
            test RBX,RBX
            je .L_428d04

            cmp BYTE PTR [RBX+RDX*1-1],0
            mov RBP,RDX
            jns .L_428d40
.L_428d04:

            mov R8D,283
.L_428d0a:

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov EDX,216
            mov ESI,196
            mov EDI,13
            call .L_416a00
.L_428d25:

            xor R13D,R13D
.L_428d28:

            add RSP,8
.L_428d2c:

            mov RAX,R13
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428d40:

            mov R14,RDI
            mov ECX,EDX
            mov RAX,RBX
.L_428d48:

            cmp BYTE PTR [RAX],128
            je .L_428e10
.L_428d51:

            add RAX,1
            mov EDX,EAX
            sub EDX,EBX
            cmp ECX,EDX
            jg .L_428d48

            test R14,R14
            je .L_428d71

            mov R13,QWORD PTR [R14]
            test R13,R13
            je .L_428d71

            test BYTE PTR [R13+32],1
            jne .L_428d82
.L_428d71:

            call .L_428bc0

            test RAX,RAX
            mov R13,RAX
            je .L_428d25

            mov RBX,QWORD PTR [R12]
.L_428d82:

            mov RCX,QWORD PTR [R13+24]
            mov QWORD PTR [R13+24],0
            test RCX,RCX
            je .L_428e1f

            cmp DWORD PTR [R13+20],EBP
            jge .L_428dcd

            mov DWORD PTR [R13+20],0
            mov RDI,RCX
            call .L_418aa0
.L_428dad:

            lea RSI,QWORD PTR [RIP+.L_428f94]
            mov EDX,315
            mov EDI,EBP
            call .L_418820

            test RAX,RAX
            mov RCX,RAX
            je .L_428e29

            or DWORD PTR [R13+32],8
.L_428dcd:

            movsxd R15,EBP
            mov RSI,RBX
            mov RDI,RCX
            mov RDX,R15
            add RBX,R15
            call memcpy@PLT

            test R14,R14
            mov QWORD PTR [R13+24],RAX
            mov DWORD PTR [R13+20],EBP
            mov QWORD PTR [R13],0
            mov QWORD PTR [R13+8],0
            je .L_428e01

            mov QWORD PTR [R14],R13
.L_428e01:

            mov QWORD PTR [R12],RBX
            jmp .L_428d28
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_428e10:

            cmp EAX,EBX
            jne .L_428e65
.L_428e14:

            mov R8D,290
            jmp .L_428d0a
.L_428e1f:

            mov DWORD PTR [R13+20],0
            jmp .L_428dad
.L_428e29:

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov R8D,336
            mov EDX,65
            mov ESI,196
            mov EDI,13
            call .L_416a00

            test R14,R14
            je .L_428e58

            cmp QWORD PTR [R14],R13
            je .L_428d25
.L_428e58:

            mov RDI,R13
            call .L_428c40

            jmp .L_428d25
.L_428e65:

            cmp BYTE PTR [RAX-1],0
            js .L_428d51

            jmp .L_428e14
.L_428e71:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_428e80:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov R8,RDX
            mov R12,RDI
            sub RSP,32
.L_428e91:

            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+24],RAX
            xor EAX,EAX
            lea RBX,QWORD PTR [RSP+8]
            mov RAX,QWORD PTR [RSI]
            lea RCX,QWORD PTR [RSP+4]
            lea RSI,QWORD PTR [RSP+16]
            mov RDX,RSP
            mov RDI,RBX
            mov QWORD PTR [RSP+8],RAX
            call .L_429090

            test AL,128
            jne .L_428f30

            cmp DWORD PTR [RSP],6
            jne .L_428f08

            mov RDX,QWORD PTR [RSP+16]
            mov RSI,RBX
            mov RDI,R12
            call .L_428cd0

            test RAX,RAX
            je .L_428eeb

            mov RDX,QWORD PTR [RSP+8]
            mov QWORD PTR [RBP],RDX
.L_428eeb:

            mov RBX,QWORD PTR [RSP+24]
            xor RBX,QWORD PTR FS:[40]
            jne .L_428f37

            add RSP,32
.L_428eff:

            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428f08:

            mov EDX,116
.L_428f0d:

            lea RCX,QWORD PTR [RIP+.L_428f94]
            mov R8D,264
            mov ESI,147
            mov EDI,13
            call .L_416a00

            xor EAX,EAX
            jmp .L_428eeb
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_428f30:

            mov EDX,102
            jmp .L_428f0d
.L_428f37:

            call __stack_chk_fail@PLT
.L_428f3c:

            nop
            nop
            nop
            nop
.L_428f40:

            sub RSP,56
.L_428f44:

            mov DWORD PTR [RSP+16],EDI
            mov RDI,RSP
            mov DWORD PTR [RSP+20],EDX
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov QWORD PTR [RSP],RCX
            mov QWORD PTR [RSP+8],R8
            mov QWORD PTR [RSP+24],RSI
            mov DWORD PTR [RSP+32],13
            call .L_428250

            mov RDX,QWORD PTR [RSP+40]
            xor RDX,QWORD PTR FS:[40]
            jne .L_428f8f

            add RSP,56
.L_428f8e:

            ret 
.L_428f8f:

            call __stack_chk_fail@PLT
.L_428f94:
          .string "a_object.c"
.L_428f9f:

            push RBP
            add BYTE PTR [RCX+RCX*2],R15B
            push RSI
            add BYTE PTR DS:[RSI-112],AH
# WARNING: found overlapping blocks at address 28d44
.set .L_428fa4, . - 12

.L_428fb0:

            mov RDX,QWORD PTR [RDI]
            xor EAX,EAX
            cmp BYTE PTR [RDX],0
            jne .L_428fcc

            cmp BYTE PTR [RDX+1],0
            jne .L_428fcc

            add RDX,2
            mov EAX,1
            mov QWORD PTR [RDI],RDX
.L_428fcc:

            ret 
.L_428fce:

            nop
            nop
.L_428fd0:

            cmp DWORD PTR [RDI+16],33
            mov RCX,RDI
            mov RAX,QWORD PTR [RDI+32]
            je .L_428ff8
.L_428fdd:

            test RAX,RAX
            je .L_429004

            test BYTE PTR [RCX+16],1
            jne .L_429010
.L_428fe8:

            xor ESI,ESI
            mov DWORD PTR [RCX+12],62
            mov EAX,ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_428ff8:

            mov ESI,DWORD PTR [RDI+8]
            test ESI,ESI
            je .L_429020
.L_428fff:

            test RAX,RAX
            jne .L_429010
.L_429004:

            mov ESI,1
.L_429009:

            mov EAX,ESI
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429010:

            test RAX,RAX
            js .L_428fe8

            jmp .L_429004
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429020:

            test RAX,RAX
            jle .L_428fff

            cmp RAX,1
            je .L_429040

            call .L_428fb0

            test EAX,EAX
            je .L_429040

            mov RAX,QWORD PTR [RDI+32]
            jmp .L_428fdd
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429040:

            mov DWORD PTR [RCX+12],63
            jmp .L_429009
.L_429049:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429050:

            test RSI,RSI
            jle .L_429068

            cmp RSI,1
            je .L_429060

            jmp .L_428fb0
.L_429060:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429068:

            mov EAX,1
            ret 
.L_42906e:

            nop
            nop
.L_429070:

            test RSI,RSI
            jle .L_429088

            cmp RSI,1
            je .L_429080

            jmp .L_428fb0
.L_429080:

            xor EAX,EAX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429088:

            mov EAX,1
            ret 
.L_42908e:

            nop
            nop
.L_429090:

            test R8,R8
            push R14
            push R13
            push R12
            push RBP
            push RBX
.L_42909b:

            je .L_42916a

            mov RBP,QWORD PTR [RDI]
            mov RBX,RDI
            lea R10,QWORD PTR [R8-1]
            movzx EAX,BYTE PTR [RBP]
            lea R11,QWORD PTR [RBP+1]
            mov EDI,EAX
            and EDI,31
            cmp DIL,31
            je .L_4291a0

            test R10,R10
            je .L_42916a

            movzx EDI,DIL
.L_4290cf:

            mov DWORD PTR [RDX],EDI
            mov EDX,EAX
            and EDX,192
            test R10D,R10D
            mov DWORD PTR [RCX],EDX
            jle .L_42916a

            movzx EDX,BYTE PTR [R11]
            and EAX,32
            lea R13,QWORD PTR [R11+1]
            mov R12D,EAX
            cmp DL,128
            je .L_4291f0

            mov EDI,EDX
            and EDI,127
            test DL,DL
            movzx EAX,DIL
            js .L_429160
.L_429108:

            test RAX,RAX
            js .L_42916a

            mov QWORD PTR [RSI],RAX
            xor R14D,R14D
.L_429113:

            mov RDX,R13
            sub RDX,RBP
            sub R8,RDX
            cmp R8,RAX
            jge .L_429146

            lea RCX,QWORD PTR [RIP+.L_4298d5]
            mov R8D,147
            mov EDX,155
            mov ESI,114
            mov EDI,13
            or R12D,4294967168
            call .L_416a00
.L_429146:

            movzx EAX,R12B
            mov QWORD PTR [RBX],R13
            or EAX,R14D
            pop RBX
.L_429151:

            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429160:

            cmp DIL,8
            jbe .L_429230
.L_42916a:

            lea RCX,QWORD PTR [RIP+.L_4298d5]
            mov R8D,157
            mov EDX,123
            mov ESI,114
            mov EDI,13
            call .L_416a00

            pop RBX
            mov EAX,128
            pop RBP
            pop R12
            pop R13
            pop R14
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4291a0:

            xor R9D,R9D
            test R10,R10
            je .L_42916a

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4291b0:

            movzx EDI,BYTE PTR [R11]
            shl R9,7
            add R11,1
            sub R10,1
            mov R12,R9
            test DIL,DIL
            jns .L_429210

            and EDI,127
            or RDI,R12
            cmp RDI,16777215
            mov R9,RDI
            setg R12B
            test R10,R10
            sete DIL
            or R12B,DIL
            je .L_4291b0

            jmp .L_42916a
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4291f0:

            test AL,AL
            mov QWORD PTR [RSI],0
            je .L_42916a

            xor EAX,EAX
            mov R14D,1
            jmp .L_429113
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_429210:

            test R10,R10
            je .L_42916a

            movzx R9D,DIL
            mov EDI,R9D
            or EDI,R12D
            jmp .L_4290cf
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429230:

            cmp R10D,1
            je .L_42916a

            lea RCX,QWORD PTR [R11+RAX*1+1]
            lea EAX,DWORD PTR [R10-2]
            lea RDI,QWORD PTR [R11+RAX*1+2]
            xor EAX,EAX
            nop
            nop
            nop
            nop
            nop
            nop
.L_429250:

            cmp RCX,R13
            je .L_429108

            add R13,1
            movzx EDX,BYTE PTR [R13-1]
            shl RAX,8
            or RAX,RDX
            cmp RDI,R13
            jne .L_429250

            jmp .L_42916a
.L_429273:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429280:

            xor EAX,EAX
            test ESI,ESI
            push RBX
.L_429285:

            setne AL
            mov RBX,QWORD PTR [RDI]
            and R8D,192
            shl EAX,5
            or R8D,EAX
            cmp ECX,30
            lea R9,QWORD PTR [RBX+1]
            jg .L_429310

            and ECX,31
            or R8D,ECX
            cmp ESI,2
            mov BYTE PTR [RBX],R8B
            lea R8,QWORD PTR [R9+1]
            je .L_42937c
.L_4292b7:

            cmp EDX,127
            jle .L_429388

            mov EAX,EDX
            xor ESI,ESI
            jmp .L_4292d3
          .byte 0x66
          .byte 0x2e
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4292d0:

            movsxd RSI,ECX
.L_4292d3:

            sar EAX,8
            lea ECX,DWORD PTR [RSI+1]
            test EAX,EAX
            jne .L_4292d0

            mov EAX,ECX
            or EAX,4294967168
            mov BYTE PTR [R9],AL
            lea RAX,QWORD PTR [R9+RSI*1+1]
            nop
            nop
            nop
            nop
            nop
            nop
.L_4292f0:

            mov BYTE PTR [RAX],DL
            sub RAX,1
            sar EDX,8
            cmp R9,RAX
            jne .L_4292f0

            movsxd RCX,ECX
            add R8,RCX
            mov QWORD PTR [RDI],R8
            pop RBX
.L_429308:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429310:

            or R8D,31
            mov EAX,ECX
            xor R10D,R10D
            mov BYTE PTR [RBX],R8B
            jmp .L_429323
          .byte 0x66
          .byte 0x90
.L_429320:

            mov R10D,R11D
.L_429323:

            sar EAX,7
            lea R11D,DWORD PTR [R10+1]
            test EAX,EAX
            jne .L_429320

            mov R8D,ECX
            movsxd RAX,R10D
            and R8D,127
            mov BYTE PTR [RBX+RAX*1+1],R8B
            lea EAX,DWORD PTR [R10-1]
            cdqe 
            jmp .L_429360
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429348:

            mov R8D,ECX
            and R8D,127
            cmp R10D,EAX
            je .L_429358

            or R8D,4294967168
.L_429358:

            mov BYTE PTR [R9+RAX*1],R8B
            sub RAX,1
.L_429360:

            sar ECX,7
            cmp RAX,-1
            jne .L_429348

            movsxd R11,R11D
            add R9,R11
            cmp ESI,2
            lea R8,QWORD PTR [R9+1]
            jne .L_4292b7
.L_42937c:

            mov BYTE PTR [R9],128
            mov QWORD PTR [RDI],R8
            pop RBX
.L_429384:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x0
.L_429388:

            mov BYTE PTR [R9],DL
            mov QWORD PTR [RDI],R8
            pop RBX
            ret 
.L_429390:

            mov RAX,QWORD PTR [RDI]
            xor EDX,EDX
            mov WORD PTR [RAX],DX
            add RAX,2
            mov QWORD PTR [RDI],RAX
            mov EAX,2
            ret 
.L_4293a5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4293b0:

            cmp EDX,30
            lea EAX,DWORD PTR [RSI+1]
            jg .L_4293d8
.L_4293b8:

            cmp EDI,2
            je .L_4293f0

            add EAX,1
            cmp ESI,127
            jle .L_4293d2

            nop
            nop
            nop
.L_4293c8:

            sar ESI,8
            add EAX,1
            test ESI,ESI
            jne .L_4293c8
.L_4293d2:

            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x40
          .byte 0x0
.L_4293d8:

            sar EDX,7
            add EAX,1
            test EDX,EDX
            je .L_4293b8

            sar EDX,7
            add EAX,1
            test EDX,EDX
            jne .L_4293d8

            jmp .L_4293b8
          .byte 0x66
          .byte 0x90
.L_4293f0:

            add EAX,3
            ret 
.L_4293f4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429400:

            jmp .L_428fd0
.L_429405:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429410:

            jmp .L_428fd0
.L_429415:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429420:

            push R12
            push RBP
            mov RBP,RSI
            push RBX
            mov R8,QWORD PTR [RBP]
            lea RDX,QWORD PTR [RDI+20]
            lea RCX,QWORD PTR [RDI+24]
            lea RSI,QWORD PTR [RDI+32]
            mov RBX,RDI
            mov R12,QWORD PTR [RDI]
            call .L_429090

            mov EDX,EAX
            mov DWORD PTR [RBX+16],EAX
            and EAX,128
            jne .L_4294a0

            cmp DWORD PTR [RBX+20],16
            je .L_429460

            mov DWORD PTR [RBX+12],61
.L_42945b:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_429460:

            add R12,QWORD PTR [RBP]
            mov RCX,QWORD PTR [RBX]
            sub R12,RCX
            cmp QWORD PTR [RBX+40],0
            mov QWORD PTR [RBP],R12
            je .L_42947a

            test R12,R12
            js .L_4294b0
.L_42947a:

            cmp EDX,33
            jne .L_42948d

            mov RAX,QWORD PTR [RBX+56]
            add R12,QWORD PTR [RAX]
            sub R12,RCX
            mov QWORD PTR [RBX+32],R12
.L_42948d:

            mov DWORD PTR [RBX+8],0
            mov EAX,1
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4294a0:

            mov DWORD PTR [RBX+12],60
            xor EAX,EAX
            pop RBX
            pop RBP
            pop R12
            ret 
          .byte 0x66
          .byte 0x90
.L_4294b0:

            mov DWORD PTR [RBX+12],62
            jmp .L_42945b
.L_4294b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4294c0:

            push R13
            push R12
            mov R12,RSI
            push RBP
            push RBX
            movsxd RBX,EDX
            mov RBP,RDI
            sub RSP,8
.L_4294d3:

            test EBX,EBX
            js .L_429578
.L_4294db:

            cmp DWORD PTR [RBP],EBX
            mov R13,QWORD PTR [RBP+8]
            jl .L_429520

            test R13,R13
            je .L_429590
.L_4294ed:

            test R12,R12
            mov DWORD PTR [RBP],EBX
            mov R13D,1
            je .L_429512

            mov RDI,QWORD PTR [RBP+8]
            mov RDX,RBX
            mov RSI,R12
            call memcpy@PLT

            mov RAX,QWORD PTR [RBP+8]
            mov BYTE PTR [RAX+RBX*1],0
.L_429512:

            add RSP,8
.L_429516:

            mov EAX,R13D
            pop RBX
            pop RBP
            pop R12
            pop R13
            ret 
.L_429520:

            test R13,R13
            lea EDI,DWORD PTR [RBX+1]
            je .L_429593

            lea RDX,QWORD PTR [RIP+.L_4298d5]
            mov ESI,EDI
            mov ECX,378
            mov RDI,R13
            call .L_418920

            mov QWORD PTR [RBP+8],RAX
.L_429542:

            test RAX,RAX
            jne .L_4294ed

            lea RCX,QWORD PTR [RIP+.L_4298d5]
            mov R8D,381
            mov EDX,65
            mov ESI,186
            mov EDI,13
            call .L_416a00

            mov QWORD PTR [RBP+8],R13
            xor R13D,R13D
            jmp .L_429512
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429578:

            xor R13D,R13D
            test RSI,RSI
            je .L_429512

            mov RDI,RSI
            call strlen@PLT

            movsxd RBX,EAX
            jmp .L_4294db
.L_429590:

            lea EDI,DWORD PTR [RBX+1]
.L_429593:

            lea RSI,QWORD PTR [RIP+.L_4298d5]
            mov EDX,376
            call .L_418820

            mov QWORD PTR [RBP+8],RAX
            jmp .L_429542
.L_4295aa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4295b0:

            test RSI,RSI
            je .L_429600

            push RBP
            push RBX
            mov RBX,RSI
            mov RBP,RDI
            sub RSP,8
            mov EAX,DWORD PTR [RSI+4]
            mov EDX,DWORD PTR [RBX]
            mov RSI,QWORD PTR [RSI+8]
            mov DWORD PTR [RDI+4],EAX
            call .L_4294c0

            test EAX,EAX
            je .L_4295f0

            mov RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBP+16],RAX
            add RSP,8
            mov EAX,1
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4295f0:

            add RSP,8
            xor EAX,EAX
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429600:

            xor EAX,EAX
            ret 
.L_429603:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429610:

            push R12
            push RBP
            mov R12,RSI
            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            mov EBP,EDX
            test RDI,RDI
            je .L_42962a

            call .L_418aa0
.L_42962a:

            mov QWORD PTR [RBX+8],R12
            mov DWORD PTR [RBX],EBP
            pop RBX
            pop RBP
            pop R12
            ret 
.L_429635:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429640:

            push RBX
            lea RSI,QWORD PTR [RIP+.L_4298d5]
            mov EBX,EDI
            mov EDX,412
            mov EDI,24
            sub RSP,16
            call .L_418820

            test RAX,RAX
            je .L_429688

            mov DWORD PTR [RAX],0
            mov DWORD PTR [RAX+4],EBX
            mov QWORD PTR [RAX+8],0
            mov QWORD PTR [RAX+16],0
.L_42967b:

            add RSP,16
            pop RBX
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_429688:

            lea RCX,QWORD PTR [RIP+.L_4298d5]
            mov R8D,414
            mov EDX,65
            mov ESI,130
            mov EDI,13
            mov QWORD PTR [RSP+8],RAX
            call .L_416a00

            mov RAX,QWORD PTR [RSP+8]
            jmp .L_42967b
.L_4296b5:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4296c0:

            mov EDI,4
            jmp .L_429640
.L_4296ca:

            nop
            nop
            nop
            nop
            nop
            nop
.L_4296d0:

            test RDI,RDI
            je .L_4296f8

            push RBX
            mov RBX,RDI
            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_4296e8

            test BYTE PTR [RBX+16],16
            je .L_429700
.L_4296e8:

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4296f8:

            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429700:

            call .L_418aa0

            mov RDI,RBX
            pop RBX
            jmp .L_418aa0
.L_42970e:

            nop
            nop
.L_429710:

            push RBP
            push RBX
            sub RSP,8
            test RDI,RDI
            je .L_429768

            mov RBX,RDI
            mov EDI,4
            call .L_429640

            test RAX,RAX
            mov RBP,RAX
            je .L_429768

            mov EAX,DWORD PTR [RBX+4]
            mov RSI,QWORD PTR [RBX+8]
            mov RDI,RBP
            mov EDX,DWORD PTR [RBX]
            mov DWORD PTR [RBP+4],EAX
            call .L_4294c0

            test EAX,EAX
            je .L_429760

            mov RAX,QWORD PTR [RBX+16]
            mov QWORD PTR [RBP+16],RAX
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
          .byte 0x66
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_429760:

            mov RDI,RBP
            call .L_4296d0
.L_429768:

            xor EBP,EBP
            add RSP,8
            mov RAX,RBP
            pop RBX
            pop RBP
            ret 
.L_429774:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429780:

            test RDI,RDI
            push RBX
            mov RBX,RDI
            je .L_429798

            mov RDI,QWORD PTR [RDI+8]
            test RDI,RDI
            je .L_429798

            test BYTE PTR [RBX+16],16
            je .L_4297a8
.L_429798:

            mov RDI,RBX
            pop RBX
            jmp .L_4296d0
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_4297a8:

            movsxd RSI,DWORD PTR [RBX]
            call .L_41aa70

            mov RDI,RBX
            pop RBX
            jmp .L_4296d0
.L_4297b9:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4297c0:

            movsxd RDX,DWORD PTR [RDI]
            mov EAX,EDX
            sub EAX,DWORD PTR [RSI]
            jne .L_4297f8

            push RBP
            push RBX
            mov RBP,RDI
            mov RBX,RSI
            sub RSP,8
            mov RSI,QWORD PTR [RSI+8]
            mov RDI,QWORD PTR [RDI+8]
            call memcmp@PLT

            test EAX,EAX
            jne .L_4297ec

            mov EAX,DWORD PTR [RBP+4]
            sub EAX,DWORD PTR [RBX+4]
.L_4297ec:

            add RSP,8
            pop RBX
            pop RBP
            ret 
          .byte 0xf
          .byte 0x1f
          .byte 0x44
          .byte 0x0
          .byte 0x0
.L_4297f8:

            ret 
.L_4297fa:

            nop
            nop
            nop
            nop
            nop
            nop
.L_429800:

            push R12
            push RBP
            lea RDX,QWORD PTR [RIP+.L_4298e0]
            push RBX
            mov RCX,RDI
            mov R12D,ESI
            mov ESI,24
            sub RSP,48
.L_42981a:

            lea RBX,QWORD PTR [RSP+16]
            lea RBP,QWORD PTR [RSP+3]
            mov RAX,QWORD PTR FS:[40]
            mov QWORD PTR [RSP+40],RAX
            xor EAX,EAX
            mov RDI,RBX
            call .L_414fa0

            lea RDX,QWORD PTR [RIP+.L_4298e4]
            mov ECX,R12D
            mov ESI,13
            mov RDI,RBP
            xor EAX,EAX
            call .L_414fa0

            lea RCX,QWORD PTR [RIP+.L_4298e7]
            lea RSI,QWORD PTR [RIP+.L_4298f0]
            xor EAX,EAX
            mov R8,RBP
            mov RDX,RBX
            mov EDI,4
            call .L_417090

            mov RAX,QWORD PTR [RSP+40]
            xor RAX,QWORD PTR FS:[40]
            jne .L_42988e

            add RSP,48
.L_429889:

            pop RBX
            pop RBP
            pop R12
            ret 
.L_42988e:

            call __stack_chk_fail@PLT
.L_429893:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4298a0:

            mov EAX,DWORD PTR [RDI]
            ret 
.L_4298a3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4298b0:

            mov DWORD PTR [RDI],ESI
            ret 
.L_4298b3:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4298c0:

            mov EAX,DWORD PTR [RDI+4]
            ret 
.L_4298c4:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4298d0:

            mov RAX,QWORD PTR [RDI+8]
            ret 
.L_4298d5:
          .string "asn1_lib.c"
.L_4298e0:
          .string "%lu"
.L_4298e4:
          .string "%d"
.L_4298e7:
          .string " offset="
# WARNING: found overlapping blocks at address 2968d
# WARNING: found overlapping blocks at address 2968f
.L_4298f0:
          .string "address="
          .byte 0xf
          .byte 0x1f
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x41
          .byte 0x53
          .byte 0x4e
          .byte 0x2e
          .byte 0x31
          .byte 0x20
          .byte 0x70
          .byte 0x61
          .byte 0x72
          .byte 0x74
          .byte 0x20
          .byte 0x6f
          .byte 0x66
          .byte 0x20
          .byte 0x4f
          .byte 0x70
          .byte 0x65
          .byte 0x6e
          .byte 0x53
          .byte 0x53
          .byte 0x4c
          .byte 0x20
          .byte 0x31
          .byte 0x2e
          .byte 0x30
          .byte 0x2e
          .byte 0x32
          .byte 0x64
          .byte 0x20
          .byte 0x39
          .byte 0x20
          .byte 0x4a
          .byte 0x75
          .byte 0x6c
          .byte 0x20
          .byte 0x32
          .byte 0x30
          .byte 0x31
          .byte 0x35
          .byte 0x0
          .byte 0xf
          .byte 0x1f
          .byte 0x84
          .byte 0x0
.L_42992c:

            add BYTE PTR [RAX],AL
            add BYTE PTR [RAX],AL
.L_429930:

            push R15
            push R14
            mov R15,RDX
            push R13
            push R12
            lea R12,QWORD PTR [RIP+.L_62f650]
            push RBP
            lea RBP,QWORD PTR [RIP+.L_62f658]
            push RBX
            mov R13D,EDI
            mov R14,RSI
            sub RBP,R12
            sub RSP,8
            sar RBP,3
            call 3424

            test RBP,RBP
            je .L_429986

            xor EBX,EBX
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_429970:

            mov RDX,R15
            mov RSI,R14
            mov EDI,R13D
            call QWORD PTR [R12+RBX*8]

            add RBX,1
            cmp RBP,RBX
            jne .L_429970
.L_429986:

            add RSP,8
            pop RBX
            pop RBP
            pop R12
            pop R13
            pop R14
            pop R15
            ret 
.L_429995:

            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
            nop
.L_4299a0:

            ret 
.L_4299a2:
#===================================
# end section .text
#===================================

#===================================
.section .rodata ,"a",@progbits
.align 16
#===================================

          .byte 0x1
          .byte 0x0
          .byte 0x2
          .byte 0x0
.L_4299c4:
          .string "\n%s:\n"
.L_4299ca:
          .string "b: %s\n"
.L_4299d1:
          .string "c: %s\n"
.L_4299d8:
          .byte 0x62
          .byte 0x5e
          .byte 0x63
          .byte 0x20
          .byte 0x6d
          .byte 0x6f
          .byte 0x64
          .byte 0x20
.L_4299e0:
          .string "a: %s\n"
.L_4299e7:
          .byte 0x30
.L_4299e8:
          .byte 0x30
          .byte 0x0
.L_4299ea:
          .string "openssl"
.L_4299f2:
          .string "libgcrypt"
.L_4299fc:
          .string "target.cc"
.L_429a06:
          .string "l1+l2+l3==len-2"
.L_429a16:
          .string "rb"
.L_429a19:
          .string "malloc error!"
.L_429a27:
          .string "read error!"
          .zero 13
.L_429a40:
          .string "int LLVMFuzzerTestOneInput(const unsigned char*, size_t)"
#===================================
# end section .rodata
#===================================

#===================================
.section .init_array ,"wa"
.align 8
#===================================

.L_62f650:
          .quad .L_401460
#===================================
# end section .init_array
#===================================

#===================================
.section .fini_array ,"wa"
.align 8
#===================================

.L_62f658:
#===================================
# end section .fini_array
#===================================

#===================================
.section .data.rel.ro ,"wa",@progbits
.align 16
#===================================

.L_62f660:
          .quad .L_405220
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_62f680:
          .quad .L_415970
          .quad .L_415860
          .quad .L_415d80
          .quad .L_415c10
          .quad .L_415aa0
          .quad .L_4158c0
          .quad .L_415f80
          .quad .L_415cb0
          .quad .L_415b30
          .quad .L_415e70
          .quad .L_415810
          .zero 8
.L_62f6e0:
          .quad .L_4181c1
          .quad .L_4181cb
          .quad .L_4181cf
          .quad .L_4181d7
          .quad .L_4181dc
          .quad .L_4181e6
          .quad .L_4181f0
          .quad .L_4181f9
          .quad .L_418202
          .quad .L_418206
          .quad .L_41820a
          .quad .L_418213
          .quad .L_41821e
          .quad .L_418226
          .quad .L_41822f
          .quad .L_41823b
          .quad .L_418249
          .quad .L_41824d
          .quad .L_418258
          .quad .L_41825d
          .quad .L_418263
          .quad .L_418270
          .quad .L_418274
          .quad .L_418282
          .quad .L_418290
          .quad .L_418298
          .quad .L_4182a5
          .quad .L_4182a8
          .quad .L_4182b6
          .quad .L_4182ba
          .quad .L_4182c2
          .quad .L_4182c9
          .byte 0xcc
          .byte 0x82
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4182d2
          .quad .L_4182d5
          .quad .L_4182da
          .quad .L_4182dd
          .quad .L_4182e9
          .quad .L_4182ef
          .quad .L_4182f4
          .quad .L_4182f9
          .zero 24
.L_62f840:
          .quad .L_41eb1e
          .quad .L_41eb24
          .zero 24
          .quad .L_41eb2e
          .quad .L_41eb35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425dc0
          .zero 8
          .quad .L_41eb4d
          .quad .L_41eb52
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425dc6
          .zero 8
          .quad .L_41eb6f
          .quad .L_41eb73
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425dcd
          .zero 8
          .quad .L_41eb77
          .quad .L_41eb7b
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425dd5
          .zero 8
          .quad .L_41eb7f
          .quad .L_41eb83
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ddd
          .zero 8
          .quad .L_41eb87
          .quad .L_41eb87
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425de5
          .zero 8
          .quad .L_41eb95
          .quad .L_41eb9d
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425dee
          .zero 8
          .quad .L_41ebb2
          .quad .L_41ebba
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425df7
          .zero 8
          .quad .L_41ebcf
          .quad .L_41ebdb
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e00
          .zero 8
          .quad .L_41ebf0
          .quad .L_41ebfc
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e09
          .zero 8
          .quad .L_41ec11
          .quad .L_41ec16
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e12
          .zero 8
          .quad .L_41ec31
          .quad .L_41ec31
          .byte 0xc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e13
          .zero 8
          .quad .L_41ec36
          .quad .L_41ec39
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e15
          .zero 8
          .quad .L_41ec44
          .quad .L_41ec46
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e18
          .zero 8
          .quad .L_41ec52
          .quad .L_41ec54
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e1b
          .zero 8
          .quad .L_41ec61
          .quad .L_41ec64
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e1e
          .zero 8
          .quad .L_41ec78
          .quad .L_41ec7a
          .byte 0x11
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e21
          .zero 8
          .quad .L_41ec8b
          .quad .L_41ec8e
          .byte 0x12
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e24
          .zero 8
          .quad .L_41eca5
          .quad .L_41eca9
          .byte 0x13
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e27
          .zero 8
          .quad .L_41ecad
          .quad .L_41ecad
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e2b
          .zero 8
          .quad .L_41ecb3
          .quad .L_41ecb3
          .byte 0x15
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e33
          .zero 8
          .quad .L_41ecbe
          .quad .L_41ecbe
          .byte 0x16
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e3c
          .zero 8
          .quad .L_41eccf
          .quad .L_41eccf
          .byte 0x17
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e45
          .zero 8
          .quad .L_41ece3
          .quad .L_41ece3
          .byte 0x18
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e4e
          .zero 8
          .quad .L_41ed00
          .quad .L_41ed00
          .byte 0x19
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e57
          .zero 8
          .quad .L_41ed11
          .quad .L_41ed11
          .byte 0x1a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e60
          .zero 8
          .quad .L_41ed25
          .quad .L_41ed25
          .byte 0x1b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e69
          .zero 8
          .quad .L_41ed2b
          .quad .L_41ed2b
          .byte 0x1c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e71
          .zero 8
          .quad .L_41ed3a
          .quad .L_41ed42
          .byte 0x1d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e7a
          .zero 8
          .quad .L_41ed4a
          .quad .L_41ed52
          .byte 0x1e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e7f
          .zero 8
          .quad .L_41ed5a
          .quad .L_41ed62
          .byte 0x1f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e84
          .zero 8
          .quad .L_41ed6a
          .quad .L_41ed72
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e89
          .zero 8
          .quad .L_41ed7a
          .quad .L_41ed83
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41ed8c
          .quad .L_41ed95
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e8e
          .zero 8
          .quad .L_41ed9e
          .quad .L_41eda7
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41edb0
          .quad .L_41edb9
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41edc2
          .quad .L_41edca
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425e99
          .zero 8
          .quad .L_41edd2
          .quad .L_41edda
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41ede2
          .quad .L_41edea
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41edf2
          .quad .L_41edfa
          .byte 0x28
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41ee02
          .quad .L_41ee06
          .byte 0x29
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ea1
          .zero 8
          .quad .L_41ee0a
          .quad .L_41ee12
          .byte 0x2a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ea6
          .zero 8
          .quad .L_41ee27
          .quad .L_41ee33
          .byte 0x2b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41ee3f
          .quad .L_41ee4c
          .byte 0x2c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425eab
          .zero 8
          .quad .L_41ee59
          .quad .L_41ee61
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425eb3
          .zero 8
          .quad .L_41ee69
          .quad .L_41ee72
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41ee7b
          .quad .L_41ee7b
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425eb8
          .zero 8
          .quad .L_41ee81
          .quad .L_41ee81
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ec0
          .zero 8
          .quad .L_41ee8e
          .quad .L_41ee8e
          .byte 0x31
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ec9
          .zero 8
          .quad .L_41ee9f
          .quad .L_41ee9f
          .byte 0x32
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ed2
          .zero 8
          .quad .L_41eeab
          .quad .L_41eeab
          .byte 0x33
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425edb
          .zero 8
          .quad .L_41eeb9
          .quad .L_41eeb9
          .byte 0x34
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ee4
          .zero 8
          .quad .L_41eec5
          .quad .L_41eec5
          .byte 0x35
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425eed
          .zero 8
          .quad .L_41eed6
          .quad .L_41eed6
          .byte 0x36
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ef6
          .zero 8
          .quad .L_41eee8
          .quad .L_41eee8
          .byte 0x37
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425eff
          .zero 8
          .quad .L_41eefc
          .quad .L_41eefc
          .byte 0x38
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f08
          .zero 8
          .quad .L_41ef1a
          .quad .L_41ef23
          .byte 0x39
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f11
          .zero 8
          .quad .L_41ef41
          .quad .L_427630
          .byte 0x3a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f18
          .zero 8
          .quad .L_41ef4b
          .quad .L_41ef56
          .byte 0x3b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f20
          .zero 8
          .quad .L_41ef69
          .quad .L_41ef75
          .byte 0x3c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41ef81
          .quad .L_41ef8e
          .byte 0x3d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41ef9b
          .quad .L_41efa7
          .byte 0x3e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41efb3
          .quad .L_41efc0
          .byte 0x3f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41efcd
          .quad .L_41efd2
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f28
          .zero 8
          .quad .L_41efd7
          .quad .L_41efe0
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f2d
          .zero 8
          .quad .L_41eff6
          .quad .L_41effe
          .byte 0x42
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f36
          .zero 8
          .quad .L_41f009
          .quad .L_41f011
          .byte 0x43
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f3b
          .zero 8
          .quad .L_41f023
          .quad .L_41f033
          .byte 0x44
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f40
          .zero 8
          .quad .L_41f049
          .quad .L_41f049
          .byte 0x45
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f49
          .zero 8
          .quad .L_41f050
          .quad .L_41f05d
          .byte 0x46
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f52
          .zero 8
          .quad .L_41f06d
          .quad .L_41f078
          .byte 0x47
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f57
          .zero 8
          .quad .L_41f08b
          .quad .L_41f095
          .byte 0x48
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f60
          .zero 8
          .quad .L_41f0a7
          .quad .L_41f0b7
          .byte 0x49
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f69
          .zero 8
          .quad .L_41f0cf
          .quad .L_41f0e1
          .byte 0x4a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f72
          .zero 8
          .quad .L_41f0fc
          .quad .L_41f109
          .byte 0x4b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f7b
          .zero 8
          .quad .L_41f11e
          .quad .L_41f12c
          .byte 0x4c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f84
          .zero 8
          .quad .L_41f143
          .quad .L_41f153
          .byte 0x4d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f8d
          .zero 8
          .quad .L_41f16c
          .quad .L_41f176
          .byte 0x4e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f96
          .zero 8
          .quad .L_41f187
          .quad .L_41f196
          .byte 0x4f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425f9f
          .zero 8
          .quad .L_41f1b4
          .quad .L_41f1bd
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f1c6
          .quad .L_41f1c6
          .byte 0x51
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fa8
          .zero 8
          .quad .L_41f1cc
          .quad .L_41f1e1
          .byte 0x52
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425faa
          .zero 8
          .quad .L_41f1ff
          .quad .L_41f208
          .byte 0x53
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fad
          .zero 8
          .quad .L_41f219
          .quad .L_427650
          .byte 0x54
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fb0
          .zero 8
          .quad .L_41f22f
          .quad .L_427670
          .byte 0x55
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fb3
          .zero 8
          .quad .L_41f23e
          .quad .L_427690
          .byte 0x56
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fb6
          .zero 8
          .quad .L_41f24c
          .quad .L_41f25d
          .byte 0x57
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fb9
          .zero 8
          .quad .L_41f276
          .quad .L_41f280
          .byte 0x58
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fbc
          .zero 8
          .quad .L_41f292
          .quad .L_41f2a6
          .byte 0x59
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fbf
          .zero 8
          .quad .L_41f2c2
          .quad .L_4276b0
          .byte 0x5a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fc2
          .zero 8
          .quad .L_41f2d9
          .quad .L_41f2e0
          .byte 0x5b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fc5
          .zero 8
          .quad .L_41f2e7
          .quad .L_41f2ee
          .byte 0x5c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f2f5
          .quad .L_41f2fc
          .byte 0x5d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f303
          .quad .L_41f30a
          .byte 0x5e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f311
          .quad .L_41f316
          .byte 0x5f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fce
          .zero 8
          .quad .L_41f31b
          .quad .L_41f324
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fd2
          .zero 8
          .quad .L_41f330
          .quad .L_41f337
          .byte 0x61
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f33e
          .quad .L_41f349
          .byte 0x62
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f354
          .quad .L_41f357
          .byte 0x63
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fd6
          .zero 8
          .quad .L_41f361
          .quad .L_41f364
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fd9
          .zero 8
          .quad .L_41f36c
          .quad .L_41f36c
          .byte 0x65
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fdc
          .zero 48
          .quad .L_41f375
          .quad .L_4276d0
          .byte 0x67
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fdf
          .zero 8
          .quad .L_41f38b
          .quad .L_41f396
          .byte 0x68
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fe2
          .zero 8
          .quad .L_41f3a1
          .quad .L_41f3a1
          .byte 0x69
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fe7
          .zero 8
          .quad .L_41f3ae
          .quad .L_41f3ae
          .byte 0x6a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fea
          .zero 8
          .quad .L_41f3b4
          .quad .L_41f3b4
          .byte 0x6b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425fed
          .zero 8
          .quad .L_41f3c0
          .quad .L_41f3ca
          .byte 0x6c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ff0
          .zero 8
          .quad .L_41f3d4
          .quad .L_41f3de
          .byte 0x6d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f3e8
          .quad .L_41f3f2
          .byte 0x6e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f3fc
          .quad .L_41f406
          .byte 0x6f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f410
          .quad .L_41f410
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_425ff9
          .zero 8
          .quad .L_41f426
          .quad .L_41f42f
          .byte 0x71
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426002
          .zero 8
          .quad .L_41f43b
          .quad .L_41f444
          .byte 0x72
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f44d
          .quad .L_41f458
          .byte 0x73
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426009
          .zero 8
          .quad .L_41f464
          .quad .L_41f468
          .byte 0x74
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42600e
          .zero 8
          .quad .L_41f476
          .quad .L_41f480
          .byte 0x75
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426015
          .zero 48
          .quad .L_41f48a
          .quad .L_41f498
          .byte 0x77
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42601a
          .zero 8
          .quad .L_41f4a9
          .quad .L_41f4b1
          .byte 0x78
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426020
          .zero 8
          .quad .L_41f4b9
          .quad .L_41f4c1
          .byte 0x79
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f4c9
          .quad .L_41f4d1
          .byte 0x7a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f4d9
          .quad .L_41f4e1
          .byte 0x7b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f4e9
          .quad .L_41f4ed
          .byte 0x7c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426028
          .zero 8
          .quad .L_41f504
          .quad .L_41f509
          .byte 0x7d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42602e
          .zero 8
          .quad .L_41f51a
          .quad .L_41f52b
          .byte 0x7e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426039
          .zero 8
          .quad .L_41f545
          .quad .L_41f545
          .byte 0x7f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42603c
          .zero 8
          .quad .L_41f54a
          .quad .L_41f54a
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426042
          .zero 8
          .quad .L_41f550
          .quad .L_41f55b
          .byte 0x81
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426049
          .zero 8
          .quad .L_41f579
          .quad .L_41f584
          .byte 0x82
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426051
          .zero 8
          .quad .L_41f5a2
          .quad .L_41f5ae
          .byte 0x83
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426059
          .zero 8
          .quad .L_41f5bb
          .quad .L_41f5cb
          .byte 0x84
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426061
          .zero 8
          .quad .L_41f5dd
          .quad .L_41f5ea
          .byte 0x85
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426069
          .zero 8
          .quad .L_41f5f8
          .quad .L_4276f0
          .byte 0x86
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426071
          .zero 8
          .quad .L_41f602
          .quad .L_427718
          .byte 0x87
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42607b
          .zero 8
          .quad .L_41f60c
          .quad .L_41f616
          .byte 0x88
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426085
          .zero 8
          .quad .L_41f633
          .quad .L_41f639
          .byte 0x89
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42608f
          .zero 8
          .quad .L_41f657
          .quad .L_427740
          .byte 0x8a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426099
          .zero 8
          .quad .L_41f65d
          .quad .L_41f663
          .byte 0x8b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260a3
          .zero 8
          .quad .L_41f680
          .quad .L_41f689
          .byte 0x8c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260ac
          .zero 8
          .quad .L_41f6a4
          .quad .L_41f6ae
          .byte 0x8d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260af
          .zero 8
          .quad .L_41f6c5
          .quad .L_41f6d4
          .byte 0x8e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260b2
          .zero 8
          .quad .L_41f6e4
          .quad .L_41f6ec
          .byte 0x8f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260b5
          .zero 8
          .quad .L_41f6ff
          .quad .L_41f710
          .byte 0x90
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260ba
          .zero 8
          .quad .L_41f728
          .quad .L_41f738
          .byte 0x91
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260c4
          .zero 8
          .quad .L_41f74f
          .quad .L_427760
          .byte 0x92
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260ce
          .zero 8
          .quad .L_41f75d
          .quad .L_427788
          .byte 0x93
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260d8
          .zero 8
          .quad .L_41f76b
          .quad .L_41f77c
          .byte 0x94
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260e2
          .zero 8
          .quad .L_41f798
          .quad .L_41f7a8
          .byte 0x95
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260ec
          .zero 8
          .quad .L_41f7c3
          .quad .L_41f7c3
          .byte 0x96
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4260f6
          .zero 8
          .quad .L_41f7ca
          .quad .L_41f7ca
          .byte 0x97
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426101
          .zero 8
          .quad .L_41f7de
          .quad .L_41f7de
          .byte 0x98
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42610c
          .zero 8
          .quad .L_41f7e6
          .quad .L_41f7e6
          .byte 0x99
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426117
          .zero 8
          .quad .L_41f7ed
          .quad .L_41f7ed
          .byte 0x9a
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426122
          .zero 8
          .quad .L_41f7f7
          .quad .L_41f7f7
          .byte 0x9b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42612d
          .zero 8
          .quad .L_41f807
          .quad .L_41f807
          .byte 0x9c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426138
          .zero 8
          .quad .L_41f814
          .quad .L_41f814
          .byte 0x9d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426141
          .zero 8
          .quad .L_41f81f
          .quad .L_41f81f
          .byte 0x9e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42614a
          .zero 8
          .quad .L_41f82f
          .quad .L_41f82f
          .byte 0x9f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426154
          .zero 8
          .quad .L_41f83f
          .quad .L_41f83f
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42615e
          .zero 8
          .quad .L_41f847
          .quad .L_41f847
          .byte 0xa1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426168
          .zero 8
          .quad .L_41f84d
          .quad .L_41f84d
          .byte 0xa2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426171
          .zero 8
          .quad .L_41f854
          .quad .L_41f854
          .byte 0xa3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42617a
          .zero 8
          .quad .L_41f861
          .quad .L_41f86b
          .byte 0xa4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426182
          .zero 8
          .quad .L_41f880
          .quad .L_41f88e
          .byte 0xa5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42618a
          .zero 8
          .quad .L_41f8ab
          .quad .L_41f8b6
          .byte 0xa6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41f8c1
          .quad .L_41f8cc
          .byte 0xa7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426192
          .zero 8
          .quad .L_41f8e0
          .quad .L_41f8ef
          .byte 0xa8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42619b
          .zero 8
          .quad .L_41f904
          .quad .L_41f913
          .byte 0xa9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261a4
          .zero 8
          .quad .L_41f928
          .quad .L_41f935
          .byte 0xaa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261ad
          .zero 8
          .quad .L_41f94b
          .quad .L_41f954
          .byte 0xab
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261b6
          .zero 8
          .quad .L_41f970
          .quad .L_41f977
          .byte 0xac
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261c0
          .zero 8
          .quad .L_41f989
          .quad .L_41f989
          .byte 0xad
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261c9
          .zero 8
          .quad .L_41f98e
          .quad .L_41f98e
          .byte 0xae
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261cc
          .zero 8
          .quad .L_41f99a
          .quad .L_41f99a
          .byte 0xaf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261cf
          .zero 8
          .quad .L_41f9a0
          .quad .L_41f9a0
          .byte 0xb0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261d6
          .zero 8
          .quad .L_41f9a6
          .quad .L_41f9ba
          .byte 0xb1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261dd
          .zero 8
          .quad .L_41f9d7
          .quad .L_41f9d7
          .byte 0xb2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261e5
          .zero 8
          .quad .L_41f9dc
          .quad .L_41f9e6
          .byte 0xb3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261ed
          .zero 8
          .quad .L_41f9f1
          .quad .L_41f9fd
          .byte 0xb4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261f5
          .zero 8
          .quad .L_41fa0a
          .quad .L_41fa0e
          .byte 0xb5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41fa12
          .quad .L_41fa1e
          .byte 0xb6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261fd
          .zero 8
          .quad .L_41fa2e
          .quad .L_41fa35
          .byte 0xb7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4261fe
          .zero 8
          .quad .L_41fa48
          .quad .L_41fa4e
          .byte 0xb8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426201
          .zero 8
          .quad .L_41fa54
          .quad .L_41fa59
          .byte 0xb9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426206
          .zero 8
          .quad .L_41fa64
          .quad .L_41fa64
          .byte 0xba
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42620c
          .zero 8
          .quad .L_41fa6a
          .quad .L_41fa6a
          .byte 0xbb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426214
          .zero 8
          .quad .L_41fa70
          .quad .L_41fa76
          .byte 0xbc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42621c
          .zero 8
          .quad .L_41fa7d
          .quad .L_41fa7d
          .byte 0xbd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426225
          .zero 8
          .quad .L_41fa8a
          .quad .L_41fa8a
          .byte 0xbe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42622f
          .zero 8
          .quad .L_41fa96
          .quad .L_41fa96
          .byte 0xbf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426239
          .zero 8
          .quad .L_41faa2
          .quad .L_41faa2
          .byte 0xc0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426243
          .zero 8
          .quad .L_41faaf
          .quad .L_41faaf
          .byte 0xc1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42624d
          .zero 8
          .quad .L_41fabb
          .quad .L_41fabb
          .byte 0xc2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426257
          .zero 8
          .quad .L_41fac8
          .quad .L_41fac8
          .byte 0xc3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426261
          .zero 8
          .quad .L_41fad5
          .quad .L_41fad5
          .byte 0xc4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42626b
          .zero 8
          .quad .L_41fae6
          .quad .L_41fae6
          .byte 0xc5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426276
          .zero 8
          .quad .L_41faf7
          .quad .L_41faf7
          .byte 0xc6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426281
          .zero 8
          .quad .L_41fb08
          .quad .L_41fb08
          .byte 0xc7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42628c
          .zero 8
          .quad .L_4277b0
          .quad .L_4277b0
          .byte 0xc8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426297
          .zero 8
          .quad .L_4277d0
          .quad .L_4277d0
          .byte 0xc9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4262a2
          .zero 8
          .quad .L_4277f0
          .quad .L_4277f0
          .byte 0xca
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4262ad
          .zero 8
          .quad .L_427810
          .quad .L_427810
          .byte 0xcb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4262b8
          .zero 8
          .quad .L_41fb1c
          .quad .L_41fb1c
          .byte 0xcc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4262c3
          .zero 8
          .quad .L_41fb30
          .quad .L_41fb30
          .byte 0xcd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4262ce
          .zero 8
          .quad .L_41fb45
          .quad .L_41fb45
          .byte 0xce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4262d9
          .zero 8
          .quad .L_41fb5d
          .quad .L_41fb5d
          .byte 0xcf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4262e4
          .zero 8
          .quad .L_41fb71
          .quad .L_41fb71
          .byte 0xd0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4262ef
          .zero 8
          .quad .L_41fb85
          .quad .L_41fb85
          .byte 0xd1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4262fa
          .zero 8
          .quad .L_41fb9d
          .quad .L_41fb9d
          .byte 0xd2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426305
          .zero 8
          .quad .L_41fbb9
          .quad .L_41fbb9
          .byte 0xd3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426310
          .zero 8
          .quad .L_41fbd6
          .quad .L_41fbd6
          .byte 0xd4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42631b
          .zero 8
          .quad .L_41fbf1
          .quad .L_41fbf1
          .byte 0xd5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426326
          .zero 8
          .quad .L_41fc0b
          .quad .L_41fc0b
          .byte 0xd6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426331
          .zero 8
          .quad .L_41fc27
          .quad .L_41fc27
          .byte 0xd7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42633c
          .zero 8
          .quad .L_41fc3f
          .quad .L_41fc3f
          .byte 0xd8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426347
          .zero 8
          .quad .L_41fc58
          .quad .L_41fc58
          .byte 0xd9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426352
          .zero 8
          .quad .L_41fc75
          .quad .L_41fc75
          .byte 0xda
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42635d
          .zero 8
          .quad .L_41fc93
          .quad .L_41fc93
          .byte 0xdb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426368
          .zero 8
          .quad .L_41fca8
          .quad .L_41fca8
          .byte 0xdc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426373
          .zero 8
          .quad .L_41fcc5
          .quad .L_41fcc5
          .byte 0xdd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42637e
          .zero 8
          .quad .L_41fce2
          .quad .L_41fce2
          .byte 0xde
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426389
          .zero 8
          .quad .L_427830
          .quad .L_427830
          .byte 0xdf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426394
          .zero 8
          .quad .L_41fcfc
          .quad .L_41fcfc
          .byte 0xe0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42639f
          .zero 8
          .quad .L_41fd1a
          .quad .L_41fd1a
          .byte 0xe1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4263aa
          .zero 8
          .quad .L_41fd35
          .quad .L_41fd35
          .byte 0xe2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4263b5
          .zero 8
          .quad .L_427850
          .quad .L_427850
          .byte 0xe3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4263c0
          .zero 8
          .quad .L_427870
          .quad .L_427870
          .byte 0xe4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4263cb
          .zero 8
          .quad .L_41fd51
          .quad .L_41fd51
          .byte 0xe5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4263d6
          .zero 8
          .quad .L_41fd6c
          .quad .L_41fd6c
          .byte 0xe6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4263e1
          .zero 8
          .quad .L_427890
          .quad .L_427890
          .byte 0xe7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4263ec
          .zero 8
          .quad .L_4278b8
          .quad .L_4278b8
          .byte 0xe8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4263f7
          .zero 8
          .quad .L_4278d8
          .quad .L_4278d8
          .byte 0xe9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426402
          .zero 8
          .quad .L_41fd89
          .quad .L_41fd89
          .byte 0xea
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42640d
          .zero 8
          .quad .L_4278f8
          .quad .L_4278f8
          .byte 0xeb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426418
          .zero 8
          .quad .L_41fda4
          .quad .L_41fda4
          .byte 0xec
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426423
          .zero 8
          .quad .L_427920
          .quad .L_427920
          .byte 0xed
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42642e
          .zero 8
          .quad .L_427948
          .quad .L_427948
          .byte 0xee
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426439
          .zero 8
          .quad .L_41fdc1
          .quad .L_41fdc1
          .byte 0xef
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426444
          .zero 8
          .quad .L_41fddb
          .quad .L_41fddb
          .byte 0xf0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42644f
          .zero 8
          .quad .L_41fdf0
          .quad .L_41fdf0
          .byte 0xf1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42645a
          .zero 8
          .quad .L_41fe0a
          .quad .L_41fe0a
          .byte 0xf2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426465
          .zero 8
          .quad .L_41fe23
          .quad .L_41fe23
          .byte 0xf3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426470
          .zero 8
          .quad .L_41fe39
          .quad .L_41fe39
          .byte 0xf4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42647b
          .zero 8
          .quad .L_41fe4e
          .quad .L_41fe4e
          .byte 0xf5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426486
          .zero 8
          .quad .L_41fe60
          .quad .L_41fe60
          .byte 0xf6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426491
          .zero 8
          .quad .L_41fe79
          .quad .L_41fe79
          .byte 0xf7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42649c
          .zero 8
          .quad .L_41fe91
          .quad .L_41fe91
          .byte 0xf8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4264a7
          .zero 8
          .quad .L_41fea2
          .quad .L_41fea2
          .byte 0xf9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4264b2
          .zero 8
          .quad .L_41febb
          .quad .L_41febb
          .byte 0xfa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4264bd
          .zero 8
          .quad .L_427970
          .quad .L_427970
          .byte 0xfb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4264c8
          .zero 8
          .quad .L_427990
          .quad .L_427990
          .byte 0xfc
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4264d3
          .zero 8
          .quad .L_4279b0
          .quad .L_4279b0
          .byte 0xfd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4264de
          .zero 8
          .quad .L_4279d8
          .quad .L_4279d8
          .byte 0xfe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4264e9
          .zero 8
          .quad .L_4279f8
          .quad .L_4279f8
          .byte 0xff
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4264f4
          .zero 8
          .quad .L_427a20
          .quad .L_427a20
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4264ff
          .zero 8
          .quad .L_41fed8
          .quad .L_41fedc
          .byte 0x1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42650a
          .zero 8
          .quad .L_41fee0
          .quad .L_41fee0
          .byte 0x2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426512
          .zero 8
          .quad .L_41feec
          .quad .L_41feec
          .byte 0x3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426519
          .zero 8
          .quad .L_41fef2
          .quad .L_41fef2
          .byte 0x4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426520
          .zero 8
          .quad .L_41fef8
          .quad .L_41fef8
          .byte 0x5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426527
          .zero 8
          .quad .L_41ff00
          .quad .L_41ff00
          .byte 0x6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42652e
          .zero 8
          .quad .L_41ff07
          .quad .L_41ff07
          .byte 0x7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426535
          .zero 8
          .quad .L_41ff0e
          .quad .L_41ff0e
          .byte 0x8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42653c
          .zero 8
          .quad .L_41ff14
          .quad .L_41ff14
          .byte 0x9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426543
          .zero 8
          .quad .L_41ff1b
          .quad .L_41ff1b
          .byte 0xa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42654a
          .zero 8
          .quad .L_41ff22
          .quad .L_41ff22
          .byte 0xb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426551
          .zero 8
          .quad .L_41ff29
          .quad .L_41ff29
          .byte 0xc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426558
          .zero 8
          .quad .L_41ff30
          .quad .L_41ff30
          .byte 0xd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42655f
          .zero 8
          .quad .L_41ff45
          .quad .L_41ff45
          .byte 0xe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426567
          .zero 8
          .quad .L_41ff5a
          .quad .L_41ff5a
          .byte 0xf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42656f
          .zero 8
          .quad .L_41ff6f
          .quad .L_41ff6f
          .byte 0x10
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426577
          .zero 8
          .quad .L_41ff84
          .quad .L_41ff84
          .byte 0x11
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42657f
          .zero 8
          .quad .L_41ff90
          .quad .L_41ff90
          .byte 0x12
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426587
          .zero 8
          .quad .L_41ff9b
          .quad .L_41ff9b
          .byte 0x13
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42658f
          .zero 8
          .quad .L_41ffb1
          .quad .L_41ffb1
          .byte 0x14
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426597
          .zero 8
          .quad .L_41ffc7
          .quad .L_41ffc7
          .byte 0x15
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42659f
          .zero 8
          .quad .L_41ffd2
          .quad .L_41ffd2
          .byte 0x16
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265a7
          .zero 8
          .quad .L_41ffeb
          .quad .L_41ffeb
          .byte 0x17
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265af
          .zero 8
          .quad .L_420004
          .quad .L_420004
          .byte 0x18
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265b7
          .zero 8
          .quad .L_42001a
          .quad .L_42001a
          .byte 0x19
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265bf
          .zero 8
          .quad .L_420034
          .quad .L_420034
          .byte 0x1a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265c7
          .zero 8
          .quad .L_420040
          .quad .L_420040
          .byte 0x1b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265cf
          .zero 8
          .quad .L_42004c
          .quad .L_42004c
          .byte 0x1c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265d7
          .zero 8
          .quad .L_42005b
          .quad .L_420069
          .byte 0x1d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265df
          .zero 8
          .quad .L_420078
          .quad .L_420078
          .byte 0x1e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265e7
          .zero 8
          .quad .L_420085
          .quad .L_420085
          .byte 0x1f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265ef
          .zero 8
          .quad .L_420094
          .quad .L_420094
          .byte 0x20
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265f7
          .zero 8
          .quad .L_4200a1
          .quad .L_4200a1
          .byte 0x21
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4265ff
          .zero 8
          .quad .L_4200ac
          .quad .L_4200ac
          .byte 0x22
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426607
          .zero 8
          .quad .L_4200bd
          .quad .L_4200bd
          .byte 0x23
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42660f
          .zero 8
          .quad .L_4200d3
          .quad .L_4200d3
          .byte 0x24
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426617
          .zero 8
          .quad .L_4200e9
          .quad .L_4200e9
          .byte 0x25
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42661f
          .zero 8
          .quad .L_4200f4
          .quad .L_420103
          .byte 0x26
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426627
          .zero 8
          .quad .L_420114
          .quad .L_420120
          .byte 0x27
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42662f
          .zero 8
          .quad .L_42012d
          .quad .L_420137
          .byte 0x28
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426637
          .zero 8
          .quad .L_420142
          .quad .L_420147
          .byte 0x29
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42663f
          .zero 8
          .quad .L_42014c
          .quad .L_42014c
          .byte 0x2a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426647
          .zero 8
          .quad .L_420160
          .quad .L_420160
          .byte 0x2b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42664f
          .zero 8
          .quad .L_420177
          .quad .L_420177
          .byte 0x2c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426657
          .zero 8
          .quad .L_42018d
          .quad .L_42018d
          .byte 0x2d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42665f
          .zero 8
          .quad .L_4201a4
          .quad .L_4201a4
          .byte 0x2e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426667
          .zero 8
          .quad .L_4201ba
          .quad .L_4201ba
          .byte 0x2f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42666f
          .zero 8
          .quad .L_4201cb
          .quad .L_4201cb
          .byte 0x30
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426677
          .zero 8
          .quad .L_4201e1
          .quad .L_4201e1
          .byte 0x31
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42667f
          .zero 8
          .quad .L_4201fb
          .quad .L_4201fb
          .byte 0x32
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426687
          .zero 8
          .quad .L_420216
          .quad .L_420216
          .byte 0x33
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42668f
          .zero 8
          .quad .L_42022c
          .quad .L_42022c
          .byte 0x34
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426697
          .zero 8
          .quad .L_420242
          .quad .L_420242
          .byte 0x35
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42669f
          .zero 8
          .quad .L_420256
          .quad .L_420256
          .byte 0x36
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266a7
          .zero 8
          .quad .L_42026c
          .quad .L_42026c
          .byte 0x37
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266af
          .zero 8
          .quad .L_420282
          .quad .L_420282
          .byte 0x38
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266b7
          .zero 8
          .quad .L_420297
          .quad .L_420297
          .byte 0x39
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266bf
          .zero 8
          .quad .L_4202a2
          .quad .L_4202a2
          .byte 0x3a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266c7
          .zero 8
          .quad .L_4202ad
          .quad .L_4202ad
          .byte 0x3b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266cf
          .zero 8
          .quad .L_4202c1
          .quad .L_4202c1
          .byte 0x3c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266d8
          .zero 8
          .quad .L_4202da
          .quad .L_4202da
          .byte 0x3d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266e1
          .zero 8
          .quad .L_4202f8
          .quad .L_4202f8
          .byte 0x3e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266ea
          .zero 8
          .quad .L_420315
          .quad .L_420315
          .byte 0x3f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266f3
          .zero 8
          .quad .L_42032a
          .quad .L_42032a
          .byte 0x40
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4266fc
          .zero 8
          .quad .L_420345
          .quad .L_420345
          .byte 0x41
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426705
          .zero 8
          .quad .L_42035a
          .quad .L_42035a
          .byte 0x42
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42670e
          .zero 8
          .quad .L_42036d
          .quad .L_42036d
          .byte 0x43
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426717
          .zero 8
          .quad .L_42037a
          .quad .L_42037a
          .byte 0x44
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42671f
          .zero 8
          .quad .L_42038d
          .quad .L_42038d
          .byte 0x45
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426727
          .zero 8
          .quad .L_4203a5
          .quad .L_4203a5
          .byte 0x46
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42672f
          .zero 8
          .quad .L_4203b3
          .quad .L_4203b3
          .byte 0x47
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426737
          .zero 8
          .quad .L_4203c5
          .quad .L_4203c5
          .byte 0x48
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42673f
          .zero 8
          .quad .L_4203db
          .quad .L_4203db
          .byte 0x49
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426747
          .zero 8
          .quad .L_4203f0
          .quad .L_4203f0
          .byte 0x4a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42674f
          .zero 8
          .quad .L_420402
          .quad .L_420402
          .byte 0x4b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426757
          .zero 8
          .quad .L_420417
          .quad .L_420417
          .byte 0x4c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42675f
          .zero 8
          .quad .L_42042a
          .quad .L_42042a
          .byte 0x4d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426767
          .zero 8
          .quad .L_420440
          .quad .L_420440
          .byte 0x4e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42676f
          .zero 8
          .quad .L_420455
          .quad .L_420455
          .byte 0x4f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426777
          .zero 8
          .quad .L_420469
          .quad .L_420469
          .byte 0x50
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42677f
          .zero 8
          .quad .L_42047d
          .quad .L_42047d
          .byte 0x51
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426787
          .zero 8
          .quad .L_420492
          .quad .L_420492
          .byte 0x52
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42678f
          .zero 8
          .quad .L_4204a1
          .quad .L_4204a1
          .byte 0x53
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426797
          .zero 8
          .quad .L_4204af
          .quad .L_4204af
          .byte 0x54
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42679f
          .zero 8
          .quad .L_4204c4
          .quad .L_4204c4
          .byte 0x55
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267a7
          .zero 8
          .quad .L_4204d3
          .quad .L_4204d3
          .byte 0x56
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267af
          .zero 8
          .quad .L_4204e7
          .quad .L_4204e7
          .byte 0x57
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267b7
          .zero 8
          .quad .L_4204fb
          .quad .L_4204fb
          .byte 0x58
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267bf
          .zero 8
          .quad .L_420510
          .quad .L_420510
          .byte 0x59
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267c7
          .zero 8
          .quad .L_420526
          .quad .L_420526
          .byte 0x5a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267cf
          .zero 8
          .quad .L_420543
          .quad .L_420543
          .byte 0x5b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267d7
          .zero 8
          .quad .L_420556
          .quad .L_420556
          .byte 0x5c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267df
          .zero 8
          .quad .L_420569
          .quad .L_420569
          .byte 0x5d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267e7
          .zero 48
          .quad .L_42057d
          .quad .L_42057d
          .byte 0x5f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267ef
          .zero 8
          .quad .L_42058b
          .quad .L_42058b
          .byte 0x60
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267f7
          .zero 8
          .quad .L_4205a7
          .quad .L_4205a7
          .byte 0x61
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4267ff
          .zero 8
          .quad .L_4205c1
          .quad .L_4205c1
          .byte 0x62
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426807
          .zero 8
          .quad .L_4205db
          .quad .L_4205db
          .byte 0x63
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42680f
          .zero 8
          .quad .L_4205f1
          .quad .L_4205f1
          .byte 0x64
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426817
          .zero 8
          .quad .L_420609
          .quad .L_420609
          .byte 0x65
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42681f
          .zero 8
          .quad .L_420616
          .quad .L_420616
          .byte 0x66
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426827
          .zero 8
          .quad .L_420622
          .quad .L_420622
          .byte 0x67
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42682f
          .zero 8
          .quad .L_420639
          .quad .L_420639
          .byte 0x68
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426837
          .zero 8
          .quad .L_420644
          .quad .L_420644
          .byte 0x69
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42683f
          .zero 8
          .quad .L_420653
          .quad .L_420653
          .byte 0x6a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426847
          .zero 8
          .quad .L_420666
          .quad .L_420676
          .byte 0x6b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42684f
          .zero 8
          .quad .L_420687
          .quad .L_42068f
          .byte 0x6c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426857
          .zero 8
          .quad .L_420697
          .quad .L_4206a9
          .byte 0x6d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42685f
          .zero 8
          .quad .L_4206bd
          .quad .L_4206c3
          .byte 0x6e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426868
          .zero 8
          .quad .L_4206ce
          .quad .L_4206d4
          .byte 0x6f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426871
          .zero 8
          .quad .L_4206e0
          .quad .L_4206f4
          .byte 0x70
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42687a
          .zero 8
          .quad .L_42070e
          .quad .L_420716
          .byte 0x71
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426883
          .zero 8
          .quad .L_420724
          .quad .L_420732
          .byte 0x72
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42688c
          .zero 8
          .quad .L_420746
          .quad .L_420755
          .byte 0x73
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426895
          .zero 8
          .quad .L_42076a
          .quad .L_420779
          .byte 0x74
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42689e
          .zero 8
          .quad .L_42078e
          .quad .L_42078e
          .byte 0x75
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268a7
          .zero 8
          .quad .L_420794
          .quad .L_420794
          .byte 0x76
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268b0
          .zero 8
          .quad .L_420799
          .quad .L_4207a3
          .byte 0x77
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268b9
          .zero 8
          .quad .L_4207ae
          .quad .L_4207ae
          .byte 0x78
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268c2
          .zero 8
          .quad .L_4207b8
          .quad .L_4207b8
          .byte 0x79
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268c6
          .zero 8
          .quad .L_4207c5
          .quad .L_427a48
          .byte 0x7a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268cb
          .zero 8
          .quad .L_4207d4
          .quad .L_4207d8
          .byte 0x7b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268cd
          .zero 8
          .quad .L_4207dc
          .quad .L_4207e0
          .byte 0x7c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268ce
          .zero 8
          .quad .L_4207e4
          .quad .L_4207e9
          .byte 0x7d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268d0
          .zero 8
          .quad .L_4207ee
          .quad .L_4207f8
          .byte 0x7e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268d3
          .zero 8
          .quad .L_420802
          .quad .L_420807
          .byte 0x7f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268d7
          .zero 8
          .quad .L_420812
          .quad .L_42081f
          .byte 0x80
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268db
          .zero 8
          .quad .L_42082c
          .quad .L_420834
          .byte 0x81
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268df
          .zero 8
          .quad .L_42083c
          .quad .L_420845
          .byte 0x82
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268e3
          .zero 8
          .quad .L_42084e
          .quad .L_420855
          .byte 0x83
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268e7
          .zero 8
          .quad .L_42085c
          .quad .L_42085c
          .byte 0x84
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268eb
          .zero 8
          .quad .L_420861
          .quad .L_42086d
          .byte 0x85
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268ef
          .zero 8
          .quad .L_420879
          .quad .L_420882
          .byte 0x86
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268f4
          .zero 8
          .quad .L_42088b
          .quad .L_42088e
          .byte 0x87
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4268fd
          .zero 8
          .quad .L_42089e
          .quad .L_4208a5
          .byte 0x88
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426907
          .zero 8
          .quad .L_4208ac
          .quad .L_4208ac
          .byte 0x89
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4208b1
          .quad .L_4208ca
          .byte 0x8a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426911
          .zero 8
          .quad .L_4208e3
          .quad .L_4208e3
          .byte 0x8b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426914
          .zero 8
          .quad .L_4208ed
          .quad .L_4208f5
          .byte 0x8c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426918
          .zero 8
          .quad .L_42090a
          .quad .L_42090a
          .byte 0x8d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426921
          .zero 8
          .quad .L_420916
          .quad .L_420928
          .byte 0x8e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426929
          .zero 8
          .quad .L_420943
          .quad .L_420943
          .byte 0x8f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426931
          .zero 8
          .quad .L_420953
          .quad .L_420953
          .byte 0x90
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426939
          .zero 8
          .quad .L_420958
          .quad .L_42096a
          .byte 0x91
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42693c
          .zero 8
          .quad .L_420984
          .quad .L_420996
          .byte 0x92
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42693f
          .zero 8
          .quad .L_4209aa
          .quad .L_427a68
          .byte 0x93
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426942
          .zero 8
          .quad .L_4208ac
          .quad .L_4208ac
          .byte 0x94
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4209b5
          .quad .L_4209c0
          .byte 0x95
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426945
          .zero 8
          .quad .L_4209cb
          .quad .L_4209cb
          .byte 0x96
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42694a
          .zero 8
          .quad .L_4209d7
          .quad .L_4209d7
          .byte 0x97
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426951
          .zero 8
          .quad .L_4209f0
          .quad .L_4209f0
          .byte 0x98
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426958
          .zero 8
          .quad .L_4209ff
          .quad .L_4209ff
          .byte 0x99
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42695f
          .zero 8
          .quad .L_420a0a
          .quad .L_420a0a
          .byte 0x9a
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426967
          .zero 8
          .quad .L_420a15
          .quad .L_420a15
          .byte 0x9b
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42696f
          .zero 8
          .quad .L_420a20
          .quad .L_420a20
          .byte 0x9c
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426977
          .zero 8
          .quad .L_420a2b
          .quad .L_420a2b
          .byte 0x9d
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42697f
          .zero 8
          .quad .L_420a36
          .quad .L_420a36
          .byte 0x9e
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426987
          .zero 8
          .quad .L_420a41
          .quad .L_420a41
          .byte 0x9f
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42698f
          .zero 8
          .quad .L_420a4c
          .quad .L_420a4c
          .byte 0xa0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426997
          .zero 8
          .quad .L_420a5c
          .quad .L_420a64
          .byte 0xa1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42699e
          .zero 8
          .quad .L_420a77
          .quad .L_420a83
          .byte 0xa2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269a7
          .zero 8
          .quad .L_420a8f
          .quad .L_420a9b
          .byte 0xa3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269b0
          .zero 8
          .quad .L_420aa7
          .quad .L_420ab3
          .byte 0xa4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269b9
          .zero 8
          .quad .L_420abf
          .quad .L_420acb
          .byte 0xa5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269c2
          .zero 8
          .quad .L_420ad7
          .quad .L_420ae3
          .byte 0xa6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269cb
          .zero 8
          .quad .L_420aef
          .quad .L_420afb
          .byte 0xa7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269d4
          .zero 8
          .quad .L_420b07
          .quad .L_420b13
          .byte 0xa8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269dd
          .zero 8
          .quad .L_420b1f
          .quad .L_420b2b
          .byte 0xa9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269e6
          .zero 8
          .quad .L_420b37
          .quad .L_420b43
          .byte 0xaa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269ef
          .zero 8
          .quad .L_420b4f
          .quad .L_420b5b
          .byte 0xab
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4269f8
          .zero 8
          .quad .L_420b67
          .quad .L_420b73
          .byte 0xac
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a01
          .zero 8
          .quad .L_420b7f
          .quad .L_420b8b
          .byte 0xad
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a0a
          .zero 8
          .quad .L_420b97
          .quad .L_420bab
          .byte 0xae
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a13
          .zero 8
          .quad .L_420bc1
          .quad .L_420bd5
          .byte 0xaf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a16
          .zero 8
          .quad .L_420beb
          .quad .L_420c05
          .byte 0xb0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a1d
          .zero 8
          .quad .L_420c22
          .quad .L_420c38
          .byte 0xb1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a24
          .zero 8
          .quad .L_420c50
          .quad .L_420c50
          .byte 0xb2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a2b
          .zero 8
          .quad .L_420c55
          .quad .L_420c55
          .byte 0xb3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a2c
          .zero 8
          .quad .L_420c59
          .quad .L_420c59
          .byte 0xb4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a2f
          .zero 8
          .quad .L_420c5d
          .quad .L_420c5d
          .byte 0xb5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a36
          .zero 8
          .quad .L_420c63
          .quad .L_420c63
          .byte 0xb6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a3e
          .zero 8
          .quad .L_420c76
          .quad .L_420c76
          .byte 0xb7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a47
          .zero 8
          .quad .L_420c8b
          .quad .L_420c8b
          .byte 0xb8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a50
          .zero 8
          .quad .L_420c9c
          .quad .L_420c9c
          .byte 0xb9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a59
          .zero 8
          .quad .L_420ca8
          .quad .L_420ca8
          .byte 0xba
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a62
          .zero 8
          .quad .L_420cb8
          .quad .L_420cb8
          .byte 0xbb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a6c
          .zero 8
          .quad .L_420cd2
          .quad .L_420cd2
          .byte 0xbc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a76
          .zero 8
          .quad .L_420cde
          .quad .L_420cde
          .byte 0xbd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a80
          .zero 8
          .quad .L_420cea
          .quad .L_420cea
          .byte 0xbe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a8a
          .zero 8
          .quad .L_420cf2
          .quad .L_420cf2
          .byte 0xbf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a94
          .zero 8
          .quad .L_420cfb
          .quad .L_420cfb
          .byte 0xc0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426a9e
          .zero 8
          .quad .L_420d00
          .quad .L_420d00
          .byte 0xc1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426aa8
          .zero 8
          .quad .L_420d0f
          .quad .L_420d0f
          .byte 0xc2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ab2
          .zero 8
          .quad .L_420d1f
          .quad .L_420d1f
          .byte 0xc3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426abc
          .zero 8
          .quad .L_420d29
          .quad .L_420d29
          .byte 0xc4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ac6
          .zero 8
          .quad .L_420d3d
          .quad .L_420d3d
          .byte 0xc5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ad0
          .zero 8
          .quad .L_420d4d
          .quad .L_420d4d
          .byte 0xc6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ada
          .zero 8
          .quad .L_420d62
          .quad .L_420d62
          .byte 0xc7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ae4
          .zero 8
          .quad .L_420d74
          .quad .L_420d74
          .byte 0xc8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426aee
          .zero 8
          .quad .L_420d7d
          .quad .L_420d7d
          .byte 0xc9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426af8
          .zero 8
          .quad .L_420d91
          .quad .L_420d95
          .byte 0xca
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b02
          .zero 8
          .quad .L_420d9c
          .quad .L_420d9c
          .byte 0xcb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b0c
          .zero 8
          .quad .L_420db1
          .quad .L_420db6
          .byte 0xcc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b16
          .zero 8
          .quad .L_420dc4
          .quad .L_420dc4
          .byte 0xcd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b20
          .zero 8
          .quad .L_420dc9
          .quad .L_420dc9
          .byte 0xce
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b2a
          .zero 8
          .quad .L_420dd8
          .quad .L_420dd8
          .byte 0xcf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b34
          .zero 8
          .quad .L_420de3
          .quad .L_420de3
          .byte 0xd0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b3e
          .zero 8
          .quad .L_420de9
          .quad .L_420de9
          .byte 0xd1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b48
          .zero 8
          .quad .L_420df3
          .quad .L_420df3
          .byte 0xd2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b52
          .zero 8
          .quad .L_420df8
          .quad .L_420df8
          .byte 0xd3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b5c
          .zero 8
          .quad .L_420e00
          .quad .L_420e00
          .byte 0xd4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b66
          .zero 8
          .quad .L_420e13
          .quad .L_420e13
          .byte 0xd5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b70
          .zero 8
          .quad .L_420e21
          .quad .L_420e21
          .byte 0xd6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b7a
          .zero 8
          .quad .L_420e31
          .quad .L_420e31
          .byte 0xd7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b84
          .zero 8
          .quad .L_420e40
          .quad .L_420e40
          .byte 0xd8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b8e
          .zero 8
          .quad .L_420e51
          .quad .L_420e51
          .byte 0xd9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426b98
          .zero 8
          .quad .L_420e65
          .quad .L_420e65
          .byte 0xda
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ba2
          .zero 8
          .quad .L_420e6f
          .quad .L_420e6f
          .byte 0xdb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426bac
          .zero 8
          .quad .L_420e7c
          .quad .L_420e7c
          .byte 0xdc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426bb6
          .zero 8
          .quad .L_420e8d
          .quad .L_420e8d
          .byte 0xdd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426bc0
          .zero 8
          .quad .L_420e9c
          .quad .L_420e9c
          .byte 0xde
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426bca
          .zero 8
          .quad .L_420ea4
          .quad .L_420ea4
          .byte 0xdf
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426bd4
          .zero 8
          .quad .L_420eb9
          .quad .L_420eb9
          .byte 0xe0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426bde
          .zero 8
          .quad .L_420ec2
          .quad .L_420ec2
          .byte 0xe1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426be8
          .zero 8
          .quad .L_420ecb
          .quad .L_420ecb
          .byte 0xe2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426bf2
          .zero 8
          .quad .L_420ed5
          .quad .L_420ed5
          .byte 0xe3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426bfc
          .zero 8
          .quad .L_420ee1
          .quad .L_420ee1
          .byte 0xe4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c06
          .zero 8
          .quad .L_420ef2
          .quad .L_420ef2
          .byte 0xe5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c10
          .zero 8
          .quad .L_420f01
          .quad .L_420f01
          .byte 0xe6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c1a
          .zero 8
          .quad .L_420f13
          .quad .L_420f13
          .byte 0xe7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c24
          .zero 8
          .quad .L_420f21
          .quad .L_420f21
          .byte 0xe8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c2e
          .zero 8
          .quad .L_420f37
          .quad .L_420f37
          .byte 0xe9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c38
          .zero 8
          .quad .L_420f4c
          .quad .L_420f4c
          .byte 0xea
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c42
          .zero 8
          .quad .L_420f60
          .quad .L_420f60
          .byte 0xeb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c4c
          .zero 8
          .quad .L_420f75
          .quad .L_420f75
          .byte 0xec
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c56
          .zero 8
          .quad .L_420f82
          .quad .L_420f82
          .byte 0xed
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c60
          .zero 8
          .quad .L_420f97
          .quad .L_420f97
          .byte 0xee
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c6a
          .zero 8
          .quad .L_420fa4
          .quad .L_420fa4
          .byte 0xef
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c74
          .zero 8
          .quad .L_420faf
          .quad .L_420faf
          .byte 0xf0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c7e
          .zero 8
          .quad .L_420fc2
          .quad .L_420fc2
          .byte 0xf1
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c88
          .zero 8
          .quad .L_420fd8
          .quad .L_420fd8
          .byte 0xf2
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c92
          .zero 8
          .quad .L_420fee
          .quad .L_420fee
          .byte 0xf3
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426c9c
          .zero 8
          .quad .L_421000
          .quad .L_421000
          .byte 0xf4
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ca6
          .zero 8
          .quad .L_42100c
          .quad .L_42100c
          .byte 0xf5
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cb0
          .zero 8
          .quad .L_421012
          .quad .L_421012
          .byte 0xf6
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cba
          .zero 8
          .quad .L_421024
          .quad .L_421024
          .byte 0xf7
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cc4
          .zero 8
          .quad .L_421039
          .quad .L_421042
          .byte 0xf8
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cc7
          .zero 8
          .quad .L_42104b
          .quad .L_42104b
          .byte 0xf9
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ccc
          .zero 8
          .quad .L_42105d
          .quad .L_42105d
          .byte 0xfa
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cd2
          .zero 8
          .quad .L_42106d
          .quad .L_42106d
          .byte 0xfb
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cd8
          .zero 8
          .quad .L_421084
          .quad .L_421084
          .byte 0xfc
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cdf
          .zero 8
          .quad .L_42109d
          .quad .L_42109d
          .byte 0xfd
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ce6
          .zero 8
          .quad .L_4210b1
          .quad .L_4210b1
          .byte 0xfe
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ce9
          .zero 48
          .quad .L_4210bb
          .quad .L_427a88
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cec
          .zero 8
          .quad .L_4210c2
          .quad .L_4210cc
          .byte 0x1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cee
          .zero 8
          .quad .L_4210da
          .quad .L_4210e5
          .byte 0x2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cf1
          .zero 8
          .quad .L_4210f8
          .quad .L_4210f8
          .byte 0x3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cf4
          .zero 8
          .quad .L_421101
          .quad .L_421101
          .byte 0x4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cf7
          .zero 8
          .quad .L_42110c
          .quad .L_421118
          .byte 0x5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cfa
          .zero 8
          .quad .L_42112f
          .quad .L_42112f
          .byte 0x6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426cfd
          .zero 8
          .quad .L_421139
          .quad .L_421139
          .byte 0x7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d00
          .zero 8
          .quad .L_421147
          .quad .L_421147
          .byte 0x8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d04
          .zero 8
          .quad .L_421156
          .quad .L_421156
          .byte 0x9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d08
          .zero 8
          .quad .L_421164
          .quad .L_421164
          .byte 0xa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d0c
          .zero 8
          .quad .L_421171
          .quad .L_421171
          .byte 0xb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d10
          .zero 8
          .quad .L_42117a
          .quad .L_42117a
          .byte 0xc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d14
          .zero 8
          .quad .L_421187
          .quad .L_421187
          .byte 0xd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d18
          .zero 8
          .quad .L_42119c
          .quad .L_42119c
          .byte 0xe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d1c
          .zero 8
          .quad .L_4211ab
          .quad .L_4211ab
          .byte 0xf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d20
          .zero 8
          .quad .L_4211c0
          .quad .L_4211c0
          .byte 0x10
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d24
          .zero 8
          .quad .L_4211d8
          .quad .L_4211d8
          .byte 0x11
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d28
          .zero 8
          .quad .L_4211f0
          .quad .L_4211f0
          .byte 0x12
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d2c
          .zero 8
          .quad .L_421202
          .quad .L_421202
          .byte 0x13
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d30
          .zero 8
          .quad .L_421215
          .quad .L_421215
          .byte 0x14
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d34
          .zero 8
          .quad .L_421222
          .quad .L_421222
          .byte 0x15
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d38
          .zero 8
          .quad .L_421231
          .quad .L_421231
          .byte 0x16
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d3c
          .zero 8
          .quad .L_421242
          .quad .L_421242
          .byte 0x17
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d40
          .zero 8
          .quad .L_421253
          .quad .L_421253
          .byte 0x18
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d44
          .zero 8
          .quad .L_421265
          .quad .L_421265
          .byte 0x19
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d48
          .zero 8
          .quad .L_421278
          .quad .L_421278
          .byte 0x1a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d4c
          .zero 8
          .quad .L_42128b
          .quad .L_42128b
          .byte 0x1b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d50
          .zero 8
          .quad .L_42129d
          .quad .L_42129d
          .byte 0x1c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d54
          .zero 8
          .quad .L_4212b2
          .quad .L_4212b2
          .byte 0x1d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d58
          .zero 8
          .quad .L_4212c6
          .quad .L_4212c6
          .byte 0x1e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d5c
          .zero 8
          .quad .L_4212db
          .quad .L_4212db
          .byte 0x1f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d60
          .zero 8
          .quad .L_4212ef
          .quad .L_4212ef
          .byte 0x20
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d64
          .zero 8
          .quad .L_4212ff
          .quad .L_4212ff
          .byte 0x21
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d68
          .zero 8
          .quad .L_421310
          .quad .L_421310
          .byte 0x22
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d6c
          .zero 8
          .quad .L_421321
          .quad .L_421321
          .byte 0x23
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d70
          .zero 8
          .quad .L_421334
          .quad .L_421334
          .byte 0x24
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d74
          .zero 8
          .quad .L_421348
          .quad .L_421348
          .byte 0x25
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d78
          .zero 8
          .quad .L_42135c
          .quad .L_42135c
          .byte 0x26
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d7c
          .zero 8
          .quad .L_42136d
          .quad .L_42136d
          .byte 0x27
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d80
          .zero 8
          .quad .L_42137f
          .quad .L_42137f
          .byte 0x28
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d84
          .zero 8
          .quad .L_421391
          .quad .L_421391
          .byte 0x29
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d88
          .zero 8
          .quad .L_4213a5
          .quad .L_4213a5
          .byte 0x2a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d8c
          .zero 8
          .quad .L_4213ba
          .quad .L_4213ba
          .byte 0x2b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d90
          .zero 8
          .quad .L_4213cf
          .quad .L_4213cf
          .byte 0x2c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d94
          .zero 8
          .quad .L_4213e2
          .quad .L_4213e2
          .byte 0x2d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d98
          .zero 8
          .quad .L_4213f4
          .quad .L_4213f4
          .byte 0x2e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426d9c
          .zero 8
          .quad .L_42140c
          .quad .L_42140c
          .byte 0x2f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426da0
          .zero 8
          .quad .L_421424
          .quad .L_421424
          .byte 0x30
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426da4
          .zero 8
          .quad .L_42143a
          .quad .L_42143a
          .byte 0x31
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426da8
          .zero 8
          .quad .L_421450
          .quad .L_421450
          .byte 0x32
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dac
          .zero 8
          .quad .L_421464
          .quad .L_421464
          .byte 0x33
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426db0
          .zero 8
          .quad .L_421476
          .quad .L_421476
          .byte 0x34
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426db4
          .zero 8
          .quad .L_421487
          .quad .L_421487
          .byte 0x35
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426db8
          .zero 8
          .quad .L_421499
          .quad .L_421499
          .byte 0x36
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dbc
          .zero 8
          .quad .L_4214ad
          .quad .L_4214ad
          .byte 0x37
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dc0
          .zero 8
          .quad .L_4214bc
          .quad .L_4214bc
          .byte 0x38
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dc4
          .zero 8
          .quad .L_4214d2
          .quad .L_4214d2
          .byte 0x39
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dc8
          .zero 8
          .quad .L_4214e6
          .quad .L_4214e6
          .byte 0x3a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dcc
          .zero 8
          .quad .L_4214f7
          .quad .L_4214f7
          .byte 0x3b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dd0
          .zero 8
          .quad .L_421508
          .quad .L_421508
          .byte 0x3c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dd4
          .zero 8
          .quad .L_42151a
          .quad .L_42151a
          .byte 0x3d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dd8
          .zero 8
          .quad .L_42152d
          .quad .L_42152d
          .byte 0x3e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ddc
          .zero 8
          .quad .L_42153f
          .quad .L_42153f
          .byte 0x3f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426de0
          .zero 8
          .quad .L_421552
          .quad .L_421552
          .byte 0x40
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426de4
          .zero 8
          .quad .L_42156a
          .quad .L_42156a
          .byte 0x41
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426de8
          .zero 8
          .quad .L_42157e
          .quad .L_42157e
          .byte 0x42
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dec
          .zero 8
          .quad .L_421592
          .quad .L_421592
          .byte 0x43
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426df0
          .zero 8
          .quad .L_4215a7
          .quad .L_4215a7
          .byte 0x44
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426df4
          .zero 8
          .quad .L_4215b7
          .quad .L_4215b7
          .byte 0x45
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426df8
          .zero 8
          .quad .L_4215c8
          .quad .L_4215c8
          .byte 0x46
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426dfc
          .zero 8
          .quad .L_4215d8
          .quad .L_4215d8
          .byte 0x47
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e00
          .zero 8
          .quad .L_4215eb
          .quad .L_4215eb
          .byte 0x48
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e04
          .zero 8
          .quad .L_4215ff
          .quad .L_4215ff
          .byte 0x49
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e08
          .zero 8
          .quad .L_421612
          .quad .L_421612
          .byte 0x4a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e0c
          .zero 8
          .quad .L_421623
          .quad .L_421623
          .byte 0x4b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e10
          .zero 8
          .quad .L_421635
          .quad .L_421635
          .byte 0x4c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e14
          .zero 8
          .quad .L_421646
          .quad .L_421646
          .byte 0x4d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e18
          .zero 8
          .quad .L_42165a
          .quad .L_42165a
          .byte 0x4e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e1c
          .zero 8
          .quad .L_42166f
          .quad .L_42166f
          .byte 0x4f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e20
          .zero 8
          .quad .L_421683
          .quad .L_421683
          .byte 0x50
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e24
          .zero 8
          .quad .L_42169a
          .quad .L_42169a
          .byte 0x51
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e28
          .zero 8
          .quad .L_4216b1
          .quad .L_4216b1
          .byte 0x52
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e2c
          .zero 8
          .quad .L_4216c5
          .quad .L_4216c5
          .byte 0x53
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e30
          .zero 8
          .quad .L_4216d6
          .quad .L_4216d6
          .byte 0x54
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e34
          .zero 8
          .quad .L_4216e8
          .quad .L_4216e8
          .byte 0x55
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e38
          .zero 8
          .quad .L_4216f9
          .quad .L_4216f9
          .byte 0x56
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e3c
          .zero 8
          .quad .L_421712
          .quad .L_421712
          .byte 0x57
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e40
          .zero 8
          .quad .L_42172e
          .quad .L_42172e
          .byte 0x58
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e44
          .zero 8
          .quad .L_421747
          .quad .L_421757
          .byte 0x59
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e48
          .zero 8
          .quad .L_42176a
          .quad .L_421778
          .byte 0x5a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e4c
          .zero 8
          .quad .L_421790
          .quad .L_421790
          .byte 0x5b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e50
          .zero 8
          .quad .L_4217a1
          .quad .L_4217a1
          .byte 0x5c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e54
          .zero 8
          .quad .L_4217af
          .quad .L_4217af
          .byte 0x5d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e58
          .zero 8
          .quad .L_4217bd
          .quad .L_4217c7
          .byte 0x5e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e5c
          .zero 8
          .quad .L_4217df
          .quad .L_4217df
          .byte 0x5f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e60
          .zero 8
          .quad .L_4217ef
          .quad .L_4217ef
          .byte 0x60
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e64
          .zero 8
          .quad .L_421802
          .quad .L_421802
          .byte 0x61
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e68
          .zero 8
          .quad .L_421813
          .quad .L_421813
          .byte 0x62
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e6c
          .zero 8
          .quad .L_421825
          .quad .L_421825
          .byte 0x63
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e70
          .zero 8
          .quad .L_42183b
          .quad .L_42183b
          .byte 0x64
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e74
          .zero 8
          .quad .L_42184d
          .quad .L_42184d
          .byte 0x65
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e78
          .zero 8
          .quad .L_42185c
          .quad .L_42185c
          .byte 0x66
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e7c
          .zero 8
          .quad .L_42186d
          .quad .L_42186d
          .byte 0x67
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e80
          .zero 8
          .quad .L_421886
          .quad .L_421886
          .byte 0x68
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e84
          .zero 8
          .quad .L_42189e
          .quad .L_42189e
          .byte 0x69
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e88
          .zero 8
          .quad .L_4218b1
          .quad .L_4218b1
          .byte 0x6a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e8c
          .zero 8
          .quad .L_4218c3
          .quad .L_4218c3
          .byte 0x6b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e90
          .zero 8
          .quad .L_4218de
          .quad .L_4218de
          .byte 0x6c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e94
          .zero 8
          .quad .L_4218eb
          .quad .L_4218fb
          .byte 0x6d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e98
          .zero 8
          .quad .L_421918
          .quad .L_421918
          .byte 0x6e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426e9c
          .zero 8
          .quad .L_42192a
          .quad .L_421939
          .byte 0x6f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ea0
          .zero 8
          .quad .L_42194d
          .quad .L_42194d
          .byte 0x70
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ea4
          .zero 8
          .quad .L_42195e
          .quad .L_42195e
          .byte 0x71
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ea9
          .zero 8
          .quad .L_42196c
          .quad .L_42196c
          .byte 0x72
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426eae
          .zero 8
          .quad .L_42197e
          .quad .L_42197e
          .byte 0x73
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426eb3
          .zero 8
          .quad .L_421994
          .quad .L_421994
          .byte 0x74
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426eb8
          .zero 8
          .quad .L_4219a7
          .quad .L_4219a7
          .byte 0x75
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ebd
          .zero 8
          .quad .L_4219b9
          .quad .L_4219b9
          .byte 0x76
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ec2
          .zero 8
          .quad .L_4219cc
          .quad .L_4219e0
          .byte 0x77
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ec7
          .zero 8
          .quad .L_4219f4
          .quad .L_421a02
          .byte 0x78
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ecd
          .zero 8
          .quad .L_421a14
          .quad .L_421a27
          .byte 0x79
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ed3
          .zero 8
          .quad .L_421a39
          .quad .L_421a4b
          .byte 0x7a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ed9
          .zero 8
          .quad .L_421a62
          .quad .L_421a74
          .byte 0x7b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426edf
          .zero 8
          .quad .L_421a8c
          .quad .L_421a8c
          .byte 0x7c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ee5
          .zero 8
          .quad .L_421a9f
          .quad .L_421a9f
          .byte 0x7d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ee9
          .zero 8
          .quad .L_421ab0
          .quad .L_421ab0
          .byte 0x7e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426eed
          .zero 8
          .quad .L_421aca
          .quad .L_421aca
          .byte 0x7f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ef1
          .zero 8
          .quad .L_421ad8
          .quad .L_421ad8
          .byte 0x80
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ef5
          .zero 8
          .quad .L_421ae7
          .quad .L_421ae7
          .byte 0x81
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ef9
          .zero 8
          .quad .L_421afc
          .quad .L_421afc
          .byte 0x82
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426efd
          .zero 8
          .quad .L_421b0c
          .quad .L_421b15
          .byte 0x83
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f02
          .zero 8
          .quad .L_421b1e
          .quad .L_421b1e
          .byte 0x84
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f0a
          .zero 8
          .quad .L_421b33
          .quad .L_421b39
          .byte 0x85
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421b3f
          .quad .L_421b4f
          .byte 0x86
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421b5f
          .quad .L_421b7b
          .byte 0x87
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f13
          .zero 8
          .quad .L_421b97
          .quad .L_421ba8
          .byte 0x88
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f14
          .zero 8
          .quad .L_421bc1
          .quad .L_427aa8
          .byte 0x89
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f1e
          .zero 8
          .quad .L_421bc7
          .quad .L_421bd4
          .byte 0x8a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421be1
          .quad .L_421bee
          .byte 0x8b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421bfb
          .quad .L_421c08
          .byte 0x8c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421c15
          .quad .L_421c22
          .byte 0x8d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421c2f
          .quad .L_421c3c
          .byte 0x8e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421c49
          .quad .L_421c56
          .byte 0x8f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421c63
          .quad .L_421c6c
          .byte 0x90
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421c75
          .quad .L_421c7e
          .byte 0x91
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421c87
          .quad .L_421c95
          .byte 0x92
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421ca3
          .quad .L_421cb1
          .byte 0x93
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_421cbf
          .quad .L_421cc6
          .byte 0x94
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f28
          .zero 8
          .quad .L_421cd4
          .quad .L_421cd4
          .byte 0x95
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f2b
          .zero 8
          .quad .L_421cdf
          .quad .L_421cdf
          .byte 0x96
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f2e
          .zero 8
          .quad .L_421ce6
          .quad .L_421cf4
          .byte 0x97
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f35
          .zero 8
          .quad .L_421d12
          .quad .L_421d25
          .byte 0x98
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f3d
          .zero 8
          .quad .L_421d32
          .quad .L_421d44
          .byte 0x99
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f45
          .zero 8
          .quad .L_421d50
          .quad .L_421d60
          .byte 0x9a
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f4d
          .zero 8
          .quad .L_421d78
          .quad .L_421d8b
          .byte 0x9b
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f50
          .zero 8
          .quad .L_421d97
          .quad .L_421da2
          .byte 0x9c
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f58
          .zero 8
          .quad .L_421dba
          .quad .L_421dc5
          .byte 0x9d
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f61
          .zero 8
          .quad .L_421ddd
          .quad .L_421de8
          .byte 0x9e
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f6a
          .zero 8
          .quad .L_421e00
          .quad .L_421e0b
          .byte 0x9f
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f73
          .zero 8
          .quad .L_421e23
          .quad .L_421e2a
          .byte 0xa0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f7c
          .zero 8
          .quad .L_421e31
          .quad .L_421e38
          .byte 0xa1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f85
          .zero 8
          .quad .L_421e3f
          .quad .L_421e46
          .byte 0xa2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f8e
          .zero 8
          .quad .L_421e4d
          .quad .L_421e54
          .byte 0xa3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426f97
          .zero 8
          .quad .L_421e5b
          .quad .L_421e5b
          .byte 0xa4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fa0
          .zero 8
          .quad .L_421e73
          .quad .L_421e73
          .byte 0xa5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fa1
          .zero 8
          .quad .L_421e80
          .quad .L_421e80
          .byte 0xa6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fa4
          .zero 8
          .quad .L_421e84
          .quad .L_421e84
          .byte 0xa7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fa6
          .zero 8
          .quad .L_421e8c
          .quad .L_421e8c
          .byte 0xa8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fa9
          .zero 8
          .quad .L_421ea8
          .quad .L_421ea8
          .byte 0xa9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fb1
          .zero 8
          .quad .L_421eb0
          .quad .L_421eb0
          .byte 0xaa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fba
          .zero 8
          .quad .L_421eb8
          .quad .L_421eb8
          .byte 0xab
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fc3
          .zero 8
          .quad .L_421ec0
          .quad .L_421ec0
          .byte 0xac
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fcc
          .zero 8
          .quad .L_421ecb
          .quad .L_421ecb
          .byte 0xad
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fd4
          .zero 8
          .quad .L_421ed6
          .quad .L_421ed6
          .byte 0xae
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fdc
          .zero 8
          .quad .L_421ee1
          .quad .L_421ee1
          .byte 0xaf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fe4
          .zero 8
          .quad .L_421eec
          .quad .L_421eec
          .byte 0xb0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426fec
          .zero 8
          .quad .L_421ef7
          .quad .L_421ef7
          .byte 0xb1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ff4
          .zero 8
          .quad .L_421f02
          .quad .L_421f02
          .byte 0xb2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_426ffc
          .zero 8
          .quad .L_421f0d
          .quad .L_421f0d
          .byte 0xb3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427004
          .zero 8
          .quad .L_421f18
          .quad .L_421f18
          .byte 0xb4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42700c
          .zero 8
          .quad .L_421f23
          .quad .L_421f23
          .byte 0xb5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427014
          .zero 8
          .quad .L_421f2e
          .quad .L_421f2e
          .byte 0xb6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42701c
          .zero 8
          .quad .L_421f39
          .quad .L_421f39
          .byte 0xb7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427024
          .zero 8
          .quad .L_421f44
          .quad .L_421f44
          .byte 0xb8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42702c
          .zero 8
          .quad .L_421f4f
          .quad .L_421f4f
          .byte 0xb9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427034
          .zero 8
          .quad .L_421f5a
          .quad .L_421f5a
          .byte 0xba
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42703c
          .zero 8
          .quad .L_421f65
          .quad .L_421f65
          .byte 0xbb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427044
          .zero 8
          .quad .L_421f70
          .quad .L_421f70
          .byte 0xbc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42704c
          .zero 8
          .quad .L_421f7b
          .quad .L_421f7b
          .byte 0xbd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427054
          .zero 8
          .quad .L_421f86
          .quad .L_421f86
          .byte 0xbe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42705c
          .zero 8
          .quad .L_421f91
          .quad .L_421f91
          .byte 0xbf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427064
          .zero 8
          .quad .L_421f9c
          .quad .L_421f9c
          .byte 0xc0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42706c
          .zero 8
          .quad .L_421fa6
          .quad .L_421fa6
          .byte 0xc1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427071
          .zero 8
          .quad .L_421fb0
          .quad .L_421fb0
          .byte 0xc2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427076
          .zero 8
          .quad .L_421fba
          .quad .L_421fba
          .byte 0xc3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42707b
          .zero 8
          .quad .L_421fc4
          .quad .L_421fc4
          .byte 0xc4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427080
          .zero 8
          .quad .L_421fce
          .quad .L_421fce
          .byte 0xc5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427085
          .zero 8
          .quad .L_421fd8
          .quad .L_421fd8
          .byte 0xc6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42708a
          .zero 8
          .quad .L_421fe2
          .quad .L_421fe2
          .byte 0xc7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42708f
          .zero 8
          .quad .L_421fec
          .quad .L_421fec
          .byte 0xc8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427094
          .zero 8
          .quad .L_421ff6
          .quad .L_421ff6
          .byte 0xc9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427099
          .zero 8
          .quad .L_422000
          .quad .L_422000
          .byte 0xca
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42709e
          .zero 8
          .quad .L_42200a
          .quad .L_42200a
          .byte 0xcb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270a3
          .zero 8
          .quad .L_422014
          .quad .L_422014
          .byte 0xcc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270a8
          .zero 8
          .quad .L_42201e
          .quad .L_42201e
          .byte 0xcd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270ad
          .zero 8
          .quad .L_422028
          .quad .L_422028
          .byte 0xce
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270b2
          .zero 8
          .quad .L_422032
          .quad .L_422032
          .byte 0xcf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270b7
          .zero 8
          .quad .L_42203c
          .quad .L_42203c
          .byte 0xd0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270bc
          .zero 8
          .quad .L_422046
          .quad .L_422046
          .byte 0xd1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270c1
          .zero 8
          .quad .L_422050
          .quad .L_422050
          .byte 0xd2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270c6
          .zero 8
          .quad .L_42205a
          .quad .L_42205a
          .byte 0xd3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270cb
          .zero 8
          .quad .L_422064
          .quad .L_422064
          .byte 0xd4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270d0
          .zero 8
          .quad .L_42206e
          .quad .L_42206e
          .byte 0xd5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270d5
          .zero 8
          .quad .L_422078
          .quad .L_422078
          .byte 0xd6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270da
          .zero 8
          .quad .L_422082
          .quad .L_422082
          .byte 0xd7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270df
          .zero 8
          .quad .L_42208c
          .quad .L_42208c
          .byte 0xd8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270e4
          .zero 8
          .quad .L_422096
          .quad .L_422096
          .byte 0xd9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270e9
          .zero 8
          .quad .L_4220a0
          .quad .L_4220a0
          .byte 0xda
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270ee
          .zero 8
          .quad .L_4220aa
          .quad .L_4220aa
          .byte 0xdb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270f3
          .zero 8
          .quad .L_4220b4
          .quad .L_4220b4
          .byte 0xdc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270f8
          .zero 8
          .quad .L_4220be
          .quad .L_4220be
          .byte 0xdd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4270fd
          .zero 8
          .quad .L_4220c8
          .quad .L_4220c8
          .byte 0xde
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427102
          .zero 8
          .quad .L_4220d2
          .quad .L_4220d2
          .byte 0xdf
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427107
          .zero 8
          .quad .L_4220e9
          .quad .L_4220e9
          .byte 0xe0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42710c
          .zero 8
          .quad .L_422100
          .quad .L_422100
          .byte 0xe1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427111
          .zero 8
          .quad .L_422117
          .quad .L_422117
          .byte 0xe2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427116
          .zero 8
          .quad .L_42212e
          .quad .L_42212e
          .byte 0xe3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42711b
          .zero 8
          .quad .L_422145
          .quad .L_422145
          .byte 0xe4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427120
          .zero 8
          .quad .L_42215c
          .quad .L_42215c
          .byte 0xe5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427125
          .zero 8
          .quad .L_422173
          .quad .L_422173
          .byte 0xe6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42712a
          .zero 8
          .quad .L_42218a
          .quad .L_42218a
          .byte 0xe7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42712f
          .zero 8
          .quad .L_4221a2
          .quad .L_4221a2
          .byte 0xe8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427134
          .zero 8
          .quad .L_4221ba
          .quad .L_4221ba
          .byte 0xe9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427139
          .zero 8
          .quad .L_4221d2
          .quad .L_4221dc
          .byte 0xea
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42713e
          .zero 8
          .quad .L_4221ee
          .quad .L_4221fd
          .byte 0xeb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427142
          .zero 8
          .quad .L_422214
          .quad .L_422225
          .byte 0xec
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427145
          .zero 8
          .quad .L_42223f
          .quad .L_42224d
          .byte 0xed
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422254
          .quad .L_422262
          .byte 0xee
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422269
          .quad .L_42227a
          .byte 0xef
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427148
          .zero 8
          .quad .L_42228b
          .quad .L_42229c
          .byte 0xf0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427153
          .zero 8
          .quad .L_4222ad
          .quad .L_4222be
          .byte 0xf1
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42715e
          .zero 8
          .quad .L_4222cf
          .quad .L_4222e0
          .byte 0xf2
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427169
          .zero 8
          .quad .L_4222f1
          .quad .L_422302
          .byte 0xf3
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427171
          .zero 8
          .quad .L_422313
          .quad .L_422324
          .byte 0xf4
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427179
          .zero 8
          .quad .L_422335
          .quad .L_422346
          .byte 0xf5
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427181
          .zero 8
          .quad .L_422357
          .quad .L_422368
          .byte 0xf6
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427189
          .zero 8
          .quad .L_422379
          .quad .L_42238a
          .byte 0xf7
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427191
          .zero 8
          .quad .L_42239b
          .quad .L_4223ad
          .byte 0xf8
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4223bf
          .quad .L_4223d1
          .byte 0xf9
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4223e3
          .quad .L_4223f5
          .byte 0xfa
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422407
          .quad .L_422419
          .byte 0xfb
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42242b
          .quad .L_42243d
          .byte 0xfc
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42244f
          .quad .L_422461
          .byte 0xfd
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422473
          .quad .L_422484
          .byte 0xfe
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427199
          .zero 8
          .quad .L_422495
          .quad .L_4224a6
          .byte 0xff
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271a1
          .zero 8
          .quad .L_4224b7
          .quad .L_4224c8
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271a9
          .zero 8
          .quad .L_4224d9
          .quad .L_427ad0
          .byte 0x1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271b1
          .zero 8
          .quad .L_4224f4
          .quad .L_427af8
          .byte 0x2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271b4
          .zero 8
          .quad .L_42250d
          .quad .L_42251f
          .byte 0x3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271b7
          .zero 48
          .quad .L_422539
          .quad .L_42253e
          .byte 0x5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271ba
          .zero 88
          .quad .L_422543
          .quad .L_42254c
          .byte 0x8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271c0
          .zero 8
          .quad .L_422555
          .quad .L_42255e
          .byte 0x9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271c8
          .zero 8
          .quad .L_422567
          .quad .L_422570
          .byte 0xa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271d0
          .zero 8
          .quad .L_422579
          .quad .L_422582
          .byte 0xb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271d8
          .zero 8
          .quad .L_42258b
          .quad .L_422594
          .byte 0xc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271e0
          .zero 8
          .quad .L_42259d
          .quad .L_4225a7
          .byte 0xd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271e8
          .zero 8
          .quad .L_4225b1
          .quad .L_4225c5
          .byte 0xe
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271f0
          .zero 8
          .quad .L_4225d8
          .quad .L_4225e6
          .byte 0xf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4271f9
          .zero 8
          .quad .L_4225ff
          .quad .L_4225ff
          .byte 0x10
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427202
          .zero 8
          .quad .L_422612
          .quad .L_42261f
          .byte 0x11
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42720a
          .zero 8
          .quad .L_42262d
          .quad .L_42262d
          .byte 0x12
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427212
          .zero 8
          .quad .L_422648
          .quad .L_422648
          .byte 0x13
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42721d
          .zero 8
          .quad .L_422660
          .quad .L_422660
          .byte 0x14
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427228
          .zero 8
          .quad .L_42266f
          .quad .L_42266f
          .byte 0x15
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427231
          .zero 8
          .quad .L_42267e
          .quad .L_42267e
          .byte 0x16
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42723a
          .zero 8
          .quad .L_42268d
          .quad .L_42268d
          .byte 0x17
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427243
          .zero 8
          .quad .L_4226a4
          .quad .L_4226a4
          .byte 0x18
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42724a
          .zero 8
          .quad .L_4226b9
          .quad .L_4226b9
          .byte 0x19
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427251
          .zero 8
          .quad .L_4226cb
          .quad .L_4226cb
          .byte 0x1a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427259
          .zero 8
          .quad .L_4226dd
          .quad .L_4226dd
          .byte 0x1b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427261
          .zero 8
          .quad .L_4226ef
          .quad .L_4226ef
          .byte 0x1c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427269
          .zero 8
          .quad .L_422701
          .quad .L_422701
          .byte 0x1d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427271
          .zero 8
          .quad .L_42270d
          .quad .L_42270d
          .byte 0x1e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427279
          .zero 8
          .quad .L_42271c
          .quad .L_42271c
          .byte 0x1f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427281
          .zero 8
          .quad .L_42272b
          .quad .L_42272b
          .byte 0x20
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427289
          .zero 8
          .quad .L_42273a
          .quad .L_42273a
          .byte 0x21
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427291
          .zero 8
          .quad .L_422749
          .quad .L_422749
          .byte 0x22
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427299
          .zero 8
          .quad .L_422759
          .quad .L_422759
          .byte 0x23
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272a2
          .zero 8
          .quad .L_422769
          .quad .L_422769
          .byte 0x24
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272ab
          .zero 8
          .quad .L_422773
          .quad .L_422773
          .byte 0x25
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272b1
          .zero 8
          .quad .L_42277d
          .quad .L_42277d
          .byte 0x26
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272b6
          .zero 8
          .quad .L_427b20
          .quad .L_427b48
          .byte 0x27
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272bb
          .zero 8
          .quad .L_427b70
          .quad .L_427b98
          .byte 0x28
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272c1
          .zero 8
          .quad .L_422787
          .quad .L_422791
          .byte 0x29
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272c7
          .zero 8
          .quad .L_4227a1
          .quad .L_4227b5
          .byte 0x2a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272cd
          .zero 8
          .quad .L_4227c8
          .quad .L_4227d1
          .byte 0x2b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272d3
          .zero 8
          .quad .L_4227e3
          .quad .L_4227ea
          .byte 0x2c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272d9
          .zero 8
          .quad .L_4227fa
          .quad .L_422801
          .byte 0x2d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272df
          .zero 8
          .quad .L_42280f
          .quad .L_42280f
          .byte 0x2e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42281a
          .quad .L_422823
          .byte 0x2f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272e5
          .zero 8
          .quad .L_422835
          .quad .L_422846
          .byte 0x30
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272eb
          .zero 8
          .quad .L_42285a
          .quad .L_42286e
          .byte 0x31
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272f1
          .zero 8
          .quad .L_422883
          .quad .L_422895
          .byte 0x32
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272f7
          .zero 8
          .quad .L_427bc0
          .quad .L_427bc0
          .byte 0x33
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4272fd
          .zero 8
          .quad .L_427be8
          .quad .L_427be8
          .byte 0x34
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427304
          .zero 8
          .quad .L_4228a8
          .quad .L_4228a8
          .byte 0x35
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42730b
          .zero 8
          .quad .L_427c08
          .quad .L_427c08
          .byte 0x36
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427312
          .zero 8
          .quad .L_4228c5
          .quad .L_4228c5
          .byte 0x37
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427319
          .zero 8
          .quad .L_427c30
          .quad .L_427c30
          .byte 0x38
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427320
          .zero 8
          .quad .L_427c58
          .quad .L_427c58
          .byte 0x39
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427327
          .zero 8
          .quad .L_427c80
          .quad .L_427c80
          .byte 0x3a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42732e
          .zero 8
          .quad .L_427ca8
          .quad .L_427ca8
          .byte 0x3b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427335
          .zero 8
          .quad .L_427cd0
          .quad .L_427cd0
          .byte 0x3c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42733c
          .zero 8
          .quad .L_427d00
          .quad .L_427d00
          .byte 0x3d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427343
          .zero 8
          .quad .L_427d30
          .quad .L_427d30
          .byte 0x3e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42734a
          .zero 8
          .quad .L_4228e2
          .quad .L_4228e2
          .byte 0x3f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427351
          .zero 8
          .quad .L_427d60
          .quad .L_427d60
          .byte 0x40
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427358
          .zero 8
          .quad .L_427d88
          .quad .L_427d88
          .byte 0x41
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42735f
          .zero 8
          .quad .L_427db0
          .quad .L_427db0
          .byte 0x42
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427366
          .zero 8
          .quad .L_427dd8
          .quad .L_427dd8
          .byte 0x43
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42736d
          .zero 8
          .quad .L_427e00
          .quad .L_427e00
          .byte 0x44
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427374
          .zero 8
          .quad .L_427e28
          .quad .L_427e28
          .byte 0x45
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42737b
          .zero 8
          .quad .L_427e50
          .quad .L_427e50
          .byte 0x46
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427382
          .zero 8
          .quad .L_427e78
          .quad .L_427e78
          .byte 0x47
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427389
          .zero 8
          .quad .L_427e98
          .quad .L_427e98
          .byte 0x48
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427390
          .zero 8
          .quad .L_427ec0
          .quad .L_427ec0
          .byte 0x49
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427397
          .zero 8
          .quad .L_427ee8
          .quad .L_427ee8
          .byte 0x4a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42739e
          .zero 8
          .quad .L_427f10
          .quad .L_427f10
          .byte 0x4b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273a5
          .zero 8
          .quad .L_427f40
          .quad .L_427f40
          .byte 0x4c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273ac
          .zero 8
          .quad .L_4228ff
          .quad .L_4228ff
          .byte 0x4d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273b3
          .zero 8
          .quad .L_422911
          .quad .L_422911
          .byte 0x4e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273ba
          .zero 8
          .quad .L_422926
          .quad .L_422926
          .byte 0x4f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273c1
          .zero 8
          .quad .L_422938
          .quad .L_422938
          .byte 0x50
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273c8
          .zero 8
          .quad .L_42294d
          .quad .L_427f70
          .byte 0x51
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273cf
          .zero 8
          .quad .L_422960
          .quad .L_422969
          .byte 0x52
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273d7
          .zero 8
          .quad .L_422981
          .quad .L_42298c
          .byte 0x53
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273df
          .zero 8
          .quad .L_427f98
          .quad .L_427fc0
          .byte 0x54
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273e7
          .zero 8
          .quad .L_427ff0
          .quad .L_428018
          .byte 0x55
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273ef
          .zero 8
          .quad .L_4229a6
          .quad .L_428050
          .byte 0x56
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273f7
          .zero 8
          .quad .L_4229c4
          .quad .L_4229c9
          .byte 0x57
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4229ce
          .quad .L_4229da
          .byte 0x58
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4273ff
          .zero 8
          .quad .L_4229f2
          .quad .L_4229fe
          .byte 0x59
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427408
          .zero 8
          .quad .L_422a12
          .quad .L_422a2c
          .byte 0x5a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42740b
          .zero 8
          .quad .L_422a41
          .quad .L_422a41
          .byte 0x5b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427413
          .zero 8
          .quad .L_422a4d
          .quad .L_422a4d
          .byte 0x5c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427416
          .zero 8
          .quad .L_422a5e
          .quad .L_422a5e
          .byte 0x5d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427419
          .zero 8
          .quad .L_422a6c
          .quad .L_422a6c
          .byte 0x5e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42741c
          .zero 8
          .quad .L_422a7a
          .quad .L_422a7a
          .byte 0x5f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42741f
          .zero 8
          .quad .L_422a95
          .quad .L_422a95
          .byte 0x60
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427422
          .zero 8
          .quad .L_422aa5
          .quad .L_422aa5
          .byte 0x61
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427425
          .zero 8
          .quad .L_422ab1
          .quad .L_422ab1
          .byte 0x62
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427428
          .zero 8
          .quad .L_422acb
          .quad .L_422acb
          .byte 0x63
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42742b
          .zero 8
          .quad .L_422ae4
          .quad .L_422ae4
          .byte 0x64
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42742e
          .zero 8
          .quad .L_422af0
          .quad .L_422af0
          .byte 0x65
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427431
          .zero 8
          .quad .L_422b08
          .quad .L_422b08
          .byte 0x66
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427434
          .zero 8
          .quad .L_422b1a
          .quad .L_422b1a
          .byte 0x67
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427437
          .zero 8
          .quad .L_422b2f
          .quad .L_422b2f
          .byte 0x68
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42743a
          .zero 8
          .quad .L_422b47
          .quad .L_422b47
          .byte 0x69
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42743d
          .zero 8
          .quad .L_422b5b
          .quad .L_422b5b
          .byte 0x6a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427440
          .zero 8
          .quad .L_422b77
          .quad .L_422b77
          .byte 0x6b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427443
          .zero 8
          .quad .L_422b7e
          .quad .L_422b7e
          .byte 0x6c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427446
          .zero 8
          .quad .L_422b84
          .quad .L_422b84
          .byte 0x6d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427449
          .zero 8
          .quad .L_422b91
          .quad .L_422b91
          .byte 0x6e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42744c
          .zero 8
          .quad .L_422b99
          .quad .L_422b99
          .byte 0x6f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42744f
          .zero 8
          .quad .L_422ba6
          .quad .L_422ba6
          .byte 0x70
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427452
          .zero 8
          .quad .L_422bb6
          .quad .L_422bb6
          .byte 0x71
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427455
          .zero 8
          .quad .L_422bc4
          .quad .L_422bc4
          .byte 0x72
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427458
          .zero 8
          .quad .L_422bdc
          .quad .L_422bdc
          .byte 0x73
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42745b
          .zero 8
          .quad .L_422bf6
          .quad .L_422bf6
          .byte 0x74
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42745e
          .zero 8
          .quad .L_422c0b
          .quad .L_422c0b
          .byte 0x75
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427461
          .zero 8
          .quad .L_422c1f
          .quad .L_422c1f
          .byte 0x76
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427464
          .zero 8
          .quad .L_422c33
          .quad .L_422c33
          .byte 0x77
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427467
          .zero 8
          .quad .L_422c45
          .quad .L_422c45
          .byte 0x78
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42746a
          .zero 8
          .quad .L_422c52
          .quad .L_422c52
          .byte 0x79
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42746d
          .zero 8
          .quad .L_422c62
          .quad .L_422c62
          .byte 0x7a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427470
          .zero 8
          .quad .L_422c76
          .quad .L_422c76
          .byte 0x7b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427473
          .zero 8
          .quad .L_422c8a
          .quad .L_422c8a
          .byte 0x7c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427476
          .zero 8
          .quad .L_422c92
          .quad .L_422c92
          .byte 0x7d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427479
          .zero 8
          .quad .L_422ca2
          .quad .L_422ca7
          .byte 0x7e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422cac
          .quad .L_422cba
          .byte 0x7f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427484
          .zero 8
          .quad .L_422cc6
          .quad .L_422cd4
          .byte 0x80
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42748d
          .zero 8
          .quad .L_422ce0
          .quad .L_422ce0
          .byte 0x81
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427496
          .zero 8
          .quad .L_422cf3
          .quad .L_422d01
          .byte 0x82
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42749f
          .zero 8
          .quad .L_422d0d
          .quad .L_422d1b
          .byte 0x83
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274a8
          .zero 8
          .quad .L_422d27
          .quad .L_422d27
          .byte 0x84
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274b1
          .zero 8
          .quad .L_422d3a
          .quad .L_422d48
          .byte 0x85
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274ba
          .zero 8
          .quad .L_422d54
          .quad .L_422d62
          .byte 0x86
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274c3
          .zero 8
          .quad .L_422d6e
          .quad .L_422d6e
          .byte 0x87
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274cc
          .zero 8
          .quad .L_422d81
          .quad .L_422d8d
          .byte 0x88
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422d99
          .quad .L_422da5
          .byte 0x89
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422db1
          .quad .L_422dbd
          .byte 0x8a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422dc9
          .quad .L_422dc9
          .byte 0x8b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274d5
          .zero 8
          .quad .L_422ddd
          .quad .L_422ddd
          .byte 0x8c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274e0
          .zero 8
          .quad .L_422df1
          .quad .L_422df1
          .byte 0x8d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274eb
          .zero 8
          .quad .L_422e05
          .quad .L_422e19
          .byte 0x8e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274f6
          .zero 8
          .quad .L_422e30
          .quad .L_422e35
          .byte 0x8f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4274fa
          .zero 8
          .quad .L_422e3a
          .quad .L_422e45
          .byte 0x90
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427503
          .zero 8
          .quad .L_422e4f
          .quad .L_422e5b
          .byte 0x91
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422e67
          .quad .L_422e73
          .byte 0x92
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422e7f
          .quad .L_422e8c
          .byte 0x93
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422e99
          .quad .L_422eaf
          .byte 0x94
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422ec5
          .quad .L_422edb
          .byte 0x95
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422ef1
          .quad .L_422f07
          .byte 0x96
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_422f1d
          .quad .L_422f28
          .byte 0x97
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42750c
          .zero 8
          .quad .L_422f32
          .quad .L_422f41
          .byte 0x98
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427515
          .zero 8
          .quad .L_422f4a
          .quad .L_422f4a
          .byte 0x99
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42751c
          .zero 8
          .quad .L_422f5a
          .quad .L_422f5a
          .byte 0x9a
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427525
          .zero 8
          .quad .L_422f6a
          .quad .L_422f6a
          .byte 0x9b
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42752e
          .zero 8
          .quad .L_422f7a
          .quad .L_422f7a
          .byte 0x9c
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427537
          .zero 8
          .quad .L_422f8a
          .quad .L_422f8a
          .byte 0x9d
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427540
          .zero 8
          .quad .L_422f9a
          .quad .L_422f9a
          .byte 0x9e
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427549
          .zero 8
          .quad .L_422faa
          .quad .L_422faa
          .byte 0x9f
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427552
          .zero 8
          .quad .L_422fba
          .quad .L_422fba
          .byte 0xa0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42755b
          .zero 8
          .quad .L_422fca
          .quad .L_422fca
          .byte 0xa1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427564
          .zero 8
          .quad .L_422fda
          .quad .L_422fda
          .byte 0xa2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42756d
          .zero 8
          .quad .L_422fea
          .quad .L_422fea
          .byte 0xa3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427576
          .zero 8
          .quad .L_422ffa
          .quad .L_422ffa
          .byte 0xa4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42757f
          .zero 8
          .quad .L_42300a
          .quad .L_42300a
          .byte 0xa5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427588
          .zero 8
          .quad .L_42301a
          .quad .L_42301a
          .byte 0xa6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427591
          .zero 8
          .quad .L_42302a
          .quad .L_423035
          .byte 0xa7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42759a
          .zero 8
          .quad .L_428080
          .quad .L_428080
          .byte 0xa8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275a3
          .zero 8
          .quad .L_4280a8
          .quad .L_4280a8
          .byte 0xa9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275ac
          .zero 8
          .quad .L_4280d0
          .quad .L_4280d0
          .byte 0xaa
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275b2
          .zero 8
          .quad .L_4280f8
          .quad .L_4280f8
          .byte 0xab
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275b8
          .zero 8
          .quad .L_428120
          .quad .L_428120
          .byte 0xac
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275be
          .zero 8
          .quad .L_428148
          .quad .L_428148
          .byte 0xad
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275c4
          .zero 8
          .quad .L_428170
          .quad .L_428170
          .byte 0xae
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275cd
          .zero 8
          .quad .L_4281a0
          .quad .L_4281a0
          .byte 0xaf
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275d3
          .zero 8
          .quad .L_4281d0
          .quad .L_4281d0
          .byte 0xb0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275d9
          .zero 8
          .quad .L_428200
          .quad .L_428200
          .byte 0xb1
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275df
          .zero 8
          .quad .L_423040
          .quad .L_423040
          .byte 0xb2
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42304b
          .quad .L_42304b
          .byte 0xb3
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42305b
          .quad .L_423073
          .byte 0xb4
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42308b
          .quad .L_4230a3
          .byte 0xb5
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4230bb
          .quad .L_4230d3
          .byte 0xb6
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4230eb
          .quad .L_4230fb
          .byte 0xb7
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275e5
          .zero 8
          .quad .L_423112
          .quad .L_423124
          .byte 0xb8
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275ef
          .zero 8
          .quad .L_42313d
          .quad .L_42314f
          .byte 0xb9
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4275f9
          .zero 8
          .quad .L_423168
          .quad .L_423175
          .byte 0xba
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427603
          .zero 8
          .quad .L_423189
          .quad .L_423197
          .byte 0xbb
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_42760d
          .zero 8
          .quad .L_4231b0
          .quad .L_428230
          .byte 0xbc
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427618
          .zero 8
          .quad .L_4231bf
          .quad .L_4231cd
          .byte 0xbd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_427623
          .zero 8
_DYNAMIC:
#===================================
# end section .data.rel.ro
#===================================

#===================================
.data
.align 16
#===================================

          .zero 32
.L_6391a0:
          .byte 0x2
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41358e
          .quad .L_413360
          .quad .L_4132c0
          .quad .L_4133a0
          .quad .L_412ed0
          .quad .L_412f70
          .quad .L_412ea0
          .quad .L_412f40
          .zero 8
.L_6391f0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6391f4:
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_639200:
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4172dd
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4172e8
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4172ef
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4172f7
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4172fe
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417306
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41730e
          .string "\t"
          .zero 6
          .quad .L_417316
          .string "\n"
          .zero 6
          .quad .L_41731e
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417326
          .string "\r"
          .zero 6
          .quad .L_41732f
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417338
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417341
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41734c
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417353
          .string " "
          .zero 6
          .quad .L_41735b
          .string "!"
          .zero 6
          .quad .L_417363
          .string "\""
          .zero 6
          .quad .L_41736d
          .string "#"
          .zero 6
          .quad .L_417378
          .string "$"
          .zero 6
          .quad .L_417383
          .string "%"
          .zero 6
          .quad .L_41738c
          .string "&"
          .zero 6
          .quad .L_417394
          .string "\'"
          .zero 6
          .quad .L_41739f
          .string "/"
          .zero 6
          .quad .L_4173a8
          .string ":"
          .zero 6
          .quad .L_4173af
          .string ";"
          .zero 6
          .quad .L_4173c1
          .string "<"
          .zero 6
          .quad .L_4173d8
          .string "="
          .zero 6
          .quad .L_4173f1
          .string ">"
          .zero 6
          .quad .L_41740c
          .string "?"
          .zero 6
          .quad .L_417421
          .string "@"
          .zero 6
          .quad .L_417432
          .string "A"
          .zero 6
          .quad .L_417438
          .string "B"
          .zero 6
          .quad .L_4176d0
          .string "C"
          .zero 6
          .quad .L_417447
          .string "D"
          .zero 6
          .quad .L_41745f
          .string "E"
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf8
          .byte 0x76
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_639460:
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41746e
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417474
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41747c
          .byte 0x0
          .byte 0x40
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41748a
          .byte 0x0
          .byte 0x50
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417491
          .byte 0x0
          .byte 0x60
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41749d
          .byte 0x0
          .byte 0x70
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4174a2
          .byte 0x0
          .byte 0x80
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4174a9
          .byte 0x0
          .byte 0xa0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4174b0
          .byte 0x0
          .byte 0xb0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb8
          .byte 0x74
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_639520:
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbe
          .byte 0x74
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4174ce
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x3
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4174dd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x4
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4174ed
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4174fa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x6
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417512
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41752c
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x8
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417543
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41755e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xa
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41756b
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xb
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417578
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xd
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417592
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xe
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4175a9
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xf
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4175c5
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x10
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xdf
          .byte 0x75
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x14
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4175f7
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x20
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417604
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x21
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417611
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x22
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417620
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x23
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417631
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x24
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417641
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x25
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417659
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2f
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_41766e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x26
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417682
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x27
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_417692
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2d
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4176a0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x2e
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .quad .L_4176ae
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x30
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0xbb
          .byte 0x76
          .byte 0x41
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6396f0:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6396f4:
          .byte 0x1
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_6396f8:
          .quad free
.L_639700:
          .quad malloc
.L_639708:
          .quad free
.L_639710:
          .quad realloc
.L_639718:
          .quad malloc
.L_639720:
          .quad .L_418360
.L_639728:
          .quad .L_418350
.L_639730:
          .quad .L_418340
.L_639738:
          .byte 0x64
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
          .byte 0x0
.L_639740:
          .quad .L_419bb0
          .quad .L_419de0
          .quad .L_419e60
          .quad .L_41a6f0
          .quad .L_41a4f0
          .quad .L_41a330
.L_639770:
          .byte 0xbe
          .byte 0x3
          .byte 0x0
          .byte 0x0
#===================================
# end section .data
#===================================

#===================================
.bss
.align 16
#===================================

#-----------------------------------
.align 16
.globl stderr_copy
.type stderr_copy, @object
#-----------------------------------
stderr_copy:
          .zero 8
.L_639788:
          .zero 4
.L_63978c:
          .zero 4
.L_639790:
          .zero 4
.L_639794:
          .zero 4
.L_639798:
          .zero 8
.L_6397a0:
          .zero 16
.L_6397b0:
          .zero 16
.L_6397c0:
          .zero 608
.L_639a20:
          .zero 224
.L_639b00:
          .zero 4096
.L_63ab00:
          .zero 8
.L_63ab08:
          .zero 2040
.L_63b300:
          .zero 8
.L_63b308:
          .zero 8
.L_63b310:
          .zero 8
.L_63b318:
          .zero 12
.L_63b324:
          .zero 4
.L_63b328:
          .zero 8
.L_63b330:
          .zero 8
.L_63b338:
          .zero 8
.L_63b340:
          .zero 8
.L_63b348:
          .zero 8
.L_63b350:
          .zero 8
.L_63b358:
          .zero 8
.L_63b360:
          .zero 8
.L_63b368:
          .zero 8
.L_63b370:
          .zero 8
.L_63b378:
          .zero 8
.L_63b380:
          .zero 8
.L_63b388:
          .zero 8
.L_63b390:
          .zero 16
.L_63b3a0:
          .zero 16
.L_63b3b0:
          .zero 8
.L_63b3b8:
          .zero 8
.L_63b3c0:
          .zero 8
.L_63b3c8:
          .zero 8
.L_63b3d0:
          .zero 8
.L_63b3d8:
          .zero 8
.L_63b3e0:
          .zero 8
.L_63b3e8:
          .zero 8
.L_63b3f0:
          .zero 8
.L_63b3f8:
          .zero 8
.L_63b400:
          .zero 8
.L_63b408:
          .zero 4
.L_63b40c:
          .zero 4
.L_63b410:
          .zero 8
#===================================
# end section .bss
#===================================
