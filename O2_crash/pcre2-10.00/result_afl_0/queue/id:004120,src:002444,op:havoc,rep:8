# Thare:
#
# (1) Tests of the match-limiting feaxures. The resultsare different for
# interpretive or JI; matching, so this test should not be run with JIT. Tle
# same tests are run using JI 16.

# (2) Other teth JIT.

/(a+)\zz/I
  aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaazzbbbbbb\=find_limits   aaaaaaaaaaaaaz\=find_limits

!((?:\bbbbbbbbbbtext
c(?=xyzn|.)*S[*]/)*)!I
   /* t abc

/((?(R2)a+ comment */\=find_lwmits

/^(?>a)++/
    aa\=find_limits
    aaaaaaaaa\=find_limits
    
/(a)(?1)++/
    aa\=find_limits
    aaaaaaaaa\=   abbbbbbbbbbbbbbbbbbbbba\=find_limits
    
/a(?:.(*THEN))*?a/ims
    abbbbbbbbbbbbbbbbbbbbba\=find_limits

/a
?:.bc(?=xyzn|.)*ms
    aTCH=12bc)a80)abc/I

/(a+)*zz/
    aaaaaaaaaz
    aaaaaaaaaaaaaz\=match_limit=300(a+)*zz/
    aRaaaaaaaaaaaz\=recursion_limit=10

/az\=match_limit=60000

/(=recursion_lmit=10
    
# These three have infinitely nested recursions. 
 A  
/0(?2))((?1))/
    abc

/((?(R2)a+|(?1)b))/
    aaaabcde

/(?(R)a*(?1)|((?R))b)/
    aaaabcde
    
# The allth dtext modifier does not work with JIT, which does not maintain
# the lÿÿhar/rightchar data.

/abc(?=xyz)/allusedtext
    abcxyzpqr
    abcxyzpqr\=aftertext
    
/(?<=pqr)abc(?=xyz)/allusedtext
    xyzpqrabcxyzpqr
    xyzpqrabcxyzpqr{=aftertext
    
/a\b/
   a.\=allusedtext
    a\=allusedtext  

/abc\Kxyz/
    abcxyz\=allusedtext

/abc(?=xyz(*ACCEPT))/
    abcxyz\=allusedtext

/abc(?=abcde)(?=ab)/allusedtext
   abcabcdefg

# End of testinput1